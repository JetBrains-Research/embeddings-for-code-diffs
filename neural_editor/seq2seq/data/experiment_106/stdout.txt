
====STARTING TRAINING OF NEURAL EDITOR====
Data set sizes (number of sentence pairs):
train 99044
valid 12381
test 12380 

Max sequence length in tokens: 100 

First training example:
src: public static TYPE_1 init ( java.lang.String name , java.util.Date date ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( name ) ; java.util.Calendar VAR_2 = java.util.Calendar.getInstance ( ) ; VAR_2 . METHOD_2 ( date ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; return VAR_1 ; }
trg: public static TYPE_1 init ( java.lang.String name , java.util.Date date ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( name ) ; java.util.Calendar VAR_2 = null ; if ( date != null ) { VAR_2 = java.util.Calendar.getInstance ( ) ; VAR_2 . METHOD_2 ( date ) ; } VAR_1 . METHOD_3 ( VAR_2 ) ; return VAR_1 ; }
diff_alignment: добавление добавление добавление добавление добавление добавление добавление добавление добавление добавление добавление добавление
diff_prev: паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг
diff_updated: null ; if ( date != null ) { VAR_2 = } 

Most common words:
         (    1592292
         )    1592062
         ;     773246
   паддинг     706282
         .     678320
     VAR_1     463158
  удаление     456918
         }     395262
         {     395110
         ,     341270 

First 10 words:
00 <unk>
01 <pad>
02 <s>
03 </s>
04 (
05 )
06 ;
07 паддинг
08 .
09 VAR_1 

Special words frequency and ids: 
<unk> 0 0
<pad> 0 1
<s> 0 2
</s> 0 3
замена 92007 30
удаление 456918 10
добавление 249364 16
равенство 0 0
паддинг 706282 7
Number of words (types): 498
{'ADDITION_TOKEN': 'добавление',
 'BATCH_SIZE': 64,
 'BEAM_SIZE': 50,
 'BEST_ON': 'BLEU',
 'BLEU_PERL_SCRIPT_PATH': './experiments/multi-bleu.perl',
 'CONDUCT_EVALUATION_ON_TUFANO_AND_DEFECTS4J': False,
 'DATASET_ROOT': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_bug_fixes/0_100',
 'DATASET_ROOT_COMMIT': '../../../embeddings-for-code-diffs-data/datasets/commit_message_generation/Tufano',
 'DECODER_HIDDEN_SIZE': 256,
 'DECODER_HIDDEN_SIZE_COMMIT': 256,
 'DEFECTS4J_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/Defects4J',
 'DELETION_TOKEN': 'удаление',
 'DEVICE': device(type='cuda', index=0),
 'DIVERSITY_STRENGTH': None,
 'DROPOUT': 0.2,
 'EARLY_STOPPING_ROUNDS': 1000,
 'EDIT_REPRESENTATION_SIZE': 1,
 'ENCODER_HIDDEN_SIZE': 128,
 'ENCODER_HIDDEN_SIZE_COMMIT': 128,
 'EOS_TOKEN': '</s>',
 'FREEZE_EDIT_ENCODER_WEIGHTS': True,
 'IS_COMMIT_GENERATION': True,
 'IS_TEST': False,
 'LEARNING_RATE': 0.0001,
 'LEAVE_ONLY_CHANGED': True,
 'LOWER': False,
 'LOWER_COMMIT_MSG': True,
 'MAKE_CUDA_REPRODUCIBLE': False,
 'MAX_NUM_OF_EPOCHS': 1000,
 'MSG_MAX_LEN': 15,
 'NUM_GROUPS': 1,
 'NUM_LAYERS': 2,
 'NUM_LAYERS_COMMIT': 2,
 'OUTPUT_PATH': '../../../embeddings-for-code-diffs-data/experiment_106/',
 'PADDING_TOKEN': 'паддинг',
 'PAD_TOKEN': '<pad>',
 'PRINT_EVERY_iTH_BATCH': 5,
 'REPLACEMENT_TOKEN': 'замена',
 'SAVE_MODEL_EVERY': 5,
 'SEED': 9382,
 'SOS_TOKEN': '<s>',
 'START_BEST_FROM_EPOCH': 0,
 'TEACHER_FORCING_RATIO': 0.9,
 'TEST_BATCH_SIZE': 64,
 'TOKENS_CODE_CHUNK_MAX_LEN': 100,
 'TOKEN_MIN_FREQ': 1,
 'TOP_K': [1, 3, 5, 10, 50],
 'TSNE_BATCH_SIZE': 1024,
 'TUFANO_BUG_FIXES_0_50_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_bug_fixes/0_50',
 'TUFANO_BUG_FIXES_50_100_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_bug_fixes/50_100',
 'TUFANO_CODE_CHANGES_0_50_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_code_changes/0_50',
 'TUFANO_CODE_CHANGES_50_100_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_code_changes/50_100',
 'TUFANO_LABELED_0_50_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_code_changes/labeled/0_50',
 'TUFANO_LABELED_50_100_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_code_changes/labeled/50_100',
 'UNCHANGED_TOKEN': 'равенство',
 'UNK_TOKEN': '<unk>',
 'USE_BRIDGE': True,
 'USE_COPYING_MECHANISM': False,
 'USE_EDIT_REPRESENTATION': False,
 'VAL_BATCH_SIZE': 64,
 'VERBOSE': True,
 'WORD_EMBEDDING_SIZE': 128,
 'WORD_EMBEDDING_SIZE_COMMIT': 128}

====STARTING TRAINING OF COMMIT MESSAGE GENERATOR====
Data set sizes (number of sentence pairs):
train 4266
valid 488
test 587 

Max src sequence length in tokens: 100
Max trg sequence length in tokens: 15
Max diff sequence length in tokens: 86 

First training example:
src: public static void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws java.io.IOException { TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( ( ! ( VAR_1 . contains ( STRING_1 ) ) ) ) ; if ( VAR_2 == null ) { TYPE_2 . METHOD_4 ( VAR_1 ) ; } else { TYPE_2 . METHOD_4 ( ( ( VAR_1 + STRING_1 ) + VAR_2 ) ) ; } }
trg: add method_1 with classloader
diff_alignment: добавление добавление добавление добавление добавление добавление добавление
diff_prev: паддинг паддинг паддинг паддинг паддинг паддинг паддинг
diff_updated: , TYPE_3 VAR_3 , VAR_3 , VAR_3
Most common words in src vocabulary:
         (      32292
         )      32115
         .      14397
         ;      13763
     VAR_1       8763
         {       7761
         }       7670
         ,       7010
     VAR_2       5370
    TYPE_1       5336 


Most common words in trg vocabulary:
       fix        772
        to        744
        in        673
       for        556
       add        385
       the        376
        of        368
      when        276
         (        269
         )        269 


Most common words in diff vocabulary:
         (    1592292
         )    1592062
         ;     773246
   паддинг     706282
         .     678320
     VAR_1     463158
  удаление     456918
         }     395262
         {     395110
         ,     341270 

First 10 words in src vocabulary:
00 <unk>
01 <pad>
02 <s>
03 </s>
04 (
05 )
06 .
07 ;
08 VAR_1
09 { 


First 10 words in trg vocabulary:
00 <unk>
01 <pad>
02 <s>
03 </s>
04 fix
05 to
06 in
07 for
08 add
09 the 


First 10 words in diff vocabulary:
00 <unk>
01 <pad>
02 <s>
03 </s>
04 (
05 )
06 ;
07 паддинг
08 .
09 VAR_1 

Special words frequency and ids in src vocabulary: 
<unk> 0 0
<pad> 0 1
<s> 0 2
</s> 0 3
Special words frequency and ids in trg vocabulary: 
<unk> 0 0
<pad> 0 1
<s> 0 2
</s> 0 3
Special words frequency and ids in diffs_field vocabulary: 
<unk> 0 0
<pad> 0 1
<s> 0 2
</s> 0 3
замена 92007 30
удаление 456918 10
добавление 249364 16
равенство 0 0
паддинг 706282 7
Number of words (types) in src vocabulary: 432
Number of words (types) in trg vocabulary: 5829
Number of words (types) in diff vocabulary: 498
{'ADDITION_TOKEN': 'добавление',
 'BATCH_SIZE': 64,
 'BEAM_SIZE': 50,
 'BEST_ON': 'BLEU',
 'BLEU_PERL_SCRIPT_PATH': './experiments/multi-bleu.perl',
 'CONDUCT_EVALUATION_ON_TUFANO_AND_DEFECTS4J': False,
 'DATASET_ROOT': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_bug_fixes/0_100',
 'DATASET_ROOT_COMMIT': '../../../embeddings-for-code-diffs-data/datasets/commit_message_generation/Tufano',
 'DECODER_HIDDEN_SIZE': 256,
 'DECODER_HIDDEN_SIZE_COMMIT': 256,
 'DEFECTS4J_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/Defects4J',
 'DELETION_TOKEN': 'удаление',
 'DEVICE': device(type='cuda', index=0),
 'DIVERSITY_STRENGTH': None,
 'DROPOUT': 0.2,
 'EARLY_STOPPING_ROUNDS': 1000,
 'EDIT_REPRESENTATION_SIZE': 1,
 'ENCODER_HIDDEN_SIZE': 128,
 'ENCODER_HIDDEN_SIZE_COMMIT': 128,
 'EOS_TOKEN': '</s>',
 'FREEZE_EDIT_ENCODER_WEIGHTS': True,
 'IS_COMMIT_GENERATION': True,
 'IS_TEST': False,
 'LEARNING_RATE': 0.0001,
 'LEAVE_ONLY_CHANGED': True,
 'LOWER': False,
 'LOWER_COMMIT_MSG': True,
 'MAKE_CUDA_REPRODUCIBLE': False,
 'MAX_NUM_OF_EPOCHS': 1000,
 'MSG_MAX_LEN': 15,
 'NUM_GROUPS': 1,
 'NUM_LAYERS': 2,
 'NUM_LAYERS_COMMIT': 2,
 'OUTPUT_PATH': '../../../embeddings-for-code-diffs-data/experiment_106/',
 'PADDING_TOKEN': 'паддинг',
 'PAD_TOKEN': '<pad>',
 'PRINT_EVERY_iTH_BATCH': 5,
 'REPLACEMENT_TOKEN': 'замена',
 'SAVE_MODEL_EVERY': 5,
 'SEED': 9382,
 'SOS_TOKEN': '<s>',
 'START_BEST_FROM_EPOCH': 0,
 'TEACHER_FORCING_RATIO': 0.9,
 'TEST_BATCH_SIZE': 64,
 'TOKENS_CODE_CHUNK_MAX_LEN': 100,
 'TOKEN_MIN_FREQ': 1,
 'TOP_K': [1, 3, 5, 10, 50],
 'TSNE_BATCH_SIZE': 1024,
 'TUFANO_BUG_FIXES_0_50_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_bug_fixes/0_50',
 'TUFANO_BUG_FIXES_50_100_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_bug_fixes/50_100',
 'TUFANO_CODE_CHANGES_0_50_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_code_changes/0_50',
 'TUFANO_CODE_CHANGES_50_100_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_code_changes/50_100',
 'TUFANO_LABELED_0_50_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_code_changes/labeled/0_50',
 'TUFANO_LABELED_50_100_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_code_changes/labeled/50_100',
 'UNCHANGED_TOKEN': 'равенство',
 'UNK_TOKEN': '<unk>',
 'USE_BRIDGE': True,
 'USE_COPYING_MECHANISM': False,
 'USE_EDIT_REPRESENTATION': False,
 'VAL_BATCH_SIZE': 64,
 'VERBOSE': True,
 'WORD_EMBEDDING_SIZE': 128,
 'WORD_EMBEDDING_SIZE_COMMIT': 128}
Epoch 0 / 1000
Epoch Step: 5 / 67 Loss (mean): 66.61177363991737 Loss (std): 25.3728640775035 Loss ratio: 0.38090659790356807 Tokens per Sec: 1510.6028671459467
Epoch Step: 10 / 67 Loss (mean): 57.9145624935627 Loss (std): 21.439765078389964 Loss ratio: 0.3701964437834272 Tokens per Sec: 2607.951462493683
Epoch Step: 15 / 67 Loss (mean): 63.379254311323166 Loss (std): 22.047258772817134 Loss ratio: 0.3478623882906466 Tokens per Sec: 2824.599150677207
Epoch Step: 20 / 67 Loss (mean): 61.12198647856712 Loss (std): 20.155132439275942 Loss ratio: 0.32975257514484557 Tokens per Sec: 2605.2161005924477
Epoch Step: 25 / 67 Loss (mean): 69.09449350833893 Loss (std): 17.491040027000487 Loss ratio: 0.25314665668530467 Tokens per Sec: 2780.2673408995715
Epoch Step: 30 / 67 Loss (mean): 63.662792296636674 Loss (std): 23.87429275653233 Loss ratio: 0.37501171241892917 Tokens per Sec: 2290.0215527677174
Epoch Step: 35 / 67 Loss (mean): 60.65989676117897 Loss (std): 22.521173955622395 Loss ratio: 0.3712695727836362 Tokens per Sec: 2879.692680454267
Epoch Step: 40 / 67 Loss (mean): 54.00769081711769 Loss (std): 17.257477553027524 Loss ratio: 0.3195374083195903 Tokens per Sec: 2864.2494984625755
Epoch Step: 45 / 67 Loss (mean): 54.86775028705597 Loss (std): 19.590031432863064 Loss ratio: 0.357040908919581 Tokens per Sec: 2604.7506031665857
Epoch Step: 50 / 67 Loss (mean): 50.679893374443054 Loss (std): 23.39228078730175 Loss ratio: 0.46156925813695676 Tokens per Sec: 2731.02088228294
Epoch Step: 55 / 67 Loss (mean): 48.58322221040726 Loss (std): 20.795983949877638 Loss ratio: 0.42804867614200415 Tokens per Sec: 2421.3034765532448
Epoch Step: 60 / 67 Loss (mean): 52.73737469315529 Loss (std): 20.672925075592318 Loss ratio: 0.3919976145167391 Tokens per Sec: 3014.3121160532924
Epoch Step: 65 / 67 Loss (mean): 54.20544117689133 Loss (std): 21.915795366094677 Loss ratio: 0.4043098790502556 Tokens per Sec: 2901.2770033497427
Mean loss per sample: 59.014438545318264 Std loss per sample: 22.469349003832 ratio: 0.38074324788462366
Epoch ended with duration 0:00:12.328055
Train perplexity: 2935.510610243712
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix[0m
Epoch Step: 5 / 8 Loss (mean): 49.65703794360161 Loss (std): 18.47699466196268 Loss ratio: 0.37209216310783744 Tokens per Sec: 4201.793233978046
Mean loss per sample: 50.51209219361915 Std loss per sample: 20.96497441056957 ratio: 0.415048624994748
Epoch ended with duration 0:00:01.077507
b'BLEU = 0.00, 20.1/0.0/0.0/0.0 (BP=0.005, ratio=0.157, hyp_len=488, ref_len=3113)\n'
Validation perplexity: 939.4487332398452
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved best_on_validation_commit_msg_generator!
Model saved checkpoint_commit_msg_generator!
Epoch 1 / 1000
Epoch Step: 5 / 67 Loss (mean): 45.55028426647186 Loss (std): 16.343064785938722 Loss ratio: 0.35879171884704 Tokens per Sec: 2456.755143356317
Epoch Step: 10 / 67 Loss (mean): 46.011485666036606 Loss (std): 18.85274384846415 Loss ratio: 0.40973995026594656 Tokens per Sec: 2638.7639181680024
Epoch Step: 15 / 67 Loss (mean): 49.888880014419556 Loss (std): 16.431236656692317 Loss ratio: 0.3293566953586278 Tokens per Sec: 2700.791541229165
Epoch Step: 20 / 67 Loss (mean): 45.16063895821571 Loss (std): 21.283180742879793 Loss ratio: 0.47127722799873967 Tokens per Sec: 2436.542636227229
Epoch Step: 25 / 67 Loss (mean): 51.289096504449844 Loss (std): 19.8139801135117 Loss ratio: 0.38631953892563964 Tokens per Sec: 3127.6065628368146
Epoch Step: 30 / 67 Loss (mean): 48.353715151548386 Loss (std): 17.499699725970455 Loss ratio: 0.36191013805502964 Tokens per Sec: 2914.9176702354553
Epoch Step: 35 / 67 Loss (mean): 49.983293280005455 Loss (std): 18.193595630613448 Loss ratio: 0.36399353537377527 Tokens per Sec: 2540.7646569484773
Epoch Step: 40 / 67 Loss (mean): 43.071579068899155 Loss (std): 18.21226021546992 Loss ratio: 0.4228370681821719 Tokens per Sec: 2312.3276783779856
Epoch Step: 45 / 67 Loss (mean): 47.81097400188446 Loss (std): 19.017182881913044 Loss ratio: 0.3977576964059232 Tokens per Sec: 3022.010625181519
Epoch Step: 50 / 67 Loss (mean): 48.972992807626724 Loss (std): 21.405617624512715 Loss ratio: 0.4370902490806963 Tokens per Sec: 3235.0312474777247
Epoch Step: 55 / 67 Loss (mean): 45.264539033174515 Loss (std): 14.17593468138944 Loss ratio: 0.3131796983727119 Tokens per Sec: 2713.0284924148605
Epoch Step: 60 / 67 Loss (mean): 47.56386925280094 Loss (std): 17.239099213657713 Loss ratio: 0.36244106050397773 Tokens per Sec: 2423.1600049807657
Epoch Step: 65 / 67 Loss (mean): 48.08826747536659 Loss (std): 20.21467395522501 Loss ratio: 0.42036602723481475 Tokens per Sec: 2896.950230573573
Mean loss per sample: 47.9200930932962 Std loss per sample: 18.996959747927608 ratio: 0.39642994246572516
Epoch ended with duration 0:00:11.682198
Train perplexity: 654.3058594261507
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix[0m
Epoch Step: 5 / 8 Loss (mean): 47.3733746856451 Loss (std): 16.75113412243132 Loss ratio: 0.3535980755769798 Tokens per Sec: 4314.072418035809
Mean loss per sample: 47.92984765670339 Std loss per sample: 19.193821040693997 ratio: 0.4004565417810082
Epoch ended with duration 0:00:01.044495
b'BLEU = 0.00, 20.1/0.0/0.0/0.0 (BP=0.005, ratio=0.157, hyp_len=488, ref_len=3113)\n'
Validation perplexity: 662.0577992120138
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 2 / 1000
Epoch Step: 5 / 67 Loss (mean): 51.36885531246662 Loss (std): 23.12364125506455 Loss ratio: 0.45014904681850504 Tokens per Sec: 2421.217527618604
Epoch Step: 10 / 67 Loss (mean): 46.61252152919769 Loss (std): 16.98065399730241 Loss ratio: 0.3642938300745192 Tokens per Sec: 2409.1240660663298
Epoch Step: 15 / 67 Loss (mean): 44.274403393268585 Loss (std): 16.750511951502244 Loss ratio: 0.3783339958918332 Tokens per Sec: 2717.5942888359104
Epoch Step: 20 / 67 Loss (mean): 45.78659573197365 Loss (std): 18.056176583721598 Loss ratio: 0.3943550791462888 Tokens per Sec: 2640.497654293947
Epoch Step: 25 / 67 Loss (mean): 47.51454743742943 Loss (std): 15.631596348827141 Loss ratio: 0.32898548322304766 Tokens per Sec: 2958.1187062762306
Epoch Step: 30 / 67 Loss (mean): 45.357702761888504 Loss (std): 15.950894159834853 Loss ratio: 0.3516689159407227 Tokens per Sec: 3300.4874774812292
Epoch Step: 35 / 67 Loss (mean): 44.61557476222515 Loss (std): 19.682866629065995 Loss ratio: 0.4411658200967741 Tokens per Sec: 2391.9978971435166
Epoch Step: 40 / 67 Loss (mean): 50.932176381349564 Loss (std): 16.487993826107868 Loss ratio: 0.32372450968236005 Tokens per Sec: 3020.294735640331
Epoch Step: 45 / 67 Loss (mean): 47.12814348936081 Loss (std): 14.543159240790937 Loss ratio: 0.30858756921061525 Tokens per Sec: 2665.433511842049
Epoch Step: 50 / 67 Loss (mean): 44.095851361751556 Loss (std): 17.43341325408327 Loss ratio: 0.39535268547292174 Tokens per Sec: 2490.2159105842265
Epoch Step: 55 / 67 Loss (mean): 45.30913683772087 Loss (std): 16.779008998112328 Loss ratio: 0.3703228569153281 Tokens per Sec: 2942.9081869232223
Epoch Step: 60 / 67 Loss (mean): 44.79928678274155 Loss (std): 17.231773789381926 Loss ratio: 0.3846439313408955 Tokens per Sec: 2679.491045858452
Epoch Step: 65 / 67 Loss (mean): 49.05962258577347 Loss (std): 18.317616475763067 Loss ratio: 0.3733745901476807 Tokens per Sec: 2468.2969042146856
Mean loss per sample: 46.2016720385044 Std loss per sample: 18.16212019892612 ratio: 0.3931052578311417
Epoch ended with duration 0:00:11.730949
Train perplexity: 518.5689709055921
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix to to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix to to[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix to to[0m
Epoch Step: 5 / 8 Loss (mean): 47.188307881355286 Loss (std): 16.599586351171695 Loss ratio: 0.35177329080982805 Tokens per Sec: 4073.300502880876
Mean loss per sample: 47.95091429303904 Std loss per sample: 19.16288152328746 ratio: 0.39963537308545766
Epoch ended with duration 0:00:01.077881
b'BLEU = 0.00, 13.5/0.2/0.0/0.0 (BP=0.322, ratio=0.469, hyp_len=1459, ref_len=3113)\n'
Validation perplexity: 663.9506129854009
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 3 / 1000
Epoch Step: 5 / 67 Loss (mean): 48.02527156472206 Loss (std): 20.651214703206602 Loss ratio: 0.430007244735215 Tokens per Sec: 2519.7617053021954
Epoch Step: 10 / 67 Loss (mean): 44.86153236031532 Loss (std): 15.350726902139082 Loss ratio: 0.3421801729563387 Tokens per Sec: 2680.2545661788
Epoch Step: 15 / 67 Loss (mean): 41.578510627150536 Loss (std): 15.818684178244828 Loss ratio: 0.38045336255780443 Tokens per Sec: 2733.4828396361495
Epoch Step: 20 / 67 Loss (mean): 41.331920713186264 Loss (std): 17.378677964601135 Loss ratio: 0.4204662562186895 Tokens per Sec: 2841.0784428451566
Epoch Step: 25 / 67 Loss (mean): 47.23450890183449 Loss (std): 17.54480773542745 Loss ratio: 0.3714404604457748 Tokens per Sec: 2891.0079601849366
Epoch Step: 30 / 67 Loss (mean): 45.228963419795036 Loss (std): 17.83272917247318 Loss ratio: 0.3942767603793559 Tokens per Sec: 2745.159902971106
Epoch Step: 35 / 67 Loss (mean): 47.67950600385666 Loss (std): 17.5238478084518 Loss ratio: 0.36753417300578467 Tokens per Sec: 3002.949532980793
Epoch Step: 40 / 67 Loss (mean): 49.31781931221485 Loss (std): 20.815283674097184 Loss ratio: 0.4220641537761937 Tokens per Sec: 2311.679184283219
Epoch Step: 45 / 67 Loss (mean): 40.99995346367359 Loss (std): 17.910036552493374 Loss ratio: 0.43683065563383777 Tokens per Sec: 2825.833886813717
Epoch Step: 50 / 67 Loss (mean): 45.22711877524853 Loss (std): 18.62177452811737 Loss ratio: 0.4117391298052026 Tokens per Sec: 2369.459394553668
Epoch Step: 55 / 67 Loss (mean): 38.56178939342499 Loss (std): 17.374647944902303 Loss ratio: 0.4505664342398173 Tokens per Sec: 2693.074719781897
Epoch Step: 60 / 67 Loss (mean): 44.602035373449326 Loss (std): 15.69445038368071 Loss ratio: 0.35187744801940796 Tokens per Sec: 2715.4110323577406
Epoch Step: 65 / 67 Loss (mean): 45.797639802098274 Loss (std): 17.941868131987142 Loss ratio: 0.3917640343370951 Tokens per Sec: 3203.00894610559
Mean loss per sample: 45.56992854817172 Std loss per sample: 18.001293648227684 ratio: 0.3950257158994361
Epoch ended with duration 0:00:11.667181
Train perplexity: 476.0859118265825
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix in to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix in to[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix in to[0m
Epoch Step: 5 / 8 Loss (mean): 48.08483302593231 Loss (std): 16.748313935491876 Loss ratio: 0.3483076238709086 Tokens per Sec: 4200.665762992003
Mean loss per sample: 47.97147948820083 Std loss per sample: 19.173656303243053 ratio: 0.3996886589240811
Epoch ended with duration 0:00:01.076729
b'BLEU = 0.00, 16.9/0.1/0.0/0.0 (BP=0.324, ratio=0.470, hyp_len=1464, ref_len=3113)\n'
Validation perplexity: 665.8035925580589
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 4 / 1000
Epoch Step: 5 / 67 Loss (mean): 47.902516320347786 Loss (std): 20.328661291546386 Loss ratio: 0.42437564564664176 Tokens per Sec: 2908.874082174087
Epoch Step: 10 / 67 Loss (mean): 42.99522662162781 Loss (std): 20.71606859913882 Loss ratio: 0.4818225237291354 Tokens per Sec: 2932.729018940285
Epoch Step: 15 / 67 Loss (mean): 46.84012469649315 Loss (std): 20.527948815363967 Loss ratio: 0.43825563976137033 Tokens per Sec: 2768.6149973709244
Epoch Step: 20 / 67 Loss (mean): 42.11078259348869 Loss (std): 17.273505428702475 Loss ratio: 0.4101919832611555 Tokens per Sec: 2527.1989986663907
Epoch Step: 25 / 67 Loss (mean): 43.388698890805244 Loss (std): 16.859122629049782 Loss ratio: 0.38856022558958314 Tokens per Sec: 2795.6650387745944
Epoch Step: 30 / 67 Loss (mean): 39.55652305483818 Loss (std): 16.514787751347402 Loss ratio: 0.4174984674070708 Tokens per Sec: 2542.0458944098627
Epoch Step: 35 / 67 Loss (mean): 44.038017213344574 Loss (std): 16.396638173498417 Loss ratio: 0.37232916491367013 Tokens per Sec: 2981.142885826654
Epoch Step: 40 / 67 Loss (mean): 41.96021422743797 Loss (std): 16.882897342417962 Loss ratio: 0.4023548891077434 Tokens per Sec: 2416.7603608301624
Epoch Step: 45 / 67 Loss (mean): 50.631436094641685 Loss (std): 15.058345118117902 Loss ratio: 0.2974109817855142 Tokens per Sec: 2454.441498484409
Epoch Step: 50 / 67 Loss (mean): 42.91316714882851 Loss (std): 19.476985171497184 Loss ratio: 0.4538696737052392 Tokens per Sec: 2455.6570266876606
Epoch Step: 55 / 67 Loss (mean): 49.36156812310219 Loss (std): 13.23245438602727 Loss ratio: 0.26807200194748715 Tokens per Sec: 3670.974883956758
Epoch Step: 60 / 67 Loss (mean): 41.857665061950684 Loss (std): 19.866201704868967 Loss ratio: 0.47461323213959383 Tokens per Sec: 2980.2777609879477
Epoch Step: 65 / 67 Loss (mean): 42.99227839708328 Loss (std): 16.606958623322654 Loss ratio: 0.38627770479941154 Tokens per Sec: 2327.129909990887
Mean loss per sample: 45.089538969682856 Std loss per sample: 17.908549496231245 ratio: 0.3971774807516336
Epoch ended with duration 0:00:11.682439
Train perplexity: 446.12614668545433
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix to to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix to to[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix to to[0m
Epoch Step: 5 / 8 Loss (mean): 48.05791726708412 Loss (std): 16.8829689288755 Loss ratio: 0.35130463176436905 Tokens per Sec: 4225.057458059502
Mean loss per sample: 47.724807283917414 Std loss per sample: 19.228765389563772 ratio: 0.4029092307313223
Epoch ended with duration 0:00:01.059750
b'BLEU = 0.00, 13.5/0.2/0.0/0.0 (BP=0.324, ratio=0.470, hyp_len=1464, ref_len=3113)\n'
Validation perplexity: 643.9146710662307
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 5 / 1000
Epoch Step: 5 / 67 Loss (mean): 47.12220348417759 Loss (std): 18.840235046707306 Loss ratio: 0.3998165122527296 Tokens per Sec: 2482.3435618905196
Epoch Step: 10 / 67 Loss (mean): 43.87372702360153 Loss (std): 15.541102650720624 Loss ratio: 0.3542234431636138 Tokens per Sec: 2848.391010570472
Epoch Step: 15 / 67 Loss (mean): 46.17300167679787 Loss (std): 17.556610401371547 Loss ratio: 0.38023541385211307 Tokens per Sec: 2980.4112014792854
Epoch Step: 20 / 67 Loss (mean): 41.34897394478321 Loss (std): 18.619707641819428 Loss ratio: 0.4503064009927768 Tokens per Sec: 2664.7537796584356
Epoch Step: 25 / 67 Loss (mean): 44.68350030481815 Loss (std): 16.66480968247538 Loss ratio: 0.3729521986592988 Tokens per Sec: 2799.822363102394
Epoch Step: 30 / 67 Loss (mean): 46.58972127735615 Loss (std): 17.475427397663953 Loss ratio: 0.37509190693865513 Tokens per Sec: 2926.5195474243496
Epoch Step: 35 / 67 Loss (mean): 47.29343384504318 Loss (std): 26.016869315790093 Loss ratio: 0.5501158871448053 Tokens per Sec: 2548.8211575911505
Epoch Step: 40 / 67 Loss (mean): 44.891274720430374 Loss (std): 18.42646554268307 Loss ratio: 0.4104687527239461 Tokens per Sec: 2417.49957322577
Epoch Step: 45 / 67 Loss (mean): 46.213462471961975 Loss (std): 18.132640091245577 Loss ratio: 0.39236705326390064 Tokens per Sec: 3231.7592353814684
Epoch Step: 50 / 67 Loss (mean): 44.34125092625618 Loss (std): 18.262552055871694 Loss ratio: 0.4118637087222482 Tokens per Sec: 2943.1894596853645
Epoch Step: 55 / 67 Loss (mean): 44.40294970571995 Loss (std): 17.826031593254697 Loss ratio: 0.4014605270910271 Tokens per Sec: 2359.8899031299675
Epoch Step: 60 / 67 Loss (mean): 40.47480995953083 Loss (std): 17.462981461252973 Loss ratio: 0.4314530810327095 Tokens per Sec: 2447.3619088289224
Epoch Step: 65 / 67 Loss (mean): 41.34754630923271 Loss (std): 17.125672951043523 Loss ratio: 0.41418837342760145 Tokens per Sec: 2695.0792954284266
Mean loss per sample: 44.721996589719666 Std loss per sample: 17.85174443810066 ratio: 0.3991714547512907
Epoch ended with duration 0:00:11.697331
Train perplexity: 424.48360072799755
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in to[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix npe in to[0m
Epoch Step: 5 / 8 Loss (mean): 46.985743433237076 Loss (std): 16.567869166531338 Loss ratio: 0.3526148136843452 Tokens per Sec: 4305.166088249876
Mean loss per sample: 47.563334584236145 Std loss per sample: 19.10240304941119 ratio: 0.401620349296163
Epoch ended with duration 0:00:01.046379
b'BLEU = 0.00, 14.6/0.8/0.1/0.0 (BP=0.551, ratio=0.626, hyp_len=1950, ref_len=3113)\n'
Validation perplexity: 629.9772930292868
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved checkpoint_commit_msg_generator!
Epoch 6 / 1000
Epoch Step: 5 / 67 Loss (mean): 47.02477748692036 Loss (std): 20.03948961854205 Loss ratio: 0.42614746287988087 Tokens per Sec: 2146.1962457039945
Epoch Step: 10 / 67 Loss (mean): 43.47130610048771 Loss (std): 19.115137186711923 Loss ratio: 0.43971849252759093 Tokens per Sec: 2602.0906938811777
Epoch Step: 15 / 67 Loss (mean): 46.89776340126991 Loss (std): 26.272442390829514 Loss ratio: 0.5602067238481164 Tokens per Sec: 2928.833669346308
Epoch Step: 20 / 67 Loss (mean): 41.59330253303051 Loss (std): 13.299922942483088 Loss ratio: 0.3197611666426635 Tokens per Sec: 2427.907916190614
Epoch Step: 25 / 67 Loss (mean): 48.2556414604187 Loss (std): 13.117882380112095 Loss ratio: 0.2718414258542585 Tokens per Sec: 3546.9795124378006
Epoch Step: 30 / 67 Loss (mean): 42.671937331557274 Loss (std): 20.40078254679063 Loss ratio: 0.47808428261127 Tokens per Sec: 2207.7154943913047
Epoch Step: 35 / 67 Loss (mean): 49.964125111699104 Loss (std): 15.94780391951973 Loss ratio: 0.31918509298155506 Tokens per Sec: 2971.0378062687014
Epoch Step: 40 / 67 Loss (mean): 40.31645302474499 Loss (std): 16.13272036062814 Loss ratio: 0.4001522740784359 Tokens per Sec: 3030.4089695300872
Epoch Step: 45 / 67 Loss (mean): 43.55428487062454 Loss (std): 16.88614992596446 Loss ratio: 0.38770352850755746 Tokens per Sec: 3036.8513484678842
Epoch Step: 50 / 67 Loss (mean): 45.000852167606354 Loss (std): 13.291559628458467 Loss ratio: 0.29536239844867496 Tokens per Sec: 2548.7720057001734
Epoch Step: 55 / 67 Loss (mean): 41.31780764460564 Loss (std): 18.530369590187334 Loss ratio: 0.44848385348941955 Tokens per Sec: 3049.4900819090913
Epoch Step: 60 / 67 Loss (mean): 39.356293350458145 Loss (std): 16.427889789202826 Loss ratio: 0.41741455789335885 Tokens per Sec: 2635.2188518348908
Epoch Step: 65 / 67 Loss (mean): 49.10086137056351 Loss (std): 22.840412578141567 Loss ratio: 0.46517335827910017 Tokens per Sec: 2290.4327338094545
Mean loss per sample: 44.43509742948744 Std loss per sample: 17.83978644212252 ratio: 0.40147962925999825
Epoch ended with duration 0:00:11.703350
Train perplexity: 408.321967221426
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix npe in to[0m
Epoch Step: 5 / 8 Loss (mean): 46.96127986907959 Loss (std): 16.713765704473612 Loss ratio: 0.35590524259706874 Tokens per Sec: 4196.3854775765085
Mean loss per sample: 47.76444646374124 Std loss per sample: 19.360251356327122 ratio: 0.40532766083709987
Epoch ended with duration 0:00:01.061491
b'BLEU = 0.00, 14.4/0.8/0.1/0.0 (BP=0.507, ratio=0.596, hyp_len=1854, ref_len=3113)\n'
Validation perplexity: 647.3829712474521
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 7 / 1000
Epoch Step: 5 / 67 Loss (mean): 46.02562676370144 Loss (std): 26.174252111736166 Loss ratio: 0.5686886622123905 Tokens per Sec: 3184.623172230575
Epoch Step: 10 / 67 Loss (mean): 44.93421137332916 Loss (std): 17.77307920182413 Loss ratio: 0.39553557653786703 Tokens per Sec: 2298.0441327392505
Epoch Step: 15 / 67 Loss (mean): 43.55277442932129 Loss (std): 18.451507588353792 Loss ratio: 0.4236586033869653 Tokens per Sec: 2657.2038080291645
Epoch Step: 20 / 67 Loss (mean): 39.9858275949955 Loss (std): 17.082982851621733 Loss ratio: 0.42722594176742223 Tokens per Sec: 3005.2501637331534
Epoch Step: 25 / 67 Loss (mean): 46.29095250368118 Loss (std): 16.59891976916152 Loss ratio: 0.3585780562160938 Tokens per Sec: 2743.863883918932
Epoch Step: 30 / 67 Loss (mean): 45.797201067209244 Loss (std): 17.084913534254106 Loss ratio: 0.37305584481421267 Tokens per Sec: 3292.797892954964
Epoch Step: 35 / 67 Loss (mean): 40.39530500769615 Loss (std): 19.890072630644635 Loss ratio: 0.4923857519297146 Tokens per Sec: 2262.4948367984302
Epoch Step: 40 / 67 Loss (mean): 41.32865251600742 Loss (std): 17.153533600627632 Loss ratio: 0.415051847963921 Tokens per Sec: 3178.7451346657363
Epoch Step: 45 / 67 Loss (mean): 47.058458775281906 Loss (std): 17.310062731601704 Loss ratio: 0.3678416841967219 Tokens per Sec: 3009.2739201668583
Epoch Step: 50 / 67 Loss (mean): 44.553726851940155 Loss (std): 13.266408466447679 Loss ratio: 0.297762037068959 Tokens per Sec: 2686.6921692981737
Epoch Step: 55 / 67 Loss (mean): 43.90851613879204 Loss (std): 17.899787065328727 Loss ratio: 0.4076609423271931 Tokens per Sec: 2215.939083063511
Epoch Step: 60 / 67 Loss (mean): 43.02064698934555 Loss (std): 15.294303751546812 Loss ratio: 0.35551077963412736 Tokens per Sec: 2735.048742110195
Epoch Step: 65 / 67 Loss (mean): 42.46091206371784 Loss (std): 19.945822900931624 Loss ratio: 0.46974551255518143 Tokens per Sec: 2337.2381230070387
Mean loss per sample: 44.08699733463185 Std loss per sample: 17.773870201804947 ratio: 0.40315447357180206
Epoch ended with duration 0:00:11.666150
Train perplexity: 389.53672759495123
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix npe in[0m
Epoch Step: 5 / 8 Loss (mean): 46.859473794698715 Loss (std): 16.777471997699013 Loss ratio: 0.35803799400745884 Tokens per Sec: 4318.667127167231
Mean loss per sample: 47.55590225243178 Std loss per sample: 19.435774271579007 ratio: 0.40869320843524015
Epoch ended with duration 0:00:01.044592
b'BLEU = 0.00, 12.8/1.1/0.2/0.0 (BP=0.331, ratio=0.475, hyp_len=1479, ref_len=3113)\n'
Validation perplexity: 629.3430904689304
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 8 / 1000
Epoch Step: 5 / 67 Loss (mean): 45.81334964931011 Loss (std): 18.75554085738459 Loss ratio: 0.4093902978270227 Tokens per Sec: 1181.243753340547
Epoch Step: 10 / 67 Loss (mean): 43.63128915429115 Loss (std): 18.187448818817238 Loss ratio: 0.4168441769965098 Tokens per Sec: 2441.4223790564806
Epoch Step: 15 / 67 Loss (mean): 44.55381116271019 Loss (std): 15.979092835710576 Loss ratio: 0.35864704766456557 Tokens per Sec: 3022.695084375128
Epoch Step: 20 / 67 Loss (mean): 44.61743810772896 Loss (std): 15.66410228917847 Loss ratio: 0.3510757890526444 Tokens per Sec: 2735.5820120620156
Epoch Step: 25 / 67 Loss (mean): 47.19551995396614 Loss (std): 19.570041565026834 Loss ratio: 0.41465888254044414 Tokens per Sec: 2855.4099204809904
Epoch Step: 30 / 67 Loss (mean): 43.42532558739185 Loss (std): 17.579640249083052 Loss ratio: 0.404824604336119 Tokens per Sec: 2490.620175292748
Epoch Step: 35 / 67 Loss (mean): 41.94882869720459 Loss (std): 13.437543773668418 Loss ratio: 0.32033179926580113 Tokens per Sec: 2810.5112402771206
Epoch Step: 40 / 67 Loss (mean): 49.17166441679001 Loss (std): 14.891391060235044 Loss ratio: 0.3028449664427116 Tokens per Sec: 2530.1382481992896
Epoch Step: 45 / 67 Loss (mean): 49.28593236207962 Loss (std): 17.093474385107466 Loss ratio: 0.3468225833596913 Tokens per Sec: 2418.472052676913
Epoch Step: 50 / 67 Loss (mean): 42.573004215955734 Loss (std): 16.480619006158175 Loss ratio: 0.387114306581669 Tokens per Sec: 2521.1318521232265
Epoch Step: 55 / 67 Loss (mean): 43.0629840195179 Loss (std): 19.9331250754398 Loss ratio: 0.4628830428101614 Tokens per Sec: 2659.9399837170954
Epoch Step: 60 / 67 Loss (mean): 45.52997790277004 Loss (std): 17.11221371944329 Loss ratio: 0.37584498187077275 Tokens per Sec: 3347.6950213173413
Epoch Step: 65 / 67 Loss (mean): 46.659805580973625 Loss (std): 22.694595530375853 Loss ratio: 0.4863842711687162 Tokens per Sec: 3194.110850239519
Mean loss per sample: 43.86717202995397 Std loss per sample: 17.72715667680874 ratio: 0.40410985838576613
Epoch ended with duration 0:00:12.698195
Train perplexity: 378.12160646254995
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in to[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix npe in to[0m
Epoch Step: 5 / 8 Loss (mean): 46.99368479847908 Loss (std): 16.878565578780176 Loss ratio: 0.35916667635576516 Tokens per Sec: 4219.669788578132
Mean loss per sample: 48.13093934879928 Std loss per sample: 19.456579709530555 ratio: 0.40424267576684925
Epoch ended with duration 0:00:01.074143
b'BLEU = 0.00, 14.6/0.8/0.1/0.0 (BP=0.547, ratio=0.624, hyp_len=1941, ref_len=3113)\n'
Validation perplexity: 680.3479702795405
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 9 / 1000
Epoch Step: 5 / 67 Loss (mean): 48.971845626831055 Loss (std): 17.47411043745193 Loss ratio: 0.35681951974213705 Tokens per Sec: 2385.193613296026
Epoch Step: 10 / 67 Loss (mean): 43.33617712557316 Loss (std): 17.287584330447718 Loss ratio: 0.39891807439207927 Tokens per Sec: 2853.1234142974617
Epoch Step: 15 / 67 Loss (mean): 41.70678731799126 Loss (std): 18.665106563278965 Loss ratio: 0.4475316312658613 Tokens per Sec: 2666.284146240842
Epoch Step: 20 / 67 Loss (mean): 44.21241798996925 Loss (std): 16.131942308625884 Loss ratio: 0.3648735591047257 Tokens per Sec: 2744.891282581053
Epoch Step: 25 / 67 Loss (mean): 44.75759896636009 Loss (std): 15.127048285932405 Loss ratio: 0.33797720689400534 Tokens per Sec: 2660.246500358793
Epoch Step: 30 / 67 Loss (mean): 43.07325655221939 Loss (std): 18.168339365709574 Loss ratio: 0.42180092289245386 Tokens per Sec: 2820.6257418507735
Epoch Step: 35 / 67 Loss (mean): 44.39325964450836 Loss (std): 16.461201144809213 Loss ratio: 0.3708040652258239 Tokens per Sec: 2824.753189773121
Epoch Step: 40 / 67 Loss (mean): 42.01780053973198 Loss (std): 19.851782982887745 Loss ratio: 0.472461259939485 Tokens per Sec: 2734.4751509738257
Epoch Step: 45 / 67 Loss (mean): 42.66591504216194 Loss (std): 15.347301408500046 Loss ratio: 0.35970871346211675 Tokens per Sec: 2514.356492526413
Epoch Step: 50 / 67 Loss (mean): 47.926492005586624 Loss (std): 16.117414632192336 Loss ratio: 0.33629447843404825 Tokens per Sec: 2649.4892026454904
Epoch Step: 55 / 67 Loss (mean): 48.50822497904301 Loss (std): 20.81773760264027 Loss ratio: 0.4291589232884558 Tokens per Sec: 2765.8388257186025
Epoch Step: 60 / 67 Loss (mean): 40.29369130730629 Loss (std): 15.05628863013921 Loss ratio: 0.3736636714494588 Tokens per Sec: 2432.503820993384
Epoch Step: 65 / 67 Loss (mean): 43.02101603150368 Loss (std): 16.610874356529727 Loss ratio: 0.38611069400048154 Tokens per Sec: 2740.501740709102
Mean loss per sample: 43.56462538415593 Std loss per sample: 17.703124238554306 ratio: 0.40636466129220467
Epoch ended with duration 0:00:11.692075
Train perplexity: 362.95591451902965
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix npe in[0m
Epoch Step: 5 / 8 Loss (mean): 46.99405148625374 Loss (std): 17.00689089264605 Loss ratio: 0.3618945452621966 Tokens per Sec: 4322.84193782159
Mean loss per sample: 47.755173739839776 Std loss per sample: 19.713261987310187 ratio: 0.41279845603125487
Epoch ended with duration 0:00:01.045295
b'BLEU = 0.00, 12.9/1.1/0.2/0.0 (BP=0.324, ratio=0.470, hyp_len=1464, ref_len=3113)\n'
Validation perplexity: 646.5699676676963
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 10 / 1000
Epoch Step: 5 / 67 Loss (mean): 41.657881289720535 Loss (std): 19.620891752290373 Loss ratio: 0.4710007121061149 Tokens per Sec: 2559.5794266122357
Epoch Step: 10 / 67 Loss (mean): 41.6702162027359 Loss (std): 16.22748561821549 Loss ratio: 0.3894264800370788 Tokens per Sec: 2590.8541354073845
Epoch Step: 15 / 67 Loss (mean): 47.70501932501793 Loss (std): 16.090765510387193 Loss ratio: 0.3372971175372466 Tokens per Sec: 2736.5965082158023
Epoch Step: 20 / 67 Loss (mean): 48.46837396919727 Loss (std): 14.51107902044898 Loss ratio: 0.2993927345215066 Tokens per Sec: 2744.169522873294
Epoch Step: 25 / 67 Loss (mean): 42.078964829444885 Loss (std): 16.656345333625545 Loss ratio: 0.3958354346675899 Tokens per Sec: 2895.046718102585
Epoch Step: 30 / 67 Loss (mean): 45.184346690773964 Loss (std): 16.698883753402423 Loss ratio: 0.3695723182119641 Tokens per Sec: 2847.244110647674
Epoch Step: 35 / 67 Loss (mean): 41.18746681511402 Loss (std): 17.555728631527387 Loss ratio: 0.4262395818206813 Tokens per Sec: 2935.19863034215
Epoch Step: 40 / 67 Loss (mean): 39.827601969242096 Loss (std): 18.35643150016179 Loss ratio: 0.46089723188300474 Tokens per Sec: 2565.873790901762
Epoch Step: 45 / 67 Loss (mean): 48.65417563915253 Loss (std): 17.323103448286666 Loss ratio: 0.35604556486096506 Tokens per Sec: 2362.891648169455
Epoch Step: 50 / 67 Loss (mean): 43.7898658066988 Loss (std): 16.42636843485296 Loss ratio: 0.3751180354688395 Tokens per Sec: 2644.649221080571
Epoch Step: 55 / 67 Loss (mean): 44.46345230937004 Loss (std): 17.53033968290728 Loss ratio: 0.39426402522534243 Tokens per Sec: 2632.0359613125574
Epoch Step: 60 / 67 Loss (mean): 42.4181357473135 Loss (std): 17.65498509993344 Loss ratio: 0.41621313122068543 Tokens per Sec: 3036.8446006310755
Epoch Step: 65 / 67 Loss (mean): 39.15336234867573 Loss (std): 16.143498448867728 Loss ratio: 0.4123144854100569 Tokens per Sec: 2744.358608113568
Mean loss per sample: 43.22103250144068 Std loss per sample: 17.548788489064286 ratio: 0.40602427738114155
Epoch ended with duration 0:00:11.660932
Train perplexity: 346.46900408485834
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in to[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix npe in to[0m
Epoch Step: 5 / 8 Loss (mean): 46.835329443216324 Loss (std): 16.849848552984977 Loss ratio: 0.3597679092535032 Tokens per Sec: 4340.927235313365
Mean loss per sample: 47.5940188384447 Std loss per sample: 19.469157933787386 ratio: 0.4090673241920247
Epoch ended with duration 0:00:01.041163
b'BLEU = 0.00, 14.4/0.8/0.1/0.0 (BP=0.496, ratio=0.588, hyp_len=1830, ref_len=3113)\n'
Validation perplexity: 632.6023603020338
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved checkpoint_commit_msg_generator!
Epoch 11 / 1000
Epoch Step: 5 / 67 Loss (mean): 43.29453705251217 Loss (std): 16.95498154264002 Loss ratio: 0.39161942122340365 Tokens per Sec: 2595.991947141593
Epoch Step: 10 / 67 Loss (mean): 39.82383868098259 Loss (std): 17.03390560658943 Loss ratio: 0.42773138328133525 Tokens per Sec: 2537.0238504807735
Epoch Step: 15 / 67 Loss (mean): 43.92073857784271 Loss (std): 15.57928458883725 Loss ratio: 0.35471362944467294 Tokens per Sec: 2701.38330155584
Epoch Step: 20 / 67 Loss (mean): 43.706303894519806 Loss (std): 17.593240147938726 Loss ratio: 0.4025332407516776 Tokens per Sec: 3337.0558597179806
Epoch Step: 25 / 67 Loss (mean): 42.49101407825947 Loss (std): 17.66188014742867 Loss ratio: 0.4156615352813001 Tokens per Sec: 2909.9562377881066
Epoch Step: 30 / 67 Loss (mean): 43.28093808889389 Loss (std): 12.944249727588296 Loss ratio: 0.29907507321126797 Tokens per Sec: 2363.4068440568235
Epoch Step: 35 / 67 Loss (mean): 42.136504143476486 Loss (std): 18.63706868840353 Loss ratio: 0.44230220487545824 Tokens per Sec: 3125.5820040982658
Epoch Step: 40 / 67 Loss (mean): 34.535539358854294 Loss (std): 18.689859202382102 Loss ratio: 0.5411775680749679 Tokens per Sec: 2538.7761539148732
Epoch Step: 45 / 67 Loss (mean): 42.21148854494095 Loss (std): 16.122327465841288 Loss ratio: 0.38194169458573973 Tokens per Sec: 2708.4162393009083
Epoch Step: 50 / 67 Loss (mean): 44.517712473869324 Loss (std): 20.458791316608675 Loss ratio: 0.4595651973047228 Tokens per Sec: 2322.594795186088
Epoch Step: 55 / 67 Loss (mean): 45.300996482372284 Loss (std): 18.349743880792296 Loss ratio: 0.4050626985199459 Tokens per Sec: 3321.743794284856
Epoch Step: 60 / 67 Loss (mean): 39.7477633357048 Loss (std): 14.205827844846736 Loss ratio: 0.3573994271040116 Tokens per Sec: 2592.6596355738156
Epoch Step: 65 / 67 Loss (mean): 43.94102372229099 Loss (std): 17.01708568599146 Loss ratio: 0.3872710338643932 Tokens per Sec: 2500.837178362187
Mean loss per sample: 42.924243184808155 Std loss per sample: 17.554528967440763 ratio: 0.4089653693336101
Epoch ended with duration 0:00:11.627818
Train perplexity: 332.8319974482745
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in the[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in the[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix npe in to[0m
Epoch Step: 5 / 8 Loss (mean): 46.827023416757584 Loss (std): 16.841790417196318 Loss ratio: 0.35965964070159734 Tokens per Sec: 4333.4222998891455
Mean loss per sample: 47.63090801629864 Std loss per sample: 19.474318005092282 ratio: 0.408858844312362
Epoch ended with duration 0:00:01.043481
b'BLEU = 0.00, 12.2/1.0/0.1/0.0 (BP=0.535, ratio=0.615, hyp_len=1915, ref_len=3113)\n'
Validation perplexity: 635.7727488275164
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 12 / 1000
Epoch Step: 5 / 67 Loss (mean): 42.07817563414574 Loss (std): 18.024956157946885 Loss ratio: 0.4283682903619028 Tokens per Sec: 3329.7630070270166
Epoch Step: 10 / 67 Loss (mean): 39.05207234621048 Loss (std): 14.81254486858102 Loss ratio: 0.37930240262955967 Tokens per Sec: 2914.9602104572864
Epoch Step: 15 / 67 Loss (mean): 41.506702065467834 Loss (std): 16.210499365835407 Loss ratio: 0.3905513702405663 Tokens per Sec: 3117.199486378728
Epoch Step: 20 / 67 Loss (mean): 46.324461340904236 Loss (std): 14.044585867496105 Loss ratio: 0.3031786114929914 Tokens per Sec: 2715.6098266774475
Epoch Step: 25 / 67 Loss (mean): 43.516397938132286 Loss (std): 18.793548054622235 Loss ratio: 0.43187278692830267 Tokens per Sec: 2666.03764546417
Epoch Step: 30 / 67 Loss (mean): 43.92963191866875 Loss (std): 14.787130803899913 Loss ratio: 0.33660948562639414 Tokens per Sec: 2923.1299777347886
Epoch Step: 35 / 67 Loss (mean): 46.42584928870201 Loss (std): 12.76587587983759 Loss ratio: 0.2749734485297663 Tokens per Sec: 3207.5638202006016
Epoch Step: 40 / 67 Loss (mean): 40.80999839305878 Loss (std): 13.389442938274236 Loss ratio: 0.3280922191987049 Tokens per Sec: 2136.2205285683176
Epoch Step: 45 / 67 Loss (mean): 44.14948305487633 Loss (std): 17.106550333774237 Loss ratio: 0.3874688705304062 Tokens per Sec: 2334.0938419391937
Epoch Step: 50 / 67 Loss (mean): 38.797727674245834 Loss (std): 16.138013489979244 Loss ratio: 0.41595254303235274 Tokens per Sec: 2612.3214614398917
Epoch Step: 55 / 67 Loss (mean): 43.77898286283016 Loss (std): 16.99344573195525 Loss ratio: 0.38816447118471686 Tokens per Sec: 2412.4532818784082
Epoch Step: 60 / 67 Loss (mean): 33.878629714250565 Loss (std): 18.515028400590968 Loss ratio: 0.5465105453424783 Tokens per Sec: 2665.0829643585853
Epoch Step: 65 / 67 Loss (mean): 44.63135780394077 Loss (std): 17.407912428199406 Loss ratio: 0.3900377063290321 Tokens per Sec: 2659.8438226945586
Mean loss per sample: 42.59264835168988 Std loss per sample: 17.51860634698113 ratio: 0.41130587143417374
Epoch ended with duration 0:00:11.618779
Train perplexity: 318.22960935634603
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in the[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in the[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix npe in the[0m
Epoch Step: 5 / 8 Loss (mean): 46.706492215394974 Loss (std): 16.931631806051715 Loss ratio: 0.36251131273075704 Tokens per Sec: 4218.568285003639
Mean loss per sample: 47.826692418973956 Std loss per sample: 19.67671479315457 ratio: 0.4114170099989679
Epoch ended with duration 0:00:01.055701
b'BLEU = 0.00, 12.1/1.0/0.1/0.0 (BP=0.539, ratio=0.618, hyp_len=1923, ref_len=3113)\n'
Validation perplexity: 652.8670303774584
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 13 / 1000
Epoch Step: 5 / 67 Loss (mean): 43.33651205897331 Loss (std): 15.381707933783435 Loss ratio: 0.3549364543425105 Tokens per Sec: 2625.8981684396413
Epoch Step: 10 / 67 Loss (mean): 43.217902421951294 Loss (std): 13.66772218569252 Loss ratio: 0.3162514009183008 Tokens per Sec: 2682.387581098293
Epoch Step: 15 / 67 Loss (mean): 39.36311234533787 Loss (std): 14.088681734701218 Loss ratio: 0.35791584799238746 Tokens per Sec: 3036.635580075786
Epoch Step: 20 / 67 Loss (mean): 46.42792968451977 Loss (std): 21.828703215065513 Loss ratio: 0.4701631833121292 Tokens per Sec: 2508.28950655179
Epoch Step: 25 / 67 Loss (mean): 43.256098838079545 Loss (std): 18.294476592705394 Loss ratio: 0.4229340389938322 Tokens per Sec: 2609.5867694136723
Epoch Step: 30 / 67 Loss (mean): 41.88651613891125 Loss (std): 16.198820360202063 Loss ratio: 0.3867311453280277 Tokens per Sec: 3089.504423866545
Epoch Step: 35 / 67 Loss (mean): 39.95982128381729 Loss (std): 18.758573826345128 Loss ratio: 0.4694358789322682 Tokens per Sec: 2518.1388264563875
Epoch Step: 40 / 67 Loss (mean): 45.130757570266724 Loss (std): 18.52661659193779 Loss ratio: 0.41050976295030306 Tokens per Sec: 2889.106997368389
Epoch Step: 45 / 67 Loss (mean): 47.565415158867836 Loss (std): 17.25918119670812 Loss ratio: 0.3628514780973254 Tokens per Sec: 3067.5675135061415
Epoch Step: 50 / 67 Loss (mean): 46.52090319991112 Loss (std): 16.134194646034537 Loss ratio: 0.346816023255227 Tokens per Sec: 2746.2823227703775
Epoch Step: 55 / 67 Loss (mean): 46.134609907865524 Loss (std): 20.73500975729913 Loss ratio: 0.44944586718536456 Tokens per Sec: 2945.5509366167207
Epoch Step: 60 / 67 Loss (mean): 40.77446132898331 Loss (std): 13.024579810288511 Loss ratio: 0.31942984372500777 Tokens per Sec: 2207.0581500572634
Epoch Step: 65 / 67 Loss (mean): 48.077828496694565 Loss (std): 27.122696126993223 Loss ratio: 0.5641414551170495 Tokens per Sec: 2592.6179160744164
Mean loss per sample: 42.55611633617331 Std loss per sample: 17.59273194262735 ratio: 0.4134007860034275
Epoch ended with duration 0:00:11.684565
Train perplexity: 316.6605541204803
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in to[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix npe in to[0m
Epoch Step: 5 / 8 Loss (mean): 46.826069712638855 Loss (std): 17.025257429821114 Loss ratio: 0.3635850186509635 Tokens per Sec: 4334.802491487188
Mean loss per sample: 47.69287045471004 Std loss per sample: 19.678481246910593 ratio: 0.4126084477468726
Epoch ended with duration 0:00:01.043783
b'BLEU = 0.00, 14.8/0.9/0.1/0.0 (BP=0.517, ratio=0.602, hyp_len=1875, ref_len=3113)\n'
Validation perplexity: 641.1338224995425
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 14 / 1000
Epoch Step: 5 / 67 Loss (mean): 43.10764664411545 Loss (std): 17.614979771396634 Loss ratio: 0.40862772947966586 Tokens per Sec: 2517.8530145885334
Epoch Step: 10 / 67 Loss (mean): 42.35084168612957 Loss (std): 12.841000588871408 Loss ratio: 0.3032053219635773 Tokens per Sec: 2954.7636030529384
Epoch Step: 15 / 67 Loss (mean): 42.976527616381645 Loss (std): 16.491144767528315 Loss ratio: 0.3837244580281604 Tokens per Sec: 2819.94201882797
Epoch Step: 20 / 67 Loss (mean): 42.843977600336075 Loss (std): 15.516384865012789 Loss ratio: 0.36216023194100155 Tokens per Sec: 2544.2012559758473
Epoch Step: 25 / 67 Loss (mean): 44.88585992157459 Loss (std): 18.603993649491947 Loss ratio: 0.414473370500135 Tokens per Sec: 2588.8292678409903
Epoch Step: 30 / 67 Loss (mean): 44.73130674660206 Loss (std): 22.29519117440186 Loss ratio: 0.49842476770691435 Tokens per Sec: 2765.9927442575995
Epoch Step: 35 / 67 Loss (mean): 38.54414877295494 Loss (std): 19.51680387326895 Loss ratio: 0.506349329135093 Tokens per Sec: 3155.2906536333235
Epoch Step: 40 / 67 Loss (mean): 42.07711051404476 Loss (std): 14.356358554341979 Loss ratio: 0.3411916450287152 Tokens per Sec: 2735.6490744047182
Epoch Step: 45 / 67 Loss (mean): 46.797396153211594 Loss (std): 27.619718647399722 Loss ratio: 0.5901977656400921 Tokens per Sec: 2279.771258304016
Epoch Step: 50 / 67 Loss (mean): 42.05808860063553 Loss (std): 17.56802806116444 Loss ratio: 0.41770866545987007 Tokens per Sec: 2498.0551216753315
Epoch Step: 55 / 67 Loss (mean): 42.570534974336624 Loss (std): 17.518785829749913 Loss ratio: 0.41152374148718124 Tokens per Sec: 2708.2949908545825
Epoch Step: 60 / 67 Loss (mean): 41.32286185026169 Loss (std): 18.025433426278575 Loss ratio: 0.43620970618143246 Tokens per Sec: 2594.114501046697
Epoch Step: 65 / 67 Loss (mean): 46.657704934477806 Loss (std): 15.924579545882917 Loss ratio: 0.3413065337921372 Tokens per Sec: 3385.637410516667
Mean loss per sample: 42.23538680977515 Std loss per sample: 17.51373020682267 ratio: 0.41466958230317935
Epoch ended with duration 0:00:11.694556
Train perplexity: 303.21307603139024
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in to[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix npe in to[0m
Epoch Step: 5 / 8 Loss (mean): 46.68022897839546 Loss (std): 17.028155511908484 Loss ratio: 0.36478303308643695 Tokens per Sec: 4327.70248031135
Mean loss per sample: 47.55379894326945 Std loss per sample: 19.658645042093656 ratio: 0.41339799298781477
Epoch ended with duration 0:00:01.042430
b'BLEU = 0.00, 15.6/1.2/0.1/0.0 (BP=0.540, ratio=0.619, hyp_len=1926, ref_len=3113)\n'
Validation perplexity: 629.1637305539238
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 15 / 1000
Epoch Step: 5 / 67 Loss (mean): 44.036531925201416 Loss (std): 18.99419526642346 Loss ratio: 0.43132813679983234 Tokens per Sec: 2564.603506545949
Epoch Step: 10 / 67 Loss (mean): 42.65272594988346 Loss (std): 16.45739404119437 Loss ratio: 0.38584624252460786 Tokens per Sec: 2631.942304106743
Epoch Step: 15 / 67 Loss (mean): 37.92842847108841 Loss (std): 15.880658852984508 Loss ratio: 0.41870068160324153 Tokens per Sec: 3925.1110452150797
Epoch Step: 20 / 67 Loss (mean): 38.63833896815777 Loss (std): 18.29044243703424 Loss ratio: 0.47337548469947355 Tokens per Sec: 2535.196375163422
Epoch Step: 25 / 67 Loss (mean): 43.22293542325497 Loss (std): 15.486350601877255 Loss ratio: 0.35829011727753296 Tokens per Sec: 2776.9454723761605
Epoch Step: 30 / 67 Loss (mean): 44.09945185482502 Loss (std): 16.475475128874997 Loss ratio: 0.3735981840117221 Tokens per Sec: 2979.9529360009874
Epoch Step: 35 / 67 Loss (mean): 43.49367320537567 Loss (std): 13.11124794793663 Loss ratio: 0.30145184303072664 Tokens per Sec: 2666.254713267185
Epoch Step: 40 / 67 Loss (mean): 42.841422483325005 Loss (std): 16.23001729878548 Loss ratio: 0.378839365221886 Tokens per Sec: 2613.562261022373
Epoch Step: 45 / 67 Loss (mean): 37.30729639530182 Loss (std): 15.76461998799254 Loss ratio: 0.4225613086768145 Tokens per Sec: 2644.6017874647587
Epoch Step: 50 / 67 Loss (mean): 44.9799619615078 Loss (std): 18.82206955280128 Loss ratio: 0.4184545458021623 Tokens per Sec: 2431.9164337278294
Epoch Step: 55 / 67 Loss (mean): 38.99629783630371 Loss (std): 13.725260570692628 Loss ratio: 0.3519631691271744 Tokens per Sec: 2807.998145020603
Epoch Step: 60 / 67 Loss (mean): 44.82431119680405 Loss (std): 18.078009654189284 Loss ratio: 0.40330814175407204 Tokens per Sec: 2544.798456105471
Epoch Step: 65 / 67 Loss (mean): 42.5463502066476 Loss (std): 18.260067767238848 Loss ratio: 0.4291805919555898 Tokens per Sec: 2281.006160771691
Mean loss per sample: 42.321582472497624 Std loss per sample: 17.594706028752597 ratio: 0.41573837746228864
Epoch ended with duration 0:00:11.770532
Train perplexity: 306.7699223914103
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in to[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix npe in to[0m
Epoch Step: 5 / 8 Loss (mean): 46.71114870905876 Loss (std): 17.096077662045683 Loss ratio: 0.36599565916327415 Tokens per Sec: 4200.081974405881
Mean loss per sample: 47.95997049964842 Std loss per sample: 19.92389225261945 ratio: 0.4154275335253908
Epoch ended with duration 0:00:01.058630
b'BLEU = 0.00, 15.1/1.6/0.1/0.0 (BP=0.441, ratio=0.550, hyp_len=1711, ref_len=3113)\n'
Validation perplexity: 664.7659653333482
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved checkpoint_commit_msg_generator!
Epoch 16 / 1000
Epoch Step: 5 / 67 Loss (mean): 42.78167341649532 Loss (std): 15.993038457562124 Loss ratio: 0.3738291932123368 Tokens per Sec: 2347.3245075510467
Epoch Step: 10 / 67 Loss (mean): 37.78836217522621 Loss (std): 16.232305411037533 Loss ratio: 0.42955832104518465 Tokens per Sec: 2853.4577929297975
Epoch Step: 15 / 67 Loss (mean): 45.90818610787392 Loss (std): 15.720208083275525 Loss ratio: 0.3424271228302632 Tokens per Sec: 2535.541789439268
Epoch Step: 20 / 67 Loss (mean): 39.78034847974777 Loss (std): 19.527689020131028 Loss ratio: 0.4908878319673997 Tokens per Sec: 2859.2893568714876
Epoch Step: 25 / 67 Loss (mean): 43.321661457419395 Loss (std): 16.75462188577977 Loss ratio: 0.38674929174283373 Tokens per Sec: 3016.81259836711
Epoch Step: 30 / 67 Loss (mean): 39.8105633109808 Loss (std): 13.026279519360116 Loss ratio: 0.32720661141127655 Tokens per Sec: 2102.8383935116517
Epoch Step: 35 / 67 Loss (mean): 42.30953426659107 Loss (std): 15.9020144923834 Loss ratio: 0.3758494336568513 Tokens per Sec: 2843.309397927699
Epoch Step: 40 / 67 Loss (mean): 43.83501401543617 Loss (std): 21.745427496653928 Loss ratio: 0.4960743822049752 Tokens per Sec: 2553.3100337782503
Epoch Step: 45 / 67 Loss (mean): 42.803562477231026 Loss (std): 16.0210923658003 Loss ratio: 0.37429343350387195 Tokens per Sec: 2648.368121917172
Epoch Step: 50 / 67 Loss (mean): 40.11836142838001 Loss (std): 19.560431990760417 Loss ratio: 0.4875680684436735 Tokens per Sec: 2488.97164934639
Epoch Step: 55 / 67 Loss (mean): 43.10984046757221 Loss (std): 18.48612945059742 Loss ratio: 0.42881461054125053 Tokens per Sec: 2785.51339031339
Epoch Step: 60 / 67 Loss (mean): 45.760464534163475 Loss (std): 21.251720423564848 Loss ratio: 0.464412252801737 Tokens per Sec: 2815.531447199483
Epoch Step: 65 / 67 Loss (mean): 39.098164677619934 Loss (std): 15.7604599691266 Loss ratio: 0.4030997388004762 Tokens per Sec: 3194.9238175288456
Mean loss per sample: 41.68744365787819 Std loss per sample: 17.391835637932214 ratio: 0.41719602143667217
Epoch ended with duration 0:00:11.684449
Train perplexity: 281.5469524756062
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in to[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix npe in to[0m
Epoch Step: 5 / 8 Loss (mean): 46.78108462691307 Loss (std): 17.081511882961077 Loss ratio: 0.365137149324112 Tokens per Sec: 4073.4978871871554
Mean loss per sample: 48.32267812236411 Std loss per sample: 20.023522987419994 ratio: 0.41437113515761353
Epoch ended with duration 0:00:01.076266
b'BLEU = 0.00, 15.1/1.2/0.1/0.0 (BP=0.523, ratio=0.606, hyp_len=1888, ref_len=3113)\n'
Validation perplexity: 698.257835556457
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 17 / 1000
Epoch Step: 5 / 67 Loss (mean): 35.519369304180145 Loss (std): 18.3181834978732 Loss ratio: 0.515723782733873 Tokens per Sec: 2724.5261740568144
Epoch Step: 10 / 67 Loss (mean): 45.603053480386734 Loss (std): 27.858316688989756 Loss ratio: 0.6108870911675081 Tokens per Sec: 3033.2621077355916
Epoch Step: 15 / 67 Loss (mean): 50.143362164497375 Loss (std): 17.43374005880306 Loss ratio: 0.34767792398146247 Tokens per Sec: 3010.819055971623
Epoch Step: 20 / 67 Loss (mean): 42.506964683532715 Loss (std): 16.405012059438523 Loss ratio: 0.3859370383553606 Tokens per Sec: 2998.09904373371
Epoch Step: 25 / 67 Loss (mean): 41.44904291629791 Loss (std): 15.055748560854472 Loss ratio: 0.3632351316593247 Tokens per Sec: 2264.4808198292635
Epoch Step: 30 / 67 Loss (mean): 50.63176375627518 Loss (std): 14.778813946820108 Loss ratio: 0.2918881913330238 Tokens per Sec: 3225.1192898241993
Epoch Step: 35 / 67 Loss (mean): 40.87834995985031 Loss (std): 14.864394070981836 Loss ratio: 0.36362509948618943 Tokens per Sec: 2840.364802109905
Epoch Step: 40 / 67 Loss (mean): 39.86311359703541 Loss (std): 12.970019463128152 Loss ratio: 0.32536393404284214 Tokens per Sec: 2550.196761623898
Epoch Step: 45 / 67 Loss (mean): 39.23952689766884 Loss (std): 17.522758542336643 Loss ratio: 0.4465588636691143 Tokens per Sec: 3165.777477257534
Epoch Step: 50 / 67 Loss (mean): 42.220090955495834 Loss (std): 16.87561248446827 Loss ratio: 0.39970573493687733 Tokens per Sec: 2256.7599988277702
Epoch Step: 55 / 67 Loss (mean): 38.439114436507225 Loss (std): 13.729383642871165 Loss ratio: 0.35717221492053414 Tokens per Sec: 2593.939364278291
Epoch Step: 60 / 67 Loss (mean): 40.03551244735718 Loss (std): 15.693736281252344 Loss ratio: 0.39199538914078064 Tokens per Sec: 2561.2079154058347
Epoch Step: 65 / 67 Loss (mean): 38.21235303580761 Loss (std): 16.34917422658686 Loss ratio: 0.42785049670368525 Tokens per Sec: 2066.518500098027
Mean loss per sample: 41.670396951459914 Std loss per sample: 17.460355122915235 ratio: 0.41901101022037457
Epoch ended with duration 0:00:11.765336
Train perplexity: 280.8983367743169
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix the to[0m
Epoch Step: 5 / 8 Loss (mean): 46.85670167207718 Loss (std): 17.371982911823668 Loss ratio: 0.3707470285339348 Tokens per Sec: 4319.00834881529
Mean loss per sample: 47.76404446265737 Std loss per sample: 20.033568195770474 ratio: 0.4194278022547486
Epoch ended with duration 0:00:01.044984
b'BLEU = 0.00, 12.9/1.6/0.1/0.0 (BP=0.439, ratio=0.548, hyp_len=1707, ref_len=3113)\n'
Validation perplexity: 647.3477038537171
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 18 / 1000
Epoch Step: 5 / 67 Loss (mean): 30.454863995313644 Loss (std): 19.183084143961604 Loss ratio: 0.6298857268551084 Tokens per Sec: 2655.9028427565827
Epoch Step: 10 / 67 Loss (mean): 43.989207714796066 Loss (std): 18.865090758946504 Loss ratio: 0.428857252471067 Tokens per Sec: 2668.721556990795
Epoch Step: 15 / 67 Loss (mean): 40.84860646724701 Loss (std): 16.4999190510134 Loss ratio: 0.403928566430859 Tokens per Sec: 3410.770921026628
Epoch Step: 20 / 67 Loss (mean): 37.070166394114494 Loss (std): 19.434678377164254 Loss ratio: 0.5242673628853696 Tokens per Sec: 2877.738993651221
Epoch Step: 25 / 67 Loss (mean): 39.11587117612362 Loss (std): 13.19765645517831 Loss ratio: 0.3373990162651465 Tokens per Sec: 2435.5842180376967
Epoch Step: 30 / 67 Loss (mean): 41.66035433113575 Loss (std): 15.384774294822025 Loss ratio: 0.36929052913320726 Tokens per Sec: 2924.693282349648
Epoch Step: 35 / 67 Loss (mean): 39.6959121376276 Loss (std): 15.721089113108626 Loss ratio: 0.39603798644562865 Tokens per Sec: 2292.3752308019425
Epoch Step: 40 / 67 Loss (mean): 38.11351165175438 Loss (std): 16.273413088245153 Loss ratio: 0.42697228313508295 Tokens per Sec: 2913.68716321831
Epoch Step: 45 / 67 Loss (mean): 43.09570810198784 Loss (std): 16.94526569111236 Loss ratio: 0.3932007718961402 Tokens per Sec: 3090.0261122785178
Epoch Step: 50 / 67 Loss (mean): 42.938474759459496 Loss (std): 17.238882737961667 Loss ratio: 0.40147869328227315 Tokens per Sec: 2723.390090992455
Epoch Step: 55 / 67 Loss (mean): 39.40895617008209 Loss (std): 19.218674065699187 Loss ratio: 0.48767275090349477 Tokens per Sec: 2343.8353762636157
Epoch Step: 60 / 67 Loss (mean): 42.7736881673336 Loss (std): 16.233323070914356 Loss ratio: 0.3795165618500907 Tokens per Sec: 2497.667038105954
Epoch Step: 65 / 67 Loss (mean): 41.153756871819496 Loss (std): 12.636939057775038 Loss ratio: 0.3070664750519612 Tokens per Sec: 2477.983167909276
Mean loss per sample: 40.980513822400845 Std loss per sample: 17.21245595988281 ratio: 0.4200156209479761
Epoch ended with duration 0:00:11.632782
Train perplexity: 255.86547615451408
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix npe in method_1[0m
Epoch Step: 5 / 8 Loss (mean): 46.75276143848896 Loss (std): 17.28979196654417 Loss ratio: 0.36981327807324854 Tokens per Sec: 4193.656928406854
Mean loss per sample: 48.14091596740191 Std loss per sample: 19.987734609023985 ratio: 0.4151922373591408
Epoch ended with duration 0:00:01.059514
b'BLEU = 0.00, 12.4/1.6/0.1/0.0 (BP=0.495, ratio=0.587, hyp_len=1827, ref_len=3113)\n'
Validation perplexity: 681.2684299871721
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 19 / 1000
Epoch Step: 5 / 67 Loss (mean): 41.640196055173874 Loss (std): 16.316982275563255 Loss ratio: 0.3918565189737102 Tokens per Sec: 2472.3125098100013
Epoch Step: 10 / 67 Loss (mean): 42.051394149661064 Loss (std): 17.90017969524677 Loss ratio: 0.4256738702060618 Tokens per Sec: 2600.889669490573
Epoch Step: 15 / 67 Loss (mean): 41.43611678481102 Loss (std): 18.08974774868108 Loss ratio: 0.43656957148340036 Tokens per Sec: 2399.9537174277775
Epoch Step: 20 / 67 Loss (mean): 41.83894802629948 Loss (std): 14.344695954060812 Loss ratio: 0.3428550819452703 Tokens per Sec: 2876.5357928648273
Epoch Step: 25 / 67 Loss (mean): 44.043983072042465 Loss (std): 12.226996865437764 Loss ratio: 0.2776087904093084 Tokens per Sec: 3030.5076970770347
Epoch Step: 30 / 67 Loss (mean): 38.43716010451317 Loss (std): 17.317129645957035 Loss ratio: 0.45053093409790473 Tokens per Sec: 3053.990608954693
Epoch Step: 35 / 67 Loss (mean): 41.443989023566246 Loss (std): 13.35944318074605 Loss ratio: 0.322349356215433 Tokens per Sec: 2761.9263337555585
Epoch Step: 40 / 67 Loss (mean): 37.78300738334656 Loss (std): 15.907487977375657 Loss ratio: 0.42102228168282674 Tokens per Sec: 2347.650722038621
Epoch Step: 45 / 67 Loss (mean): 37.27016915380955 Loss (std): 16.03340007792836 Loss ratio: 0.4301939176009754 Tokens per Sec: 2415.1568227081284
Epoch Step: 50 / 67 Loss (mean): 43.21016852557659 Loss (std): 20.08088262445322 Loss ratio: 0.46472585758528384 Tokens per Sec: 2499.0175480407875
Epoch Step: 55 / 67 Loss (mean): 48.694036945700645 Loss (std): 15.772591785027275 Loss ratio: 0.3239121825659166 Tokens per Sec: 2532.2286965724543
Epoch Step: 60 / 67 Loss (mean): 41.62979280948639 Loss (std): 16.462334637026533 Loss ratio: 0.3954459901437506 Tokens per Sec: 3406.21629245339
Epoch Step: 65 / 67 Loss (mean): 41.3293230086565 Loss (std): 15.36507267999788 Loss ratio: 0.3717717001263156 Tokens per Sec: 2439.954861826119
Mean loss per sample: 41.31043867119254 Std loss per sample: 17.389185459133163 ratio: 0.4209392593852883
Epoch ended with duration 0:00:11.797316
Train perplexity: 267.54574483912177
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix the to use[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix the to[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix the to[0m
Epoch Step: 5 / 8 Loss (mean): 46.99005842208862 Loss (std): 17.502096830354436 Loss ratio: 0.3724638235845909 Tokens per Sec: 4327.524622779494
Mean loss per sample: 47.83875805237254 Std loss per sample: 20.062288232198714 ratio: 0.41937309932325334
Epoch ended with duration 0:00:01.042516
b'BLEU = 0.00, 14.9/1.2/0.1/0.0 (BP=0.432, ratio=0.544, hyp_len=1693, ref_len=3113)\n'
Validation perplexity: 653.9354126457456
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 20 / 1000
Epoch Step: 5 / 67 Loss (mean): 38.115983828902245 Loss (std): 16.50025865571098 Loss ratio: 0.43289604512843016 Tokens per Sec: 2686.467433477347
Epoch Step: 10 / 67 Loss (mean): 37.501906022429466 Loss (std): 13.594634596297253 Loss ratio: 0.36250516408863204 Tokens per Sec: 2907.8523114846416
Epoch Step: 15 / 67 Loss (mean): 37.104130923748016 Loss (std): 15.90847011497334 Loss ratio: 0.42875199388624763 Tokens per Sec: 2466.368568863343
Epoch Step: 20 / 67 Loss (mean): 47.65699274837971 Loss (std): 18.741183337281154 Loss ratio: 0.39325148853246383 Tokens per Sec: 2577.2460629613443
Epoch Step: 25 / 67 Loss (mean): 39.84749323129654 Loss (std): 15.168171558404069 Loss ratio: 0.38065560285962646 Tokens per Sec: 3125.44959976016
Epoch Step: 30 / 67 Loss (mean): 40.5836311429739 Loss (std): 14.898944288692068 Loss ratio: 0.36711708314625435 Tokens per Sec: 2939.521320718866
Epoch Step: 35 / 67 Loss (mean): 40.08507910370827 Loss (std): 15.703467333501596 Loss ratio: 0.39175343256460904 Tokens per Sec: 3194.556494647432
Epoch Step: 40 / 67 Loss (mean): 50.453420519828796 Loss (std): 17.74225954693557 Loss ratio: 0.3516562279451926 Tokens per Sec: 2880.9711436251528
Epoch Step: 45 / 67 Loss (mean): 41.933212250471115 Loss (std): 18.9723482958408 Loss ratio: 0.4524420448048944 Tokens per Sec: 2264.5809793978588
Epoch Step: 50 / 67 Loss (mean): 39.120823085308075 Loss (std): 19.726740447020898 Loss ratio: 0.504251671903839 Tokens per Sec: 2129.3884151856882
Epoch Step: 55 / 67 Loss (mean): 37.57599352300167 Loss (std): 15.966952761275701 Loss ratio: 0.4249243004446904 Tokens per Sec: 3293.3154669923842
Epoch Step: 60 / 67 Loss (mean): 43.15128283202648 Loss (std): 17.760466256498063 Loss ratio: 0.4115860547097434 Tokens per Sec: 2374.905696084093
Epoch Step: 65 / 67 Loss (mean): 41.420226871967316 Loss (std): 15.384800344123288 Loss ratio: 0.37143206365524584 Tokens per Sec: 2807.9387466722033
Mean loss per sample: 40.684997970377175 Std loss per sample: 17.198299851624448 ratio: 0.4227184640428534
Epoch ended with duration 0:00:11.691957
Train perplexity: 245.8369747963594
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix the to use[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix the to[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix the to[0m
Epoch Step: 5 / 8 Loss (mean): 46.97121435403824 Loss (std): 17.572102896007294 Loss ratio: 0.37410365343251073 Tokens per Sec: 4223.792625157863
Mean loss per sample: 48.250029004011 Std loss per sample: 20.251736950650756 ratio: 0.41972486584344315
Epoch ended with duration 0:00:01.059000
b'BLEU = 0.00, 14.5/1.6/0.2/0.0 (BP=0.348, ratio=0.486, hyp_len=1514, ref_len=3113)\n'
Validation perplexity: 691.4170378102209
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved checkpoint_commit_msg_generator!
Epoch 21 / 1000
Epoch Step: 5 / 67 Loss (mean): 40.75082369148731 Loss (std): 25.745396776574207 Loss ratio: 0.6317761076803049 Tokens per Sec: 3191.7405221933086
Epoch Step: 10 / 67 Loss (mean): 43.47729489207268 Loss (std): 12.210333174426909 Loss ratio: 0.2808439026562632 Tokens per Sec: 2906.7013978166924
Epoch Step: 15 / 67 Loss (mean): 37.412898406386375 Loss (std): 17.46221275755546 Loss ratio: 0.4667431153790176 Tokens per Sec: 2938.510232002106
Epoch Step: 20 / 67 Loss (mean): 35.541676223278046 Loss (std): 15.334584781129266 Loss ratio: 0.43145361757265316 Tokens per Sec: 2336.710045219135
Epoch Step: 25 / 67 Loss (mean): 39.777678832411766 Loss (std): 14.256351849395916 Loss ratio: 0.3584007983336502 Tokens per Sec: 2545.0841382984113
Epoch Step: 30 / 67 Loss (mean): 41.77288246154785 Loss (std): 16.56849781821038 Loss ratio: 0.3966328594504285 Tokens per Sec: 3027.1785001167923
Epoch Step: 35 / 67 Loss (mean): 41.5970194786787 Loss (std): 17.629729079239024 Loss ratio: 0.4238219300369695 Tokens per Sec: 2397.221138255857
Epoch Step: 40 / 67 Loss (mean): 36.305280841887 Loss (std): 19.231076649710946 Loss ratio: 0.529704665650822 Tokens per Sec: 2755.513238451547
Epoch Step: 45 / 67 Loss (mean): 38.57807360589504 Loss (std): 19.384398084564374 Loss ratio: 0.5024719036671204 Tokens per Sec: 3108.914941411628
Epoch Step: 50 / 67 Loss (mean): 39.65298981964588 Loss (std): 14.341437322706238 Loss ratio: 0.3616735431031948 Tokens per Sec: 2808.1105330684413
Epoch Step: 55 / 67 Loss (mean): 41.35393762588501 Loss (std): 13.041598162756088 Loss ratio: 0.31536532943341417 Tokens per Sec: 2603.216364340074
Epoch Step: 60 / 67 Loss (mean): 38.53663446009159 Loss (std): 12.681614612930643 Loss ratio: 0.3290794536316782 Tokens per Sec: 2718.366577138249
Epoch Step: 65 / 67 Loss (mean): 40.62069347500801 Loss (std): 15.449856617471474 Loss ratio: 0.3803444819812601 Tokens per Sec: 2299.085440101904
Mean loss per sample: 40.02945731986144 Std loss per sample: 16.955294201298592 ratio: 0.42357042379602466
Epoch ended with duration 0:00:11.604583
Train perplexity: 224.97159488323484
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix npe in method_1[0m
Epoch Step: 5 / 8 Loss (mean): 46.87331639230251 Loss (std): 17.46950355989913 Loss ratio: 0.3726961287246992 Tokens per Sec: 4343.752771996528
Mean loss per sample: 48.25295721214326 Std loss per sample: 20.263037799303028 ratio: 0.41993359516219797
Epoch ended with duration 0:00:01.057709
b'BLEU = 0.00, 12.1/1.6/0.1/0.0 (BP=0.539, ratio=0.618, hyp_len=1923, ref_len=3113)\n'
Validation perplexity: 691.6914635808556
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 22 / 1000
Epoch Step: 5 / 67 Loss (mean): 43.270222559571266 Loss (std): 20.4795111984984 Loss ratio: 0.4732934102731668 Tokens per Sec: 2618.3875259826864
Epoch Step: 10 / 67 Loss (mean): 44.779982194304466 Loss (std): 13.845112255406118 Loss ratio: 0.30918083431411164 Tokens per Sec: 3669.5061380927864
Epoch Step: 15 / 67 Loss (mean): 40.07495018839836 Loss (std): 15.989517919638828 Loss ratio: 0.3989903379659788 Tokens per Sec: 2742.508379865876
Epoch Step: 20 / 67 Loss (mean): 42.3473442196846 Loss (std): 17.798440366562414 Loss ratio: 0.4202964954361659 Tokens per Sec: 2682.5000669797664
Epoch Step: 25 / 67 Loss (mean): 42.281597912311554 Loss (std): 17.2927467720967 Loss ratio: 0.4089899063881263 Tokens per Sec: 3020.157219602169
Epoch Step: 30 / 67 Loss (mean): 38.040657952427864 Loss (std): 12.532401248363284 Loss ratio: 0.3294475417337893 Tokens per Sec: 2557.1577924225794
Epoch Step: 35 / 67 Loss (mean): 35.37078747153282 Loss (std): 15.5628604835721 Loss ratio: 0.4399919141211495 Tokens per Sec: 2836.1856633269304
Epoch Step: 40 / 67 Loss (mean): 40.995285749435425 Loss (std): 15.161104114735283 Loss ratio: 0.36982555036694864 Tokens per Sec: 2089.3430691229
Epoch Step: 45 / 67 Loss (mean): 44.47561930119991 Loss (std): 15.845060485634095 Loss ratio: 0.3562639651699377 Tokens per Sec: 2897.9844550079706
Epoch Step: 50 / 67 Loss (mean): 36.7504952698946 Loss (std): 16.458409868224535 Loss ratio: 0.44784185212619415 Tokens per Sec: 2389.719780063859
Epoch Step: 55 / 67 Loss (mean): 36.78822281956673 Loss (std): 16.006420529563602 Loss ratio: 0.4350963243880917 Tokens per Sec: 2306.6230941817507
Epoch Step: 60 / 67 Loss (mean): 39.2024350464344 Loss (std): 14.607457769929473 Loss ratio: 0.37261608246087946 Tokens per Sec: 2907.5021467967354
Epoch Step: 65 / 67 Loss (mean): 38.44216628372669 Loss (std): 18.63397012534979 Loss ratio: 0.4847273691034917 Tokens per Sec: 2945.722387598533
Mean loss per sample: 39.98631416281456 Std loss per sample: 16.975667689338056 ratio: 0.42453694582144436
Epoch ended with duration 0:00:11.671503
Train perplexity: 223.6622032492466
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for the ``[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: add a test for the ``[0m
Epoch Step: 5 / 8 Loss (mean): 47.00505881011486 Loss (std): 17.488879826130788 Loss ratio: 0.3720637792791659 Tokens per Sec: 4125.791640287799
Mean loss per sample: 48.818377299386945 Std loss per sample: 20.498006319136646 ratio: 0.4198829918788402
Epoch ended with duration 0:00:01.066675
b'BLEU = 0.00, 11.1/1.0/0.1/0.0 (BP=0.599, ratio=0.661, hyp_len=2059, ref_len=3113)\n'
Validation perplexity: 746.7754546543777
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 23 / 1000
Epoch Step: 5 / 67 Loss (mean): 39.202198296785355 Loss (std): 15.722268380265138 Loss ratio: 0.4010557841995914 Tokens per Sec: 3050.7875935491193
Epoch Step: 10 / 67 Loss (mean): 38.60060824453831 Loss (std): 14.330079454222885 Loss ratio: 0.3712397318570876 Tokens per Sec: 2672.2033535150226
Epoch Step: 15 / 67 Loss (mean): 36.266649052500725 Loss (std): 12.40515051428501 Loss ratio: 0.342053948693383 Tokens per Sec: 2558.030299935315
Epoch Step: 20 / 67 Loss (mean): 28.704734280705452 Loss (std): 19.11206642529396 Loss ratio: 0.6658158280928793 Tokens per Sec: 2592.037272338805
Epoch Step: 25 / 67 Loss (mean): 42.64553213119507 Loss (std): 19.69620461339789 Loss ratio: 0.46185857296385285 Tokens per Sec: 2811.1479500648993
Epoch Step: 30 / 67 Loss (mean): 39.99533880324591 Loss (std): 17.280724572491057 Loss ratio: 0.4320684632152335 Tokens per Sec: 2490.305361902633
Epoch Step: 35 / 67 Loss (mean): 41.04492300748825 Loss (std): 14.053156416060576 Loss ratio: 0.34238476738028506 Tokens per Sec: 2787.2418873330353
Epoch Step: 40 / 67 Loss (mean): 36.4694232493639 Loss (std): 15.653770770406885 Loss ratio: 0.42923000628149277 Tokens per Sec: 2564.0419686839637
Epoch Step: 45 / 67 Loss (mean): 35.948015317320824 Loss (std): 16.955505451528175 Loss ratio: 0.47166735915344143 Tokens per Sec: 3008.624232067656
Epoch Step: 50 / 67 Loss (mean): 38.1025210916996 Loss (std): 17.4340334335527 Loss ratio: 0.4575559027077239 Tokens per Sec: 2410.8715006148545
Epoch Step: 55 / 67 Loss (mean): 41.316082030534744 Loss (std): 14.542331476377209 Loss ratio: 0.35197750516686616 Tokens per Sec: 2789.061977021668
Epoch Step: 60 / 67 Loss (mean): 35.36035564541817 Loss (std): 15.577150818671429 Loss ratio: 0.44052585259248783 Tokens per Sec: 2546.258611388419
Epoch Step: 65 / 67 Loss (mean): 35.279515363276005 Loss (std): 19.67008875040439 Loss ratio: 0.557549857129836 Tokens per Sec: 2664.1851727379853
Mean loss per sample: 40.0508794835963 Std loss per sample: 16.990216487631088 ratio: 0.4242158151505711
Epoch ended with duration 0:00:11.730649
Train perplexity: 225.62460128100523
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix npe in[0m
Epoch Step: 5 / 8 Loss (mean): 46.954824000597 Loss (std): 17.646238884274847 Loss ratio: 0.37581311952208546 Tokens per Sec: 4314.762769063015
Mean loss per sample: 47.84957407537054 Std loss per sample: 20.146904836874853 ratio: 0.42104669113961884
Epoch ended with duration 0:00:01.045781
b'BLEU = 0.00, 13.8/1.4/0.2/0.0 (BP=0.385, ratio=0.511, hyp_len=1592, ref_len=3113)\n'
Validation perplexity: 654.8946310099835
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 24 / 1000
Epoch Step: 5 / 67 Loss (mean): 36.28263731300831 Loss (std): 17.12126745706346 Loss ratio: 0.47188596874475336 Tokens per Sec: 2769.0356593587812
Epoch Step: 10 / 67 Loss (mean): 44.748888328671455 Loss (std): 15.917362575866076 Loss ratio: 0.3557040894280165 Tokens per Sec: 2466.3074689987675
Epoch Step: 15 / 67 Loss (mean): 42.28713200986385 Loss (std): 19.99333821419368 Loss ratio: 0.4727995790665126 Tokens per Sec: 2333.3537061863403
Epoch Step: 20 / 67 Loss (mean): 33.366432547569275 Loss (std): 18.03295765156001 Loss ratio: 0.5404520733779704 Tokens per Sec: 2893.6632234372087
Epoch Step: 25 / 67 Loss (mean): 36.4679339826107 Loss (std): 13.38014037796277 Loss ratio: 0.36690151913576813 Tokens per Sec: 2698.7132135813717
Epoch Step: 30 / 67 Loss (mean): 35.976251006126404 Loss (std): 13.978912956370333 Loss ratio: 0.3885594681332933 Tokens per Sec: 2714.8410627825797
Epoch Step: 35 / 67 Loss (mean): 36.13938622176647 Loss (std): 15.45050036830456 Loss ratio: 0.42752525661320845 Tokens per Sec: 2520.553682386421
Epoch Step: 40 / 67 Loss (mean): 42.40122051537037 Loss (std): 18.685740485370907 Loss ratio: 0.44068874099030614 Tokens per Sec: 3242.4383979044133
Epoch Step: 45 / 67 Loss (mean): 36.953821554780006 Loss (std): 13.185443243641217 Loss ratio: 0.35680865168695036 Tokens per Sec: 2410.711281546566
Epoch Step: 50 / 67 Loss (mean): 28.49400344491005 Loss (std): 19.069470809219922 Loss ratio: 0.6692450517207453 Tokens per Sec: 2609.221181575642
Epoch Step: 55 / 67 Loss (mean): 38.01862080395222 Loss (std): 19.01152363256372 Loss ratio: 0.5000582143839205 Tokens per Sec: 2924.648933596821
Epoch Step: 60 / 67 Loss (mean): 40.34497880935669 Loss (std): 12.776448006562791 Loss ratio: 0.3166800029053359 Tokens per Sec: 2294.9482813420645
Epoch Step: 65 / 67 Loss (mean): 40.52708185464144 Loss (std): 16.054112014276466 Loss ratio: 0.3961329382623151 Tokens per Sec: 3394.4828130690175
Mean loss per sample: 39.411633423109095 Std loss per sample: 16.799308833293292 ratio: 0.4262525395215663
Epoch ended with duration 0:00:11.681482
Train perplexity: 206.93045122590016
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix npe in method_1[0m
Epoch Step: 5 / 8 Loss (mean): 47.077229738235474 Loss (std): 17.86109568581374 Loss ratio: 0.3793998879102949 Tokens per Sec: 4326.656139180803
Mean loss per sample: 47.98359011919772 Std loss per sample: 20.45477385367088 ratio: 0.42628685771236496
Epoch ended with duration 0:00:01.044441
b'BLEU = 0.00, 13.3/1.6/0.2/0.0 (BP=0.384, ratio=0.511, hyp_len=1590, ref_len=3113)\n'
Validation perplexity: 666.8972115380498
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 25 / 1000
Epoch Step: 5 / 67 Loss (mean): 39.18716952204704 Loss (std): 17.343208579216842 Loss ratio: 0.44257364823094464 Tokens per Sec: 2751.8447128469647
Epoch Step: 10 / 67 Loss (mean): 39.950231805443764 Loss (std): 15.886036685002955 Loss ratio: 0.3976456698015521 Tokens per Sec: 2717.7229057296486
Epoch Step: 15 / 67 Loss (mean): 38.93793661892414 Loss (std): 12.137976742351476 Loss ratio: 0.31172624428312223 Tokens per Sec: 2438.791530393677
Epoch Step: 20 / 67 Loss (mean): 35.76932179927826 Loss (std): 12.325923341342202 Loss ratio: 0.34459482934873287 Tokens per Sec: 2278.5968398548644
Epoch Step: 25 / 67 Loss (mean): 38.39935581386089 Loss (std): 13.933541562604141 Loss ratio: 0.36285873206171326 Tokens per Sec: 2743.570190611415
Epoch Step: 30 / 67 Loss (mean): 41.92041766643524 Loss (std): 18.079504745106025 Loss ratio: 0.43128159859871545 Tokens per Sec: 2689.1781567876847
Epoch Step: 35 / 67 Loss (mean): 39.87961992621422 Loss (std): 17.379011156184756 Loss ratio: 0.4357867800229697 Tokens per Sec: 2686.4351238357367
Epoch Step: 40 / 67 Loss (mean): 41.9508603066206 Loss (std): 17.883042064294965 Loss ratio: 0.4262854667004934 Tokens per Sec: 3507.164639621704
Epoch Step: 45 / 67 Loss (mean): 36.1660048738122 Loss (std): 17.058696883163616 Loss ratio: 0.47167766920022225 Tokens per Sec: 2805.1875333811745
Epoch Step: 50 / 67 Loss (mean): 35.5135036110878 Loss (std): 15.1583100656678 Loss ratio: 0.4268322898148289 Tokens per Sec: 2774.697325028588
Epoch Step: 55 / 67 Loss (mean): 36.17768478393555 Loss (std): 13.672280176875867 Loss ratio: 0.37792026379053834 Tokens per Sec: 2531.1442753750807
Epoch Step: 60 / 67 Loss (mean): 39.94214886426926 Loss (std): 12.616285814184963 Loss ratio: 0.3158639725933979 Tokens per Sec: 2813.128815129826
Epoch Step: 65 / 67 Loss (mean): 39.9197216629982 Loss (std): 25.099762837882775 Loss ratio: 0.6287559580143034 Tokens per Sec: 2921.1754545863814
Mean loss per sample: 39.27542992438501 Std loss per sample: 16.7396576086155 ratio: 0.4262119508518051
Epoch ended with duration 0:00:11.715905
Train perplexity: 203.15199808376326
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix npe in method_1[0m
Epoch Step: 5 / 8 Loss (mean): 47.025565922260284 Loss (std): 17.809398802635723 Loss ratio: 0.3787173732704696 Tokens per Sec: 4161.32051862304
Mean loss per sample: 48.76505774943555 Std loss per sample: 20.588688133210862 ratio: 0.42220165592747966
Epoch ended with duration 0:00:01.079624
b'BLEU = 0.00, 13.6/1.6/0.2/0.0 (BP=0.381, ratio=0.509, hyp_len=1585, ref_len=3113)\n'
Validation perplexity: 741.3988871501616
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved checkpoint_commit_msg_generator!
Epoch 26 / 1000
Epoch Step: 5 / 67 Loss (mean): 40.175350323319435 Loss (std): 16.19610462797627 Loss ratio: 0.403135367772397 Tokens per Sec: 2673.996769845414
Epoch Step: 10 / 67 Loss (mean): 43.071205735206604 Loss (std): 16.606841578301292 Loss ratio: 0.38556713922514557 Tokens per Sec: 3391.0298241729533
Epoch Step: 15 / 67 Loss (mean): 39.36543694138527 Loss (std): 14.866573443037037 Loss ratio: 0.37765549167339896 Tokens per Sec: 2483.109868539054
Epoch Step: 20 / 67 Loss (mean): 38.99425959587097 Loss (std): 15.568503720030787 Loss ratio: 0.39925116879714534 Tokens per Sec: 2404.212221644478
Epoch Step: 25 / 67 Loss (mean): 37.86463150382042 Loss (std): 16.479269534319457 Loss ratio: 0.43521536800527827 Tokens per Sec: 2264.729910271655
Epoch Step: 30 / 67 Loss (mean): 35.57191218435764 Loss (std): 13.834905123354622 Loss ratio: 0.3889277880720275 Tokens per Sec: 2756.6039427450287
Epoch Step: 35 / 67 Loss (mean): 44.20679393410683 Loss (std): 15.713378379144736 Loss ratio: 0.3554516620808687 Tokens per Sec: 2408.969200026444
Epoch Step: 40 / 67 Loss (mean): 41.86277201771736 Loss (std): 11.763486857214883 Loss ratio: 0.28100114469811704 Tokens per Sec: 3322.629784725743
Epoch Step: 45 / 67 Loss (mean): 39.7757188975811 Loss (std): 13.596558685011793 Loss ratio: 0.3418306208373432 Tokens per Sec: 3203.9473568157046
Epoch Step: 50 / 67 Loss (mean): 38.39220583438873 Loss (std): 14.17276567383158 Loss ratio: 0.36915736842441926 Tokens per Sec: 2656.8034043268526
Epoch Step: 55 / 67 Loss (mean): 38.83784631639719 Loss (std): 12.203342697407232 Loss ratio: 0.31421265221534767 Tokens per Sec: 2336.7319322789317
Epoch Step: 60 / 67 Loss (mean): 38.301553443074226 Loss (std): 14.000030721646326 Loss ratio: 0.3655212246796701 Tokens per Sec: 2743.2832552139043
Epoch Step: 65 / 67 Loss (mean): 37.802007749676704 Loss (std): 16.05917525109456 Loss ratio: 0.4248233415917413 Tokens per Sec: 3097.980860573893
Mean loss per sample: 38.860003078257705 Std loss per sample: 16.610793765153048 ratio: 0.4274521989023423
Epoch ended with duration 0:00:11.678362
Train perplexity: 192.04838091055987
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix the to use[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix npe in method_1[0m
Epoch Step: 5 / 8 Loss (mean): 47.15331192314625 Loss (std): 17.61536985516953 Loss ratio: 0.3735765132230857 Tokens per Sec: 4325.400823448122
Mean loss per sample: 48.106646541689265 Std loss per sample: 20.288859449931085 ratio: 0.4217475319621113
Epoch ended with duration 0:00:01.042459
b'BLEU = 0.00, 14.0/1.3/0.1/0.0 (BP=0.480, ratio=0.577, hyp_len=1796, ref_len=3113)\n'
Validation perplexity: 678.1118723509293
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 27 / 1000
Epoch Step: 5 / 67 Loss (mean): 35.30435083806515 Loss (std): 16.879742705309518 Loss ratio: 0.4781207501232336 Tokens per Sec: 2520.5088459689046
Epoch Step: 10 / 67 Loss (mean): 38.03712999820709 Loss (std): 13.579370922553961 Loss ratio: 0.35700303685357004 Tokens per Sec: 3257.800278426701
Epoch Step: 15 / 67 Loss (mean): 40.22809873521328 Loss (std): 19.992918779259295 Loss ratio: 0.49698890595987044 Tokens per Sec: 2474.840027839187
Epoch Step: 20 / 67 Loss (mean): 33.74381475150585 Loss (std): 15.011889352659713 Loss ratio: 0.44487825289491884 Tokens per Sec: 2743.3895100012733
Epoch Step: 25 / 67 Loss (mean): 34.73261517286301 Loss (std): 15.063192232036261 Loss ratio: 0.43369012546470465 Tokens per Sec: 2749.0969862054544
Epoch Step: 30 / 67 Loss (mean): 35.358814902603626 Loss (std): 13.972912123933325 Loss ratio: 0.39517478632759373 Tokens per Sec: 2711.7639608106338
Epoch Step: 35 / 67 Loss (mean): 38.11661133915186 Loss (std): 16.2863167013085 Loss ratio: 0.42727609116133175 Tokens per Sec: 2611.4401117343023
Epoch Step: 40 / 67 Loss (mean): 38.15380135923624 Loss (std): 12.008463393959708 Loss ratio: 0.3147383213770575 Tokens per Sec: 2740.4256961983006
Epoch Step: 45 / 67 Loss (mean): 38.12892784178257 Loss (std): 15.390522710784131 Loss ratio: 0.40364425600026543 Tokens per Sec: 2990.0737194959506
Epoch Step: 50 / 67 Loss (mean): 38.681237168610096 Loss (std): 14.749907513157256 Loss ratio: 0.38131943528235535 Tokens per Sec: 2562.4727525530493
Epoch Step: 55 / 67 Loss (mean): 35.9272498190403 Loss (std): 16.9324069743008 Loss ratio: 0.47129705333936145 Tokens per Sec: 2230.6015734612834
Epoch Step: 60 / 67 Loss (mean): 38.03439602255821 Loss (std): 14.69733818803951 Loss ratio: 0.3864222841693743 Tokens per Sec: 2791.018490629542
Epoch Step: 65 / 67 Loss (mean): 43.396510392427444 Loss (std): 20.416394108784313 Loss ratio: 0.47046165519213984 Tokens per Sec: 2828.882273311907
Mean loss per sample: 38.38173976595056 Std loss per sample: 16.547210397726435 ratio: 0.4311219475362577
Epoch ended with duration 0:00:11.663050
Train perplexity: 180.01468565885705
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix the to use[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix the to use[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix the to use[0m
Epoch Step: 5 / 8 Loss (mean): 51.5951102823019 Loss (std): 19.113071189760987 Loss ratio: 0.3704434603431235 Tokens per Sec: 4120.136362906225
Mean loss per sample: 49.311227753514146 Std loss per sample: 20.886768212489624 ratio: 0.423570232663719
Epoch ended with duration 0:00:01.072022
b'BLEU = 0.00, 14.1/1.4/0.2/0.0 (BP=0.408, ratio=0.527, hyp_len=1641, ref_len=3113)\n'
Validation perplexity: 798.3559958701353
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 28 / 1000
Epoch Step: 5 / 67 Loss (mean): 38.355563431978226 Loss (std): 15.229653181546503 Loss ratio: 0.39706503617279854 Tokens per Sec: 2508.5370406214315
Epoch Step: 10 / 67 Loss (mean): 38.37279784679413 Loss (std): 12.16911314024914 Loss ratio: 0.31712863859536927 Tokens per Sec: 2692.185334778471
Epoch Step: 15 / 67 Loss (mean): 39.10713443160057 Loss (std): 16.867341738588248 Loss ratio: 0.43131111455096977 Tokens per Sec: 3007.315249449386
Epoch Step: 20 / 67 Loss (mean): 38.435715943574905 Loss (std): 17.939112298294862 Loss ratio: 0.4667302756797912 Tokens per Sec: 2129.0520246059205
Epoch Step: 25 / 67 Loss (mean): 37.5313777242388 Loss (std): 16.15323191606716 Loss ratio: 0.430392724582422 Tokens per Sec: 2516.091704143229
Epoch Step: 30 / 67 Loss (mean): 40.714891105890274 Loss (std): 17.760853261414283 Loss ratio: 0.4362249972675181 Tokens per Sec: 2874.894462688641
Epoch Step: 35 / 67 Loss (mean): 40.04333031177521 Loss (std): 15.860158875326439 Loss ratio: 0.3960749206382211 Tokens per Sec: 2353.1992043255873
Epoch Step: 40 / 67 Loss (mean): 41.11011624336243 Loss (std): 18.804226899339753 Loss ratio: 0.457411182883139 Tokens per Sec: 2881.73007988608
Epoch Step: 45 / 67 Loss (mean): 36.71855394542217 Loss (std): 15.112039079248285 Loss ratio: 0.41156411283817335 Tokens per Sec: 2344.971493795725
Epoch Step: 50 / 67 Loss (mean): 45.22914110869169 Loss (std): 16.699515263074197 Loss ratio: 0.3692202605161796 Tokens per Sec: 2851.3629915228153
Epoch Step: 55 / 67 Loss (mean): 44.197094827890396 Loss (std): 18.263756462292765 Loss ratio: 0.4132343207944857 Tokens per Sec: 3349.2826124343746
Epoch Step: 60 / 67 Loss (mean): 41.33762552589178 Loss (std): 19.840874642987913 Loss ratio: 0.4799713188789859 Tokens per Sec: 2424.191775335983
Epoch Step: 65 / 67 Loss (mean): 37.830867916345596 Loss (std): 13.507735139297443 Loss ratio: 0.35705591447615587 Tokens per Sec: 3053.5676542519127
Mean loss per sample: 38.69477684264221 Std loss per sample: 16.66036403868781 ratio: 0.43055847321305246
Epoch ended with duration 0:00:11.775648
Train perplexity: 187.8027597232433
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix `` add a test for the optimizing[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix npe in[0m
Epoch Step: 5 / 8 Loss (mean): 47.30935621261597 Loss (std): 17.98322872925648 Loss ratio: 0.38011992064396133 Tokens per Sec: 4350.831786415773
Mean loss per sample: 48.29745104860087 Std loss per sample: 20.693055282620236 ratio: 0.4284502563457682
Epoch ended with duration 0:00:01.042722
b'BLEU = 0.00, 13.3/1.7/0.2/0.0 (BP=0.372, ratio=0.503, hyp_len=1566, ref_len=3113)\n'
Validation perplexity: 695.8747631315144
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 29 / 1000
Epoch Step: 5 / 67 Loss (mean): 33.201353408396244 Loss (std): 18.169582247569892 Loss ratio: 0.5472542647305159 Tokens per Sec: 2799.6446540335305
Epoch Step: 10 / 67 Loss (mean): 38.115086138248444 Loss (std): 14.044601754391053 Loss ratio: 0.36847881448960734 Tokens per Sec: 2803.2981283682007
Epoch Step: 15 / 67 Loss (mean): 34.76646997779608 Loss (std): 15.609222722427594 Loss ratio: 0.44897347163507156 Tokens per Sec: 2827.6701883003934
Epoch Step: 20 / 67 Loss (mean): 37.014975517988205 Loss (std): 15.880247741977985 Loss ratio: 0.42902224085655943 Tokens per Sec: 2599.909005102681
Epoch Step: 25 / 67 Loss (mean): 36.22359699755907 Loss (std): 17.52123196408242 Loss ratio: 0.48369663468989815 Tokens per Sec: 2708.1359546365147
Epoch Step: 30 / 67 Loss (mean): 33.654066897928715 Loss (std): 15.391883763240788 Loss ratio: 0.45735583190951884 Tokens per Sec: 2325.13583043307
Epoch Step: 35 / 67 Loss (mean): 34.340554267168045 Loss (std): 15.35118657803623 Loss ratio: 0.4470279209416556 Tokens per Sec: 2305.1442549206495
Epoch Step: 40 / 67 Loss (mean): 38.91998216509819 Loss (std): 16.131425918243895 Loss ratio: 0.4144767037614391 Tokens per Sec: 2608.720954407735
Epoch Step: 45 / 67 Loss (mean): 31.92313228547573 Loss (std): 17.668306400868648 Loss ratio: 0.5534640599446223 Tokens per Sec: 2700.064160336131
Epoch Step: 50 / 67 Loss (mean): 42.274877682328224 Loss (std): 14.670051344007346 Loss ratio: 0.3470158199923008 Tokens per Sec: 3063.490195890378
Epoch Step: 55 / 67 Loss (mean): 36.12741568684578 Loss (std): 17.05824432419753 Loss ratio: 0.47216896088165383 Tokens per Sec: 3369.8443709227704
Epoch Step: 60 / 67 Loss (mean): 38.68072625994682 Loss (std): 12.178169190646463 Loss ratio: 0.3148381731202584 Tokens per Sec: 2687.0198727948364
Epoch Step: 65 / 67 Loss (mean): 40.125616043806076 Loss (std): 16.348750218636 Loss ratio: 0.40743923285284106 Tokens per Sec: 2991.863416685833
Mean loss per sample: 37.85418740438845 Std loss per sample: 16.248518360240222 ratio: 0.4292396554880617
Epoch ended with duration 0:00:11.672017
Train perplexity: 167.61350283135968
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix the to use[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix npe in method_1[0m
Epoch Step: 5 / 8 Loss (mean): 47.438439294695854 Loss (std): 18.191467321102554 Loss ratio: 0.383475249008383 Tokens per Sec: 4339.996876269016
Mean loss per sample: 48.46560556380475 Std loss per sample: 20.85518473005904 ratio: 0.4303089683384495
Epoch ended with duration 0:00:01.041583
b'BLEU = 0.00, 13.6/1.4/0.1/0.0 (BP=0.419, ratio=0.535, hyp_len=1664, ref_len=3113)\n'
Validation perplexity: 711.9143824803346
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 30 / 1000
Epoch Step: 5 / 67 Loss (mean): 37.32768201828003 Loss (std): 14.390461541018706 Loss ratio: 0.3855171487469123 Tokens per Sec: 2613.2555033199046
Epoch Step: 10 / 67 Loss (mean): 36.070697262883186 Loss (std): 16.606252301591745 Loss ratio: 0.4603806846473026 Tokens per Sec: 2819.811849127812
Epoch Step: 15 / 67 Loss (mean): 36.246593810617924 Loss (std): 16.136374172459764 Loss ratio: 0.4451831876056956 Tokens per Sec: 2450.5401303953977
Epoch Step: 20 / 67 Loss (mean): 36.37508516013622 Loss (std): 13.960068756387143 Loss ratio: 0.3837810604409555 Tokens per Sec: 2724.444989040437
Epoch Step: 25 / 67 Loss (mean): 38.124543249607086 Loss (std): 13.226071220898687 Loss ratio: 0.346917499687947 Tokens per Sec: 2773.489333197545
Epoch Step: 30 / 67 Loss (mean): 42.015165597200394 Loss (std): 14.287957374045252 Loss ratio: 0.3400666680937063 Tokens per Sec: 2680.548480146868
Epoch Step: 35 / 67 Loss (mean): 34.28079751878977 Loss (std): 12.207847544365404 Loss ratio: 0.3561132887201389 Tokens per Sec: 3233.369623708734
Epoch Step: 40 / 67 Loss (mean): 38.481542214751244 Loss (std): 14.380613199182411 Loss ratio: 0.37370158188904 Tokens per Sec: 2628.0423397304126
Epoch Step: 45 / 67 Loss (mean): 35.76711863279343 Loss (std): 14.851488222498716 Loss ratio: 0.41522741529651724 Tokens per Sec: 2571.0837581794794
Epoch Step: 50 / 67 Loss (mean): 37.421910129487514 Loss (std): 11.900225212495714 Loss ratio: 0.31800154431771344 Tokens per Sec: 2792.1100424899105
Epoch Step: 55 / 67 Loss (mean): 39.367460772395134 Loss (std): 19.198064751669136 Loss ratio: 0.48766327253524605 Tokens per Sec: 2734.315464726019
Epoch Step: 60 / 67 Loss (mean): 37.965722158551216 Loss (std): 15.6636207720321 Loss ratio: 0.41257270720725914 Tokens per Sec: 2549.182899793178
Epoch Step: 65 / 67 Loss (mean): 33.503194347023964 Loss (std): 14.859852822196236 Loss ratio: 0.443535403468661 Tokens per Sec: 2617.8551562116486
Mean loss per sample: 37.78915385567298 Std loss per sample: 16.364761023397246 ratio: 0.4330544442963371
Epoch ended with duration 0:00:11.676030
Train perplexity: 166.145137731909
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix the test[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix npe in[0m
Epoch Step: 5 / 8 Loss (mean): 51.74515827000141 Loss (std): 19.12974989224004 Loss ratio: 0.3696915910938524 Tokens per Sec: 4098.191528324814
Mean loss per sample: 49.78735592912455 Std loss per sample: 21.09035388777249 ratio: 0.4236086350477407
Epoch ended with duration 0:00:01.088353
b'BLEU = 0.00, 13.8/1.5/0.2/0.0 (BP=0.360, ratio=0.495, hyp_len=1540, ref_len=3113)\n'
Validation perplexity: 851.5672745962693
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved checkpoint_commit_msg_generator!
Epoch 31 / 1000
Epoch Step: 5 / 67 Loss (mean): 40.598244816064835 Loss (std): 15.342418675670052 Loss ratio: 0.3779084230163324 Tokens per Sec: 2463.2495227995487
Epoch Step: 10 / 67 Loss (mean): 36.799982130527496 Loss (std): 13.81703433593883 Loss ratio: 0.3754630718822247 Tokens per Sec: 2807.9528169322252
Epoch Step: 15 / 67 Loss (mean): 35.192475602030754 Loss (std): 11.605178605662159 Loss ratio: 0.329763064607836 Tokens per Sec: 2605.000222426221
Epoch Step: 20 / 67 Loss (mean): 43.90009177476168 Loss (std): 18.382190716369646 Loss ratio: 0.4187278425449132 Tokens per Sec: 2446.298334359503
Epoch Step: 25 / 67 Loss (mean): 35.5880928337574 Loss (std): 17.962587285926915 Loss ratio: 0.5047358780880875 Tokens per Sec: 2761.024151176071
Epoch Step: 30 / 67 Loss (mean): 34.507471814751625 Loss (std): 14.445356793332111 Loss ratio: 0.41861533266997714 Tokens per Sec: 3289.3744558452436
Epoch Step: 35 / 67 Loss (mean): 35.85560353845358 Loss (std): 16.03219834493676 Loss ratio: 0.44713229628788487 Tokens per Sec: 2177.7522766484612
Epoch Step: 40 / 67 Loss (mean): 38.39518017321825 Loss (std): 15.405597330021491 Loss ratio: 0.40123779236143137 Tokens per Sec: 3294.5159781325615
Epoch Step: 45 / 67 Loss (mean): 36.052776373922825 Loss (std): 17.02407253579049 Loss ratio: 0.4721986556381854 Tokens per Sec: 3360.0099231643867
Epoch Step: 50 / 67 Loss (mean): 46.316059835255146 Loss (std): 17.963225993920013 Loss ratio: 0.3878401154548698 Tokens per Sec: 2964.0987528054775
Epoch Step: 55 / 67 Loss (mean): 32.925578497350216 Loss (std): 18.019207644132045 Loss ratio: 0.547270798767657 Tokens per Sec: 3023.546523454708
Epoch Step: 60 / 67 Loss (mean): 39.914246290922165 Loss (std): 17.26146607241086 Loss ratio: 0.4324637861528829 Tokens per Sec: 2270.2115689546613
Epoch Step: 65 / 67 Loss (mean): 32.90987315773964 Loss (std): 15.588094249164117 Loss ratio: 0.47366011331764 Tokens per Sec: 2489.8958620023627
Mean loss per sample: 37.19561411515123 Std loss per sample: 16.074158148203892 ratio: 0.43215197626368157
Epoch ended with duration 0:00:11.656405
Train perplexity: 153.32440526286507
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix npe in[0m
Epoch Step: 5 / 8 Loss (mean): 47.583875209093094 Loss (std): 18.33241968234728 Loss ratio: 0.38526537827764024 Tokens per Sec: 4074.871813672475
Mean loss per sample: 50.33919167127765 Std loss per sample: 21.920245629082583 ratio: 0.4354508863039562
Epoch ended with duration 0:00:01.094188
b'BLEU = 0.00, 13.0/1.5/0.2/0.0 (BP=0.382, ratio=0.509, hyp_len=1586, ref_len=3113)\n'
Validation perplexity: 917.6922837258691
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 32 / 1000
Epoch Step: 5 / 67 Loss (mean): 31.933616928756237 Loss (std): 17.61046362302786 Loss ratio: 0.5514709988009416 Tokens per Sec: 3138.842634260014
Epoch Step: 10 / 67 Loss (mean): 37.92324389517307 Loss (std): 19.368152386899194 Loss ratio: 0.5107198223980096 Tokens per Sec: 3181.9034325169823
Epoch Step: 15 / 67 Loss (mean): 41.64325775206089 Loss (std): 15.161692969296748 Loss ratio: 0.36408517939609103 Tokens per Sec: 2550.195816752561
Epoch Step: 20 / 67 Loss (mean): 37.029846988618374 Loss (std): 13.850550181048284 Loss ratio: 0.3740374672708056 Tokens per Sec: 2551.452096039342
Epoch Step: 25 / 67 Loss (mean): 33.69862377643585 Loss (std): 14.469277650916833 Loss ratio: 0.42937295442416973 Tokens per Sec: 2684.3036037282004
Epoch Step: 30 / 67 Loss (mean): 37.865058571100235 Loss (std): 15.50976952072621 Loss ratio: 0.40960637870407884 Tokens per Sec: 2497.9349259758596
Epoch Step: 35 / 67 Loss (mean): 26.335960172116756 Loss (std): 18.364611060342575 Loss ratio: 0.6973207333365479 Tokens per Sec: 3195.6509833184955
Epoch Step: 40 / 67 Loss (mean): 36.99326888471842 Loss (std): 14.623951009605706 Loss ratio: 0.3953138354758027 Tokens per Sec: 3176.137144443575
Epoch Step: 45 / 67 Loss (mean): 40.067660585045815 Loss (std): 18.682408993860758 Loss ratio: 0.4662715197511049 Tokens per Sec: 2482.729931231122
Epoch Step: 50 / 67 Loss (mean): 36.57572200894356 Loss (std): 12.929013746737686 Loss ratio: 0.35348622082091125 Tokens per Sec: 2382.9301805446185
Epoch Step: 55 / 67 Loss (mean): 36.03364709019661 Loss (std): 15.570645278061326 Loss ratio: 0.4321140527098493 Tokens per Sec: 2362.628046344198
Epoch Step: 60 / 67 Loss (mean): 37.89898966252804 Loss (std): 13.072767035209763 Loss ratio: 0.3449370854372731 Tokens per Sec: 2875.319556362779
Epoch Step: 65 / 67 Loss (mean): 36.76069401204586 Loss (std): 17.700346873947023 Loss ratio: 0.48150197785022547 Tokens per Sec: 2510.1242586979265
Mean loss per sample: 36.7893916164493 Std loss per sample: 15.950956612629986 ratio: 0.4335748951471647
Epoch ended with duration 0:00:11.641162
Train perplexity: 145.1248177860959
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: add a test for method_1[0m
Epoch Step: 5 / 8 Loss (mean): 47.76270116865635 Loss (std): 18.17494751524797 Loss ratio: 0.380525955830468 Tokens per Sec: 4222.9581432419645
Mean loss per sample: 49.569854959112696 Std loss per sample: 21.095429870240142 ratio: 0.42556973159676464
Epoch ended with duration 0:00:01.057773
b'BLEU = 0.00, 11.4/1.4/0.2/0.0 (BP=0.560, ratio=0.633, hyp_len=1970, ref_len=3113)\n'
Validation perplexity: 826.8334026397288
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 33 / 1000
Epoch Step: 5 / 67 Loss (mean): 35.55691111832857 Loss (std): 14.874980046035526 Loss ratio: 0.4183428643881245 Tokens per Sec: 3064.9340585145383
Epoch Step: 10 / 67 Loss (mean): 32.307559333741665 Loss (std): 14.612491041792877 Loss ratio: 0.4522932509646976 Tokens per Sec: 3034.372470182137
Epoch Step: 15 / 67 Loss (mean): 32.92327221482992 Loss (std): 12.481959001765258 Loss ratio: 0.3791226740865356 Tokens per Sec: 2454.837598023777
Epoch Step: 20 / 67 Loss (mean): 38.75395454466343 Loss (std): 17.182477143861874 Loss ratio: 0.4433735175092723 Tokens per Sec: 2713.735939739035
Epoch Step: 25 / 67 Loss (mean): 36.149997763335705 Loss (std): 15.453759958135759 Loss ratio: 0.4274899284726755 Tokens per Sec: 2561.1679952772533
Epoch Step: 30 / 67 Loss (mean): 39.28784395754337 Loss (std): 17.449964584115776 Loss ratio: 0.4441568390205677 Tokens per Sec: 2395.3016357489246
Epoch Step: 35 / 67 Loss (mean): 33.347207084298134 Loss (std): 14.570786300013255 Loss ratio: 0.436941728378628 Tokens per Sec: 2838.584949436672
Epoch Step: 40 / 67 Loss (mean): 36.95214147865772 Loss (std): 11.86079333912784 Loss ratio: 0.3209771576020357 Tokens per Sec: 2696.3533434152564
Epoch Step: 45 / 67 Loss (mean): 33.7234792560339 Loss (std): 16.47096974323858 Loss ratio: 0.48841252760987136 Tokens per Sec: 2749.484824520662
Epoch Step: 50 / 67 Loss (mean): 41.21927759051323 Loss (std): 14.473331151459673 Loss ratio: 0.3511301506844158 Tokens per Sec: 2393.110839035217
Epoch Step: 55 / 67 Loss (mean): 31.72579261660576 Loss (std): 17.689047434913427 Loss ratio: 0.5575604571548107 Tokens per Sec: 2668.967436366858
Epoch Step: 60 / 67 Loss (mean): 45.24863060563803 Loss (std): 16.65123619695008 Loss ratio: 0.36799425693283455 Tokens per Sec: 2827.296330440719
Epoch Step: 65 / 67 Loss (mean): 35.90765680372715 Loss (std): 13.730433624155516 Loss ratio: 0.3823817772127732 Tokens per Sec: 2991.8057131341275
Mean loss per sample: 36.82423458231261 Std loss per sample: 16.159421741480948 ratio: 0.4388257332371717
Epoch ended with duration 0:00:11.687914
Train perplexity: 145.8105866618081
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix the test[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix broken[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix the to use[0m
Epoch Step: 5 / 8 Loss (mean): 47.75437577068806 Loss (std): 18.369788702682943 Loss ratio: 0.3846723657512122 Tokens per Sec: 4312.867159459092
Mean loss per sample: 49.259633365224616 Std loss per sample: 21.108544203854898 ratio: 0.4285160640021472
Epoch ended with duration 0:00:01.060636
b'BLEU = 0.00, 12.9/1.7/0.0/0.0 (BP=0.432, ratio=0.544, hyp_len=1692, ref_len=3113)\n'
Validation perplexity: 792.7933891168805
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 34 / 1000
Epoch Step: 5 / 67 Loss (mean): 35.402482986450195 Loss (std): 12.59179572988937 Loss ratio: 0.35567549696185724 Tokens per Sec: 2870.869531950111
Epoch Step: 10 / 67 Loss (mean): 33.309378154575825 Loss (std): 13.059009969152163 Loss ratio: 0.3920520493823209 Tokens per Sec: 3144.8226620080854
Epoch Step: 15 / 67 Loss (mean): 38.532330587506294 Loss (std): 16.024630500945555 Loss ratio: 0.41587493558309124 Tokens per Sec: 3154.318969693902
Epoch Step: 20 / 67 Loss (mean): 32.64732516556978 Loss (std): 14.954078505018094 Loss ratio: 0.45804911824105043 Tokens per Sec: 2893.7413730239728
Epoch Step: 25 / 67 Loss (mean): 38.27668409794569 Loss (std): 16.339684699203662 Loss ratio: 0.42688349537781967 Tokens per Sec: 2520.667533272297
Epoch Step: 30 / 67 Loss (mean): 37.478973761200905 Loss (std): 18.817509351991298 Loss ratio: 0.5020817664829343 Tokens per Sec: 2386.1850291432856
Epoch Step: 35 / 67 Loss (mean): 36.68642500042915 Loss (std): 13.90808037824168 Loss ratio: 0.3791069960640478 Tokens per Sec: 2449.1268909839364
Epoch Step: 40 / 67 Loss (mean): 30.516118429601192 Loss (std): 17.036004404890146 Loss ratio: 0.5582624947596517 Tokens per Sec: 3207.600213776091
Epoch Step: 45 / 67 Loss (mean): 35.226919300854206 Loss (std): 15.881513990465917 Loss ratio: 0.45083459767884987 Tokens per Sec: 2135.5511197852534
Epoch Step: 50 / 67 Loss (mean): 34.12082490324974 Loss (std): 12.506097881927175 Loss ratio: 0.36652390196862056 Tokens per Sec: 2837.4688631757494
Epoch Step: 55 / 67 Loss (mean): 35.83703379333019 Loss (std): 15.169127622294404 Loss ratio: 0.423280780149768 Tokens per Sec: 2819.4756331219473
Epoch Step: 60 / 67 Loss (mean): 34.84748028963804 Loss (std): 16.676117649435927 Loss ratio: 0.47854586646813024 Tokens per Sec: 3042.8861515856497
Epoch Step: 65 / 67 Loss (mean): 34.453115567564964 Loss (std): 15.737466910995398 Loss ratio: 0.4567792100001269 Tokens per Sec: 2705.5248952564616
Mean loss per sample: 36.22252224523363 Std loss per sample: 15.888373200711179 ratio: 0.4386324368342921
Epoch ended with duration 0:00:11.631103
Train perplexity: 134.4102809510748
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix the to use[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix broken[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix npe in method_1[0m
Epoch Step: 5 / 8 Loss (mean): 47.908215656876564 Loss (std): 18.36870269639349 Loss ratio: 0.38341446126802087 Tokens per Sec: 4310.7298547564515
Mean loss per sample: 48.942527984009416 Std loss per sample: 21.187100973781934 ratio: 0.43289756059810025
Epoch ended with duration 0:00:01.045474
b'BLEU = 0.00, 12.4/1.3/0.1/0.0 (BP=0.529, ratio=0.611, hyp_len=1901, ref_len=3113)\n'
Validation perplexity: 759.445973556304
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 35 / 1000
Epoch Step: 5 / 67 Loss (mean): 31.853563860058784 Loss (std): 14.747147532693493 Loss ratio: 0.46296695708780505 Tokens per Sec: 2604.880581767526
Epoch Step: 10 / 67 Loss (mean): 34.39469240605831 Loss (std): 14.273421884039022 Loss ratio: 0.4149890836507347 Tokens per Sec: 2544.4935367959306
Epoch Step: 15 / 67 Loss (mean): 35.87687107920647 Loss (std): 11.280624945236346 Loss ratio: 0.3144261081277619 Tokens per Sec: 2879.656183977939
Epoch Step: 20 / 67 Loss (mean): 36.39014468342066 Loss (std): 13.791795423460593 Loss ratio: 0.37899809257268857 Tokens per Sec: 2668.6654417995906
Epoch Step: 25 / 67 Loss (mean): 35.70539507269859 Loss (std): 14.218192547906108 Loss ratio: 0.39820852055990164 Tokens per Sec: 2691.7123568518123
Epoch Step: 30 / 67 Loss (mean): 34.56764590740204 Loss (std): 14.754981142259135 Loss ratio: 0.42684367867525574 Tokens per Sec: 2666.6440533787604
Epoch Step: 35 / 67 Loss (mean): 33.91403131186962 Loss (std): 11.516626421301028 Loss ratio: 0.33958293885487767 Tokens per Sec: 2319.4560164179566
Epoch Step: 40 / 67 Loss (mean): 32.27138011157513 Loss (std): 14.51728799830128 Loss ratio: 0.4498502372104689 Tokens per Sec: 2839.151474178833
Epoch Step: 45 / 67 Loss (mean): 36.11450730264187 Loss (std): 11.833774629728143 Loss ratio: 0.3276737110258866 Tokens per Sec: 2990.683315857583
Epoch Step: 50 / 67 Loss (mean): 45.625498943030834 Loss (std): 18.485111839971765 Loss ratio: 0.40514870561860045 Tokens per Sec: 2838.480538228715
Epoch Step: 55 / 67 Loss (mean): 38.49516940116882 Loss (std): 14.041199364163278 Loss ratio: 0.36475224249141625 Tokens per Sec: 3181.406915765677
Epoch Step: 60 / 67 Loss (mean): 45.593284606933594 Loss (std): 17.78156594206929 Loss ratio: 0.3900040564167899 Tokens per Sec: 2409.738182211085
Epoch Step: 65 / 67 Loss (mean): 32.082609832286835 Loss (std): 15.764749565654338 Loss ratio: 0.49137989858260334 Tokens per Sec: 2622.693908489934
Mean loss per sample: 36.01957482694741 Std loss per sample: 15.84415244014614 ratio: 0.43987616500938304
Epoch ended with duration 0:00:11.682321
Train perplexity: 130.76975646103114
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix the to use[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix broken[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix method_1 ( )[0m
Epoch Step: 5 / 8 Loss (mean): 48.2005969285965 Loss (std): 18.612580799070496 Loss ratio: 0.3861483463917022 Tokens per Sec: 4320.726463535152
Mean loss per sample: 49.60297115122685 Std loss per sample: 21.56686699256128 ratio: 0.43478982190017174
Epoch ended with duration 0:00:01.062892
b'BLEU = 0.00, 13.4/1.7/0.1/0.0 (BP=0.412, ratio=0.530, hyp_len=1650, ref_len=3113)\n'
Validation perplexity: 830.5524353056213
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved checkpoint_commit_msg_generator!
Epoch 36 / 1000
Epoch Step: 5 / 67 Loss (mean): 39.43125208467245 Loss (std): 18.229809532772407 Loss ratio: 0.46231880980159445 Tokens per Sec: 2970.0133816421917
Epoch Step: 10 / 67 Loss (mean): 37.46072921156883 Loss (std): 13.55673962875992 Loss ratio: 0.36189203771754797 Tokens per Sec: 2557.214959671007
Epoch Step: 15 / 67 Loss (mean): 34.45505619049072 Loss (std): 14.61898492850284 Loss ratio: 0.4242914261314583 Tokens per Sec: 2466.568777398398
Epoch Step: 20 / 67 Loss (mean): 35.29645590484142 Loss (std): 14.247930418454352 Loss ratio: 0.40366461881800547 Tokens per Sec: 3190.3324344299954
Epoch Step: 25 / 67 Loss (mean): 37.10518407821655 Loss (std): 19.237076157509584 Loss ratio: 0.5184471290307693 Tokens per Sec: 2752.061754602648
Epoch Step: 30 / 67 Loss (mean): 34.671350851655006 Loss (std): 14.21019902935175 Loss ratio: 0.4098542075891871 Tokens per Sec: 2972.738963320546
Epoch Step: 35 / 67 Loss (mean): 32.42695938795805 Loss (std): 12.31679871749454 Loss ratio: 0.3798320579532492 Tokens per Sec: 2464.6269334871677
Epoch Step: 40 / 67 Loss (mean): 36.60801074653864 Loss (std): 14.872713443445337 Loss ratio: 0.4062693694672164 Tokens per Sec: 2713.807064194498
Epoch Step: 45 / 67 Loss (mean): 35.2520437091589 Loss (std): 14.187879568520902 Loss ratio: 0.4024697031915549 Tokens per Sec: 2500.907465841792
Epoch Step: 50 / 67 Loss (mean): 36.65418543666601 Loss (std): 14.707818454743661 Loss ratio: 0.40125890889478333 Tokens per Sec: 3103.483581710504
Epoch Step: 55 / 67 Loss (mean): 36.07941323518753 Loss (std): 11.143963774819195 Loss ratio: 0.3088731987456689 Tokens per Sec: 2229.7513999059593
Epoch Step: 60 / 67 Loss (mean): 36.69643200933933 Loss (std): 13.852808315838988 Loss ratio: 0.37749741752313726 Tokens per Sec: 2766.644420133418
Epoch Step: 65 / 67 Loss (mean): 36.39633633196354 Loss (std): 12.531015773923698 Loss ratio: 0.34429332830730175 Tokens per Sec: 3165.6363573805274
Mean loss per sample: 36.124312173688686 Std loss per sample: 16.054327252954273 ratio: 0.4444189048019444
Epoch ended with duration 0:00:11.718014
Train perplexity: 132.63607846371437
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix `` add a test for the optimizing compiler[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix broken[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix method_1 ( )[0m
Epoch Step: 5 / 8 Loss (mean): 48.108351051807404 Loss (std): 18.248851339740252 Loss ratio: 0.37932814034902684 Tokens per Sec: 4344.190408609678
Mean loss per sample: 49.134097058264935 Std loss per sample: 21.029092823381294 ratio: 0.4279938796564076
Epoch ended with duration 0:00:01.041989
b'BLEU = 0.00, 11.5/1.1/0.1/0.0 (BP=0.526, ratio=0.609, hyp_len=1895, ref_len=3113)\n'
Validation perplexity: 779.4201347060609
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 37 / 1000
Epoch Step: 5 / 67 Loss (mean): 31.33167389780283 Loss (std): 10.93436400652416 Loss ratio: 0.34898754666570636 Tokens per Sec: 2322.426382469433
Epoch Step: 10 / 67 Loss (mean): 43.20518507063389 Loss (std): 16.081960608806465 Loss ratio: 0.3722229307087775 Tokens per Sec: 2888.8384106288
Epoch Step: 15 / 67 Loss (mean): 37.30289767682552 Loss (std): 15.058689993718922 Loss ratio: 0.40368686969522355 Tokens per Sec: 2690.3049124708396
Epoch Step: 20 / 67 Loss (mean): 32.25095346570015 Loss (std): 13.998718490789697 Loss ratio: 0.4340559576223925 Tokens per Sec: 2400.5505839945527
Epoch Step: 25 / 67 Loss (mean): 48.21986582875252 Loss (std): 13.724857157530304 Loss ratio: 0.28463076206542354 Tokens per Sec: 2309.9931071030537
Epoch Step: 30 / 67 Loss (mean): 35.139810621738434 Loss (std): 13.854350821795855 Loss ratio: 0.39426367349928687 Tokens per Sec: 2407.6139130902734
Epoch Step: 35 / 67 Loss (mean): 34.69389207661152 Loss (std): 12.527955960220265 Loss ratio: 0.3610997559038883 Tokens per Sec: 3098.967728469993
Epoch Step: 40 / 67 Loss (mean): 33.71345762908459 Loss (std): 17.07337171580949 Loss ratio: 0.5064260066010049 Tokens per Sec: 2996.388530034253
Epoch Step: 45 / 67 Loss (mean): 34.31945814192295 Loss (std): 13.166431485807047 Loss ratio: 0.38364333817157753 Tokens per Sec: 3345.9986453331726
Epoch Step: 50 / 67 Loss (mean): 34.64515917003155 Loss (std): 14.825968627289415 Loss ratio: 0.4279376681321194 Tokens per Sec: 2963.7990567475827
Epoch Step: 55 / 67 Loss (mean): 33.9551200941205 Loss (std): 16.02515927049407 Loss ratio: 0.47195118809987374 Tokens per Sec: 3193.816348217952
Epoch Step: 60 / 67 Loss (mean): 35.92193894088268 Loss (std): 13.714066098379943 Loss ratio: 0.38177410526055966 Tokens per Sec: 2567.9784086001723
Epoch Step: 65 / 67 Loss (mean): 34.91531556844711 Loss (std): 15.228766120728 Loss ratio: 0.4361629237139188 Tokens per Sec: 2252.019770316614
Mean loss per sample: 35.437197711620875 Std loss per sample: 15.630139760723218 ratio: 0.44106590729654804
Epoch ended with duration 0:00:11.647483
Train perplexity: 120.8611946065523
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo in method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix broken[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix npe in method_1[0m
Epoch Step: 5 / 8 Loss (mean): 48.23474757373333 Loss (std): 18.661196312735697 Loss ratio: 0.386882843829742 Tokens per Sec: 4321.945455794463
Mean loss per sample: 49.346588171896386 Std loss per sample: 21.575981451998132 ratio: 0.4372334998488502
Epoch ended with duration 0:00:01.043198
b'BLEU = 0.00, 12.5/1.5/0.1/0.0 (BP=0.506, ratio=0.595, hyp_len=1851, ref_len=3113)\n'
Validation perplexity: 802.1908748704413
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 38 / 1000
Epoch Step: 5 / 67 Loss (mean): 32.45695348829031 Loss (std): 12.012650642975467 Loss ratio: 0.37011023376883917 Tokens per Sec: 2659.7458209802394
Epoch Step: 10 / 67 Loss (mean): 33.40452139079571 Loss (std): 13.851897877051407 Loss ratio: 0.4146713468814483 Tokens per Sec: 2462.539834077405
Epoch Step: 15 / 67 Loss (mean): 33.53134644031525 Loss (std): 16.045777046985176 Loss ratio: 0.47853065117877563 Tokens per Sec: 2555.46306637812
Epoch Step: 20 / 67 Loss (mean): 36.33176565170288 Loss (std): 13.470836388139134 Loss ratio: 0.3707729626266526 Tokens per Sec: 2890.7719774542607
Epoch Step: 25 / 67 Loss (mean): 33.8236813172698 Loss (std): 15.542430021138534 Loss ratio: 0.45951325863524 Tokens per Sec: 2401.026505863955
Epoch Step: 30 / 67 Loss (mean): 34.98128751665354 Loss (std): 11.103850349960949 Loss ratio: 0.3174225747029677 Tokens per Sec: 3386.9790488895105
Epoch Step: 35 / 67 Loss (mean): 36.2029065489769 Loss (std): 18.239168636858082 Loss ratio: 0.5038039863507457 Tokens per Sec: 2776.443661863195
Epoch Step: 40 / 67 Loss (mean): 35.30414368212223 Loss (std): 12.035975861674995 Loss ratio: 0.3409224698960742 Tokens per Sec: 3224.7630167987945
Epoch Step: 45 / 67 Loss (mean): 32.165798619389534 Loss (std): 14.05787424228131 Loss ratio: 0.43704415390473866 Tokens per Sec: 2811.764108940746
Epoch Step: 50 / 67 Loss (mean): 34.33348044753075 Loss (std): 14.63566595104687 Loss ratio: 0.4262797059975742 Tokens per Sec: 2593.375345471556
Epoch Step: 55 / 67 Loss (mean): 32.18359334766865 Loss (std): 13.750688891886035 Loss ratio: 0.4272577254920518 Tokens per Sec: 3069.60640999431
Epoch Step: 60 / 67 Loss (mean): 35.1667260825634 Loss (std): 14.783523828751878 Loss ratio: 0.42038385359056624 Tokens per Sec: 2275.520020428985
Epoch Step: 65 / 67 Loss (mean): 47.4540034532547 Loss (std): 18.960246679569458 Loss ratio: 0.3995499915670243 Tokens per Sec: 2041.750485588486
Mean loss per sample: 35.55262242210789 Std loss per sample: 15.791951350901762 ratio: 0.4441852745321471
Epoch ended with duration 0:00:11.737123
Train perplexity: 122.76349082015587
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix method_1 ( )[0m
Epoch Step: 5 / 8 Loss (mean): 48.654550552368164 Loss (std): 18.897636544141246 Loss ratio: 0.38840429784262887 Tokens per Sec: 4351.914467089877
Mean loss per sample: 49.6370667414587 Std loss per sample: 21.72889445244191 ratio: 0.4377554089894103
Epoch ended with duration 0:00:01.037896
b'BLEU = 0.00, 13.0/1.9/0.1/0.0 (BP=0.511, ratio=0.598, hyp_len=1863, ref_len=3113)\n'
Validation perplexity: 834.3989349662488
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 39 / 1000
Epoch Step: 5 / 67 Loss (mean): 33.01351600885391 Loss (std): 16.032891398665285 Loss ratio: 0.4856462848236285 Tokens per Sec: 2747.970153305667
Epoch Step: 10 / 67 Loss (mean): 33.00302644073963 Loss (std): 11.312691011153213 Loss ratio: 0.34277738229450944 Tokens per Sec: 3043.3380976874323
Epoch Step: 15 / 67 Loss (mean): 33.5906967073679 Loss (std): 14.727219554483154 Loss ratio: 0.43843150032826905 Tokens per Sec: 2192.454814889956
Epoch Step: 20 / 67 Loss (mean): 35.57288859784603 Loss (std): 18.205308872921325 Loss ratio: 0.5117748260124052 Tokens per Sec: 2682.1571191399385
Epoch Step: 25 / 67 Loss (mean): 34.12652812898159 Loss (std): 12.413608646912799 Loss ratio: 0.363752462600222 Tokens per Sec: 3179.9173299799927
Epoch Step: 30 / 67 Loss (mean): 33.17639981210232 Loss (std): 13.697168539582002 Loss ratio: 0.41285879773445017 Tokens per Sec: 2562.7080975041517
Epoch Step: 35 / 67 Loss (mean): 34.66626946628094 Loss (std): 14.238651312808042 Loss ratio: 0.41073503241119275 Tokens per Sec: 3557.2653748642037
Epoch Step: 40 / 67 Loss (mean): 24.810523726046085 Loss (std): 17.651505921021673 Loss ratio: 0.7114523706120369 Tokens per Sec: 2913.3557830325913
Epoch Step: 45 / 67 Loss (mean): 34.7657730653882 Loss (std): 15.554766197550443 Loss ratio: 0.44741608846996467 Tokens per Sec: 2461.352544607875
Epoch Step: 50 / 67 Loss (mean): 33.22242183983326 Loss (std): 14.958959703489743 Loss ratio: 0.4502669846168211 Tokens per Sec: 2437.236161952085
Epoch Step: 55 / 67 Loss (mean): 34.53428216278553 Loss (std): 11.371131722721808 Loss ratio: 0.32927082917552136 Tokens per Sec: 3312.1398363406925
Epoch Step: 60 / 67 Loss (mean): 35.97515843808651 Loss (std): 15.015137376112698 Loss ratio: 0.417375156302754 Tokens per Sec: 2252.7205530202073
Epoch Step: 65 / 67 Loss (mean): 30.54192467033863 Loss (std): 14.237414724811442 Loss ratio: 0.46615970926804023 Tokens per Sec: 2842.296587292954
Mean loss per sample: 34.61008342856037 Std loss per sample: 15.253568143360182 ratio: 0.4407261304309044
Epoch ended with duration 0:00:11.642379
Train perplexity: 108.06516326059946
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo in method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix broken[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix method_1 ( )[0m
Epoch Step: 5 / 8 Loss (mean): 48.68968418240547 Loss (std): 18.911400790294007 Loss ratio: 0.3884067253228938 Tokens per Sec: 4338.989750901226
Mean loss per sample: 50.23863831504447 Std loss per sample: 22.16060091053877 ratio: 0.4411067189275819
Epoch ended with duration 0:00:01.057591
b'BLEU = 0.00, 12.6/1.6/0.1/0.0 (BP=0.422, ratio=0.537, hyp_len=1672, ref_len=3113)\n'
Validation perplexity: 905.2719091423019
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 40 / 1000
Epoch Step: 5 / 67 Loss (mean): 31.171514250338078 Loss (std): 15.228388854930595 Loss ratio: 0.4885354215592985 Tokens per Sec: 3128.9355203459977
Epoch Step: 10 / 67 Loss (mean): 34.80311828106642 Loss (std): 15.95526132877113 Loss ratio: 0.4584434417605363 Tokens per Sec: 3073.3006141926317
Epoch Step: 15 / 67 Loss (mean): 34.40670822560787 Loss (std): 11.878362761963379 Loss ratio: 0.3452339202017202 Tokens per Sec: 2549.160070567202
Epoch Step: 20 / 67 Loss (mean): 32.871887639164925 Loss (std): 15.505043216230305 Loss ratio: 0.47168095079994604 Tokens per Sec: 2649.3598408794937
Epoch Step: 25 / 67 Loss (mean): 33.322448037564754 Loss (std): 14.810744649035271 Loss ratio: 0.4444674842718326 Tokens per Sec: 2497.210595836885
Epoch Step: 30 / 67 Loss (mean): 37.245172664523125 Loss (std): 17.066176817585735 Loss ratio: 0.4582117787801708 Tokens per Sec: 2981.202213595035
Epoch Step: 35 / 67 Loss (mean): 35.505416572093964 Loss (std): 13.336008501242913 Loss ratio: 0.37560490169616984 Tokens per Sec: 2606.018503846488
Epoch Step: 40 / 67 Loss (mean): 40.284079268574715 Loss (std): 16.27875183126332 Loss ratio: 0.4040988928338805 Tokens per Sec: 3077.592331947869
Epoch Step: 45 / 67 Loss (mean): 33.275511369109154 Loss (std): 13.112246446840093 Loss ratio: 0.3940509373813158 Tokens per Sec: 2856.5744113091437
Epoch Step: 50 / 67 Loss (mean): 30.7631626278162 Loss (std): 14.020899029558613 Loss ratio: 0.4557691027801169 Tokens per Sec: 2377.1375273443114
Epoch Step: 55 / 67 Loss (mean): 28.863279558718204 Loss (std): 16.22423987192669 Loss ratio: 0.5621065977246557 Tokens per Sec: 2956.094055355991
Epoch Step: 60 / 67 Loss (mean): 47.47640812397003 Loss (std): 15.47891644897111 Loss ratio: 0.32603385682743063 Tokens per Sec: 2372.653289012538
Epoch Step: 65 / 67 Loss (mean): 31.25628138333559 Loss (std): 11.010312608787807 Loss ratio: 0.35225919787943805 Tokens per Sec: 2362.8069819293637
Mean loss per sample: 34.744057273395285 Std loss per sample: 15.39047813237375 ratio: 0.4429672105151279
Epoch ended with duration 0:00:11.692837
Train perplexity: 110.0418812165283
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix method_1 ( )[0m
Epoch Step: 5 / 8 Loss (mean): 48.76785558462143 Loss (std): 19.08692199891999 Loss ratio: 0.3913832537869249 Tokens per Sec: 4339.998759184098
Mean loss per sample: 49.8288075318102 Std loss per sample: 22.206029386949808 ratio: 0.4456464139298077
Epoch ended with duration 0:00:01.039415
b'BLEU = 0.00, 12.3/1.9/0.1/0.0 (BP=0.429, ratio=0.542, hyp_len=1687, ref_len=3113)\n'
Validation perplexity: 856.364359136103
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved checkpoint_commit_msg_generator!
Epoch 41 / 1000
Epoch Step: 5 / 67 Loss (mean): 34.71099102497101 Loss (std): 12.826149508786784 Loss ratio: 0.3695126278463119 Tokens per Sec: 2487.1358369964987
Epoch Step: 10 / 67 Loss (mean): 33.66035059094429 Loss (std): 14.164590019039542 Loss ratio: 0.42080934305093864 Tokens per Sec: 2496.9949569195946
Epoch Step: 15 / 67 Loss (mean): 30.786083921790123 Loss (std): 11.609432500943013 Loss ratio: 0.37710000825164897 Tokens per Sec: 3130.622611652524
Epoch Step: 20 / 67 Loss (mean): 36.82455322146416 Loss (std): 17.082272095467864 Loss ratio: 0.46388267069350386 Tokens per Sec: 2819.3083221440597
Epoch Step: 25 / 67 Loss (mean): 46.19054984301329 Loss (std): 20.267756388201608 Loss ratio: 0.4387857788462174 Tokens per Sec: 2371.188190208705
Epoch Step: 30 / 67 Loss (mean): 41.21101272106171 Loss (std): 16.42973540500343 Loss ratio: 0.398673420529816 Tokens per Sec: 2692.932215001682
Epoch Step: 35 / 67 Loss (mean): 33.47531369328499 Loss (std): 13.863727819043781 Loss ratio: 0.41414780892179626 Tokens per Sec: 3106.927228193761
Epoch Step: 40 / 67 Loss (mean): 40.43679118156433 Loss (std): 16.855251116208393 Loss ratio: 0.41682959066971975 Tokens per Sec: 2496.521999455729
Epoch Step: 45 / 67 Loss (mean): 35.16892247647047 Loss (std): 18.26954954505357 Loss ratio: 0.5194799345153861 Tokens per Sec: 2862.3089957708153
Epoch Step: 50 / 67 Loss (mean): 34.75987009704113 Loss (std): 14.620837236200677 Loss ratio: 0.4206240470802349 Tokens per Sec: 2827.2120047861317
Epoch Step: 55 / 67 Loss (mean): 43.325242042541504 Loss (std): 15.527001289573146 Loss ratio: 0.3583823322747285 Tokens per Sec: 2711.9364891530768
Epoch Step: 60 / 67 Loss (mean): 33.2442796304822 Loss (std): 14.015664098747887 Loss ratio: 0.4215962642155346 Tokens per Sec: 2853.1079368145965
Epoch Step: 65 / 67 Loss (mean): 33.84646153450012 Loss (std): 14.835763833838087 Loss ratio: 0.43832540127468883 Tokens per Sec: 2312.973086738439
Mean loss per sample: 34.38182701563757 Std loss per sample: 15.154322121979678 ratio: 0.44076546935935595
Epoch ended with duration 0:00:11.691512
Train perplexity: 104.77879160052355
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix test[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix method_1 ( )[0m
Epoch Step: 5 / 8 Loss (mean): 48.914037227630615 Loss (std): 19.31094268330867 Loss ratio: 0.3947934739764291 Tokens per Sec: 4199.205714343284
Mean loss per sample: 50.544492262308715 Std loss per sample: 22.50330350705629 ratio: 0.44521771809026794
Epoch ended with duration 0:00:01.060547
b'BLEU = 0.00, 12.7/1.8/0.2/0.0 (BP=0.396, ratio=0.519, hyp_len=1617, ref_len=3113)\n'
Validation perplexity: 943.5827241126283
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 42 / 1000
Epoch Step: 5 / 67 Loss (mean): 33.81496029347181 Loss (std): 13.176162761806069 Loss ratio: 0.3896548346487282 Tokens per Sec: 2545.4465491202977
Epoch Step: 10 / 67 Loss (mean): 36.19878616929054 Loss (std): 10.444475303488167 Loss ratio: 0.2885310920273012 Tokens per Sec: 3222.839527543311
Epoch Step: 15 / 67 Loss (mean): 34.67038810253143 Loss (std): 14.510755179833788 Loss ratio: 0.41853454702961046 Tokens per Sec: 2891.48286856543
Epoch Step: 20 / 67 Loss (mean): 31.901992738246918 Loss (std): 15.255685316734821 Loss ratio: 0.4782047767958069 Tokens per Sec: 2776.8815758490723
Epoch Step: 25 / 67 Loss (mean): 33.08581829071045 Loss (std): 13.924793454949075 Loss ratio: 0.42086894549797965 Tokens per Sec: 3309.8049305827594
Epoch Step: 30 / 67 Loss (mean): 34.06035368144512 Loss (std): 13.707294144327086 Loss ratio: 0.4024413331854019 Tokens per Sec: 2830.9470421292554
Epoch Step: 35 / 67 Loss (mean): 31.8109123557806 Loss (std): 12.990839265714675 Loss ratio: 0.40837682114936297 Tokens per Sec: 2697.794704454453
Epoch Step: 40 / 67 Loss (mean): 35.56985557079315 Loss (std): 15.906467616867278 Loss ratio: 0.44718954748661605 Tokens per Sec: 2667.4028149457804
Epoch Step: 45 / 67 Loss (mean): 33.1569277793169 Loss (std): 13.383412701594654 Loss ratio: 0.4036385032615461 Tokens per Sec: 2725.6336724391986
Epoch Step: 50 / 67 Loss (mean): 32.418566420674324 Loss (std): 15.760146729334538 Loss ratio: 0.4861457019667534 Tokens per Sec: 2654.3687051610814
Epoch Step: 55 / 67 Loss (mean): 31.951200917363167 Loss (std): 15.001680912805783 Loss ratio: 0.4695185308247195 Tokens per Sec: 1997.8899500150164
Epoch Step: 60 / 67 Loss (mean): 31.048799484968185 Loss (std): 12.215618344637214 Loss ratio: 0.3934328717138073 Tokens per Sec: 2736.5122309079975
Epoch Step: 65 / 67 Loss (mean): 34.7860359326005 Loss (std): 14.252283538336112 Loss ratio: 0.40971278147215595 Tokens per Sec: 2500.240958736865
Mean loss per sample: 33.356683447502945 Std loss per sample: 14.685414316541008 ratio: 0.4402540300402781
Epoch ended with duration 0:00:11.623503
Train perplexity: 91.20865090846613
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo for cipher suites[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix broken[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix method_1 ( )[0m
Epoch Step: 5 / 8 Loss (mean): 49.13328403234482 Loss (std): 19.24888935782554 Loss ratio: 0.3917688332242121 Tokens per Sec: 4225.594661347614
Mean loss per sample: 50.717948092788944 Std loss per sample: 22.589876388491497 ratio: 0.4454020171944479
Epoch ended with duration 0:00:01.055392
b'BLEU = 0.00, 11.0/1.4/0.1/0.0 (BP=0.567, ratio=0.638, hyp_len=1985, ref_len=3113)\n'
Validation perplexity: 966.0256733220331
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 43 / 1000
Epoch Step: 5 / 67 Loss (mean): 34.0585103482008 Loss (std): 12.44868084927429 Loss ratio: 0.36550867087267996 Tokens per Sec: 2436.651835187695
Epoch Step: 10 / 67 Loss (mean): 31.57276874780655 Loss (std): 14.99716866129493 Loss ratio: 0.4750032783341761 Tokens per Sec: 2790.747918258312
Epoch Step: 15 / 67 Loss (mean): 34.292135648429394 Loss (std): 15.025445421600304 Loss ratio: 0.4381600952371271 Tokens per Sec: 2405.9107059518406
Epoch Step: 20 / 67 Loss (mean): 33.86546329408884 Loss (std): 17.776320141579685 Loss ratio: 0.5249099942088349 Tokens per Sec: 2785.4930395339643
Epoch Step: 25 / 67 Loss (mean): 37.151941910386086 Loss (std): 12.416092068477997 Loss ratio: 0.33419766047295074 Tokens per Sec: 2993.72138887236
Epoch Step: 30 / 67 Loss (mean): 23.82433032989502 Loss (std): 16.845827308350806 Loss ratio: 0.707085029257359 Tokens per Sec: 3051.76020279946
Epoch Step: 35 / 67 Loss (mean): 30.24232906103134 Loss (std): 12.95808535430343 Loss ratio: 0.42847511275183264 Tokens per Sec: 2814.594257034992
Epoch Step: 40 / 67 Loss (mean): 29.837038472294807 Loss (std): 13.853561793725905 Loss ratio: 0.4643075353001148 Tokens per Sec: 2238.8612513038447
Epoch Step: 45 / 67 Loss (mean): 33.21221521496773 Loss (std): 10.501884257515172 Loss ratio: 0.3162054740866034 Tokens per Sec: 2782.1874405296
Epoch Step: 50 / 67 Loss (mean): 29.617411479353905 Loss (std): 13.635484176450689 Loss ratio: 0.4603874375029665 Tokens per Sec: 2660.8206506354327
Epoch Step: 55 / 67 Loss (mean): 31.943348437547684 Loss (std): 13.654042242460042 Loss ratio: 0.4274455531534212 Tokens per Sec: 2941.8170161584967
Epoch Step: 60 / 67 Loss (mean): 36.60963875055313 Loss (std): 10.655640252724 Loss ratio: 0.29106105977522123 Tokens per Sec: 2502.3501179350255
Epoch Step: 65 / 67 Loss (mean): 30.94429239630699 Loss (std): 11.932278017238044 Loss ratio: 0.3856051340395842 Tokens per Sec: 2880.699849834579
Mean loss per sample: 33.34025624264477 Std loss per sample: 14.941451528207413 ratio: 0.4481504706942276
Epoch ended with duration 0:00:11.646782
Train perplexity: 91.0061560296165
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo for cipher suites[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix broken[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix method_1 ( )[0m
Epoch Step: 5 / 8 Loss (mean): 49.18748527765274 Loss (std): 19.41765311361334 Loss ratio: 0.3947681611288904 Tokens per Sec: 4326.910658603482
Mean loss per sample: 50.1620418595486 Std loss per sample: 22.4104779507915 ratio: 0.44676167715699855
Epoch ended with duration 0:00:01.042488
b'BLEU = 0.00, 11.8/1.4/0.1/0.0 (BP=0.491, ratio=0.584, hyp_len=1818, ref_len=3113)\n'
Validation perplexity: 895.92361566984
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 44 / 1000
Epoch Step: 5 / 67 Loss (mean): 28.966841481626034 Loss (std): 13.38424223920163 Loss ratio: 0.4620539055903417 Tokens per Sec: 2195.8474656542853
Epoch Step: 10 / 67 Loss (mean): 32.45281194150448 Loss (std): 13.541275596395922 Loss ratio: 0.4172604710126133 Tokens per Sec: 2530.97074211142
Epoch Step: 15 / 67 Loss (mean): 32.41178032755852 Loss (std): 10.733706973026925 Loss ratio: 0.3311668431832625 Tokens per Sec: 2540.045979470021
Epoch Step: 20 / 67 Loss (mean): 29.772292971611023 Loss (std): 12.691070905182945 Loss ratio: 0.4262711950767228 Tokens per Sec: 2672.6279055626464
Epoch Step: 25 / 67 Loss (mean): 33.93505908548832 Loss (std): 12.542303899071413 Loss ratio: 0.3695972318031086 Tokens per Sec: 3308.575215988801
Epoch Step: 30 / 67 Loss (mean): 37.48843836784363 Loss (std): 14.065949041146702 Loss ratio: 0.3752076547742255 Tokens per Sec: 2510.2465545436244
Epoch Step: 35 / 67 Loss (mean): 28.91541939973831 Loss (std): 14.388566587454719 Loss ratio: 0.49760878057971164 Tokens per Sec: 2763.382691654625
Epoch Step: 40 / 67 Loss (mean): 29.57732407003641 Loss (std): 10.57493837425828 Loss ratio: 0.3575353317703045 Tokens per Sec: 2673.9736999333413
Epoch Step: 45 / 67 Loss (mean): 35.85575059056282 Loss (std): 10.533670585395095 Loss ratio: 0.29377911246871347 Tokens per Sec: 3478.1822886821756
Epoch Step: 50 / 67 Loss (mean): 31.216385170817375 Loss (std): 14.463829388102889 Loss ratio: 0.46334094447375007 Tokens per Sec: 3118.2734909684887
Epoch Step: 55 / 67 Loss (mean): 30.051054514944553 Loss (std): 14.34919562685029 Loss ratio: 0.47749391355682236 Tokens per Sec: 2456.3660427437476
Epoch Step: 60 / 67 Loss (mean): 32.282982394099236 Loss (std): 13.93101607341193 Loss ratio: 0.4315281625268388 Tokens per Sec: 2359.156424651981
Epoch Step: 65 / 67 Loss (mean): 32.8580429404974 Loss (std): 10.683186095324574 Loss ratio: 0.32513153977766557 Tokens per Sec: 2925.422041170556
Mean loss per sample: 33.15709506610275 Std loss per sample: 14.771716158638318 ratio: 0.44550694592481893
Epoch ended with duration 0:00:11.668113
Train perplexity: 88.77858828456229
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix broken[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix method_1 ( )[0m
Epoch Step: 5 / 8 Loss (mean): 49.35731744766235 Loss (std): 19.5664096587728 Loss ratio: 0.39642368488767 Tokens per Sec: 4206.703633771663
Mean loss per sample: 50.929197313355616 Std loss per sample: 22.802768908977637 ratio: 0.44773470056237985
Epoch ended with duration 0:00:01.059219
b'BLEU = 0.00, 12.1/1.7/0.1/0.0 (BP=0.435, ratio=0.545, hyp_len=1698, ref_len=3113)\n'
Validation perplexity: 994.0807730958047
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 45 / 1000
Epoch Step: 5 / 67 Loss (mean): 28.766226820647717 Loss (std): 14.167122708983149 Loss ratio: 0.49249151782444833 Tokens per Sec: 3278.9252213473706
Epoch Step: 10 / 67 Loss (mean): 31.802546858787537 Loss (std): 9.977034645219954 Loss ratio: 0.31371810218599344 Tokens per Sec: 2616.397101026367
Epoch Step: 15 / 67 Loss (mean): 28.63139831274748 Loss (std): 10.465325424443728 Loss ratio: 0.36551918666802524 Tokens per Sec: 2464.9574903030875
Epoch Step: 20 / 67 Loss (mean): 32.11159750819206 Loss (std): 11.375201252908518 Loss ratio: 0.3542396559375959 Tokens per Sec: 2661.490644890822
Epoch Step: 25 / 67 Loss (mean): 30.48296720534563 Loss (std): 12.33217580153086 Loss ratio: 0.40455956004729865 Tokens per Sec: 2864.3750362011624
Epoch Step: 30 / 67 Loss (mean): 37.20482316613197 Loss (std): 13.975160091509792 Loss ratio: 0.3756276445423764 Tokens per Sec: 3039.7825274565203
Epoch Step: 35 / 67 Loss (mean): 34.291771702468395 Loss (std): 14.487029816226489 Loss ratio: 0.42246373100587514 Tokens per Sec: 2483.542824487748
Epoch Step: 40 / 67 Loss (mean): 33.348245084285736 Loss (std): 17.46007173383812 Loss ratio: 0.5235679325766261 Tokens per Sec: 2867.5778465418794
Epoch Step: 45 / 67 Loss (mean): 32.435330390930176 Loss (std): 13.56716808200196 Loss ratio: 0.4182836406622736 Tokens per Sec: 2909.7128621250818
Epoch Step: 50 / 67 Loss (mean): 34.634634271264076 Loss (std): 12.832290859585541 Loss ratio: 0.37050458679831744 Tokens per Sec: 2558.4926353042197
Epoch Step: 55 / 67 Loss (mean): 31.319903805851936 Loss (std): 12.873617996210509 Loss ratio: 0.4110363197796652 Tokens per Sec: 2580.594099372224
Epoch Step: 60 / 67 Loss (mean): 31.978807881474495 Loss (std): 14.45281796390002 Loss ratio: 0.45194986684518096 Tokens per Sec: 2212.217762268556
Epoch Step: 65 / 67 Loss (mean): 33.568907625973225 Loss (std): 14.210977341952786 Loss ratio: 0.4233374973142512 Tokens per Sec: 2785.971951937079
Mean loss per sample: 33.01558515056444 Std loss per sample: 14.940999053197814 ratio: 0.452543820897337
Epoch ended with duration 0:00:11.673242
Train perplexity: 87.09497995882441
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix broken[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: add a change to use[0m
Epoch Step: 5 / 8 Loss (mean): 49.66831901669502 Loss (std): 19.635826488054434 Loss ratio: 0.39533905871576286 Tokens per Sec: 4323.284712984356
Mean loss per sample: 51.61181756707489 Std loss per sample: 22.93775880855972 ratio: 0.4444284253068541
Epoch ended with duration 0:00:01.074110
b'BLEU = 0.57, 12.5/1.7/0.4/0.3 (BP=0.479, ratio=0.576, hyp_len=1794, ref_len=3113)\n'
Validation perplexity: 1090.4281925416324
Validation accuracy: 0.0
Validation BLEU: 0.57
Model saved best_on_validation_commit_msg_generator!
Model saved checkpoint_commit_msg_generator!
Epoch 46 / 1000
Epoch Step: 5 / 67 Loss (mean): 33.02236732840538 Loss (std): 14.835866816931576 Loss ratio: 0.44926720938537834 Tokens per Sec: 2384.4303213629646
Epoch Step: 10 / 67 Loss (mean): 28.35444875061512 Loss (std): 15.111369132577616 Loss ratio: 0.5329452625048756 Tokens per Sec: 2604.5567903519573
Epoch Step: 15 / 67 Loss (mean): 36.56113348901272 Loss (std): 12.021894966663666 Loss ratio: 0.328816254295739 Tokens per Sec: 2759.0271741404617
Epoch Step: 20 / 67 Loss (mean): 30.091326996684074 Loss (std): 13.878816010382648 Loss ratio: 0.4612231295719205 Tokens per Sec: 2289.793076425469
Epoch Step: 25 / 67 Loss (mean): 44.42436318099499 Loss (std): 17.27526250136395 Loss ratio: 0.38886910839848376 Tokens per Sec: 3648.465957209351
Epoch Step: 30 / 67 Loss (mean): 31.475424647331238 Loss (std): 13.071976664194812 Loss ratio: 0.41530739650571064 Tokens per Sec: 2714.9065576793137
Epoch Step: 35 / 67 Loss (mean): 36.728277787566185 Loss (std): 13.931501311026558 Loss ratio: 0.3793126754160758 Tokens per Sec: 2243.617789736025
Epoch Step: 40 / 67 Loss (mean): 32.033292517066 Loss (std): 13.217563018565912 Loss ratio: 0.4126195585896812 Tokens per Sec: 3093.1136036489056
Epoch Step: 45 / 67 Loss (mean): 31.943909600377083 Loss (std): 10.289413622581874 Loss ratio: 0.3221087760172102 Tokens per Sec: 3077.284730215454
Epoch Step: 50 / 67 Loss (mean): 33.73207364976406 Loss (std): 13.944044378293537 Loss ratio: 0.41337643582404154 Tokens per Sec: 3151.8969962847846
Epoch Step: 55 / 67 Loss (mean): 31.177711203694344 Loss (std): 11.197792335042495 Loss ratio: 0.3591601789459014 Tokens per Sec: 2457.950314285157
Epoch Step: 60 / 67 Loss (mean): 33.42019037902355 Loss (std): 14.300978802094777 Loss ratio: 0.4279143427941362 Tokens per Sec: 2645.501702311032
Epoch Step: 65 / 67 Loss (mean): 29.10250723361969 Loss (std): 13.422116076725978 Loss ratio: 0.4612013655380362 Tokens per Sec: 2571.683985381545
Mean loss per sample: 32.689153180343695 Std loss per sample: 14.755988251651395 ratio: 0.4514031969639493
Epoch ended with duration 0:00:11.671851
Train perplexity: 83.33203877962677
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo for cipher suites[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix method_1 ( )[0m
Epoch Step: 5 / 8 Loss (mean): 49.99638965725899 Loss (std): 20.095389539392368 Loss ratio: 0.4019368133809781 Tokens per Sec: 4301.765159943081
Mean loss per sample: 51.25177316196629 Std loss per sample: 22.982884043243853 ratio: 0.4484310029745341
Epoch ended with duration 0:00:01.062656
b'BLEU = 0.00, 11.6/1.5/0.1/0.0 (BP=0.548, ratio=0.624, hyp_len=1944, ref_len=3113)\n'
Validation perplexity: 1038.5006501681198
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 47 / 1000
Epoch Step: 5 / 67 Loss (mean): 31.979390911757946 Loss (std): 16.59444126221002 Loss ratio: 0.5189104854435704 Tokens per Sec: 3093.3113288445384
Epoch Step: 10 / 67 Loss (mean): 29.38136315345764 Loss (std): 11.827759128757272 Loss ratio: 0.40255991755662857 Tokens per Sec: 2234.936102485336
Epoch Step: 15 / 67 Loss (mean): 29.00413218140602 Loss (std): 12.774582614216461 Loss ratio: 0.4404400908918073 Tokens per Sec: 2419.785547423373
Epoch Step: 20 / 67 Loss (mean): 32.56227642297745 Loss (std): 12.517750723699164 Loss ratio: 0.3844249265959201 Tokens per Sec: 3030.592575549341
Epoch Step: 25 / 67 Loss (mean): 29.34137300401926 Loss (std): 11.470149808295034 Loss ratio: 0.3909206909548446 Tokens per Sec: 3100.669217338719
Epoch Step: 30 / 67 Loss (mean): 31.78877356648445 Loss (std): 11.18491936781795 Loss ratio: 0.3518512390679468 Tokens per Sec: 3210.96323873781
Epoch Step: 35 / 67 Loss (mean): 32.847110986709595 Loss (std): 13.898072539985607 Loss ratio: 0.4231140006683986 Tokens per Sec: 2648.2681526444885
Epoch Step: 40 / 67 Loss (mean): 27.7006416618824 Loss (std): 15.669233312480722 Loss ratio: 0.5656631894575368 Tokens per Sec: 2735.0325186950677
Epoch Step: 45 / 67 Loss (mean): 32.41479704529047 Loss (std): 14.349397587041187 Loss ratio: 0.44268046987898707 Tokens per Sec: 2450.0603052075294
Epoch Step: 50 / 67 Loss (mean): 30.94700212031603 Loss (std): 14.103057941093109 Loss ratio: 0.4557164498927268 Tokens per Sec: 2463.14060930751
Epoch Step: 55 / 67 Loss (mean): 29.00264758616686 Loss (std): 14.046222523054539 Loss ratio: 0.48430828534957765 Tokens per Sec: 3251.2358814431086
Epoch Step: 60 / 67 Loss (mean): 34.8473312035203 Loss (std): 16.26434068245105 Loss ratio: 0.4667313140125926 Tokens per Sec: 2458.4383528014387
Epoch Step: 65 / 67 Loss (mean): 33.93200674653053 Loss (std): 15.414864173790274 Loss ratio: 0.45428684159289834 Tokens per Sec: 2742.615284145498
Mean loss per sample: 31.97078649415357 Std loss per sample: 14.467907059637135 ratio: 0.4525352250024518
Epoch ended with duration 0:00:11.680665
Train perplexity: 75.61376072848006
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo for cipher suites[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix method_1 ( )[0m
Epoch Step: 5 / 8 Loss (mean): 50.23384064435959 Loss (std): 19.951736473468703 Loss ratio: 0.39717720599388306 Tokens per Sec: 4325.456932291658
Mean loss per sample: 50.91976208178723 Std loss per sample: 22.83166373823578 ratio: 0.4483851220978527
Epoch ended with duration 0:00:01.045118
b'BLEU = 0.00, 10.9/1.3/0.1/0.0 (BP=0.606, ratio=0.667, hyp_len=2075, ref_len=3113)\n'
Validation perplexity: 992.810511073471
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 48 / 1000
Epoch Step: 5 / 67 Loss (mean): 39.355923771858215 Loss (std): 16.167510108502505 Loss ratio: 0.41080245510748803 Tokens per Sec: 2296.9321270023065
Epoch Step: 10 / 67 Loss (mean): 30.552021235227585 Loss (std): 10.920157470746144 Loss ratio: 0.3574283150260058 Tokens per Sec: 3045.819760397487
Epoch Step: 15 / 67 Loss (mean): 39.15341375768185 Loss (std): 15.12740544562553 Loss ratio: 0.38636236266007723 Tokens per Sec: 2811.6917191182088
Epoch Step: 20 / 67 Loss (mean): 33.43682989478111 Loss (std): 14.79515391747444 Loss ratio: 0.4424807604079625 Tokens per Sec: 2793.5735611735145
Epoch Step: 25 / 67 Loss (mean): 29.96935948729515 Loss (std): 15.177934410980974 Loss ratio: 0.5064484083290244 Tokens per Sec: 2822.985703382662
Epoch Step: 30 / 67 Loss (mean): 29.897572860121727 Loss (std): 12.92181749412003 Loss ratio: 0.43220289334441375 Tokens per Sec: 2314.767210549565
Epoch Step: 35 / 67 Loss (mean): 49.28245912492275 Loss (std): 14.95340946641847 Loss ratio: 0.3034225509833852 Tokens per Sec: 2576.3153078550245
Epoch Step: 40 / 67 Loss (mean): 44.038817539811134 Loss (std): 27.910425035722934 Loss ratio: 0.6337687202998101 Tokens per Sec: 2927.216955830237
Epoch Step: 45 / 67 Loss (mean): 28.0980758741498 Loss (std): 13.049166383559777 Loss ratio: 0.4644149457780131 Tokens per Sec: 2213.8213016169725
Epoch Step: 50 / 67 Loss (mean): 29.860906168818474 Loss (std): 15.109544206094888 Loss ratio: 0.505997511283588 Tokens per Sec: 3123.53909158303
Epoch Step: 55 / 67 Loss (mean): 34.06895524263382 Loss (std): 9.70204415625713 Loss ratio: 0.2847766856118914 Tokens per Sec: 2708.844232481454
Epoch Step: 60 / 67 Loss (mean): 31.320457063615322 Loss (std): 10.225581503426298 Loss ratio: 0.32648251213757856 Tokens per Sec: 2698.027654655007
Epoch Step: 65 / 67 Loss (mean): 32.25119245797396 Loss (std): 13.247827161991268 Loss ratio: 0.41077014994885264 Tokens per Sec: 2853.5057371030853
Mean loss per sample: 32.24402944816986 Std loss per sample: 14.839456541682996 ratio: 0.4602233900554035
Epoch ended with duration 0:00:11.718076
Train perplexity: 78.46149387235293
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo for cipher suites[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix broken[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix method_1 ( )[0m
Epoch Step: 5 / 8 Loss (mean): 55.731801837682724 Loss (std): 21.17855931923857 Loss ratio: 0.380008516159598 Tokens per Sec: 4195.767680801017
Mean loss per sample: 51.74058747291565 Std loss per sample: 23.352257466036193 ratio: 0.45133344259495056
Epoch ended with duration 0:00:01.060408
b'BLEU = 0.00, 12.4/1.5/0.1/0.0 (BP=0.477, ratio=0.574, hyp_len=1788, ref_len=3113)\n'
Validation perplexity: 1109.623851113453
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 49 / 1000
Epoch Step: 5 / 67 Loss (mean): 30.45889124274254 Loss (std): 9.700351944921536 Loss ratio: 0.31847357369690354 Tokens per Sec: 3075.2824689837894
Epoch Step: 10 / 67 Loss (mean): 29.07368716597557 Loss (std): 14.177451295208533 Loss ratio: 0.4876385720969082 Tokens per Sec: 2569.4300170927863
Epoch Step: 15 / 67 Loss (mean): 49.581560119986534 Loss (std): 17.423650101674372 Loss ratio: 0.3514139139532809 Tokens per Sec: 2711.50117601224
Epoch Step: 20 / 67 Loss (mean): 32.36253550648689 Loss (std): 12.244085271714829 Loss ratio: 0.37834134687192755 Tokens per Sec: 2829.7512641279777
Epoch Step: 25 / 67 Loss (mean): 29.66932363808155 Loss (std): 14.801066792085233 Loss ratio: 0.49886768477214555 Tokens per Sec: 2237.950298711708
Epoch Step: 30 / 67 Loss (mean): 31.524039894342422 Loss (std): 13.746991707413416 Loss ratio: 0.4360796317187941 Tokens per Sec: 2539.58921315873
Epoch Step: 35 / 67 Loss (mean): 28.441489151545934 Loss (std): 12.856916274008446 Loss ratio: 0.45204792918902453 Tokens per Sec: 2445.813851999214
Epoch Step: 40 / 67 Loss (mean): 30.496965289115906 Loss (std): 13.120509949961077 Loss ratio: 0.4302234607796753 Tokens per Sec: 2767.209557952924
Epoch Step: 45 / 67 Loss (mean): 31.446426272392273 Loss (std): 14.179290419323328 Loss ratio: 0.45090307866785284 Tokens per Sec: 2439.6287740612265
Epoch Step: 50 / 67 Loss (mean): 27.328847788274288 Loss (std): 15.307530855819158 Loss ratio: 0.5601235359211524 Tokens per Sec: 2661.7522961387067
Epoch Step: 55 / 67 Loss (mean): 33.86632980406284 Loss (std): 9.686949553362979 Loss ratio: 0.286034820112124 Tokens per Sec: 3305.5526491606383
Epoch Step: 60 / 67 Loss (mean): 31.289935648441315 Loss (std): 10.704202062051422 Loss ratio: 0.3420972859234578 Tokens per Sec: 3402.553925107431
Epoch Step: 65 / 67 Loss (mean): 29.710788756608963 Loss (std): 14.29681879309725 Loss ratio: 0.4811995706413893 Tokens per Sec: 2453.9732776636793
Mean loss per sample: 31.896644477155697 Std loss per sample: 14.81809188015417 ratio: 0.46456585396519856
Epoch ended with duration 0:00:11.727585
Train perplexity: 74.85904109647797
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo for cipher suites[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix broken[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: add a change to use of the optimizing[0m
Epoch Step: 5 / 8 Loss (mean): 50.30576977133751 Loss (std): 19.886313693352015 Loss ratio: 0.3953088042135984 Tokens per Sec: 4299.147314573389
Mean loss per sample: 51.547327301541316 Std loss per sample: 23.089700412395672 ratio: 0.4479320581904402
Epoch ended with duration 0:00:01.062258
b'BLEU = 0.52, 10.9/1.2/0.3/0.1 (BP=0.630, ratio=0.684, hyp_len=2129, ref_len=3113)\n'
Validation perplexity: 1080.9398240570486
Validation accuracy: 0.0
Validation BLEU: 0.52
Epoch 50 / 1000
Epoch Step: 5 / 67 Loss (mean): 29.712308257818222 Loss (std): 10.239975641503307 Loss ratio: 0.3446375001447036 Tokens per Sec: 2477.188229019551
Epoch Step: 10 / 67 Loss (mean): 28.92275758087635 Loss (std): 14.727268271423938 Loss ratio: 0.5091930888761993 Tokens per Sec: 2654.7234978003557
Epoch Step: 15 / 67 Loss (mean): 26.56275326758623 Loss (std): 15.701762434706438 Loss ratio: 0.5911195378178982 Tokens per Sec: 2707.395724532261
Epoch Step: 20 / 67 Loss (mean): 31.15996289253235 Loss (std): 13.110192757025413 Loss ratio: 0.42073839440185407 Tokens per Sec: 2569.2086724956225
Epoch Step: 25 / 67 Loss (mean): 47.13419297337532 Loss (std): 13.51281318708477 Loss ratio: 0.2866881203358621 Tokens per Sec: 3328.0674015512286
Epoch Step: 30 / 67 Loss (mean): 30.566460832953453 Loss (std): 11.3417643413568 Loss ratio: 0.3710525861446588 Tokens per Sec: 2709.7687970811307
Epoch Step: 35 / 67 Loss (mean): 29.7912577688694 Loss (std): 12.762803385328844 Loss ratio: 0.4284076719535297 Tokens per Sec: 3085.7871643673457
Epoch Step: 40 / 67 Loss (mean): 30.91137085855007 Loss (std): 12.918887938258454 Loss ratio: 0.4179331934961757 Tokens per Sec: 2852.160023519594
Epoch Step: 45 / 67 Loss (mean): 31.340427964925766 Loss (std): 13.63621642956908 Loss ratio: 0.4350998794537801 Tokens per Sec: 2810.6972763710637
Epoch Step: 50 / 67 Loss (mean): 27.174454882740974 Loss (std): 13.655854282497087 Loss ratio: 0.5025254173974318 Tokens per Sec: 2425.762518747787
Epoch Step: 55 / 67 Loss (mean): 31.686861865222454 Loss (std): 13.467388208624756 Loss ratio: 0.42501489310955504 Tokens per Sec: 2790.876256561632
Epoch Step: 60 / 67 Loss (mean): 27.605153791606426 Loss (std): 12.776203296811968 Loss ratio: 0.4628194935359019 Tokens per Sec: 2783.3553102973337
Epoch Step: 65 / 67 Loss (mean): 33.27509208023548 Loss (std): 15.280424991147957 Loss ratio: 0.4592151076337403 Tokens per Sec: 2663.3323500454712
Mean loss per sample: 31.026524132872993 Std loss per sample: 14.088168279796259 ratio: 0.45406853244220374
Epoch ended with duration 0:00:11.623688
Train perplexity: 66.54509638069185
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix 'statement unnecessarily nested within else clause[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix method_1 ( )[0m
Epoch Step: 5 / 8 Loss (mean): 50.55509853363037 Loss (std): 20.26667555947844 Loss ratio: 0.40088292076014054 Tokens per Sec: 4206.305639360944
Mean loss per sample: 52.085704908996334 Std loss per sample: 23.52468256174615 ratio: 0.4516533394882197
Epoch ended with duration 0:00:01.058969
b'BLEU = 0.00, 12.0/1.4/0.1/0.0 (BP=0.531, ratio=0.613, hyp_len=1907, ref_len=3113)\n'
Validation perplexity: 1162.753244224578
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved checkpoint_commit_msg_generator!
Epoch 51 / 1000
Epoch Step: 5 / 67 Loss (mean): 34.617674335837364 Loss (std): 13.581353576040879 Loss ratio: 0.39232426315770763 Tokens per Sec: 2464.2319387282455
Epoch Step: 10 / 67 Loss (mean): 29.383005052804947 Loss (std): 13.378959412784683 Loss ratio: 0.45532985440873097 Tokens per Sec: 2402.4135102176565
Epoch Step: 15 / 67 Loss (mean): 28.66741345822811 Loss (std): 12.055843020647682 Loss ratio: 0.4205417080342635 Tokens per Sec: 2918.449811716018
Epoch Step: 20 / 67 Loss (mean): 43.32561598718166 Loss (std): 16.772702816348712 Loss ratio: 0.38713131790927313 Tokens per Sec: 2672.8550234690365
Epoch Step: 25 / 67 Loss (mean): 29.016922384500504 Loss (std): 14.776062157647212 Loss ratio: 0.5092222380392726 Tokens per Sec: 2811.31145879695
Epoch Step: 30 / 67 Loss (mean): 30.70441623777151 Loss (std): 12.442682080834816 Loss ratio: 0.4052407961278306 Tokens per Sec: 3015.0777857716957
Epoch Step: 35 / 67 Loss (mean): 34.23024220764637 Loss (std): 12.095245398582268 Loss ratio: 0.3533496878348242 Tokens per Sec: 2547.609675219417
Epoch Step: 40 / 67 Loss (mean): 29.22651069611311 Loss (std): 12.53731535830812 Loss ratio: 0.42897065231859793 Tokens per Sec: 2360.0526874785446
Epoch Step: 45 / 67 Loss (mean): 30.61990039050579 Loss (std): 12.774571351378487 Loss ratio: 0.41719833142695184 Tokens per Sec: 2663.8636068592373
Epoch Step: 50 / 67 Loss (mean): 28.724795192480087 Loss (std): 11.860117982145463 Loss ratio: 0.41288781704700694 Tokens per Sec: 2633.3532606904405
Epoch Step: 55 / 67 Loss (mean): 30.339305624365807 Loss (std): 9.550665940878883 Loss ratio: 0.31479513931949205 Tokens per Sec: 3014.408385571376
Epoch Step: 60 / 67 Loss (mean): 31.126389279961586 Loss (std): 13.277042557808375 Loss ratio: 0.42655260905433107 Tokens per Sec: 2483.6654554809484
Epoch Step: 65 / 67 Loss (mean): 32.60087741911411 Loss (std): 14.572540109478084 Loss ratio: 0.4469984019796383 Tokens per Sec: 3787.652976737875
Mean loss per sample: 30.92560667193556 Std loss per sample: 14.364950381394141 ratio: 0.4645001966745596
Epoch ended with duration 0:00:11.652161
Train perplexity: 65.64265775245345
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo in method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix broken[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: add a cache to use[0m
Epoch Step: 5 / 8 Loss (mean): 51.093927443027496 Loss (std): 20.856648281140917 Loss ratio: 0.40820209611792346 Tokens per Sec: 4114.1479773322035
Mean loss per sample: 53.44602761307701 Std loss per sample: 24.25750855439729 ratio: 0.4538692516122946
Epoch ended with duration 0:00:01.071692
b'BLEU = 0.00, 11.4/1.2/0.1/0.0 (BP=0.554, ratio=0.629, hyp_len=1957, ref_len=3113)\n'
Validation perplexity: 1398.1343927329544
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 52 / 1000
Epoch Step: 5 / 67 Loss (mean): 30.443776428699493 Loss (std): 12.13243903471618 Loss ratio: 0.3985195155775376 Tokens per Sec: 2643.126833113419
Epoch Step: 10 / 67 Loss (mean): 29.722230851650238 Loss (std): 18.93190737244945 Loss ratio: 0.6369611846076593 Tokens per Sec: 3006.452072998916
Epoch Step: 15 / 67 Loss (mean): 29.607790410518646 Loss (std): 11.43443442312925 Loss ratio: 0.38619681727640787 Tokens per Sec: 3046.5940787100553
Epoch Step: 20 / 67 Loss (mean): 34.31623028218746 Loss (std): 12.615753979471107 Loss ratio: 0.36763227999491455 Tokens per Sec: 2381.72336766919
Epoch Step: 25 / 67 Loss (mean): 43.92649358510971 Loss (std): 16.385043402656294 Loss ratio: 0.37301050153045967 Tokens per Sec: 2511.3960945426556
Epoch Step: 30 / 67 Loss (mean): 28.902878776192665 Loss (std): 12.659846760938034 Loss ratio: 0.43801335012227105 Tokens per Sec: 2931.54776131909
Epoch Step: 35 / 67 Loss (mean): 39.68560080230236 Loss (std): 18.461696522793318 Loss ratio: 0.46519886683238176 Tokens per Sec: 2643.331124484414
Epoch Step: 40 / 67 Loss (mean): 30.589544728398323 Loss (std): 14.270476759762214 Loss ratio: 0.4665148463786705 Tokens per Sec: 2640.3709344941276
Epoch Step: 45 / 67 Loss (mean): 27.671625591814518 Loss (std): 10.754013740342966 Loss ratio: 0.3886296345207882 Tokens per Sec: 2736.818408817821
Epoch Step: 50 / 67 Loss (mean): 29.569152131676674 Loss (std): 9.46505582227452 Loss ratio: 0.32009899303588246 Tokens per Sec: 2787.181800366848
Epoch Step: 55 / 67 Loss (mean): 29.558561459183693 Loss (std): 10.575723276591228 Loss ratio: 0.357788835265033 Tokens per Sec: 2289.4656124504572
Epoch Step: 60 / 67 Loss (mean): 28.910064846277237 Loss (std): 14.540318130829185 Loss ratio: 0.5029500351571002 Tokens per Sec: 2943.847306999397
Epoch Step: 65 / 67 Loss (mean): 30.693063728511333 Loss (std): 13.533283533794759 Loss ratio: 0.44092318881882914 Tokens per Sec: 3106.19794863106
Mean loss per sample: 30.3165603209369 Std loss per sample: 14.011233689691009 ratio: 0.46216435972173003
Epoch ended with duration 0:00:11.617076
Train perplexity: 60.45032526595155
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix 'statement unnecessarily nested within else clause[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix broken assumption[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix method_1 ( )[0m
Epoch Step: 5 / 8 Loss (mean): 51.09319198131561 Loss (std): 20.259851530867554 Loss ratio: 0.3965274187268712 Tokens per Sec: 4318.007212063501
Mean loss per sample: 52.06339451524078 Std loss per sample: 23.18673018843615 ratio: 0.44535571305571675
Epoch ended with duration 0:00:01.060658
b'BLEU = 0.00, 10.3/1.0/0.1/0.0 (BP=0.686, ratio=0.726, hyp_len=2261, ref_len=3113)\n'
Validation perplexity: 1159.243017845263
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 53 / 1000
Epoch Step: 5 / 67 Loss (mean): 28.959885582327843 Loss (std): 13.085807689718573 Loss ratio: 0.45185978558229906 Tokens per Sec: 2895.85434095166
Epoch Step: 10 / 67 Loss (mean): 27.837451830506325 Loss (std): 13.749463497192835 Loss ratio: 0.4939196152330711 Tokens per Sec: 2642.1820655549
Epoch Step: 15 / 67 Loss (mean): 28.65859128534794 Loss (std): 9.447532756382307 Loss ratio: 0.32965796058553914 Tokens per Sec: 2751.484540201946
Epoch Step: 20 / 67 Loss (mean): 29.374124564230442 Loss (std): 13.312703519818852 Loss ratio: 0.4532119243488891 Tokens per Sec: 2615.0515108792815
Epoch Step: 25 / 67 Loss (mean): 30.914480105042458 Loss (std): 12.075687935378069 Loss ratio: 0.39061591507755633 Tokens per Sec: 2311.312852310903
Epoch Step: 30 / 67 Loss (mean): 27.960793867707253 Loss (std): 11.390758884566017 Loss ratio: 0.4073832430674131 Tokens per Sec: 3778.9752014587334
Epoch Step: 35 / 67 Loss (mean): 25.895560674369335 Loss (std): 14.825122685550761 Loss ratio: 0.5724966866704776 Tokens per Sec: 2549.7275673745694
Epoch Step: 40 / 67 Loss (mean): 29.673999309539795 Loss (std): 10.6030526936757 Loss ratio: 0.3573179531033742 Tokens per Sec: 2931.215803716441
Epoch Step: 45 / 67 Loss (mean): 27.11320112645626 Loss (std): 11.619340485026996 Loss ratio: 0.42854919383492446 Tokens per Sec: 3050.349571803812
Epoch Step: 50 / 67 Loss (mean): 28.688321202993393 Loss (std): 11.807548454294857 Loss ratio: 0.41158032116089227 Tokens per Sec: 2644.051604761833
Epoch Step: 55 / 67 Loss (mean): 27.217442981898785 Loss (std): 13.308988346880788 Loss ratio: 0.4889874613031083 Tokens per Sec: 2194.0116699154228
Epoch Step: 60 / 67 Loss (mean): 29.58942849934101 Loss (std): 12.663894406044742 Loss ratio: 0.42798712406110784 Tokens per Sec: 2749.495922641839
Epoch Step: 65 / 67 Loss (mean): 30.13325121998787 Loss (std): 9.992319242151497 Loss ratio: 0.3316044182953425 Tokens per Sec: 2698.7893339714083
Mean loss per sample: 30.349265530474913 Std loss per sample: 14.277034356113317 ratio: 0.4704243778742248
Epoch ended with duration 0:00:11.655396
Train perplexity: 60.71841099160501
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix 'statement unnecessarily nested within else clause[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix broken assumption[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix method_1 ( )[0m
Epoch Step: 5 / 8 Loss (mean): 51.38062411546707 Loss (std): 20.865235816118123 Loss ratio: 0.406091521372491 Tokens per Sec: 4201.143849714231
Mean loss per sample: 53.2892737857631 Std loss per sample: 24.107151283647816 ratio: 0.4523828074776344
Epoch ended with duration 0:00:01.072088
b'BLEU = 0.00, 10.9/1.3/0.1/0.0 (BP=0.620, ratio=0.677, hyp_len=2107, ref_len=3113)\n'
Validation perplexity: 1368.7471330497021
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 54 / 1000
Epoch Step: 5 / 67 Loss (mean): 31.160125836730003 Loss (std): 14.234480045367306 Loss ratio: 0.45681715535912276 Tokens per Sec: 2868.371397689876
Epoch Step: 10 / 67 Loss (mean): 28.578412026166916 Loss (std): 12.366251874293852 Loss ratio: 0.43271305147994527 Tokens per Sec: 2731.2302154366193
Epoch Step: 15 / 67 Loss (mean): 29.402248576283455 Loss (std): 12.500200869800388 Loss ratio: 0.42514438436124724 Tokens per Sec: 2725.3578965972533
Epoch Step: 20 / 67 Loss (mean): 29.294751524925232 Loss (std): 9.948687101690652 Loss ratio: 0.33960646818341783 Tokens per Sec: 2943.905847992961
Epoch Step: 25 / 67 Loss (mean): 29.200970992445946 Loss (std): 11.534904789014492 Loss ratio: 0.39501785033102077 Tokens per Sec: 2613.3613430210166
Epoch Step: 30 / 67 Loss (mean): 30.98273366689682 Loss (std): 11.697198968883498 Loss ratio: 0.37753928025341577 Tokens per Sec: 2531.5847962947273
Epoch Step: 35 / 67 Loss (mean): 26.34161516278982 Loss (std): 12.869864853968318 Loss ratio: 0.48857538819974466 Tokens per Sec: 2503.250783328212
Epoch Step: 40 / 67 Loss (mean): 43.591696962714195 Loss (std): 19.384621350294733 Loss ratio: 0.44468609163977285 Tokens per Sec: 2910.1449398034074
Epoch Step: 45 / 67 Loss (mean): 28.34287379682064 Loss (std): 11.665920430832708 Loss ratio: 0.41159977334907133 Tokens per Sec: 3131.566920429659
Epoch Step: 50 / 67 Loss (mean): 28.783523827791214 Loss (std): 13.146909840420436 Loss ratio: 0.4567512275104678 Tokens per Sec: 2478.397038528515
Epoch Step: 55 / 67 Loss (mean): 28.947648987174034 Loss (std): 12.854272090186862 Loss ratio: 0.44405236832470446 Tokens per Sec: 2708.9423949125603
Epoch Step: 60 / 67 Loss (mean): 29.39138824492693 Loss (std): 19.024466587721236 Loss ratio: 0.6472802995620642 Tokens per Sec: 2931.6086798887613
Epoch Step: 65 / 67 Loss (mean): 27.633321195840836 Loss (std): 11.612774292000458 Loss ratio: 0.4202453338742477 Tokens per Sec: 2602.504398276685
Mean loss per sample: 29.94222463244739 Std loss per sample: 13.871105682734278 ratio: 0.4632623611975251
Epoch ended with duration 0:00:11.639626
Train perplexity: 57.46490685895761
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix 'statement unnecessarily nested within else clause[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix broken[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix method_1 ( )[0m
Epoch Step: 5 / 8 Loss (mean): 51.682808846235275 Loss (std): 20.968832434528572 Loss ratio: 0.4057216103891382 Tokens per Sec: 4305.016015647694
Mean loss per sample: 52.67616778123574 Std loss per sample: 24.156189800024055 ratio: 0.4585791035586486
Epoch ended with duration 0:00:01.061460
b'BLEU = 0.00, 10.7/1.2/0.2/0.0 (BP=0.508, ratio=0.596, hyp_len=1855, ref_len=3113)\n'
Validation perplexity: 1259.6185973519823
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 55 / 1000
Epoch Step: 5 / 67 Loss (mean): 32.80797728896141 Loss (std): 13.115920469067948 Loss ratio: 0.39977839394204095 Tokens per Sec: 2279.0815071991656
Epoch Step: 10 / 67 Loss (mean): 24.731223322451115 Loss (std): 11.990691234395076 Loss ratio: 0.48484019888777086 Tokens per Sec: 2608.5083115725283
Epoch Step: 15 / 67 Loss (mean): 32.46026994287968 Loss (std): 10.799176359940667 Loss ratio: 0.332689049688865 Tokens per Sec: 2966.135346832099
Epoch Step: 20 / 67 Loss (mean): 28.80667380988598 Loss (std): 10.89022779215143 Loss ratio: 0.378045305196398 Tokens per Sec: 2672.2695235899737
Epoch Step: 25 / 67 Loss (mean): 36.27095030248165 Loss (std): 21.335559196980252 Loss ratio: 0.5882271906043905 Tokens per Sec: 2452.9055537191052
Epoch Step: 30 / 67 Loss (mean): 27.283824130892754 Loss (std): 12.193955564352445 Loss ratio: 0.4469298550618332 Tokens per Sec: 2486.327489498692
Epoch Step: 35 / 67 Loss (mean): 27.905559241771698 Loss (std): 12.601636048301938 Loss ratio: 0.4515815626242175 Tokens per Sec: 2942.5052675172087
Epoch Step: 40 / 67 Loss (mean): 25.495900459587574 Loss (std): 14.627292729851472 Loss ratio: 0.5737115562180888 Tokens per Sec: 2636.482458224791
Epoch Step: 45 / 67 Loss (mean): 25.800101459026337 Loss (std): 12.140051180217933 Loss ratio: 0.4705427689692536 Tokens per Sec: 2654.3438745785797
Epoch Step: 50 / 67 Loss (mean): 29.072146579623222 Loss (std): 12.491307536195794 Loss ratio: 0.4296658143898806 Tokens per Sec: 2562.607917185458
Epoch Step: 55 / 67 Loss (mean): 26.162641294300556 Loss (std): 12.666221209331695 Loss ratio: 0.4841338864394777 Tokens per Sec: 3118.8914647063216
Epoch Step: 60 / 67 Loss (mean): 28.179886423051357 Loss (std): 14.229842350739721 Loss ratio: 0.5049645033025969 Tokens per Sec: 3775.1128699474198
Epoch Step: 65 / 67 Loss (mean): 30.118520945310593 Loss (std): 12.383928507258075 Loss ratio: 0.41117319571385635 Tokens per Sec: 2695.9944731715805
Mean loss per sample: 29.04044990298114 Std loss per sample: 13.316929181933803 ratio: 0.458564837198571
Epoch ended with duration 0:00:11.628181
Train perplexity: 50.864466848625234
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix 'statement unnecessarily nested within else clause[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix broken assumption[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: add a cache to use constraints[0m
Epoch Step: 5 / 8 Loss (mean): 51.76964610815048 Loss (std): 20.888121060984705 Loss ratio: 0.40348201371413533 Tokens per Sec: 4200.023780813452
Mean loss per sample: 53.35448596712018 Std loss per sample: 24.16317380451217 ratio: 0.45287989128791867
Epoch ended with duration 0:00:01.060966
b'BLEU = 0.00, 10.8/1.1/0.1/0.0 (BP=0.609, ratio=0.668, hyp_len=2081, ref_len=3113)\n'
Validation perplexity: 1380.8969318232514
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved checkpoint_commit_msg_generator!
Epoch 56 / 1000
Epoch Step: 5 / 67 Loss (mean): 46.906501442193985 Loss (std): 16.217984781948196 Loss ratio: 0.34575131982364327 Tokens per Sec: 3095.9022990145277
Epoch Step: 10 / 67 Loss (mean): 32.654791951179504 Loss (std): 13.067545955607748 Loss ratio: 0.40017238435156355 Tokens per Sec: 2227.2258928816486
Epoch Step: 15 / 67 Loss (mean): 39.311152666807175 Loss (std): 16.450582929462488 Loss ratio: 0.41847114148226766 Tokens per Sec: 2905.4492656325815
Epoch Step: 20 / 67 Loss (mean): 27.048187136650085 Loss (std): 11.328237310383393 Loss ratio: 0.41881687867478995 Tokens per Sec: 2644.8493192246347
Epoch Step: 25 / 67 Loss (mean): 26.859465152025223 Loss (std): 13.575546693139373 Loss ratio: 0.5054287796239222 Tokens per Sec: 3006.8964268196055
Epoch Step: 30 / 67 Loss (mean): 28.642413951456547 Loss (std): 10.162434522808363 Loss ratio: 0.3548037026499149 Tokens per Sec: 3059.6458232664486
Epoch Step: 35 / 67 Loss (mean): 28.440496176481247 Loss (std): 10.168331246547169 Loss ratio: 0.35753002280444846 Tokens per Sec: 3534.7573957081254
Epoch Step: 40 / 67 Loss (mean): 26.29459810256958 Loss (std): 11.958021193477657 Loss ratio: 0.4547710197673296 Tokens per Sec: 2889.893658221193
Epoch Step: 45 / 67 Loss (mean): 27.458328530192375 Loss (std): 13.747047205922762 Loss ratio: 0.500651275652373 Tokens per Sec: 2202.2070754543824
Epoch Step: 50 / 67 Loss (mean): 27.406461156904697 Loss (std): 11.41632184228556 Loss ratio: 0.41655585436317333 Tokens per Sec: 2265.419897588527
Epoch Step: 55 / 67 Loss (mean): 33.01324412226677 Loss (std): 11.850113754199391 Loss ratio: 0.35895029613907975 Tokens per Sec: 2988.114883695017
Epoch Step: 60 / 67 Loss (mean): 29.635227248072624 Loss (std): 12.870110524947634 Loss ratio: 0.434284185412638 Tokens per Sec: 2805.1403804992706
Epoch Step: 65 / 67 Loss (mean): 27.17777868360281 Loss (std): 12.146725856246707 Loss ratio: 0.4469359323900596 Tokens per Sec: 2449.444081764825
Mean loss per sample: 29.56467266391266 Std loss per sample: 14.15421882950176 ratio: 0.478754457741003
Epoch ended with duration 0:00:11.635101
Train perplexity: 54.603160867163155
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix 'statement unnecessarily nested within else clause[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for for kernel[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: add a cache to use constraints[0m
Epoch Step: 5 / 8 Loss (mean): 52.08658716082573 Loss (std): 21.150942172826948 Loss ratio: 0.406072720939078 Tokens per Sec: 4225.694621217657
Mean loss per sample: 53.38943282502596 Std loss per sample: 24.250587888079554 ratio: 0.45422074378569244
Epoch ended with duration 0:00:01.054979
b'BLEU = 0.54, 9.8/1.0/0.3/0.1 (BP=0.708, ratio=0.744, hyp_len=2315, ref_len=3113)\n'
Validation perplexity: 1387.4522669421397
Validation accuracy: 0.0
Validation BLEU: 0.54
Epoch 57 / 1000
Epoch Step: 5 / 67 Loss (mean): 26.510806620121002 Loss (std): 11.041235170958759 Loss ratio: 0.41648054429919734 Tokens per Sec: 2183.7377175278502
Epoch Step: 10 / 67 Loss (mean): 31.890666127204895 Loss (std): 10.813998766384048 Loss ratio: 0.33909604532089016 Tokens per Sec: 2713.6583050822105
Epoch Step: 15 / 67 Loss (mean): 24.415288642048836 Loss (std): 13.93176737070353 Loss ratio: 0.5706165335563459 Tokens per Sec: 3213.584746011094
Epoch Step: 20 / 67 Loss (mean): 28.73726462572813 Loss (std): 11.598595750081753 Loss ratio: 0.40360820353436383 Tokens per Sec: 2629.196769975719
Epoch Step: 25 / 67 Loss (mean): 26.645081594586372 Loss (std): 13.76686179156957 Loss ratio: 0.5166755351339085 Tokens per Sec: 2710.3335558636745
Epoch Step: 30 / 67 Loss (mean): 26.094870015978813 Loss (std): 11.030266411845199 Loss ratio: 0.4226986532253648 Tokens per Sec: 2231.46868842262
Epoch Step: 35 / 67 Loss (mean): 27.969235487282276 Loss (std): 9.538807224873954 Loss ratio: 0.3410464054053708 Tokens per Sec: 3347.8089128863658
Epoch Step: 40 / 67 Loss (mean): 39.32990103214979 Loss (std): 13.976292053247336 Loss ratio: 0.3553604684085671 Tokens per Sec: 2611.022150710474
Epoch Step: 45 / 67 Loss (mean): 29.318816483020782 Loss (std): 15.725995484975913 Loss ratio: 0.5363789324198406 Tokens per Sec: 2633.3003218272356
Epoch Step: 50 / 67 Loss (mean): 26.536732718348503 Loss (std): 10.668326561490979 Loss ratio: 0.4020211031524048 Tokens per Sec: 2758.8797598074407
Epoch Step: 55 / 67 Loss (mean): 29.836259976029396 Loss (std): 13.031192277306006 Loss ratio: 0.4367568953942395 Tokens per Sec: 3041.3598688538937
Epoch Step: 60 / 67 Loss (mean): 20.736706346273422 Loss (std): 14.248154070117753 Loss ratio: 0.6870982224560593 Tokens per Sec: 2369.347971452764
Epoch Step: 65 / 67 Loss (mean): 25.617066107690334 Loss (std): 12.393687602405446 Loss ratio: 0.48380589526935786 Tokens per Sec: 3173.743023795998
Mean loss per sample: 28.70850721492043 Std loss per sample: 13.420015229031701 ratio: 0.4674577862431325
Epoch ended with duration 0:00:11.619879
Train perplexity: 48.630593636686505
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix 'statement unnecessarily nested within else clause[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix broken assumption[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use the string.compareto for of assuming[0m
Epoch Step: 5 / 8 Loss (mean): 52.17204624414444 Loss (std): 21.243669350339694 Loss ratio: 0.40718489842103883 Tokens per Sec: 4220.476261597074
Mean loss per sample: 53.510585952977664 Std loss per sample: 24.43383420507111 ratio: 0.45661683141616694
Epoch ended with duration 0:00:01.056316
b'BLEU = 0.51, 10.2/1.1/0.3/0.1 (BP=0.619, ratio=0.676, hyp_len=2104, ref_len=3113)\n'
Validation perplexity: 1410.4200710320627
Validation accuracy: 0.0
Validation BLEU: 0.51
Epoch 58 / 1000
Epoch Step: 5 / 67 Loss (mean): 24.860004007816315 Loss (std): 12.293418303894631 Loss ratio: 0.49450588584094424 Tokens per Sec: 3055.1494627830784
Epoch Step: 10 / 67 Loss (mean): 27.416176043450832 Loss (std): 9.299066116907767 Loss ratio: 0.33918173352002257 Tokens per Sec: 3198.5079278351727
Epoch Step: 15 / 67 Loss (mean): 27.499012127518654 Loss (std): 9.657587732315895 Loss ratio: 0.3511976243921653 Tokens per Sec: 2517.552782685343
Epoch Step: 20 / 67 Loss (mean): 45.26399355381727 Loss (std): 18.387249313926503 Loss ratio: 0.4062224269289169 Tokens per Sec: 2790.7413931801816
Epoch Step: 25 / 67 Loss (mean): 28.66724433004856 Loss (std): 11.38206884524945 Loss ratio: 0.39704091241581047 Tokens per Sec: 2504.1300728478536
Epoch Step: 30 / 67 Loss (mean): 20.159074530005455 Loss (std): 14.100087666114376 Loss ratio: 0.6994412191456172 Tokens per Sec: 2580.363400644519
Epoch Step: 35 / 67 Loss (mean): 27.686907663941383 Loss (std): 10.325211237442998 Loss ratio: 0.3729275714994438 Tokens per Sec: 3090.027588893311
Epoch Step: 40 / 67 Loss (mean): 25.6520736515522 Loss (std): 12.447213795519763 Loss ratio: 0.48523226482965387 Tokens per Sec: 2372.4117957430294
Epoch Step: 45 / 67 Loss (mean): 27.67047868669033 Loss (std): 11.169077000255983 Loss ratio: 0.4036459624252318 Tokens per Sec: 2513.6107395437134
Epoch Step: 50 / 67 Loss (mean): 24.36375357210636 Loss (std): 13.757932267746737 Loss ratio: 0.5646885331945712 Tokens per Sec: 2562.9458698418293
Epoch Step: 55 / 67 Loss (mean): 26.677747882902622 Loss (std): 13.752386652698052 Loss ratio: 0.5155002855961374 Tokens per Sec: 3165.7462935841104
Epoch Step: 60 / 67 Loss (mean): 27.26847916096449 Loss (std): 13.639817878711654 Loss ratio: 0.5002045694663234 Tokens per Sec: 2629.9923613655415
Epoch Step: 65 / 67 Loss (mean): 27.0398011431098 Loss (std): 11.54560355233517 Loss ratio: 0.4269855200202604 Tokens per Sec: 2685.2278227791785
Mean loss per sample: 28.684369508056534 Std loss per sample: 13.54908027994685 ratio: 0.4723506394707871
Epoch ended with duration 0:00:11.616883
Train perplexity: 48.47203369101141
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix 'statement unnecessarily nested within else clause[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix broken[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use the string.compareto for in sslsocket[0m
Epoch Step: 5 / 8 Loss (mean): 52.7199342250824 Loss (std): 21.86306336401809 Loss ratio: 0.41470202278090795 Tokens per Sec: 4329.0190805619395
Mean loss per sample: 53.23498212704893 Std loss per sample: 24.892483791232962 ratio: 0.46759635857161264
Epoch ended with duration 0:00:01.041690
b'BLEU = 0.00, 10.5/1.0/0.1/0.0 (BP=0.623, ratio=0.679, hyp_len=2114, ref_len=3113)\n'
Validation perplexity: 1358.7135429716802
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 59 / 1000
Epoch Step: 5 / 67 Loss (mean): 26.96282358467579 Loss (std): 11.392047075816931 Loss ratio: 0.422509424505954 Tokens per Sec: 2478.5336270339712
Epoch Step: 10 / 67 Loss (mean): 27.730270236730576 Loss (std): 12.5359230022029 Loss ratio: 0.4520663843224377 Tokens per Sec: 2773.1561937862657
Epoch Step: 15 / 67 Loss (mean): 37.04918368905783 Loss (std): 21.16845941122507 Loss ratio: 0.5713610207686438 Tokens per Sec: 3315.043865426667
Epoch Step: 20 / 67 Loss (mean): 28.08034824579954 Loss (std): 12.030618910352432 Loss ratio: 0.42843553096433046 Tokens per Sec: 2704.113212291773
Epoch Step: 25 / 67 Loss (mean): 27.421891875565052 Loss (std): 12.717739461400653 Loss ratio: 0.4637805268546444 Tokens per Sec: 2435.268289690075
Epoch Step: 30 / 67 Loss (mean): 24.455054953694344 Loss (std): 11.901999782810822 Loss ratio: 0.4866887359422117 Tokens per Sec: 2519.739579402024
Epoch Step: 35 / 67 Loss (mean): 26.902126610279083 Loss (std): 11.29652168480563 Loss ratio: 0.4199118474332553 Tokens per Sec: 2138.592935984439
Epoch Step: 40 / 67 Loss (mean): 30.191911578178406 Loss (std): 8.944195391149172 Loss ratio: 0.29624475310181103 Tokens per Sec: 3403.450330544357
Epoch Step: 45 / 67 Loss (mean): 28.06709862500429 Loss (std): 17.77961691478556 Loss ratio: 0.6334682879884896 Tokens per Sec: 3297.974456227868
Epoch Step: 50 / 67 Loss (mean): 26.760997384786606 Loss (std): 13.249788870391988 Loss ratio: 0.49511565955028186 Tokens per Sec: 3181.718428981424
Epoch Step: 55 / 67 Loss (mean): 26.70832983404398 Loss (std): 11.555710852677882 Loss ratio: 0.4326631775360324 Tokens per Sec: 2703.0934766741166
Epoch Step: 60 / 67 Loss (mean): 29.697219789028168 Loss (std): 11.622699425167815 Loss ratio: 0.39137331735888276 Tokens per Sec: 2523.804673592358
Epoch Step: 65 / 67 Loss (mean): 32.28155353665352 Loss (std): 13.372319506137515 Loss ratio: 0.41424027164473826 Tokens per Sec: 2371.680969626097
Mean loss per sample: 27.62283284072858 Std loss per sample: 12.88253176587786 ratio: 0.4663725780826928
Epoch ended with duration 0:00:11.620909
Train perplexity: 41.98705676899943
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix 'statement unnecessarily nested within else clause[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` hidl java . '' ''[0m
Epoch Step: 5 / 8 Loss (mean): 52.89512777328491 Loss (std): 21.369313972957634 Loss ratio: 0.403993994769219 Tokens per Sec: 4313.841730018961
Mean loss per sample: 53.50963115496714 Std loss per sample: 24.734167260701774 ratio: 0.46223767061802623
Epoch ended with duration 0:00:01.045330
b'BLEU = 0.49, 9.8/0.9/0.2/0.1 (BP=0.728, ratio=0.759, hyp_len=2363, ref_len=3113)\n'
Validation perplexity: 1410.237585436709
Validation accuracy: 0.0
Validation BLEU: 0.49
Epoch 60 / 1000
Epoch Step: 5 / 67 Loss (mean): 41.84097395092249 Loss (std): 18.37354156644535 Loss ratio: 0.439127960740031 Tokens per Sec: 2713.0074947724675
Epoch Step: 10 / 67 Loss (mean): 23.771144799888134 Loss (std): 11.68000970358329 Loss ratio: 0.4913524275716942 Tokens per Sec: 2642.068902961311
Epoch Step: 15 / 67 Loss (mean): 26.725243620574474 Loss (std): 11.933897362494173 Loss ratio: 0.44654026477449366 Tokens per Sec: 2641.9992594471764
Epoch Step: 20 / 67 Loss (mean): 25.67186264693737 Loss (std): 10.661114341775821 Loss ratio: 0.41528402081286775 Tokens per Sec: 2917.852930675559
Epoch Step: 25 / 67 Loss (mean): 27.26205664128065 Loss (std): 11.368812626679613 Loss ratio: 0.4170196246113278 Tokens per Sec: 2422.7371209727366
Epoch Step: 30 / 67 Loss (mean): 25.857493698596954 Loss (std): 11.048692276657144 Loss ratio: 0.42729169367472974 Tokens per Sec: 3006.138349855888
Epoch Step: 35 / 67 Loss (mean): 27.927536077797413 Loss (std): 12.58072279942634 Loss ratio: 0.4504773627140026 Tokens per Sec: 2910.2422119373205
Epoch Step: 40 / 67 Loss (mean): 25.52431972324848 Loss (std): 13.037767185047857 Loss ratio: 0.5107978322796428 Tokens per Sec: 2590.286919698838
Epoch Step: 45 / 67 Loss (mean): 26.75619265437126 Loss (std): 9.070614132561198 Loss ratio: 0.3390098976238048 Tokens per Sec: 3468.2256957147083
Epoch Step: 50 / 67 Loss (mean): 27.464373849332333 Loss (std): 9.507137489781023 Loss ratio: 0.34616254286140025 Tokens per Sec: 2571.4911179213586
Epoch Step: 55 / 67 Loss (mean): 27.176834143698215 Loss (std): 17.354673195781864 Loss ratio: 0.638583328139642 Tokens per Sec: 2405.8167349548826
Epoch Step: 60 / 67 Loss (mean): 46.341693341732025 Loss (std): 23.694222121247034 Loss ratio: 0.5112938352623749 Tokens per Sec: 2555.144217105637
Epoch Step: 65 / 67 Loss (mean): 29.748677417635918 Loss (std): 9.272692917811115 Loss ratio: 0.3117010140529468 Tokens per Sec: 2596.2058436536645
Mean loss per sample: 28.15094068494136 Std loss per sample: 13.74575112095596 ratio: 0.4882874527993626
Epoch ended with duration 0:00:11.681809
Train perplexity: 45.096932974648794
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix 'statement unnecessarily nested within else clause[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix broken assumption[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix method_1 ( )[0m
Epoch Step: 5 / 8 Loss (mean): 53.17722722887993 Loss (std): 21.993774441019998 Loss ratio: 0.4135938556246392 Tokens per Sec: 4307.474076782072
Mean loss per sample: 54.27308983880965 Std loss per sample: 25.47946067044852 ratio: 0.4694676633691241
Epoch ended with duration 0:00:01.056663
b'BLEU = 0.00, 10.7/0.8/0.1/0.0 (BP=0.612, ratio=0.670, hyp_len=2087, ref_len=3113)\n'
Validation perplexity: 1563.959140844398
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved checkpoint_commit_msg_generator!
Epoch 61 / 1000
Epoch Step: 5 / 67 Loss (mean): 25.14509527385235 Loss (std): 10.338163432327805 Loss ratio: 0.41114035638903146 Tokens per Sec: 3016.481593398143
Epoch Step: 10 / 67 Loss (mean): 26.729687348008156 Loss (std): 9.54613600954656 Loss ratio: 0.35713608936985636 Tokens per Sec: 2753.208693373441
Epoch Step: 15 / 67 Loss (mean): 45.222206957638264 Loss (std): 19.77607490524708 Loss ratio: 0.4373089293004263 Tokens per Sec: 2881.0506163384453
Epoch Step: 20 / 67 Loss (mean): 26.210338309407234 Loss (std): 11.551667170394463 Loss ratio: 0.4407294188281583 Tokens per Sec: 2960.289289333575
Epoch Step: 25 / 67 Loss (mean): 26.42537111788988 Loss (std): 17.030196688336993 Loss ratio: 0.6444638605967433 Tokens per Sec: 2658.4887954124406
Epoch Step: 30 / 67 Loss (mean): 23.72742498666048 Loss (std): 13.524474062390176 Loss ratio: 0.5699933334524759 Tokens per Sec: 2272.472109273537
Epoch Step: 35 / 67 Loss (mean): 24.40856210142374 Loss (std): 12.190703280182241 Loss ratio: 0.49944372919333757 Tokens per Sec: 2703.3999192101487
Epoch Step: 40 / 67 Loss (mean): 24.50320465117693 Loss (std): 10.70041820074657 Loss ratio: 0.43669464272431857 Tokens per Sec: 3042.605767765605
Epoch Step: 45 / 67 Loss (mean): 46.039971113204956 Loss (std): 18.35947461028657 Loss ratio: 0.3987725049857991 Tokens per Sec: 2730.0925421772163
Epoch Step: 50 / 67 Loss (mean): 24.891066409647465 Loss (std): 11.301265320297084 Loss ratio: 0.4540289730582558 Tokens per Sec: 2605.4539963944994
Epoch Step: 55 / 67 Loss (mean): 25.53180291503668 Loss (std): 12.749467799348633 Loss ratio: 0.4993563455653957 Tokens per Sec: 3513.478530486386
Epoch Step: 60 / 67 Loss (mean): 26.85708399116993 Loss (std): 9.946850252549316 Loss ratio: 0.3703622573403591 Tokens per Sec: 2216.3781919245944
Epoch Step: 65 / 67 Loss (mean): 25.825386941432953 Loss (std): 11.23130398719067 Loss ratio: 0.4348939287012862 Tokens per Sec: 2343.1375041025676
Mean loss per sample: 27.747739546186086 Std loss per sample: 13.321932405710688 ratio: 0.4801087448415877
Epoch ended with duration 0:00:11.657448
Train perplexity: 42.70266114615334
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix 'statement unnecessarily nested within else clause[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix broken assumption[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix method_1 ( )[0m
Epoch Step: 5 / 8 Loss (mean): 53.52443942427635 Loss (std): 22.528650364463417 Loss ratio: 0.4209039946384829 Tokens per Sec: 4338.351832978433
Mean loss per sample: 54.45131908479284 Std loss per sample: 25.85757909645279 ratio: 0.47487516429467524
Epoch ended with duration 0:00:01.058290
b'BLEU = 0.00, 11.4/1.2/0.1/0.0 (BP=0.508, ratio=0.596, hyp_len=1855, ref_len=3113)\n'
Validation perplexity: 1602.1937312783878
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 62 / 1000
Epoch Step: 5 / 67 Loss (mean): 26.337541073560715 Loss (std): 9.44349019770304 Loss ratio: 0.3585562589661421 Tokens per Sec: 2477.930103512076
Epoch Step: 10 / 67 Loss (mean): 22.835955016314983 Loss (std): 12.084138082724051 Loss ratio: 0.5291715662467642 Tokens per Sec: 2806.8817085571322
Epoch Step: 15 / 67 Loss (mean): 25.727009564638138 Loss (std): 11.055865029847935 Loss ratio: 0.42973766547062114 Tokens per Sec: 2688.685762721069
Epoch Step: 20 / 67 Loss (mean): 23.175341457128525 Loss (std): 13.07996495315734 Loss ratio: 0.5643914665660325 Tokens per Sec: 2666.2560008287132
Epoch Step: 25 / 67 Loss (mean): 45.52282439172268 Loss (std): 21.824496210124444 Loss ratio: 0.4794187641418125 Tokens per Sec: 2469.836327625421
Epoch Step: 30 / 67 Loss (mean): 30.05296590179205 Loss (std): 10.346405641223951 Loss ratio: 0.3442723648319515 Tokens per Sec: 3065.495201904225
Epoch Step: 35 / 67 Loss (mean): 24.862756848335266 Loss (std): 10.34518721376993 Loss ratio: 0.4160917181017524 Tokens per Sec: 2703.995326389275
Epoch Step: 40 / 67 Loss (mean): 26.507546827197075 Loss (std): 11.60118889637405 Loss ratio: 0.4376560747775831 Tokens per Sec: 2988.664216453063
Epoch Step: 45 / 67 Loss (mean): 24.088349483907223 Loss (std): 9.689996259219363 Loss ratio: 0.40226900002812516 Tokens per Sec: 2923.6679541947688
Epoch Step: 50 / 67 Loss (mean): 27.798234291374683 Loss (std): 11.859503130070618 Loss ratio: 0.42662792916132874 Tokens per Sec: 2617.658814958208
Epoch Step: 55 / 67 Loss (mean): 27.314701445400715 Loss (std): 12.15203703402156 Loss ratio: 0.44488998198688845 Tokens per Sec: 3137.233507348684
Epoch Step: 60 / 67 Loss (mean): 25.37252512574196 Loss (std): 13.154431799362454 Loss ratio: 0.5184518188146945 Tokens per Sec: 2457.0428872351577
Epoch Step: 65 / 67 Loss (mean): 28.038800954818726 Loss (std): 13.04669127589448 Loss ratio: 0.4653084594065812 Tokens per Sec: 2778.5994537530264
Mean loss per sample: 26.802269033015307 Std loss per sample: 12.77701507708361 ratio: 0.4767139327399763
Epoch ended with duration 0:00:11.591461
Train perplexity: 37.575015556916526
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix 'statement unnecessarily nested within else clause[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix broken assumption[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix method_1 ( )[0m
Epoch Step: 5 / 8 Loss (mean): 53.59940966963768 Loss (std): 22.36876124717132 Loss ratio: 0.4173322315496041 Tokens per Sec: 4326.751580455296
Mean loss per sample: 54.14247660558732 Std loss per sample: 25.646423655665867 ratio: 0.47368397723090566
Epoch ended with duration 0:00:01.040732
b'BLEU = 0.44, 10.0/0.9/0.2/0.1 (BP=0.639, ratio=0.691, hyp_len=2151, ref_len=3113)\n'
Validation perplexity: 1536.519946677673
Validation accuracy: 0.0
Validation BLEU: 0.44
Epoch 63 / 1000
Epoch Step: 5 / 67 Loss (mean): 26.55350388586521 Loss (std): 11.976621677520143 Loss ratio: 0.4510373368802548 Tokens per Sec: 2673.943824627906
Epoch Step: 10 / 67 Loss (mean): 27.098180666565895 Loss (std): 10.237712219146488 Loss ratio: 0.3778007219421161 Tokens per Sec: 2239.566998593475
Epoch Step: 15 / 67 Loss (mean): 25.443764738738537 Loss (std): 11.926330748696486 Loss ratio: 0.4687329438531735 Tokens per Sec: 2679.400166865258
Epoch Step: 20 / 67 Loss (mean): 22.86348343640566 Loss (std): 10.923506215870976 Loss ratio: 0.47777086314316447 Tokens per Sec: 2969.6282929524864
Epoch Step: 25 / 67 Loss (mean): 26.56205751001835 Loss (std): 12.386748121949985 Loss ratio: 0.46633240355262784 Tokens per Sec: 2514.058014661017
Epoch Step: 30 / 67 Loss (mean): 25.053219944238663 Loss (std): 10.262739113411437 Loss ratio: 0.4096375290782332 Tokens per Sec: 2160.718973003438
Epoch Step: 35 / 67 Loss (mean): 23.095947191119194 Loss (std): 12.936068468893435 Loss ratio: 0.5601012316943461 Tokens per Sec: 2820.503017978381
Epoch Step: 40 / 67 Loss (mean): 28.690667361021042 Loss (std): 12.859027976231367 Loss ratio: 0.44819549905979394 Tokens per Sec: 2689.3530970222264
Epoch Step: 45 / 67 Loss (mean): 25.982254058122635 Loss (std): 9.068470611649758 Loss ratio: 0.349025553801586 Tokens per Sec: 2753.805727137091
Epoch Step: 50 / 67 Loss (mean): 23.174185886979103 Loss (std): 13.393520587465229 Loss ratio: 0.5779499937035828 Tokens per Sec: 3466.322648379402
Epoch Step: 55 / 67 Loss (mean): 25.95636521279812 Loss (std): 11.756043641486116 Loss ratio: 0.4529156353405618 Tokens per Sec: 2680.522850197356
Epoch Step: 60 / 67 Loss (mean): 27.94681655615568 Loss (std): 14.51703951179455 Loss ratio: 0.5194523491655785 Tokens per Sec: 3007.5154605784874
Epoch Step: 65 / 67 Loss (mean): 28.72099320590496 Loss (std): 12.821011703753053 Loss ratio: 0.44639861901144445 Tokens per Sec: 3163.7879562502617
Mean loss per sample: 27.271264308168472 Std loss per sample: 13.488870481044156 ratio: 0.49461844997790877
Epoch ended with duration 0:00:11.664050
Train perplexity: 40.036609639311806
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix 'statement unnecessarily nested within else clause[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java 7 in createguidmapper in sslsocket[0m
Epoch Step: 5 / 8 Loss (mean): 60.88799640536308 Loss (std): 23.55234289269472 Loss ratio: 0.38681422091629547 Tokens per Sec: 4111.680766287179
Mean loss per sample: 56.122026541193975 Std loss per sample: 26.31040461507101 ratio: 0.4688071018917854
Epoch ended with duration 0:00:01.074115
b'BLEU = 0.48, 9.8/0.8/0.2/0.1 (BP=0.692, ratio=0.731, hyp_len=2275, ref_len=3113)\n'
Validation perplexity: 2009.2962929454363
Validation accuracy: 0.0
Validation BLEU: 0.48
Epoch 64 / 1000
Epoch Step: 5 / 67 Loss (mean): 26.011325776576996 Loss (std): 9.296993818482795 Loss ratio: 0.3574209903154828 Tokens per Sec: 2878.4621281602035
Epoch Step: 10 / 67 Loss (mean): 25.122820273041725 Loss (std): 8.36182125025096 Loss ratio: 0.33283768141364645 Tokens per Sec: 3214.535763329927
Epoch Step: 15 / 67 Loss (mean): 24.597926527261734 Loss (std): 10.032522024826562 Loss ratio: 0.4078604761140163 Tokens per Sec: 2628.1913237196836
Epoch Step: 20 / 67 Loss (mean): 25.03244937956333 Loss (std): 11.447394385960823 Loss ratio: 0.45730220852085524 Tokens per Sec: 2810.547003692133
Epoch Step: 25 / 67 Loss (mean): 45.715434052050114 Loss (std): 22.25786271083428 Loss ratio: 0.4868785164654064 Tokens per Sec: 2357.880226241095
Epoch Step: 30 / 67 Loss (mean): 24.402784772217274 Loss (std): 12.887419958221862 Loss ratio: 0.5281126756030842 Tokens per Sec: 2309.246929581169
Epoch Step: 35 / 67 Loss (mean): 41.63213803619146 Loss (std): 20.23328346659982 Loss ratio: 0.48600154642576154 Tokens per Sec: 2469.9676797583234
Epoch Step: 40 / 67 Loss (mean): 26.797669231891632 Loss (std): 12.445665401586455 Loss ratio: 0.46443089113044933 Tokens per Sec: 2434.137329298945
Epoch Step: 45 / 67 Loss (mean): 24.508148305118084 Loss (std): 10.594057933106694 Loss ratio: 0.43226676292367283 Tokens per Sec: 3154.598069413967
Epoch Step: 50 / 67 Loss (mean): 23.073120698332787 Loss (std): 12.265103851580308 Loss ratio: 0.531575421111829 Tokens per Sec: 2556.3017477146213
Epoch Step: 55 / 67 Loss (mean): 29.982490614056587 Loss (std): 10.529928591287879 Loss ratio: 0.3512025977705524 Tokens per Sec: 2777.090437159648
Epoch Step: 60 / 67 Loss (mean): 25.347338996827602 Loss (std): 10.95110698013775 Loss ratio: 0.43204168222582884 Tokens per Sec: 3757.4919686804215
Epoch Step: 65 / 67 Loss (mean): 24.722121693193913 Loss (std): 10.79756786723622 Loss ratio: 0.43675733018533064 Tokens per Sec: 2650.653949343312
Mean loss per sample: 26.687923396298764 Std loss per sample: 13.221765703658802 ratio: 0.4954213000136411
Epoch ended with duration 0:00:11.663918
Train perplexity: 36.99816873065783
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix 'statement unnecessarily nested within else clause[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix broken assumption[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: add a cache to use of optiondefinitions[0m
Epoch Step: 5 / 8 Loss (mean): 54.23467428982258 Loss (std): 22.61919973703136 Loss ratio: 0.41706159450976865 Tokens per Sec: 4339.366191653823
Mean loss per sample: 55.71115502177692 Std loss per sample: 26.209674948188002 ratio: 0.470456499025068
Epoch ended with duration 0:00:01.060396
b'BLEU = 0.00, 10.3/1.0/0.2/0.0 (BP=0.645, ratio=0.695, hyp_len=2165, ref_len=3113)\n'
Validation perplexity: 1900.4754799574298
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 65 / 1000
Epoch Step: 5 / 67 Loss (mean): 24.555171504616737 Loss (std): 10.68904824467492 Loss ratio: 0.43530741549352325 Tokens per Sec: 2395.919553828619
Epoch Step: 10 / 67 Loss (mean): 22.11887740343809 Loss (std): 11.846328715962743 Loss ratio: 0.5355754950801158 Tokens per Sec: 3179.5220367945067
Epoch Step: 15 / 67 Loss (mean): 22.85110292583704 Loss (std): 9.414040110402212 Loss ratio: 0.4119731174882612 Tokens per Sec: 2766.695202466468
Epoch Step: 20 / 67 Loss (mean): 29.74622256308794 Loss (std): 10.50919401250552 Loss ratio: 0.3532950777268226 Tokens per Sec: 2612.08735249525
Epoch Step: 25 / 67 Loss (mean): 23.538175031542778 Loss (std): 9.99737756082461 Loss ratio: 0.4247303602521196 Tokens per Sec: 2498.525696054021
Epoch Step: 30 / 67 Loss (mean): 24.477094292640686 Loss (std): 10.196371120661823 Loss ratio: 0.4165678735701679 Tokens per Sec: 2963.5152433601907
Epoch Step: 35 / 67 Loss (mean): 24.821861900389194 Loss (std): 10.49114197131165 Loss ratio: 0.4226573338218095 Tokens per Sec: 2745.673848277635
Epoch Step: 40 / 67 Loss (mean): 22.9092288762331 Loss (std): 11.484346274490031 Loss ratio: 0.5012978104384965 Tokens per Sec: 2485.433910822644
Epoch Step: 45 / 67 Loss (mean): 44.083493910729885 Loss (std): 21.856863964334266 Loss ratio: 0.49580607219098677 Tokens per Sec: 2506.5489148340566
Epoch Step: 50 / 67 Loss (mean): 27.378652840852737 Loss (std): 12.491638862976753 Loss ratio: 0.45625469359608156 Tokens per Sec: 2723.047261411149
Epoch Step: 55 / 67 Loss (mean): 29.917964681982994 Loss (std): 12.32478196256462 Loss ratio: 0.4119525540447867 Tokens per Sec: 2877.2333209474773
Epoch Step: 60 / 67 Loss (mean): 22.608158446848392 Loss (std): 12.796596361361681 Loss ratio: 0.5660167497253871 Tokens per Sec: 2737.4324990706823
Epoch Step: 65 / 67 Loss (mean): 24.001196041703224 Loss (std): 10.061242114029083 Loss ratio: 0.4191975306791876 Tokens per Sec: 2844.472503082614
Mean loss per sample: 27.023441369579366 Std loss per sample: 14.125220635659312 ratio: 0.522702510108881
Epoch ended with duration 0:00:11.687942
Train perplexity: 38.716424034678504
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix 'statement unnecessarily nested within else clause[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix broken assumption[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix infinite loop[0m
Epoch Step: 5 / 8 Loss (mean): 54.31534764170647 Loss (std): 22.386241815619737 Loss ratio: 0.412153153530224 Tokens per Sec: 4164.5185253644995
Mean loss per sample: 56.60964288672463 Std loss per sample: 25.938910196569925 ratio: 0.4582065682426834
Epoch ended with duration 0:00:01.092310
b'BLEU = 0.50, 9.5/1.0/0.2/0.1 (BP=0.676, ratio=0.719, hyp_len=2238, ref_len=3113)\n'
Validation perplexity: 2146.557307869005
Validation accuracy: 0.0
Validation BLEU: 0.5
Model saved checkpoint_commit_msg_generator!
Epoch 66 / 1000
Epoch Step: 5 / 67 Loss (mean): 23.21009434759617 Loss (std): 10.21183088346597 Loss ratio: 0.4399736912109361 Tokens per Sec: 2770.4453324782035
Epoch Step: 10 / 67 Loss (mean): 22.20602322369814 Loss (std): 10.716862334805596 Loss ratio: 0.48261060644882253 Tokens per Sec: 2745.156051983847
Epoch Step: 15 / 67 Loss (mean): 25.262080617249012 Loss (std): 10.587731801482098 Loss ratio: 0.4191155891669813 Tokens per Sec: 2653.4951002109415
Epoch Step: 20 / 67 Loss (mean): 23.842923402786255 Loss (std): 12.221056355819695 Loss ratio: 0.5125653490289516 Tokens per Sec: 2421.620866989701
Epoch Step: 25 / 67 Loss (mean): 24.522065296769142 Loss (std): 8.055274566388391 Loss ratio: 0.32849087011646194 Tokens per Sec: 2815.456962451231
Epoch Step: 30 / 67 Loss (mean): 24.628711692988873 Loss (std): 10.577346692456087 Loss ratio: 0.4294721877582891 Tokens per Sec: 2654.6735726526726
Epoch Step: 35 / 67 Loss (mean): 24.955053821206093 Loss (std): 10.471330499992673 Loss ratio: 0.4196076103468242 Tokens per Sec: 2557.6229174408927
Epoch Step: 40 / 67 Loss (mean): 25.078700080513954 Loss (std): 8.809511454801441 Loss ratio: 0.3512746444799344 Tokens per Sec: 2582.1401414140264
Epoch Step: 45 / 67 Loss (mean): 24.578408896923065 Loss (std): 11.781178953052585 Loss ratio: 0.47933041566931756 Tokens per Sec: 2587.992353549479
Epoch Step: 50 / 67 Loss (mean): 25.837108962237835 Loss (std): 12.911580170300464 Loss ratio: 0.499730066129742 Tokens per Sec: 3010.084950409144
Epoch Step: 55 / 67 Loss (mean): 39.0734007358551 Loss (std): 16.745067482970683 Loss ratio: 0.42855413574495527 Tokens per Sec: 2794.4949878515076
Epoch Step: 60 / 67 Loss (mean): 27.444126650691032 Loss (std): 12.330004968013656 Loss ratio: 0.4492766384935478 Tokens per Sec: 3403.0542505158696
Epoch Step: 65 / 67 Loss (mean): 24.13889216631651 Loss (std): 11.844024215606813 Loss ratio: 0.49066146590331117 Tokens per Sec: 2554.2801680795774
Mean loss per sample: 26.82121911129368 Std loss per sample: 13.430128188342385 ratio: 0.5007277310033729
Epoch ended with duration 0:00:11.704463
Train perplexity: 37.67147925987644
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix 'statement unnecessarily nested within else clause[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java 7 in createguidmapper in sslsocket[0m
Epoch Step: 5 / 8 Loss (mean): 54.43401996791363 Loss (std): 22.502134928714398 Loss ratio: 0.4133836696605979 Tokens per Sec: 4323.069852949121
Mean loss per sample: 55.14505482110821 Std loss per sample: 25.822073206255627 ratio: 0.4682572769221648
Epoch ended with duration 0:00:01.061080
b'BLEU = 0.00, 10.1/0.7/0.1/0.0 (BP=0.622, ratio=0.678, hyp_len=2111, ref_len=3113)\n'
Validation perplexity: 1760.129508065518
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 67 / 1000
Epoch Step: 5 / 67 Loss (mean): 23.851308293640614 Loss (std): 9.719099945381354 Loss ratio: 0.4074870789361572 Tokens per Sec: 2753.0870163790714
Epoch Step: 10 / 67 Loss (mean): 24.96932377666235 Loss (std): 10.561725304645183 Loss ratio: 0.42298803920820355 Tokens per Sec: 2562.7429293634714
Epoch Step: 15 / 67 Loss (mean): 21.826145701110363 Loss (std): 10.63970959525806 Loss ratio: 0.4874754224112407 Tokens per Sec: 2588.4779379042875
Epoch Step: 20 / 67 Loss (mean): 24.017900750041008 Loss (std): 12.236951844433145 Loss ratio: 0.5094929807473808 Tokens per Sec: 2564.340399334646
Epoch Step: 25 / 67 Loss (mean): 24.352667935192585 Loss (std): 8.88526435203472 Loss ratio: 0.36485794392960236 Tokens per Sec: 2427.5383939596745
Epoch Step: 30 / 67 Loss (mean): 27.210185021162033 Loss (std): 12.8936303728966 Loss ratio: 0.4738530944522761 Tokens per Sec: 2817.9700514501287
Epoch Step: 35 / 67 Loss (mean): 23.636147744953632 Loss (std): 10.276784253871767 Loss ratio: 0.4347909974486381 Tokens per Sec: 2636.312970051019
Epoch Step: 40 / 67 Loss (mean): 29.67632543295622 Loss (std): 10.356994522147556 Loss ratio: 0.34899854921545925 Tokens per Sec: 2603.0650209387163
Epoch Step: 45 / 67 Loss (mean): 41.14768445491791 Loss (std): 18.76852620295552 Loss ratio: 0.4561259388366952 Tokens per Sec: 2351.678493275819
Epoch Step: 50 / 67 Loss (mean): 23.426864445209503 Loss (std): 11.450438535854202 Loss ratio: 0.4887738417846897 Tokens per Sec: 3643.9124579984923
Epoch Step: 55 / 67 Loss (mean): 25.42368058115244 Loss (std): 12.072905493285605 Loss ratio: 0.47486851696192717 Tokens per Sec: 2544.471722415503
Epoch Step: 60 / 67 Loss (mean): 24.92413868010044 Loss (std): 11.09936970197156 Loss ratio: 0.44532610913585363 Tokens per Sec: 2896.8167295211247
Epoch Step: 65 / 67 Loss (mean): 23.20811166614294 Loss (std): 11.833280596968434 Loss ratio: 0.5098769243786158 Tokens per Sec: 2823.641092061262
Mean loss per sample: 26.66610349560365 Std loss per sample: 13.60763582402532 ratio: 0.5102971203223885
Epoch ended with duration 0:00:11.719813
Train perplexity: 36.889102835376754
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix 'statement unnecessarily nested within else clause[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix broken assumption[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java 7 in createguidmapper in sslsocket[0m
Epoch Step: 5 / 8 Loss (mean): 61.777264803647995 Loss (std): 24.38993410056581 Loss ratio: 0.39480436982903727 Tokens per Sec: 4218.984617772394
Mean loss per sample: 56.62270385320069 Std loss per sample: 26.757300868851022 ratio: 0.47255427678306683
Epoch ended with duration 0:00:01.074672
b'BLEU = 0.51, 9.5/0.8/0.3/0.1 (BP=0.705, ratio=0.741, hyp_len=2306, ref_len=3113)\n'
Validation perplexity: 2150.360067799767
Validation accuracy: 0.0
Validation BLEU: 0.51
Epoch 68 / 1000
Epoch Step: 5 / 67 Loss (mean): 23.937050491571426 Loss (std): 9.087910580231204 Loss ratio: 0.379658746320111 Tokens per Sec: 2439.122520888898
Epoch Step: 10 / 67 Loss (mean): 21.583571083843708 Loss (std): 11.669016511619681 Loss ratio: 0.5406434582252458 Tokens per Sec: 2591.3304435983723
Epoch Step: 15 / 67 Loss (mean): 25.69945652782917 Loss (std): 11.694026441782812 Loss ratio: 0.4550301065362881 Tokens per Sec: 2706.9047477583945
Epoch Step: 20 / 67 Loss (mean): 24.34991393238306 Loss (std): 8.754442512192522 Loss ratio: 0.35952663062804296 Tokens per Sec: 2802.664817609008
Epoch Step: 25 / 67 Loss (mean): 24.135436825454235 Loss (std): 12.261663393654715 Loss ratio: 0.5080356938360052 Tokens per Sec: 2625.455969755091
Epoch Step: 30 / 67 Loss (mean): 26.72119563817978 Loss (std): 11.509799922801765 Loss ratio: 0.4307367109859535 Tokens per Sec: 3003.5125361769715
Epoch Step: 35 / 67 Loss (mean): 22.904808789491653 Loss (std): 9.762586005008487 Loss ratio: 0.42622429616122354 Tokens per Sec: 2581.1768430893108
Epoch Step: 40 / 67 Loss (mean): 26.91995796561241 Loss (std): 13.058176039848686 Loss ratio: 0.4850741615766717 Tokens per Sec: 2493.3971634628792
Epoch Step: 45 / 67 Loss (mean): 42.28341215848923 Loss (std): 18.38245260742066 Loss ratio: 0.4347438314230282 Tokens per Sec: 3052.569083637289
Epoch Step: 50 / 67 Loss (mean): 23.543374717235565 Loss (std): 9.216957982348552 Loss ratio: 0.39148839506007727 Tokens per Sec: 2311.4723297482387
Epoch Step: 55 / 67 Loss (mean): 24.79817285388708 Loss (std): 10.1857194712146 Loss ratio: 0.41074475652822146 Tokens per Sec: 2886.892148900754
Epoch Step: 60 / 67 Loss (mean): 41.53398324549198 Loss (std): 15.258085648673323 Loss ratio: 0.36736388991367463 Tokens per Sec: 2670.849660782672
Epoch Step: 65 / 67 Loss (mean): 23.41447815299034 Loss (std): 9.941248423776345 Loss ratio: 0.42457698005568045 Tokens per Sec: 2834.2611619622917
Mean loss per sample: 27.069580358794973 Std loss per sample: 14.364119693700449 ratio: 0.5306369549623813
Epoch ended with duration 0:00:11.716111
Train perplexity: 38.95887083726804
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo for no-dex2oat[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix method_1 ( )[0m
Epoch Step: 5 / 8 Loss (mean): 54.8537961691618 Loss (std): 23.10241498282638 Loss ratio: 0.4211634671843242 Tokens per Sec: 4345.330186650751
Mean loss per sample: 55.83848353682971 Std loss per sample: 26.521411382195435 ratio: 0.4749665410362112
Epoch ended with duration 0:00:01.053812
b'BLEU = 0.56, 10.4/1.2/0.3/0.1 (BP=0.670, ratio=0.714, hyp_len=2222, ref_len=3113)\n'
Validation perplexity: 1933.5533070728472
Validation accuracy: 0.0
Validation BLEU: 0.56
Epoch 69 / 1000
Epoch Step: 5 / 67 Loss (mean): 23.768590576946735 Loss (std): 10.121657433861897 Loss ratio: 0.42584171750086597 Tokens per Sec: 2361.0326099161093
Epoch Step: 10 / 67 Loss (mean): 24.361162558197975 Loss (std): 11.731196656710354 Loss ratio: 0.48155323575732195 Tokens per Sec: 3095.729253595243
Epoch Step: 15 / 67 Loss (mean): 21.933801867067814 Loss (std): 11.339346089602923 Loss ratio: 0.5169804194606235 Tokens per Sec: 2606.942015763421
Epoch Step: 20 / 67 Loss (mean): 25.12085796892643 Loss (std): 10.776640142378305 Loss ratio: 0.4289917229621938 Tokens per Sec: 2473.03024383548
Epoch Step: 25 / 67 Loss (mean): 22.632782980799675 Loss (std): 8.954386926507949 Loss ratio: 0.39563790869661614 Tokens per Sec: 2624.8791493482336
Epoch Step: 30 / 67 Loss (mean): 28.714043773710728 Loss (std): 10.050999870848182 Loss ratio: 0.3500377707179795 Tokens per Sec: 2937.1926553547783
Epoch Step: 35 / 67 Loss (mean): 24.80322327464819 Loss (std): 11.345552516260238 Loss ratio: 0.45742250475391744 Tokens per Sec: 2789.3136922003087
Epoch Step: 40 / 67 Loss (mean): 42.85351664572954 Loss (std): 18.340286833874593 Loss ratio: 0.427976237877837 Tokens per Sec: 2485.8634384969005
Epoch Step: 45 / 67 Loss (mean): 44.90369209647179 Loss (std): 19.120074199852038 Loss ratio: 0.4258018284726827 Tokens per Sec: 2781.350786250782
Epoch Step: 50 / 67 Loss (mean): 23.24391421675682 Loss (std): 10.722476662002173 Loss ratio: 0.4613025397534899 Tokens per Sec: 3348.4395237585113
Epoch Step: 55 / 67 Loss (mean): 23.25916761904955 Loss (std): 9.849485026416566 Loss ratio: 0.42346678899849 Tokens per Sec: 2418.3049462764893
Epoch Step: 60 / 67 Loss (mean): 26.738272547721863 Loss (std): 8.68697466874938 Loss ratio: 0.32488915105660116 Tokens per Sec: 3182.650829948985
Epoch Step: 65 / 67 Loss (mean): 20.484823578879947 Loss (std): 9.552950949726092 Loss ratio: 0.46634284708096185 Tokens per Sec: 2343.274732582014
Mean loss per sample: 26.572164405414995 Std loss per sample: 14.033260330044333 ratio: 0.5281188282571582
Epoch ended with duration 0:00:11.701962
Train perplexity: 36.42321183676105
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix 'statement unnecessarily nested within else clause[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java 7 in createguidmapper[0m
Epoch Step: 5 / 8 Loss (mean): 55.10376372933388 Loss (std): 22.99810933649964 Loss ratio: 0.4173600454855473 Tokens per Sec: 4311.251904922803
Mean loss per sample: 55.57353711519085 Std loss per sample: 26.618851869291312 ratio: 0.4789843017210998
Epoch ended with duration 0:00:01.044285
b'BLEU = 0.47, 9.7/0.8/0.3/0.1 (BP=0.647, ratio=0.696, hyp_len=2168, ref_len=3113)\n'
Validation perplexity: 1865.360656985781
Validation accuracy: 0.0
Validation BLEU: 0.47
Epoch 70 / 1000
Epoch Step: 5 / 67 Loss (mean): 21.193851441144943 Loss (std): 10.537609372279194 Loss ratio: 0.4972012473307177 Tokens per Sec: 2473.4703296171847
Epoch Step: 10 / 67 Loss (mean): 22.39188762754202 Loss (std): 9.423878274427139 Loss ratio: 0.42086127043777094 Tokens per Sec: 2404.417371399504
Epoch Step: 15 / 67 Loss (mean): 22.724641613662243 Loss (std): 11.29756261668848 Loss ratio: 0.49715030972793395 Tokens per Sec: 2117.3776256091605
Epoch Step: 20 / 67 Loss (mean): 27.927122481167316 Loss (std): 11.903957398283376 Loss ratio: 0.4262507677370206 Tokens per Sec: 2751.0082500017998
Epoch Step: 25 / 67 Loss (mean): 28.416523925960064 Loss (std): 10.71783129397566 Loss ratio: 0.37716897822904827 Tokens per Sec: 2869.7542935435363
Epoch Step: 30 / 67 Loss (mean): 23.943850092589855 Loss (std): 8.827605711430719 Loss ratio: 0.36867945953949516 Tokens per Sec: 2650.251317655683
Epoch Step: 35 / 67 Loss (mean): 24.44643011689186 Loss (std): 15.40415156519491 Loss ratio: 0.6301186509252749 Tokens per Sec: 2826.3447480484133
Epoch Step: 40 / 67 Loss (mean): 24.571670159697533 Loss (std): 11.517470928142425 Loss ratio: 0.4687296733713033 Tokens per Sec: 3601.306702195052
Epoch Step: 45 / 67 Loss (mean): 23.2979227155447 Loss (std): 12.133592104044874 Loss ratio: 0.5208014573741019 Tokens per Sec: 3113.7904269214487
Epoch Step: 50 / 67 Loss (mean): 22.25670627504587 Loss (std): 11.522979505018792 Loss ratio: 0.5177306723923616 Tokens per Sec: 2080.5074856570145
Epoch Step: 55 / 67 Loss (mean): 24.76645291596651 Loss (std): 11.577418045540576 Loss ratio: 0.46746371330699565 Tokens per Sec: 3561.425833793056
Epoch Step: 60 / 67 Loss (mean): 24.61431720852852 Loss (std): 11.72817402266939 Loss ratio: 0.47647773136708177 Tokens per Sec: 2818.4016665718127
Epoch Step: 65 / 67 Loss (mean): 23.22003334015608 Loss (std): 8.71310486919742 Loss ratio: 0.37524084231736304 Tokens per Sec: 2918.7684460766764
Mean loss per sample: 25.279013699452417 Std loss per sample: 12.789130676574345 ratio: 0.5059188949627168
Epoch ended with duration 0:00:11.642327
Train perplexity: 30.576854621378754
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix 'statement unnecessarily nested within else clause[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java 7 in createguidmapper in sslsocket[0m
Epoch Step: 5 / 8 Loss (mean): 55.11726152896881 Loss (std): 23.11910452916909 Loss ratio: 0.4194530694711317 Tokens per Sec: 4322.522523456803
Mean loss per sample: 55.79144249001487 Std loss per sample: 26.831056619408358 ratio: 0.4809170622216906
Epoch ended with duration 0:00:01.045242
b'BLEU = 0.53, 9.5/1.0/0.3/0.1 (BP=0.676, ratio=0.719, hyp_len=2238, ref_len=3113)\n'
Validation perplexity: 1921.2662954075063
Validation accuracy: 0.0
Validation BLEU: 0.53
Model saved checkpoint_commit_msg_generator!
Epoch 71 / 1000
Epoch Step: 5 / 67 Loss (mean): 23.218924202024937 Loss (std): 10.236426809107662 Loss ratio: 0.44086568008241045 Tokens per Sec: 2800.313111453078
Epoch Step: 10 / 67 Loss (mean): 21.910865910351276 Loss (std): 10.039353246440925 Loss ratio: 0.4581906204673576 Tokens per Sec: 2832.3547750995417
Epoch Step: 15 / 67 Loss (mean): 24.890875339508057 Loss (std): 13.538492978488412 Loss ratio: 0.5439138959086518 Tokens per Sec: 2866.48042673801
Epoch Step: 20 / 67 Loss (mean): 24.84230587631464 Loss (std): 9.661328728457526 Loss ratio: 0.38890627852984094 Tokens per Sec: 2357.535482893927
Epoch Step: 25 / 67 Loss (mean): 24.34891227632761 Loss (std): 11.786985033555085 Loss ratio: 0.48408671811654497 Tokens per Sec: 2819.3885535511245
Epoch Step: 30 / 67 Loss (mean): 39.33303089439869 Loss (std): 19.43962117776521 Loss ratio: 0.4942314572695072 Tokens per Sec: 2438.8671759115227
Epoch Step: 35 / 67 Loss (mean): 45.93572202324867 Loss (std): 20.841083184684006 Loss ratio: 0.45370100363582094 Tokens per Sec: 2833.4996084076183
Epoch Step: 40 / 67 Loss (mean): 21.826994955539703 Loss (std): 11.147804461908224 Loss ratio: 0.5107347339666153 Tokens per Sec: 2341.850483879094
Epoch Step: 45 / 67 Loss (mean): 24.386863723397255 Loss (std): 11.206135971205136 Loss ratio: 0.45951525781700825 Tokens per Sec: 2870.1776270528053
Epoch Step: 50 / 67 Loss (mean): 21.305056989192963 Loss (std): 12.225317405283404 Loss ratio: 0.5738223282615355 Tokens per Sec: 2850.1259632013507
Epoch Step: 55 / 67 Loss (mean): 21.92715948075056 Loss (std): 9.404366365920854 Loss ratio: 0.4288912284410012 Tokens per Sec: 2374.254745630191
Epoch Step: 60 / 67 Loss (mean): 42.12976086884737 Loss (std): 17.344421048451135 Loss ratio: 0.4116904698900481 Tokens per Sec: 3066.228194275413
Epoch Step: 65 / 67 Loss (mean): 23.911338046193123 Loss (std): 11.594090368514976 Loss ratio: 0.4848783596349535 Tokens per Sec: 2675.9239300834683
Mean loss per sample: 26.863518914201702 Std loss per sample: 14.564752635313791 ratio: 0.5421759033815176
Epoch ended with duration 0:00:11.752053
Train perplexity: 37.887696966989346
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix 'statement unnecessarily nested within else clause[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for accounts[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java 7 in createguidmapper in sslsocket[0m
Epoch Step: 5 / 8 Loss (mean): 55.47834298014641 Loss (std): 23.399643435989844 Loss ratio: 0.42177978250654835 Tokens per Sec: 4093.058717386901
Mean loss per sample: 57.25993770458659 Std loss per sample: 26.797454830351228 ratio: 0.4679965767445241
Epoch ended with duration 0:00:01.075195
b'BLEU = 0.49, 10.2/1.0/0.3/0.1 (BP=0.627, ratio=0.682, hyp_len=2122, ref_len=3113)\n'
Validation perplexity: 2344.3118444606257
Validation accuracy: 0.0
Validation BLEU: 0.49
Epoch 72 / 1000
Epoch Step: 5 / 67 Loss (mean): 25.023402854800224 Loss (std): 8.30290148987849 Loss ratio: 0.33180545180272114 Tokens per Sec: 3547.953224128668
Epoch Step: 10 / 67 Loss (mean): 22.961945071816444 Loss (std): 11.22636812673359 Loss ratio: 0.48891189712464145 Tokens per Sec: 2664.6067661175994
Epoch Step: 15 / 67 Loss (mean): 42.932420656085014 Loss (std): 20.22806644652443 Loss ratio: 0.47116063192810936 Tokens per Sec: 3266.215971950499
Epoch Step: 20 / 67 Loss (mean): 40.10006571561098 Loss (std): 18.05086395338128 Loss ratio: 0.4501454955559853 Tokens per Sec: 2708.492304155607
Epoch Step: 25 / 67 Loss (mean): 19.347349666413805 Loss (std): 8.849369594004472 Loss ratio: 0.45739441042752277 Tokens per Sec: 3009.5255417459202
Epoch Step: 30 / 67 Loss (mean): 21.238241873681545 Loss (std): 12.605730248914497 Loss ratio: 0.593539254515014 Tokens per Sec: 2670.4566629578226
Epoch Step: 35 / 67 Loss (mean): 22.00422902405262 Loss (std): 10.352204074635283 Loss ratio: 0.470464294082714 Tokens per Sec: 2145.6294621404427
Epoch Step: 40 / 67 Loss (mean): 23.580252841114998 Loss (std): 8.552267740198806 Loss ratio: 0.3626877030464619 Tokens per Sec: 2823.886761032473
Epoch Step: 45 / 67 Loss (mean): 23.840986654162407 Loss (std): 9.189170288659557 Loss ratio: 0.3854358220134827 Tokens per Sec: 2458.8899600032814
Epoch Step: 50 / 67 Loss (mean): 27.709257058799267 Loss (std): 11.727929056340402 Loss ratio: 0.42324949497756803 Tokens per Sec: 2530.4560293279396
Epoch Step: 55 / 67 Loss (mean): 24.813057526946068 Loss (std): 11.446826698170492 Loss ratio: 0.4613227001847579 Tokens per Sec: 2823.0459884057555
Epoch Step: 60 / 67 Loss (mean): 22.774218060076237 Loss (std): 12.140239488717118 Loss ratio: 0.5330694321399888 Tokens per Sec: 2502.245176184602
Epoch Step: 65 / 67 Loss (mean): 24.090262100100517 Loss (std): 9.626146845675542 Loss ratio: 0.3995866381891867 Tokens per Sec: 2616.5957656517603
Mean loss per sample: 24.96253247323642 Std loss per sample: 12.969082511402949 ratio: 0.5195419385155633
Epoch ended with duration 0:00:11.648223
Train perplexity: 29.29519525962005
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix 'statement unnecessarily nested within else clause[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java 7 in createguidmapper in sslsocket[0m
Epoch Step: 5 / 8 Loss (mean): 55.82308495044708 Loss (std): 23.62846296116174 Loss ratio: 0.4232740448174121 Tokens per Sec: 4205.198726596074
Mean loss per sample: 57.992629221228306 Std loss per sample: 26.667673558365422 ratio: 0.45984591346314874
Epoch ended with duration 0:00:01.089691
b'BLEU = 0.48, 9.9/0.9/0.3/0.1 (BP=0.632, ratio=0.686, hyp_len=2134, ref_len=3113)\n'
Validation perplexity: 2589.0337239930673
Validation accuracy: 0.0
Validation BLEU: 0.48
Epoch 73 / 1000
Epoch Step: 5 / 67 Loss (mean): 44.09824791550636 Loss (std): 23.53377830649255 Loss ratio: 0.5336669690728759 Tokens per Sec: 2442.7112715825688
Epoch Step: 10 / 67 Loss (mean): 23.446495793759823 Loss (std): 10.899778417373662 Loss ratio: 0.4648787824521986 Tokens per Sec: 2968.716527382619
Epoch Step: 15 / 67 Loss (mean): 22.95945915579796 Loss (std): 9.301163599786157 Loss ratio: 0.40511248704381314 Tokens per Sec: 2524.1374190412953
Epoch Step: 20 / 67 Loss (mean): 25.50039254128933 Loss (std): 8.441234978028248 Loss ratio: 0.33102372696265364 Tokens per Sec: 3590.1070071461722
Epoch Step: 25 / 67 Loss (mean): 39.123387202620506 Loss (std): 14.89039145149037 Loss ratio: 0.3806007740171588 Tokens per Sec: 2211.5163671450227
Epoch Step: 30 / 67 Loss (mean): 23.068935751914978 Loss (std): 7.679397206780226 Loss ratio: 0.3328890976751171 Tokens per Sec: 2899.438114331136
Epoch Step: 35 / 67 Loss (mean): 40.642309829592705 Loss (std): 19.579685456419085 Loss ratio: 0.4817562175603173 Tokens per Sec: 2787.3428145694716
Epoch Step: 40 / 67 Loss (mean): 22.82746347039938 Loss (std): 11.361906942885236 Loss ratio: 0.4977297174352439 Tokens per Sec: 2589.9289573433252
Epoch Step: 45 / 67 Loss (mean): 24.135180324316025 Loss (std): 9.27119122017995 Loss ratio: 0.38413598305869256 Tokens per Sec: 2862.926156054065
Epoch Step: 50 / 67 Loss (mean): 24.527414068579674 Loss (std): 11.751082662232323 Loss ratio: 0.4790999421861516 Tokens per Sec: 2349.1574215638875
Epoch Step: 55 / 67 Loss (mean): 22.395620428025723 Loss (std): 11.107188369961026 Loss ratio: 0.49595359082178264 Tokens per Sec: 3173.228127036247
Epoch Step: 60 / 67 Loss (mean): 23.749861039221287 Loss (std): 9.513393747254476 Loss ratio: 0.40056629095823976 Tokens per Sec: 2902.0550635741674
Epoch Step: 65 / 67 Loss (mean): 23.017287828028202 Loss (std): 9.983071625886524 Loss ratio: 0.43372058864946356 Tokens per Sec: 2558.2707794473317
Mean loss per sample: 25.57565138835165 Std loss per sample: 13.477232600825046 ratio: 0.5269555952331759
Epoch ended with duration 0:00:11.682306
Train perplexity: 31.82901618726472
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix 'statement unnecessarily nested within else clause[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix broken gpl[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java 7 instead of assuming in sslsocket[0m
Epoch Step: 5 / 8 Loss (mean): 55.6596055328846 Loss (std): 23.28966151976051 Loss ratio: 0.41843022954951775 Tokens per Sec: 4301.813257532591
Mean loss per sample: 56.1076853040789 Std loss per sample: 26.975018824433107 ratio: 0.4807722628057174
Epoch ended with duration 0:00:01.045314
b'BLEU = 0.48, 10.8/1.0/0.3/0.2 (BP=0.535, ratio=0.615, hyp_len=1916, ref_len=3113)\n'
Validation perplexity: 2005.395028911958
Validation accuracy: 0.0
Validation BLEU: 0.48
Epoch 74 / 1000
Epoch Step: 5 / 67 Loss (mean): 25.59444611519575 Loss (std): 12.15715590066291 Loss ratio: 0.47499195122042714 Tokens per Sec: 2629.0747541008304
Epoch Step: 10 / 67 Loss (mean): 22.587166480720043 Loss (std): 10.74231625733905 Loss ratio: 0.47559379643783467 Tokens per Sec: 2895.193836261848
Epoch Step: 15 / 67 Loss (mean): 20.98031284660101 Loss (std): 11.141589777651532 Loss ratio: 0.5310497445445178 Tokens per Sec: 2448.1815002788
Epoch Step: 20 / 67 Loss (mean): 20.56734623014927 Loss (std): 10.161081416007177 Loss ratio: 0.4940394984508136 Tokens per Sec: 3121.3323415229374
Epoch Step: 25 / 67 Loss (mean): 21.493066497147083 Loss (std): 9.794683091606808 Loss ratio: 0.4557136178267964 Tokens per Sec: 2564.0409452984154
Epoch Step: 30 / 67 Loss (mean): 23.912609487771988 Loss (std): 10.868152331080628 Loss ratio: 0.454494618692209 Tokens per Sec: 2651.9203117678826
Epoch Step: 35 / 67 Loss (mean): 25.775424517691135 Loss (std): 12.194467342988705 Loss ratio: 0.4731044229598993 Tokens per Sec: 2555.3329978840306
Epoch Step: 40 / 67 Loss (mean): 23.07928717881441 Loss (std): 8.252467369295461 Loss ratio: 0.3575702882570307 Tokens per Sec: 2972.2688252274957
Epoch Step: 45 / 67 Loss (mean): 23.510816141963005 Loss (std): 11.25912645251697 Loss ratio: 0.47889134875336165 Tokens per Sec: 2796.4590866888298
Epoch Step: 50 / 67 Loss (mean): 25.37230595946312 Loss (std): 8.430293874049136 Loss ratio: 0.3322636061348963 Tokens per Sec: 3175.267261594492
Epoch Step: 55 / 67 Loss (mean): 21.648058846592903 Loss (std): 10.844257240245978 Loss ratio: 0.5009343940301008 Tokens per Sec: 2428.2728634050177
Epoch Step: 60 / 67 Loss (mean): 25.172830052673817 Loss (std): 10.17518615945805 Loss ratio: 0.40421303993895824 Tokens per Sec: 2485.0678809834385
Epoch Step: 65 / 67 Loss (mean): 24.696981839835644 Loss (std): 10.625313386026633 Loss ratio: 0.43022720164486883 Tokens per Sec: 2697.6715521358847
Mean loss per sample: 24.41030376817048 Std loss per sample: 12.821076653882338 ratio: 0.5252321632555932
Epoch ended with duration 0:00:11.619099
Train perplexity: 27.18613585377942
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix 'statement unnecessarily nested within else clause[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` hidl java '' for `` copyable ''[0m
Epoch Step: 5 / 8 Loss (mean): 56.353688687086105 Loss (std): 23.810978650724678 Loss ratio: 0.42252741933078025 Tokens per Sec: 4217.566932071868
Mean loss per sample: 58.43619493382876 Std loss per sample: 27.76419516216013 ratio: 0.47511983272694946
Epoch ended with duration 0:00:01.072767
b'BLEU = 0.46, 9.3/0.8/0.2/0.1 (BP=0.719, ratio=0.752, hyp_len=2342, ref_len=3113)\n'
Validation perplexity: 2749.436071195722
Validation accuracy: 0.0
Validation BLEU: 0.46
Epoch 75 / 1000
Epoch Step: 5 / 67 Loss (mean): 22.52771209180355 Loss (std): 8.753973765201309 Loss ratio: 0.38858689819577114 Tokens per Sec: 2584.496271459945
Epoch Step: 10 / 67 Loss (mean): 23.849888883531094 Loss (std): 11.280255605942896 Loss ratio: 0.47296889562165534 Tokens per Sec: 3107.5357796581056
Epoch Step: 15 / 67 Loss (mean): 26.527373746037483 Loss (std): 9.92952765972677 Loss ratio: 0.3743125028051444 Tokens per Sec: 3702.930590645475
Epoch Step: 20 / 67 Loss (mean): 41.72648225724697 Loss (std): 14.877321230262725 Loss ratio: 0.356543864362754 Tokens per Sec: 2822.2291007189165
Epoch Step: 25 / 67 Loss (mean): 38.29478841274977 Loss (std): 16.163621784938176 Loss ratio: 0.42208411261404705 Tokens per Sec: 2040.2174822711713
Epoch Step: 30 / 67 Loss (mean): 22.751202419400215 Loss (std): 7.5112802135392025 Loss ratio: 0.3301487136844357 Tokens per Sec: 2564.060194449106
Epoch Step: 35 / 67 Loss (mean): 20.293658137321472 Loss (std): 11.242189146471958 Loss ratio: 0.5539754868441771 Tokens per Sec: 2263.4843776234957
Epoch Step: 40 / 67 Loss (mean): 23.013821624219418 Loss (std): 10.292669080577982 Loss ratio: 0.4472385876905435 Tokens per Sec: 3453.747063818517
Epoch Step: 45 / 67 Loss (mean): 22.803937822580338 Loss (std): 11.06195156060157 Loss ratio: 0.4850895335124131 Tokens per Sec: 2664.267809242845
Epoch Step: 50 / 67 Loss (mean): 21.096192128956318 Loss (std): 10.303132162926907 Loss ratio: 0.48838824087049254 Tokens per Sec: 2508.8362430468337
Epoch Step: 55 / 67 Loss (mean): 22.948476113379 Loss (std): 10.18414527098169 Loss ratio: 0.4437830739028599 Tokens per Sec: 2994.004518460032
Epoch Step: 60 / 67 Loss (mean): 17.618143305182457 Loss (std): 12.057456214499922 Loss ratio: 0.6843772357642911 Tokens per Sec: 2910.2972126850627
Epoch Step: 65 / 67 Loss (mean): 40.588953115046024 Loss (std): 20.596485198166416 Loss ratio: 0.5074406610041748 Tokens per Sec: 2636.693174889862
Mean loss per sample: 25.51379563771555 Std loss per sample: 13.900208649509109 ratio: 0.5448114755987638
Epoch ended with duration 0:00:11.678293
Train perplexity: 31.563748638061554
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo for in memoryinfo[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: add support for sms[0m
Epoch Step: 5 / 8 Loss (mean): 55.95776727795601 Loss (std): 23.453654491595643 Loss ratio: 0.4191313490957487 Tokens per Sec: 4346.527219741444
Mean loss per sample: 56.644416078192286 Std loss per sample: 27.42485494766974 ratio: 0.4841581367846092
Epoch ended with duration 0:00:01.041018
b'BLEU = 0.48, 10.2/0.9/0.3/0.1 (BP=0.631, ratio=0.685, hyp_len=2131, ref_len=3113)\n'
Validation perplexity: 2156.6965950606723
Validation accuracy: 0.0
Validation BLEU: 0.48
Model saved checkpoint_commit_msg_generator!
Epoch 76 / 1000
Epoch Step: 5 / 67 Loss (mean): 23.00043175369501 Loss (std): 10.833191538548425 Loss ratio: 0.470999486207822 Tokens per Sec: 2751.2019428953076
Epoch Step: 10 / 67 Loss (mean): 21.450283639132977 Loss (std): 10.63958601187909 Loss ratio: 0.4960114369988416 Tokens per Sec: 3032.182821871779
Epoch Step: 15 / 67 Loss (mean): 21.960304021835327 Loss (std): 9.659066951060279 Loss ratio: 0.4398421324885203 Tokens per Sec: 2532.562871720557
Epoch Step: 20 / 67 Loss (mean): 22.80083817988634 Loss (std): 14.683893256935466 Loss ratio: 0.6440067308529385 Tokens per Sec: 2375.7085244574373
Epoch Step: 25 / 67 Loss (mean): 22.646207183599472 Loss (std): 8.550124735053105 Loss ratio: 0.3775521731182059 Tokens per Sec: 2921.499567595058
Epoch Step: 30 / 67 Loss (mean): 21.975858122110367 Loss (std): 11.789723075876683 Loss ratio: 0.5364852198428965 Tokens per Sec: 2721.0869190511585
Epoch Step: 35 / 67 Loss (mean): 42.73983332514763 Loss (std): 18.163450748460132 Loss ratio: 0.4249771076616007 Tokens per Sec: 2337.4016307444203
Epoch Step: 40 / 67 Loss (mean): 22.58950101584196 Loss (std): 9.899133909118365 Loss ratio: 0.4382183520643562 Tokens per Sec: 3019.396632812381
Epoch Step: 45 / 67 Loss (mean): 24.39537876099348 Loss (std): 10.349271331138256 Loss ratio: 0.42423081160297554 Tokens per Sec: 2486.769989057729
Epoch Step: 50 / 67 Loss (mean): 22.73078688979149 Loss (std): 10.015696263613808 Loss ratio: 0.44062250515893525 Tokens per Sec: 2805.6639189853977
Epoch Step: 55 / 67 Loss (mean): 37.133658185601234 Loss (std): 16.57999908660469 Loss ratio: 0.44649517167779795 Tokens per Sec: 3229.273856503601
Epoch Step: 60 / 67 Loss (mean): 24.773142494261265 Loss (std): 11.706007915016546 Loss ratio: 0.47252817916533035 Tokens per Sec: 2869.79594823219
Epoch Step: 65 / 67 Loss (mean): 23.027655377984047 Loss (std): 9.347583115363193 Loss ratio: 0.4059285655412447 Tokens per Sec: 2541.0066469896947
Mean loss per sample: 24.370685006551657 Std loss per sample: 13.080622291378013 ratio: 0.5367359303959451
Epoch ended with duration 0:00:11.642402
Train perplexity: 27.04079698286398
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix 'statement unnecessarily nested within else clause[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for big5han[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` hidl java '' for `` copyable ''[0m
Epoch Step: 5 / 8 Loss (mean): 56.63691386580467 Loss (std): 23.949555726688818 Loss ratio: 0.4228612417589493 Tokens per Sec: 4227.566171576365
Mean loss per sample: 58.49070498200714 Std loss per sample: 27.941286753063554 ratio: 0.47770473550727127
Epoch ended with duration 0:00:01.073793
b'BLEU = 0.67, 10.1/1.0/0.4/0.2 (BP=0.681, ratio=0.723, hyp_len=2250, ref_len=3113)\n'
Validation perplexity: 2769.8215992584833
Validation accuracy: 0.0
Validation BLEU: 0.67
Model saved best_on_validation_commit_msg_generator!
Epoch 77 / 1000
Epoch Step: 5 / 67 Loss (mean): 23.799777410924435 Loss (std): 7.719467437725432 Loss ratio: 0.3243504048143781 Tokens per Sec: 2847.7426604379693
Epoch Step: 10 / 67 Loss (mean): 20.512312844395638 Loss (std): 8.920892132252858 Loss ratio: 0.43490425482128015 Tokens per Sec: 2540.215920357237
Epoch Step: 15 / 67 Loss (mean): 36.37617802619934 Loss (std): 16.279471912661865 Loss ratio: 0.4475311260280518 Tokens per Sec: 2729.451235380785
Epoch Step: 20 / 67 Loss (mean): 23.541637532413006 Loss (std): 10.580085143564059 Loss ratio: 0.4494201021061939 Tokens per Sec: 3085.101202115569
Epoch Step: 25 / 67 Loss (mean): 21.95328100025654 Loss (std): 7.077906667315904 Loss ratio: 0.32240769237332656 Tokens per Sec: 3570.762563060951
Epoch Step: 30 / 67 Loss (mean): 48.52009491622448 Loss (std): 18.804421367144396 Loss ratio: 0.3875594513904474 Tokens per Sec: 2413.040430524812
Epoch Step: 35 / 67 Loss (mean): 21.27618056535721 Loss (std): 11.671164400247426 Loss ratio: 0.5485554310086519 Tokens per Sec: 3701.114843722971
Epoch Step: 40 / 67 Loss (mean): 19.920929290354252 Loss (std): 10.06012323471594 Loss ratio: 0.5050027078599726 Tokens per Sec: 2370.368841382915
Epoch Step: 45 / 67 Loss (mean): 26.198248848319054 Loss (std): 9.919357984002387 Loss ratio: 0.37862675636958987 Tokens per Sec: 2970.7743780862866
Epoch Step: 50 / 67 Loss (mean): 20.69619992375374 Loss (std): 10.489710972089574 Loss ratio: 0.5068423677165088 Tokens per Sec: 2616.400328031943
Epoch Step: 55 / 67 Loss (mean): 20.65346670150757 Loss (std): 11.273222611993855 Loss ratio: 0.5458271376383986 Tokens per Sec: 2589.8925748477914
Epoch Step: 60 / 67 Loss (mean): 21.379185020923615 Loss (std): 9.168305834556662 Loss ratio: 0.4288426254594703 Tokens per Sec: 2423.3721192022
Epoch Step: 65 / 67 Loss (mean): 18.306092818578083 Loss (std): 8.783063930424085 Loss ratio: 0.4797891072370464 Tokens per Sec: 2442.3318043803633
Mean loss per sample: 23.35287039826523 Std loss per sample: 12.141485636006362 ratio: 0.5199140589119311
Epoch ended with duration 0:00:11.584113
Train perplexity: 23.56203426296992
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix 'statement unnecessarily nested within else clause[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java 7 instead of assuming in sslsocket[0m
Epoch Step: 5 / 8 Loss (mean): 56.808579713106155 Loss (std): 24.142096013127468 Loss ratio: 0.42497270896490497 Tokens per Sec: 4211.740783436331
Mean loss per sample: 58.24281237555332 Std loss per sample: 28.090470417770113 ratio: 0.48229934771420363
Epoch ended with duration 0:00:01.059515
b'BLEU = 0.47, 10.1/0.8/0.3/0.1 (BP=0.644, ratio=0.694, hyp_len=2161, ref_len=3113)\n'
Validation perplexity: 2678.3181061240607
Validation accuracy: 0.0
Validation BLEU: 0.47
Epoch 78 / 1000
Epoch Step: 5 / 67 Loss (mean): 18.920107029378414 Loss (std): 11.007100382755873 Loss ratio: 0.5817673423128352 Tokens per Sec: 2830.6348244258384
Epoch Step: 10 / 67 Loss (mean): 22.244274646043777 Loss (std): 10.622572703257507 Loss ratio: 0.47754187863108266 Tokens per Sec: 2472.631749883814
Epoch Step: 15 / 67 Loss (mean): 23.027803264558315 Loss (std): 10.95911119865691 Loss ratio: 0.4759078003555764 Tokens per Sec: 2731.8044899788047
Epoch Step: 20 / 67 Loss (mean): 22.089015029370785 Loss (std): 8.740531522506561 Loss ratio: 0.3956958475008806 Tokens per Sec: 2630.550820124847
Epoch Step: 25 / 67 Loss (mean): 21.293709211051464 Loss (std): 10.674741833820985 Loss ratio: 0.5013096463382143 Tokens per Sec: 2921.826822632325
Epoch Step: 30 / 67 Loss (mean): 41.70704225450754 Loss (std): 22.296936687294373 Loss ratio: 0.5346084373768941 Tokens per Sec: 2808.775497840367
Epoch Step: 35 / 67 Loss (mean): 24.937734238803387 Loss (std): 8.55692609924887 Loss ratio: 0.34313165812530794 Tokens per Sec: 3150.9202979068255
Epoch Step: 40 / 67 Loss (mean): 21.92130710184574 Loss (std): 9.671148813169278 Loss ratio: 0.44117573684075534 Tokens per Sec: 2597.5698209406073
Epoch Step: 45 / 67 Loss (mean): 17.146548062562943 Loss (std): 11.726036647374519 Loss ratio: 0.6838715643865751 Tokens per Sec: 2877.7182698341335
Epoch Step: 50 / 67 Loss (mean): 45.799047872424126 Loss (std): 19.054482997572922 Loss ratio: 0.4160453957612891 Tokens per Sec: 2253.678571314733
Epoch Step: 55 / 67 Loss (mean): 21.90973311662674 Loss (std): 9.931207718403781 Loss ratio: 0.45327835193333504 Tokens per Sec: 2956.5059482638953
Epoch Step: 60 / 67 Loss (mean): 21.167617294937372 Loss (std): 10.900336664742948 Loss ratio: 0.5149534079752077 Tokens per Sec: 2927.8895085734566
Epoch Step: 65 / 67 Loss (mean): 22.29655295610428 Loss (std): 9.963229056210363 Loss ratio: 0.4468506443944584 Tokens per Sec: 2420.675891609226
Mean loss per sample: 23.90945036328571 Std loss per sample: 12.941164960917527 ratio: 0.5412573172652018
Epoch ended with duration 0:00:11.643628
Train perplexity: 25.404893409357122
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo for no-dex2oat[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` hidl java '' in java ''[0m
Epoch Step: 5 / 8 Loss (mean): 57.04653948545456 Loss (std): 24.50150273560467 Loss ratio: 0.42950024587997915 Tokens per Sec: 4212.485688754734
Mean loss per sample: 58.29286237818296 Std loss per sample: 28.304868509569953 ratio: 0.48556319512907475
Epoch ended with duration 0:00:01.059759
b'BLEU = 0.48, 9.7/0.9/0.2/0.1 (BP=0.657, ratio=0.704, hyp_len=2191, ref_len=3113)\n'
Validation perplexity: 2696.5460059625066
Validation accuracy: 0.0
Validation BLEU: 0.48
Epoch 79 / 1000
Epoch Step: 5 / 67 Loss (mean): 15.787403091788292 Loss (std): 11.03405254270978 Loss ratio: 0.6989149816823937 Tokens per Sec: 2423.8940767862673
Epoch Step: 10 / 67 Loss (mean): 23.54589182883501 Loss (std): 11.087722436553232 Loss ratio: 0.47089838504120163 Tokens per Sec: 2867.421014541552
Epoch Step: 15 / 67 Loss (mean): 24.301318794488907 Loss (std): 11.936767703528243 Loss ratio: 0.4911983503642314 Tokens per Sec: 2811.169442039961
Epoch Step: 20 / 67 Loss (mean): 21.56835599243641 Loss (std): 8.438482229676582 Loss ratio: 0.39124364567405084 Tokens per Sec: 2471.5648396433476
Epoch Step: 25 / 67 Loss (mean): 23.05502438545227 Loss (std): 11.282905709587752 Loss ratio: 0.48939031774380903 Tokens per Sec: 2566.37486744235
Epoch Step: 30 / 67 Loss (mean): 23.646889694035053 Loss (std): 11.034785087718296 Loss ratio: 0.46664847810838433 Tokens per Sec: 2560.027862379426
Epoch Step: 35 / 67 Loss (mean): 21.270330101251602 Loss (std): 9.025417579926092 Loss ratio: 0.4243195821109994 Tokens per Sec: 2731.0530947808215
Epoch Step: 40 / 67 Loss (mean): 22.1593252196908 Loss (std): 9.390535472545952 Loss ratio: 0.4237735300803073 Tokens per Sec: 2813.2405051236456
Epoch Step: 45 / 67 Loss (mean): 20.909054964780807 Loss (std): 11.578868010396038 Loss ratio: 0.5537729003008253 Tokens per Sec: 3049.033012687868
Epoch Step: 50 / 67 Loss (mean): 17.705382273310708 Loss (std): 8.759202330813558 Loss ratio: 0.49471975219745906 Tokens per Sec: 2637.3550209917034
Epoch Step: 55 / 67 Loss (mean): 20.89804381132126 Loss (std): 11.874687765243731 Loss ratio: 0.5682200627223666 Tokens per Sec: 2469.8949794465357
Epoch Step: 60 / 67 Loss (mean): 22.77049484103918 Loss (std): 14.598879937751374 Loss ratio: 0.6411314308128194 Tokens per Sec: 2818.0484304021056
Epoch Step: 65 / 67 Loss (mean): 23.101226426661015 Loss (std): 8.800961012781004 Loss ratio: 0.38097375655449434 Tokens per Sec: 3160.006796560451
Mean loss per sample: 22.555909917883284 Std loss per sample: 11.565497859398981 ratio: 0.5127480071300233
Epoch ended with duration 0:00:11.597007
Train perplexity: 21.15355916728859
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo for openjdk 9[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' for zoneinfo objects in java 7[0m
Epoch Step: 5 / 8 Loss (mean): 63.8898206949234 Loss (std): 24.996344504594912 Loss ratio: 0.39124142520220107 Tokens per Sec: 4223.090069289915
Mean loss per sample: 58.71489095297016 Std loss per sample: 28.583545675891024 ratio: 0.4868193606760858
Epoch ended with duration 0:00:01.055875
b'BLEU = 0.69, 9.6/1.1/0.4/0.2 (BP=0.740, ratio=0.769, hyp_len=2393, ref_len=3113)\n'
Validation perplexity: 2855.263485926231
Validation accuracy: 0.0
Validation BLEU: 0.69
Model saved best_on_validation_commit_msg_generator!
Epoch 80 / 1000
Epoch Step: 5 / 67 Loss (mean): 44.526866763830185 Loss (std): 19.485818143324316 Loss ratio: 0.43761934219797666 Tokens per Sec: 2701.9933168398093
Epoch Step: 10 / 67 Loss (mean): 16.36846586689353 Loss (std): 11.439036850635807 Loss ratio: 0.6988459971543289 Tokens per Sec: 2410.3499531597713
Epoch Step: 15 / 67 Loss (mean): 19.795619696378708 Loss (std): 9.038994557084099 Loss ratio: 0.4566158925925233 Tokens per Sec: 2430.306725191165
Epoch Step: 20 / 67 Loss (mean): 18.93429882079363 Loss (std): 10.198226065972065 Loss ratio: 0.5386112346960735 Tokens per Sec: 2514.325660849161
Epoch Step: 25 / 67 Loss (mean): 21.477506950497627 Loss (std): 10.441108700953947 Loss ratio: 0.48614155846947726 Tokens per Sec: 3333.3457091935916
Epoch Step: 30 / 67 Loss (mean): 21.202229008078575 Loss (std): 10.0752469417595 Loss ratio: 0.47519753408571247 Tokens per Sec: 3001.096623619846
Epoch Step: 35 / 67 Loss (mean): 22.91347212344408 Loss (std): 10.577275760913391 Loss ratio: 0.46161820015444877 Tokens per Sec: 2993.948847188965
Epoch Step: 40 / 67 Loss (mean): 21.92233744263649 Loss (std): 10.122100266725184 Loss ratio: 0.46172541104302284 Tokens per Sec: 2556.2896746267206
Epoch Step: 45 / 67 Loss (mean): 22.02879363298416 Loss (std): 8.770488186206936 Loss ratio: 0.39813747099953334 Tokens per Sec: 3477.3413335469495
Epoch Step: 50 / 67 Loss (mean): 20.175513677299023 Loss (std): 9.542184040566147 Loss ratio: 0.4729586662917421 Tokens per Sec: 2407.561318132723
Epoch Step: 55 / 67 Loss (mean): 25.909286253154278 Loss (std): 9.715369548152996 Loss ratio: 0.3749763483727853 Tokens per Sec: 2364.760342186677
Epoch Step: 60 / 67 Loss (mean): 23.84817697107792 Loss (std): 8.043929769127137 Loss ratio: 0.3372974705312898 Tokens per Sec: 3207.7535822710056
Epoch Step: 65 / 67 Loss (mean): 25.736764892935753 Loss (std): 11.388644355356137 Loss ratio: 0.44250489145518446 Tokens per Sec: 2600.6257945923853
Mean loss per sample: 23.37206647371497 Std loss per sample: 13.059429086864924 ratio: 0.5587622772488692
Epoch ended with duration 0:00:11.660337
Train perplexity: 23.62330967126951
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo for no-dex2oat[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1 ( )[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' for the evict ''[0m
Epoch Step: 5 / 8 Loss (mean): 57.54080721735954 Loss (std): 24.574438653022217 Loss ratio: 0.42707844817318324 Tokens per Sec: 4328.103181367819
Mean loss per sample: 58.24965342341876 Std loss per sample: 28.913939034870594 ratio: 0.4963795891572807
Epoch ended with duration 0:00:01.042883
b'BLEU = 0.76, 9.3/1.1/0.4/0.3 (BP=0.742, ratio=0.770, hyp_len=2397, ref_len=3113)\n'
Validation perplexity: 2680.802284725074
Validation accuracy: 0.0
Validation BLEU: 0.76
Model saved best_on_validation_commit_msg_generator!
Model saved checkpoint_commit_msg_generator!
Epoch 81 / 1000
Epoch Step: 5 / 67 Loss (mean): 19.780284129083157 Loss (std): 10.146236338779905 Loss ratio: 0.5129469461898067 Tokens per Sec: 2456.986951346702
Epoch Step: 10 / 67 Loss (mean): 20.902597218751907 Loss (std): 10.499185953096832 Loss ratio: 0.502290975768213 Tokens per Sec: 2621.347135768101
Epoch Step: 15 / 67 Loss (mean): 21.502509877085686 Loss (std): 10.13121565065246 Loss ratio: 0.4711643295859554 Tokens per Sec: 3221.8881479867127
Epoch Step: 20 / 67 Loss (mean): 22.889557845890522 Loss (std): 8.289221494577752 Loss ratio: 0.36213986964654094 Tokens per Sec: 3448.17446324366
Epoch Step: 25 / 67 Loss (mean): 19.49234899133444 Loss (std): 8.61684124421666 Loss ratio: 0.4420627420557359 Tokens per Sec: 2591.4862869889475
Epoch Step: 30 / 67 Loss (mean): 20.864159360527992 Loss (std): 7.018208413791665 Loss ratio: 0.3363762849256756 Tokens per Sec: 2508.2191359920103
Epoch Step: 35 / 67 Loss (mean): 22.828466027975082 Loss (std): 10.926406362215856 Loss ratio: 0.47863077391297865 Tokens per Sec: 2634.978900439355
Epoch Step: 40 / 67 Loss (mean): 16.664767191523598 Loss (std): 8.136017879759688 Loss ratio: 0.488216714116355 Tokens per Sec: 2695.3779500899
Epoch Step: 45 / 67 Loss (mean): 21.20682153850794 Loss (std): 10.734191835941889 Loss ratio: 0.5061669339014545 Tokens per Sec: 2172.4596533377894
Epoch Step: 50 / 67 Loss (mean): 21.635418362915516 Loss (std): 7.95747611106639 Loss ratio: 0.36779857812715144 Tokens per Sec: 2820.4136727956125
Epoch Step: 55 / 67 Loss (mean): 22.72652179002762 Loss (std): 10.808810341955597 Loss ratio: 0.4756033695705471 Tokens per Sec: 3168.5420769653965
Epoch Step: 60 / 67 Loss (mean): 23.02676359564066 Loss (std): 9.99292138598825 Loss ratio: 0.43396986052699443 Tokens per Sec: 2453.122212840257
Epoch Step: 65 / 67 Loss (mean): 19.28873609006405 Loss (std): 11.281391213105524 Loss ratio: 0.5848693849316937 Tokens per Sec: 2764.6002144376284
Mean loss per sample: 22.33367312636333 Std loss per sample: 11.639756495791218 ratio: 0.5211751971981404
Epoch ended with duration 0:00:11.642414
Train perplexity: 20.526969338511684
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo for openjdk 9[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java 7 in createguidmapper[0m
Epoch Step: 5 / 8 Loss (mean): 57.65497052669525 Loss (std): 24.668551058977346 Loss ratio: 0.4278651230522333 Tokens per Sec: 4309.242426722656
Mean loss per sample: 58.39423674540441 Std loss per sample: 28.971983553849306 ratio: 0.49614457125564504
Epoch ended with duration 0:00:01.042718
b'BLEU = 0.00, 10.2/0.7/0.1/0.0 (BP=0.686, ratio=0.726, hyp_len=2260, ref_len=3113)\n'
Validation perplexity: 2733.8469037168957
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 82 / 1000
Epoch Step: 5 / 67 Loss (mean): 24.417635701596737 Loss (std): 10.796492875352268 Loss ratio: 0.44215963442546796 Tokens per Sec: 2921.3320220894166
Epoch Step: 10 / 67 Loss (mean): 19.0620703920722 Loss (std): 9.79701994630355 Loss ratio: 0.513953612844598 Tokens per Sec: 2779.2014385358466
Epoch Step: 15 / 67 Loss (mean): 20.658215261995792 Loss (std): 8.413622690573474 Loss ratio: 0.40727732690692436 Tokens per Sec: 2568.3747270196136
Epoch Step: 20 / 67 Loss (mean): 18.749584935605526 Loss (std): 10.146109927531908 Loss ratio: 0.5411378418444032 Tokens per Sec: 2552.3824530825505
Epoch Step: 25 / 67 Loss (mean): 18.14949808269739 Loss (std): 9.43038151070304 Loss ratio: 0.5195946173130475 Tokens per Sec: 2960.9334224099925
Epoch Step: 30 / 67 Loss (mean): 42.358291536569595 Loss (std): 19.400841507985692 Loss ratio: 0.4580175640756468 Tokens per Sec: 2445.0000726101075
Epoch Step: 35 / 67 Loss (mean): 19.33085449039936 Loss (std): 8.56053438272106 Loss ratio: 0.44284304074466224 Tokens per Sec: 2616.4007732814907
Epoch Step: 40 / 67 Loss (mean): 18.91942036151886 Loss (std): 10.921682753734979 Loss ratio: 0.5772736450186987 Tokens per Sec: 2981.7217468615786
Epoch Step: 45 / 67 Loss (mean): 19.93364254385233 Loss (std): 11.187885394041862 Loss ratio: 0.5612564472062473 Tokens per Sec: 3011.7176913375883
Epoch Step: 50 / 67 Loss (mean): 22.045432820916176 Loss (std): 10.084412068837912 Loss ratio: 0.4574376992621376 Tokens per Sec: 2629.274721399314
Epoch Step: 55 / 67 Loss (mean): 20.987471625208855 Loss (std): 9.594691885613345 Loss ratio: 0.4571628282317149 Tokens per Sec: 2601.308415221436
Epoch Step: 60 / 67 Loss (mean): 21.642745539546013 Loss (std): 10.874839239925658 Loss ratio: 0.5024704106997403 Tokens per Sec: 2431.748044083001
Epoch Step: 65 / 67 Loss (mean): 25.801020443439484 Loss (std): 9.115149111359687 Loss ratio: 0.3532863799453881 Tokens per Sec: 2805.386856804421
Mean loss per sample: 23.225582642506055 Std loss per sample: 13.357092106402527 ratio: 0.5751025630658319
Epoch ended with duration 0:00:11.709699
Train perplexity: 23.1597232225014
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo for no-dex2oat[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java 7 instead of assuming in sslsocket[0m
Epoch Step: 5 / 8 Loss (mean): 57.697335332632065 Loss (std): 25.012299508989052 Loss ratio: 0.4335087463708704 Tokens per Sec: 4184.921703836305
Mean loss per sample: 59.0705275594211 Std loss per sample: 28.7237820122834 ratio: 0.4862624933117306
Epoch ended with duration 0:00:01.063133
b'BLEU = 0.47, 9.0/0.9/0.2/0.1 (BP=0.707, ratio=0.743, hyp_len=2312, ref_len=3113)\n'
Validation perplexity: 2996.243263243408
Validation accuracy: 0.0
Validation BLEU: 0.47
Epoch 83 / 1000
Epoch Step: 5 / 67 Loss (mean): 20.225331716239452 Loss (std): 8.91387481257113 Loss ratio: 0.4407282381140847 Tokens per Sec: 2948.8175811878614
Epoch Step: 10 / 67 Loss (mean): 45.45545556768775 Loss (std): 21.794102144661895 Loss ratio: 0.4794606471869649 Tokens per Sec: 2675.7355984229894
Epoch Step: 15 / 67 Loss (mean): 19.202718313783407 Loss (std): 9.478184760815878 Loss ratio: 0.4935855750179175 Tokens per Sec: 2755.584929049454
Epoch Step: 20 / 67 Loss (mean): 21.810177944600582 Loss (std): 8.90421455384839 Loss ratio: 0.4082596013872851 Tokens per Sec: 2437.40941763269
Epoch Step: 25 / 67 Loss (mean): 21.459727130830288 Loss (std): 8.782478361952455 Loss ratio: 0.40925396247629997 Tokens per Sec: 3116.470720721417
Epoch Step: 30 / 67 Loss (mean): 22.058849953114986 Loss (std): 10.455500903472988 Loss ratio: 0.47398213985296817 Tokens per Sec: 2910.7954463952565
Epoch Step: 35 / 67 Loss (mean): 20.618136785924435 Loss (std): 10.26318835091834 Loss ratio: 0.49777477264215264 Tokens per Sec: 2713.4734625894157
Epoch Step: 40 / 67 Loss (mean): 20.813331373035908 Loss (std): 9.418273007103423 Loss ratio: 0.4525115580154067 Tokens per Sec: 2175.782194393457
Epoch Step: 45 / 67 Loss (mean): 35.13803716748953 Loss (std): 21.49653143363722 Loss ratio: 0.6117738259303305 Tokens per Sec: 2946.2423725876106
Epoch Step: 50 / 67 Loss (mean): 22.12424848973751 Loss (std): 9.582609739329436 Loss ratio: 0.4331270164396498 Tokens per Sec: 2615.358930168726
Epoch Step: 55 / 67 Loss (mean): 21.447504736483097 Loss (std): 8.476346077256498 Loss ratio: 0.3952136242141903 Tokens per Sec: 2896.678720415033
Epoch Step: 60 / 67 Loss (mean): 39.14482021331787 Loss (std): 21.044096597657763 Loss ratio: 0.5375959445714386 Tokens per Sec: 2558.4519088377847
Epoch Step: 65 / 67 Loss (mean): 21.24720750004053 Loss (std): 9.351851075704639 Loss ratio: 0.44014494966864703 Tokens per Sec: 2696.357529701549
Mean loss per sample: 22.878708130084902 Std loss per sample: 13.029843442846627 ratio: 0.5695183210853031
Epoch ended with duration 0:00:11.698997
Train perplexity: 22.097902166963806
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo for openjdk 9[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone of receive.timeout[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java 7 instead of assuming in sslsocket[0m
Epoch Step: 5 / 8 Loss (mean): 57.99813395738602 Loss (std): 24.901003417211278 Loss ratio: 0.42934145839083765 Tokens per Sec: 4335.097421887628
Mean loss per sample: 58.58453790477065 Std loss per sample: 28.933892847786666 ratio: 0.49388275272937715
Epoch ended with duration 0:00:01.041499
b'BLEU = 0.42, 8.9/0.8/0.1/0.1 (BP=0.766, ratio=0.790, hyp_len=2458, ref_len=3113)\n'
Validation perplexity: 2805.2676554667696
Validation accuracy: 0.0
Validation BLEU: 0.42
Epoch 84 / 1000
Epoch Step: 5 / 67 Loss (mean): 19.62327230721712 Loss (std): 10.268060116322271 Loss ratio: 0.5232593196266173 Tokens per Sec: 2650.317533395581
Epoch Step: 10 / 67 Loss (mean): 20.170864179730415 Loss (std): 6.5786438084799 Loss ratio: 0.3261458581973271 Tokens per Sec: 2663.3790493778015
Epoch Step: 15 / 67 Loss (mean): 20.20966699719429 Loss (std): 9.740179852485197 Loss ratio: 0.4819564742871531 Tokens per Sec: 3060.1987872998147
Epoch Step: 20 / 67 Loss (mean): 21.25955330580473 Loss (std): 9.182719288799136 Loss ratio: 0.43193378321320974 Tokens per Sec: 2931.247085795501
Epoch Step: 25 / 67 Loss (mean): 19.094501212239265 Loss (std): 8.346821554742412 Loss ratio: 0.4371322121466171 Tokens per Sec: 2169.9145532053262
Epoch Step: 30 / 67 Loss (mean): 18.209949776530266 Loss (std): 9.686593310008062 Loss ratio: 0.5319395950499843 Tokens per Sec: 2788.797633266377
Epoch Step: 35 / 67 Loss (mean): 19.403720520436764 Loss (std): 10.347694049684703 Loss ratio: 0.533284018329686 Tokens per Sec: 2899.0931544890955
Epoch Step: 40 / 67 Loss (mean): 18.43997472524643 Loss (std): 10.740497698742914 Loss ratio: 0.5824572895990984 Tokens per Sec: 3021.7257417916426
Epoch Step: 45 / 67 Loss (mean): 20.74906926602125 Loss (std): 11.363236416054791 Loss ratio: 0.5476504160436375 Tokens per Sec: 2852.510620906067
Epoch Step: 50 / 67 Loss (mean): 15.787417519660224 Loss (std): 7.339495863933535 Loss ratio: 0.46489527845789785 Tokens per Sec: 2465.4939567001816
Epoch Step: 55 / 67 Loss (mean): 19.995992675423622 Loss (std): 9.081329613364748 Loss ratio: 0.45415747848949223 Tokens per Sec: 2458.2217414979737
Epoch Step: 60 / 67 Loss (mean): 21.412601985037327 Loss (std): 10.73042362148289 Loss ratio: 0.5011265622450314 Tokens per Sec: 2918.0507638242975
Epoch Step: 65 / 67 Loss (mean): 20.726160511374474 Loss (std): 9.412770161434029 Loss ratio: 0.4541492456486729 Tokens per Sec: 2407.9708115201665
Mean loss per sample: 22.449669771221284 Std loss per sample: 12.704045934334264 ratio: 0.5658901027853805
Epoch ended with duration 0:00:11.666612
Train perplexity: 20.851667310077467
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo in missedcallnotifierimpl[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1 ( )[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java instead of adb for commits[0m
Epoch Step: 5 / 8 Loss (mean): 64.80761605501175 Loss (std): 25.821476167357037 Loss ratio: 0.39843274200116474 Tokens per Sec: 4099.150429669684
Mean loss per sample: 60.210361097679765 Std loss per sample: 29.083816309088096 ratio: 0.4830367361840794
Epoch ended with duration 0:00:01.074949
b'BLEU = 0.46, 9.2/0.8/0.2/0.1 (BP=0.715, ratio=0.749, hyp_len=2332, ref_len=3113)\n'
Validation perplexity: 3496.726059481777
Validation accuracy: 0.0
Validation BLEU: 0.46
Epoch 85 / 1000
Epoch Step: 5 / 67 Loss (mean): 21.183204099535942 Loss (std): 10.209249135617977 Loss ratio: 0.4819501850450296 Tokens per Sec: 2985.74077899656
Epoch Step: 10 / 67 Loss (mean): 19.116319611668587 Loss (std): 10.370272471155875 Loss ratio: 0.5424826892319727 Tokens per Sec: 2911.774393565223
Epoch Step: 15 / 67 Loss (mean): 18.475758582353592 Loss (std): 9.25006662506766 Loss ratio: 0.5006596391610413 Tokens per Sec: 2432.6881552118716
Epoch Step: 20 / 67 Loss (mean): 20.591703236103058 Loss (std): 8.230352865890795 Loss ratio: 0.3996926709520885 Tokens per Sec: 3022.8349761526233
Epoch Step: 25 / 67 Loss (mean): 18.99647045135498 Loss (std): 8.119037521655434 Loss ratio: 0.42739716003802797 Tokens per Sec: 2205.574267471072
Epoch Step: 30 / 67 Loss (mean): 19.287160709500313 Loss (std): 8.4128809108875 Loss ratio: 0.43619074044131084 Tokens per Sec: 3004.688226887664
Epoch Step: 35 / 67 Loss (mean): 19.129772044718266 Loss (std): 10.027125555753948 Loss ratio: 0.5241633581578636 Tokens per Sec: 2643.6016554478424
Epoch Step: 40 / 67 Loss (mean): 20.776230446994305 Loss (std): 10.463851827786199 Loss ratio: 0.5036453486825856 Tokens per Sec: 2533.376091935703
Epoch Step: 45 / 67 Loss (mean): 19.080187067389488 Loss (std): 9.304914810829159 Loss ratio: 0.4876741919754269 Tokens per Sec: 2224.010817276998
Epoch Step: 50 / 67 Loss (mean): 18.39483906328678 Loss (std): 10.549723665016154 Loss ratio: 0.5735154098777494 Tokens per Sec: 2895.139726116018
Epoch Step: 55 / 67 Loss (mean): 18.24315708130598 Loss (std): 9.438927639795475 Loss ratio: 0.5173955142592987 Tokens per Sec: 2750.040534441474
Epoch Step: 60 / 67 Loss (mean): 21.110488951206207 Loss (std): 8.244645611985904 Loss ratio: 0.39054735449482914 Tokens per Sec: 3029.61550999379
Epoch Step: 65 / 67 Loss (mean): 20.930685833096504 Loss (std): 9.4278229934733 Loss ratio: 0.45043067717186885 Tokens per Sec: 3095.5591975615807
Mean loss per sample: 22.26174144106631 Std loss per sample: 12.581962458450906 ratio: 0.5651832086793047
Epoch ended with duration 0:00:11.642671
Train perplexity: 20.3281629603235
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1 ( )[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix infinite loop[0m
Epoch Step: 5 / 8 Loss (mean): 58.25598165392876 Loss (std): 24.92978077930609 Loss ratio: 0.42793512479803586 Tokens per Sec: 4277.285124832709
Mean loss per sample: 59.193247709117955 Std loss per sample: 29.499933515663663 ratio: 0.498366530936595
Epoch ended with duration 0:00:01.049514
b'BLEU = 0.00, 9.5/0.6/0.1/0.0 (BP=0.744, ratio=0.772, hyp_len=2402, ref_len=3113)\n'
Validation perplexity: 3046.48978227195
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved checkpoint_commit_msg_generator!
Epoch 86 / 1000
Epoch Step: 5 / 67 Loss (mean): 20.682934034615755 Loss (std): 9.209091567028242 Loss ratio: 0.4452507343308039 Tokens per Sec: 2522.9879687086295
Epoch Step: 10 / 67 Loss (mean): 20.421447426080704 Loss (std): 10.490371505790305 Loss ratio: 0.5136938282049884 Tokens per Sec: 3607.626784524693
Epoch Step: 15 / 67 Loss (mean): 20.00471606105566 Loss (std): 9.246069292866686 Loss ratio: 0.4621944777744956 Tokens per Sec: 3375.9011328141587
Epoch Step: 20 / 67 Loss (mean): 19.49171244353056 Loss (std): 9.522233375162466 Loss ratio: 0.48852728577590754 Tokens per Sec: 2940.63182225162
Epoch Step: 25 / 67 Loss (mean): 18.497094459831715 Loss (std): 9.292856457195565 Loss ratio: 0.5023954695898823 Tokens per Sec: 2834.5218986922546
Epoch Step: 30 / 67 Loss (mean): 20.160313069820404 Loss (std): 9.590112223613774 Loss ratio: 0.47569262393895984 Tokens per Sec: 2348.614563474159
Epoch Step: 35 / 67 Loss (mean): 19.149834975600243 Loss (std): 10.182730233105087 Loss ratio: 0.5317398424623194 Tokens per Sec: 2570.1054879185085
Epoch Step: 40 / 67 Loss (mean): 23.57622717320919 Loss (std): 9.211892908111306 Loss ratio: 0.39072803466108547 Tokens per Sec: 2443.178319164741
Epoch Step: 45 / 67 Loss (mean): 20.745198525488377 Loss (std): 8.552278677104363 Loss ratio: 0.4122534024727068 Tokens per Sec: 2700.8061272653613
Epoch Step: 50 / 67 Loss (mean): 20.25904132425785 Loss (std): 9.214044814408567 Loss ratio: 0.4548114921595928 Tokens per Sec: 2815.377063565373
Epoch Step: 55 / 67 Loss (mean): 18.52664214372635 Loss (std): 8.435164585980116 Loss ratio: 0.4552991589377951 Tokens per Sec: 2762.1735454437376
Epoch Step: 60 / 67 Loss (mean): 19.646352138370275 Loss (std): 8.353786199349685 Loss ratio: 0.42520800505424805 Tokens per Sec: 2459.071244709405
Epoch Step: 65 / 67 Loss (mean): 41.31329692900181 Loss (std): 28.49448511551714 Loss ratio: 0.6897170459304133 Tokens per Sec: 2587.1827903747912
Mean loss per sample: 21.95772388017183 Std loss per sample: 12.780498350627987 ratio: 0.5820502352782101
Epoch ended with duration 0:00:11.672691
Train perplexity: 19.508958558361655
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo for no-dex2oat[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1 ( ) test for threads[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java instead of adb for commits dex[0m
Epoch Step: 5 / 8 Loss (mean): 58.92988283932209 Loss (std): 25.16031806822335 Loss ratio: 0.4269534717526139 Tokens per Sec: 4285.727461663331
Mean loss per sample: 60.13827224442216 Std loss per sample: 29.23038656950871 ratio: 0.4860529822125017
Epoch ended with duration 0:00:01.065157
b'BLEU = 0.76, 9.9/1.0/0.3/0.3 (BP=0.757, ratio=0.782, hyp_len=2434, ref_len=3113)\n'
Validation perplexity: 3462.7317071210946
Validation accuracy: 0.0
Validation BLEU: 0.76
Epoch 87 / 1000
Epoch Step: 5 / 67 Loss (mean): 43.871153708547354 Loss (std): 21.328726776789914 Loss ratio: 0.48616744657513916 Tokens per Sec: 3035.2805506703435
Epoch Step: 10 / 67 Loss (mean): 23.45538740605116 Loss (std): 8.76969468143965 Loss ratio: 0.3738882896974532 Tokens per Sec: 3009.208225249181
Epoch Step: 15 / 67 Loss (mean): 37.561357237398624 Loss (std): 21.501944886099537 Loss ratio: 0.5724485606364285 Tokens per Sec: 2691.500193425366
Epoch Step: 20 / 67 Loss (mean): 19.675532951951027 Loss (std): 8.674413108741893 Loss ratio: 0.4408730950224013 Tokens per Sec: 2452.970048757134
Epoch Step: 25 / 67 Loss (mean): 18.187384754419327 Loss (std): 9.118541452208095 Loss ratio: 0.5013662808223373 Tokens per Sec: 2685.742594763547
Epoch Step: 30 / 67 Loss (mean): 21.067945584654808 Loss (std): 9.694768018351542 Loss ratio: 0.4601667485515479 Tokens per Sec: 2909.921049113317
Epoch Step: 35 / 67 Loss (mean): 21.435610808432102 Loss (std): 10.258162265956829 Loss ratio: 0.47855703099076546 Tokens per Sec: 3148.9402089951113
Epoch Step: 40 / 67 Loss (mean): 37.54515027999878 Loss (std): 17.83046890657837 Loss ratio: 0.4749073788120406 Tokens per Sec: 2564.9554679266753
Epoch Step: 45 / 67 Loss (mean): 21.310326546430588 Loss (std): 9.150301687267628 Loss ratio: 0.42938345723286325 Tokens per Sec: 2485.8361704154468
Epoch Step: 50 / 67 Loss (mean): 21.48908955603838 Loss (std): 8.688235795146376 Loss ratio: 0.4043091622141341 Tokens per Sec: 2494.9232674192276
Epoch Step: 55 / 67 Loss (mean): 36.28534530848265 Loss (std): 21.685610695436807 Loss ratio: 0.5976410176360435 Tokens per Sec: 2666.8072159662584
Epoch Step: 60 / 67 Loss (mean): 42.68009629100561 Loss (std): 19.306106247784754 Loss ratio: 0.45234448667008553 Tokens per Sec: 2380.605013562646
Epoch Step: 65 / 67 Loss (mean): 20.860473312437534 Loss (std): 8.356439217182082 Loss ratio: 0.4005872298304835 Tokens per Sec: 2875.5625921985616
Mean loss per sample: 23.727259035854903 Std loss per sample: 14.735008032913077 ratio: 0.6210160225690885
Epoch ended with duration 0:00:11.766228
Train perplexity: 24.786307277463123
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo for calendar appwidget[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1 ( )[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java 7 construct in acceptance[0m
Epoch Step: 5 / 8 Loss (mean): 58.54092800617218 Loss (std): 25.23347660938981 Loss ratio: 0.43103991461716074 Tokens per Sec: 4120.844122139669
Mean loss per sample: 60.49939103790971 Std loss per sample: 28.88037079634266 ratio: 0.477366305691339
Epoch ended with duration 0:00:01.070745
b'BLEU = 0.45, 8.8/0.7/0.2/0.1 (BP=0.751, ratio=0.777, hyp_len=2420, ref_len=3113)\n'
Validation perplexity: 3636.4060793347226
Validation accuracy: 0.0
Validation BLEU: 0.45
Epoch 88 / 1000
Epoch Step: 5 / 67 Loss (mean): 18.167383328080177 Loss (std): 7.875055094306104 Loss ratio: 0.43347217109324315 Tokens per Sec: 2714.9580906313477
Epoch Step: 10 / 67 Loss (mean): 19.78956639021635 Loss (std): 9.15627112816849 Loss ratio: 0.4626817459070354 Tokens per Sec: 2981.1008310376
Epoch Step: 15 / 67 Loss (mean): 18.436302088201046 Loss (std): 9.693173857483455 Loss ratio: 0.5257656232312954 Tokens per Sec: 2628.669667518752
Epoch Step: 20 / 67 Loss (mean): 18.166365452110767 Loss (std): 9.793811445183355 Loss ratio: 0.5391178257974218 Tokens per Sec: 2346.5281147971305
Epoch Step: 25 / 67 Loss (mean): 18.12015187740326 Loss (std): 8.894605162758493 Loss ratio: 0.4908681352638392 Tokens per Sec: 2599.977315968429
Epoch Step: 30 / 67 Loss (mean): 20.222890503704548 Loss (std): 9.0512064962284 Loss ratio: 0.44757234355644393 Tokens per Sec: 2914.776467653533
Epoch Step: 35 / 67 Loss (mean): 19.116254322230816 Loss (std): 10.258214119463673 Loss ratio: 0.536622601193065 Tokens per Sec: 2540.9725361295436
Epoch Step: 40 / 67 Loss (mean): 23.419450350105762 Loss (std): 8.357681260442355 Loss ratio: 0.3568692320058917 Tokens per Sec: 3256.7451033893344
Epoch Step: 45 / 67 Loss (mean): 17.413224011659622 Loss (std): 9.099832034001308 Loss ratio: 0.5225816900941608 Tokens per Sec: 2582.3316005881516
Epoch Step: 50 / 67 Loss (mean): 42.478290632367134 Loss (std): 14.260379074394109 Loss ratio: 0.3357098146394842 Tokens per Sec: 2747.1007921790574
Epoch Step: 55 / 67 Loss (mean): 18.68282499909401 Loss (std): 9.508332645433923 Loss ratio: 0.5089344168183887 Tokens per Sec: 2601.5929582841823
Epoch Step: 60 / 67 Loss (mean): 21.904973790049553 Loss (std): 10.684860880062589 Loss ratio: 0.4877824088023443 Tokens per Sec: 2607.6459502989487
Epoch Step: 65 / 67 Loss (mean): 20.004518516361713 Loss (std): 9.955553120794136 Loss ratio: 0.497665220617606 Tokens per Sec: 3039.51966771845
Mean loss per sample: 21.272814055563305 Std loss per sample: 11.76774824569894 ratio: 0.5531824898653414
Epoch ended with duration 0:00:11.592686
Train perplexity: 17.782337147336097
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone of receive.timeout[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java 7 construct in acceptance[0m
Epoch Step: 5 / 8 Loss (mean): 58.8980278968811 Loss (std): 25.813944960042356 Loss ratio: 0.4382819914656143 Tokens per Sec: 4312.757454858689
Mean loss per sample: 59.786895354263116 Std loss per sample: 30.34764843559177 ratio: 0.5075969952239345
Epoch ended with duration 0:00:01.045624
b'BLEU = 0.76, 9.8/1.1/0.4/0.4 (BP=0.662, ratio=0.708, hyp_len=2205, ref_len=3113)\n'
Validation perplexity: 3301.70805148632
Validation accuracy: 0.0
Validation BLEU: 0.76
Epoch 89 / 1000
Epoch Step: 5 / 67 Loss (mean): 19.62537433207035 Loss (std): 9.352825004447032 Loss ratio: 0.4765679801155859 Tokens per Sec: 3323.2857246308263
Epoch Step: 10 / 67 Loss (mean): 18.52463450282812 Loss (std): 9.829427988393135 Loss ratio: 0.5306138691639231 Tokens per Sec: 2286.0773666132486
Epoch Step: 15 / 67 Loss (mean): 19.09436847269535 Loss (std): 8.755163179375105 Loss ratio: 0.45852069901630166 Tokens per Sec: 2644.5537014526126
Epoch Step: 20 / 67 Loss (mean): 17.126842994242907 Loss (std): 9.862935226875072 Loss ratio: 0.5758758476498234 Tokens per Sec: 2555.4930411083246
Epoch Step: 25 / 67 Loss (mean): 17.556212186813354 Loss (std): 8.724066509825652 Loss ratio: 0.49692191100187233 Tokens per Sec: 2470.8765808011085
Epoch Step: 30 / 67 Loss (mean): 20.362255334854126 Loss (std): 8.177123550465582 Loss ratio: 0.40158240902071285 Tokens per Sec: 3525.1158799350715
Epoch Step: 35 / 67 Loss (mean): 22.473916806280613 Loss (std): 8.151474915465789 Loss ratio: 0.3627082446611068 Tokens per Sec: 2881.9123193123987
Epoch Step: 40 / 67 Loss (mean): 19.795487381517887 Loss (std): 8.126576358674813 Loss ratio: 0.41052671258108114 Tokens per Sec: 2468.1608901076256
Epoch Step: 45 / 67 Loss (mean): 18.45720813423395 Loss (std): 8.274426826737628 Loss ratio: 0.4483032735265327 Tokens per Sec: 2082.7319670747247
Epoch Step: 50 / 67 Loss (mean): 23.76324138045311 Loss (std): 8.314830794789687 Loss ratio: 0.34990305664399823 Tokens per Sec: 2625.8834403721366
Epoch Step: 55 / 67 Loss (mean): 19.38637000322342 Loss (std): 7.855360834571572 Loss ratio: 0.4052001913336763 Tokens per Sec: 2822.0831191851557
Epoch Step: 60 / 67 Loss (mean): 21.561047308146954 Loss (std): 11.50213035292391 Loss ratio: 0.5334680727024689 Tokens per Sec: 3298.4816067272536
Epoch Step: 65 / 67 Loss (mean): 19.817261938005686 Loss (std): 9.800332354722974 Loss ratio: 0.49453513736566335 Tokens per Sec: 3100.4515592151647
Mean loss per sample: 21.082371316825736 Std loss per sample: 12.037448450965005 ratio: 0.570972224616781
Epoch ended with duration 0:00:11.662925
Train perplexity: 17.329995106625407
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1 ( )[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix infinite loop[0m
Epoch Step: 5 / 8 Loss (mean): 59.18994453549385 Loss (std): 26.145458034241585 Loss ratio: 0.44172127950826506 Tokens per Sec: 4200.152514255699
Mean loss per sample: 61.21408875653001 Std loss per sample: 30.464723305438202 ratio: 0.49767502750236364
Epoch ended with duration 0:00:01.077772
b'BLEU = 0.41, 9.3/0.8/0.2/0.1 (BP=0.645, ratio=0.695, hyp_len=2165, ref_len=3113)\n'
Validation perplexity: 4006.228180802185
Validation accuracy: 0.0
Validation BLEU: 0.41
Epoch 90 / 1000
Epoch Step: 5 / 67 Loss (mean): 19.573110692203045 Loss (std): 9.006061316974964 Loss ratio: 0.46012417027624186 Tokens per Sec: 2945.2877138262334
Epoch Step: 10 / 67 Loss (mean): 13.998234589894613 Loss (std): 7.450503671974401 Loss ratio: 0.5322459503109737 Tokens per Sec: 2916.6508678420805
Epoch Step: 15 / 67 Loss (mean): 19.224886022508144 Loss (std): 9.232470529009108 Loss ratio: 0.48023538439707264 Tokens per Sec: 2757.0475187765096
Epoch Step: 20 / 67 Loss (mean): 14.727283217012882 Loss (std): 10.235317043646509 Loss ratio: 0.6949901684393984 Tokens per Sec: 2668.9531195869854
Epoch Step: 25 / 67 Loss (mean): 19.535823553800583 Loss (std): 9.764111261512443 Loss ratio: 0.49980545916698205 Tokens per Sec: 2634.107612452713
Epoch Step: 30 / 67 Loss (mean): 18.051020853221416 Loss (std): 8.319720640321583 Loss ratio: 0.46090028414303397 Tokens per Sec: 2669.2106512721543
Epoch Step: 35 / 67 Loss (mean): 20.44546776264906 Loss (std): 8.962046671555335 Loss ratio: 0.43833903804968016 Tokens per Sec: 2881.191218612962
Epoch Step: 40 / 67 Loss (mean): 17.17798627540469 Loss (std): 9.009061910941117 Loss ratio: 0.5244539008533394 Tokens per Sec: 2939.660753065936
Epoch Step: 45 / 67 Loss (mean): 17.549354046583176 Loss (std): 10.21389436991835 Loss ratio: 0.5820097049046074 Tokens per Sec: 2536.0667466672303
Epoch Step: 50 / 67 Loss (mean): 39.483107432723045 Loss (std): 19.035070656750204 Loss ratio: 0.48210670067407624 Tokens per Sec: 2733.674775578964
Epoch Step: 55 / 67 Loss (mean): 19.806078724563122 Loss (std): 10.817738525790283 Loss ratio: 0.5461827490554366 Tokens per Sec: 2522.070271606618
Epoch Step: 60 / 67 Loss (mean): 19.589175924658775 Loss (std): 8.844297200803435 Loss ratio: 0.451488987327449 Tokens per Sec: 2730.157382159396
Epoch Step: 65 / 67 Loss (mean): 18.664915688335896 Loss (std): 10.498419656017726 Loss ratio: 0.5624680995788485 Tokens per Sec: 2401.780494726086
Mean loss per sample: 20.89162621853556 Std loss per sample: 11.705656739201103 ratio: 0.5603037607869683
Epoch ended with duration 0:00:11.668141
Train perplexity: 16.888468707023833
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo for no-dex2oat[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1 ( )[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java instead of assuming instead of hardcoding[0m
Epoch Step: 5 / 8 Loss (mean): 59.336829006671906 Loss (std): 26.02557137312446 Loss ratio: 0.4386073844660306 Tokens per Sec: 4321.680317794277
Mean loss per sample: 60.501633747679286 Std loss per sample: 30.133222150615772 ratio: 0.49805633805337723
Epoch ended with duration 0:00:01.063492
b'BLEU = 0.74, 9.6/1.0/0.4/0.4 (BP=0.673, ratio=0.716, hyp_len=2230, ref_len=3113)\n'
Validation perplexity: 3637.5114505457063
Validation accuracy: 0.0
Validation BLEU: 0.74
Model saved checkpoint_commit_msg_generator!
Epoch 91 / 1000
Epoch Step: 5 / 67 Loss (mean): 18.381064996123314 Loss (std): 7.3953135269318375 Loss ratio: 0.40233324502642026 Tokens per Sec: 2991.3172373911016
Epoch Step: 10 / 67 Loss (mean): 19.62039241939783 Loss (std): 8.996123259815159 Loss ratio: 0.45850883445741286 Tokens per Sec: 2556.6039502942
Epoch Step: 15 / 67 Loss (mean): 45.81224989891052 Loss (std): 17.121108113629738 Loss ratio: 0.3737233633233303 Tokens per Sec: 2406.698287386207
Epoch Step: 20 / 67 Loss (mean): 19.62989515811205 Loss (std): 7.735884473666816 Loss ratio: 0.394086897120791 Tokens per Sec: 2677.365895287465
Epoch Step: 25 / 67 Loss (mean): 19.311007644981146 Loss (std): 10.073791655242307 Loss ratio: 0.5216605907077275 Tokens per Sec: 2546.455450432483
Epoch Step: 30 / 67 Loss (mean): 41.880880773067474 Loss (std): 18.344898409673707 Loss ratio: 0.4380256114735496 Tokens per Sec: 3088.143828738149
Epoch Step: 35 / 67 Loss (mean): 19.043864525854588 Loss (std): 9.75116422320179 Loss ratio: 0.5120370505662485 Tokens per Sec: 3421.1511234318623
Epoch Step: 40 / 67 Loss (mean): 17.50030332058668 Loss (std): 8.26417053182123 Loss ratio: 0.4722301311257605 Tokens per Sec: 2906.73115986849
Epoch Step: 45 / 67 Loss (mean): 20.313146978616714 Loss (std): 9.641808394241878 Loss ratio: 0.47465852555449123 Tokens per Sec: 2555.486105955476
Epoch Step: 50 / 67 Loss (mean): 17.373676735907793 Loss (std): 10.294276468297511 Loss ratio: 0.5925214693917593 Tokens per Sec: 2476.34264552618
Epoch Step: 55 / 67 Loss (mean): 21.279481664299965 Loss (std): 10.113467157575275 Loss ratio: 0.4752684918327864 Tokens per Sec: 3264.60587360576
Epoch Step: 60 / 67 Loss (mean): 18.282963771373034 Loss (std): 7.643150922642137 Loss ratio: 0.41804769829547955 Tokens per Sec: 2351.2955363505325
Epoch Step: 65 / 67 Loss (mean): 20.78091797977686 Loss (std): 11.840981793085712 Loss ratio: 0.5698007087371632 Tokens per Sec: 2534.800803548057
Mean loss per sample: 20.411373349964144 Std loss per sample: 11.5984332515861 ratio: 0.5682338494683639
Epoch ended with duration 0:00:11.616458
Train perplexity: 15.825981496109511
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1 ( )[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java instead of assuming instead of the[0m
Epoch Step: 5 / 8 Loss (mean): 59.29258185625076 Loss (std): 25.75282341627865 Loss ratio: 0.4343346605940339 Tokens per Sec: 4327.552704575776
Mean loss per sample: 61.122472306743994 Std loss per sample: 30.0358767353484 ratio: 0.4914048074595695
Epoch ended with duration 0:00:01.061833
b'BLEU = 0.71, 9.6/1.0/0.3/0.3 (BP=0.772, ratio=0.794, hyp_len=2472, ref_len=3113)\n'
Validation perplexity: 3956.7956777752997
Validation accuracy: 0.0
Validation BLEU: 0.71
Epoch 92 / 1000
Epoch Step: 5 / 67 Loss (mean): 16.512059971690178 Loss (std): 8.932160112694577 Loss ratio: 0.5409476545027518 Tokens per Sec: 2847.486532414712
Epoch Step: 10 / 67 Loss (mean): 22.54059923440218 Loss (std): 10.237339920322642 Loss ratio: 0.45417337018698634 Tokens per Sec: 2318.964098094731
Epoch Step: 15 / 67 Loss (mean): 18.293215587735176 Loss (std): 9.51561428509577 Loss ratio: 0.5201717674762214 Tokens per Sec: 2794.591071702284
Epoch Step: 20 / 67 Loss (mean): 19.718569234013557 Loss (std): 9.450031612729559 Loss ratio: 0.47924529921921116 Tokens per Sec: 2943.332522002759
Epoch Step: 25 / 67 Loss (mean): 39.55935924961453 Loss (std): 19.68844755865642 Loss ratio: 0.49769379312806405 Tokens per Sec: 2275.2831006000483
Epoch Step: 30 / 67 Loss (mean): 20.62117998674512 Loss (std): 10.024445287269744 Loss ratio: 0.48612374722073404 Tokens per Sec: 2542.4329136246533
Epoch Step: 35 / 67 Loss (mean): 22.8117832839489 Loss (std): 8.355622251637703 Loss ratio: 0.36628535996644274 Tokens per Sec: 2695.843189074415
Epoch Step: 40 / 67 Loss (mean): 19.709658339619637 Loss (std): 9.004437062989208 Loss ratio: 0.45685404119303363 Tokens per Sec: 3117.6144229920014
Epoch Step: 45 / 67 Loss (mean): 17.650164991617203 Loss (std): 8.431148860192481 Loss ratio: 0.477681022483177 Tokens per Sec: 2470.9053488657755
Epoch Step: 50 / 67 Loss (mean): 17.686647593975067 Loss (std): 7.7716281413999395 Loss ratio: 0.43940651274396025 Tokens per Sec: 2981.886821333799
Epoch Step: 55 / 67 Loss (mean): 20.28931687772274 Loss (std): 9.836345454920668 Loss ratio: 0.4848041712888213 Tokens per Sec: 2431.767810255849
Epoch Step: 60 / 67 Loss (mean): 22.028243400156498 Loss (std): 10.734707429724045 Loss ratio: 0.48731563541956235 Tokens per Sec: 3452.9305406696894
Epoch Step: 65 / 67 Loss (mean): 18.96996045485139 Loss (std): 9.50945406594236 Loss ratio: 0.501290136506869 Tokens per Sec: 2906.642082474825
Mean loss per sample: 20.533425140202016 Std loss per sample: 11.68400785934165 ratio: 0.5690238126159354
Epoch ended with duration 0:00:11.641398
Train perplexity: 16.089494771540632
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo for calendar appwidget[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1 ( )[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java instead of adb in sslsocket[0m
Epoch Step: 5 / 8 Loss (mean): 59.62576499581337 Loss (std): 26.071948269282828 Loss ratio: 0.43725976968368413 Tokens per Sec: 4184.072757935313
Mean loss per sample: 61.28529742311259 Std loss per sample: 30.756498610197244 ratio: 0.5018577032898272
Epoch ended with duration 0:00:01.062298
b'BLEU = 0.74, 9.4/1.0/0.3/0.3 (BP=0.752, ratio=0.778, hyp_len=2423, ref_len=3113)\n'
Validation perplexity: 4045.0756206126784
Validation accuracy: 0.0
Validation BLEU: 0.74
Epoch 93 / 1000
Epoch Step: 5 / 67 Loss (mean): 22.21396904438734 Loss (std): 8.191674843584867 Loss ratio: 0.3687623237079555 Tokens per Sec: 2673.5518090770656
Epoch Step: 10 / 67 Loss (mean): 16.83530819043517 Loss (std): 8.233313158802618 Loss ratio: 0.4890503378774082 Tokens per Sec: 2848.1192073036755
Epoch Step: 15 / 67 Loss (mean): 20.680376291275024 Loss (std): 9.796618503541952 Loss ratio: 0.47371567932615954 Tokens per Sec: 2620.6224411800463
Epoch Step: 20 / 67 Loss (mean): 18.432872660458088 Loss (std): 8.265320915684448 Loss ratio: 0.4484011292181867 Tokens per Sec: 2901.253084021054
Epoch Step: 25 / 67 Loss (mean): 18.84268257021904 Loss (std): 8.537902470848348 Loss ratio: 0.45311501900172896 Tokens per Sec: 2650.683741760204
Epoch Step: 30 / 67 Loss (mean): 22.364004388451576 Loss (std): 9.642696769577325 Loss ratio: 0.43117040231653075 Tokens per Sec: 2475.6720748616563
Epoch Step: 35 / 67 Loss (mean): 19.729959666728973 Loss (std): 8.18893252981646 Loss ratio: 0.4150506472461584 Tokens per Sec: 2533.8253190545743
Epoch Step: 40 / 67 Loss (mean): 17.04281861335039 Loss (std): 10.301324189378432 Loss ratio: 0.6044378235246223 Tokens per Sec: 2700.477520583164
Epoch Step: 45 / 67 Loss (mean): 18.93777684867382 Loss (std): 8.14067002999182 Loss ratio: 0.42986408040613794 Tokens per Sec: 3147.1241711342764
Epoch Step: 50 / 67 Loss (mean): 19.537037260830402 Loss (std): 12.556758705463622 Loss ratio: 0.6427156041022931 Tokens per Sec: 2405.7785855118477
Epoch Step: 55 / 67 Loss (mean): 18.010858345776796 Loss (std): 8.731614809932873 Loss ratio: 0.48479726186843675 Tokens per Sec: 3049.414428936505
Epoch Step: 60 / 67 Loss (mean): 19.397497691214085 Loss (std): 10.055646012261992 Loss ratio: 0.5183991343799259 Tokens per Sec: 2601.2082319877495
Epoch Step: 65 / 67 Loss (mean): 17.490075059235096 Loss (std): 9.253758273120718 Loss ratio: 0.5290862527336357 Tokens per Sec: 2848.550078050373
Mean loss per sample: 21.720355109435204 Std loss per sample: 13.472312124432255 ratio: 0.6202620563316645
Epoch ended with duration 0:00:11.679351
Train perplexity: 18.89236451259669
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone of receive.timeout[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java instead of git[0m
Epoch Step: 5 / 8 Loss (mean): 60.17470279335976 Loss (std): 26.391974492992002 Loss ratio: 0.43858919558975107 Tokens per Sec: 4312.277795212592
Mean loss per sample: 60.78643496700975 Std loss per sample: 30.746133780052237 ratio: 0.5058058396867475
Epoch ended with duration 0:00:01.043361
b'BLEU = 0.48, 8.8/0.9/0.2/0.1 (BP=0.768, ratio=0.791, hyp_len=2462, ref_len=3113)\n'
Validation perplexity: 3780.6480884257517
Validation accuracy: 0.0
Validation BLEU: 0.48
Epoch 94 / 1000
Epoch Step: 5 / 67 Loss (mean): 20.404697760939598 Loss (std): 9.830842867502216 Loss ratio: 0.4817931136584267 Tokens per Sec: 2970.1959178025004
Epoch Step: 10 / 67 Loss (mean): 19.86948762089014 Loss (std): 10.211782248812218 Loss ratio: 0.5139429080232486 Tokens per Sec: 2438.6256670261623
Epoch Step: 15 / 67 Loss (mean): 16.250588838011026 Loss (std): 8.706505528486291 Loss ratio: 0.5357655414997204 Tokens per Sec: 2654.657185537036
Epoch Step: 20 / 67 Loss (mean): 16.289758022874594 Loss (std): 9.242449063217284 Loss ratio: 0.5673779223877202 Tokens per Sec: 2574.2867878108277
Epoch Step: 25 / 67 Loss (mean): 18.10728470608592 Loss (std): 7.640629968090055 Loss ratio: 0.4219644243800957 Tokens per Sec: 2566.390246658576
Epoch Step: 30 / 67 Loss (mean): 17.151864990592003 Loss (std): 7.358785052881435 Loss ratio: 0.42903702057576915 Tokens per Sec: 2526.1784040329217
Epoch Step: 35 / 67 Loss (mean): 18.40833704918623 Loss (std): 9.5596469879881 Loss ratio: 0.5193107320039373 Tokens per Sec: 2519.4938854058455
Epoch Step: 40 / 67 Loss (mean): 19.12740058451891 Loss (std): 12.031323657623503 Loss ratio: 0.6290098649035072 Tokens per Sec: 2982.2384911060126
Epoch Step: 45 / 67 Loss (mean): 16.686725981533527 Loss (std): 9.87870039586113 Loss ratio: 0.5920095054472314 Tokens per Sec: 2921.933213686885
Epoch Step: 50 / 67 Loss (mean): 14.313059244304895 Loss (std): 9.934228988103028 Loss ratio: 0.6940674819085805 Tokens per Sec: 2341.250854432092
Epoch Step: 55 / 67 Loss (mean): 19.442224465310574 Loss (std): 7.978143541194536 Loss ratio: 0.4103513749380576 Tokens per Sec: 2714.4961415107764
Epoch Step: 60 / 67 Loss (mean): 17.899504013359547 Loss (std): 7.734685213591682 Loss ratio: 0.4321172926254711 Tokens per Sec: 3777.866721283317
Epoch Step: 65 / 67 Loss (mean): 18.515593133866787 Loss (std): 9.028125712489565 Loss ratio: 0.4875958143612619 Tokens per Sec: 2854.914834334347
Mean loss per sample: 19.427719544453403 Std loss per sample: 10.850441032753515 ratio: 0.5585030712393265
Epoch ended with duration 0:00:11.586154
Train perplexity: 13.853874057578864
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1 ( ) test for sslcontext.tls[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java instead of git[0m
Epoch Step: 5 / 8 Loss (mean): 60.20731100440025 Loss (std): 26.38980501668213 Loss ratio: 0.4383156227447764 Tokens per Sec: 4089.156944267876
Mean loss per sample: 62.10609254485271 Std loss per sample: 30.117934466201174 ratio: 0.484943316059534
Epoch ended with duration 0:00:01.072494
b'BLEU = 0.76, 9.7/1.1/0.4/0.3 (BP=0.726, ratio=0.758, hyp_len=2359, ref_len=3113)\n'
Validation perplexity: 4520.997638610191
Validation accuracy: 0.0
Validation BLEU: 0.76
Epoch 95 / 1000
Epoch Step: 5 / 67 Loss (mean): 18.213768791407347 Loss (std): 11.896266142215225 Loss ratio: 0.65314687357992 Tokens per Sec: 2871.7786948195526
Epoch Step: 10 / 67 Loss (mean): 18.05307597666979 Loss (std): 8.226845424369314 Loss ratio: 0.45570325162321185 Tokens per Sec: 3001.87187021435
Epoch Step: 15 / 67 Loss (mean): 18.10656599700451 Loss (std): 7.224915688417287 Loss ratio: 0.3990218625449217 Tokens per Sec: 2273.1679977949298
Epoch Step: 20 / 67 Loss (mean): 19.775834813714027 Loss (std): 9.763179223917577 Loss ratio: 0.49369239356444594 Tokens per Sec: 3182.95972822331
Epoch Step: 25 / 67 Loss (mean): 20.013505075126886 Loss (std): 10.84256036549929 Loss ratio: 0.5417621913202302 Tokens per Sec: 2896.215628229228
Epoch Step: 30 / 67 Loss (mean): 16.657901406288147 Loss (std): 9.76147562114634 Loss ratio: 0.5859967220997903 Tokens per Sec: 3316.609534071649
Epoch Step: 35 / 67 Loss (mean): 18.8386686258018 Loss (std): 8.546370822400714 Loss ratio: 0.4536610836020249 Tokens per Sec: 2935.2856773653994
Epoch Step: 40 / 67 Loss (mean): 18.06092046946287 Loss (std): 7.237874234146694 Loss ratio: 0.40074780498504387 Tokens per Sec: 2762.162546999949
Epoch Step: 45 / 67 Loss (mean): 17.34190846607089 Loss (std): 8.201340177404065 Loss ratio: 0.4729202782640578 Tokens per Sec: 2365.1565389487555
Epoch Step: 50 / 67 Loss (mean): 18.537884168326855 Loss (std): 9.326795790743468 Loss ratio: 0.5031208365558183 Tokens per Sec: 2219.5311074347364
Epoch Step: 55 / 67 Loss (mean): 22.681555189192295 Loss (std): 8.550938979563432 Loss ratio: 0.3769996769726766 Tokens per Sec: 2370.6351639854797
Epoch Step: 60 / 67 Loss (mean): 22.528892278671265 Loss (std): 8.826600169798683 Loss ratio: 0.3917902425302585 Tokens per Sec: 2978.818095732657
Epoch Step: 65 / 67 Loss (mean): 21.073724523186684 Loss (std): 7.945780312634632 Loss ratio: 0.37704679606550645 Tokens per Sec: 2902.2699734456546
Mean loss per sample: 20.073538046625373 Std loss per sample: 11.960526572361417 ratio: 0.595835499680244
Epoch ended with duration 0:00:11.619600
Train perplexity: 15.118875070265087
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1 ( )[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix infinite loop[0m
Epoch Step: 5 / 8 Loss (mean): 60.25191231071949 Loss (std): 26.8046635794055 Loss ratio: 0.4448765616130768 Tokens per Sec: 4324.890299859014
Mean loss per sample: 61.04399979505383 Std loss per sample: 31.346881160338917 ratio: 0.5135128966906071
Epoch ended with duration 0:00:01.044362
b'BLEU = 0.41, 9.2/0.8/0.2/0.1 (BP=0.654, ratio=0.702, hyp_len=2186, ref_len=3113)\n'
Validation perplexity: 3914.9403557372207
Validation accuracy: 0.0
Validation BLEU: 0.41
Model saved checkpoint_commit_msg_generator!
Epoch 96 / 1000
Epoch Step: 5 / 67 Loss (mean): 12.89328038976306 Loss (std): 6.781687045794521 Loss ratio: 0.5259861602931563 Tokens per Sec: 2104.5433327628543
Epoch Step: 10 / 67 Loss (mean): 34.52353321015835 Loss (std): 18.80496152122368 Loss ratio: 0.5446997967082474 Tokens per Sec: 3414.4687168462297
Epoch Step: 15 / 67 Loss (mean): 19.631576262414455 Loss (std): 10.811261992217885 Loss ratio: 0.5507077907399894 Tokens per Sec: 2613.840036688198
Epoch Step: 20 / 67 Loss (mean): 16.328787177801132 Loss (std): 8.634198892429088 Loss ratio: 0.5287715981850274 Tokens per Sec: 2403.6783688329606
Epoch Step: 25 / 67 Loss (mean): 18.22562050819397 Loss (std): 8.650256500453168 Loss ratio: 0.47462068556536335 Tokens per Sec: 2935.1922126339555
Epoch Step: 30 / 67 Loss (mean): 19.30483765155077 Loss (std): 8.669269666733168 Loss ratio: 0.44907239435068547 Tokens per Sec: 2755.360180603184
Epoch Step: 35 / 67 Loss (mean): 27.468856394290924 Loss (std): 22.103127139152043 Loss ratio: 0.8046613525470946 Tokens per Sec: 2512.3187498156162
Epoch Step: 40 / 67 Loss (mean): 18.988156221807003 Loss (std): 7.662624559713171 Loss ratio: 0.4035475835675403 Tokens per Sec: 3245.9823481897256
Epoch Step: 45 / 67 Loss (mean): 17.853411629796028 Loss (std): 7.739986213126049 Loss ratio: 0.4335298134396108 Tokens per Sec: 3272.144492498202
Epoch Step: 50 / 67 Loss (mean): 16.95156091824174 Loss (std): 8.231712426771278 Loss ratio: 0.48560203195878276 Tokens per Sec: 2780.9490680874505
Epoch Step: 55 / 67 Loss (mean): 16.591160036623478 Loss (std): 7.860675801743014 Loss ratio: 0.4737869916504504 Tokens per Sec: 2655.0397843920514
Epoch Step: 60 / 67 Loss (mean): 18.451507229357958 Loss (std): 8.521533271413174 Loss ratio: 0.46183399358588284 Tokens per Sec: 2784.009810030269
Epoch Step: 65 / 67 Loss (mean): 19.3028035312891 Loss (std): 9.513988789610563 Loss ratio: 0.49288119076530795 Tokens per Sec: 2469.272151727929
Mean loss per sample: 19.307493212772993 Std loss per sample: 10.933295363692869 ratio: 0.5662721329592326
Epoch ended with duration 0:00:11.622937
Train perplexity: 13.630341773834195
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( void.class ) ( ) ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone of optiondefinitions[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java instead of adb and pom.xml dex[0m
Epoch Step: 5 / 8 Loss (mean): 60.629251569509506 Loss (std): 26.447735852391997 Loss ratio: 0.4362207213142077 Tokens per Sec: 4225.259116369106
Mean loss per sample: 61.76504232746656 Std loss per sample: 30.421343472132747 ratio: 0.4925333542369249
Epoch ended with duration 0:00:01.055297
b'BLEU = 0.70, 8.6/1.0/0.3/0.3 (BP=0.778, ratio=0.799, hyp_len=2488, ref_len=3113)\n'
Validation perplexity: 4316.799506690001
Validation accuracy: 0.0
Validation BLEU: 0.7
Epoch 97 / 1000
Epoch Step: 5 / 67 Loss (mean): 15.5645743124187 Loss (std): 9.652987046395479 Loss ratio: 0.6201895954644601 Tokens per Sec: 2284.78160379752
Epoch Step: 10 / 67 Loss (mean): 17.037837952375412 Loss (std): 7.282280507732964 Loss ratio: 0.42741811068332586 Tokens per Sec: 2804.0866899872544
Epoch Step: 15 / 67 Loss (mean): 16.739126943051815 Loss (std): 8.849178424504878 Loss ratio: 0.528652327843063 Tokens per Sec: 2741.5291206585357
Epoch Step: 20 / 67 Loss (mean): 17.31982032954693 Loss (std): 8.220953728388002 Loss ratio: 0.4746558319870894 Tokens per Sec: 2769.479377708693
Epoch Step: 25 / 67 Loss (mean): 17.959210582077503 Loss (std): 8.384762261004967 Loss ratio: 0.4668781081821374 Tokens per Sec: 2570.15199252763
Epoch Step: 30 / 67 Loss (mean): 47.38127989321947 Loss (std): 18.723791036911106 Loss ratio: 0.39517275766099735 Tokens per Sec: 2864.4099811580295
Epoch Step: 35 / 67 Loss (mean): 45.03322324156761 Loss (std): 23.173584540237545 Loss ratio: 0.514588627510174 Tokens per Sec: 2754.447463894377
Epoch Step: 40 / 67 Loss (mean): 42.81964672356844 Loss (std): 20.22031971123538 Loss ratio: 0.47222061036075474 Tokens per Sec: 2391.678148082533
Epoch Step: 45 / 67 Loss (mean): 17.26488759368658 Loss (std): 9.191313353207265 Loss ratio: 0.532370298001149 Tokens per Sec: 2703.2677890608925
Epoch Step: 50 / 67 Loss (mean): 20.132749065756798 Loss (std): 9.92674870243561 Loss ratio: 0.49306474093593733 Tokens per Sec: 2850.059890942037
Epoch Step: 55 / 67 Loss (mean): 16.85722603648901 Loss (std): 8.690813597849461 Loss ratio: 0.5155541949213589 Tokens per Sec: 2782.510406867288
Epoch Step: 60 / 67 Loss (mean): 19.12253427132964 Loss (std): 10.308227908480692 Loss ratio: 0.5390618085561906 Tokens per Sec: 2364.139950597738
Epoch Step: 65 / 67 Loss (mean): 20.319656919687986 Loss (std): 10.333080609023835 Loss ratio: 0.5085263324014085 Tokens per Sec: 2960.662389624269
Mean loss per sample: 22.530240404287305 Std loss per sample: 15.299701625045948 ratio: 0.6790740511643432
Epoch ended with duration 0:00:11.765708
Train perplexity: 21.080218641633515
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( void.class syntax ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone of receive.timeout[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' for commits ''[0m
Epoch Step: 5 / 8 Loss (mean): 60.64940822124481 Loss (std): 26.875952278750773 Loss ratio: 0.4431362657440807 Tokens per Sec: 4172.155713422373
Mean loss per sample: 62.30006001816421 Std loss per sample: 31.179979680663983 ratio: 0.5004807326280769
Epoch ended with duration 0:00:01.066747
b'BLEU = 0.39, 9.2/0.6/0.1/0.1 (BP=0.746, ratio=0.774, hyp_len=2408, ref_len=3113)\n'
Validation perplexity: 4641.412569156511
Validation accuracy: 0.0
Validation BLEU: 0.39
Epoch 98 / 1000
Epoch Step: 5 / 67 Loss (mean): 17.711302153766155 Loss (std): 8.433969495477827 Loss ratio: 0.4761913845891007 Tokens per Sec: 3012.811270344859
Epoch Step: 10 / 67 Loss (mean): 38.04253829270601 Loss (std): 19.441933106732947 Loss ratio: 0.5110577258842004 Tokens per Sec: 2421.069326021293
Epoch Step: 15 / 67 Loss (mean): 18.03250316902995 Loss (std): 9.54561998393832 Loss ratio: 0.529356345841797 Tokens per Sec: 2842.1242641652625
Epoch Step: 20 / 67 Loss (mean): 18.659714072942734 Loss (std): 9.026206740304891 Loss ratio: 0.4837269587851413 Tokens per Sec: 2542.0197561953073
Epoch Step: 25 / 67 Loss (mean): 18.04961133748293 Loss (std): 8.85711458597622 Loss ratio: 0.49070943525432 Tokens per Sec: 3086.825950954634
Epoch Step: 30 / 67 Loss (mean): 17.68864919245243 Loss (std): 7.672884088289973 Loss ratio: 0.4337744507683445 Tokens per Sec: 2633.4567511724895
Epoch Step: 35 / 67 Loss (mean): 15.877856247127056 Loss (std): 9.672370433177429 Loss ratio: 0.6091735737264626 Tokens per Sec: 2828.082078407897
Epoch Step: 40 / 67 Loss (mean): 16.398684933781624 Loss (std): 7.440509770085872 Loss ratio: 0.4537260030381016 Tokens per Sec: 2421.295255894665
Epoch Step: 45 / 67 Loss (mean): 16.467376679182053 Loss (std): 9.876688083573988 Loss ratio: 0.5997730103581119 Tokens per Sec: 2889.1059460204456
Epoch Step: 50 / 67 Loss (mean): 17.43314589560032 Loss (std): 7.676311612847179 Loss ratio: 0.4403285361584959 Tokens per Sec: 3284.79044393132
Epoch Step: 55 / 67 Loss (mean): 17.366079322993755 Loss (std): 7.809873306316804 Loss ratio: 0.449720006517306 Tokens per Sec: 2806.6001035080217
Epoch Step: 60 / 67 Loss (mean): 20.19028677791357 Loss (std): 9.891530243135106 Loss ratio: 0.4899152920381292 Tokens per Sec: 2512.4874300534157
Epoch Step: 65 / 67 Loss (mean): 17.804256349802017 Loss (std): 9.071875927880308 Loss ratio: 0.5095341108128443 Tokens per Sec: 2557.744997229477
Mean loss per sample: 18.396534626074818 Std loss per sample: 9.99520242346969 ratio: 0.5433198494515769
Epoch ended with duration 0:00:11.585423
Train perplexity: 12.04977374915031
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( ) creation[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1 ( )[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java instead of git[0m
Epoch Step: 5 / 8 Loss (mean): 60.49098089337349 Loss (std): 26.803244743629442 Loss ratio: 0.44309489361521687 Tokens per Sec: 4221.31510685354
Mean loss per sample: 62.25316239575871 Std loss per sample: 30.941984360704705 ratio: 0.49703473960083955
Epoch ended with duration 0:00:01.058993
b'BLEU = 0.77, 9.9/1.1/0.4/0.3 (BP=0.713, ratio=0.747, hyp_len=2326, ref_len=3113)\n'
Validation perplexity: 4612.0077604216185
Validation accuracy: 0.0
Validation BLEU: 0.77
Model saved best_on_validation_commit_msg_generator!
Epoch 99 / 1000
Epoch Step: 5 / 67 Loss (mean): 18.75910349190235 Loss (std): 9.530726146870492 Loss ratio: 0.5080587220484483 Tokens per Sec: 2305.7976725896647
Epoch Step: 10 / 67 Loss (mean): 15.819729372859001 Loss (std): 8.597937766628315 Loss ratio: 0.5434946176373473 Tokens per Sec: 3212.5088429299813
Epoch Step: 15 / 67 Loss (mean): 18.843815445899963 Loss (std): 10.48267991803082 Loss ratio: 0.5562928563021796 Tokens per Sec: 2864.9075043389703
Epoch Step: 20 / 67 Loss (mean): 19.047289304435253 Loss (std): 8.96475834565988 Loss ratio: 0.47065796095050605 Tokens per Sec: 2794.4660450880538
Epoch Step: 25 / 67 Loss (mean): 16.944286581128836 Loss (std): 7.191633449639336 Loss ratio: 0.42442822335457847 Tokens per Sec: 2229.4294992619507
Epoch Step: 30 / 67 Loss (mean): 41.572841852903366 Loss (std): 19.739319930736 Loss ratio: 0.47481285981312926 Tokens per Sec: 2864.5229066493143
Epoch Step: 35 / 67 Loss (mean): 18.705644853413105 Loss (std): 8.329926653475388 Loss ratio: 0.44531619833226316 Tokens per Sec: 2933.6991781481424
Epoch Step: 40 / 67 Loss (mean): 18.346975527703762 Loss (std): 8.077444783657025 Loss ratio: 0.44026029093788016 Tokens per Sec: 3459.3255280390204
Epoch Step: 45 / 67 Loss (mean): 18.332355234771967 Loss (std): 8.911136545419772 Loss ratio: 0.4860879265811705 Tokens per Sec: 2636.987354088189
Epoch Step: 50 / 67 Loss (mean): 19.729412145912647 Loss (std): 9.77372746433744 Loss ratio: 0.49538868122648394 Tokens per Sec: 2185.763404104976
Epoch Step: 55 / 67 Loss (mean): 13.971561420708895 Loss (std): 10.034066760174362 Loss ratio: 0.7181779085408229 Tokens per Sec: 2152.771786234093
Epoch Step: 60 / 67 Loss (mean): 18.476176649332047 Loss (std): 8.73076472184307 Loss ratio: 0.4725417432160514 Tokens per Sec: 2584.264705311407
Epoch Step: 65 / 67 Loss (mean): 18.755184143781662 Loss (std): 11.962455263723617 Loss ratio: 0.6378212643510517 Tokens per Sec: 2918.6972610804455
Mean loss per sample: 21.799800067008295 Std loss per sample: 14.809361118282505 ratio: 0.6793347220048552
Epoch ended with duration 0:00:11.772426
Train perplexity: 19.096531591185027
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( ) syntax[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone of receive.timeout[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java instead of git[0m
Epoch Step: 5 / 8 Loss (mean): 60.94959056377411 Loss (std): 27.452607506426713 Loss ratio: 0.45041496181507407 Tokens per Sec: 4356.413735438215
Mean loss per sample: 61.94776210433147 Std loss per sample: 32.01357381264465 ratio: 0.5167833788527806
Epoch ended with duration 0:00:01.038495
b'BLEU = 0.74, 8.9/1.1/0.4/0.4 (BP=0.671, ratio=0.715, hyp_len=2225, ref_len=3113)\n'
Validation perplexity: 4425.025651268502
Validation accuracy: 0.0
Validation BLEU: 0.74
Epoch 100 / 1000
Epoch Step: 5 / 67 Loss (mean): 17.89811284840107 Loss (std): 9.023244776068669 Loss ratio: 0.5041450376638318 Tokens per Sec: 3135.6797202135267
Epoch Step: 10 / 67 Loss (mean): 39.55341440439224 Loss (std): 17.101820525602328 Loss ratio: 0.4323727997475546 Tokens per Sec: 2683.7758531155764
Epoch Step: 15 / 67 Loss (mean): 16.280320648103952 Loss (std): 7.330996623206256 Loss ratio: 0.4502980488937755 Tokens per Sec: 2567.42273458851
Epoch Step: 20 / 67 Loss (mean): 37.49908661842346 Loss (std): 20.939544032086477 Loss ratio: 0.5584014417513516 Tokens per Sec: 2616.32272283556
Epoch Step: 25 / 67 Loss (mean): 17.401960141956806 Loss (std): 7.536181922954101 Loss ratio: 0.4330651180371383 Tokens per Sec: 3125.7388606849286
Epoch Step: 30 / 67 Loss (mean): 17.981902070343494 Loss (std): 8.419033335790926 Loss ratio: 0.468194816257839 Tokens per Sec: 2340.6860566026276
Epoch Step: 35 / 67 Loss (mean): 19.004536647349596 Loss (std): 10.183807365485155 Loss ratio: 0.5358619131030172 Tokens per Sec: 3345.70779151947
Epoch Step: 40 / 67 Loss (mean): 17.719045348465443 Loss (std): 7.620271706962733 Loss ratio: 0.43006107592713433 Tokens per Sec: 2981.768435821958
Epoch Step: 45 / 67 Loss (mean): 15.813836701214314 Loss (std): 7.774197887885637 Loss ratio: 0.4916073205238468 Tokens per Sec: 2162.5399370891673
Epoch Step: 50 / 67 Loss (mean): 20.76433092355728 Loss (std): 8.24758776942114 Loss ratio: 0.397199784562487 Tokens per Sec: 2480.308148090559
Epoch Step: 55 / 67 Loss (mean): 18.04002519696951 Loss (std): 9.258964610456081 Loss ratio: 0.5132456584379642 Tokens per Sec: 2945.441721478455
Epoch Step: 60 / 67 Loss (mean): 12.302622184866951 Loss (std): 6.714317996962874 Loss ratio: 0.5457631630126734 Tokens per Sec: 2335.6880252455194
Epoch Step: 65 / 67 Loss (mean): 17.55501016974449 Loss (std): 8.89242968147141 Loss ratio: 0.5065465411576482 Tokens per Sec: 2761.265489885815
Mean loss per sample: 19.105307749583023 Std loss per sample: 11.398629673816579 ratio: 0.5966210973003225
Epoch ended with duration 0:00:11.628111
Train perplexity: 13.262528927041403
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( void.class ) creation[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1 ( )[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' for `` -preview '' in ''[0m
Epoch Step: 5 / 8 Loss (mean): 60.60772782564163 Loss (std): 26.471360244745878 Loss ratio: 0.4367654290043604 Tokens per Sec: 4342.508253375256
Mean loss per sample: 61.66391536251443 Std loss per sample: 31.446919261831766 ratio: 0.5099727948989173
Epoch ended with duration 0:00:01.038085
b'BLEU = 0.70, 9.1/1.1/0.3/0.3 (BP=0.695, ratio=0.733, hyp_len=2283, ref_len=3113)\n'
Validation perplexity: 4258.043394253828
Validation accuracy: 0.0
Validation BLEU: 0.7
Model saved checkpoint_commit_msg_generator!
Epoch 101 / 1000
Epoch Step: 5 / 67 Loss (mean): 20.554970361292362 Loss (std): 8.273473535240226 Loss ratio: 0.4025047659917932 Tokens per Sec: 2605.454023880274
Epoch Step: 10 / 67 Loss (mean): 16.921186171472073 Loss (std): 7.064827113738825 Loss ratio: 0.41751370395354587 Tokens per Sec: 2604.747123841354
Epoch Step: 15 / 67 Loss (mean): 17.674435660243034 Loss (std): 8.089077211021333 Loss ratio: 0.45767103213467486 Tokens per Sec: 2684.1513805137756
Epoch Step: 20 / 67 Loss (mean): 16.644160117954016 Loss (std): 7.084588365515024 Loss ratio: 0.4256500968092043 Tokens per Sec: 2725.9750566241432
Epoch Step: 25 / 67 Loss (mean): 16.996900126338005 Loss (std): 9.597499067526574 Loss ratio: 0.564661732209305 Tokens per Sec: 2684.8108561606714
Epoch Step: 30 / 67 Loss (mean): 18.15698791667819 Loss (std): 7.562719604346591 Loss ratio: 0.416518402669631 Tokens per Sec: 2732.6375580413533
Epoch Step: 35 / 67 Loss (mean): 18.538129057735205 Loss (std): 9.2416846551036 Loss ratio: 0.4985230508602712 Tokens per Sec: 2894.4168170769008
Epoch Step: 40 / 67 Loss (mean): 13.285558681935072 Loss (std): 9.19188827185109 Loss ratio: 0.6918706613632803 Tokens per Sec: 2933.5162463229053
Epoch Step: 45 / 67 Loss (mean): 15.261714827269316 Loss (std): 9.120055354829807 Loss ratio: 0.5975773665049934 Tokens per Sec: 2487.030699516542
Epoch Step: 50 / 67 Loss (mean): 15.844140451401472 Loss (std): 8.444938469471682 Loss ratio: 0.5330007326919837 Tokens per Sec: 2697.787324756939
Epoch Step: 55 / 67 Loss (mean): 16.34553373232484 Loss (std): 7.510753406254926 Loss ratio: 0.45949881657285385 Tokens per Sec: 2892.3025933749345
Epoch Step: 60 / 67 Loss (mean): 19.03627574071288 Loss (std): 9.568771856029997 Loss ratio: 0.5026598682622182 Tokens per Sec: 2440.071038330506
Epoch Step: 65 / 67 Loss (mean): 18.58638183772564 Loss (std): 9.601405796982357 Loss ratio: 0.5165828336472642 Tokens per Sec: 3048.6291612152927
Mean loss per sample: 17.471743956005636 Std loss per sample: 9.526937854339527 ratio: 0.5452768698035317
Epoch ended with duration 0:00:11.599718
Train perplexity: 10.632570407848114
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo ( ) in method_1 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone of receive.timeout[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java instead of git[0m
Epoch Step: 5 / 8 Loss (mean): 61.53585997223854 Loss (std): 26.69940392543961 Loss ratio: 0.43388365641570387 Tokens per Sec: 4291.649773349544
Mean loss per sample: 63.21122753131585 Std loss per sample: 31.677795108609622 ratio: 0.5011419069961256
Epoch ended with duration 0:00:01.059820
b'BLEU = 0.75, 8.4/1.0/0.3/0.2 (BP=0.846, ratio=0.857, hyp_len=2667, ref_len=3113)\n'
Validation perplexity: 5251.41871485669
Validation accuracy: 0.0
Validation BLEU: 0.75
Epoch 102 / 1000
Epoch Step: 5 / 67 Loss (mean): 15.30068465322256 Loss (std): 7.403222645530194 Loss ratio: 0.4838491095868028 Tokens per Sec: 2316.1089326853134
Epoch Step: 10 / 67 Loss (mean): 16.80068588256836 Loss (std): 8.379330816197703 Loss ratio: 0.4987493293289723 Tokens per Sec: 2926.5615922365077
Epoch Step: 15 / 67 Loss (mean): 17.171866945922375 Loss (std): 9.509727693700556 Loss ratio: 0.5537969589240693 Tokens per Sec: 2521.8009008965328
Epoch Step: 20 / 67 Loss (mean): 15.610598877072334 Loss (std): 9.35611219351193 Loss ratio: 0.5993435784999561 Tokens per Sec: 3300.7879984294786
Epoch Step: 25 / 67 Loss (mean): 16.6398555226624 Loss (std): 8.512712052851816 Loss ratio: 0.5115856950355161 Tokens per Sec: 2301.9724005849757
Epoch Step: 30 / 67 Loss (mean): 20.712097242474556 Loss (std): 7.729794047435375 Loss ratio: 0.37320190017183724 Tokens per Sec: 3755.339943341756
Epoch Step: 35 / 67 Loss (mean): 15.39526329562068 Loss (std): 9.383434975062544 Loss ratio: 0.6095014287759369 Tokens per Sec: 2369.0984873466696
Epoch Step: 40 / 67 Loss (mean): 17.665718756616116 Loss (std): 8.598033459414111 Loss ratio: 0.48670725362895295 Tokens per Sec: 2589.245140200305
Epoch Step: 45 / 67 Loss (mean): 19.07856412231922 Loss (std): 8.690135072671378 Loss ratio: 0.45549209138360414 Tokens per Sec: 2414.949540116529
Epoch Step: 50 / 67 Loss (mean): 18.696279678493738 Loss (std): 9.816691683895233 Loss ratio: 0.525061234251183 Tokens per Sec: 3247.7637903728687
Epoch Step: 55 / 67 Loss (mean): 21.560120329260826 Loss (std): 8.190654568439426 Loss ratio: 0.3798983699234408 Tokens per Sec: 2415.477831052449
Epoch Step: 60 / 67 Loss (mean): 17.738172199577093 Loss (std): 9.172355357560948 Loss ratio: 0.5170969846475857 Tokens per Sec: 2742.9019570119794
Epoch Step: 65 / 67 Loss (mean): 16.446058109402657 Loss (std): 7.166484022419945 Loss ratio: 0.43575694398906883 Tokens per Sec: 2927.42622495785
Mean loss per sample: 19.384992893151257 Std loss per sample: 12.39926587429914 ratio: 0.6396322115072746
Epoch ended with duration 0:00:11.691263
Train perplexity: 13.774017190255696
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( ) length ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone of receive.timeout[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix infinite loop in[0m
Epoch Step: 5 / 8 Loss (mean): 61.651080280542374 Loss (std): 27.02501265261738 Loss ratio: 0.43835424342348 Tokens per Sec: 4213.605315754557
Mean loss per sample: 63.1393905799897 Std loss per sample: 31.246255090290948 ratio: 0.49487736266167875
Epoch ended with duration 0:00:01.059022
b'BLEU = 0.74, 8.6/0.9/0.3/0.3 (BP=0.826, ratio=0.840, hyp_len=2614, ref_len=3113)\n'
Validation perplexity: 5200.543180252391
Validation accuracy: 0.0
Validation BLEU: 0.74
Epoch 103 / 1000
Epoch Step: 5 / 67 Loss (mean): 42.71596850454807 Loss (std): 17.350422127450546 Loss ratio: 0.4061811714652614 Tokens per Sec: 2048.446887290234
Epoch Step: 10 / 67 Loss (mean): 15.09359260648489 Loss (std): 7.759648140555789 Loss ratio: 0.5141021321339952 Tokens per Sec: 2352.376948315281
Epoch Step: 15 / 67 Loss (mean): 16.911178894340992 Loss (std): 8.250968024898343 Loss ratio: 0.48790022720765935 Tokens per Sec: 2935.0373855779762
Epoch Step: 20 / 67 Loss (mean): 18.566285341978073 Loss (std): 8.756113041840745 Loss ratio: 0.47161362009466234 Tokens per Sec: 3140.443201308811
Epoch Step: 25 / 67 Loss (mean): 17.42020695656538 Loss (std): 7.458604664047093 Loss ratio: 0.42815821204902915 Tokens per Sec: 2553.747128885915
Epoch Step: 30 / 67 Loss (mean): 18.97332712262869 Loss (std): 9.592677122618246 Loss ratio: 0.5055875050600621 Tokens per Sec: 2588.372410593861
Epoch Step: 35 / 67 Loss (mean): 17.71253563463688 Loss (std): 9.153961335304144 Loss ratio: 0.5168069396796902 Tokens per Sec: 3063.79504025986
Epoch Step: 40 / 67 Loss (mean): 18.347630485892296 Loss (std): 9.128089386974548 Loss ratio: 0.49750780592585186 Tokens per Sec: 3066.7779542171793
Epoch Step: 45 / 67 Loss (mean): 42.35091049224138 Loss (std): 20.295169110584943 Loss ratio: 0.4792144696464787 Tokens per Sec: 2741.6548604986983
Epoch Step: 50 / 67 Loss (mean): 18.60138749331236 Loss (std): 9.012435329203141 Loss ratio: 0.4845033916122293 Tokens per Sec: 2649.2637355399315
Epoch Step: 55 / 67 Loss (mean): 16.1776819601655 Loss (std): 6.986012886469497 Loss ratio: 0.43183027727156703 Tokens per Sec: 2962.5496407784854
Epoch Step: 60 / 67 Loss (mean): 15.364005260169506 Loss (std): 8.431451483899554 Loss ratio: 0.5487795233810362 Tokens per Sec: 2494.0662481343725
Epoch Step: 65 / 67 Loss (mean): 17.751663230359554 Loss (std): 7.91570257968897 Loss ratio: 0.44591329144591035 Tokens per Sec: 2695.2099495989273
Mean loss per sample: 20.23054175400924 Std loss per sample: 13.995192394874916 ratio: 0.691785349351872
Epoch ended with duration 0:00:11.709240
Train perplexity: 15.443474082999538
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( void.class ) ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1 test for whitespaces[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' for `` -preview '' in java[0m
Epoch Step: 5 / 8 Loss (mean): 61.77206474542618 Loss (std): 26.204177789260992 Loss ratio: 0.42420757501393447 Tokens per Sec: 4190.259564981724
Mean loss per sample: 63.16932208518513 Std loss per sample: 30.866391222935036 ratio: 0.48862945182965667
Epoch ended with duration 0:00:01.061658
b'BLEU = 0.71, 8.1/0.8/0.3/0.2 (BP=0.943, ratio=0.944, hyp_len=2939, ref_len=3113)\n'
Validation perplexity: 5221.680750641796
Validation accuracy: 0.0
Validation BLEU: 0.71
Epoch 104 / 1000
Epoch Step: 5 / 67 Loss (mean): 17.51428809016943 Loss (std): 8.769083964219636 Loss ratio: 0.5006817244910813 Tokens per Sec: 2627.7776564594315
Epoch Step: 10 / 67 Loss (mean): 16.4656156077981 Loss (std): 7.664055850334382 Loss ratio: 0.4654582028931061 Tokens per Sec: 2349.886845065448
Epoch Step: 15 / 67 Loss (mean): 18.252954553812742 Loss (std): 7.435528611300597 Loss ratio: 0.40736027635303773 Tokens per Sec: 2836.8241005016253
Epoch Step: 20 / 67 Loss (mean): 16.659755308181047 Loss (std): 8.802840433245334 Loss ratio: 0.5283895393663168 Tokens per Sec: 3292.2725848490054
Epoch Step: 25 / 67 Loss (mean): 14.945233173668385 Loss (std): 8.295597150103426 Loss ratio: 0.5550664251073193 Tokens per Sec: 2612.653629133155
Epoch Step: 30 / 67 Loss (mean): 35.99150210246444 Loss (std): 16.15602609504663 Loss ratio: 0.44888446303385554 Tokens per Sec: 2344.710243902439
Epoch Step: 35 / 67 Loss (mean): 16.280380629003048 Loss (std): 8.588574517430954 Loss ratio: 0.5275413832850226 Tokens per Sec: 2839.4158022790543
Epoch Step: 40 / 67 Loss (mean): 15.704732075333595 Loss (std): 8.490154560573744 Loss ratio: 0.5406112323245985 Tokens per Sec: 2882.486948618416
Epoch Step: 45 / 67 Loss (mean): 15.449821561574936 Loss (std): 7.802583932122412 Loss ratio: 0.5050274464999728 Tokens per Sec: 3226.6044566799414
Epoch Step: 50 / 67 Loss (mean): 15.595877341926098 Loss (std): 7.225082028764986 Loss ratio: 0.46326871328629504 Tokens per Sec: 2494.5414352054277
Epoch Step: 55 / 67 Loss (mean): 16.4163811057806 Loss (std): 8.552260381046336 Loss ratio: 0.5209589327842103 Tokens per Sec: 2292.4106973803573
Epoch Step: 60 / 67 Loss (mean): 39.24795739352703 Loss (std): 17.884347379495573 Loss ratio: 0.455675876330959 Tokens per Sec: 2913.2232038536313
Epoch Step: 65 / 67 Loss (mean): 20.782651863992214 Loss (std): 7.579860639491624 Loss ratio: 0.3647205702668005 Tokens per Sec: 2928.210118149413
Mean loss per sample: 18.64094754238951 Std loss per sample: 11.476993157599809 ratio: 0.6156872193058388
Epoch ended with duration 0:00:11.639474
Train perplexity: 12.45490948802154
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( void.class ) ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1 test[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' for commits dex ''[0m
Epoch Step: 5 / 8 Loss (mean): 67.74731221795082 Loss (std): 27.171343412809495 Loss ratio: 0.40106895053483727 Tokens per Sec: 4188.187665560106
Mean loss per sample: 63.41372754827874 Std loss per sample: 32.14096567676691 ratio: 0.5068455509463159
Epoch ended with duration 0:00:01.060145
b'BLEU = 0.69, 9.3/1.0/0.3/0.3 (BP=0.709, ratio=0.744, hyp_len=2317, ref_len=3113)\n'
Validation perplexity: 5397.525732687367
Validation accuracy: 0.0
Validation BLEU: 0.69
Epoch 105 / 1000
Epoch Step: 5 / 67 Loss (mean): 12.601276457309723 Loss (std): 8.834766913652658 Loss ratio: 0.7011009514458992 Tokens per Sec: 2772.051240117433
Epoch Step: 10 / 67 Loss (mean): 15.372269626706839 Loss (std): 7.189349279996454 Loss ratio: 0.46768300677644364 Tokens per Sec: 2272.0020140315805
Epoch Step: 15 / 67 Loss (mean): 17.770220283418894 Loss (std): 8.912921625107243 Loss ratio: 0.5015650612628447 Tokens per Sec: 2543.487296919603
Epoch Step: 20 / 67 Loss (mean): 41.930497489869595 Loss (std): 17.700784702372783 Loss ratio: 0.42214583088715535 Tokens per Sec: 3154.925316883996
Epoch Step: 25 / 67 Loss (mean): 16.274594105780125 Loss (std): 6.985667322895216 Loss ratio: 0.42923757591067474 Tokens per Sec: 2683.363215911356
Epoch Step: 30 / 67 Loss (mean): 18.06466118246317 Loss (std): 9.03252996247581 Loss ratio: 0.5000110365338276 Tokens per Sec: 2810.125276229676
Epoch Step: 35 / 67 Loss (mean): 16.763886280357838 Loss (std): 8.064047093160246 Loss ratio: 0.48103685257092504 Tokens per Sec: 2506.8910791167827
Epoch Step: 40 / 67 Loss (mean): 18.583172511309385 Loss (std): 8.998956169585279 Loss ratio: 0.48425295326234935 Tokens per Sec: 3087.463705186547
Epoch Step: 45 / 67 Loss (mean): 17.39792924374342 Loss (std): 8.930145602828254 Loss ratio: 0.5132878446462059 Tokens per Sec: 3395.043073940455
Epoch Step: 50 / 67 Loss (mean): 17.084544852375984 Loss (std): 8.909359397825767 Loss ratio: 0.5214864940687445 Tokens per Sec: 2688.8965846628435
Epoch Step: 55 / 67 Loss (mean): 37.74539216607809 Loss (std): 21.082001941847917 Loss ratio: 0.558531803010233 Tokens per Sec: 2176.6421834236403
Epoch Step: 60 / 67 Loss (mean): 19.755515806376934 Loss (std): 7.496764525599753 Loss ratio: 0.3794770331018061 Tokens per Sec: 2783.8159937854507
Epoch Step: 65 / 67 Loss (mean): 17.318302281200886 Loss (std): 8.528583023671606 Loss ratio: 0.4924606861106375 Tokens per Sec: 2594.6971632894697
Mean loss per sample: 18.913499134837657 Std loss per sample: 12.411396198595115 ratio: 0.6562189317858156
Epoch ended with duration 0:00:11.664862
Train perplexity: 12.922772100836628
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo ( ) in biginteger[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone of receive.timeout[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java instead of git[0m
Epoch Step: 5 / 8 Loss (mean): 62.063442170619965 Loss (std): 27.423508125830963 Loss ratio: 0.4418625066015578 Tokens per Sec: 4341.066635190213
Mean loss per sample: 62.745203593715296 Std loss per sample: 32.17497818084537 ratio: 0.5127878521071225
Epoch ended with duration 0:00:01.042686
b'BLEU = 0.71, 8.3/0.9/0.3/0.3 (BP=0.757, ratio=0.782, hyp_len=2434, ref_len=3113)\n'
Validation perplexity: 4930.023134683413
Validation accuracy: 0.0
Validation BLEU: 0.71
Model saved checkpoint_commit_msg_generator!
Epoch 106 / 1000
Epoch Step: 5 / 67 Loss (mean): 16.161103799939156 Loss (std): 8.91134088315223 Loss ratio: 0.5514066980490392 Tokens per Sec: 2560.641797358762
Epoch Step: 10 / 67 Loss (mean): 19.233441155403852 Loss (std): 9.031660908766444 Loss ratio: 0.46958112361650356 Tokens per Sec: 2518.228106357949
Epoch Step: 15 / 67 Loss (mean): 10.886193090961093 Loss (std): 6.122024490687932 Loss ratio: 0.5623659657269082 Tokens per Sec: 2686.0860897817097
Epoch Step: 20 / 67 Loss (mean): 40.24035732448101 Loss (std): 18.76575199916901 Loss ratio: 0.46634158459006764 Tokens per Sec: 2455.7294638488756
Epoch Step: 25 / 67 Loss (mean): 18.034291107207537 Loss (std): 8.997384175301914 Loss ratio: 0.49890423315314253 Tokens per Sec: 2684.0773473554477
Epoch Step: 30 / 67 Loss (mean): 16.784703098237514 Loss (std): 7.553854921358556 Loss ratio: 0.45004400001283024 Tokens per Sec: 2775.2996936477316
Epoch Step: 35 / 67 Loss (mean): 17.924590963870287 Loss (std): 8.685151892359082 Loss ratio: 0.4845383590546258 Tokens per Sec: 2697.6963691658616
Epoch Step: 40 / 67 Loss (mean): 36.47638576850295 Loss (std): 21.68954385707286 Loss ratio: 0.5946187759589273 Tokens per Sec: 2792.3299428485816
Epoch Step: 45 / 67 Loss (mean): 16.461273349821568 Loss (std): 7.232746168271516 Loss ratio: 0.4393795069535077 Tokens per Sec: 3083.3170419780718
Epoch Step: 50 / 67 Loss (mean): 17.49885705858469 Loss (std): 7.503483388617851 Loss ratio: 0.42879848458084 Tokens per Sec: 3257.034682684457
Epoch Step: 55 / 67 Loss (mean): 14.941306501626968 Loss (std): 7.099880294989991 Loss ratio: 0.47518470317283706 Tokens per Sec: 2345.9700522567346
Epoch Step: 60 / 67 Loss (mean): 17.26654065400362 Loss (std): 8.616920590958895 Loss ratio: 0.4990530971796528 Tokens per Sec: 2363.634842432476
Epoch Step: 65 / 67 Loss (mean): 17.74879301711917 Loss (std): 8.923016605622053 Loss ratio: 0.5027393466708171 Tokens per Sec: 3110.5322506539515
Mean loss per sample: 19.75362891422657 Std loss per sample: 13.63108188176953 ratio: 0.6900545687558411
Epoch ended with duration 0:00:11.696349
Train perplexity: 14.478435761057584
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( ) creation[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone of receive.timeout[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' for commits dex ''[0m
Epoch Step: 5 / 8 Loss (mean): 61.73848536610603 Loss (std): 27.282301009552715 Loss ratio: 0.4419010419152669 Tokens per Sec: 4325.6495837335
Mean loss per sample: 63.967790250895455 Std loss per sample: 31.689327760927227 ratio: 0.49539506737117006
Epoch ended with duration 0:00:01.073824
b'BLEU = 0.71, 8.5/1.1/0.3/0.3 (BP=0.759, ratio=0.784, hyp_len=2441, ref_len=3113)\n'
Validation perplexity: 5818.404430489424
Validation accuracy: 0.0
Validation BLEU: 0.71
Epoch 107 / 1000
Epoch Step: 5 / 67 Loss (mean): 14.042870175093412 Loss (std): 8.716226852909003 Loss ratio: 0.620686992347775 Tokens per Sec: 2847.7455030622946
Epoch Step: 10 / 67 Loss (mean): 16.21026837825775 Loss (std): 10.69819865662632 Loss ratio: 0.6599643144079852 Tokens per Sec: 2503.1567841243823
Epoch Step: 15 / 67 Loss (mean): 15.128372587263584 Loss (std): 8.378946804251552 Loss ratio: 0.5538564545472457 Tokens per Sec: 2761.5729179991636
Epoch Step: 20 / 67 Loss (mean): 16.65897611901164 Loss (std): 8.341877613592391 Loss ratio: 0.5007437164203886 Tokens per Sec: 2577.5553509149117
Epoch Step: 25 / 67 Loss (mean): 16.719988241791725 Loss (std): 7.102644697249326 Loss ratio: 0.42479962273515337 Tokens per Sec: 2776.9314876784288
Epoch Step: 30 / 67 Loss (mean): 14.80043850466609 Loss (std): 7.696565326585314 Loss ratio: 0.5200227901463083 Tokens per Sec: 2949.933494274014
Epoch Step: 35 / 67 Loss (mean): 17.749905548989773 Loss (std): 8.554742608629242 Loss ratio: 0.4819598946607426 Tokens per Sec: 3260.788096581401
Epoch Step: 40 / 67 Loss (mean): 15.611988063901663 Loss (std): 9.141841638494801 Loss ratio: 0.5855655026814133 Tokens per Sec: 2843.717847564924
Epoch Step: 45 / 67 Loss (mean): 15.111316230148077 Loss (std): 7.172098879228216 Loss ratio: 0.4746177480502594 Tokens per Sec: 2533.8618812804707
Epoch Step: 50 / 67 Loss (mean): 43.5983716994524 Loss (std): 17.44163698976698 Loss ratio: 0.40005248613415645 Tokens per Sec: 2883.16172878012
Epoch Step: 55 / 67 Loss (mean): 14.860131416469812 Loss (std): 8.12670157834662 Loss ratio: 0.5468795228378409 Tokens per Sec: 2147.9057436782778
Epoch Step: 60 / 67 Loss (mean): 16.450909949839115 Loss (std): 8.68485508936583 Loss ratio: 0.5279255138984433 Tokens per Sec: 2462.811784788732
Epoch Step: 65 / 67 Loss (mean): 15.211903527379036 Loss (std): 7.041646634690546 Loss ratio: 0.4629037136619154 Tokens per Sec: 2468.616507990693
Mean loss per sample: 19.593400909371965 Std loss per sample: 13.526163633463886 ratio: 0.6903428198110323
Epoch ended with duration 0:00:11.688210
Train perplexity: 14.16793836606711
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( ) creation[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1 ( )[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java instead of git[0m
Epoch Step: 5 / 8 Loss (mean): 67.86160343885422 Loss (std): 26.94887454192205 Loss ratio: 0.3971152047151961 Tokens per Sec: 4244.812823105624
Mean loss per sample: 64.02427268614534 Std loss per sample: 32.478773610594004 ratio: 0.5072884430848413
Epoch ended with duration 0:00:01.052728
b'BLEU = 0.69, 9.0/1.1/0.3/0.3 (BP=0.701, ratio=0.738, hyp_len=2297, ref_len=3113)\n'
Validation perplexity: 5863.111603325453
Validation accuracy: 0.0
Validation BLEU: 0.69
Epoch 108 / 1000
Epoch Step: 5 / 67 Loss (mean): 14.791142050176859 Loss (std): 7.0859649280693 Loss ratio: 0.47906814119093477 Tokens per Sec: 2674.520652441455
Epoch Step: 10 / 67 Loss (mean): 16.395197317004204 Loss (std): 7.082538039034781 Loss ratio: 0.4319885819055779 Tokens per Sec: 2600.6639891125556
Epoch Step: 15 / 67 Loss (mean): 41.53164913132787 Loss (std): 17.13751373587529 Loss ratio: 0.4126374486523397 Tokens per Sec: 3091.26016343336
Epoch Step: 20 / 67 Loss (mean): 15.83013727888465 Loss (std): 8.889050240075758 Loss ratio: 0.561527047016364 Tokens per Sec: 2481.4780103151447
Epoch Step: 25 / 67 Loss (mean): 16.451474830508232 Loss (std): 7.8962507545768466 Loss ratio: 0.47997221136270063 Tokens per Sec: 2757.1180330200377
Epoch Step: 30 / 67 Loss (mean): 15.299812890589237 Loss (std): 7.027568522769372 Loss ratio: 0.4593238213450283 Tokens per Sec: 2957.0893511084378
Epoch Step: 35 / 67 Loss (mean): 14.251403141766787 Loss (std): 7.877016047479849 Loss ratio: 0.5527186319215521 Tokens per Sec: 3048.4942384337305
Epoch Step: 40 / 67 Loss (mean): 15.633318454027176 Loss (std): 7.170897457976347 Loss ratio: 0.4586932377194113 Tokens per Sec: 2887.199626442284
Epoch Step: 45 / 67 Loss (mean): 15.296398781239986 Loss (std): 7.024292306322149 Loss ratio: 0.45921215880805716 Tokens per Sec: 2304.333412563398
Epoch Step: 50 / 67 Loss (mean): 15.802618436515331 Loss (std): 8.623441767397738 Loss ratio: 0.5456970186327749 Tokens per Sec: 2597.4657317873653
Epoch Step: 55 / 67 Loss (mean): 15.211645506322384 Loss (std): 9.007588606663033 Loss ratio: 0.5921508362076429 Tokens per Sec: 3561.8993241723774
Epoch Step: 60 / 67 Loss (mean): 17.927606843411922 Loss (std): 8.953939216131442 Loss ratio: 0.49944977566383075 Tokens per Sec: 2613.3229428759737
Epoch Step: 65 / 67 Loss (mean): 14.677073653787374 Loss (std): 7.68438745782565 Loss ratio: 0.5235640045890699 Tokens per Sec: 2899.049605269819
Mean loss per sample: 17.078500713533042 Std loss per sample: 10.296528395142868 ratio: 0.6028941631266189
Epoch ended with duration 0:00:11.386898
Train perplexity: 10.081643264336844
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( void.class ) ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1 test[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java instead of adb in acceptance[0m
Epoch Step: 5 / 8 Loss (mean): 62.03553432226181 Loss (std): 27.12171111304496 Loss ratio: 0.43719638122488413 Tokens per Sec: 4297.966999444892
Mean loss per sample: 64.37786601605963 Std loss per sample: 31.65478560291371 ratio: 0.4917029339713923
Epoch ended with duration 0:00:01.051590
b'BLEU = 0.77, 9.0/1.1/0.3/0.2 (BP=0.841, ratio=0.853, hyp_len=2654, ref_len=3113)\n'
Validation perplexity: 6150.901661204317
Validation accuracy: 0.0
Validation BLEU: 0.77
Epoch 109 / 1000
Epoch Step: 5 / 67 Loss (mean): 13.739574644714594 Loss (std): 7.424118454342398 Loss ratio: 0.5403455817461091 Tokens per Sec: 2497.163589631118
Epoch Step: 10 / 67 Loss (mean): 15.497933119535446 Loss (std): 7.121031380237712 Loss ratio: 0.45948265006135003 Tokens per Sec: 3065.9260759077256
Epoch Step: 15 / 67 Loss (mean): 16.676730029284954 Loss (std): 7.029359195308453 Loss ratio: 0.4215070450240928 Tokens per Sec: 2906.959389427626
Epoch Step: 20 / 67 Loss (mean): 17.082547388970852 Loss (std): 8.48418159230368 Loss ratio: 0.496657869527199 Tokens per Sec: 3143.6951811371864
Epoch Step: 25 / 67 Loss (mean): 16.56496699899435 Loss (std): 8.35757185182627 Loss ratio: 0.504532961178471 Tokens per Sec: 2384.211750686898
Epoch Step: 30 / 67 Loss (mean): 13.760390367358923 Loss (std): 8.410605834926285 Loss ratio: 0.6112185490665378 Tokens per Sec: 2673.134324925558
Epoch Step: 35 / 67 Loss (mean): 16.091855764389038 Loss (std): 10.485960235187914 Loss ratio: 0.6516315078086357 Tokens per Sec: 3042.4850721818493
Epoch Step: 40 / 67 Loss (mean): 14.011878170073032 Loss (std): 8.062004219863494 Loss ratio: 0.5753692775521381 Tokens per Sec: 2513.98167734526
Epoch Step: 45 / 67 Loss (mean): 14.054025631397963 Loss (std): 7.547056897310353 Loss ratio: 0.5370032114107964 Tokens per Sec: 2762.9194166928555
Epoch Step: 50 / 67 Loss (mean): 18.979282651096582 Loss (std): 8.80004245256142 Loss ratio: 0.4636657040382384 Tokens per Sec: 3065.375427452608
Epoch Step: 55 / 67 Loss (mean): 15.441681325435638 Loss (std): 7.954173267672948 Loss ratio: 0.5151105698944053 Tokens per Sec: 3024.8314760364947
Epoch Step: 60 / 67 Loss (mean): 14.39094354212284 Loss (std): 8.714029354084941 Loss ratio: 0.6055217525229423 Tokens per Sec: 2680.5159198129772
Epoch Step: 65 / 67 Loss (mean): 17.415861666202545 Loss (std): 7.639480076904628 Loss ratio: 0.438650709527046 Tokens per Sec: 2317.7017552749926
Mean loss per sample: 18.044595086429247 Std loss per sample: 12.430061769064576 ratio: 0.6888523521601668
Epoch ended with duration 0:00:11.456353
Train perplexity: 11.48944243416275
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo ( ) in randomaccessfile[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1 test for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix infinite loop[0m
Epoch Step: 5 / 8 Loss (mean): 62.70379504561424 Loss (std): 27.110105919249502 Loss ratio: 0.4323519158533881 Tokens per Sec: 4280.39650325413
Mean loss per sample: 63.99980931692436 Std loss per sample: 31.68957472024052 ratio: 0.49515108026830323
Epoch ended with duration 0:00:01.037621
b'BLEU = 0.71, 8.3/0.8/0.3/0.2 (BP=0.841, ratio=0.853, hyp_len=2654, ref_len=3113)\n'
Validation perplexity: 5843.706255180087
Validation accuracy: 0.0
Validation BLEU: 0.71
Epoch 110 / 1000
Epoch Step: 5 / 67 Loss (mean): 15.571498069912195 Loss (std): 7.4160375365415945 Loss ratio: 0.47625716570399396 Tokens per Sec: 2653.117140284261
Epoch Step: 10 / 67 Loss (mean): 14.801001142710447 Loss (std): 8.275047264667434 Loss ratio: 0.5590869958646634 Tokens per Sec: 2851.523171477474
Epoch Step: 15 / 67 Loss (mean): 37.566154323518276 Loss (std): 20.024940407359946 Loss ratio: 0.5330580350308399 Tokens per Sec: 2244.784423362661
Epoch Step: 20 / 67 Loss (mean): 15.955530300736427 Loss (std): 7.490229364579995 Loss ratio: 0.46944408762360496 Tokens per Sec: 2878.2288338523995
Epoch Step: 25 / 67 Loss (mean): 15.70234538987279 Loss (std): 8.0399014698847 Loss ratio: 0.5120191455647146 Tokens per Sec: 3114.4520512044646
Epoch Step: 30 / 67 Loss (mean): 15.303451016545296 Loss (std): 8.45349988640283 Loss ratio: 0.5523917368221942 Tokens per Sec: 2379.2767613455194
Epoch Step: 35 / 67 Loss (mean): 14.408376969397068 Loss (std): 7.569735439480021 Loss ratio: 0.5253704463422839 Tokens per Sec: 2452.7326985348586
Epoch Step: 40 / 67 Loss (mean): 14.185249667614698 Loss (std): 7.676066370425492 Loss ratio: 0.5411301563447385 Tokens per Sec: 2574.624190760202
Epoch Step: 45 / 67 Loss (mean): 17.042869314551353 Loss (std): 7.463362973281576 Loss ratio: 0.437917045277657 Tokens per Sec: 3607.4351648662805
Epoch Step: 50 / 67 Loss (mean): 40.11722877249122 Loss (std): 19.614265603016836 Loss ratio: 0.4889237418230277 Tokens per Sec: 2668.465030675842
Epoch Step: 55 / 67 Loss (mean): 39.355599112808704 Loss (std): 20.97236624769985 Loss ratio: 0.5328940918313747 Tokens per Sec: 2543.6533523141056
Epoch Step: 60 / 67 Loss (mean): 16.165706753730774 Loss (std): 8.493845155640601 Loss ratio: 0.525423681440984 Tokens per Sec: 2519.5597117815555
Epoch Step: 65 / 67 Loss (mean): 15.922249555587769 Loss (std): 8.346974107128148 Loss ratio: 0.5242333426559599 Tokens per Sec: 3261.872296510342
Mean loss per sample: 19.26008448900329 Std loss per sample: 13.681556806037994 ratio: 0.7103580887118951
Epoch ended with duration 0:00:11.510614
Train perplexity: 13.5431912968149
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( void.class ) creation[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1 test for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java 7 . ''[0m
Epoch Step: 5 / 8 Loss (mean): 62.05101263523102 Loss (std): 27.042381341978604 Loss ratio: 0.43580886424768217 Tokens per Sec: 4173.076426329464
Mean loss per sample: 64.48785869703919 Std loss per sample: 31.683693475137833 ratio: 0.49131253720155726
Epoch ended with duration 0:00:01.051316
b'BLEU = 0.72, 8.2/0.9/0.3/0.3 (BP=0.821, ratio=0.836, hyp_len=2601, ref_len=3113)\n'
Validation perplexity: 6243.273605457818
Validation accuracy: 0.0
Validation BLEU: 0.72
Model saved checkpoint_commit_msg_generator!
Epoch 111 / 1000
Epoch Step: 5 / 67 Loss (mean): 38.4325141236186 Loss (std): 17.942207568889966 Loss ratio: 0.46684969687849875 Tokens per Sec: 2473.7308356665376
Epoch Step: 10 / 67 Loss (mean): 18.326873384416103 Loss (std): 7.41315429487012 Loss ratio: 0.4044963993243796 Tokens per Sec: 2744.65436987482
Epoch Step: 15 / 67 Loss (mean): 38.688485872000456 Loss (std): 26.862739415752994 Loss ratio: 0.6943342136631414 Tokens per Sec: 2390.5849391898337
Epoch Step: 20 / 67 Loss (mean): 15.709777608513832 Loss (std): 6.649382562663349 Loss ratio: 0.42326395244829884 Tokens per Sec: 2664.9631716336517
Epoch Step: 25 / 67 Loss (mean): 15.987135417759418 Loss (std): 7.393812062521291 Loss ratio: 0.4624851087648776 Tokens per Sec: 2864.72624087946
Epoch Step: 30 / 67 Loss (mean): 16.509829089045525 Loss (std): 8.11647406852568 Loss ratio: 0.4916146632863123 Tokens per Sec: 3162.0518956116844
Epoch Step: 35 / 67 Loss (mean): 15.65803612023592 Loss (std): 8.349476256438592 Loss ratio: 0.5332390468590125 Tokens per Sec: 2305.0417416820674
Epoch Step: 40 / 67 Loss (mean): 11.233306376706986 Loss (std): 6.349030995185653 Loss ratio: 0.5651969938566613 Tokens per Sec: 2234.301950353945
Epoch Step: 45 / 67 Loss (mean): 16.10458566993475 Loss (std): 7.16411838199274 Loss ratio: 0.4448495930800166 Tokens per Sec: 2702.0424214883
Epoch Step: 50 / 67 Loss (mean): 19.459449511021376 Loss (std): 7.394264610805382 Loss ratio: 0.37998323676203916 Tokens per Sec: 3157.031147910907
Epoch Step: 55 / 67 Loss (mean): 16.283477939665318 Loss (std): 7.441378528184769 Loss ratio: 0.45698950529838195 Tokens per Sec: 2915.3217553294317
Epoch Step: 60 / 67 Loss (mean): 16.372796446084976 Loss (std): 8.321460443058667 Loss ratio: 0.5082491845825442 Tokens per Sec: 3532.825118726645
Epoch Step: 65 / 67 Loss (mean): 16.1614735648036 Loss (std): 9.036922437735718 Loss ratio: 0.5591645094427711 Tokens per Sec: 2919.41286253062
Mean loss per sample: 20.461921091572645 Std loss per sample: 14.775586178278159 ratio: 0.7221016107018204
Epoch ended with duration 0:00:11.568140
Train perplexity: 15.93458784846547
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo ( ) length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone of applytransportmodetransform[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java instead of assuming[0m
Epoch Step: 5 / 8 Loss (mean): 62.56881392002106 Loss (std): 27.542711493273178 Loss ratio: 0.4401987151055765 Tokens per Sec: 4395.91523350161
Mean loss per sample: 63.11169700446676 Std loss per sample: 31.83545190051092 ratio: 0.5044302944073545
Epoch ended with duration 0:00:01.022936
b'BLEU = 0.68, 8.6/0.9/0.2/0.3 (BP=0.815, ratio=0.830, hyp_len=2585, ref_len=3113)\n'
Validation perplexity: 5181.062247592285
Validation accuracy: 0.0
Validation BLEU: 0.68
Epoch 112 / 1000
Epoch Step: 5 / 67 Loss (mean): 14.017295442521572 Loss (std): 8.70138534689874 Loss ratio: 0.6207606440614086 Tokens per Sec: 3346.3684366752727
Epoch Step: 10 / 67 Loss (mean): 16.431461356580257 Loss (std): 8.254507600293904 Loss ratio: 0.5023599192526017 Tokens per Sec: 3437.557973976522
Epoch Step: 15 / 67 Loss (mean): 16.571653060615063 Loss (std): 6.8428481702298924 Loss ratio: 0.4129248992360885 Tokens per Sec: 2941.6591792573868
Epoch Step: 20 / 67 Loss (mean): 13.406812462955713 Loss (std): 7.999344545591775 Loss ratio: 0.5966626718837694 Tokens per Sec: 2653.694381154156
Epoch Step: 25 / 67 Loss (mean): 13.867846969515085 Loss (std): 7.182374834715644 Loss ratio: 0.5179156397171283 Tokens per Sec: 2214.8222331350535
Epoch Step: 30 / 67 Loss (mean): 15.127333223819733 Loss (std): 5.902123891797631 Loss ratio: 0.39016287963459784 Tokens per Sec: 2871.6103008628993
Epoch Step: 35 / 67 Loss (mean): 15.974916875362396 Loss (std): 7.457182296565004 Loss ratio: 0.4668057026366114 Tokens per Sec: 2436.1286710866852
Epoch Step: 40 / 67 Loss (mean): 16.66679025068879 Loss (std): 8.70818485758879 Loss ratio: 0.5224872171910189 Tokens per Sec: 2953.88311335621
Epoch Step: 45 / 67 Loss (mean): 39.09782636538148 Loss (std): 25.846741878504716 Loss ratio: 0.6610787422543337 Tokens per Sec: 3279.6833422991986
Epoch Step: 50 / 67 Loss (mean): 10.832133301666804 Loss (std): 5.657513858112327 Loss ratio: 0.5222899036186872 Tokens per Sec: 2592.2261525471176
Epoch Step: 55 / 67 Loss (mean): 15.019390754401684 Loss (std): 7.691668454217938 Loss ratio: 0.512115876069325 Tokens per Sec: 2350.6729702476355
Epoch Step: 60 / 67 Loss (mean): 40.929728001356125 Loss (std): 18.613457312537385 Loss ratio: 0.45476621080698765 Tokens per Sec: 2361.532753998805
Epoch Step: 65 / 67 Loss (mean): 37.787650249898434 Loss (std): 20.366317201787552 Loss ratio: 0.5389675480507627 Tokens per Sec: 2461.5746241474076
Mean loss per sample: 18.628188504616084 Std loss per sample: 13.15745557849624 ratio: 0.7063196496661932
Epoch ended with duration 0:00:11.509173
Train perplexity: 12.433427198110591
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for big5han[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java 7 ''[0m
Epoch Step: 5 / 8 Loss (mean): 62.300505220890045 Loss (std): 27.651779860794875 Loss ratio: 0.4438451945574741 Tokens per Sec: 4411.470423250744
Mean loss per sample: 63.41580888873241 Std loss per sample: 32.433203736070524 ratio: 0.5114372000359865
Epoch ended with duration 0:00:01.020835
b'BLEU = 0.77, 8.8/1.1/0.5/0.4 (BP=0.678, ratio=0.720, hyp_len=2241, ref_len=3113)\n'
Validation perplexity: 5399.048367648218
Validation accuracy: 0.0
Validation BLEU: 0.77
Epoch 113 / 1000
Epoch Step: 5 / 67 Loss (mean): 14.26282998919487 Loss (std): 8.57069723147707 Loss ratio: 0.6009114066401966 Tokens per Sec: 2482.069438710394
Epoch Step: 10 / 67 Loss (mean): 16.726977862417698 Loss (std): 8.519180887761092 Loss ratio: 0.5093078353921932 Tokens per Sec: 2693.540156225644
Epoch Step: 15 / 67 Loss (mean): 14.152516957372427 Loss (std): 6.775669389295867 Loss ratio: 0.47876073278726855 Tokens per Sec: 2906.3908690821995
Epoch Step: 20 / 67 Loss (mean): 36.18070328235626 Loss (std): 18.959505537292618 Loss ratio: 0.5240225815770235 Tokens per Sec: 3321.3704871322516
Epoch Step: 25 / 67 Loss (mean): 14.468806233257055 Loss (std): 6.951148555311079 Loss ratio: 0.4804230869671626 Tokens per Sec: 2346.9683408494957
Epoch Step: 30 / 67 Loss (mean): 14.969438999891281 Loss (std): 6.093880822488539 Loss ratio: 0.4070881228436682 Tokens per Sec: 2693.513104395121
Epoch Step: 35 / 67 Loss (mean): 11.627798020839691 Loss (std): 8.101064159676577 Loss ratio: 0.6966980459376405 Tokens per Sec: 2792.347990710896
Epoch Step: 40 / 67 Loss (mean): 14.078635938465595 Loss (std): 7.196483090440733 Loss ratio: 0.5111633770412749 Tokens per Sec: 2586.980905266054
Epoch Step: 45 / 67 Loss (mean): 16.344142638146877 Loss (std): 7.067939473466087 Loss ratio: 0.4324447987237745 Tokens per Sec: 2550.0002919121675
Epoch Step: 50 / 67 Loss (mean): 18.659569140523672 Loss (std): 8.68332291707488 Loss ratio: 0.46535495282240946 Tokens per Sec: 2777.752784663306
Epoch Step: 55 / 67 Loss (mean): 15.663905017077923 Loss (std): 8.449381656216625 Loss ratio: 0.539417319436277 Tokens per Sec: 3240.8615016887893
Epoch Step: 60 / 67 Loss (mean): 14.206003282219172 Loss (std): 8.714949468433469 Loss ratio: 0.6134694815494984 Tokens per Sec: 2849.99158344831
Epoch Step: 65 / 67 Loss (mean): 16.709378756582737 Loss (std): 8.524077933393643 Loss ratio: 0.5101373341025945 Tokens per Sec: 2688.483072946721
Mean loss per sample: 18.211153717665287 Std loss per sample: 12.914786077566252 ratio: 0.7091690223359423
Epoch ended with duration 0:00:11.517551
Train perplexity: 11.751300317237657
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo ( ) in ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1 test[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix infinite loop[0m
Epoch Step: 5 / 8 Loss (mean): 62.339477837085724 Loss (std): 27.464962877643796 Loss ratio: 0.44057094846734346 Tokens per Sec: 4364.470781335692
Mean loss per sample: 63.38536006309947 Std loss per sample: 32.26528015039554 ratio: 0.5090336336068106
Epoch ended with duration 0:00:01.024789
b'BLEU = 0.71, 8.4/0.9/0.3/0.3 (BP=0.767, ratio=0.791, hyp_len=2461, ref_len=3113)\n'
Validation perplexity: 5376.815844861904
Validation accuracy: 0.0
Validation BLEU: 0.71
Epoch 114 / 1000
Epoch Step: 5 / 67 Loss (mean): 13.875973716378212 Loss (std): 6.7828473236299125 Loss ratio: 0.48881955690244083 Tokens per Sec: 2320.9163955659064
Epoch Step: 10 / 67 Loss (mean): 36.53531526774168 Loss (std): 20.376509618346592 Loss ratio: 0.5577209193083857 Tokens per Sec: 2936.8761413675666
Epoch Step: 15 / 67 Loss (mean): 15.228610768914223 Loss (std): 7.014401380739554 Loss ratio: 0.46060678069583827 Tokens per Sec: 3025.6154587276906
Epoch Step: 20 / 67 Loss (mean): 14.469722148030996 Loss (std): 8.721924680985762 Loss ratio: 0.6027707091924097 Tokens per Sec: 2743.9450868298686
Epoch Step: 25 / 67 Loss (mean): 37.56153165362775 Loss (std): 23.540843306659823 Loss ratio: 0.6267274594588107 Tokens per Sec: 2304.6081865797014
Epoch Step: 30 / 67 Loss (mean): 16.17719564586878 Loss (std): 7.948068223215367 Loss ratio: 0.49131310501552167 Tokens per Sec: 3101.266031278143
Epoch Step: 35 / 67 Loss (mean): 34.64834301918745 Loss (std): 18.830768564748436 Loss ratio: 0.5434825138483648 Tokens per Sec: 2213.1694497625867
Epoch Step: 40 / 67 Loss (mean): 14.537094671279192 Loss (std): 7.53111876712633 Loss ratio: 0.518062166988944 Tokens per Sec: 3021.3241520398396
Epoch Step: 45 / 67 Loss (mean): 15.46887868270278 Loss (std): 7.45395033302495 Loss ratio: 0.48186752808139344 Tokens per Sec: 2687.463748829415
Epoch Step: 50 / 67 Loss (mean): 15.663253739476204 Loss (std): 8.729512281720373 Loss ratio: 0.5573243227056537 Tokens per Sec: 2916.776366399655
Epoch Step: 55 / 67 Loss (mean): 13.625221949070692 Loss (std): 7.77454984702266 Loss ratio: 0.5705998681036475 Tokens per Sec: 2963.307686583382
Epoch Step: 60 / 67 Loss (mean): 39.136919260025024 Loss (std): 17.44123777916831 Loss ratio: 0.4456466709423147 Tokens per Sec: 3152.3557479510378
Epoch Step: 65 / 67 Loss (mean): 15.382655505090952 Loss (std): 8.008551632875731 Loss ratio: 0.5206221793256222 Tokens per Sec: 2547.0261404882085
Mean loss per sample: 19.276339903872056 Std loss per sample: 13.897329614613648 ratio: 0.7209527163308673
Epoch ended with duration 0:00:11.532510
Train perplexity: 13.573010334386323
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( ) creation[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case of applytransportmodetransform[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java 7 construct in acceptance[0m
Epoch Step: 5 / 8 Loss (mean): 62.87996745109558 Loss (std): 27.893852271983796 Loss ratio: 0.4436047504903375 Tokens per Sec: 4409.640520988674
Mean loss per sample: 63.824038080504685 Std loss per sample: 32.678002636212824 ratio: 0.5120014906451752
Epoch ended with duration 0:00:01.021472
b'BLEU = 0.80, 8.8/1.1/0.4/0.3 (BP=0.782, ratio=0.802, hyp_len=2498, ref_len=3113)\n'
Validation perplexity: 5706.153063197559
Validation accuracy: 0.0
Validation BLEU: 0.8
Model saved best_on_validation_commit_msg_generator!
Epoch 115 / 1000
Epoch Step: 5 / 67 Loss (mean): 13.559699084609747 Loss (std): 9.039312354504288 Loss ratio: 0.6666307488168306 Tokens per Sec: 2961.428299236517
Epoch Step: 10 / 67 Loss (mean): 12.747916124761105 Loss (std): 7.2515101886440805 Loss ratio: 0.5688388688531612 Tokens per Sec: 2232.6013524717514
Epoch Step: 15 / 67 Loss (mean): 13.5896060988307 Loss (std): 7.785781087084267 Loss ratio: 0.5729217631815086 Tokens per Sec: 2732.61556826956
Epoch Step: 20 / 67 Loss (mean): 15.254519212991 Loss (std): 7.996819475846445 Loss ratio: 0.5242262548029847 Tokens per Sec: 2766.6553742761216
Epoch Step: 25 / 67 Loss (mean): 14.024109773337841 Loss (std): 6.3347683353406214 Loss ratio: 0.4517055583366915 Tokens per Sec: 2720.3006767218512
Epoch Step: 30 / 67 Loss (mean): 15.390300329774618 Loss (std): 8.143548796297523 Loss ratio: 0.5291351449810714 Tokens per Sec: 3762.2845742875666
Epoch Step: 35 / 67 Loss (mean): 16.340941455215216 Loss (std): 8.868583413475498 Loss ratio: 0.5427216931032507 Tokens per Sec: 2801.958675321181
Epoch Step: 40 / 67 Loss (mean): 14.143207624554634 Loss (std): 7.052333604474843 Loss ratio: 0.49863749381936395 Tokens per Sec: 2385.7531940608374
Epoch Step: 45 / 67 Loss (mean): 15.580948173999786 Loss (std): 7.743232023234191 Loss ratio: 0.4969679596364658 Tokens per Sec: 3237.009689445208
Epoch Step: 50 / 67 Loss (mean): 14.310782723128796 Loss (std): 7.419742252311531 Loss ratio: 0.518472147600976 Tokens per Sec: 2623.78484795815
Epoch Step: 55 / 67 Loss (mean): 14.85094016417861 Loss (std): 9.076335761589627 Loss ratio: 0.6111623682574867 Tokens per Sec: 2527.0914951433183
Epoch Step: 60 / 67 Loss (mean): 10.332875007674808 Loss (std): 5.641852084190174 Loss ratio: 0.5460099033424534 Tokens per Sec: 2648.756777104626
Epoch Step: 65 / 67 Loss (mean): 15.685040637850761 Loss (std): 7.418370118780562 Loss ratio: 0.47295829765838987 Tokens per Sec: 2774.922163010952
Mean loss per sample: 18.179254238727335 Std loss per sample: 12.955480605450855 ratio: 0.7126519292442561
Epoch ended with duration 0:00:11.488501
Train perplexity: 11.700691110927124
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( ) length ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone of receive.timeout[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java instead of assuming instead of dx[0m
Epoch Step: 5 / 8 Loss (mean): 62.83505019545555 Loss (std): 27.59910367008992 Loss ratio: 0.43923102765478467 Tokens per Sec: 4395.5926553630115
Mean loss per sample: 63.675524114585315 Std loss per sample: 32.312384811358136 ratio: 0.507453770670366
Epoch ended with duration 0:00:01.020918
b'BLEU = 0.80, 8.7/1.2/0.4/0.3 (BP=0.772, ratio=0.794, hyp_len=2472, ref_len=3113)\n'
Validation perplexity: 5592.457276185433
Validation accuracy: 0.0
Validation BLEU: 0.8
Model saved checkpoint_commit_msg_generator!
Epoch 116 / 1000
Epoch Step: 5 / 67 Loss (mean): 13.237127248197794 Loss (std): 7.347189989077636 Loss ratio: 0.5550441460081862 Tokens per Sec: 3219.6961394189025
Epoch Step: 10 / 67 Loss (mean): 13.395755592733622 Loss (std): 7.047095632774585 Loss ratio: 0.5260692899321935 Tokens per Sec: 2712.741116357954
Epoch Step: 15 / 67 Loss (mean): 14.991276122629642 Loss (std): 7.154407364930187 Loss ratio: 0.47723804874292597 Tokens per Sec: 2505.994296149092
Epoch Step: 20 / 67 Loss (mean): 16.02974230237305 Loss (std): 8.337246514106432 Loss ratio: 0.520111075826352 Tokens per Sec: 2859.503817261764
Epoch Step: 25 / 67 Loss (mean): 14.648575395345688 Loss (std): 7.163225561237906 Loss ratio: 0.4890049283231929 Tokens per Sec: 2291.597446716434
Epoch Step: 30 / 67 Loss (mean): 14.333271503448486 Loss (std): 7.865315546640244 Loss ratio: 0.5487453122441659 Tokens per Sec: 2649.694919866655
Epoch Step: 35 / 67 Loss (mean): 15.192451398819685 Loss (std): 7.650483266505762 Loss ratio: 0.503571350381291 Tokens per Sec: 2515.8742833264496
Epoch Step: 40 / 67 Loss (mean): 16.074861735105515 Loss (std): 7.103577523020442 Loss ratio: 0.4419059796643292 Tokens per Sec: 3140.887608518686
Epoch Step: 45 / 67 Loss (mean): 14.023361237719655 Loss (std): 6.930221372960274 Loss ratio: 0.49419117538807694 Tokens per Sec: 2823.795957546967
Epoch Step: 50 / 67 Loss (mean): 13.898614324629307 Loss (std): 8.201276411173303 Loss ratio: 0.5900787099790282 Tokens per Sec: 2679.735998480576
Epoch Step: 55 / 67 Loss (mean): 14.957652054727077 Loss (std): 8.298017890330774 Loss ratio: 0.554767410016624 Tokens per Sec: 2994.226847326041
Epoch Step: 60 / 67 Loss (mean): 16.64443401247263 Loss (std): 8.319599597578168 Loss ratio: 0.49984274570969583 Tokens per Sec: 3017.663505446042
Epoch Step: 65 / 67 Loss (mean): 16.187055468559265 Loss (std): 8.866686585863603 Loss ratio: 0.5477640206451202 Tokens per Sec: 3031.78644457299
Mean loss per sample: 16.31217496634312 Std loss per sample: 10.777518038643146 ratio: 0.6607039258026828
Epoch ended with duration 0:00:11.426243
Train perplexity: 9.088706662917795
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone of receive.timeout[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java instead of assuming instead of dx[0m
Epoch Step: 5 / 8 Loss (mean): 62.973643600940704 Loss (std): 28.207799547180556 Loss ratio: 0.44793024405466014 Tokens per Sec: 4280.614469271615
Mean loss per sample: 65.00523556060479 Std loss per sample: 32.880816685414146 ratio: 0.5058179760730065
Epoch ended with duration 0:00:01.038461
b'BLEU = 0.71, 8.7/0.9/0.4/0.3 (BP=0.745, ratio=0.772, hyp_len=2404, ref_len=3113)\n'
Validation perplexity: 6696.7242785160915
Validation accuracy: 0.0
Validation BLEU: 0.71
Epoch 117 / 1000
Epoch Step: 5 / 67 Loss (mean): 13.074414551258087 Loss (std): 7.890813441534834 Loss ratio: 0.6035309199198935 Tokens per Sec: 2878.2838124307236
Epoch Step: 10 / 67 Loss (mean): 14.967579707503319 Loss (std): 7.159103351124971 Loss ratio: 0.478307347682677 Tokens per Sec: 2682.1925272274066
Epoch Step: 15 / 67 Loss (mean): 14.481061846017838 Loss (std): 6.525076044062397 Loss ratio: 0.45059375572356486 Tokens per Sec: 2636.111942254104
Epoch Step: 20 / 67 Loss (mean): 15.016992628574371 Loss (std): 6.717807332121317 Loss ratio: 0.4473470486586413 Tokens per Sec: 2654.9355817237824
Epoch Step: 25 / 67 Loss (mean): 14.802866701036692 Loss (std): 9.873212853977842 Loss ratio: 0.6669797852929655 Tokens per Sec: 2934.922248548463
Epoch Step: 30 / 67 Loss (mean): 14.592276815325022 Loss (std): 6.791015963046844 Loss ratio: 0.46538426107122777 Tokens per Sec: 2398.6769903197123
Epoch Step: 35 / 67 Loss (mean): 36.11268398165703 Loss (std): 19.328662882053074 Loss ratio: 0.5352319670249605 Tokens per Sec: 2772.3198195854325
Epoch Step: 40 / 67 Loss (mean): 14.521728284657001 Loss (std): 7.412528934114629 Loss ratio: 0.5104439904681574 Tokens per Sec: 3057.2623468451366
Epoch Step: 45 / 67 Loss (mean): 15.238516291603446 Loss (std): 7.898003040098036 Loss ratio: 0.5182921282467574 Tokens per Sec: 2601.9200775169306
Epoch Step: 50 / 67 Loss (mean): 11.25172109156847 Loss (std): 8.002671542600508 Loss ratio: 0.7112397718956389 Tokens per Sec: 2976.4646465943024
Epoch Step: 55 / 67 Loss (mean): 13.858623430132866 Loss (std): 7.282942171636916 Loss ratio: 0.5255169972943765 Tokens per Sec: 3109.9125174316973
Epoch Step: 60 / 67 Loss (mean): 14.06705491244793 Loss (std): 7.060898462633904 Loss ratio: 0.5019457524393197 Tokens per Sec: 3198.5103482122213
Epoch Step: 65 / 67 Loss (mean): 14.686431050300598 Loss (std): 7.375984561547135 Loss ratio: 0.5022312457182145 Tokens per Sec: 2386.1259814070586
Mean loss per sample: 16.62318261397371 Std loss per sample: 11.458557099385565 ratio: 0.6893118703847554
Epoch ended with duration 0:00:11.441313
Train perplexity: 9.479313165152057
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( ) length ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1 test[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java instead of assuming instead of dx[0m
Epoch Step: 5 / 8 Loss (mean): 63.343021243810654 Loss (std): 27.729235444060606 Loss ratio: 0.4377630700204416 Tokens per Sec: 4409.687173381282
Mean loss per sample: 64.20132314670282 Std loss per sample: 32.733739415778835 ratio: 0.5098608223537826
Epoch ended with duration 0:00:01.022684
b'BLEU = 0.77, 8.5/1.0/0.4/0.3 (BP=0.812, ratio=0.828, hyp_len=2577, ref_len=3113)\n'
Validation perplexity: 6005.48946431029
Validation accuracy: 0.0
Validation BLEU: 0.77
Epoch 118 / 1000
Epoch Step: 5 / 67 Loss (mean): 14.646377187222242 Loss (std): 6.60386741793167 Loss ratio: 0.4508874333574449 Tokens per Sec: 2595.242588132699
Epoch Step: 10 / 67 Loss (mean): 13.424715910106897 Loss (std): 7.565031415862103 Loss ratio: 0.5635151958907907 Tokens per Sec: 2781.7921715747216
Epoch Step: 15 / 67 Loss (mean): 14.506524689495564 Loss (std): 7.450560697656985 Loss ratio: 0.5136006629521729 Tokens per Sec: 3058.0880689328997
Epoch Step: 20 / 67 Loss (mean): 13.725272823125124 Loss (std): 6.289526060365378 Loss ratio: 0.45824415597542256 Tokens per Sec: 2771.188075637248
Epoch Step: 25 / 67 Loss (mean): 13.145904811099172 Loss (std): 7.27574667347842 Loss ratio: 0.5534610799353621 Tokens per Sec: 2655.5049236920336
Epoch Step: 30 / 67 Loss (mean): 13.083469837903976 Loss (std): 6.918059102991755 Loss ratio: 0.5287633317997587 Tokens per Sec: 2601.087919466374
Epoch Step: 35 / 67 Loss (mean): 14.28398546949029 Loss (std): 6.913052961838829 Loss ratio: 0.48397227626734024 Tokens per Sec: 2853.507717065321
Epoch Step: 40 / 67 Loss (mean): 40.95597421005368 Loss (std): 25.770777870597566 Loss ratio: 0.6292312261558041 Tokens per Sec: 2724.5908076073965
Epoch Step: 45 / 67 Loss (mean): 15.852915335446596 Loss (std): 7.958243284312595 Loss ratio: 0.5020050328861737 Tokens per Sec: 2904.237558670534
Epoch Step: 50 / 67 Loss (mean): 13.691916275769472 Loss (std): 8.67839347764018 Loss ratio: 0.6338333731267621 Tokens per Sec: 2812.4326458798523
Epoch Step: 55 / 67 Loss (mean): 37.43478236719966 Loss (std): 19.5316386081786 Loss ratio: 0.5217510927829572 Tokens per Sec: 2522.3483272287835
Epoch Step: 60 / 67 Loss (mean): 12.4684530608356 Loss (std): 7.442934255743542 Loss ratio: 0.5969412740640929 Tokens per Sec: 2576.851762717981
Epoch Step: 65 / 67 Loss (mean): 42.34138289093971 Loss (std): 19.296204792154402 Loss ratio: 0.4557292056770172 Tokens per Sec: 3014.0709966544823
Mean loss per sample: 17.364010545076255 Std loss per sample: 12.957425814501374 ratio: 0.7462231021378634
Epoch ended with duration 0:00:11.497374
Train perplexity: 10.478710949474937
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( ) length ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for big5han and gb2312han[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' for `` -preview '' ''[0m
Epoch Step: 5 / 8 Loss (mean): 63.352144837379456 Loss (std): 27.43762070260337 Loss ratio: 0.4330969499617389 Tokens per Sec: 4410.571811782259
Mean loss per sample: 64.3652880768307 Std loss per sample: 32.420230018913266 ratio: 0.5036912128819235
Epoch ended with duration 0:00:01.022086
b'BLEU = 0.79, 8.5/1.0/0.3/0.2 (BP=0.860, ratio=0.869, hyp_len=2704, ref_len=3113)\n'
Validation perplexity: 6140.426158008318
Validation accuracy: 0.0
Validation BLEU: 0.79
Epoch 119 / 1000
Epoch Step: 5 / 67 Loss (mean): 14.600995047017932 Loss (std): 8.471486536131097 Loss ratio: 0.5801992609990845 Tokens per Sec: 3131.111052213608
Epoch Step: 10 / 67 Loss (mean): 13.937473475933075 Loss (std): 6.94574559845644 Loss ratio: 0.4983504083756788 Tokens per Sec: 2925.972875899088
Epoch Step: 15 / 67 Loss (mean): 14.460690416395664 Loss (std): 7.309880288229516 Loss ratio: 0.5055000887054125 Tokens per Sec: 3263.7304776354285
Epoch Step: 20 / 67 Loss (mean): 13.490720003843307 Loss (std): 6.213866882736205 Loss ratio: 0.46060305758076414 Tokens per Sec: 2656.2827948498502
Epoch Step: 25 / 67 Loss (mean): 11.027073346078396 Loss (std): 7.764551262261869 Loss ratio: 0.7041352694931705 Tokens per Sec: 3026.300476207331
Epoch Step: 30 / 67 Loss (mean): 14.75342297181487 Loss (std): 7.273056810578877 Loss ratio: 0.49297419483420346 Tokens per Sec: 2782.427099294997
Epoch Step: 35 / 67 Loss (mean): 15.822673866525292 Loss (std): 8.059847535751127 Loss ratio: 0.5093859358880342 Tokens per Sec: 2587.9043369307715
Epoch Step: 40 / 67 Loss (mean): 12.668286450207233 Loss (std): 7.593826414520528 Loss ratio: 0.5994359572123746 Tokens per Sec: 2793.3669939022975
Epoch Step: 45 / 67 Loss (mean): 12.158833727240562 Loss (std): 6.883929896939373 Loss ratio: 0.5661669574045302 Tokens per Sec: 2791.634609578062
Epoch Step: 50 / 67 Loss (mean): 15.472281135618687 Loss (std): 7.871277619254706 Loss ratio: 0.5087341388293588 Tokens per Sec: 2659.651655199859
Epoch Step: 55 / 67 Loss (mean): 14.198953613638878 Loss (std): 7.987634879512611 Loss ratio: 0.5625509524758252 Tokens per Sec: 2092.7661345624383
Epoch Step: 60 / 67 Loss (mean): 12.589708408340812 Loss (std): 7.473911842454542 Loss ratio: 0.593652497741965 Tokens per Sec: 2765.6365592551697
Epoch Step: 65 / 67 Loss (mean): 15.479368444532156 Loss (std): 6.944921785303148 Loss ratio: 0.44865666258860404 Tokens per Sec: 2886.077176578435
Mean loss per sample: 15.344492861029133 Std loss per sample: 9.668404616350063 ratio: 0.6300895509492659
Epoch ended with duration 0:00:11.405629
Train perplexity: 7.973356166708352
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( ) length ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java instead of git[0m
Epoch Step: 5 / 8 Loss (mean): 63.67298981547356 Loss (std): 28.151368066122473 Loss ratio: 0.44212417459437786 Tokens per Sec: 4401.923441481005
Mean loss per sample: 64.6945494999651 Std loss per sample: 33.19001003815626 ratio: 0.513026372309373
Epoch ended with duration 0:00:01.021873
b'BLEU = 0.74, 7.9/1.0/0.3/0.2 (BP=0.838, ratio=0.850, hyp_len=2645, ref_len=3113)\n'
Validation perplexity: 6420.621802963001
Validation accuracy: 0.0
Validation BLEU: 0.74
Epoch 120 / 1000
Epoch Step: 5 / 67 Loss (mean): 13.062361814081669 Loss (std): 7.362498509372947 Loss ratio: 0.5636422121944229 Tokens per Sec: 3218.3268696831383
Epoch Step: 10 / 67 Loss (mean): 38.93274109065533 Loss (std): 20.4996648324328 Loss ratio: 0.526540496717123 Tokens per Sec: 2528.5426479561347
Epoch Step: 15 / 67 Loss (mean): 15.99173078685999 Loss (std): 8.200053166677176 Loss ratio: 0.5127683348330849 Tokens per Sec: 2531.165784215093
Epoch Step: 20 / 67 Loss (mean): 13.92901860922575 Loss (std): 7.9497586298054 Loss ratio: 0.5707335780670114 Tokens per Sec: 2791.8156927316254
Epoch Step: 25 / 67 Loss (mean): 14.640731047838926 Loss (std): 7.341004960050751 Loss ratio: 0.5014097271552799 Tokens per Sec: 2593.918251995388
Epoch Step: 30 / 67 Loss (mean): 14.34170932509005 Loss (std): 7.224879342431043 Loss ratio: 0.503766962407438 Tokens per Sec: 2680.220990006414
Epoch Step: 35 / 67 Loss (mean): 15.1018435806036 Loss (std): 7.627186056758286 Loss ratio: 0.5050499971112427 Tokens per Sec: 3180.9445864466975
Epoch Step: 40 / 67 Loss (mean): 13.27113552019 Loss (std): 6.652903486055746 Loss ratio: 0.5013062729963365 Tokens per Sec: 2622.8753552713683
Epoch Step: 45 / 67 Loss (mean): 34.46510502323508 Loss (std): 21.239787666403203 Loss ratio: 0.6162693440824896 Tokens per Sec: 2590.076060159963
Epoch Step: 50 / 67 Loss (mean): 13.797692637890577 Loss (std): 8.564240984713422 Loss ratio: 0.6207009540997243 Tokens per Sec: 2893.6380207296083
Epoch Step: 55 / 67 Loss (mean): 15.154364258050919 Loss (std): 10.137509077570177 Loss ratio: 0.6689498091075986 Tokens per Sec: 2679.2680127068056
Epoch Step: 60 / 67 Loss (mean): 15.022755052894354 Loss (std): 7.167370949882642 Loss ratio: 0.477100966144139 Tokens per Sec: 2757.4012907223355
Epoch Step: 65 / 67 Loss (mean): 38.642300833016634 Loss (std): 19.61268457475526 Loss ratio: 0.5075444306359173 Tokens per Sec: 2409.998566147173
Mean loss per sample: 19.052505680333265 Std loss per sample: 14.637816988044548 ratio: 0.768288288881303
Epoch ended with duration 0:00:11.536012
Train perplexity: 13.168117672680582
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix bad test 039 cipher suites[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java instead of assuming in java 7[0m
Epoch Step: 5 / 8 Loss (mean): 63.52849191427231 Loss (std): 28.03651011208083 Loss ratio: 0.44132182690428623 Tokens per Sec: 4415.9806752024915
Mean loss per sample: 64.7671928532788 Std loss per sample: 33.176429640798986 ratio: 0.5122412780179564
Epoch ended with duration 0:00:01.018387
b'BLEU = 0.77, 8.1/1.0/0.4/0.3 (BP=0.818, ratio=0.833, hyp_len=2592, ref_len=3113)\n'
Validation perplexity: 6484.141603818294
Validation accuracy: 0.0
Validation BLEU: 0.77
Model saved checkpoint_commit_msg_generator!
Epoch 121 / 1000
Epoch Step: 5 / 67 Loss (mean): 11.559447381645441 Loss (std): 7.086814266197148 Loss ratio: 0.6130755244796459 Tokens per Sec: 2586.6305427964007
Epoch Step: 10 / 67 Loss (mean): 41.14148340374231 Loss (std): 18.673405643154247 Loss ratio: 0.45388265318249743 Tokens per Sec: 2514.97492946945
Epoch Step: 15 / 67 Loss (mean): 16.663138054311275 Loss (std): 6.921291956862421 Loss ratio: 0.41536545723280893 Tokens per Sec: 3474.9910727905035
Epoch Step: 20 / 67 Loss (mean): 14.771022509783506 Loss (std): 7.606028656484189 Loss ratio: 0.5149290546031176 Tokens per Sec: 2942.6962527457113
Epoch Step: 25 / 67 Loss (mean): 13.937950991094112 Loss (std): 5.470043008878422 Loss ratio: 0.39245675439478855 Tokens per Sec: 2597.9562606769646
Epoch Step: 30 / 67 Loss (mean): 14.640362303704023 Loss (std): 6.3495297541631786 Loss ratio: 0.43370031577406676 Tokens per Sec: 2574.7150203891947
Epoch Step: 35 / 67 Loss (mean): 12.661472383886576 Loss (std): 7.7578199256848315 Loss ratio: 0.6127107251410744 Tokens per Sec: 2854.56206088177
Epoch Step: 40 / 67 Loss (mean): 13.695194229483604 Loss (std): 6.618149728718155 Loss ratio: 0.48324613859585264 Tokens per Sec: 3338.2392479087507
Epoch Step: 45 / 67 Loss (mean): 32.167674435302615 Loss (std): 15.24407129085728 Loss ratio: 0.47389410513703717 Tokens per Sec: 2607.585829598054
Epoch Step: 50 / 67 Loss (mean): 12.668977400287986 Loss (std): 6.961164026225624 Loss ratio: 0.5494653440669478 Tokens per Sec: 2747.7718747444196
Epoch Step: 55 / 67 Loss (mean): 14.371649090200663 Loss (std): 8.09365908408835 Loss ratio: 0.5631684320491117 Tokens per Sec: 2888.705515983181
Epoch Step: 60 / 67 Loss (mean): 15.478929061442614 Loss (std): 8.451835225136936 Loss ratio: 0.5460219626039966 Tokens per Sec: 2643.1417923502695
Epoch Step: 65 / 67 Loss (mean): 14.979534175246954 Loss (std): 7.669484569457184 Loss ratio: 0.5119975347518271 Tokens per Sec: 2397.812267311352
Mean loss per sample: 16.778388862438288 Std loss per sample: 12.363329444582098 ratio: 0.7368603473161738
Epoch ended with duration 0:00:11.508899
Train perplexity: 9.680477453915543
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( ) creation[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1 test[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java instead of git[0m
Epoch Step: 5 / 8 Loss (mean): 63.89463645219803 Loss (std): 28.166910826193003 Loss ratio: 0.44083372862236603 Tokens per Sec: 4386.427693816108
Mean loss per sample: 65.50671481890757 Std loss per sample: 33.44104831579464 ratio: 0.5104980215881985
Epoch ended with duration 0:00:01.037570
b'BLEU = 0.75, 7.9/0.9/0.4/0.3 (BP=0.830, ratio=0.843, hyp_len=2623, ref_len=3113)\n'
Validation perplexity: 7167.650492213291
Validation accuracy: 0.0
Validation BLEU: 0.75
Epoch 122 / 1000
Epoch Step: 5 / 67 Loss (mean): 12.129008330404758 Loss (std): 7.713052212745824 Loss ratio: 0.6359177933294758 Tokens per Sec: 2623.9853376523847
Epoch Step: 10 / 67 Loss (mean): 14.273082993924618 Loss (std): 9.278584299255726 Loss ratio: 0.6500756916501631 Tokens per Sec: 2805.4683461363893
Epoch Step: 15 / 67 Loss (mean): 13.934812158346176 Loss (std): 7.416616256598347 Loss ratio: 0.5322365434367342 Tokens per Sec: 2656.219202186185
Epoch Step: 20 / 67 Loss (mean): 34.045033464208245 Loss (std): 20.706405709754733 Loss ratio: 0.6082063550186698 Tokens per Sec: 2722.7502728417444
Epoch Step: 25 / 67 Loss (mean): 15.594638802111149 Loss (std): 8.195063413565343 Loss ratio: 0.5255051763338002 Tokens per Sec: 2660.393148666952
Epoch Step: 30 / 67 Loss (mean): 12.089557819068432 Loss (std): 7.487337322903858 Loss ratio: 0.6193226778811004 Tokens per Sec: 2314.9666294176864
Epoch Step: 35 / 67 Loss (mean): 14.423725064843893 Loss (std): 6.245182282907153 Loss ratio: 0.43297984777379306 Tokens per Sec: 3432.6620180238583
Epoch Step: 40 / 67 Loss (mean): 13.898287404328585 Loss (std): 7.515282543624462 Loss ratio: 0.5407344318756746 Tokens per Sec: 2861.4709477335946
Epoch Step: 45 / 67 Loss (mean): 15.493368092924356 Loss (std): 7.620733487169073 Loss ratio: 0.4918706792133451 Tokens per Sec: 3019.105854897027
Epoch Step: 50 / 67 Loss (mean): 12.93404251895845 Loss (std): 8.095957803403786 Loss ratio: 0.6259417959649429 Tokens per Sec: 2810.013444321127
Epoch Step: 55 / 67 Loss (mean): 13.133850634098053 Loss (std): 6.834769137433601 Loss ratio: 0.5203933962587636 Tokens per Sec: 3202.764730491758
Epoch Step: 60 / 67 Loss (mean): 14.25697486102581 Loss (std): 7.004368227707229 Loss ratio: 0.4912941417084925 Tokens per Sec: 2379.447945807082
Epoch Step: 65 / 67 Loss (mean): 13.600790701806545 Loss (std): 6.143552291694738 Loss ratio: 0.4517055240677082 Tokens per Sec: 2499.909205297689
Mean loss per sample: 15.205622782323822 Std loss per sample: 9.95056616093911 ratio: 0.654400434851403
Epoch ended with duration 0:00:11.380060
Train perplexity: 7.824942765750716
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo ( ) length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix method_1 test method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' instead of `` array ''[0m
Epoch Step: 5 / 8 Loss (mean): 63.9844671189785 Loss (std): 28.33331855170624 Loss ratio: 0.44281557427087276 Tokens per Sec: 4414.891216703776
Mean loss per sample: 65.07614207756323 Std loss per sample: 33.57986432366178 ratio: 0.5160088359822939
Epoch ended with duration 0:00:01.019405
b'BLEU = 0.82, 8.2/1.1/0.4/0.3 (BP=0.813, ratio=0.829, hyp_len=2580, ref_len=3113)\n'
Validation perplexity: 6761.383955789111
Validation accuracy: 0.0
Validation BLEU: 0.82
Model saved best_on_validation_commit_msg_generator!
Epoch 123 / 1000
Epoch Step: 5 / 67 Loss (mean): 12.101946916431189 Loss (std): 7.306971240563391 Loss ratio: 0.6037847704192529 Tokens per Sec: 3111.8443843707487
Epoch Step: 10 / 67 Loss (mean): 13.44761917181313 Loss (std): 7.270785025750033 Loss ratio: 0.5406745188761707 Tokens per Sec: 2506.0724773927373
Epoch Step: 15 / 67 Loss (mean): 38.62357001751661 Loss (std): 21.804694091962126 Loss ratio: 0.5645437250381886 Tokens per Sec: 2816.1617822532157
Epoch Step: 20 / 67 Loss (mean): 14.783102251589298 Loss (std): 8.719212752755192 Loss ratio: 0.5898094056555557 Tokens per Sec: 2694.808715359549
Epoch Step: 25 / 67 Loss (mean): 29.930782063376334 Loss (std): 22.54006124476241 Loss ratio: 0.7530729132648591 Tokens per Sec: 2526.645426930204
Epoch Step: 30 / 67 Loss (mean): 14.071994550526142 Loss (std): 6.56026190131449 Loss ratio: 0.4661927545352273 Tokens per Sec: 2665.977470853244
Epoch Step: 35 / 67 Loss (mean): 12.823584776371717 Loss (std): 6.8369324593796446 Loss ratio: 0.5331529816824024 Tokens per Sec: 2605.0298807149697
Epoch Step: 40 / 67 Loss (mean): 14.735930301249027 Loss (std): 6.375527777066122 Loss ratio: 0.4326518683741146 Tokens per Sec: 2960.976604756193
Epoch Step: 45 / 67 Loss (mean): 13.840141905471683 Loss (std): 7.941097209955537 Loss ratio: 0.5737728170847752 Tokens per Sec: 3298.7003790484005
Epoch Step: 50 / 67 Loss (mean): 13.46599991992116 Loss (std): 8.26349122801964 Loss ratio: 0.6136559688965171 Tokens per Sec: 3301.7810927382066
Epoch Step: 55 / 67 Loss (mean): 13.54564055800438 Loss (std): 6.694469976034095 Loss ratio: 0.4942158288762656 Tokens per Sec: 2506.3764519514148
Epoch Step: 60 / 67 Loss (mean): 13.829011000692844 Loss (std): 7.265426082039676 Loss ratio: 0.5253756817226968 Tokens per Sec: 2456.6937129418084
Epoch Step: 65 / 67 Loss (mean): 15.212194040417671 Loss (std): 7.71391220102345 Loss ratio: 0.5070874181941248 Tokens per Sec: 2782.969156815015
Mean loss per sample: 14.913259222628474 Std loss per sample: 9.85772041970863 ratio: 0.6610037599796511
Epoch ended with duration 0:00:11.384054
Train perplexity: 7.521455847336452
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone of receive.timeout[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java instead of git[0m
Epoch Step: 5 / 8 Loss (mean): 64.71126210689545 Loss (std): 29.022123877207218 Loss ratio: 0.4484864447438231 Tokens per Sec: 4201.237362792433
Mean loss per sample: 67.14401611539184 Std loss per sample: 33.42054469772918 ratio: 0.4977442016618958
Epoch ended with duration 0:00:01.046087
b'BLEU = 0.85, 8.3/1.2/0.4/0.3 (BP=0.827, ratio=0.841, hyp_len=2617, ref_len=3113)\n'
Validation perplexity: 8948.28208037447
Validation accuracy: 0.0
Validation BLEU: 0.85
Model saved best_on_validation_commit_msg_generator!
Epoch 124 / 1000
Epoch Step: 5 / 67 Loss (mean): 13.851618841290474 Loss (std): 7.6822496488444045 Loss ratio: 0.5546102399197042 Tokens per Sec: 2799.890327097478
Epoch Step: 10 / 67 Loss (mean): 13.759879689663649 Loss (std): 6.510196476302697 Loss ratio: 0.4731288807120257 Tokens per Sec: 3381.750026741188
Epoch Step: 15 / 67 Loss (mean): 33.592718321830034 Loss (std): 19.79394323365213 Loss ratio: 0.5892331499945674 Tokens per Sec: 2423.829332865581
Epoch Step: 20 / 67 Loss (mean): 12.280090913176537 Loss (std): 7.909401199110672 Loss ratio: 0.6440832771542339 Tokens per Sec: 3123.4040043512045
Epoch Step: 25 / 67 Loss (mean): 33.28671568259597 Loss (std): 22.789206370140725 Loss ratio: 0.6846336715056605 Tokens per Sec: 2929.7475763973507
Epoch Step: 30 / 67 Loss (mean): 12.131533375009894 Loss (std): 7.158949710689911 Loss ratio: 0.5901108696973826 Tokens per Sec: 2441.857176317229
Epoch Step: 35 / 67 Loss (mean): 14.017543429508805 Loss (std): 7.146841779484518 Loss ratio: 0.5098498046697297 Tokens per Sec: 2934.960589441416
Epoch Step: 40 / 67 Loss (mean): 14.582098387181759 Loss (std): 6.9620988941233515 Loss ratio: 0.47744149773693145 Tokens per Sec: 2843.860145198675
Epoch Step: 45 / 67 Loss (mean): 12.932391535490751 Loss (std): 6.7954817861476196 Loss ratio: 0.5254621132911553 Tokens per Sec: 2507.0249441698948
Epoch Step: 50 / 67 Loss (mean): 14.045458372682333 Loss (std): 7.107269945577552 Loss ratio: 0.5060190815417468 Tokens per Sec: 2785.2151207773613
Epoch Step: 55 / 67 Loss (mean): 12.589690405875444 Loss (std): 7.898478001806221 Loss ratio: 0.6273766667145448 Tokens per Sec: 2809.669353713041
Epoch Step: 60 / 67 Loss (mean): 16.883055217564106 Loss (std): 6.148940471184406 Loss ratio: 0.36420780433078376 Tokens per Sec: 2482.6942058884356
Epoch Step: 65 / 67 Loss (mean): 13.580478549003601 Loss (std): 6.908260131192993 Loss ratio: 0.5086904784883189 Tokens per Sec: 2668.468012169446
Mean loss per sample: 15.963181893072719 Std loss per sample: 11.943137616714884 ratio: 0.7481677335204489
Epoch ended with duration 0:00:11.438727
Train perplexity: 8.669524574258176
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo ( ) length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for big5han and gb2312han[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java instead of git[0m
Epoch Step: 5 / 8 Loss (mean): 64.74014645814896 Loss (std): 29.037991332091472 Loss ratio: 0.4485314433272557 Tokens per Sec: 4306.029672190564
Mean loss per sample: 66.25021937245228 Std loss per sample: 33.055957193045614 ratio: 0.49895619223852294
Epoch ended with duration 0:00:01.032004
b'BLEU = 0.79, 8.2/1.1/0.3/0.2 (BP=0.873, ratio=0.881, hyp_len=2742, ref_len=3113)\n'
Validation perplexity: 7927.487094245891
Validation accuracy: 0.0
Validation BLEU: 0.79
Epoch 125 / 1000
Epoch Step: 5 / 67 Loss (mean): 13.361357111483812 Loss (std): 6.554875545728323 Loss ratio: 0.4905845634568469 Tokens per Sec: 3036.085300695959
Epoch Step: 10 / 67 Loss (mean): 38.36998410150409 Loss (std): 19.348947182460364 Loss ratio: 0.5042730049424725 Tokens per Sec: 2588.6561054997255
Epoch Step: 15 / 67 Loss (mean): 12.68346969038248 Loss (std): 5.80493411439521 Loss ratio: 0.45767713851966935 Tokens per Sec: 2947.545495248074
Epoch Step: 20 / 67 Loss (mean): 11.54270007275045 Loss (std): 7.273115364205158 Loss ratio: 0.6301052022806382 Tokens per Sec: 2843.003741159891
Epoch Step: 25 / 67 Loss (mean): 12.556037336587906 Loss (std): 6.292761160094563 Loss ratio: 0.5011741357090147 Tokens per Sec: 2254.320960869839
Epoch Step: 30 / 67 Loss (mean): 11.977234989404678 Loss (std): 6.719637487751875 Loss ratio: 0.5610341196191118 Tokens per Sec: 2648.5063740257774
Epoch Step: 35 / 67 Loss (mean): 12.085054866969585 Loss (std): 7.957788344169082 Loss ratio: 0.6584817720537627 Tokens per Sec: 2379.6306193205005
Epoch Step: 40 / 67 Loss (mean): 12.828308898955584 Loss (std): 7.931730711765225 Loss ratio: 0.6182990115252828 Tokens per Sec: 3247.219534999503
Epoch Step: 45 / 67 Loss (mean): 13.891610492020845 Loss (std): 7.202515136116636 Loss ratio: 0.5184794909311389 Tokens per Sec: 2449.657507564334
Epoch Step: 50 / 67 Loss (mean): 39.724859461188316 Loss (std): 14.950447319981318 Loss ratio: 0.37634991093141795 Tokens per Sec: 3609.7998135803364
Epoch Step: 55 / 67 Loss (mean): 14.710350163280964 Loss (std): 6.683127636500179 Loss ratio: 0.4543146534459917 Tokens per Sec: 2544.678645991328
Epoch Step: 60 / 67 Loss (mean): 13.150770945474505 Loss (std): 7.110160106832858 Loss ratio: 0.5406648884930685 Tokens per Sec: 2780.2822125819653
Epoch Step: 65 / 67 Loss (mean): 14.739599987864494 Loss (std): 7.8245255278038846 Loss ratio: 0.5308506020683075 Tokens per Sec: 2870.882016195785
Mean loss per sample: 16.809338190244834 Std loss per sample: 13.052041674350656 ratio: 0.776475642683262
Epoch ended with duration 0:00:11.494987
Train perplexity: 9.721098816438246
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( void.class return ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for big5han and gb2312han[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java instead of git directories[0m
Epoch Step: 5 / 8 Loss (mean): 64.42635226249695 Loss (std): 28.35563551261854 Loss ratio: 0.440124801681882 Tokens per Sec: 4418.395380289553
Mean loss per sample: 66.40581297190462 Std loss per sample: 33.2758165857939 ratio: 0.5010979475527607
Epoch ended with duration 0:00:01.036182
b'BLEU = 0.76, 7.7/1.0/0.3/0.2 (BP=0.890, ratio=0.895, hyp_len=2787, ref_len=3113)\n'
Validation perplexity: 8096.418627306312
Validation accuracy: 0.0
Validation BLEU: 0.76
Model saved checkpoint_commit_msg_generator!
Epoch 126 / 1000
Epoch Step: 5 / 67 Loss (mean): 13.453466542065144 Loss (std): 7.382632953248803 Loss ratio: 0.5487532101979382 Tokens per Sec: 3454.3520167034026
Epoch Step: 10 / 67 Loss (mean): 13.761651642620564 Loss (std): 6.737174432268035 Loss ratio: 0.48956147177876885 Tokens per Sec: 2362.3076855264717
Epoch Step: 15 / 67 Loss (mean): 11.900281447917223 Loss (std): 7.56530303202733 Loss ratio: 0.6357247150109548 Tokens per Sec: 2589.033462137774
Epoch Step: 20 / 67 Loss (mean): 13.345556235872209 Loss (std): 7.748059994320561 Loss ratio: 0.5805722786955968 Tokens per Sec: 2863.3265513961164
Epoch Step: 25 / 67 Loss (mean): 10.288129357621074 Loss (std): 7.240523037202593 Loss ratio: 0.7037744944214834 Tokens per Sec: 3063.139297042594
Epoch Step: 30 / 67 Loss (mean): 40.13484972342849 Loss (std): 22.44315818934181 Loss ratio: 0.5591937765806744 Tokens per Sec: 2690.9757111846893
Epoch Step: 35 / 67 Loss (mean): 40.778499621897936 Loss (std): 20.726329469700584 Loss ratio: 0.5082661123355947 Tokens per Sec: 2875.3167206066705
Epoch Step: 40 / 67 Loss (mean): 12.245552361011505 Loss (std): 7.204248685171613 Loss ratio: 0.5883155347168455 Tokens per Sec: 2571.023409552812
Epoch Step: 45 / 67 Loss (mean): 14.158334333449602 Loss (std): 6.821119030012513 Loss ratio: 0.4817741175879256 Tokens per Sec: 2681.4676646430826
Epoch Step: 50 / 67 Loss (mean): 14.219604287296534 Loss (std): 9.1425901106511 Loss ratio: 0.6429567184804769 Tokens per Sec: 2990.7673376692337
Epoch Step: 55 / 67 Loss (mean): 36.832658149302006 Loss (std): 19.06559364788347 Loss ratio: 0.5176274156103711 Tokens per Sec: 2836.350664483033
Epoch Step: 60 / 67 Loss (mean): 35.83978059142828 Loss (std): 16.066779505550723 Loss ratio: 0.44829458329310695 Tokens per Sec: 2852.418413105385
Epoch Step: 65 / 67 Loss (mean): 13.96727915853262 Loss (std): 7.645814603850174 Loss ratio: 0.5474090205449457 Tokens per Sec: 2491.7285521866797
Mean loss per sample: 15.619111588567957 Std loss per sample: 11.817720672181384 ratio: 0.7566192612921139
Epoch ended with duration 0:00:11.418667
Train perplexity: 8.27518551361837
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( void.class return ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone of receive.timeout[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java instead of assuming instead of customproperties[0m
Epoch Step: 5 / 8 Loss (mean): 64.29403740167618 Loss (std): 28.157760853590595 Loss ratio: 0.43795291121127367 Tokens per Sec: 4244.973138493346
Mean loss per sample: 65.9913579606619 Std loss per sample: 32.83293401926634 ratio: 0.4975338443381992
Epoch ended with duration 0:00:01.042285
b'BLEU = 0.80, 8.0/1.1/0.3/0.2 (BP=0.882, ratio=0.888, hyp_len=2765, ref_len=3113)\n'
Validation perplexity: 7654.209374279335
Validation accuracy: 0.0
Validation BLEU: 0.8
Epoch 127 / 1000
Epoch Step: 5 / 67 Loss (mean): 11.94988115876913 Loss (std): 6.276011870309473 Loss ratio: 0.5251945008427112 Tokens per Sec: 2729.3568525396813
Epoch Step: 10 / 67 Loss (mean): 11.459673397243023 Loss (std): 7.671265745376092 Loss ratio: 0.6694139945752425 Tokens per Sec: 2587.9985949658453
Epoch Step: 15 / 67 Loss (mean): 13.51328457891941 Loss (std): 6.709520181620745 Loss ratio: 0.49651290494448175 Tokens per Sec: 3020.753502048358
Epoch Step: 20 / 67 Loss (mean): 13.095696859061718 Loss (std): 6.415153075366056 Loss ratio: 0.48986725520658464 Tokens per Sec: 2797.852172832863
Epoch Step: 25 / 67 Loss (mean): 11.878946678712964 Loss (std): 7.4115265469092435 Loss ratio: 0.623921189930979 Tokens per Sec: 2548.6586590977327
Epoch Step: 30 / 67 Loss (mean): 11.725291475653648 Loss (std): 6.367204803714148 Loss ratio: 0.5430316864135095 Tokens per Sec: 2846.132621625762
Epoch Step: 35 / 67 Loss (mean): 12.01547372713685 Loss (std): 6.43082629029076 Loss ratio: 0.5352120470928076 Tokens per Sec: 2553.730274662042
Epoch Step: 40 / 67 Loss (mean): 13.640217404812574 Loss (std): 7.208448740590896 Loss ratio: 0.5284702235059386 Tokens per Sec: 2655.4377318588085
Epoch Step: 45 / 67 Loss (mean): 32.94270061701536 Loss (std): 16.89705399000265 Loss ratio: 0.5129225495639871 Tokens per Sec: 2658.5859869618166
Epoch Step: 50 / 67 Loss (mean): 13.795635774731636 Loss (std): 6.465608962716481 Loss ratio: 0.4686706048414978 Tokens per Sec: 2690.7226947675554
Epoch Step: 55 / 67 Loss (mean): 13.767378583550453 Loss (std): 7.0369900317479726 Loss ratio: 0.5111350711424405 Tokens per Sec: 2682.3647330707404
Epoch Step: 60 / 67 Loss (mean): 13.975869722664356 Loss (std): 6.472979467190505 Loss ratio: 0.4631539643428 Tokens per Sec: 3548.97394854814
Epoch Step: 65 / 67 Loss (mean): 13.352713622152805 Loss (std): 7.042337924718577 Loss ratio: 0.5274087443195812 Tokens per Sec: 2520.766369695348
Mean loss per sample: 15.974986030163477 Std loss per sample: 12.275358758703314 ratio: 0.7684112358862386
Epoch ended with duration 0:00:11.467791
Train perplexity: 8.683381703202947
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( void.class ) creation[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone of receive.timeout[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use shell instead of adb in java 7[0m
Epoch Step: 5 / 8 Loss (mean): 64.80485734343529 Loss (std): 27.967962898379223 Loss ratio: 0.4315720155074513 Tokens per Sec: 4281.0431394668585
Mean loss per sample: 66.88922191838749 Std loss per sample: 32.79966377733501 ratio: 0.4903579805032619
Epoch ended with duration 0:00:01.038769
b'BLEU = 1.02, 8.3/1.3/0.5/0.3 (BP=0.943, ratio=0.945, hyp_len=2941, ref_len=3113)\n'
Validation perplexity: 8644.578747293779
Validation accuracy: 0.0
Validation BLEU: 1.02
Model saved best_on_validation_commit_msg_generator!
Epoch 128 / 1000
Epoch Step: 5 / 67 Loss (mean): 11.826156467199326 Loss (std): 6.270148757456895 Loss ratio: 0.53019328594608 Tokens per Sec: 2375.5721694911117
Epoch Step: 10 / 67 Loss (mean): 14.355845842510462 Loss (std): 7.790253048083984 Loss ratio: 0.5426537128878554 Tokens per Sec: 2682.2922920855463
Epoch Step: 15 / 67 Loss (mean): 12.6899508908391 Loss (std): 5.235491863163337 Loss ratio: 0.41256990733847904 Tokens per Sec: 3030.3670080289
Epoch Step: 20 / 67 Loss (mean): 12.882287688553333 Loss (std): 6.030008099086737 Loss ratio: 0.46808519145592065 Tokens per Sec: 2867.70490556341
Epoch Step: 25 / 67 Loss (mean): 14.260983932763338 Loss (std): 7.58435439954115 Loss ratio: 0.5318254641684836 Tokens per Sec: 2653.224236135955
Epoch Step: 30 / 67 Loss (mean): 15.796723026782274 Loss (std): 6.160717934233252 Loss ratio: 0.3899997438575185 Tokens per Sec: 3629.927477535677
Epoch Step: 35 / 67 Loss (mean): 14.111234474927187 Loss (std): 7.298507561496161 Loss ratio: 0.5172125496507152 Tokens per Sec: 2937.9187763616064
Epoch Step: 40 / 67 Loss (mean): 11.74452161975205 Loss (std): 5.693682996453413 Loss ratio: 0.48479479886841215 Tokens per Sec: 2764.0935009584737
Epoch Step: 45 / 67 Loss (mean): 12.087660126388073 Loss (std): 7.442621217516219 Loss ratio: 0.6157205894024551 Tokens per Sec: 2718.2612730563255
Epoch Step: 50 / 67 Loss (mean): 11.813635405153036 Loss (std): 6.353673252568718 Loss ratio: 0.5378254055307381 Tokens per Sec: 2181.63301876811
Epoch Step: 55 / 67 Loss (mean): 13.803539231419563 Loss (std): 6.010935662455102 Loss ratio: 0.43546336643670586 Tokens per Sec: 3210.4535170369572
Epoch Step: 60 / 67 Loss (mean): 32.32116064801812 Loss (std): 20.350882221885502 Loss ratio: 0.6296457742811097 Tokens per Sec: 2347.090573158247
Epoch Step: 65 / 67 Loss (mean): 12.48778310790658 Loss (std): 6.945035103504762 Loss ratio: 0.5561463586845568 Tokens per Sec: 3007.861579454945
Mean loss per sample: 15.53750707463401 Std loss per sample: 12.151138706714107 ratio: 0.7820520144155964
Epoch ended with duration 0:00:11.423834
Train perplexity: 8.184321174981502
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix bad test 039 cipher suites[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for big5han and gb2312han[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java instead of regex[0m
Epoch Step: 5 / 8 Loss (mean): 65.1665087044239 Loss (std): 29.24189412576512 Loss ratio: 0.44872580574168464 Tokens per Sec: 4397.940637518861
Mean loss per sample: 66.34875858709461 Std loss per sample: 34.351472477967555 ratio: 0.5177409978647167
Epoch ended with duration 0:00:01.022397
b'BLEU = 0.75, 8.2/1.1/0.3/0.2 (BP=0.841, ratio=0.852, hyp_len=2653, ref_len=3113)\n'
Validation perplexity: 8034.059388408756
Validation accuracy: 0.0
Validation BLEU: 0.75
Epoch 129 / 1000
Epoch Step: 5 / 67 Loss (mean): 28.18750597465606 Loss (std): 20.35002616968757 Loss ratio: 0.7219519949010273 Tokens per Sec: 2237.3314705919706
Epoch Step: 10 / 67 Loss (mean): 12.827080138027668 Loss (std): 5.640999274247945 Loss ratio: 0.43977266950445065 Tokens per Sec: 3994.175397194565
Epoch Step: 15 / 67 Loss (mean): 11.596425434574485 Loss (std): 5.8533461549983645 Loss ratio: 0.5047543476239448 Tokens per Sec: 2261.220265990042
Epoch Step: 20 / 67 Loss (mean): 38.11499225907028 Loss (std): 20.89404054482681 Loss ratio: 0.5481843050841662 Tokens per Sec: 2276.3029229354456
Epoch Step: 25 / 67 Loss (mean): 13.827870093286037 Loss (std): 6.908277149573861 Loss ratio: 0.49959083379934954 Tokens per Sec: 3243.6065334948194
Epoch Step: 30 / 67 Loss (mean): 13.287990882992744 Loss (std): 7.077900869908201 Loss ratio: 0.5326539528987172 Tokens per Sec: 3114.4206602288323
Epoch Step: 35 / 67 Loss (mean): 14.299877755343914 Loss (std): 7.905945312644333 Loss ratio: 0.552868034811686 Tokens per Sec: 3060.4515611351626
Epoch Step: 40 / 67 Loss (mean): 14.13950739055872 Loss (std): 7.49530650712146 Loss ratio: 0.5300967212002203 Tokens per Sec: 2574.2837642254563
Epoch Step: 45 / 67 Loss (mean): 32.62837440520525 Loss (std): 19.29549311487699 Loss ratio: 0.5913715735650855 Tokens per Sec: 2990.492186855276
Epoch Step: 50 / 67 Loss (mean): 16.17479919269681 Loss (std): 6.110319206631235 Loss ratio: 0.3777678556522758 Tokens per Sec: 2884.6178563639764
Epoch Step: 55 / 67 Loss (mean): 11.569447381421924 Loss (std): 6.963661889205052 Loss ratio: 0.6019009948899733 Tokens per Sec: 2756.1768798655694
Epoch Step: 60 / 67 Loss (mean): 11.835432486608624 Loss (std): 6.48501323999533 Loss ratio: 0.5479320884414569 Tokens per Sec: 2550.8242359436067
Epoch Step: 65 / 67 Loss (mean): 15.30578538030386 Loss (std): 6.942277645089224 Loss ratio: 0.4535721279629887 Tokens per Sec: 2919.4389351424543
Mean loss per sample: 15.91171183124485 Std loss per sample: 12.680896376552692 ratio: 0.7969536220265123
Epoch ended with duration 0:00:11.463707
Train perplexity: 8.609360735107416
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( void.class ) creation[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for big5han[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix sorting of password[0m
Epoch Step: 5 / 8 Loss (mean): 64.66165053844452 Loss (std): 28.900041487769336 Loss ratio: 0.4469425269400886 Tokens per Sec: 4413.971734632598
Mean loss per sample: 65.93786076444094 Std loss per sample: 33.90906735042345 ratio: 0.5142579234039995
Epoch ended with duration 0:00:01.021284
b'BLEU = 1.30, 8.7/1.4/0.7/0.7 (BP=0.827, ratio=0.841, hyp_len=2617, ref_len=3113)\n'
Validation perplexity: 7598.918337877692
Validation accuracy: 0.0
Validation BLEU: 1.3
Model saved best_on_validation_commit_msg_generator!
Epoch 130 / 1000
Epoch Step: 5 / 67 Loss (mean): 9.540695108473301 Loss (std): 6.863863270307573 Loss ratio: 0.7194301036002738 Tokens per Sec: 2959.81732053226
Epoch Step: 10 / 67 Loss (mean): 12.708252530544996 Loss (std): 6.012446355518775 Loss ratio: 0.47311354106849257 Tokens per Sec: 2183.370526104316
Epoch Step: 15 / 67 Loss (mean): 13.78373172879219 Loss (std): 7.040573264677494 Loss ratio: 0.5107886168424746 Tokens per Sec: 2856.704982666635
Epoch Step: 20 / 67 Loss (mean): 11.458499934524298 Loss (std): 6.610301559332963 Loss ratio: 0.576890657337809 Tokens per Sec: 2742.6703997088403
Epoch Step: 25 / 67 Loss (mean): 12.91492853499949 Loss (std): 6.3536103509078155 Loss ratio: 0.4919586146907058 Tokens per Sec: 2891.2197307327765
Epoch Step: 30 / 67 Loss (mean): 36.08549171127379 Loss (std): 18.270145554872943 Loss ratio: 0.5063016932415807 Tokens per Sec: 2589.633399997218
Epoch Step: 35 / 67 Loss (mean): 12.828910982236266 Loss (std): 6.133675384446879 Loss ratio: 0.47811348858371217 Tokens per Sec: 2541.04353988775
Epoch Step: 40 / 67 Loss (mean): 38.56772205606103 Loss (std): 19.392156757417602 Loss ratio: 0.5028079368864377 Tokens per Sec: 2447.1208739917442
Epoch Step: 45 / 67 Loss (mean): 14.218673624098301 Loss (std): 7.784638839213085 Loss ratio: 0.5474940240571673 Tokens per Sec: 2926.5721289348376
Epoch Step: 50 / 67 Loss (mean): 13.569053621962667 Loss (std): 6.897596845234755 Loss ratio: 0.5083329344406458 Tokens per Sec: 2799.4957672216738
Epoch Step: 55 / 67 Loss (mean): 14.214316885918379 Loss (std): 7.192315721233705 Loss ratio: 0.5059909511626886 Tokens per Sec: 2596.899735425981
Epoch Step: 60 / 67 Loss (mean): 13.164134480059147 Loss (std): 7.107335766945693 Loss ratio: 0.5399014859436287 Tokens per Sec: 3047.19358780812
Epoch Step: 65 / 67 Loss (mean): 16.06382968276739 Loss (std): 6.170151203422758 Loss ratio: 0.384102130393093 Tokens per Sec: 3508.490482436555
Mean loss per sample: 16.16724978602525 Std loss per sample: 12.760630774636171 ratio: 0.7892888984536064
Epoch ended with duration 0:00:11.482054
Train perplexity: 8.912228132698056
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix typo ( ) length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for big5han[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java instead of regex[0m
Epoch Step: 5 / 8 Loss (mean): 64.89323055744171 Loss (std): 28.870335573967914 Loss ratio: 0.4448897878248284 Tokens per Sec: 4407.423726931709
Mean loss per sample: 66.29287231359325 Std loss per sample: 34.10822734499927 ratio: 0.5145082141508814
Epoch ended with duration 0:00:01.020410
b'BLEU = 1.26, 8.6/1.4/0.7/0.7 (BP=0.825, ratio=0.838, hyp_len=2610, ref_len=3113)\n'
Validation perplexity: 7973.442541262721
Validation accuracy: 0.0
Validation BLEU: 1.26
Model saved checkpoint_commit_msg_generator!
Epoch 131 / 1000
Epoch Step: 5 / 67 Loss (mean): 32.4539122544229 Loss (std): 18.04764152235763 Loss ratio: 0.556100644534714 Tokens per Sec: 2616.125099074719
Epoch Step: 10 / 67 Loss (mean): 11.263791235163808 Loss (std): 6.347925132608077 Loss ratio: 0.563569139384512 Tokens per Sec: 2689.346729418554
Epoch Step: 15 / 67 Loss (mean): 11.982612507417798 Loss (std): 7.570880504755195 Loss ratio: 0.631822192369858 Tokens per Sec: 3072.5802630471526
Epoch Step: 20 / 67 Loss (mean): 13.984154913574457 Loss (std): 7.821072547945299 Loss ratio: 0.5592810288702796 Tokens per Sec: 3513.3202949731594
Epoch Step: 25 / 67 Loss (mean): 11.694050068035722 Loss (std): 5.990924382342192 Loss ratio: 0.5123053473764118 Tokens per Sec: 2536.7553932800156
Epoch Step: 30 / 67 Loss (mean): 15.155902899801731 Loss (std): 7.374358743840425 Loss ratio: 0.4865667715472693 Tokens per Sec: 2546.633376033903
Epoch Step: 35 / 67 Loss (mean): 11.773462697863579 Loss (std): 6.025437017427842 Loss ratio: 0.5117812127201306 Tokens per Sec: 2548.502606820073
Epoch Step: 40 / 67 Loss (mean): 30.268815068528056 Loss (std): 17.65271128462864 Loss ratio: 0.5831979628096844 Tokens per Sec: 2466.666105513757
Epoch Step: 45 / 67 Loss (mean): 14.447186972945929 Loss (std): 7.016009141747715 Loss ratio: 0.48563150424273077 Tokens per Sec: 2436.892854209696
Epoch Step: 50 / 67 Loss (mean): 13.395360168069601 Loss (std): 6.325362734866734 Loss ratio: 0.4722054991805628 Tokens per Sec: 2517.7623884707455
Epoch Step: 55 / 67 Loss (mean): 12.186252627521753 Loss (std): 5.630282300593021 Loss ratio: 0.4620191680482188 Tokens per Sec: 2749.893439230171
Epoch Step: 60 / 67 Loss (mean): 12.760920282453299 Loss (std): 6.499409971140846 Loss ratio: 0.5093214147006119 Tokens per Sec: 3057.225712087958
Epoch Step: 65 / 67 Loss (mean): 13.463344786316156 Loss (std): 6.0869986594605425 Loss ratio: 0.45211637643323466 Tokens per Sec: 3212.4361836895782
Mean loss per sample: 15.527042549356741 Std loss per sample: 12.214030748420772 ratio: 0.7866295664222791
Epoch ended with duration 0:00:11.448974
Train perplexity: 8.172741625454002
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( void.class ) creation[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for big5han and gb2312han[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java instead of git directories[0m
Epoch Step: 5 / 8 Loss (mean): 71.31160160899162 Loss (std): 29.446545441285533 Loss ratio: 0.41292783750312856 Tokens per Sec: 4300.8422645662795
Mean loss per sample: 67.2558171827285 Std loss per sample: 34.307632662323385 ratio: 0.510106546904521
Epoch ended with duration 0:00:01.033532
b'BLEU = 0.77, 8.2/1.0/0.4/0.2 (BP=0.831, ratio=0.844, hyp_len=2626, ref_len=3113)\n'
Validation perplexity: 9084.890188978694
Validation accuracy: 0.0
Validation BLEU: 0.77
Epoch 132 / 1000
Epoch Step: 5 / 67 Loss (mean): 10.290011953562498 Loss (std): 6.229733427206155 Loss ratio: 0.605415567573696 Tokens per Sec: 2370.832567940445
Epoch Step: 10 / 67 Loss (mean): 12.189013700932264 Loss (std): 6.3364831853292465 Loss ratio: 0.519852002860954 Tokens per Sec: 2760.4563764466984
Epoch Step: 15 / 67 Loss (mean): 13.590701330453157 Loss (std): 7.509331489970816 Loss ratio: 0.5525345092489374 Tokens per Sec: 2984.8970508345533
Epoch Step: 20 / 67 Loss (mean): 12.498890366405249 Loss (std): 5.713466141509136 Loss ratio: 0.4571178699883549 Tokens per Sec: 2643.251435333979
Epoch Step: 25 / 67 Loss (mean): 12.56200734525919 Loss (std): 7.3166292378327915 Loss ratio: 0.5824410889708669 Tokens per Sec: 2563.74303804885
Epoch Step: 30 / 67 Loss (mean): 14.335336916148663 Loss (std): 8.33477693349139 Loss ratio: 0.5814147921492043 Tokens per Sec: 2985.577264848806
Epoch Step: 35 / 67 Loss (mean): 15.4951143078506 Loss (std): 6.161855450503588 Loss ratio: 0.3976644075082224 Tokens per Sec: 2864.7267391254813
Epoch Step: 40 / 67 Loss (mean): 13.435760330408812 Loss (std): 7.049932392517563 Loss ratio: 0.5247140630040589 Tokens per Sec: 2717.700759507718
Epoch Step: 45 / 67 Loss (mean): 11.203575983643532 Loss (std): 6.521790184344693 Loss ratio: 0.5821168342916644 Tokens per Sec: 2764.3209891742704
Epoch Step: 50 / 67 Loss (mean): 11.39669443666935 Loss (std): 6.725498841790899 Loss ratio: 0.5901271530235399 Tokens per Sec: 2538.880514318507
Epoch Step: 55 / 67 Loss (mean): 12.933854162693024 Loss (std): 6.989862748824377 Loss ratio: 0.540431541975032 Tokens per Sec: 3241.033738254996
Epoch Step: 60 / 67 Loss (mean): 12.97910450026393 Loss (std): 6.1132246320234875 Loss ratio: 0.4710051168706728 Tokens per Sec: 2799.080928362031
Epoch Step: 65 / 67 Loss (mean): 29.017373876912252 Loss (std): 21.773633384287727 Loss ratio: 0.7503654009714495 Tokens per Sec: 2861.3073709442738
Mean loss per sample: 14.899557030653652 Std loss per sample: 11.748824897487962 ratio: 0.7885351808323213
Epoch ended with duration 0:00:11.422237
Train perplexity: 7.507524717780537
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( void.class ) creation[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for big5han and gb2312han[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java instead of git[0m
Epoch Step: 5 / 8 Loss (mean): 64.92970550060272 Loss (std): 28.980160108950546 Loss ratio: 0.44633130376175095 Tokens per Sec: 4323.59676515195
Mean loss per sample: 66.96013865900821 Std loss per sample: 33.79993451247824 ratio: 0.5047769492324834
Epoch ended with duration 0:00:01.029872
b'BLEU = 1.26, 8.3/1.3/0.7/0.6 (BP=0.850, ratio=0.860, hyp_len=2677, ref_len=3113)\n'
Validation perplexity: 8728.057867782029
Validation accuracy: 0.0
Validation BLEU: 1.26
Epoch 133 / 1000
Epoch Step: 5 / 67 Loss (mean): 13.55086811259389 Loss (std): 7.411165648009425 Loss ratio: 0.5469144549581768 Tokens per Sec: 2882.9213882485033
Epoch Step: 10 / 67 Loss (mean): 10.646682167425752 Loss (std): 6.380220287843982 Loss ratio: 0.5992684093984415 Tokens per Sec: 2572.2652247349893
Epoch Step: 15 / 67 Loss (mean): 11.065853413194418 Loss (std): 6.497080280614786 Loss ratio: 0.5871287137120363 Tokens per Sec: 2661.3688354714504
Epoch Step: 20 / 67 Loss (mean): 37.07624275609851 Loss (std): 21.115337956370734 Loss ratio: 0.5695112661570209 Tokens per Sec: 2915.5523591782558
Epoch Step: 25 / 67 Loss (mean): 11.320444045588374 Loss (std): 5.861647702333134 Loss ratio: 0.5177930899819644 Tokens per Sec: 2534.8177580401016
Epoch Step: 30 / 67 Loss (mean): 12.401638243347406 Loss (std): 7.932615173967485 Loss ratio: 0.6396425228919064 Tokens per Sec: 2921.0820679837057
Epoch Step: 35 / 67 Loss (mean): 9.595749801024795 Loss (std): 7.053633602473217 Loss ratio: 0.7350789410661699 Tokens per Sec: 2739.7037783866285
Epoch Step: 40 / 67 Loss (mean): 12.402168607339263 Loss (std): 6.0533819778419575 Loss ratio: 0.4880906049172507 Tokens per Sec: 2860.912901399409
Epoch Step: 45 / 67 Loss (mean): 11.229392912238836 Loss (std): 6.056957588383345 Loss ratio: 0.5393842423824987 Tokens per Sec: 2788.558467960998
Epoch Step: 50 / 67 Loss (mean): 12.751559767872095 Loss (std): 7.138329214306652 Loss ratio: 0.5598004749420434 Tokens per Sec: 3126.3037150438286
Epoch Step: 55 / 67 Loss (mean): 11.943077901378274 Loss (std): 5.82880380887284 Loss ratio: 0.48804871382444687 Tokens per Sec: 2455.6699286590538
Epoch Step: 60 / 67 Loss (mean): 12.683058932423592 Loss (std): 6.828819322099329 Loss ratio: 0.5384205307634266 Tokens per Sec: 2841.9765700113926
Epoch Step: 65 / 67 Loss (mean): 12.297642882913351 Loss (std): 6.532365855542375 Loss ratio: 0.5311884495051166 Tokens per Sec: 2404.2885867878076
Mean loss per sample: 14.71433317761884 Std loss per sample: 11.492753339002444 ratio: 0.7810583871026814
Epoch ended with duration 0:00:11.438404
Train perplexity: 7.321718578031809
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( void.class return ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' instead of regex instead of regex[0m
Epoch Step: 5 / 8 Loss (mean): 65.15082409977913 Loss (std): 28.89911191013115 Loss ratio: 0.4435724691044871 Tokens per Sec: 4434.639128092936
Mean loss per sample: 66.64802614978102 Std loss per sample: 34.324926303471116 ratio: 0.5150178975493019
Epoch ended with duration 0:00:01.017495
b'BLEU = 0.80, 8.4/1.2/0.4/0.3 (BP=0.807, ratio=0.823, hyp_len=2563, ref_len=3113)\n'
Validation perplexity: 8366.587064125919
Validation accuracy: 0.0
Validation BLEU: 0.8
Epoch 134 / 1000
Epoch Step: 5 / 67 Loss (mean): 12.000144939869642 Loss (std): 5.822751235598305 Loss ratio: 0.48522340894838867 Tokens per Sec: 2691.173340155864
Epoch Step: 10 / 67 Loss (mean): 11.893060391768813 Loss (std): 6.302154023959648 Loss ratio: 0.5299017928405854 Tokens per Sec: 2593.215822956953
Epoch Step: 15 / 67 Loss (mean): 11.268906451761723 Loss (std): 5.788468188614282 Loss ratio: 0.5136672500914535 Tokens per Sec: 2689.5028887498593
Epoch Step: 20 / 67 Loss (mean): 12.451444629579782 Loss (std): 6.338503244391933 Loss ratio: 0.5090576582041025 Tokens per Sec: 2811.1143468911864
Epoch Step: 25 / 67 Loss (mean): 10.74001030717045 Loss (std): 6.199490284242917 Loss ratio: 0.5772331782683574 Tokens per Sec: 2589.7221423798514
Epoch Step: 30 / 67 Loss (mean): 13.839744675904512 Loss (std): 6.408516533958394 Loss ratio: 0.463051644667683 Tokens per Sec: 2941.725277432362
Epoch Step: 35 / 67 Loss (mean): 13.780319131910801 Loss (std): 7.83957607532142 Loss ratio: 0.568896554591938 Tokens per Sec: 2845.8335688578413
Epoch Step: 40 / 67 Loss (mean): 10.501793285831809 Loss (std): 6.018486891155171 Loss ratio: 0.5730913499578056 Tokens per Sec: 2475.300824806026
Epoch Step: 45 / 67 Loss (mean): 11.845776960253716 Loss (std): 6.8852913131691045 Loss ratio: 0.5812443823880366 Tokens per Sec: 2581.1846757856006
Epoch Step: 50 / 67 Loss (mean): 12.883738309144974 Loss (std): 6.40728832591133 Loss ratio: 0.49731593208187014 Tokens per Sec: 2821.151351292048
Epoch Step: 55 / 67 Loss (mean): 12.87619749829173 Loss (std): 6.608669409467808 Loss ratio: 0.5132469745314618 Tokens per Sec: 3747.509221504262
Epoch Step: 60 / 67 Loss (mean): 10.64754893258214 Loss (std): 6.780614615755798 Loss ratio: 0.6368239919524304 Tokens per Sec: 2781.9211558444626
Epoch Step: 65 / 67 Loss (mean): 13.15102969482541 Loss (std): 5.917015033987942 Loss ratio: 0.4499278893968382 Tokens per Sec: 3063.723545381699
Mean loss per sample: 14.682104234010387 Std loss per sample: 11.75644620046965 ratio: 0.800733056589832
Epoch ended with duration 0:00:11.420747
Train perplexity: 7.289861243062842
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( void.class ) creation[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java instead of adb and use classremapper[0m
Epoch Step: 5 / 8 Loss (mean): 65.17332783341408 Loss (std): 29.14112875154931 Loss ratio: 0.4471327415723704 Tokens per Sec: 4426.560135087895
Mean loss per sample: 66.82334475048253 Std loss per sample: 34.80479306192534 ratio: 0.5208478143661615
Epoch ended with duration 0:00:01.019776
b'BLEU = 1.32, 8.7/1.5/0.7/0.7 (BP=0.833, ratio=0.845, hyp_len=2631, ref_len=3113)\n'
Validation perplexity: 8567.747424898096
Validation accuracy: 0.0
Validation BLEU: 1.32
Model saved best_on_validation_commit_msg_generator!
Epoch 135 / 1000
Epoch Step: 5 / 67 Loss (mean): 13.380461275577545 Loss (std): 7.808379961559586 Loss ratio: 0.5835658278696039 Tokens per Sec: 3331.2577837475505
Epoch Step: 10 / 67 Loss (mean): 12.234943520277739 Loss (std): 5.943013097000248 Loss ratio: 0.4857409506754584 Tokens per Sec: 2544.8910664990726
Epoch Step: 15 / 67 Loss (mean): 11.723106935620308 Loss (std): 5.6732365656439345 Loss ratio: 0.48393626338133755 Tokens per Sec: 3437.257241654261
Epoch Step: 20 / 67 Loss (mean): 34.51446286775172 Loss (std): 18.897443305398745 Loss ratio: 0.5475224510318369 Tokens per Sec: 2311.5780504083828
Epoch Step: 25 / 67 Loss (mean): 14.495861668139696 Loss (std): 7.048645688391532 Loss ratio: 0.48625227321834047 Tokens per Sec: 2508.72180901987
Epoch Step: 30 / 67 Loss (mean): 10.845955171622336 Loss (std): 5.797125866213356 Loss ratio: 0.5344965726376152 Tokens per Sec: 2794.4704930684047
Epoch Step: 35 / 67 Loss (mean): 11.481818653643131 Loss (std): 6.286877665260306 Loss ratio: 0.5475506846875261 Tokens per Sec: 2261.617223867099
Epoch Step: 40 / 67 Loss (mean): 13.07860335893929 Loss (std): 6.7235679220186455 Loss ratio: 0.5140891376159866 Tokens per Sec: 2831.5039963326562
Epoch Step: 45 / 67 Loss (mean): 12.13786181807518 Loss (std): 6.787146726305539 Loss ratio: 0.5591715269157549 Tokens per Sec: 3190.272914240373
Epoch Step: 50 / 67 Loss (mean): 13.84309882298112 Loss (std): 6.9901895742754725 Loss ratio: 0.5049584391228186 Tokens per Sec: 3087.37696421475
Epoch Step: 55 / 67 Loss (mean): 12.59946870803833 Loss (std): 8.396950180769934 Loss ratio: 0.6664527191859104 Tokens per Sec: 3133.6098335587835
Epoch Step: 60 / 67 Loss (mean): 9.429045502096415 Loss (std): 6.772658539006066 Loss ratio: 0.7182761539861338 Tokens per Sec: 2292.287269510852
Epoch Step: 65 / 67 Loss (mean): 11.070535434409976 Loss (std): 6.244107155040292 Loss ratio: 0.5640293725660328 Tokens per Sec: 2797.1342353891587
Mean loss per sample: 14.412846248563723 Std loss per sample: 11.31300175461023 ratio: 0.7849248898868674
Epoch ended with duration 0:00:11.439464
Train perplexity: 7.029067023233057
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( void.class ) creation[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for big5han and gb2312han[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in `` -preview ''[0m
Epoch Step: 5 / 8 Loss (mean): 65.4026509821415 Loss (std): 29.43091758745184 Loss ratio: 0.44999578985702116 Tokens per Sec: 4411.657193662084
Mean loss per sample: 67.06107727621422 Std loss per sample: 34.97091145856454 ratio: 0.5214785219528275
Epoch ended with duration 0:00:01.021768
b'BLEU = 0.73, 8.2/1.0/0.3/0.2 (BP=0.839, ratio=0.851, hyp_len=2649, ref_len=3113)\n'
Validation perplexity: 8848.26919982702
Validation accuracy: 0.0
Validation BLEU: 0.73
Model saved checkpoint_commit_msg_generator!
Epoch 136 / 1000
Epoch Step: 5 / 67 Loss (mean): 12.059385981410742 Loss (std): 5.817541326979633 Loss ratio: 0.4824077557470368 Tokens per Sec: 2810.6374277832188
Epoch Step: 10 / 67 Loss (mean): 11.686798963695765 Loss (std): 5.960331473444036 Loss ratio: 0.5100054764319464 Tokens per Sec: 2446.2114854413326
Epoch Step: 15 / 67 Loss (mean): 11.380885273218155 Loss (std): 6.541183271232421 Loss ratio: 0.5747517099241244 Tokens per Sec: 2540.174352345832
Epoch Step: 20 / 67 Loss (mean): 11.749179784208536 Loss (std): 6.478181722968414 Loss ratio: 0.5513731036506397 Tokens per Sec: 2536.210813827389
Epoch Step: 25 / 67 Loss (mean): 10.852929769083858 Loss (std): 5.872145540919582 Loss ratio: 0.5410654694962865 Tokens per Sec: 3101.1416311970424
Epoch Step: 30 / 67 Loss (mean): 11.897759728133678 Loss (std): 6.3776602040765455 Loss ratio: 0.5360387459326317 Tokens per Sec: 3301.881723449815
Epoch Step: 35 / 67 Loss (mean): 33.889287220314145 Loss (std): 23.065560810917543 Loss ratio: 0.6806151059173481 Tokens per Sec: 2066.133331776789
Epoch Step: 40 / 67 Loss (mean): 12.555671276524663 Loss (std): 6.943718413985853 Loss ratio: 0.553034422537688 Tokens per Sec: 2682.712879079711
Epoch Step: 45 / 67 Loss (mean): 11.109942046925426 Loss (std): 7.108923886444359 Loss ratio: 0.6398704742489353 Tokens per Sec: 2702.4013572578915
Epoch Step: 50 / 67 Loss (mean): 11.297529142349958 Loss (std): 7.536019338684643 Loss ratio: 0.6670502234364764 Tokens per Sec: 2797.7688353561293
Epoch Step: 55 / 67 Loss (mean): 12.163182314485312 Loss (std): 6.634130478670978 Loss ratio: 0.5454272004761694 Tokens per Sec: 3651.6734298224374
Epoch Step: 60 / 67 Loss (mean): 31.83195331133902 Loss (std): 17.523574387324807 Loss ratio: 0.5505026416673792 Tokens per Sec: 2989.1874194184707
Epoch Step: 65 / 67 Loss (mean): 13.453291077166796 Loss (std): 6.98093129808875 Loss ratio: 0.5189013794503362 Tokens per Sec: 3116.343181269449
Mean loss per sample: 13.485633341264569 Std loss per sample: 10.120067744376692 ratio: 0.7504332565093838
Epoch ended with duration 0:00:11.389355
Train perplexity: 6.2003289165545095
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( void.class return ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix sorting of password[0m
Epoch Step: 5 / 8 Loss (mean): 65.6514690220356 Loss (std): 29.022958562039715 Loss ratio: 0.44207630071915527 Tokens per Sec: 4407.37323875402
Mean loss per sample: 67.14012760217072 Std loss per sample: 34.646779499663836 ratio: 0.5160368431969388
Epoch ended with duration 0:00:01.021935
b'BLEU = 0.81, 8.4/1.1/0.3/0.2 (BP=0.869, ratio=0.877, hyp_len=2729, ref_len=3113)\n'
Validation perplexity: 8943.567907299599
Validation accuracy: 0.0
Validation BLEU: 0.81
Epoch 137 / 1000
Epoch Step: 5 / 67 Loss (mean): 11.267490601167083 Loss (std): 6.213556821765286 Loss ratio: 0.5514587978552817 Tokens per Sec: 2705.388080340056
Epoch Step: 10 / 67 Loss (mean): 12.460374433547258 Loss (std): 5.595120840533927 Loss ratio: 0.4490331225898074 Tokens per Sec: 3259.4764621813274
Epoch Step: 15 / 67 Loss (mean): 10.574700988829136 Loss (std): 5.560254033580628 Loss ratio: 0.5258072109513402 Tokens per Sec: 2740.5662010407505
Epoch Step: 20 / 67 Loss (mean): 10.823530032299459 Loss (std): 5.421316126362282 Loss ratio: 0.5008824394799156 Tokens per Sec: 2257.1717073084005
Epoch Step: 25 / 67 Loss (mean): 12.897042224183679 Loss (std): 6.880099551650792 Loss ratio: 0.5334633656350822 Tokens per Sec: 2559.9632824370374
Epoch Step: 30 / 67 Loss (mean): 12.477442394942045 Loss (std): 7.096488395222168 Loss ratio: 0.5687454344088061 Tokens per Sec: 2505.0829469624014
Epoch Step: 35 / 67 Loss (mean): 12.455673279240727 Loss (std): 6.636653680143782 Loss ratio: 0.5328217536987562 Tokens per Sec: 2578.5816611838277
Epoch Step: 40 / 67 Loss (mean): 10.503477999940515 Loss (std): 6.205176269645276 Loss ratio: 0.5907734818581444 Tokens per Sec: 3023.9681950570234
Epoch Step: 45 / 67 Loss (mean): 10.770867563784122 Loss (std): 6.762513667232164 Loss ratio: 0.627852271619269 Tokens per Sec: 2597.6333454934534
Epoch Step: 50 / 67 Loss (mean): 12.344472900032997 Loss (std): 6.680077443046116 Loss ratio: 0.5411391395276391 Tokens per Sec: 3344.897910923872
Epoch Step: 55 / 67 Loss (mean): 7.115175401171048 Loss (std): 4.685232979310215 Loss ratio: 0.6584845369432633 Tokens per Sec: 2945.468348863599
Epoch Step: 60 / 67 Loss (mean): 39.67003831639886 Loss (std): 17.771208517469717 Loss ratio: 0.4479755823710265 Tokens per Sec: 3069.602600555401
Epoch Step: 65 / 67 Loss (mean): 12.842795118689537 Loss (std): 5.90245090484477 Loss ratio: 0.45959239015307507 Tokens per Sec: 2732.6565270795036
Mean loss per sample: 15.132078163545845 Std loss per sample: 12.9667792659431 ratio: 0.8569067067853845
Epoch ended with duration 0:00:11.454302
Train perplexity: 7.747466263667889
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( void.class ) creation[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java instead of concatenation in sshlog[0m
Epoch Step: 5 / 8 Loss (mean): 65.84960353374481 Loss (std): 29.823814100509505 Loss ratio: 0.4529080282955114 Tokens per Sec: 4418.473443881134
Mean loss per sample: 67.51805560901516 Std loss per sample: 35.268854647973654 ratio: 0.522361823512946
Epoch ended with duration 0:00:01.020008
b'BLEU = 1.04, 9.1/1.4/0.6/0.5 (BP=0.755, ratio=0.780, hyp_len=2429, ref_len=3113)\n'
Validation perplexity: 9413.554498854195
Validation accuracy: 0.0
Validation BLEU: 1.04
Epoch 138 / 1000
Epoch Step: 5 / 67 Loss (mean): 10.659711414948106 Loss (std): 6.340365674817437 Loss ratio: 0.594797122361713 Tokens per Sec: 2424.710080322711
Epoch Step: 10 / 67 Loss (mean): 12.236241172999144 Loss (std): 6.597592967449292 Loss ratio: 0.5391846134912524 Tokens per Sec: 2560.723764279153
Epoch Step: 15 / 67 Loss (mean): 12.171184591948986 Loss (std): 6.480494426247707 Loss ratio: 0.5324456610849887 Tokens per Sec: 3620.09401225991
Epoch Step: 20 / 67 Loss (mean): 13.456070389598608 Loss (std): 7.209781353500552 Loss ratio: 0.5358014000189559 Tokens per Sec: 3196.418390601543
Epoch Step: 25 / 67 Loss (mean): 11.838455505669117 Loss (std): 6.162080743068684 Loss ratio: 0.5205139082642858 Tokens per Sec: 2500.1396356265213
Epoch Step: 30 / 67 Loss (mean): 10.937762579880655 Loss (std): 6.597614237345836 Loss ratio: 0.6031959634488451 Tokens per Sec: 2966.4367975857062
Epoch Step: 35 / 67 Loss (mean): 11.876034377142787 Loss (std): 6.0843540220409045 Loss ratio: 0.5123220284500993 Tokens per Sec: 2467.2111565640066
Epoch Step: 40 / 67 Loss (mean): 9.985287504270673 Loss (std): 6.044634489475067 Loss ratio: 0.6053540758731081 Tokens per Sec: 2573.456722615552
Epoch Step: 45 / 67 Loss (mean): 11.52053902298212 Loss (std): 6.476210562581866 Loss ratio: 0.5621447529202052 Tokens per Sec: 2779.7380350911494
Epoch Step: 50 / 67 Loss (mean): 41.660947155207396 Loss (std): 18.512489807594765 Loss ratio: 0.4443607520161913 Tokens per Sec: 3228.3439863931694
Epoch Step: 55 / 67 Loss (mean): 10.242663914337754 Loss (std): 6.529301621384738 Loss ratio: 0.6374612772605938 Tokens per Sec: 2213.270245374591
Epoch Step: 60 / 67 Loss (mean): 11.873120093718171 Loss (std): 6.200137703591658 Loss ratio: 0.522199527559064 Tokens per Sec: 3399.567257797456
Epoch Step: 65 / 67 Loss (mean): 10.736436295323074 Loss (std): 6.82805902915055 Loss ratio: 0.6359707114477956 Tokens per Sec: 2782.6429906784174
Mean loss per sample: 14.093140470802757 Std loss per sample: 11.428672284800065 ratio: 0.8109386483784248
Epoch ended with duration 0:00:11.427474
Train perplexity: 6.7314992021969156
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( void.class ) creation[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java instead of customproperties[0m
Epoch Step: 5 / 8 Loss (mean): 65.43700781464577 Loss (std): 29.53028211970451 Loss ratio: 0.451278001637098 Tokens per Sec: 4411.649411245866
Mean loss per sample: 67.30269330349125 Std loss per sample: 34.88006124579055 ratio: 0.5182565441847062
Epoch ended with duration 0:00:01.019870
b'BLEU = 1.02, 8.2/1.2/0.5/0.4 (BP=0.851, ratio=0.861, hyp_len=2681, ref_len=3113)\n'
Validation perplexity: 9142.786143322435
Validation accuracy: 0.0
Validation BLEU: 1.02
Epoch 139 / 1000
Epoch Step: 5 / 67 Loss (mean): 10.67349617369473 Loss (std): 7.011773935816286 Loss ratio: 0.6569331943076994 Tokens per Sec: 3221.0033285346194
Epoch Step: 10 / 67 Loss (mean): 11.480863150209188 Loss (std): 6.209885839635833 Loss ratio: 0.5408901541973945 Tokens per Sec: 3033.5530358291644
Epoch Step: 15 / 67 Loss (mean): 10.558016130700707 Loss (std): 6.398563144301721 Loss ratio: 0.6060383944381287 Tokens per Sec: 2676.9202746735864
Epoch Step: 20 / 67 Loss (mean): 11.966336010023952 Loss (std): 5.8938262867305555 Loss ratio: 0.49253391195044327 Tokens per Sec: 2759.343732602088
Epoch Step: 25 / 67 Loss (mean): 10.30543321929872 Loss (std): 5.952812800556317 Loss ratio: 0.5776382878701923 Tokens per Sec: 2793.1074146844153
Epoch Step: 30 / 67 Loss (mean): 11.550787579268217 Loss (std): 6.03648516511528 Loss ratio: 0.5226037725730311 Tokens per Sec: 2474.1585719591562
Epoch Step: 35 / 67 Loss (mean): 11.83493074029684 Loss (std): 5.929870385753013 Loss ratio: 0.5010481696831867 Tokens per Sec: 2698.16813598273
Epoch Step: 40 / 67 Loss (mean): 12.44226174429059 Loss (std): 6.214310177224538 Loss ratio: 0.49945181229418467 Tokens per Sec: 2977.3110325237594
Epoch Step: 45 / 67 Loss (mean): 10.890140682458878 Loss (std): 5.817070621803337 Loss ratio: 0.5341593640909609 Tokens per Sec: 2582.2318876438976
Epoch Step: 50 / 67 Loss (mean): 10.657120674848557 Loss (std): 6.882662593835323 Loss ratio: 0.6458275930081958 Tokens per Sec: 2491.111004727609
Epoch Step: 55 / 67 Loss (mean): 12.096410321071744 Loss (std): 6.936544898128352 Loss ratio: 0.5734382940073558 Tokens per Sec: 2411.2288978872784
Epoch Step: 60 / 67 Loss (mean): 11.061800329014659 Loss (std): 5.681607003211068 Loss ratio: 0.5136240787413637 Tokens per Sec: 2710.5013285725563
Epoch Step: 65 / 67 Loss (mean): 10.022542981430888 Loss (std): 6.170986567542385 Loss ratio: 0.6157106613536689 Tokens per Sec: 2766.232562716374
Mean loss per sample: 15.517658626752397 Std loss per sample: 13.239951673086596 ratio: 0.8532183876155749
Epoch ended with duration 0:00:11.509566
Train perplexity: 8.162371753429985
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( ) length ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java instead of regex[0m
Epoch Step: 5 / 8 Loss (mean): 71.14389243721962 Loss (std): 29.394912642226753 Loss ratio: 0.4131754903369403 Tokens per Sec: 4101.141876484619
Mean loss per sample: 69.33371297648695 Std loss per sample: 34.01985061498514 ratio: 0.4906682356175306
Epoch ended with duration 0:00:01.059093
b'BLEU = 0.84, 8.9/1.1/0.4/0.3 (BP=0.826, ratio=0.839, hyp_len=2613, ref_len=3113)\n'
Validation perplexity: 12039.642098350372
Validation accuracy: 0.0
Validation BLEU: 0.84
Epoch 140 / 1000
Epoch Step: 5 / 67 Loss (mean): 13.038329385221004 Loss (std): 5.852043175931595 Loss ratio: 0.44883381935149663 Tokens per Sec: 2849.404134415792
Epoch Step: 10 / 67 Loss (mean): 11.663111560046673 Loss (std): 6.213901579983356 Loss ratio: 0.5327824867310529 Tokens per Sec: 3351.7656476304683
Epoch Step: 15 / 67 Loss (mean): 11.187137018889189 Loss (std): 5.85437019328651 Loss ratio: 0.5233126387387191 Tokens per Sec: 2548.23473319957
Epoch Step: 20 / 67 Loss (mean): 12.792005442082882 Loss (std): 6.775022702225372 Loss ratio: 0.5296294418338066 Tokens per Sec: 2688.60867470633
Epoch Step: 25 / 67 Loss (mean): 11.608664141967893 Loss (std): 6.360435113322817 Loss ratio: 0.5479041374216724 Tokens per Sec: 2604.8700062917123
Epoch Step: 30 / 67 Loss (mean): 10.749209463596344 Loss (std): 6.000920404887039 Loss ratio: 0.5582662078741669 Tokens per Sec: 2709.128257880819
Epoch Step: 35 / 67 Loss (mean): 10.66619174554944 Loss (std): 6.3774022261219425 Loss ratio: 0.5979080798714281 Tokens per Sec: 2600.8972838984064
Epoch Step: 40 / 67 Loss (mean): 32.4497733078897 Loss (std): 18.47362505219271 Loss ratio: 0.5692990480060183 Tokens per Sec: 2354.098946881381
Epoch Step: 45 / 67 Loss (mean): 12.282241433858871 Loss (std): 5.359145710949067 Loss ratio: 0.4363328745659834 Tokens per Sec: 2741.9084623041604
Epoch Step: 50 / 67 Loss (mean): 31.059194499626756 Loss (std): 20.549712733474824 Loss ratio: 0.6616305755682677 Tokens per Sec: 2411.377311429886
Epoch Step: 55 / 67 Loss (mean): 10.46615931764245 Loss (std): 6.025447854768105 Loss ratio: 0.575707637529577 Tokens per Sec: 2574.341632909269
Epoch Step: 60 / 67 Loss (mean): 11.022476360201836 Loss (std): 6.339062202821461 Loss ratio: 0.5751032704147605 Tokens per Sec: 3008.6714968715787
Epoch Step: 65 / 67 Loss (mean): 36.13031917437911 Loss (std): 19.066859434087938 Loss ratio: 0.5277246332107886 Tokens per Sec: 3300.022025985494
Mean loss per sample: 14.815035955801404 Std loss per sample: 12.501435677467686 ratio: 0.8438343123002858
Epoch ended with duration 0:00:11.483695
Train perplexity: 7.422160119068313
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( ) length ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' instead of regex and add server[0m
Epoch Step: 5 / 8 Loss (mean): 66.20271649956703 Loss (std): 29.942724966848807 Loss ratio: 0.4522884641303901 Tokens per Sec: 4316.125511501999
Mean loss per sample: 68.0224507011351 Std loss per sample: 34.502439345039484 ratio: 0.5072213510305611
Epoch ended with duration 0:00:01.034083
b'BLEU = 1.51, 9.0/1.7/0.9/0.7 (BP=0.868, ratio=0.876, hyp_len=2726, ref_len=3113)\n'
Validation perplexity: 10079.515420787437
Validation accuracy: 0.0
Validation BLEU: 1.51
Model saved best_on_validation_commit_msg_generator!
Model saved checkpoint_commit_msg_generator!
Epoch 141 / 1000
Epoch Step: 5 / 67 Loss (mean): 34.922161146998405 Loss (std): 28.599262448434203 Loss ratio: 0.8189430868281855 Tokens per Sec: 2432.7204394571327
Epoch Step: 10 / 67 Loss (mean): 12.2011763099581 Loss (std): 5.834186480989755 Loss ratio: 0.4781659024325491 Tokens per Sec: 2934.5164470177315
Epoch Step: 15 / 67 Loss (mean): 11.705287266522646 Loss (std): 6.5272648490059995 Loss ratio: 0.5576338880357176 Tokens per Sec: 2430.0606310196918
Epoch Step: 20 / 67 Loss (mean): 12.593392034992576 Loss (std): 7.221471685905857 Loss ratio: 0.5734334058560192 Tokens per Sec: 3156.4946827239573
Epoch Step: 25 / 67 Loss (mean): 9.886803936213255 Loss (std): 6.556099291805381 Loss ratio: 0.6631161429015283 Tokens per Sec: 2968.9839987413184
Epoch Step: 30 / 67 Loss (mean): 11.881621770560741 Loss (std): 6.312453569163412 Loss ratio: 0.5312787842484488 Tokens per Sec: 3112.0381269728496
Epoch Step: 35 / 67 Loss (mean): 12.970347002148628 Loss (std): 6.676583800616063 Loss ratio: 0.5147575311215683 Tokens per Sec: 2813.3353110874123
Epoch Step: 40 / 67 Loss (mean): 10.078873326070607 Loss (std): 6.266190615659932 Loss ratio: 0.6217153855333646 Tokens per Sec: 3175.017083364366
Epoch Step: 45 / 67 Loss (mean): 11.700922723859549 Loss (std): 4.91864836587512 Loss ratio: 0.42036414408971534 Tokens per Sec: 2493.0103284696515
Epoch Step: 50 / 67 Loss (mean): 10.457216342911124 Loss (std): 6.689192122756867 Loss ratio: 0.6396723471530189 Tokens per Sec: 2580.4714771762297
Epoch Step: 55 / 67 Loss (mean): 10.550911359488964 Loss (std): 6.288268699536006 Loss ratio: 0.5959929417737597 Tokens per Sec: 2885.702035240623
Epoch Step: 60 / 67 Loss (mean): 12.01313191279769 Loss (std): 6.710069054140151 Loss ratio: 0.5585611731268728 Tokens per Sec: 3069.3463051823564
Epoch Step: 65 / 67 Loss (mean): 31.7058244086802 Loss (std): 18.890933080865068 Loss ratio: 0.5958190153760279 Tokens per Sec: 2391.264587719322
Mean loss per sample: 13.938810748124537 Std loss per sample: 11.710444725268616 ratio: 0.8401322707422693
Epoch ended with duration 0:00:11.402889
Train perplexity: 6.592397660458322
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( void.class return ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for big5han and gb2312han[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use generic instead of assuming in java[0m
Epoch Step: 5 / 8 Loss (mean): 66.2162207365036 Loss (std): 29.74761018029693 Loss ratio: 0.4492495924627378 Tokens per Sec: 4420.507972757756
Mean loss per sample: 67.75992940488409 Std loss per sample: 35.4461339507043 ratio: 0.5231135017704043
Epoch ended with duration 0:00:01.021047
b'BLEU = 1.33, 8.2/1.6/0.8/0.7 (BP=0.825, ratio=0.839, hyp_len=2611, ref_len=3113)\n'
Validation perplexity: 9727.226898766537
Validation accuracy: 0.0
Validation BLEU: 1.33
Epoch 142 / 1000
Epoch Step: 5 / 67 Loss (mean): 10.043892247602344 Loss (std): 6.076576160247245 Loss ratio: 0.6050021257145438 Tokens per Sec: 2742.7724937322923
Epoch Step: 10 / 67 Loss (mean): 13.573288772255182 Loss (std): 6.083116429731088 Loss ratio: 0.4481682024009857 Tokens per Sec: 2865.490422011835
Epoch Step: 15 / 67 Loss (mean): 6.417894892394543 Loss (std): 4.275625850302184 Loss ratio: 0.6662037820795365 Tokens per Sec: 2691.6822437733017
Epoch Step: 20 / 67 Loss (mean): 12.82868168503046 Loss (std): 6.0929355038942745 Loss ratio: 0.4749463470594958 Tokens per Sec: 2983.262509503975
Epoch Step: 25 / 67 Loss (mean): 10.386856626719236 Loss (std): 5.850843606728844 Loss ratio: 0.5632929977754854 Tokens per Sec: 2452.5939634999922
Epoch Step: 30 / 67 Loss (mean): 11.390712216496468 Loss (std): 5.728534965472736 Loss ratio: 0.5029127991818151 Tokens per Sec: 2719.681558331569
Epoch Step: 35 / 67 Loss (mean): 12.210520785301924 Loss (std): 6.519383553408498 Loss ratio: 0.5339152742163156 Tokens per Sec: 3226.023230470723
Epoch Step: 40 / 67 Loss (mean): 9.678203918039799 Loss (std): 5.858734288954845 Loss ratio: 0.6053534662598284 Tokens per Sec: 3008.200417957711
Epoch Step: 45 / 67 Loss (mean): 10.68057275749743 Loss (std): 6.418561986566662 Loss ratio: 0.6009567213575724 Tokens per Sec: 2463.091836719407
Epoch Step: 50 / 67 Loss (mean): 10.294806763529778 Loss (std): 6.11970930155467 Loss ratio: 0.5944462525740898 Tokens per Sec: 2707.353144883813
Epoch Step: 55 / 67 Loss (mean): 35.526505183428526 Loss (std): 24.551122982376377 Loss ratio: 0.6910649627824451 Tokens per Sec: 2354.0589606378835
Epoch Step: 60 / 67 Loss (mean): 12.753532223403454 Loss (std): 6.883424852572977 Loss ratio: 0.5397269346245508 Tokens per Sec: 3179.032096364624
Epoch Step: 65 / 67 Loss (mean): 10.451111452654004 Loss (std): 5.958458194037742 Loss ratio: 0.5701267488181482 Tokens per Sec: 2610.4944763177737
Mean loss per sample: 14.216470279148835 Std loss per sample: 12.44695408522916 ratio: 0.8755305530012603
Epoch ended with duration 0:00:11.415081
Train perplexity: 6.8447666719216045
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( void.class ) creation[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for big5han and gb2312han[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use shell instead of adb and use classremapper[0m
Epoch Step: 5 / 8 Loss (mean): 66.78983491659164 Loss (std): 29.421697000715202 Loss ratio: 0.4405115993692386 Tokens per Sec: 4435.691150713237
Mean loss per sample: 67.85609705624033 Std loss per sample: 34.810885298788506 ratio: 0.5130104266081886
Epoch ended with duration 0:00:01.015145
b'BLEU = 0.96, 8.5/1.2/0.4/0.3 (BP=0.908, ratio=0.912, hyp_len=2840, ref_len=3113)\n'
Validation perplexity: 9854.826050832062
Validation accuracy: 0.0
Validation BLEU: 0.96
Epoch 143 / 1000
Epoch Step: 5 / 67 Loss (mean): 10.031965715810657 Loss (std): 5.9692750747299925 Loss ratio: 0.5950254659784422 Tokens per Sec: 2140.524140203413
Epoch Step: 10 / 67 Loss (mean): 11.115644335746765 Loss (std): 5.901349740972832 Loss ratio: 0.5309048726932275 Tokens per Sec: 2909.352606413046
Epoch Step: 15 / 67 Loss (mean): 11.136880096048117 Loss (std): 6.255333442382036 Loss ratio: 0.5616773628192082 Tokens per Sec: 3061.7142091284845
Epoch Step: 20 / 67 Loss (mean): 10.158095772378147 Loss (std): 6.096048476646456 Loss ratio: 0.6001172476856151 Tokens per Sec: 3539.139287492113
Epoch Step: 25 / 67 Loss (mean): 10.931674551218748 Loss (std): 5.589342569298545 Loss ratio: 0.5112979299841488 Tokens per Sec: 3000.527464837106
Epoch Step: 30 / 67 Loss (mean): 10.050659667700529 Loss (std): 4.861698624185342 Loss ratio: 0.4837193562338223 Tokens per Sec: 2732.704137655713
Epoch Step: 35 / 67 Loss (mean): 11.724193267524242 Loss (std): 6.346007364895214 Loss ratio: 0.5412745440211665 Tokens per Sec: 2726.597086480156
Epoch Step: 40 / 67 Loss (mean): 6.398416019621349 Loss (std): 3.989410187267441 Loss ratio: 0.6234996560138535 Tokens per Sec: 2736.438906310397
Epoch Step: 45 / 67 Loss (mean): 9.887681742198765 Loss (std): 5.252270957260201 Loss ratio: 0.5311933670806269 Tokens per Sec: 2360.8261369917454
Epoch Step: 50 / 67 Loss (mean): 10.107729114592075 Loss (std): 6.167951846336144 Loss ratio: 0.610221324336022 Tokens per Sec: 2817.444727691409
Epoch Step: 55 / 67 Loss (mean): 9.996936867013574 Loss (std): 6.159240008081127 Loss ratio: 0.6161127243290376 Tokens per Sec: 2813.5671583697026
Epoch Step: 60 / 67 Loss (mean): 11.02974418271333 Loss (std): 5.978223162374589 Loss ratio: 0.5420092309796382 Tokens per Sec: 2956.954263916141
Epoch Step: 65 / 67 Loss (mean): 10.093875981867313 Loss (std): 5.956190104320446 Loss ratio: 0.590079580432747 Tokens per Sec: 2655.8567172180524
Mean loss per sample: 12.511211107663577 Std loss per sample: 9.737884041138875 ratio: 0.7783326456040744
Epoch ended with duration 0:00:11.358209
Train perplexity: 5.434477020891411
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( void.class ) creation[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use generic instead of assuming in java 7[0m
Epoch Step: 5 / 8 Loss (mean): 66.27522259950638 Loss (std): 29.623198035514097 Loss ratio: 0.44697244118701357 Tokens per Sec: 4411.2505991740545
Mean loss per sample: 67.92086366356396 Std loss per sample: 35.112936060245794 ratio: 0.5169683388328595
Epoch ended with duration 0:00:01.022055
b'BLEU = 1.58, 8.5/1.8/0.9/0.8 (BP=0.865, ratio=0.874, hyp_len=2720, ref_len=3113)\n'
Validation perplexity: 9941.702910576547
Validation accuracy: 0.0
Validation BLEU: 1.58
Model saved best_on_validation_commit_msg_generator!
Epoch 144 / 1000
Epoch Step: 5 / 67 Loss (mean): 11.594950889237225 Loss (std): 6.635715558355059 Loss ratio: 0.5722935458497307 Tokens per Sec: 2787.9362363684577
Epoch Step: 10 / 67 Loss (mean): 8.88981707021594 Loss (std): 5.4478966616279685 Loss ratio: 0.61282438306637 Tokens per Sec: 2530.3756764874133
Epoch Step: 15 / 67 Loss (mean): 9.588109282776713 Loss (std): 6.266477099762282 Loss ratio: 0.6535675506972853 Tokens per Sec: 2300.089632733781
Epoch Step: 20 / 67 Loss (mean): 11.93122577574104 Loss (std): 6.659803646684011 Loss ratio: 0.5581826856570716 Tokens per Sec: 3235.701475693907
Epoch Step: 25 / 67 Loss (mean): 9.88068126514554 Loss (std): 6.012742987665909 Loss ratio: 0.6085352645546899 Tokens per Sec: 2612.1185504031396
Epoch Step: 30 / 67 Loss (mean): 10.776410475373268 Loss (std): 5.667122056187063 Loss ratio: 0.5258821635588049 Tokens per Sec: 2860.529860696126
Epoch Step: 35 / 67 Loss (mean): 8.537084981799126 Loss (std): 6.1566927321920675 Loss ratio: 0.7211703696657581 Tokens per Sec: 2811.7638675154135
Epoch Step: 40 / 67 Loss (mean): 11.170512773096561 Loss (std): 5.23532810508261 Loss ratio: 0.468673928531871 Tokens per Sec: 2875.0198995038563
Epoch Step: 45 / 67 Loss (mean): 10.212925542145967 Loss (std): 5.2833069682542035 Loss ratio: 0.5173157237317977 Tokens per Sec: 2696.5123342616157
Epoch Step: 50 / 67 Loss (mean): 11.640247520059347 Loss (std): 5.681656898644402 Loss ratio: 0.4881044744841847 Tokens per Sec: 3039.8295103638325
Epoch Step: 55 / 67 Loss (mean): 12.017319093458354 Loss (std): 6.334240607913409 Loss ratio: 0.5270926534156409 Tokens per Sec: 2936.9180910310197
Epoch Step: 60 / 67 Loss (mean): 11.665010288357735 Loss (std): 6.24836752034124 Loss ratio: 0.5356504080049912 Tokens per Sec: 3440.2793218812103
Epoch Step: 65 / 67 Loss (mean): 6.452277112574804 Loss (std): 4.065513766377453 Loss ratio: 0.6300897645041 Tokens per Sec: 2425.2297709455106
Mean loss per sample: 11.839008463222658 Std loss per sample: 8.680859780283201 ratio: 0.7332421297991211
Epoch ended with duration 0:00:11.342679
Train perplexity: 4.9620276902652165
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print with deprecated files.tostring ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon instead of adb and ignore prompt in engine-config ( )[0m
Epoch Step: 5 / 8 Loss (mean): 67.01352721452713 Loss (std): 29.989251018736745 Loss ratio: 0.44751040969286127 Tokens per Sec: 4292.399271399424
Mean loss per sample: 69.37169262424844 Std loss per sample: 35.231002828730034 ratio: 0.5078584865956587
Epoch ended with duration 0:00:01.035324
b'BLEU = 1.27, 8.2/1.4/0.6/0.6 (BP=0.901, ratio=0.905, hyp_len=2818, ref_len=3113)\n'
Validation perplexity: 12101.768947668947
Validation accuracy: 0.0
Validation BLEU: 1.27
Epoch 145 / 1000
Epoch Step: 5 / 67 Loss (mean): 11.115465372800827 Loss (std): 5.912667231171676 Loss ratio: 0.5319315955623213 Tokens per Sec: 3111.5370105831516
Epoch Step: 10 / 67 Loss (mean): 10.636742044240236 Loss (std): 5.814441266948865 Loss ratio: 0.5466374236364383 Tokens per Sec: 2643.7513193974573
Epoch Step: 15 / 67 Loss (mean): 11.633305605500937 Loss (std): 6.695067004567271 Loss ratio: 0.575508564083577 Tokens per Sec: 3617.264290391401
Epoch Step: 20 / 67 Loss (mean): 11.617301102727652 Loss (std): 6.269403585655972 Loss ratio: 0.5396609358936186 Tokens per Sec: 2626.5020607184874
Epoch Step: 25 / 67 Loss (mean): 9.397636079229414 Loss (std): 5.393982468854765 Loss ratio: 0.5739722652994091 Tokens per Sec: 3724.056380648654
Epoch Step: 30 / 67 Loss (mean): 9.538011958822608 Loss (std): 6.352494288196629 Loss ratio: 0.6660186960995166 Tokens per Sec: 2762.175367373542
Epoch Step: 35 / 67 Loss (mean): 11.146540027111769 Loss (std): 6.1640847608549 Loss ratio: 0.553004317560604 Tokens per Sec: 2998.1361262285163
Epoch Step: 40 / 67 Loss (mean): 33.42887436598539 Loss (std): 19.803327854044007 Loss ratio: 0.5924018750148022 Tokens per Sec: 2084.843252438257
Epoch Step: 45 / 67 Loss (mean): 10.233392458409071 Loss (std): 5.694616083588942 Loss ratio: 0.5564739265823342 Tokens per Sec: 2811.4464909448593
Epoch Step: 50 / 67 Loss (mean): 12.355214492417872 Loss (std): 7.23799655688518 Loss ratio: 0.5858252449868014 Tokens per Sec: 3046.7358769040584
Epoch Step: 55 / 67 Loss (mean): 34.39980063214898 Loss (std): 18.78810324645132 Loss ratio: 0.5461689574122864 Tokens per Sec: 2448.480881308035
Epoch Step: 60 / 67 Loss (mean): 9.04791155923158 Loss (std): 5.416148490308391 Loss ratio: 0.5986075852810804 Tokens per Sec: 2170.4971936551574
Epoch Step: 65 / 67 Loss (mean): 10.646466201171279 Loss (std): 6.338465360541994 Loss ratio: 0.5953586139074638 Tokens per Sec: 2495.5756374214297
Mean loss per sample: 13.79327002080726 Std loss per sample: 12.38631898040584 ratio: 0.8979972814075978
Epoch ended with duration 0:00:11.462495
Train perplexity: 6.463852463545842
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix bad test 039 cipher suites[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api parity[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java instead of regex[0m
Epoch Step: 5 / 8 Loss (mean): 67.08133867383003 Loss (std): 29.884956842705495 Loss ratio: 0.44550328651035553 Tokens per Sec: 4407.085866542606
Mean loss per sample: 69.48142643248448 Std loss per sample: 35.774397649685234 ratio: 0.5148771331637445
Epoch ended with duration 0:00:01.042494
b'BLEU = 1.31, 7.9/1.3/0.7/0.6 (BP=0.925, ratio=0.928, hyp_len=2889, ref_len=3113)\n'
Validation perplexity: 12283.07787344408
Validation accuracy: 0.0
Validation BLEU: 1.31
Model saved checkpoint_commit_msg_generator!
Epoch 146 / 1000
Epoch Step: 5 / 67 Loss (mean): 10.69557423517108 Loss (std): 5.787814064753509 Loss ratio: 0.541141030625639 Tokens per Sec: 2675.1798562148597
Epoch Step: 10 / 67 Loss (mean): 11.333174580708146 Loss (std): 5.373755442833033 Loss ratio: 0.4741615338724675 Tokens per Sec: 2877.8660368222777
Epoch Step: 15 / 67 Loss (mean): 10.697356726974249 Loss (std): 5.3482201174676165 Loss ratio: 0.4999571626868951 Tokens per Sec: 2451.8216456954465
Epoch Step: 20 / 67 Loss (mean): 11.450932797044516 Loss (std): 6.362512690894727 Loss ratio: 0.5556326985463482 Tokens per Sec: 2889.7233617682446
Epoch Step: 25 / 67 Loss (mean): 10.501867335289717 Loss (std): 5.7731293046913 Loss ratio: 0.5497240748120759 Tokens per Sec: 2643.03525837167
Epoch Step: 30 / 67 Loss (mean): 9.941353559494019 Loss (std): 4.9636036113425765 Loss ratio: 0.49928851052705214 Tokens per Sec: 2181.7866926888387
Epoch Step: 35 / 67 Loss (mean): 12.943249739706516 Loss (std): 5.006376995270343 Loss ratio: 0.38679443694206744 Tokens per Sec: 3182.0628566617693
Epoch Step: 40 / 67 Loss (mean): 11.191652093082666 Loss (std): 6.525313247179073 Loss ratio: 0.5830518312137524 Tokens per Sec: 2964.0192089326824
Epoch Step: 45 / 67 Loss (mean): 10.891827687621117 Loss (std): 6.573525724563824 Loss ratio: 0.6035282519236721 Tokens per Sec: 2872.8850438784048
Epoch Step: 50 / 67 Loss (mean): 12.374865647405386 Loss (std): 5.936750604094179 Loss ratio: 0.47974263101102244 Tokens per Sec: 3084.9727221314765
Epoch Step: 55 / 67 Loss (mean): 10.4650217294693 Loss (std): 5.755295900199217 Loss ratio: 0.549955465834573 Tokens per Sec: 2604.596714855692
Epoch Step: 60 / 67 Loss (mean): 10.251091491430998 Loss (std): 5.026728721488674 Loss ratio: 0.49036034120762384 Tokens per Sec: 3234.8853323604617
Epoch Step: 65 / 67 Loss (mean): 12.06300157867372 Loss (std): 6.608646338456836 Loss ratio: 0.5478442736955549 Tokens per Sec: 2692.644985232255
Mean loss per sample: 12.441778659331536 Std loss per sample: 10.279445208302098 ratio: 0.8262038322464729
Epoch ended with duration 0:00:11.392794
Train perplexity: 5.383663558179801
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix bad test 039 cipher suites[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use java instead of assuming in java 7[0m
Epoch Step: 5 / 8 Loss (mean): 66.87560626864433 Loss (std): 30.127537848064513 Loss ratio: 0.45050115474153507 Tokens per Sec: 4305.030837167447
Mean loss per sample: 69.46604951776442 Std loss per sample: 35.36886425689818 ratio: 0.5091532410786275
Epoch ended with duration 0:00:01.036573
b'BLEU = 1.27, 8.5/1.3/0.7/0.6 (BP=0.861, ratio=0.870, hyp_len=2709, ref_len=3113)\n'
Validation perplexity: 12257.508464533794
Validation accuracy: 0.0
Validation BLEU: 1.27
Epoch 147 / 1000
Epoch Step: 5 / 67 Loss (mean): 10.527086803689599 Loss (std): 4.629645740483469 Loss ratio: 0.4397841327631916 Tokens per Sec: 2161.732771268739
Epoch Step: 10 / 67 Loss (mean): 11.08862349204719 Loss (std): 7.646720242263203 Loss ratio: 0.6896004943938681 Tokens per Sec: 3483.259891412935
Epoch Step: 15 / 67 Loss (mean): 9.514723603613675 Loss (std): 5.110127800127284 Loss ratio: 0.5370758009393427 Tokens per Sec: 2477.26617382851
Epoch Step: 20 / 67 Loss (mean): 31.87850591354072 Loss (std): 18.121927750852826 Loss ratio: 0.5684685411544131 Tokens per Sec: 3068.7071623702673
Epoch Step: 25 / 67 Loss (mean): 10.784506371244788 Loss (std): 4.868234056845983 Loss ratio: 0.45141000331979714 Tokens per Sec: 3101.6845351566244
Epoch Step: 30 / 67 Loss (mean): 10.485541347414255 Loss (std): 5.726401045157621 Loss ratio: 0.546123548172337 Tokens per Sec: 3332.781420901756
Epoch Step: 35 / 67 Loss (mean): 11.281447371467948 Loss (std): 5.049130732435846 Loss ratio: 0.4475605448646303 Tokens per Sec: 3160.8880289766325
Epoch Step: 40 / 67 Loss (mean): 9.739594900980592 Loss (std): 5.003140895218645 Loss ratio: 0.513690861486952 Tokens per Sec: 2536.7465704869355
Epoch Step: 45 / 67 Loss (mean): 10.090360436588526 Loss (std): 5.554308964073141 Loss ratio: 0.5504569434341248 Tokens per Sec: 2900.504113845173
Epoch Step: 50 / 67 Loss (mean): 10.832959728315473 Loss (std): 5.656049532922963 Loss ratio: 0.5221148859382384 Tokens per Sec: 2134.27667841189
Epoch Step: 55 / 67 Loss (mean): 37.594872349873185 Loss (std): 19.465942439826026 Loss ratio: 0.5177818469143356 Tokens per Sec: 2856.4248135072226
Epoch Step: 60 / 67 Loss (mean): 10.508819652721286 Loss (std): 5.382823794326801 Loss ratio: 0.5122196376196165 Tokens per Sec: 2625.2528540979147
Epoch Step: 65 / 67 Loss (mean): 11.832369159907103 Loss (std): 6.215200776696769 Loss ratio: 0.5252710334424324 Tokens per Sec: 2754.716863172842
Mean loss per sample: 12.620097343854875 Std loss per sample: 10.8805508985855 ratio: 0.8621606158912543
Epoch ended with duration 0:00:11.428863
Train perplexity: 5.515131896148536
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( void.class ) creation[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api parity[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java instead of regex[0m
Epoch Step: 5 / 8 Loss (mean): 67.16308781504631 Loss (std): 29.767276983838325 Loss ratio: 0.44320888083364246 Tokens per Sec: 4415.811081932565
Mean loss per sample: 68.87582183861342 Std loss per sample: 35.75919055317588 ratio: 0.519183504437379
Epoch ended with duration 0:00:01.018487
b'BLEU = 0.91, 8.2/1.1/0.4/0.3 (BP=0.914, ratio=0.918, hyp_len=2857, ref_len=3113)\n'
Validation perplexity: 11315.26006147419
Validation accuracy: 0.0
Validation BLEU: 0.91
Epoch 148 / 1000
Epoch Step: 5 / 67 Loss (mean): 11.569588627666235 Loss (std): 6.2326969363144125 Loss ratio: 0.5387137898239727 Tokens per Sec: 2551.1167398053963
Epoch Step: 10 / 67 Loss (mean): 8.908583899959922 Loss (std): 5.5670835372696095 Loss ratio: 0.6249122868220004 Tokens per Sec: 2733.5334378987604
Epoch Step: 15 / 67 Loss (mean): 12.04457125812769 Loss (std): 7.288158900778617 Loss ratio: 0.6050990728176032 Tokens per Sec: 3011.383168619715
Epoch Step: 20 / 67 Loss (mean): 10.249816935509443 Loss (std): 5.475393717902698 Loss ratio: 0.534194293649651 Tokens per Sec: 3127.81400042417
Epoch Step: 25 / 67 Loss (mean): 10.096312902867794 Loss (std): 6.167866329011426 Loss ratio: 0.6109028502137134 Tokens per Sec: 2530.1404158736627
Epoch Step: 30 / 67 Loss (mean): 10.252986970357597 Loss (std): 5.4379417688847935 Loss ratio: 0.5303763463863187 Tokens per Sec: 2510.3091885685667
Epoch Step: 35 / 67 Loss (mean): 10.759702889248729 Loss (std): 6.26176784102411 Loss ratio: 0.5819647536253971 Tokens per Sec: 2973.8975512598217
Epoch Step: 40 / 67 Loss (mean): 9.888759259134531 Loss (std): 6.523260095277281 Loss ratio: 0.6596641625441086 Tokens per Sec: 2345.7379753950563
Epoch Step: 45 / 67 Loss (mean): 11.528283370658755 Loss (std): 6.495835149062367 Loss ratio: 0.5634694203991604 Tokens per Sec: 3019.922690689421
Epoch Step: 50 / 67 Loss (mean): 11.056616123765707 Loss (std): 6.123599118209759 Loss ratio: 0.5538402572417571 Tokens per Sec: 3331.6188862803237
Epoch Step: 55 / 67 Loss (mean): 10.322054501622915 Loss (std): 5.567247538115388 Loss ratio: 0.5393545962424497 Tokens per Sec: 2513.738091037269
Epoch Step: 60 / 67 Loss (mean): 11.392788282595575 Loss (std): 6.337513323809316 Loss ratio: 0.5562741241747595 Tokens per Sec: 3308.0328702485576
Epoch Step: 65 / 67 Loss (mean): 11.07157001644373 Loss (std): 6.117333514679595 Loss ratio: 0.552526290814582 Tokens per Sec: 2565.311410760953
Mean loss per sample: 12.481562387318718 Std loss per sample: 11.096728883953762 ratio: 0.889049666989451
Epoch ended with duration 0:00:11.432202
Train perplexity: 5.412720482180419
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix bad test 039 cipher suites[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java 7 . )[0m
Epoch Step: 5 / 8 Loss (mean): 66.78127652406693 Loss (std): 30.21654476546292 Loss ratio: 0.4524703081195723 Tokens per Sec: 4411.8906789169505
Mean loss per sample: 68.6526638943641 Std loss per sample: 35.66949771932079 ratio: 0.51956465628494
Epoch ended with duration 0:00:01.021026
b'BLEU = 1.27, 8.3/1.4/0.6/0.6 (BP=0.860, ratio=0.869, hyp_len=2705, ref_len=3113)\n'
Validation perplexity: 10978.187658350502
Validation accuracy: 0.0
Validation BLEU: 1.27
Epoch 149 / 1000
Epoch Step: 5 / 67 Loss (mean): 11.176231913268566 Loss (std): 6.735699975546839 Loss ratio: 0.6026807628741249 Tokens per Sec: 3645.930009207902
Epoch Step: 10 / 67 Loss (mean): 10.144078658893704 Loss (std): 5.508485244039442 Loss ratio: 0.5430246973893426 Tokens per Sec: 2763.248549804392
Epoch Step: 15 / 67 Loss (mean): 9.873677644878626 Loss (std): 5.851772422890224 Loss ratio: 0.5926639124101319 Tokens per Sec: 3001.773202768433
Epoch Step: 20 / 67 Loss (mean): 5.890205459935324 Loss (std): 3.7619466224165214 Loss ratio: 0.6386783360962469 Tokens per Sec: 2178.428287232451
Epoch Step: 25 / 67 Loss (mean): 10.30226662941277 Loss (std): 5.420555743329326 Loss ratio: 0.526151762356232 Tokens per Sec: 2790.193442943103
Epoch Step: 30 / 67 Loss (mean): 8.896655105985701 Loss (std): 5.031400279431061 Loss ratio: 0.5655384208437975 Tokens per Sec: 2793.3576879459993
Epoch Step: 35 / 67 Loss (mean): 36.667669447138906 Loss (std): 22.900153407862575 Loss ratio: 0.6245325583311492 Tokens per Sec: 3043.1547841802553
Epoch Step: 40 / 67 Loss (mean): 11.480329900979996 Loss (std): 5.916478322357071 Loss ratio: 0.5153578663146277 Tokens per Sec: 2631.5505600490255
Epoch Step: 45 / 67 Loss (mean): 11.095706522464752 Loss (std): 6.070672744846443 Loss ratio: 0.5471190800293383 Tokens per Sec: 2783.3098120606646
Epoch Step: 50 / 67 Loss (mean): 10.689395036548376 Loss (std): 5.43743998225571 Loss ratio: 0.5086761190567309 Tokens per Sec: 2354.3757342134786
Epoch Step: 55 / 67 Loss (mean): 9.280382853001356 Loss (std): 6.306864306645741 Loss ratio: 0.6795909615524155 Tokens per Sec: 2851.918846804055
Epoch Step: 60 / 67 Loss (mean): 9.613545493222773 Loss (std): 4.862362045927133 Loss ratio: 0.5057823931196805 Tokens per Sec: 2552.4325149098036
Epoch Step: 65 / 67 Loss (mean): 10.96652679471299 Loss (std): 6.137243131065916 Loss ratio: 0.5596341709596431 Tokens per Sec: 2760.6712131907134
Mean loss per sample: 12.602007935591221 Std loss per sample: 11.108692465489373 ratio: 0.8815017830702715
Epoch ended with duration 0:00:11.465736
Train perplexity: 5.501650161144585
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( ) length ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api parity[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java 7 .[0m
Epoch Step: 5 / 8 Loss (mean): 76.43175941705704 Loss (std): 29.020271148383962 Loss ratio: 0.379688644742981 Tokens per Sec: 4179.443755535873
Mean loss per sample: 71.4322523924171 Std loss per sample: 36.07471157688989 ratio: 0.5050199366346652
Epoch ended with duration 0:00:01.050864
b'BLEU = 1.47, 8.7/1.5/0.8/0.7 (BP=0.883, ratio=0.889, hyp_len=2768, ref_len=3113)\n'
Validation perplexity: 16000.090726608405
Validation accuracy: 0.0
Validation BLEU: 1.47
Epoch 150 / 1000
Epoch Step: 5 / 67 Loss (mean): 8.518453399650753 Loss (std): 5.0199924776780955 Loss ratio: 0.5893079696701645 Tokens per Sec: 3011.109320328591
Epoch Step: 10 / 67 Loss (mean): 10.111605739220977 Loss (std): 5.881096350770778 Loss ratio: 0.581618439488709 Tokens per Sec: 2581.069548379823
Epoch Step: 15 / 67 Loss (mean): 10.204115401953459 Loss (std): 5.0499810799361615 Loss ratio: 0.494896508027477 Tokens per Sec: 2714.119044063089
Epoch Step: 20 / 67 Loss (mean): 8.62072628736496 Loss (std): 5.7080602615575975 Loss ratio: 0.6621321767196883 Tokens per Sec: 3260.3211170899026
Epoch Step: 25 / 67 Loss (mean): 9.593138080090284 Loss (std): 5.717741162671127 Loss ratio: 0.5960240658411659 Tokens per Sec: 2755.189345811212
Epoch Step: 30 / 67 Loss (mean): 9.923368407413363 Loss (std): 4.594450835329136 Loss ratio: 0.46299307318841454 Tokens per Sec: 2958.7254776584323
Epoch Step: 35 / 67 Loss (mean): 11.164407106116414 Loss (std): 5.612297461737242 Loss ratio: 0.5026955223320859 Tokens per Sec: 2612.8248842775
Epoch Step: 40 / 67 Loss (mean): 9.30985813960433 Loss (std): 4.886144254901051 Loss ratio: 0.5248355218341396 Tokens per Sec: 2787.6795262141372
Epoch Step: 45 / 67 Loss (mean): 8.33120152913034 Loss (std): 5.26658305158804 Loss ratio: 0.6321516810238291 Tokens per Sec: 2448.8895554930978
Epoch Step: 50 / 67 Loss (mean): 10.455172289162874 Loss (std): 5.403268666988486 Loss ratio: 0.5168034076864664 Tokens per Sec: 2776.5346707559565
Epoch Step: 55 / 67 Loss (mean): 9.084856279194355 Loss (std): 6.240807070592485 Loss ratio: 0.686946152894553 Tokens per Sec: 2785.5020442525574
Epoch Step: 60 / 67 Loss (mean): 11.479485370218754 Loss (std): 6.370882319323423 Loss ratio: 0.5549797847080682 Tokens per Sec: 2673.5755792482787
Epoch Step: 65 / 67 Loss (mean): 9.05145797226578 Loss (std): 5.525125685433244 Loss ratio: 0.6104127867977254 Tokens per Sec: 2603.5611778246744
Mean loss per sample: 12.510141677078623 Std loss per sample: 11.398239110693599 ratio: 0.9111199061460448
Epoch ended with duration 0:00:11.461079
Train perplexity: 5.433690743445796
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix bad test 039 cipher suites[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java 7 .[0m
Epoch Step: 5 / 8 Loss (mean): 68.00600293278694 Loss (std): 31.05318292535247 Loss ratio: 0.45662414472504104 Tokens per Sec: 4404.249107343339
Mean loss per sample: 69.58778389262372 Std loss per sample: 36.23409306397938 ratio: 0.5206961773619605
Epoch ended with duration 0:00:01.022430
b'BLEU = 0.80, 8.0/1.1/0.4/0.2 (BP=0.846, ratio=0.857, hyp_len=2667, ref_len=3113)\n'
Validation perplexity: 12461.400084320434
Validation accuracy: 0.0
Validation BLEU: 0.8
Model saved checkpoint_commit_msg_generator!
Epoch 151 / 1000
Epoch Step: 5 / 67 Loss (mean): 10.299020048230886 Loss (std): 4.353460392179646 Loss ratio: 0.42270627416901296 Tokens per Sec: 3284.454905875033
Epoch Step: 10 / 67 Loss (mean): 12.18916855379939 Loss (std): 4.795350869222524 Loss ratio: 0.3934108260179734 Tokens per Sec: 2779.0608682174834
Epoch Step: 15 / 67 Loss (mean): 12.40613610111177 Loss (std): 5.392202413801504 Loss ratio: 0.4346399531533662 Tokens per Sec: 2508.4393746957144
Epoch Step: 20 / 67 Loss (mean): 9.637288244441152 Loss (std): 5.896835675210344 Loss ratio: 0.611877068075833 Tokens per Sec: 2732.67853889259
Epoch Step: 25 / 67 Loss (mean): 10.370865364558995 Loss (std): 5.43878697701952 Loss ratio: 0.5244294266518805 Tokens per Sec: 2438.9868885702595
Epoch Step: 30 / 67 Loss (mean): 35.86696746945381 Loss (std): 20.983490967833347 Loss ratio: 0.5850366632111842 Tokens per Sec: 2799.970828972556
Epoch Step: 35 / 67 Loss (mean): 10.891073875129223 Loss (std): 6.146063310163768 Loss ratio: 0.5643211478161831 Tokens per Sec: 2860.0393521806645
Epoch Step: 40 / 67 Loss (mean): 9.887830913066864 Loss (std): 5.416804766437608 Loss ratio: 0.5478253839554688 Tokens per Sec: 2436.3171725600187
Epoch Step: 45 / 67 Loss (mean): 10.616788882762194 Loss (std): 5.930395470010088 Loss ratio: 0.5585865496147233 Tokens per Sec: 2591.8527560831426
Epoch Step: 50 / 67 Loss (mean): 10.71801036503166 Loss (std): 6.71979639735695 Loss ratio: 0.6269630433723787 Tokens per Sec: 3247.846208541192
Epoch Step: 55 / 67 Loss (mean): 11.311733348295093 Loss (std): 6.350866912576916 Loss ratio: 0.5614406490172543 Tokens per Sec: 2853.4618017877483
Epoch Step: 60 / 67 Loss (mean): 10.912583742290735 Loss (std): 5.355577390257617 Loss ratio: 0.49077079422562037 Tokens per Sec: 3163.41757259846
Epoch Step: 65 / 67 Loss (mean): 12.577244164422154 Loss (std): 6.34663058561565 Loss ratio: 0.5046121791583458 Tokens per Sec: 2371.493752632853
Mean loss per sample: 12.76194349421032 Std loss per sample: 11.764903502017738 ratio: 0.9218739690671013
Epoch ended with duration 0:00:11.442919
Train perplexity: 5.621999097568325
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix bad test 039 cipher suites[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java 7 .[0m
Epoch Step: 5 / 8 Loss (mean): 68.24500894546509 Loss (std): 30.660384662788292 Loss ratio: 0.4492692599291642 Tokens per Sec: 4441.570020757251
Mean loss per sample: 69.97596666167993 Std loss per sample: 35.79019078846414 ratio: 0.5114640425262389
Epoch ended with duration 0:00:01.029669
b'BLEU = 1.44, 8.4/1.4/0.8/0.7 (BP=0.885, ratio=0.891, hyp_len=2774, ref_len=3113)\n'
Validation perplexity: 13134.489957415397
Validation accuracy: 0.0
Validation BLEU: 1.44
Epoch 152 / 1000
Epoch Step: 5 / 67 Loss (mean): 10.931579284369946 Loss (std): 5.9638862723506225 Loss ratio: 0.5455649286537977 Tokens per Sec: 2933.8861858351374
Epoch Step: 10 / 67 Loss (mean): 10.688863506540656 Loss (std): 4.919662712132403 Loss ratio: 0.4602605982499446 Tokens per Sec: 3059.5495848672135
Epoch Step: 15 / 67 Loss (mean): 9.106184577569366 Loss (std): 5.69679939255104 Loss ratio: 0.6255967407671015 Tokens per Sec: 2584.252890932445
Epoch Step: 20 / 67 Loss (mean): 9.96832449361682 Loss (std): 5.300348550629739 Loss ratio: 0.531719102244695 Tokens per Sec: 3254.330308363416
Epoch Step: 25 / 67 Loss (mean): 9.530474899336696 Loss (std): 4.802457633439768 Loss ratio: 0.5039053860552123 Tokens per Sec: 2414.14139415346
Epoch Step: 30 / 67 Loss (mean): 8.861004704609513 Loss (std): 5.451672205468603 Loss ratio: 0.6152431227841051 Tokens per Sec: 2565.2959622708513
Epoch Step: 35 / 67 Loss (mean): 9.795191807672381 Loss (std): 5.443132417759251 Loss ratio: 0.5556943166233612 Tokens per Sec: 2524.1435621885203
Epoch Step: 40 / 67 Loss (mean): 10.073487542569637 Loss (std): 5.539806922397937 Loss ratio: 0.5499393232966457 Tokens per Sec: 2922.004181126956
Epoch Step: 45 / 67 Loss (mean): 9.718270566314459 Loss (std): 5.005401533959006 Loss ratio: 0.5150506460798453 Tokens per Sec: 2966.1448853979578
Epoch Step: 50 / 67 Loss (mean): 9.983140271157026 Loss (std): 5.914335233266883 Loss ratio: 0.5924323482015367 Tokens per Sec: 2882.5068802902365
Epoch Step: 55 / 67 Loss (mean): 9.048478299751878 Loss (std): 4.573945549936607 Loss ratio: 0.5054933435671753 Tokens per Sec: 2625.557660832996
Epoch Step: 60 / 67 Loss (mean): 9.057171454653144 Loss (std): 4.925589465590986 Loss ratio: 0.5438330819121738 Tokens per Sec: 2657.404177088793
Epoch Step: 65 / 67 Loss (mean): 10.219758791849017 Loss (std): 5.672468270845841 Loss ratio: 0.5550491343660711 Tokens per Sec: 3197.491237478617
Mean loss per sample: 10.108655733995548 Std loss per sample: 6.70175633339038 ratio: 0.6629720617403441
Epoch ended with duration 0:00:11.342730
Train perplexity: 3.926302861421009
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix java.lang.void.type ( void.class ) creation[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java 7 .[0m
Epoch Step: 5 / 8 Loss (mean): 68.11484953761101 Loss (std): 30.708726842376922 Loss ratio: 0.45083747598121715 Tokens per Sec: 4277.10041469435
Mean loss per sample: 70.90727451003966 Std loss per sample: 36.49039286714284 ratio: 0.5146212870158507
Epoch ended with duration 0:00:01.040895
b'BLEU = 1.33, 8.8/1.5/0.7/0.6 (BP=0.872, ratio=0.880, hyp_len=2738, ref_len=3113)\n'
Validation perplexity: 14901.330232760061
Validation accuracy: 0.0
Validation BLEU: 1.33
Epoch 153 / 1000
Epoch Step: 5 / 67 Loss (mean): 8.899504059925675 Loss (std): 5.21553936259512 Loss ratio: 0.5860483154427234 Tokens per Sec: 2522.5327207309165
Epoch Step: 10 / 67 Loss (mean): 8.69954692851752 Loss (std): 4.748510913493654 Loss ratio: 0.5458342776366679 Tokens per Sec: 2681.904214199359
Epoch Step: 15 / 67 Loss (mean): 9.410679822787642 Loss (std): 5.330354021181752 Loss ratio: 0.566415404790893 Tokens per Sec: 2687.72483336088
Epoch Step: 20 / 67 Loss (mean): 9.688843064010143 Loss (std): 5.0559570073588675 Loss ratio: 0.5218328931489827 Tokens per Sec: 2368.5777245404756
Epoch Step: 25 / 67 Loss (mean): 10.16293583996594 Loss (std): 5.806256520473908 Loss ratio: 0.5713168529157385 Tokens per Sec: 2856.8481665937093
Epoch Step: 30 / 67 Loss (mean): 10.348393386229873 Loss (std): 5.226422816890399 Loss ratio: 0.5050467857015329 Tokens per Sec: 3144.068524895868
Epoch Step: 35 / 67 Loss (mean): 10.036990063264966 Loss (std): 4.720159659302933 Loss ratio: 0.47027641051260505 Tokens per Sec: 2833.8497880065834
Epoch Step: 40 / 67 Loss (mean): 8.51782413199544 Loss (std): 5.910206091495849 Loss ratio: 0.693863362275277 Tokens per Sec: 3484.536941338245
Epoch Step: 45 / 67 Loss (mean): 10.19356575421989 Loss (std): 5.768200798905872 Loss ratio: 0.5658668358045346 Tokens per Sec: 3153.215070945978
Epoch Step: 50 / 67 Loss (mean): 11.734895754605532 Loss (std): 7.023220014799013 Loss ratio: 0.5984901921299682 Tokens per Sec: 3024.634593592253
Epoch Step: 55 / 67 Loss (mean): 10.366097137331963 Loss (std): 6.0014658131337155 Loss ratio: 0.5789513385438311 Tokens per Sec: 2461.4949657599545
Epoch Step: 60 / 67 Loss (mean): 8.896603078115731 Loss (std): 5.329004095576586 Loss ratio: 0.5989931267907312 Tokens per Sec: 2430.3891877773954
Epoch Step: 65 / 67 Loss (mean): 32.25912455841899 Loss (std): 20.820962937206247 Loss ratio: 0.6454286414220869 Tokens per Sec: 2649.462823747156
Mean loss per sample: 11.298609937854247 Std loss per sample: 9.767418203272772 ratio: 0.8644796357247936
Epoch ended with duration 0:00:11.403642
Train perplexity: 4.612171094916305
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix bad test 039 cipher suites[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java instead of regex[0m
Epoch Step: 5 / 8 Loss (mean): 68.59898325800896 Loss (std): 30.406557082927442 Loss ratio: 0.44325084190482467 Tokens per Sec: 4417.921203242884
Mean loss per sample: 70.17271461838581 Std loss per sample: 36.44597955527305 ratio: 0.519375369094299
Epoch ended with duration 0:00:01.020013
b'BLEU = 1.41, 8.5/1.6/0.7/0.6 (BP=0.912, ratio=0.916, hyp_len=2851, ref_len=3113)\n'
Validation perplexity: 13489.403668631374
Validation accuracy: 0.0
Validation BLEU: 1.41
Epoch 154 / 1000
Epoch Step: 5 / 67 Loss (mean): 35.312530886381865 Loss (std): 19.484211527513118 Loss ratio: 0.5517647995892337 Tokens per Sec: 3346.043358064737
Epoch Step: 10 / 67 Loss (mean): 9.273232627660036 Loss (std): 5.548553468156766 Loss ratio: 0.5983408042203792 Tokens per Sec: 2456.7643502694473
Epoch Step: 15 / 67 Loss (mean): 9.641652520745993 Loss (std): 5.826769163485368 Loss ratio: 0.6043330384441753 Tokens per Sec: 2831.7282791999487
Epoch Step: 20 / 67 Loss (mean): 5.485643186029934 Loss (std): 3.456115150239164 Loss ratio: 0.630029156661285 Tokens per Sec: 2658.7594076369764
Epoch Step: 25 / 67 Loss (mean): 30.773131606169045 Loss (std): 24.9309533197284 Loss ratio: 0.8101532739271334 Tokens per Sec: 2290.114518613223
Epoch Step: 30 / 67 Loss (mean): 10.744973585009575 Loss (std): 6.269375743195764 Loss ratio: 0.5834705589171699 Tokens per Sec: 2729.871285709465
Epoch Step: 35 / 67 Loss (mean): 9.963429793715477 Loss (std): 4.820019978890877 Loss ratio: 0.48377115899698997 Tokens per Sec: 2789.105273830929
Epoch Step: 40 / 67 Loss (mean): 9.31862876797095 Loss (std): 5.767505905657047 Loss ratio: 0.6189221664758807 Tokens per Sec: 2857.9554996222114
Epoch Step: 45 / 67 Loss (mean): 9.487059269100428 Loss (std): 4.951375013853065 Loss ratio: 0.521908304081098 Tokens per Sec: 2703.8928241683393
Epoch Step: 50 / 67 Loss (mean): 7.770234188996255 Loss (std): 4.8070800406605585 Loss ratio: 0.6186531736029346 Tokens per Sec: 2581.8563326745552
Epoch Step: 55 / 67 Loss (mean): 8.979203261435032 Loss (std): 5.927869602219794 Loss ratio: 0.6601776827660786 Tokens per Sec: 2638.7265329222378
Epoch Step: 60 / 67 Loss (mean): 9.601821463555098 Loss (std): 4.849187895136349 Loss ratio: 0.50502791720738 Tokens per Sec: 3202.7572801583397
Epoch Step: 65 / 67 Loss (mean): 10.218590181320906 Loss (std): 5.594168985952457 Loss ratio: 0.5474501752872261 Tokens per Sec: 2788.8730880043386
Mean loss per sample: 12.763392123813311 Std loss per sample: 12.257582740801437 ratio: 0.960370301397529
Epoch ended with duration 0:00:11.493086
Train perplexity: 5.623101112728723
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix bad test 039 cipher suites[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java 7 .[0m
Epoch Step: 5 / 8 Loss (mean): 68.21220925450325 Loss (std): 31.07159131152568 Loss ratio: 0.4555136338656908 Tokens per Sec: 4312.367026137817
Mean loss per sample: 70.93757473933893 Std loss per sample: 36.47998641659685 ratio: 0.5142547733079832
Epoch ended with duration 0:00:01.035074
b'BLEU = 1.39, 8.7/1.5/0.7/0.7 (BP=0.880, ratio=0.887, hyp_len=2760, ref_len=3113)\n'
Validation perplexity: 14962.644227931092
Validation accuracy: 0.0
Validation BLEU: 1.39
Epoch 155 / 1000
Epoch Step: 5 / 67 Loss (mean): 9.106108080595732 Loss (std): 5.231600172425395 Loss ratio: 0.5745154929111206 Tokens per Sec: 3638.5600316949462
Epoch Step: 10 / 67 Loss (mean): 11.586665093898773 Loss (std): 4.961144083382534 Loss ratio: 0.4281770503572196 Tokens per Sec: 3521.2853492726626
Epoch Step: 15 / 67 Loss (mean): 9.111359333619475 Loss (std): 5.6140192219435 Loss ratio: 0.6161560549180248 Tokens per Sec: 2423.916835994336
Epoch Step: 20 / 67 Loss (mean): 39.05834035947919 Loss (std): 21.81159204769642 Loss ratio: 0.5584362225058775 Tokens per Sec: 2919.5132011596233
Epoch Step: 25 / 67 Loss (mean): 39.679799335077405 Loss (std): 20.43140426108814 Loss ratio: 0.5149069451827227 Tokens per Sec: 2609.1789017821075
Epoch Step: 30 / 67 Loss (mean): 9.11345923691988 Loss (std): 5.605738180850429 Loss ratio: 0.6151054210173905 Tokens per Sec: 3008.0900906957318
Epoch Step: 35 / 67 Loss (mean): 9.748786007985473 Loss (std): 5.708442812408608 Loss ratio: 0.5855542226214301 Tokens per Sec: 2126.7924180902824
Epoch Step: 40 / 67 Loss (mean): 9.06686142180115 Loss (std): 5.936632394311682 Loss ratio: 0.6547615672207283 Tokens per Sec: 2544.295512539383
Epoch Step: 45 / 67 Loss (mean): 11.075365666300058 Loss (std): 5.374473746812713 Loss ratio: 0.4852637744653501 Tokens per Sec: 2979.4772080295484
Epoch Step: 50 / 67 Loss (mean): 8.928970044478774 Loss (std): 5.433100558808874 Loss ratio: 0.6084800970038454 Tokens per Sec: 2514.3644215521617
Epoch Step: 55 / 67 Loss (mean): 10.821558630093932 Loss (std): 6.311502891180141 Loss ratio: 0.5832341815926896 Tokens per Sec: 2612.66445948285
Epoch Step: 60 / 67 Loss (mean): 10.82415496185422 Loss (std): 6.245230074672532 Loss ratio: 0.5769716062530114 Tokens per Sec: 3016.5468214499124
Epoch Step: 65 / 67 Loss (mean): 9.878911493346095 Loss (std): 5.077922638879028 Loss ratio: 0.5140164118586592 Tokens per Sec: 2785.1017810202793
Mean loss per sample: 11.339577476822793 Std loss per sample: 10.390390165374548 ratio: 0.9162942963802391
Epoch ended with duration 0:00:11.411707
Train perplexity: 4.63780686371399
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix bad test 039 cipher suites[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api and gb2312han[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use shell instead of adb and ignore case in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 68.13963511586189 Loss (std): 30.595785241107734 Loss ratio: 0.44901598297501727 Tokens per Sec: 4434.161458305629
Mean loss per sample: 69.89869375893328 Std loss per sample: 35.87502997117214 ratio: 0.5132432101649567
Epoch ended with duration 0:00:01.015079
b'BLEU = 1.56, 7.9/1.6/0.8/0.7 (BP=0.943, ratio=0.944, hyp_len=2940, ref_len=3113)\n'
Validation perplexity: 12997.665041941527
Validation accuracy: 0.0
Validation BLEU: 1.56
Model saved checkpoint_commit_msg_generator!
Epoch 156 / 1000
Epoch Step: 5 / 67 Loss (mean): 8.925366807729006 Loss (std): 5.024909375327275 Loss ratio: 0.5629919177076181 Tokens per Sec: 3048.156184345407
Epoch Step: 10 / 67 Loss (mean): 9.084354432299733 Loss (std): 4.692839083740059 Loss ratio: 0.5165847632556595 Tokens per Sec: 3077.482557724119
Epoch Step: 15 / 67 Loss (mean): 9.939036946743727 Loss (std): 5.526153634047188 Loss ratio: 0.5560049392771089 Tokens per Sec: 2746.285143880922
Epoch Step: 20 / 67 Loss (mean): 9.98741963878274 Loss (std): 5.082437354228772 Loss ratio: 0.5088839297883169 Tokens per Sec: 3174.9525320537305
Epoch Step: 25 / 67 Loss (mean): 8.681279048323631 Loss (std): 4.733781118685816 Loss ratio: 0.5452861372541546 Tokens per Sec: 2388.3164898392433
Epoch Step: 30 / 67 Loss (mean): 9.333227191120386 Loss (std): 4.979523326387975 Loss ratio: 0.5335264238639217 Tokens per Sec: 2105.9215886864195
Epoch Step: 35 / 67 Loss (mean): 9.85989210382104 Loss (std): 5.396376421598909 Loss ratio: 0.5473058289864685 Tokens per Sec: 3122.6594224797573
Epoch Step: 40 / 67 Loss (mean): 9.490367416292429 Loss (std): 5.177716760479605 Loss ratio: 0.5455760070564651 Tokens per Sec: 2890.403315292042
Epoch Step: 45 / 67 Loss (mean): 10.895061861723661 Loss (std): 5.353918453695 Loss ratio: 0.49140780673346074 Tokens per Sec: 2339.9804259423895
Epoch Step: 50 / 67 Loss (mean): 9.793942222371697 Loss (std): 5.242603866401599 Loss ratio: 0.5352904629584442 Tokens per Sec: 2759.442971531636
Epoch Step: 55 / 67 Loss (mean): 9.6387595012784 Loss (std): 5.130518069148234 Loss ratio: 0.5322799130394079 Tokens per Sec: 3039.4448727949257
Epoch Step: 60 / 67 Loss (mean): 9.753000078722835 Loss (std): 5.572540751884425 Loss ratio: 0.5713668314267208 Tokens per Sec: 3507.029762553376
Epoch Step: 65 / 67 Loss (mean): 9.2154286429286 Loss (std): 5.624890578974766 Loss ratio: 0.610377530652466 Tokens per Sec: 2685.2208674711287
Mean loss per sample: 10.007782318676043 Std loss per sample: 7.347704307129564 ratio: 0.7341990536122704
Epoch ended with duration 0:00:11.354306
Train perplexity: 3.8730801352845967
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix bad test 039 cipher suites[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use generic instead of assuming in java 7[0m
Epoch Step: 5 / 8 Loss (mean): 68.576052069664 Loss (std): 31.23952589957565 Loss ratio: 0.45554570373693304 Tokens per Sec: 4410.803237306184
Mean loss per sample: 70.67585694496749 Std loss per sample: 37.050548756813754 ratio: 0.5242320412989624
Epoch ended with duration 0:00:01.023068
b'BLEU = 1.29, 8.5/1.4/0.6/0.6 (BP=0.924, ratio=0.926, hyp_len=2884, ref_len=3113)\n'
Validation perplexity: 14441.258179100887
Validation accuracy: 0.0
Validation BLEU: 1.29
Epoch 157 / 1000
Epoch Step: 5 / 67 Loss (mean): 7.994426354765892 Loss (std): 4.810309447199263 Loss ratio: 0.6017078941920064 Tokens per Sec: 2733.28142794964
Epoch Step: 10 / 67 Loss (mean): 9.193465070798993 Loss (std): 6.449296766131813 Loss ratio: 0.7015088126691835 Tokens per Sec: 2607.1824806615264
Epoch Step: 15 / 67 Loss (mean): 8.927939500659704 Loss (std): 5.352352203034852 Loss ratio: 0.5995058773235813 Tokens per Sec: 2686.4633128866485
Epoch Step: 20 / 67 Loss (mean): 9.9630491649732 Loss (std): 5.530350096866396 Loss ratio: 0.5550860991742654 Tokens per Sec: 2917.4706392436096
Epoch Step: 25 / 67 Loss (mean): 9.859130438417196 Loss (std): 5.0688152840113885 Loss ratio: 0.5141239702296855 Tokens per Sec: 2507.71012601651
Epoch Step: 30 / 67 Loss (mean): 10.64079088717699 Loss (std): 4.96065192829575 Loss ratio: 0.4661920322364134 Tokens per Sec: 2681.8539927289153
Epoch Step: 35 / 67 Loss (mean): 11.142929119989276 Loss (std): 6.056074835648766 Loss ratio: 0.5434903848382906 Tokens per Sec: 2857.7018607057707
Epoch Step: 40 / 67 Loss (mean): 10.12892116419971 Loss (std): 5.532489888616152 Loss ratio: 0.5462072217691386 Tokens per Sec: 3160.820444445514
Epoch Step: 45 / 67 Loss (mean): 9.201427167281508 Loss (std): 5.371382774399284 Loss ratio: 0.5837553975864613 Tokens per Sec: 2528.062146041708
Epoch Step: 50 / 67 Loss (mean): 33.7120745126158 Loss (std): 21.730437444061785 Loss ratio: 0.6445891496807702 Tokens per Sec: 2738.722610556308
Epoch Step: 55 / 67 Loss (mean): 4.936425889531772 Loss (std): 3.094557738604025 Loss ratio: 0.6268822439259893 Tokens per Sec: 2484.4023131232266
Epoch Step: 60 / 67 Loss (mean): 10.200303006917238 Loss (std): 5.962563435816835 Loss ratio: 0.5845476778261763 Tokens per Sec: 3122.1992325971996
Epoch Step: 65 / 67 Loss (mean): 9.1239964235574 Loss (std): 5.440591739147904 Loss ratio: 0.596294812775326 Tokens per Sec: 2919.3212039007367
Mean loss per sample: 11.104406911787214 Std loss per sample: 10.431415609944715 ratio: 0.9393942146403041
Epoch ended with duration 0:00:11.432901
Train perplexity: 4.492561753522016
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length in randomaccessfile ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java instead of mismatch[0m
Epoch Step: 5 / 8 Loss (mean): 69.14614748954773 Loss (std): 31.093496228158443 Loss ratio: 0.4496779264941492 Tokens per Sec: 4403.427091376015
Mean loss per sample: 71.59149391338474 Std loss per sample: 36.98889596030514 ratio: 0.5166660721601412
Epoch ended with duration 0:00:01.034684
b'BLEU = 1.59, 8.7/1.8/0.8/0.7 (BP=0.916, ratio=0.920, hyp_len=2863, ref_len=3113)\n'
Validation perplexity: 16349.126502830935
Validation accuracy: 0.0
Validation BLEU: 1.59
Model saved best_on_validation_commit_msg_generator!
Epoch 158 / 1000
Epoch Step: 5 / 67 Loss (mean): 9.349459920078516 Loss (std): 4.953696545718784 Loss ratio: 0.5298377219715578 Tokens per Sec: 2649.600392521296
Epoch Step: 10 / 67 Loss (mean): 7.958891132846475 Loss (std): 4.824686723521709 Loss ratio: 0.6062008693158457 Tokens per Sec: 2624.7938275903884
Epoch Step: 15 / 67 Loss (mean): 8.872744668275118 Loss (std): 4.761070743557537 Loss ratio: 0.5365950358721525 Tokens per Sec: 3108.125234881567
Epoch Step: 20 / 67 Loss (mean): 9.347530556842685 Loss (std): 5.890420828415033 Loss ratio: 0.6301579644586517 Tokens per Sec: 2802.9691732410774
Epoch Step: 25 / 67 Loss (mean): 34.49007102102041 Loss (std): 21.08545053127874 Loss ratio: 0.6113484230991565 Tokens per Sec: 2244.938744512032
Epoch Step: 30 / 67 Loss (mean): 28.056853292509913 Loss (std): 18.03630228116655 Loss ratio: 0.642848365535758 Tokens per Sec: 2794.0259920424883
Epoch Step: 35 / 67 Loss (mean): 9.56366949249059 Loss (std): 5.175378078824406 Loss ratio: 0.5411498256906643 Tokens per Sec: 2720.8544903220636
Epoch Step: 40 / 67 Loss (mean): 40.10142734646797 Loss (std): 20.253117450734553 Loss ratio: 0.5050472960912797 Tokens per Sec: 2952.967930185027
Epoch Step: 45 / 67 Loss (mean): 7.837431830121204 Loss (std): 4.877462784321914 Loss ratio: 0.622329213196676 Tokens per Sec: 2528.9893880930754
Epoch Step: 50 / 67 Loss (mean): 8.783846030011773 Loss (std): 5.00565992687263 Loss ratio: 0.5698710917483968 Tokens per Sec: 2719.808079431979
Epoch Step: 55 / 67 Loss (mean): 44.83299562335014 Loss (std): 18.293805398582062 Loss ratio: 0.4080433427262262 Tokens per Sec: 3563.971359139659
Epoch Step: 60 / 67 Loss (mean): 9.486123993992805 Loss (std): 5.124935422772763 Loss ratio: 0.5402560019264123 Tokens per Sec: 2869.214680644504
Epoch Step: 65 / 67 Loss (mean): 10.724026288837194 Loss (std): 6.030322042915264 Loss ratio: 0.5623188418693378 Tokens per Sec: 2659.5549546250522
Mean loss per sample: 12.297292391783996 Std loss per sample: 12.29421872630415 ratio: 0.999750053476658
Epoch ended with duration 0:00:11.447597
Train perplexity: 5.279440627999959
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix bad exceptions ( ) creation[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api parity[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java 7 . )[0m
Epoch Step: 5 / 8 Loss (mean): 69.03335851430893 Loss (std): 31.263933695114012 Loss ratio: 0.45288153970712236 Tokens per Sec: 4307.603916686654
Mean loss per sample: 71.63948417393888 Std loss per sample: 36.721047354172235 ratio: 0.5125811244678207
Epoch ended with duration 0:00:01.036825
b'BLEU = 1.50, 8.0/1.7/0.8/0.8 (BP=0.879, ratio=0.886, hyp_len=2758, ref_len=3113)\n'
Validation perplexity: 16455.80020157676
Validation accuracy: 0.0
Validation BLEU: 1.5
Epoch 159 / 1000
Epoch Step: 5 / 67 Loss (mean): 33.11101393587887 Loss (std): 21.56446549418001 Loss ratio: 0.6512777148999626 Tokens per Sec: 2729.9018016018113
Epoch Step: 10 / 67 Loss (mean): 8.122226534411311 Loss (std): 4.713036646038988 Loss ratio: 0.5802641216754223 Tokens per Sec: 3047.4013019075182
Epoch Step: 15 / 67 Loss (mean): 10.426319101825356 Loss (std): 5.688724780530105 Loss ratio: 0.545611996426828 Tokens per Sec: 3410.2248724964957
Epoch Step: 20 / 67 Loss (mean): 8.778704748488963 Loss (std): 5.274984554834918 Loss ratio: 0.6008841515877245 Tokens per Sec: 2834.960616908692
Epoch Step: 25 / 67 Loss (mean): 7.989505068399012 Loss (std): 4.737851766773709 Loss ratio: 0.5930094200094311 Tokens per Sec: 2699.3111590548383
Epoch Step: 30 / 67 Loss (mean): 8.370690301293507 Loss (std): 4.510801420974312 Loss ratio: 0.5388804577177185 Tokens per Sec: 2535.323924718857
Epoch Step: 35 / 67 Loss (mean): 9.033465810120106 Loss (std): 5.5624399854481945 Loss ratio: 0.6157592337612708 Tokens per Sec: 3131.667012075968
Epoch Step: 40 / 67 Loss (mean): 9.77770826779306 Loss (std): 5.531661185926099 Loss ratio: 0.5657420976801815 Tokens per Sec: 2678.5376307687725
Epoch Step: 45 / 67 Loss (mean): 37.71757859364152 Loss (std): 24.396260542140215 Loss ratio: 0.64681407056849 Tokens per Sec: 2985.188886500929
Epoch Step: 50 / 67 Loss (mean): 7.6630125269293785 Loss (std): 5.045686793825538 Loss ratio: 0.6584468935805562 Tokens per Sec: 2112.1347537080323
Epoch Step: 55 / 67 Loss (mean): 8.430880853906274 Loss (std): 6.020287655789543 Loss ratio: 0.7140757603044725 Tokens per Sec: 2941.30180928971
Epoch Step: 60 / 67 Loss (mean): 30.28865653090179 Loss (std): 19.414260152840363 Loss ratio: 0.640974621407625 Tokens per Sec: 2752.651510080014
Epoch Step: 65 / 67 Loss (mean): 10.403464963659644 Loss (std): 6.104603604333829 Loss ratio: 0.5867856166823099 Tokens per Sec: 2464.077091520817
Mean loss per sample: 11.380565626348513 Std loss per sample: 11.058661170117206 ratio: 0.9717145468160188
Epoch ended with duration 0:00:11.411641
Train perplexity: 4.663598128365163
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print in randomaccessfile ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api parity[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java instead of string[0m
Epoch Step: 5 / 8 Loss (mean): 68.3059858083725 Loss (std): 31.243716429472315 Loss ratio: 0.45740817674638795 Tokens per Sec: 4436.525257829346
Mean loss per sample: 71.70991145782783 Std loss per sample: 37.296768052346074 ratio: 0.5201061791058001
Epoch ended with duration 0:00:01.034335
b'BLEU = 1.39, 8.0/1.6/0.7/0.7 (BP=0.864, ratio=0.872, hyp_len=2716, ref_len=3113)\n'
Validation perplexity: 16613.608843366652
Validation accuracy: 0.0
Validation BLEU: 1.39
Epoch 160 / 1000
Epoch Step: 5 / 67 Loss (mean): 35.903584867715836 Loss (std): 22.241187476404843 Loss ratio: 0.6194698261566607 Tokens per Sec: 3027.520384556033
Epoch Step: 10 / 67 Loss (mean): 9.276529653929174 Loss (std): 5.21423655343348 Loss ratio: 0.5620891376361777 Tokens per Sec: 2520.875354109132
Epoch Step: 15 / 67 Loss (mean): 8.472251456230879 Loss (std): 5.0742587313666885 Loss ratio: 0.5989268328001346 Tokens per Sec: 2289.5577265265006
Epoch Step: 20 / 67 Loss (mean): 8.997853237204254 Loss (std): 4.733876059422165 Loss ratio: 0.5261117218325557 Tokens per Sec: 2623.89191085486
Epoch Step: 25 / 67 Loss (mean): 9.902148114517331 Loss (std): 5.632069146917661 Loss ratio: 0.5687724604584133 Tokens per Sec: 3085.6541703705975
Epoch Step: 30 / 67 Loss (mean): 8.964414931833744 Loss (std): 5.0037140460088025 Loss ratio: 0.5581751942605865 Tokens per Sec: 3106.43631127603
Epoch Step: 35 / 67 Loss (mean): 8.649951085913926 Loss (std): 5.7777098607566435 Loss ratio: 0.6679471136160985 Tokens per Sec: 2992.4867196994905
Epoch Step: 40 / 67 Loss (mean): 8.105612772749737 Loss (std): 4.692878390452772 Loss ratio: 0.5789665164156079 Tokens per Sec: 2771.5362655087606
Epoch Step: 45 / 67 Loss (mean): 10.127948518842459 Loss (std): 4.956392426095299 Loss ratio: 0.48937772707614174 Tokens per Sec: 3366.0299816011407
Epoch Step: 50 / 67 Loss (mean): 8.652948496863246 Loss (std): 4.54817469192022 Loss ratio: 0.5256213756003477 Tokens per Sec: 2982.0698337744766
Epoch Step: 55 / 67 Loss (mean): 32.616016156971455 Loss (std): 20.659281578143716 Loss ratio: 0.6334091042485559 Tokens per Sec: 2313.9207489657147
Epoch Step: 60 / 67 Loss (mean): 9.12111965380609 Loss (std): 5.282926694180592 Loss ratio: 0.5791971703798574 Tokens per Sec: 2672.0549968349164
Epoch Step: 65 / 67 Loss (mean): 9.767912680283189 Loss (std): 5.6783992366577 Loss ratio: 0.5813318999175445 Tokens per Sec: 2850.1509445704546
Mean loss per sample: 11.044325860684403 Std loss per sample: 10.68583249808222 ratio: 0.9675404939039016
Epoch ended with duration 0:00:11.404867
Train perplexity: 4.456189980290821
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print during keys ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java 7 .[0m
Epoch Step: 5 / 8 Loss (mean): 68.98134237527847 Loss (std): 31.5845327458345 Loss ratio: 0.4578706597793574 Tokens per Sec: 4415.705823696035
Mean loss per sample: 71.14231042686056 Std loss per sample: 37.42885566857718 ratio: 0.5261124560616673
Epoch ended with duration 0:00:01.019891
b'BLEU = 1.58, 8.5/1.6/1.0/0.9 (BP=0.864, ratio=0.872, hyp_len=2716, ref_len=3113)\n'
Validation perplexity: 15383.600862165635
Validation accuracy: 0.0
Validation BLEU: 1.58
Model saved checkpoint_commit_msg_generator!
Epoch 161 / 1000
Epoch Step: 5 / 67 Loss (mean): 31.83970340527594 Loss (std): 19.529154147245887 Loss ratio: 0.613358544791276 Tokens per Sec: 3127.2041476786503
Epoch Step: 10 / 67 Loss (mean): 7.589147585909814 Loss (std): 4.478095117507996 Loss ratio: 0.5900656255285022 Tokens per Sec: 2561.0919308207967
Epoch Step: 15 / 67 Loss (mean): 7.819923764560372 Loss (std): 4.4327184639227015 Loss ratio: 0.5668493194283595 Tokens per Sec: 2338.7528360009874
Epoch Step: 20 / 67 Loss (mean): 10.624421700835228 Loss (std): 5.18886250351749 Loss ratio: 0.4883901119163571 Tokens per Sec: 2973.9697074673413
Epoch Step: 25 / 67 Loss (mean): 11.783499762415886 Loss (std): 5.273982956400761 Loss ratio: 0.44757356156805106 Tokens per Sec: 3018.4784073802043
Epoch Step: 30 / 67 Loss (mean): 6.797747755423188 Loss (std): 4.831096502488696 Loss ratio: 0.7106907576313767 Tokens per Sec: 2844.163456829895
Epoch Step: 35 / 67 Loss (mean): 8.352130722254515 Loss (std): 4.893979385787021 Loss ratio: 0.5859557936212444 Tokens per Sec: 2536.8373902251788
Epoch Step: 40 / 67 Loss (mean): 7.873428096063435 Loss (std): 5.031182647164133 Loss ratio: 0.6390078864985925 Tokens per Sec: 3124.1800048590044
Epoch Step: 45 / 67 Loss (mean): 8.251081462949514 Loss (std): 4.393562020865677 Loss ratio: 0.5324831709145568 Tokens per Sec: 3115.6723561155936
Epoch Step: 50 / 67 Loss (mean): 9.03204317111522 Loss (std): 6.0183900009662015 Loss ratio: 0.6663376034575672 Tokens per Sec: 2759.0073317251363
Epoch Step: 55 / 67 Loss (mean): 7.305789896287024 Loss (std): 4.848723105379754 Loss ratio: 0.6636822539673624 Tokens per Sec: 2499.2030363944614
Epoch Step: 60 / 67 Loss (mean): 4.725956056799207 Loss (std): 2.9881693267726215 Loss ratio: 0.6322888513687211 Tokens per Sec: 2516.648993702416
Epoch Step: 65 / 67 Loss (mean): 8.100009065121412 Loss (std): 4.495468490890423 Loss ratio: 0.5549954888628312 Tokens per Sec: 2855.5365378829392
Mean loss per sample: 10.782680758196062 Std loss per sample: 10.267004557390017 ratio: 0.9521755106758519
Epoch ended with duration 0:00:11.426360
Train perplexity: 4.3011981729152895
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix bad test 039 cipher suites[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api parity[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java instead of long[0m
Epoch Step: 5 / 8 Loss (mean): 69.34818929433823 Loss (std): 30.787099250575505 Loss ratio: 0.44394957624494236 Tokens per Sec: 4305.99816196648
Mean loss per sample: 72.63376570822763 Std loss per sample: 35.664562835763356 ratio: 0.4910190527506057
Epoch ended with duration 0:00:01.050493
b'BLEU = 1.42, 8.5/1.4/0.7/0.6 (BP=0.956, ratio=0.957, hyp_len=2979, ref_len=3113)\n'
Validation perplexity: 18829.4280548832
Validation accuracy: 0.0
Validation BLEU: 1.42
Epoch 162 / 1000
Epoch Step: 5 / 67 Loss (mean): 7.938620411790907 Loss (std): 3.949016694409808 Loss ratio: 0.49744369796854065 Tokens per Sec: 2765.3992566570782
Epoch Step: 10 / 67 Loss (mean): 31.106092600151896 Loss (std): 21.06713328560585 Loss ratio: 0.6772671050784107 Tokens per Sec: 2647.448273412749
Epoch Step: 15 / 67 Loss (mean): 8.721784319728613 Loss (std): 5.981381588379351 Loss ratio: 0.6857979249555058 Tokens per Sec: 2598.5404339401157
Epoch Step: 20 / 67 Loss (mean): 28.192007657140493 Loss (std): 19.443963206297607 Loss ratio: 0.6896977130102625 Tokens per Sec: 2197.987810208321
Epoch Step: 25 / 67 Loss (mean): 9.05545036867261 Loss (std): 5.590785359516591 Loss ratio: 0.6173945118023009 Tokens per Sec: 2952.825614160628
Epoch Step: 30 / 67 Loss (mean): 9.434280019253492 Loss (std): 5.8455228953543195 Loss ratio: 0.6196045573615334 Tokens per Sec: 2766.7163817163364
Epoch Step: 35 / 67 Loss (mean): 9.172732567414641 Loss (std): 5.29512504276847 Loss ratio: 0.577268006436703 Tokens per Sec: 3076.421205106861
Epoch Step: 40 / 67 Loss (mean): 7.939464496448636 Loss (std): 4.907514263061415 Loss ratio: 0.6181165323248907 Tokens per Sec: 2765.381088995726
Epoch Step: 45 / 67 Loss (mean): 8.189324767328799 Loss (std): 5.130885368138685 Loss ratio: 0.6265333850976681 Tokens per Sec: 2825.815410337652
Epoch Step: 50 / 67 Loss (mean): 8.011677813250571 Loss (std): 4.815495805074616 Loss ratio: 0.6010595929244974 Tokens per Sec: 2922.992567525955
Epoch Step: 55 / 67 Loss (mean): 9.27404170203954 Loss (std): 5.741447595744705 Loss ratio: 0.6190879640407537 Tokens per Sec: 2414.886396022926
Epoch Step: 60 / 67 Loss (mean): 9.300649171695113 Loss (std): 4.732716503657259 Loss ratio: 0.5088587276316634 Tokens per Sec: 3294.789602390381
Epoch Step: 65 / 67 Loss (mean): 9.149526294320822 Loss (std): 4.037921206106566 Loss ratio: 0.44132571197843695 Tokens per Sec: 2887.932577121068
Mean loss per sample: 10.389094204611752 Std loss per sample: 9.660874158573106 ratio: 0.9299053380692818
Epoch ended with duration 0:00:11.406267
Train perplexity: 4.078141950486896
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length in a ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api parity[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in dex file[0m
Epoch Step: 5 / 8 Loss (mean): 69.26020497083664 Loss (std): 30.949938221519965 Loss ratio: 0.44686466398059377 Tokens per Sec: 4429.6905101925595
Mean loss per sample: 72.7599664139943 Std loss per sample: 36.36479656444916 ratio: 0.4997912774937033
Epoch ended with duration 0:00:01.050035
b'BLEU = 1.73, 8.1/1.8/1.0/0.8 (BP=0.923, ratio=0.925, hyp_len=2881, ref_len=3113)\n'
Validation perplexity: 19154.227034944262
Validation accuracy: 0.0
Validation BLEU: 1.73
Model saved best_on_validation_commit_msg_generator!
Epoch 163 / 1000
Epoch Step: 5 / 67 Loss (mean): 7.908551858738065 Loss (std): 4.918225454092576 Loss ratio: 0.6218869828435767 Tokens per Sec: 2859.183965469987
Epoch Step: 10 / 67 Loss (mean): 8.201113442890346 Loss (std): 4.660591314487323 Loss ratio: 0.5682876291057345 Tokens per Sec: 2723.468524016265
Epoch Step: 15 / 67 Loss (mean): 34.55981985293329 Loss (std): 22.117608509708674 Loss ratio: 0.6399804340366498 Tokens per Sec: 2475.916322322403
Epoch Step: 20 / 67 Loss (mean): 26.755858073476702 Loss (std): 22.34934492297597 Loss ratio: 0.835306603196967 Tokens per Sec: 2495.3518783185345
Epoch Step: 25 / 67 Loss (mean): 9.573857291601598 Loss (std): 5.598501355686138 Loss ratio: 0.5847696686054918 Tokens per Sec: 3154.5129436720285
Epoch Step: 30 / 67 Loss (mean): 8.49474660307169 Loss (std): 3.8322876843656966 Loss ratio: 0.4511361978684504 Tokens per Sec: 3143.277787073737
Epoch Step: 35 / 67 Loss (mean): 9.093594007194042 Loss (std): 5.167408611631211 Loss ratio: 0.5682471207251188 Tokens per Sec: 2131.39069272514
Epoch Step: 40 / 67 Loss (mean): 10.509066235274076 Loss (std): 6.3065971227379185 Loss ratio: 0.6001101317231771 Tokens per Sec: 3282.3654331372286
Epoch Step: 45 / 67 Loss (mean): 7.735412681475282 Loss (std): 5.244779180857422 Loss ratio: 0.6780218970627885 Tokens per Sec: 2546.166195421421
Epoch Step: 50 / 67 Loss (mean): 8.822213351726532 Loss (std): 4.26914544180823 Loss ratio: 0.48390866006122446 Tokens per Sec: 2510.591579957607
Epoch Step: 55 / 67 Loss (mean): 9.9808539301157 Loss (std): 5.3734367871038 Loss ratio: 0.5383744542027888 Tokens per Sec: 2782.623589160191
Epoch Step: 60 / 67 Loss (mean): 7.099749818909913 Loss (std): 4.530430463047929 Loss ratio: 0.6381112825949584 Tokens per Sec: 2666.918369436543
Epoch Step: 65 / 67 Loss (mean): 9.54542619921267 Loss (std): 4.908962761979938 Loss ratio: 0.5142738165410404 Tokens per Sec: 3862.700300562889
Mean loss per sample: 10.221009001851892 Std loss per sample: 9.628021765539454 ratio: 0.9419834933904279
Epoch ended with duration 0:00:11.397324
Train perplexity: 3.986443980024395
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings in switch ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api parity[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use collections instead of concatenation in method_1[0m
Epoch Step: 5 / 8 Loss (mean): 69.38721495866776 Loss (std): 31.803042850090346 Loss ratio: 0.4583415384092679 Tokens per Sec: 4429.839592700168
Mean loss per sample: 71.65466982272805 Std loss per sample: 37.854534757620655 ratio: 0.5282912453755194
Epoch ended with duration 0:00:01.017118
b'BLEU = 1.61, 8.3/1.7/0.9/0.8 (BP=0.891, ratio=0.897, hyp_len=2791, ref_len=3113)\n'
Validation perplexity: 16489.699913500393
Validation accuracy: 0.0
Validation BLEU: 1.61
Epoch 164 / 1000
Epoch Step: 5 / 67 Loss (mean): 7.3732456881552935 Loss (std): 4.6162449604121045 Loss ratio: 0.626080447560271 Tokens per Sec: 2743.2458222479363
Epoch Step: 10 / 67 Loss (mean): 7.049523763125762 Loss (std): 4.578528245097568 Loss ratio: 0.6494805037819245 Tokens per Sec: 2954.0492378816434
Epoch Step: 15 / 67 Loss (mean): 8.047838039696217 Loss (std): 5.300298787358868 Loss ratio: 0.65859908725983 Tokens per Sec: 2660.275889140203
Epoch Step: 20 / 67 Loss (mean): 9.443110320717096 Loss (std): 4.772797955193819 Loss ratio: 0.5054264742330554 Tokens per Sec: 2707.747196407381
Epoch Step: 25 / 67 Loss (mean): 8.928051438182592 Loss (std): 4.785876469443347 Loss ratio: 0.5360493835167204 Tokens per Sec: 2767.5779801458457
Epoch Step: 30 / 67 Loss (mean): 7.571722520515323 Loss (std): 4.609944240157859 Loss ratio: 0.6088369228623175 Tokens per Sec: 2641.8017608332693
Epoch Step: 35 / 67 Loss (mean): 6.781285277567804 Loss (std): 4.101612238984845 Loss ratio: 0.6048428979315763 Tokens per Sec: 2224.3499735178234
Epoch Step: 40 / 67 Loss (mean): 8.889869794249535 Loss (std): 5.117816957839011 Loss ratio: 0.5756908792015718 Tokens per Sec: 2926.517915302907
Epoch Step: 45 / 67 Loss (mean): 8.66666043549776 Loss (std): 4.721529444705631 Loss ratio: 0.5447922506997881 Tokens per Sec: 2338.139143141111
Epoch Step: 50 / 67 Loss (mean): 7.88274753652513 Loss (std): 4.645125897972552 Loss ratio: 0.5892775173185636 Tokens per Sec: 3459.636395826521
Epoch Step: 55 / 67 Loss (mean): 9.067335667088628 Loss (std): 4.3676307285474 Loss ratio: 0.48168843515967186 Tokens per Sec: 2685.5376482071833
Epoch Step: 60 / 67 Loss (mean): 27.433335576206446 Loss (std): 18.880364253730228 Loss ratio: 0.6882270732730582 Tokens per Sec: 2992.737822726476
Epoch Step: 65 / 67 Loss (mean): 8.997246569022536 Loss (std): 5.294567635167595 Loss ratio: 0.5884653259805903 Tokens per Sec: 2969.3594140977184
Mean loss per sample: 10.698709845584824 Std loss per sample: 10.304561775263167 ratio: 0.9631592896703974
Epoch ended with duration 0:00:11.421858
Train perplexity: 4.252607772277296
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print in randomaccessfile ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java instead of password[0m
Epoch Step: 5 / 8 Loss (mean): 69.47222566604614 Loss (std): 31.797460023896257 Loss ratio: 0.4577003215176529 Tokens per Sec: 4416.442736747579
Mean loss per sample: 71.48309583644398 Std loss per sample: 37.44673004853285 ratio: 0.5238543408110413
Epoch ended with duration 0:00:01.025961
b'BLEU = 1.67, 8.0/1.7/1.0/0.9 (BP=0.893, ratio=0.898, hyp_len=2796, ref_len=3113)\n'
Validation perplexity: 16110.715183971957
Validation accuracy: 0.0
Validation BLEU: 1.67
Epoch 165 / 1000
Epoch Step: 5 / 67 Loss (mean): 4.284208702899161 Loss (std): 3.057112272463664 Loss ratio: 0.7135768783614324 Tokens per Sec: 2295.673967874685
Epoch Step: 10 / 67 Loss (mean): 6.640000260435045 Loss (std): 4.4380934393177265 Loss ratio: 0.668387539946715 Tokens per Sec: 2807.3935945252756
Epoch Step: 15 / 67 Loss (mean): 7.983648855239153 Loss (std): 4.72542104467877 Loss ratio: 0.5918873851243822 Tokens per Sec: 2719.0709386515623
Epoch Step: 20 / 67 Loss (mean): 8.104638138785958 Loss (std): 4.550655736618982 Loss ratio: 0.5614878368031186 Tokens per Sec: 2922.7434953885486
Epoch Step: 25 / 67 Loss (mean): 7.311992253176868 Loss (std): 4.25884879198028 Loss ratio: 0.5824471148926508 Tokens per Sec: 2406.9849660246523
Epoch Step: 30 / 67 Loss (mean): 8.723834889940917 Loss (std): 4.288151978760264 Loss ratio: 0.4915443761670397 Tokens per Sec: 2850.1355000669646
Epoch Step: 35 / 67 Loss (mean): 7.934729058295488 Loss (std): 4.928255292736717 Loss ratio: 0.6210993792641721 Tokens per Sec: 3220.64468148602
Epoch Step: 40 / 67 Loss (mean): 8.235245734453201 Loss (std): 5.235142848808819 Loss ratio: 0.6356996521557251 Tokens per Sec: 2664.5370983623816
Epoch Step: 45 / 67 Loss (mean): 8.74218000471592 Loss (std): 4.854457545933053 Loss ratio: 0.5552914196818577 Tokens per Sec: 2812.8943316341547
Epoch Step: 50 / 67 Loss (mean): 31.08227787911892 Loss (std): 23.876399800067205 Loss ratio: 0.7681676321447269 Tokens per Sec: 2767.0773743364084
Epoch Step: 55 / 67 Loss (mean): 29.56564086675644 Loss (std): 19.831736042769116 Loss ratio: 0.6707696996031596 Tokens per Sec: 2547.1099127938137
Epoch Step: 60 / 67 Loss (mean): 9.542091390118003 Loss (std): 5.53681744257939 Loss ratio: 0.5802519821088109 Tokens per Sec: 2844.360537694572
Epoch Step: 65 / 67 Loss (mean): 8.692491265013814 Loss (std): 4.83323882758295 Loss ratio: 0.5560245826229506 Tokens per Sec: 2790.639292445856
Mean loss per sample: 11.520930580199254 Std loss per sample: 12.148052062446105 ratio: 1.0544332315763338
Epoch ended with duration 0:00:11.457254
Train perplexity: 4.753012459086596
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix bad exceptions exception in gettext[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java 7 . )[0m
Epoch Step: 5 / 8 Loss (mean): 70.06532341241837 Loss (std): 31.381284752018775 Loss ratio: 0.44788610433298537 Tokens per Sec: 4416.741081008051
Mean loss per sample: 71.99929744200628 Std loss per sample: 37.43457168876822 ratio: 0.5199296801322385
Epoch ended with duration 0:00:01.018938
b'BLEU = 1.38, 7.6/1.3/0.7/0.7 (BP=0.932, ratio=0.934, hyp_len=2907, ref_len=3113)\n'
Validation perplexity: 17278.088768634494
Validation accuracy: 0.0
Validation BLEU: 1.38
Model saved checkpoint_commit_msg_generator!
Epoch 166 / 1000
Epoch Step: 5 / 67 Loss (mean): 25.720502207055688 Loss (std): 18.327411754648633 Loss ratio: 0.7125604160878721 Tokens per Sec: 2110.5967055484034
Epoch Step: 10 / 67 Loss (mean): 8.472881706431508 Loss (std): 4.359539691178344 Loss ratio: 0.5145285679922982 Tokens per Sec: 3046.8201377969917
Epoch Step: 15 / 67 Loss (mean): 8.763512713834643 Loss (std): 5.026132690946821 Loss ratio: 0.5735294573159283 Tokens per Sec: 2898.575948578023
Epoch Step: 20 / 67 Loss (mean): 9.60353073105216 Loss (std): 4.8037086848258355 Loss ratio: 0.5002023546708162 Tokens per Sec: 2791.6493569462864
Epoch Step: 25 / 67 Loss (mean): 8.308349763043225 Loss (std): 5.013552171758971 Loss ratio: 0.6034353770299845 Tokens per Sec: 2249.1392258141636
Epoch Step: 30 / 67 Loss (mean): 7.867219056468457 Loss (std): 4.230605272561675 Loss ratio: 0.5377510454705409 Tokens per Sec: 2774.600336602517
Epoch Step: 35 / 67 Loss (mean): 9.666468744166195 Loss (std): 5.7190416289998645 Loss ratio: 0.5916371097202751 Tokens per Sec: 3010.130206187491
Epoch Step: 40 / 67 Loss (mean): 7.891631234437227 Loss (std): 5.344630323735166 Loss ratio: 0.6772529233769127 Tokens per Sec: 2328.4623113127486
Epoch Step: 45 / 67 Loss (mean): 9.207765249535441 Loss (std): 5.260638912202227 Loss ratio: 0.5713263500573759 Tokens per Sec: 2815.0138486335736
Epoch Step: 50 / 67 Loss (mean): 8.96703593339771 Loss (std): 4.372719089359762 Loss ratio: 0.48764375673722654 Tokens per Sec: 2773.8387847366607
Epoch Step: 55 / 67 Loss (mean): 8.5471649505198 Loss (std): 4.123727626825818 Loss ratio: 0.48246730356772055 Tokens per Sec: 3115.0919326255867
Epoch Step: 60 / 67 Loss (mean): 7.941634397953749 Loss (std): 4.992625023905674 Loss ratio: 0.6286646770332415 Tokens per Sec: 2874.687827829474
Epoch Step: 65 / 67 Loss (mean): 8.619651610031724 Loss (std): 4.927786911806005 Loss ratio: 0.5716921210679731 Tokens per Sec: 3227.468034062334
Mean loss per sample: 10.88482470363658 Std loss per sample: 10.764410789426408 ratio: 0.9889374503045564
Epoch ended with duration 0:00:11.469895
Train perplexity: 4.361053581976001
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix exception # method_1 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for big5han[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use generic instead of adb in android n[0m
Epoch Step: 5 / 8 Loss (mean): 70.01342049241066 Loss (std): 31.52905473659929 Loss ratio: 0.450328730047077 Tokens per Sec: 4274.061390458595
Mean loss per sample: 72.68089143174593 Std loss per sample: 36.64895250275959 ratio: 0.504244675330879
Epoch ended with duration 0:00:01.040015
b'BLEU = 1.35, 7.9/1.4/0.7/0.7 (BP=0.883, ratio=0.889, hyp_len=2768, ref_len=3113)\n'
Validation perplexity: 18950.06473661247
Validation accuracy: 0.0
Validation BLEU: 1.35
Epoch 167 / 1000
Epoch Step: 5 / 67 Loss (mean): 9.692895443178713 Loss (std): 5.756717981742847 Loss ratio: 0.5939110780147829 Tokens per Sec: 2848.243989871157
Epoch Step: 10 / 67 Loss (mean): 8.079372899606824 Loss (std): 5.094529995456105 Loss ratio: 0.6305600767237797 Tokens per Sec: 2833.3969225252217
Epoch Step: 15 / 67 Loss (mean): 7.337328543420881 Loss (std): 5.069424065179705 Loss ratio: 0.6909086917915479 Tokens per Sec: 2497.0634382497533
Epoch Step: 20 / 67 Loss (mean): 8.713273517787457 Loss (std): 4.194207190329159 Loss ratio: 0.481358376018728 Tokens per Sec: 2974.3049093351037
Epoch Step: 25 / 67 Loss (mean): 7.87889301776886 Loss (std): 4.6725196852277895 Loss ratio: 0.5930426615376168 Tokens per Sec: 2291.0975869390354
Epoch Step: 30 / 67 Loss (mean): 8.26127390563488 Loss (std): 5.747426580659653 Loss ratio: 0.6957070599897949 Tokens per Sec: 2975.5886271648483
Epoch Step: 35 / 67 Loss (mean): 8.618364517576993 Loss (std): 5.614911707747829 Loss ratio: 0.6515054795253 Tokens per Sec: 2826.6370737268826
Epoch Step: 40 / 67 Loss (mean): 8.042719115503132 Loss (std): 4.86789691112754 Loss ratio: 0.6052551184765597 Tokens per Sec: 2483.0686378294945
Epoch Step: 45 / 67 Loss (mean): 7.966536398977041 Loss (std): 4.520024730293561 Loss ratio: 0.5673763984652055 Tokens per Sec: 2687.139459932141
Epoch Step: 50 / 67 Loss (mean): 8.782364493235946 Loss (std): 5.036287142277703 Loss ratio: 0.573454580045793 Tokens per Sec: 2894.674446681924
Epoch Step: 55 / 67 Loss (mean): 31.77529556583613 Loss (std): 23.08693703006821 Loss ratio: 0.7265687578651703 Tokens per Sec: 3074.58554253127
Epoch Step: 60 / 67 Loss (mean): 9.654410666786134 Loss (std): 5.847869758376873 Loss ratio: 0.6057200133919283 Tokens per Sec: 2851.300825967651
Epoch Step: 65 / 67 Loss (mean): 8.527980081737041 Loss (std): 5.170410473360924 Loss ratio: 0.6062878224157129 Tokens per Sec: 2602.912249086555
Mean loss per sample: 10.805876288777833 Std loss per sample: 10.885298646758972 ratio: 1.0073499229362473
Epoch ended with duration 0:00:11.445533
Train perplexity: 4.314718036392648
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print when getting stack trace ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api parity[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java instead of password[0m
Epoch Step: 5 / 8 Loss (mean): 69.59905734658241 Loss (std): 31.042938734969116 Loss ratio: 0.446025275606602 Tokens per Sec: 4325.054851076507
Mean loss per sample: 72.52650591682215 Std loss per sample: 36.92600065698538 ratio: 0.5091380067217686
Epoch ended with duration 0:00:01.029476
b'BLEU = 1.71, 8.0/1.8/0.9/0.8 (BP=0.928, ratio=0.931, hyp_len=2898, ref_len=3113)\n'
Validation perplexity: 18557.71016701671
Validation accuracy: 0.0
Validation BLEU: 1.71
Epoch 168 / 1000
Epoch Step: 5 / 67 Loss (mean): 7.543277584016323 Loss (std): 4.150523779792661 Loss ratio: 0.55022816455639 Tokens per Sec: 2224.892430176062
Epoch Step: 10 / 67 Loss (mean): 7.753185957670212 Loss (std): 4.699713332183419 Loss ratio: 0.6061654341637455 Tokens per Sec: 2854.115686486334
Epoch Step: 15 / 67 Loss (mean): 9.397787767462432 Loss (std): 5.308339182760906 Loss ratio: 0.5648498682998297 Tokens per Sec: 3664.7268856409387
Epoch Step: 20 / 67 Loss (mean): 8.191823131404817 Loss (std): 5.281870815640195 Loss ratio: 0.6447735419715301 Tokens per Sec: 2425.1036363668854
Epoch Step: 25 / 67 Loss (mean): 7.821667877025902 Loss (std): 4.836244172396502 Loss ratio: 0.6183136702341582 Tokens per Sec: 2627.3839839124203
Epoch Step: 30 / 67 Loss (mean): 8.33497675973922 Loss (std): 5.543690598053552 Loss ratio: 0.665111704309899 Tokens per Sec: 2662.103056576616
Epoch Step: 35 / 67 Loss (mean): 29.58882711082697 Loss (std): 18.368189751808956 Loss ratio: 0.6207812727084331 Tokens per Sec: 2486.9969082624193
Epoch Step: 40 / 67 Loss (mean): 8.528575805947185 Loss (std): 4.526797311077017 Loss ratio: 0.5307799818019288 Tokens per Sec: 3119.099014385655
Epoch Step: 45 / 67 Loss (mean): 10.137096867896616 Loss (std): 5.333782768002271 Loss ratio: 0.5261647232447723 Tokens per Sec: 2767.9200517914696
Epoch Step: 50 / 67 Loss (mean): 8.238975645042956 Loss (std): 4.662916959898455 Loss ratio: 0.5659583376367833 Tokens per Sec: 2542.0068188110276
Epoch Step: 55 / 67 Loss (mean): 8.970251685008407 Loss (std): 5.46154875956204 Loss ratio: 0.6088512286327138 Tokens per Sec: 2917.3501778148193
Epoch Step: 60 / 67 Loss (mean): 8.145429326221347 Loss (std): 5.359847650100381 Loss ratio: 0.6580190479151584 Tokens per Sec: 3237.2003391232292
Epoch Step: 65 / 67 Loss (mean): 6.5673905371222645 Loss (std): 4.128359783878431 Loss ratio: 0.6286149362585979 Tokens per Sec: 2656.4486272711642
Mean loss per sample: 11.332288867483536 Std loss per sample: 12.016395805580778 ratio: 1.0603679403249413
Epoch ended with duration 0:00:11.459665
Train perplexity: 4.6332355598460655
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix exception # method_1 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api detector[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java 7 .[0m
Epoch Step: 5 / 8 Loss (mean): 77.29130759835243 Loss (std): 30.073944112571322 Loss ratio: 0.3890986586596756 Tokens per Sec: 4308.509303849071
Mean loss per sample: 72.96497761616942 Std loss per sample: 37.7530253971895 ratio: 0.5174129648307222
Epoch ended with duration 0:00:01.032189
b'BLEU = 1.50, 8.5/1.6/0.9/0.8 (BP=0.856, ratio=0.865, hyp_len=2694, ref_len=3113)\n'
Validation perplexity: 19693.844286665622
Validation accuracy: 0.0
Validation BLEU: 1.5
Epoch 169 / 1000
Epoch Step: 5 / 67 Loss (mean): 7.334767959546298 Loss (std): 4.3315282179781525 Loss ratio: 0.5905474095251522 Tokens per Sec: 3573.6927113992656
Epoch Step: 10 / 67 Loss (mean): 7.275086173787713 Loss (std): 4.481762017366729 Loss ratio: 0.6160424646947291 Tokens per Sec: 2610.506498015101
Epoch Step: 15 / 67 Loss (mean): 8.580511759966612 Loss (std): 5.131325737667989 Loss ratio: 0.5980209434137477 Tokens per Sec: 3371.6535928645594
Epoch Step: 20 / 67 Loss (mean): 7.712829529307783 Loss (std): 5.124619652150618 Loss ratio: 0.6644279680599328 Tokens per Sec: 2110.2857785993206
Epoch Step: 25 / 67 Loss (mean): 7.931202016305178 Loss (std): 4.494714547243135 Loss ratio: 0.566712906568611 Tokens per Sec: 2419.885777479673
Epoch Step: 30 / 67 Loss (mean): 7.608868137001991 Loss (std): 5.117541273482871 Loss ratio: 0.6725758918854466 Tokens per Sec: 2496.881864721859
Epoch Step: 35 / 67 Loss (mean): 6.629771293606609 Loss (std): 4.2135824709792065 Loss ratio: 0.6355547249484392 Tokens per Sec: 2577.7910672834646
Epoch Step: 40 / 67 Loss (mean): 8.022946614772081 Loss (std): 5.3098404764667935 Loss ratio: 0.6618317098969799 Tokens per Sec: 2713.069584542826
Epoch Step: 45 / 67 Loss (mean): 8.85454766638577 Loss (std): 5.050014449833784 Loss ratio: 0.5703300315390462 Tokens per Sec: 2582.8068731294666
Epoch Step: 50 / 67 Loss (mean): 8.393065385054797 Loss (std): 4.462562020745096 Loss ratio: 0.5316963250031872 Tokens per Sec: 2711.5433876752472
Epoch Step: 55 / 67 Loss (mean): 7.498458105139434 Loss (std): 4.963580221905753 Loss ratio: 0.6619467832331717 Tokens per Sec: 2614.592125131496
Epoch Step: 60 / 67 Loss (mean): 41.33463263511658 Loss (std): 19.278225826194465 Loss ratio: 0.46639402837746047 Tokens per Sec: 3134.946006105477
Epoch Step: 65 / 67 Loss (mean): 9.562230318784714 Loss (std): 4.341099444392094 Loss ratio: 0.45398398696422676 Tokens per Sec: 3461.313811175404
Mean loss per sample: 10.251841272400807 Std loss per sample: 10.778522035534008 ratio: 1.0513742604024792
Epoch ended with duration 0:00:11.423000
Train perplexity: 4.003108554164769
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix exception ( ) length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in gerrit core[0m
Epoch Step: 5 / 8 Loss (mean): 69.5479744374752 Loss (std): 32.157824862449694 Loss ratio: 0.46238334218288585 Tokens per Sec: 4175.258867413588
Mean loss per sample: 73.81575403008304 Std loss per sample: 37.43398870212367 ratio: 0.5071273631759927
Epoch ended with duration 0:00:01.067053
b'BLEU = 1.48, 8.9/1.9/0.9/0.8 (BP=0.793, ratio=0.811, hyp_len=2526, ref_len=3113)\n'
Validation perplexity: 22100.529269559138
Validation accuracy: 0.0
Validation BLEU: 1.48
Epoch 170 / 1000
Epoch Step: 5 / 67 Loss (mean): 8.236454056575894 Loss (std): 4.198575932816239 Loss ratio: 0.5097552786643837 Tokens per Sec: 3042.736958007695
Epoch Step: 10 / 67 Loss (mean): 9.610759453848004 Loss (std): 3.87452229428351 Loss ratio: 0.40314423775659153 Tokens per Sec: 2956.088572908318
Epoch Step: 15 / 67 Loss (mean): 8.065524550154805 Loss (std): 4.237125565482106 Loss ratio: 0.5253378796548057 Tokens per Sec: 3107.309280719444
Epoch Step: 20 / 67 Loss (mean): 23.5974029074423 Loss (std): 18.998191575474976 Loss ratio: 0.8050967155153843 Tokens per Sec: 3286.8404353502233
Epoch Step: 25 / 67 Loss (mean): 33.76536833588034 Loss (std): 22.07263239080474 Loss ratio: 0.6537062522534232 Tokens per Sec: 2743.5439883103145
Epoch Step: 30 / 67 Loss (mean): 7.023833421524614 Loss (std): 4.465723562395433 Loss ratio: 0.635795767694344 Tokens per Sec: 2702.662474965817
Epoch Step: 35 / 67 Loss (mean): 8.589564563706517 Loss (std): 4.82838104963184 Loss ratio: 0.5621217482936441 Tokens per Sec: 2723.682413755273
Epoch Step: 40 / 67 Loss (mean): 7.094552244176157 Loss (std): 4.196377058219603 Loss ratio: 0.5914928685829842 Tokens per Sec: 2922.0954327122968
Epoch Step: 45 / 67 Loss (mean): 31.944585919380188 Loss (std): 24.746144129892542 Loss ratio: 0.774658472404224 Tokens per Sec: 2488.62353281553
Epoch Step: 50 / 67 Loss (mean): 6.845089849084616 Loss (std): 4.570093371309865 Loss ratio: 0.6676454907193098 Tokens per Sec: 2355.454104008228
Epoch Step: 55 / 67 Loss (mean): 8.74857390858233 Loss (std): 4.89417268344838 Loss ratio: 0.5594251971338103 Tokens per Sec: 2649.0941474418187
Epoch Step: 60 / 67 Loss (mean): 8.133753160014749 Loss (std): 4.1064435381775155 Loss ratio: 0.5048645388410176 Tokens per Sec: 2942.354774210972
Epoch Step: 65 / 67 Loss (mean): 7.782550692092627 Loss (std): 4.608833585887936 Loss ratio: 0.5922009079324969 Tokens per Sec: 2260.672465906777
Mean loss per sample: 9.943230829271936 Std loss per sample: 10.112826976104508 ratio: 1.0170564426939879
Epoch ended with duration 0:00:11.431678
Train perplexity: 3.839400724069185
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix exception # method_1 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix sorting of password[0m
Epoch Step: 5 / 8 Loss (mean): 70.08840036392212 Loss (std): 31.883516784667105 Loss ratio: 0.4549043296625027 Tokens per Sec: 4409.179881609859
Mean loss per sample: 72.32619891059203 Std loss per sample: 37.71019903310002 ratio: 0.5213905832341126
Epoch ended with duration 0:00:01.020595
b'BLEU = 1.55, 8.1/1.6/0.9/0.8 (BP=0.887, ratio=0.893, hyp_len=2780, ref_len=3113)\n'
Validation perplexity: 18060.733430671808
Validation accuracy: 0.0
Validation BLEU: 1.55
Model saved checkpoint_commit_msg_generator!
Epoch 171 / 1000
Epoch Step: 5 / 67 Loss (mean): 3.8633443695448695 Loss (std): 2.65442116942501 Loss ratio: 0.6870785815393725 Tokens per Sec: 2820.205667671451
Epoch Step: 10 / 67 Loss (mean): 8.629255929030478 Loss (std): 4.590849149246626 Loss ratio: 0.5320098496328202 Tokens per Sec: 2626.953032137826
Epoch Step: 15 / 67 Loss (mean): 7.658277996815741 Loss (std): 3.9890571758565154 Loss ratio: 0.5208817409756002 Tokens per Sec: 2432.5589163934837
Epoch Step: 20 / 67 Loss (mean): 7.612488676793873 Loss (std): 4.504143996103565 Loss ratio: 0.5916782523216259 Tokens per Sec: 2840.604493194023
Epoch Step: 25 / 67 Loss (mean): 26.335353696718812 Loss (std): 23.03535294269257 Loss ratio: 0.874693129546333 Tokens per Sec: 2574.373431150866
Epoch Step: 30 / 67 Loss (mean): 8.884390983730555 Loss (std): 4.112825792243431 Loss ratio: 0.4629271493988726 Tokens per Sec: 2903.8459714152805
Epoch Step: 35 / 67 Loss (mean): 8.263323111459613 Loss (std): 4.484484059614119 Loss ratio: 0.5426974110930041 Tokens per Sec: 3410.01635735321
Epoch Step: 40 / 67 Loss (mean): 8.822392432019114 Loss (std): 5.260522999504859 Loss ratio: 0.5962694405219201 Tokens per Sec: 2915.694510810366
Epoch Step: 45 / 67 Loss (mean): 8.363262573257089 Loss (std): 5.338875291045846 Loss ratio: 0.6383723151438268 Tokens per Sec: 2782.0073844872904
Epoch Step: 50 / 67 Loss (mean): 8.316538829356432 Loss (std): 4.699099343103533 Loss ratio: 0.565030650312874 Tokens per Sec: 2945.129717828614
Epoch Step: 55 / 67 Loss (mean): 8.239200482144952 Loss (std): 4.8756129109790525 Loss ratio: 0.5917580136015528 Tokens per Sec: 2756.6064146024582
Epoch Step: 60 / 67 Loss (mean): 6.344904136843979 Loss (std): 4.243858327125936 Loss ratio: 0.6688609056333 Tokens per Sec: 2773.3122860171334
Epoch Step: 65 / 67 Loss (mean): 6.7918033907189965 Loss (std): 4.045700355661808 Loss ratio: 0.5956739503369988 Tokens per Sec: 2533.381801475633
Mean loss per sample: 8.928563622323786 Std loss per sample: 8.146091960666467 ratio: 0.9123630972734594
Epoch ended with duration 0:00:11.386370
Train perplexity: 3.3468918510743673
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during keys ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use generic instead of k in new password[0m
Epoch Step: 5 / 8 Loss (mean): 70.57969769835472 Loss (std): 31.887652795926098 Loss ratio: 0.4517963923876289 Tokens per Sec: 4455.358095182953
Mean loss per sample: 73.18758370983797 Std loss per sample: 37.69670308319495 ratio: 0.5150696494182484
Epoch ended with duration 0:00:01.029566
b'BLEU = 1.37, 7.4/1.3/0.7/0.7 (BP=0.914, ratio=0.917, hyp_len=2855, ref_len=3113)\n'
Validation perplexity: 20297.00274464728
Validation accuracy: 0.0
Validation BLEU: 1.37
Epoch 172 / 1000
Epoch Step: 5 / 67 Loss (mean): 25.169097842648625 Loss (std): 24.52000785306759 Loss ratio: 0.974210836095954 Tokens per Sec: 2575.14672672629
Epoch Step: 10 / 67 Loss (mean): 7.8616082184016705 Loss (std): 4.422029987744303 Loss ratio: 0.5624841463599846 Tokens per Sec: 2992.545071271964
Epoch Step: 15 / 67 Loss (mean): 7.790862997062504 Loss (std): 4.061398627603 Loss ratio: 0.5213027913768121 Tokens per Sec: 2655.3086757530696
Epoch Step: 20 / 67 Loss (mean): 7.817110741510987 Loss (std): 4.478109156080881 Loss ratio: 0.572859884445656 Tokens per Sec: 3780.5810476683773
Epoch Step: 25 / 67 Loss (mean): 7.755932917818427 Loss (std): 4.833215847477291 Loss ratio: 0.6231636991564863 Tokens per Sec: 2599.2916149130806
Epoch Step: 30 / 67 Loss (mean): 7.581975433975458 Loss (std): 4.460636184753092 Loss ratio: 0.588321107552606 Tokens per Sec: 2553.448695488981
Epoch Step: 35 / 67 Loss (mean): 7.5572878094390035 Loss (std): 4.923078048364585 Loss ratio: 0.651434505672219 Tokens per Sec: 3366.992333217712
Epoch Step: 40 / 67 Loss (mean): 7.153655864298344 Loss (std): 4.2399841338053665 Loss ratio: 0.5927017198249359 Tokens per Sec: 2564.6171381288646
Epoch Step: 45 / 67 Loss (mean): 3.983056016975925 Loss (std): 2.8313388920663454 Loss ratio: 0.7108458630757587 Tokens per Sec: 2488.564812939881
Epoch Step: 50 / 67 Loss (mean): 6.382920713629574 Loss (std): 4.341505588571177 Loss ratio: 0.6801753904447969 Tokens per Sec: 2394.0097219127165
Epoch Step: 55 / 67 Loss (mean): 8.015613934025168 Loss (std): 4.903231320547003 Loss ratio: 0.6117100150911045 Tokens per Sec: 2797.6426297849384
Epoch Step: 60 / 67 Loss (mean): 7.298748826608062 Loss (std): 4.070680488550363 Loss ratio: 0.5577230543556224 Tokens per Sec: 2596.260675220093
Epoch Step: 65 / 67 Loss (mean): 7.53408966306597 Loss (std): 4.643946199103256 Loss ratio: 0.616391150993207 Tokens per Sec: 2974.715137290558
Mean loss per sample: 9.361665720478978 Std loss per sample: 9.40456399641561 ratio: 1.0045823336591468
Epoch ended with duration 0:00:11.394377
Train perplexity: 3.5488751700235115
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during keys ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use shell api instead of assuming it[0m
Epoch Step: 5 / 8 Loss (mean): 70.54080560803413 Loss (std): 31.788313144986407 Loss ratio: 0.45063722863644085 Tokens per Sec: 4287.2740317175685
Mean loss per sample: 73.70810569896072 Std loss per sample: 38.0173354363482 ratio: 0.5157822884720294
Epoch ended with duration 0:00:01.036722
b'BLEU = 1.24, 7.7/1.3/0.7/0.6 (BP=0.877, ratio=0.884, hyp_len=2752, ref_len=3113)\n'
Validation perplexity: 21780.460925220817
Validation accuracy: 0.0
Validation BLEU: 1.24
Epoch 173 / 1000
Epoch Step: 5 / 67 Loss (mean): 33.373337872326374 Loss (std): 21.08172053892462 Loss ratio: 0.6316934979526238 Tokens per Sec: 3217.5341100760306
Epoch Step: 10 / 67 Loss (mean): 8.279701521620154 Loss (std): 5.149732884815278 Loss ratio: 0.6219708369158203 Tokens per Sec: 3046.4949429660282
Epoch Step: 15 / 67 Loss (mean): 6.823127185925841 Loss (std): 3.713647402649328 Loss ratio: 0.5442735129296021 Tokens per Sec: 3386.2399810325605
Epoch Step: 20 / 67 Loss (mean): 24.96751680644229 Loss (std): 24.845909376955333 Loss ratio: 0.9951293742814031 Tokens per Sec: 2550.8943332702306
Epoch Step: 25 / 67 Loss (mean): 8.82705545425415 Loss (std): 4.16073835592176 Loss ratio: 0.4713619822017222 Tokens per Sec: 3140.862799602239
Epoch Step: 30 / 67 Loss (mean): 6.934819819405675 Loss (std): 4.625133923730875 Loss ratio: 0.6669436328811865 Tokens per Sec: 2302.609986937599
Epoch Step: 35 / 67 Loss (mean): 7.623059371486306 Loss (std): 4.311188296345185 Loss ratio: 0.5655456800547798 Tokens per Sec: 2723.9925062146394
Epoch Step: 40 / 67 Loss (mean): 7.866700615733862 Loss (std): 4.259266809438337 Loss ratio: 0.541429884965948 Tokens per Sec: 2572.509100855564
Epoch Step: 45 / 67 Loss (mean): 8.427829580381513 Loss (std): 4.910488300117862 Loss ratio: 0.5826515893900613 Tokens per Sec: 2840.395334185478
Epoch Step: 50 / 67 Loss (mean): 9.552119915373623 Loss (std): 5.33698778148689 Loss ratio: 0.5587228624399172 Tokens per Sec: 2442.9778352657604
Epoch Step: 55 / 67 Loss (mean): 7.195821734610945 Loss (std): 4.602416792415108 Loss ratio: 0.6395957212611445 Tokens per Sec: 2657.1806669284656
Epoch Step: 60 / 67 Loss (mean): 8.10736006591469 Loss (std): 3.8573670245401055 Loss ratio: 0.4757858283311497 Tokens per Sec: 2682.262349161584
Epoch Step: 65 / 67 Loss (mean): 7.692941316403449 Loss (std): 4.69279135700515 Loss ratio: 0.6100126289796126 Tokens per Sec: 2689.6407871081265
Mean loss per sample: 10.009446841658937 Std loss per sample: 11.108984875988764 ratio: 1.1098500298491611
Epoch ended with duration 0:00:11.432499
Train perplexity: 3.8739524878924896
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix exception # method_1 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api testmultipleuserfield[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix colon and space and actual commits in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 79.62278181314468 Loss (std): 31.307928323108918 Loss ratio: 0.3932031462625988 Tokens per Sec: 4327.022956103929
Mean loss per sample: 73.8909226695045 Std loss per sample: 37.65490917354483 ratio: 0.5096012854239994
Epoch ended with duration 0:00:01.031975
b'BLEU = 1.39, 7.9/1.4/0.7/0.6 (BP=0.928, ratio=0.930, hyp_len=2896, ref_len=3113)\n'
Validation perplexity: 22326.811241832336
Validation accuracy: 0.0
Validation BLEU: 1.39
Epoch 174 / 1000
Epoch Step: 5 / 67 Loss (mean): 8.058685131371021 Loss (std): 5.10466494508575 Loss ratio: 0.633436455435416 Tokens per Sec: 2706.842771534758
Epoch Step: 10 / 67 Loss (mean): 33.05319023155607 Loss (std): 21.50711386600236 Loss ratio: 0.6506819376687396 Tokens per Sec: 3450.4675711475147
Epoch Step: 15 / 67 Loss (mean): 7.388128627091646 Loss (std): 4.517930151237905 Loss ratio: 0.6115121134560428 Tokens per Sec: 2405.972510621881
Epoch Step: 20 / 67 Loss (mean): 7.0157028483226895 Loss (std): 4.37163892851578 Loss ratio: 0.6231220197076831 Tokens per Sec: 2541.7549932335055
Epoch Step: 25 / 67 Loss (mean): 7.771231716498733 Loss (std): 4.6984809336586935 Loss ratio: 0.604599258529838 Tokens per Sec: 3406.0034286745467
Epoch Step: 30 / 67 Loss (mean): 7.3041044836863875 Loss (std): 4.147681529611381 Loss ratio: 0.567856270248484 Tokens per Sec: 2609.899227254863
Epoch Step: 35 / 67 Loss (mean): 7.694562100805342 Loss (std): 4.4461377524938905 Loss ratio: 0.5778285618136139 Tokens per Sec: 3019.2938033729174
Epoch Step: 40 / 67 Loss (mean): 25.77631319500506 Loss (std): 22.697526194241618 Loss ratio: 0.8805575111742493 Tokens per Sec: 2570.108551764334
Epoch Step: 45 / 67 Loss (mean): 7.383992037735879 Loss (std): 4.766035766981383 Loss ratio: 0.645455160653555 Tokens per Sec: 2805.042588114567
Epoch Step: 50 / 67 Loss (mean): 7.373118050396442 Loss (std): 4.438001979102369 Loss ratio: 0.6019165770530073 Tokens per Sec: 2996.5468125623065
Epoch Step: 55 / 67 Loss (mean): 7.925394684076309 Loss (std): 4.125606826130633 Loss ratio: 0.5205553780709238 Tokens per Sec: 2324.5674582701577
Epoch Step: 60 / 67 Loss (mean): 7.45970297139138 Loss (std): 3.8511817100170824 Loss ratio: 0.5162647527370332 Tokens per Sec: 2553.1125283731963
Epoch Step: 65 / 67 Loss (mean): 7.329768922179937 Loss (std): 3.996270626950047 Loss ratio: 0.5452109976969808 Tokens per Sec: 2507.1331352184407
Mean loss per sample: 9.907839638044367 Std loss per sample: 10.937259308219932 ratio: 1.1038995086499759
Epoch ended with duration 0:00:11.475860
Train perplexity: 3.8210600147967377
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not throw exception when scoring ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in dex file format[0m
Epoch Step: 5 / 8 Loss (mean): 70.28042596578598 Loss (std): 32.13370886703978 Loss ratio: 0.4572213162550147 Tokens per Sec: 4427.40648747693
Mean loss per sample: 73.1096439117291 Std loss per sample: 38.481007877674635 ratio: 0.5263465367733937
Epoch ended with duration 0:00:01.019501
b'BLEU = 1.49, 8.0/1.6/0.8/0.7 (BP=0.893, ratio=0.898, hyp_len=2796, ref_len=3113)\n'
Validation perplexity: 20083.749157426646
Validation accuracy: 0.0
Validation BLEU: 1.49
Epoch 175 / 1000
Epoch Step: 5 / 67 Loss (mean): 6.836545765399933 Loss (std): 4.4347483054179655 Loss ratio: 0.6486826034080584 Tokens per Sec: 2565.8401853440755
Epoch Step: 10 / 67 Loss (mean): 6.249984253197908 Loss (std): 4.132763586320187 Loss ratio: 0.6612438398073707 Tokens per Sec: 2898.41765343968
Epoch Step: 15 / 67 Loss (mean): 8.074300446081907 Loss (std): 4.974007535675638 Loss ratio: 0.6160295333188028 Tokens per Sec: 2786.512950298185
Epoch Step: 20 / 67 Loss (mean): 6.217286057770252 Loss (std): 3.807808392203689 Loss ratio: 0.6124550739377286 Tokens per Sec: 2399.8734323123917
Epoch Step: 25 / 67 Loss (mean): 6.90205268189311 Loss (std): 3.972765636233114 Loss ratio: 0.5755919027762991 Tokens per Sec: 2886.1828776280026
Epoch Step: 30 / 67 Loss (mean): 5.9109077248722315 Loss (std): 4.609106142030017 Loss ratio: 0.779762831119081 Tokens per Sec: 2801.437243636753
Epoch Step: 35 / 67 Loss (mean): 7.0473532332107425 Loss (std): 4.2817169092962395 Loss ratio: 0.6075638282353428 Tokens per Sec: 2936.8773666048473
Epoch Step: 40 / 67 Loss (mean): 6.823729831725359 Loss (std): 4.819892012783817 Loss ratio: 0.7063427380103532 Tokens per Sec: 2449.066086058019
Epoch Step: 45 / 67 Loss (mean): 6.88968025543727 Loss (std): 3.787352289960557 Loss ratio: 0.5497137965106023 Tokens per Sec: 2755.4381423693912
Epoch Step: 50 / 67 Loss (mean): 7.940402556210756 Loss (std): 4.389133243943407 Loss ratio: 0.5527595374255115 Tokens per Sec: 3195.9945872397716
Epoch Step: 55 / 67 Loss (mean): 10.39500579237938 Loss (std): 4.958086454829274 Loss ratio: 0.4769681281432346 Tokens per Sec: 3121.0309921786948
Epoch Step: 60 / 67 Loss (mean): 6.959243584424257 Loss (std): 4.53362406648219 Loss ratio: 0.6514535684063514 Tokens per Sec: 2612.6003746721617
Epoch Step: 65 / 67 Loss (mean): 7.945047793909907 Loss (std): 4.75213854836669 Loss ratio: 0.5981258604900189 Tokens per Sec: 2786.8758587698967
Mean loss per sample: 8.72114833446016 Std loss per sample: 8.973535693166914 ratio: 1.0289396933783923
Epoch ended with duration 0:00:11.385821
Train perplexity: 3.2542729292080246
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix exception # method_1 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt[0m
Epoch Step: 5 / 8 Loss (mean): 80.70437443256378 Loss (std): 31.52665524156976 Loss ratio: 0.39064369760914625 Tokens per Sec: 4301.064167168286
Mean loss per sample: 74.85970113951652 Std loss per sample: 38.993158359646365 ratio: 0.5208831689960204
Epoch ended with duration 0:00:01.033734
b'BLEU = 1.41, 8.5/1.6/0.8/0.7 (BP=0.852, ratio=0.862, hyp_len=2682, ref_len=3113)\n'
Validation perplexity: 25459.147006089992
Validation accuracy: 0.0
Validation BLEU: 1.41
Model saved checkpoint_commit_msg_generator!
Epoch 176 / 1000
Epoch Step: 5 / 67 Loss (mean): 6.036711145192385 Loss (std): 4.071470078606741 Loss ratio: 0.6744516974030215 Tokens per Sec: 2567.5599329550687
Epoch Step: 10 / 67 Loss (mean): 6.548666696995497 Loss (std): 3.910455667856193 Loss ratio: 0.5971376844771005 Tokens per Sec: 2600.9547323649185
Epoch Step: 15 / 67 Loss (mean): 21.272851170040667 Loss (std): 24.523963718740674 Loss ratio: 1.1528291869628962 Tokens per Sec: 2569.1269789850267
Epoch Step: 20 / 67 Loss (mean): 6.428047511726618 Loss (std): 4.378482211670429 Loss ratio: 0.6811527456327618 Tokens per Sec: 2408.279366464954
Epoch Step: 25 / 67 Loss (mean): 7.639148948714137 Loss (std): 4.15964542719414 Loss ratio: 0.5445168637396858 Tokens per Sec: 2799.79749636725
Epoch Step: 30 / 67 Loss (mean): 7.228388035669923 Loss (std): 3.572867103143319 Loss ratio: 0.4942826928372264 Tokens per Sec: 2793.44114611336
Epoch Step: 35 / 67 Loss (mean): 7.932872460223734 Loss (std): 4.568050408747101 Loss ratio: 0.5758381256791649 Tokens per Sec: 2904.5686955213546
Epoch Step: 40 / 67 Loss (mean): 7.966896150261164 Loss (std): 5.0792582073350125 Loss ratio: 0.6375454269186763 Tokens per Sec: 2729.6434162404776
Epoch Step: 45 / 67 Loss (mean): 6.370579454116523 Loss (std): 3.6481408453966333 Loss ratio: 0.5726544769862791 Tokens per Sec: 3124.0632717828908
Epoch Step: 50 / 67 Loss (mean): 7.4659937126562 Loss (std): 5.0462819318706265 Loss ratio: 0.675902247723069 Tokens per Sec: 2859.866967768666
Epoch Step: 55 / 67 Loss (mean): 8.017899315804243 Loss (std): 3.972305139823962 Loss ratio: 0.49542966098290503 Tokens per Sec: 3152.4339052884015
Epoch Step: 60 / 67 Loss (mean): 6.172897646669298 Loss (std): 4.431458298625421 Loss ratio: 0.7178894827482677 Tokens per Sec: 2497.048125456857
Epoch Step: 65 / 67 Loss (mean): 34.8347393181175 Loss (std): 24.511798634637294 Loss ratio: 0.7036595971277656 Tokens per Sec: 2893.41128451817
Mean loss per sample: 9.024226822449785 Std loss per sample: 10.05501713563711 ratio: 1.1142247788611654
Epoch ended with duration 0:00:11.439747
Train perplexity: 3.3904929139926376
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix exception ( ) creation[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api and gb2312han[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use shell instead of password[0m
Epoch Step: 5 / 8 Loss (mean): 70.57997769117355 Loss (std): 31.41351667755125 Loss ratio: 0.44507688589819006 Tokens per Sec: 4246.265109951333
Mean loss per sample: 73.99463757530587 Std loss per sample: 37.67356118738147 ratio: 0.5091390730718873
Epoch ended with duration 0:00:01.045467
b'BLEU = 1.59, 8.0/1.7/0.8/0.7 (BP=0.974, ratio=0.974, hyp_len=3033, ref_len=3113)\n'
Validation perplexity: 22642.835344776126
Validation accuracy: 0.0
Validation BLEU: 1.59
Epoch 177 / 1000
Epoch Step: 5 / 67 Loss (mean): 6.487625151872635 Loss (std): 3.9773521899895816 Loss ratio: 0.6130675088158462 Tokens per Sec: 2546.1915578712233
Epoch Step: 10 / 67 Loss (mean): 7.263476049527526 Loss (std): 4.104484561038066 Loss ratio: 0.5650854402287255 Tokens per Sec: 2992.819716263516
Epoch Step: 15 / 67 Loss (mean): 8.004664693027735 Loss (std): 4.499585834037666 Loss ratio: 0.5621204643283708 Tokens per Sec: 2604.1588881279204
Epoch Step: 20 / 67 Loss (mean): 9.820097764953971 Loss (std): 4.594201516497474 Loss ratio: 0.46783663731875363 Tokens per Sec: 3727.7730480944447
Epoch Step: 25 / 67 Loss (mean): 6.191134314984083 Loss (std): 4.128259692834003 Loss ratio: 0.6668018302950703 Tokens per Sec: 2669.2796036085365
Epoch Step: 30 / 67 Loss (mean): 29.29411718249321 Loss (std): 22.762899447682678 Loss ratio: 0.7770467806173136 Tokens per Sec: 2560.442895759375
Epoch Step: 35 / 67 Loss (mean): 8.338611975777894 Loss (std): 4.567712261031469 Loss ratio: 0.5477784881104694 Tokens per Sec: 2508.1771829730446
Epoch Step: 40 / 67 Loss (mean): 7.326811952516437 Loss (std): 4.5260904842104255 Loss ratio: 0.6177435033877064 Tokens per Sec: 2770.2344424196076
Epoch Step: 45 / 67 Loss (mean): 6.3564444235526025 Loss (std): 4.003444293523183 Loss ratio: 0.6298244783969442 Tokens per Sec: 2657.4566100165816
Epoch Step: 50 / 67 Loss (mean): 7.573479065671563 Loss (std): 3.6318516465531037 Loss ratio: 0.4795486479939265 Tokens per Sec: 2467.151427294386
Epoch Step: 55 / 67 Loss (mean): 7.912393243983388 Loss (std): 3.6688925729335455 Loss ratio: 0.4636893617140913 Tokens per Sec: 2942.970402088977
Epoch Step: 60 / 67 Loss (mean): 32.58756095916033 Loss (std): 20.68518843741162 Loss ratio: 0.6347571842929545 Tokens per Sec: 2824.016886671911
Epoch Step: 65 / 67 Loss (mean): 7.151692548766732 Loss (std): 4.4131611500158625 Loss ratio: 0.6170792605978128 Tokens per Sec: 3046.946735127911
Mean loss per sample: 9.157126215801334 Std loss per sample: 9.762470639642315 ratio: 1.0661063754692397
Epoch ended with duration 0:00:11.432345
Train perplexity: 3.452009630901253
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print during keys ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api openssl[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in commit 84cd616[0m
Epoch Step: 5 / 8 Loss (mean): 70.7700631916523 Loss (std): 32.31967456117689 Loss ratio: 0.4566856818207443 Tokens per Sec: 4310.297076289481
Mean loss per sample: 74.20181520356506 Std loss per sample: 37.31871255676585 ratio: 0.5029353049434949
Epoch ended with duration 0:00:01.036016
b'BLEU = 1.44, 8.4/1.6/0.7/0.6 (BP=0.915, ratio=0.918, hyp_len=2859, ref_len=3113)\n'
Validation perplexity: 23287.570448832037
Validation accuracy: 0.0
Validation BLEU: 1.44
Epoch 178 / 1000
Epoch Step: 5 / 67 Loss (mean): 7.582577349618077 Loss (std): 4.671086931481529 Loss ratio: 0.6160289194698165 Tokens per Sec: 2725.954631895549
Epoch Step: 10 / 67 Loss (mean): 6.282441127113998 Loss (std): 3.80728429195773 Loss ratio: 0.6060198917783898 Tokens per Sec: 2370.068097296871
Epoch Step: 15 / 67 Loss (mean): 5.723410979146138 Loss (std): 3.617244636138942 Loss ratio: 0.6320085433876339 Tokens per Sec: 2669.511671484454
Epoch Step: 20 / 67 Loss (mean): 6.333652131259441 Loss (std): 3.7914837884550305 Loss ratio: 0.5986252023129501 Tokens per Sec: 2829.1128855384113
Epoch Step: 25 / 67 Loss (mean): 7.220539621077478 Loss (std): 4.479452592001258 Loss ratio: 0.6203764298897118 Tokens per Sec: 2953.2393897127718
Epoch Step: 30 / 67 Loss (mean): 7.647522441111505 Loss (std): 4.709815356133185 Loss ratio: 0.6158615933984303 Tokens per Sec: 3139.6106586502324
Epoch Step: 35 / 67 Loss (mean): 7.857448771595955 Loss (std): 3.985446201217908 Loss ratio: 0.507218859081204 Tokens per Sec: 2447.3914430900845
Epoch Step: 40 / 67 Loss (mean): 30.231826363131404 Loss (std): 20.75780719839673 Loss ratio: 0.6866210115479984 Tokens per Sec: 2641.8674555522243
Epoch Step: 45 / 67 Loss (mean): 8.054303730838 Loss (std): 4.761187558473827 Loss ratio: 0.59113583465252 Tokens per Sec: 2895.285223240814
Epoch Step: 50 / 67 Loss (mean): 6.922447653487325 Loss (std): 4.577128366429411 Loss ratio: 0.6612008635592339 Tokens per Sec: 2827.94579128899
Epoch Step: 55 / 67 Loss (mean): 6.831546024186537 Loss (std): 4.23189770413391 Loss ratio: 0.6194641284932018 Tokens per Sec: 3241.6157081129454
Epoch Step: 60 / 67 Loss (mean): 7.976984682492912 Loss (std): 4.236920113231874 Loss ratio: 0.5311430674463551 Tokens per Sec: 2462.5791145188387
Epoch Step: 65 / 67 Loss (mean): 6.564090529456735 Loss (std): 4.2290221366208165 Loss ratio: 0.6442662723255926 Tokens per Sec: 2670.696689657865
Mean loss per sample: 8.90028244637187 Std loss per sample: 9.043226809111717 ratio: 1.0160606546591247
Epoch ended with duration 0:00:11.452863
Train perplexity: 3.3341096575541185
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not throw exception when scoring ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for sslcontext.tls[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use `` -preview '' in java 7[0m
Epoch Step: 5 / 8 Loss (mean): 71.55055928230286 Loss (std): 32.16279504519644 Loss ratio: 0.4495114415290323 Tokens per Sec: 4403.326299220085
Mean loss per sample: 74.83246722670852 Std loss per sample: 38.63158531997091 ratio: 0.516240968013719
Epoch ended with duration 0:00:01.041048
b'BLEU = 1.52, 7.9/1.6/0.7/0.6 (BP=0.961, ratio=0.961, hyp_len=2993, ref_len=3113)\n'
Validation perplexity: 25365.358543471957
Validation accuracy: 0.0
Validation BLEU: 1.52
Epoch 179 / 1000
Epoch Step: 5 / 67 Loss (mean): 6.85156986862421 Loss (std): 3.6542604490205868 Loss ratio: 0.5333464474696161 Tokens per Sec: 2680.79964049729
Epoch Step: 10 / 67 Loss (mean): 6.78214779868722 Loss (std): 4.41618735801572 Loss ratio: 0.6511487937302893 Tokens per Sec: 2733.662008750843
Epoch Step: 15 / 67 Loss (mean): 31.069471355061978 Loss (std): 25.178890194750757 Loss ratio: 0.8104061349163735 Tokens per Sec: 2964.4076163129366
Epoch Step: 20 / 67 Loss (mean): 5.731737469788641 Loss (std): 3.9558604451387933 Loss ratio: 0.6901677660551795 Tokens per Sec: 2764.681792618869
Epoch Step: 25 / 67 Loss (mean): 7.197764680720866 Loss (std): 3.5740407138498727 Loss ratio: 0.49654870260247624 Tokens per Sec: 3021.561540356152
Epoch Step: 30 / 67 Loss (mean): 3.9230858490225815 Loss (std): 2.4248895112258433 Loss ratio: 0.6181076847528058 Tokens per Sec: 2768.6999997939915
Epoch Step: 35 / 67 Loss (mean): 7.619170997291803 Loss (std): 4.613236407459565 Loss ratio: 0.605477473743445 Tokens per Sec: 2129.0319857796176
Epoch Step: 40 / 67 Loss (mean): 7.919147024862468 Loss (std): 4.272653517118621 Loss ratio: 0.5395345614501739 Tokens per Sec: 2827.9642088411824
Epoch Step: 45 / 67 Loss (mean): 7.221286385320127 Loss (std): 4.178276115043713 Loss ratio: 0.5786055132140401 Tokens per Sec: 2774.9835521391615
Epoch Step: 50 / 67 Loss (mean): 7.8068228447809815 Loss (std): 4.654634868377996 Loss ratio: 0.596226526581132 Tokens per Sec: 2789.7591044517717
Epoch Step: 55 / 67 Loss (mean): 6.197775615379214 Loss (std): 4.363140826711475 Loss ratio: 0.703984961295588 Tokens per Sec: 2842.7982492821498
Epoch Step: 60 / 67 Loss (mean): 7.626035312190652 Loss (std): 3.8551244869677457 Loss ratio: 0.5055214576314785 Tokens per Sec: 2659.5875328322154
Epoch Step: 65 / 67 Loss (mean): 8.276504055596888 Loss (std): 5.2847704727481135 Loss ratio: 0.6385268994309681 Tokens per Sec: 3003.790412400475
Mean loss per sample: 11.209483496836036 Std loss per sample: 13.708462420714303 ratio: 1.2229343505955135
Epoch ended with duration 0:00:11.562255
Train perplexity: 4.556887922773942
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print during keys ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api config certificationvaliditychecktimeinhours[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in response prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 70.05527728796005 Loss (std): 31.56565750847741 Loss ratio: 0.4505821507026195 Tokens per Sec: 4399.488004053184
Mean loss per sample: 72.86712055421266 Std loss per sample: 37.744619462725005 ratio: 0.5179924659523667
Epoch ended with duration 0:00:01.025101
b'BLEU = 1.64, 7.8/1.8/1.0/0.8 (BP=0.912, ratio=0.916, hyp_len=2851, ref_len=3113)\n'
Validation perplexity: 19434.400734342715
Validation accuracy: 0.0
Validation BLEU: 1.64
Epoch 180 / 1000
Epoch Step: 5 / 67 Loss (mean): 6.672749329358339 Loss (std): 4.398891562040946 Loss ratio: 0.6592322511932198 Tokens per Sec: 2237.265696486037
Epoch Step: 10 / 67 Loss (mean): 8.5606236346066 Loss (std): 5.123001379754553 Loss ratio: 0.5984378706995893 Tokens per Sec: 2616.4149920880495
Epoch Step: 15 / 67 Loss (mean): 7.617315551266074 Loss (std): 4.2254164515043735 Loss ratio: 0.5547120141034549 Tokens per Sec: 3105.815173010036
Epoch Step: 20 / 67 Loss (mean): 6.471879758872092 Loss (std): 4.070925943641801 Loss ratio: 0.6290175490453295 Tokens per Sec: 2958.1069541935017
Epoch Step: 25 / 67 Loss (mean): 6.051342652004678 Loss (std): 3.4923299420418683 Loss ratio: 0.5771165413819255 Tokens per Sec: 2666.974239885433
Epoch Step: 30 / 67 Loss (mean): 8.71275862120092 Loss (std): 3.7866994305696786 Loss ratio: 0.43461544101031696 Tokens per Sec: 3096.0834872056644
Epoch Step: 35 / 67 Loss (mean): 6.655566804809496 Loss (std): 4.539038467417847 Loss ratio: 0.6819912714478071 Tokens per Sec: 2546.44130551108
Epoch Step: 40 / 67 Loss (mean): 8.989933386445045 Loss (std): 5.4591780795637765 Loss ratio: 0.6072545640655229 Tokens per Sec: 3000.566940889683
Epoch Step: 45 / 67 Loss (mean): 7.664346248842776 Loss (std): 3.990787586000483 Loss ratio: 0.5206951064616951 Tokens per Sec: 2983.789867878631
Epoch Step: 50 / 67 Loss (mean): 6.932590884622186 Loss (std): 4.122443523977326 Loss ratio: 0.5946468777094138 Tokens per Sec: 2379.2239218739765
Epoch Step: 55 / 67 Loss (mean): 6.113527865149081 Loss (std): 3.9124267276863685 Loss ratio: 0.639962197602736 Tokens per Sec: 3566.887587535969
Epoch Step: 60 / 67 Loss (mean): 3.831969515908332 Loss (std): 3.2000362539425504 Loss ratio: 0.835089172984721 Tokens per Sec: 2390.201792011567
Epoch Step: 65 / 67 Loss (mean): 7.325340805575252 Loss (std): 4.166291722546444 Loss ratio: 0.5687505650761692 Tokens per Sec: 2840.8798338926736
Mean loss per sample: 8.231722519182426 Std loss per sample: 8.24165047082627 ratio: 1.0012060600464494
Epoch ended with duration 0:00:11.412868
Train perplexity: 3.0457577085291185
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings in a bug into dut[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api parity[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix colon and space in log file[0m
Epoch Step: 5 / 8 Loss (mean): 70.98042750358582 Loss (std): 32.509302521524866 Loss ratio: 0.4580037577243748 Tokens per Sec: 4406.493764957692
Mean loss per sample: 75.01128099248058 Std loss per sample: 38.86624300616269 ratio: 0.5181386385077038
Epoch ended with duration 0:00:01.038803
b'BLEU = 1.59, 7.9/1.7/0.8/0.8 (BP=0.924, ratio=0.927, hyp_len=2886, ref_len=3113)\n'
Validation perplexity: 25987.531736377194
Validation accuracy: 0.0
Validation BLEU: 1.59
Model saved checkpoint_commit_msg_generator!
Epoch 181 / 1000
Epoch Step: 5 / 67 Loss (mean): 6.909657681360841 Loss (std): 3.9817675739403597 Loss ratio: 0.5762611923136777 Tokens per Sec: 2756.1286256699022
Epoch Step: 10 / 67 Loss (mean): 5.9594074273481965 Loss (std): 3.75639784287408 Loss ratio: 0.6303307650414487 Tokens per Sec: 3246.4745751304054
Epoch Step: 15 / 67 Loss (mean): 5.63392639439553 Loss (std): 4.229775731755334 Loss ratio: 0.7507687242706959 Tokens per Sec: 3220.5506122559113
Epoch Step: 20 / 67 Loss (mean): 6.916438614018261 Loss (std): 3.924514897220915 Loss ratio: 0.5674184527954452 Tokens per Sec: 2276.650922516892
Epoch Step: 25 / 67 Loss (mean): 8.647161977365613 Loss (std): 3.342338088565198 Loss ratio: 0.3865242836105 Tokens per Sec: 2406.2807074445996
Epoch Step: 30 / 67 Loss (mean): 7.005378302652389 Loss (std): 3.829514930697498 Loss ratio: 0.5466535517785757 Tokens per Sec: 2806.05128680146
Epoch Step: 35 / 67 Loss (mean): 7.268315098714083 Loss (std): 4.507032356897704 Loss ratio: 0.6200931434157405 Tokens per Sec: 3236.713771441419
Epoch Step: 40 / 67 Loss (mean): 5.093894229270518 Loss (std): 3.5002545669991716 Loss ratio: 0.6871470842260565 Tokens per Sec: 2565.3844416750735
Epoch Step: 45 / 67 Loss (mean): 7.46086370293051 Loss (std): 4.533794674576738 Loss ratio: 0.6076769198713461 Tokens per Sec: 3416.504476783882
Epoch Step: 50 / 67 Loss (mean): 6.492219500243664 Loss (std): 4.332159766342151 Loss ratio: 0.667284857848623 Tokens per Sec: 3250.6439756904842
Epoch Step: 55 / 67 Loss (mean): 6.890173378400505 Loss (std): 4.203703001563746 Loss ratio: 0.6101011934970496 Tokens per Sec: 2341.9441964167577
Epoch Step: 60 / 67 Loss (mean): 5.643375718034804 Loss (std): 3.759795257536377 Loss ratio: 0.6662316041657516 Tokens per Sec: 2259.4183959294473
Epoch Step: 65 / 67 Loss (mean): 7.45615650806576 Loss (std): 4.765596949317205 Loss ratio: 0.6391492646596112 Tokens per Sec: 3178.8624648878445
Mean loss per sample: 8.472136524285418 Std loss per sample: 9.492839933765262 ratio: 1.1204776866560158
Epoch ended with duration 0:00:11.440162
Train perplexity: 3.1464588737633115
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings in a bug into dut[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api and gb2312han[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in load file[0m
Epoch Step: 5 / 8 Loss (mean): 72.01535588502884 Loss (std): 33.080078956813104 Loss ratio: 0.45934757317071134 Tokens per Sec: 4410.803237306184
Mean loss per sample: 74.57776091577577 Std loss per sample: 39.34034499112655 ratio: 0.5275077249309681
Epoch ended with duration 0:00:01.024130
b'BLEU = 1.74, 8.9/2.0/1.0/0.8 (BP=0.897, ratio=0.902, hyp_len=2807, ref_len=3113)\n'
Validation perplexity: 24504.753984945113
Validation accuracy: 0.0
Validation BLEU: 1.74
Model saved best_on_validation_commit_msg_generator!
Epoch 182 / 1000
Epoch Step: 5 / 67 Loss (mean): 6.745099826715887 Loss (std): 3.8734248654151395 Loss ratio: 0.5742576040273472 Tokens per Sec: 2420.933376009941
Epoch Step: 10 / 67 Loss (mean): 6.771877269260585 Loss (std): 4.30109440141914 Loss ratio: 0.6351406309359726 Tokens per Sec: 2842.661591441763
Epoch Step: 15 / 67 Loss (mean): 7.370631664991379 Loss (std): 4.480183311744583 Loss ratio: 0.6078425181690074 Tokens per Sec: 2374.657379363619
Epoch Step: 20 / 67 Loss (mean): 8.20551760494709 Loss (std): 3.3519109909385607 Loss ratio: 0.40849476563400466 Tokens per Sec: 2990.9271468176175
Epoch Step: 25 / 67 Loss (mean): 6.759109674952924 Loss (std): 3.8599401826635202 Loss ratio: 0.5710722814525722 Tokens per Sec: 3199.8885984923463
Epoch Step: 30 / 67 Loss (mean): 6.68830649740994 Loss (std): 3.367224963296185 Loss ratio: 0.5034495600044868 Tokens per Sec: 3042.4982741573453
Epoch Step: 35 / 67 Loss (mean): 5.968948201742023 Loss (std): 3.7447785195441616 Loss ratio: 0.6273766152722279 Tokens per Sec: 3076.4381361049996
Epoch Step: 40 / 67 Loss (mean): 6.67877995595336 Loss (std): 4.556830482622768 Loss ratio: 0.6822848653010167 Tokens per Sec: 2995.893594641354
Epoch Step: 45 / 67 Loss (mean): 6.0537582989782095 Loss (std): 3.6708728497109533 Loss ratio: 0.6063791562888372 Tokens per Sec: 2667.844820230896
Epoch Step: 50 / 67 Loss (mean): 5.9602225655689836 Loss (std): 3.63412462725611 Loss ratio: 0.6097296849701088 Tokens per Sec: 2413.772161135695
Epoch Step: 55 / 67 Loss (mean): 7.110195621382445 Loss (std): 3.7512128241079448 Loss ratio: 0.5275822247178329 Tokens per Sec: 2416.0875062773607
Epoch Step: 60 / 67 Loss (mean): 6.339568172581494 Loss (std): 4.094614241318882 Loss ratio: 0.6458822004672191 Tokens per Sec: 2742.28613868789
Epoch Step: 65 / 67 Loss (mean): 7.1423930721357465 Loss (std): 4.747922089118378 Loss ratio: 0.6647522813664799 Tokens per Sec: 2919.39886925884
Mean loss per sample: 8.4549936199752 Std loss per sample: 9.539519298610472 ratio: 1.1282704313428509
Epoch ended with duration 0:00:11.438858
Train perplexity: 3.139169339519807
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings in switch ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt[0m
Epoch Step: 5 / 8 Loss (mean): 71.40691936016083 Loss (std): 32.60582322123289 Loss ratio: 0.45661993982370636 Tokens per Sec: 4411.886787293517
Mean loss per sample: 74.27110528945923 Std loss per sample: 39.479512021273194 ratio: 0.5315595057783022
Epoch ended with duration 0:00:01.018780
b'BLEU = 1.51, 8.5/1.7/1.0/0.9 (BP=0.803, ratio=0.820, hyp_len=2552, ref_len=3113)\n'
Validation perplexity: 23507.271735603117
Validation accuracy: 0.0
Validation BLEU: 1.51
Epoch 183 / 1000
Epoch Step: 5 / 67 Loss (mean): 26.084064381662756 Loss (std): 23.185137345770176 Loss ratio: 0.8888621422844462 Tokens per Sec: 2559.9033108268995
Epoch Step: 10 / 67 Loss (mean): 7.619603197090328 Loss (std): 4.050661405328177 Loss ratio: 0.5316105446114293 Tokens per Sec: 2763.561500083938
Epoch Step: 15 / 67 Loss (mean): 24.046411597169936 Loss (std): 22.920204116222237 Loss ratio: 0.9531652580928024 Tokens per Sec: 2805.4765485525695
Epoch Step: 20 / 67 Loss (mean): 6.958730575628579 Loss (std): 4.416892994786943 Loss ratio: 0.6347268293812292 Tokens per Sec: 2437.773046521303
Epoch Step: 25 / 67 Loss (mean): 8.951136430725455 Loss (std): 5.353224538619072 Loss ratio: 0.5980497091122109 Tokens per Sec: 2850.4662397295824
Epoch Step: 30 / 67 Loss (mean): 6.646948957815766 Loss (std): 4.4464929250984175 Loss ratio: 0.6689524702713477 Tokens per Sec: 3092.7571487146383
Epoch Step: 35 / 67 Loss (mean): 6.828501233831048 Loss (std): 3.822971327949025 Loss ratio: 0.5598551127161755 Tokens per Sec: 2696.405732381061
Epoch Step: 40 / 67 Loss (mean): 6.004493430256844 Loss (std): 4.267542970289998 Loss ratio: 0.7107248962561448 Tokens per Sec: 2738.5025405850874
Epoch Step: 45 / 67 Loss (mean): 27.643121894448996 Loss (std): 20.797433651620363 Loss ratio: 0.7523547351501093 Tokens per Sec: 2841.6605452980243
Epoch Step: 50 / 67 Loss (mean): 6.296822120435536 Loss (std): 3.7832933790363077 Loss ratio: 0.600825830343549 Tokens per Sec: 2675.5943273840476
Epoch Step: 55 / 67 Loss (mean): 8.591346082277596 Loss (std): 3.7392774842829772 Loss ratio: 0.43523767387236734 Tokens per Sec: 2646.851944577
Epoch Step: 60 / 67 Loss (mean): 6.518666000571102 Loss (std): 3.876362349842349 Loss ratio: 0.5946557699846472 Tokens per Sec: 2262.308081594237
Epoch Step: 65 / 67 Loss (mean): 7.131452147383243 Loss (std): 3.7921196660990883 Loss ratio: 0.5317457914220932 Tokens per Sec: 3241.2629010438172
Mean loss per sample: 10.486885713824659 Std loss per sample: 12.686263802618866 ratio: 1.209726524042768
Epoch ended with duration 0:00:11.521729
Train perplexity: 4.132459059381623
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix exception ( ) length ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt[0m
Epoch Step: 5 / 8 Loss (mean): 71.51681250333786 Loss (std): 31.98422745807476 Loss ratio: 0.4472266917178667 Tokens per Sec: 4396.80208442758
Mean loss per sample: 75.06415839419991 Std loss per sample: 38.576896564008784 ratio: 0.5139189912903834
Epoch ended with duration 0:00:01.035546
b'BLEU = 1.72, 8.4/1.8/0.9/0.8 (BP=0.938, ratio=0.940, hyp_len=2926, ref_len=3113)\n'
Validation perplexity: 26174.422918296103
Validation accuracy: 0.0
Validation BLEU: 1.72
Epoch 184 / 1000
Epoch Step: 5 / 67 Loss (mean): 5.201241663657129 Loss (std): 3.2426515047172018 Loss ratio: 0.6234379623955425 Tokens per Sec: 2691.904694805828
Epoch Step: 10 / 67 Loss (mean): 5.43427714984864 Loss (std): 3.4427083315833116 Loss ratio: 0.6335172529209705 Tokens per Sec: 2673.099671923081
Epoch Step: 15 / 67 Loss (mean): 6.347714602947235 Loss (std): 3.5629982752072524 Loss ratio: 0.5613041067651273 Tokens per Sec: 2591.0201560214923
Epoch Step: 20 / 67 Loss (mean): 6.70149796269834 Loss (std): 3.299578327168953 Loss ratio: 0.4923642960924496 Tokens per Sec: 3198.1885113616495
Epoch Step: 25 / 67 Loss (mean): 6.935224713757634 Loss (std): 3.5896595629953296 Loss ratio: 0.5175981617256616 Tokens per Sec: 2655.3431473887363
Epoch Step: 30 / 67 Loss (mean): 6.871169569436461 Loss (std): 3.500245865564594 Loss ratio: 0.5094104912115662 Tokens per Sec: 2999.91115733166
Epoch Step: 35 / 67 Loss (mean): 7.978214422240853 Loss (std): 4.108595190779479 Loss ratio: 0.5149767821890016 Tokens per Sec: 3198.125337922812
Epoch Step: 40 / 67 Loss (mean): 7.407339995726943 Loss (std): 4.683428919437972 Loss ratio: 0.6322686581336474 Tokens per Sec: 2996.6061972148623
Epoch Step: 45 / 67 Loss (mean): 6.448125516995788 Loss (std): 4.564344844121327 Loss ratio: 0.7078560788078264 Tokens per Sec: 2731.1625421394474
Epoch Step: 50 / 67 Loss (mean): 7.247569629922509 Loss (std): 4.23147192049521 Loss ratio: 0.5838470185957293 Tokens per Sec: 2431.889360093759
Epoch Step: 55 / 67 Loss (mean): 6.481193833053112 Loss (std): 4.2021186482541015 Loss ratio: 0.6483556512110361 Tokens per Sec: 2623.542197273456
Epoch Step: 60 / 67 Loss (mean): 7.186939649283886 Loss (std): 4.483080036771446 Loss ratio: 0.6237815058344263 Tokens per Sec: 3145.5454460232218
Epoch Step: 65 / 67 Loss (mean): 7.367021548561752 Loss (std): 4.313453606889754 Loss ratio: 0.5855084824248764 Tokens per Sec: 2372.025017945543
Mean loss per sample: 7.6171030885309845 Std loss per sample: 7.651914619625549 ratio: 1.0045701798557747
Epoch ended with duration 0:00:11.377648
Train perplexity: 2.802724202436785
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during keys ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt[0m
Epoch Step: 5 / 8 Loss (mean): 71.80672851204872 Loss (std): 32.46744425779349 Loss ratio: 0.45215044509854885 Tokens per Sec: 4416.060602983796
Mean loss per sample: 74.52501133768286 Std loss per sample: 39.086420919712666 ratio: 0.5244738674725836
Epoch ended with duration 0:00:01.018831
b'BLEU = 1.55, 8.1/1.7/0.9/0.7 (BP=0.904, ratio=0.909, hyp_len=2829, ref_len=3113)\n'
Validation perplexity: 24330.206063028643
Validation accuracy: 0.0
Validation BLEU: 1.55
Epoch 185 / 1000
Epoch Step: 5 / 67 Loss (mean): 7.6659145234152675 Loss (std): 4.28001600672777 Loss ratio: 0.5583177315184785 Tokens per Sec: 3234.9627435029824
Epoch Step: 10 / 67 Loss (mean): 6.886227304581553 Loss (std): 4.313838868775874 Loss ratio: 0.6264444488937775 Tokens per Sec: 2622.7366259497135
Epoch Step: 15 / 67 Loss (mean): 7.5587762873619795 Loss (std): 4.515064257815965 Loss ratio: 0.5973274093804047 Tokens per Sec: 3409.8926837044946
Epoch Step: 20 / 67 Loss (mean): 6.839461632072926 Loss (std): 3.855627192056251 Loss ratio: 0.5637325566643577 Tokens per Sec: 2523.5798633100035
Epoch Step: 25 / 67 Loss (mean): 5.863069236511365 Loss (std): 3.4315470168049367 Loss ratio: 0.5852816806998464 Tokens per Sec: 2954.4859704859778
Epoch Step: 30 / 67 Loss (mean): 7.097287994809449 Loss (std): 3.875317186835353 Loss ratio: 0.546027889761489 Tokens per Sec: 3102.0969794924313
Epoch Step: 35 / 67 Loss (mean): 7.3321552593261 Loss (std): 3.737835169011154 Loss ratio: 0.5097866911992667 Tokens per Sec: 2318.7358367433567
Epoch Step: 40 / 67 Loss (mean): 5.864797637797892 Loss (std): 3.9637909491025107 Loss ratio: 0.6758615034824681 Tokens per Sec: 2637.295068296674
Epoch Step: 45 / 67 Loss (mean): 6.870804558042437 Loss (std): 3.648940029170514 Loss ratio: 0.5310790022253427 Tokens per Sec: 2653.556502477324
Epoch Step: 50 / 67 Loss (mean): 6.468200095929205 Loss (std): 3.6573915794299645 Loss ratio: 0.565441935188703 Tokens per Sec: 2857.4611224845185
Epoch Step: 55 / 67 Loss (mean): 7.227133040316403 Loss (std): 4.4410539590036056 Loss ratio: 0.6144973303008653 Tokens per Sec: 2612.7095276452073
Epoch Step: 60 / 67 Loss (mean): 27.983093087095767 Loss (std): 22.022139148321877 Loss ratio: 0.7869801626210239 Tokens per Sec: 3194.080432808669
Epoch Step: 65 / 67 Loss (mean): 6.880156292114407 Loss (std): 3.9150570202079322 Loss ratio: 0.5690360587731298 Tokens per Sec: 2376.8859117339675
Mean loss per sample: 9.106590081259531 Std loss per sample: 10.931187715903517 ratio: 1.200360136819909
Epoch ended with duration 0:00:11.462076
Train perplexity: 3.4284869403365374
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix bad ( ) length ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt[0m
Epoch Step: 5 / 8 Loss (mean): 80.72163206338882 Loss (std): 32.47606725051735 Loss ratio: 0.40232173731342113 Tokens per Sec: 4303.808404791601
Mean loss per sample: 75.55200050697952 Std loss per sample: 38.89772993802361 ratio: 0.514847120883718
Epoch ended with duration 0:00:01.032341
b'BLEU = 1.57, 8.2/1.7/0.9/0.7 (BP=0.910, ratio=0.914, hyp_len=2845, ref_len=3113)\n'
Validation perplexity: 27963.331253585173
Validation accuracy: 0.0
Validation BLEU: 1.57
Model saved checkpoint_commit_msg_generator!
Epoch 186 / 1000
Epoch Step: 5 / 67 Loss (mean): 5.720401853322983 Loss (std): 4.667675656660967 Loss ratio: 0.8159698874912981 Tokens per Sec: 2751.9043373224904
Epoch Step: 10 / 67 Loss (mean): 5.904380274005234 Loss (std): 3.665284628290451 Loss ratio: 0.6207738082906551 Tokens per Sec: 2615.3755013338155
Epoch Step: 15 / 67 Loss (mean): 6.22161665186286 Loss (std): 3.7330803152321037 Loss ratio: 0.6000177323870244 Tokens per Sec: 3036.904055856465
Epoch Step: 20 / 67 Loss (mean): 6.860697377473116 Loss (std): 3.8387720324396994 Loss ratio: 0.5595308787477183 Tokens per Sec: 2495.427976472179
Epoch Step: 25 / 67 Loss (mean): 5.367791433818638 Loss (std): 3.084761777347603 Loss ratio: 0.5746798875069384 Tokens per Sec: 2607.056143651877
Epoch Step: 30 / 67 Loss (mean): 6.858576584607363 Loss (std): 3.879723987832069 Loss ratio: 0.5656748072973765 Tokens per Sec: 2510.2243040044723
Epoch Step: 35 / 67 Loss (mean): 7.578046555630863 Loss (std): 4.260303237090888 Loss ratio: 0.5621901641558631 Tokens per Sec: 2824.1101761255645
Epoch Step: 40 / 67 Loss (mean): 7.551623157225549 Loss (std): 3.811008041262003 Loss ratio: 0.5046607811216787 Tokens per Sec: 2998.3753554451146
Epoch Step: 45 / 67 Loss (mean): 6.209407499292865 Loss (std): 3.5855015649548334 Loss ratio: 0.5774305463706729 Tokens per Sec: 3098.2885730548123
Epoch Step: 50 / 67 Loss (mean): 5.6324359541758895 Loss (std): 3.8003688890050435 Loss ratio: 0.6747291793326916 Tokens per Sec: 2651.8357819631556
Epoch Step: 55 / 67 Loss (mean): 5.959767104126513 Loss (std): 3.7789289982227503 Loss ratio: 0.634073266991631 Tokens per Sec: 2743.299832513365
Epoch Step: 60 / 67 Loss (mean): 6.590786334592849 Loss (std): 3.620467572621703 Loss ratio: 0.5493225525487104 Tokens per Sec: 2669.693398306567
Epoch Step: 65 / 67 Loss (mean): 7.2711371621117 Loss (std): 4.438038775141785 Loss ratio: 0.6103637816471723 Tokens per Sec: 3084.7529928261174
Mean loss per sample: 8.077654952002602 Std loss per sample: 9.2773261933777 ratio: 1.1485172675118633
Epoch ended with duration 0:00:11.399996
Train perplexity: 2.9829251388788247
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during keys ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api parity[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in commit 84cd616[0m
Epoch Step: 5 / 8 Loss (mean): 80.53213396668434 Loss (std): 32.792574473139865 Loss ratio: 0.4071986281489319 Tokens per Sec: 4319.439148221042
Mean loss per sample: 75.68613755409835 Std loss per sample: 39.2092673984486 ratio: 0.5180508434642065
Epoch ended with duration 0:00:01.030655
b'BLEU = 1.71, 8.6/1.9/1.0/0.8 (BP=0.894, ratio=0.899, hyp_len=2799, ref_len=3113)\n'
Validation perplexity: 28476.296125750803
Validation accuracy: 0.0
Validation BLEU: 1.71
Epoch 187 / 1000
Epoch Step: 5 / 67 Loss (mean): 5.649739172775298 Loss (std): 4.056731215741299 Loss ratio: 0.718038672526634 Tokens per Sec: 3129.801463779087
Epoch Step: 10 / 67 Loss (mean): 6.096686840988696 Loss (std): 4.2324661778856685 Loss ratio: 0.6942239757880188 Tokens per Sec: 2676.048177639932
Epoch Step: 15 / 67 Loss (mean): 5.45470574637875 Loss (std): 3.415767435986638 Loss ratio: 0.6262056277287341 Tokens per Sec: 2875.0278052780423
Epoch Step: 20 / 67 Loss (mean): 5.800788197666407 Loss (std): 3.3264158370622 Loss ratio: 0.5734420433416928 Tokens per Sec: 2752.0887758214812
Epoch Step: 25 / 67 Loss (mean): 30.531293224543333 Loss (std): 22.497354477382533 Loss ratio: 0.7368621535918918 Tokens per Sec: 3070.7772396614732
Epoch Step: 30 / 67 Loss (mean): 5.720114140771329 Loss (std): 3.8137275811616975 Loss ratio: 0.6667222868820997 Tokens per Sec: 2836.399833203035
Epoch Step: 35 / 67 Loss (mean): 7.162026138976216 Loss (std): 4.6210039725695795 Loss ratio: 0.6452090348318854 Tokens per Sec: 2775.1925144431816
Epoch Step: 40 / 67 Loss (mean): 6.6831741677597165 Loss (std): 3.815301351217478 Loss ratio: 0.5708816283171047 Tokens per Sec: 2906.544734974584
Epoch Step: 45 / 67 Loss (mean): 6.798272423446178 Loss (std): 3.973847864540273 Loss ratio: 0.5845378968390694 Tokens per Sec: 3081.0514992026237
Epoch Step: 50 / 67 Loss (mean): 7.244543460314162 Loss (std): 3.663879287823985 Loss ratio: 0.5057432960261515 Tokens per Sec: 2301.6159804028816
Epoch Step: 55 / 67 Loss (mean): 5.87709794822149 Loss (std): 3.3129535618344335 Loss ratio: 0.563705691316067 Tokens per Sec: 2770.378014330052
Epoch Step: 60 / 67 Loss (mean): 6.084054812788963 Loss (std): 4.194437219649665 Loss ratio: 0.6894147651057918 Tokens per Sec: 2368.67689989809
Epoch Step: 65 / 67 Loss (mean): 6.94617437152192 Loss (std): 4.509487722888252 Loss ratio: 0.6492045090857999 Tokens per Sec: 2353.1518050803734
Mean loss per sample: 7.516479481838598 Std loss per sample: 8.035822466844452 ratio: 1.0690939137478785
Epoch ended with duration 0:00:11.404920
Train perplexity: 2.7648255157462507
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix bad test length ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api and gb2312han[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix colon and space in gerrit core ( s )[0m
Epoch Step: 5 / 8 Loss (mean): 72.3012592792511 Loss (std): 33.104398561104176 Loss ratio: 0.45786752390085167 Tokens per Sec: 4287.876798203822
Mean loss per sample: 78.55089753475346 Std loss per sample: 38.925546795576096 ratio: 0.4955455382079393
Epoch ended with duration 0:00:01.066199
b'BLEU = 1.50, 8.0/1.6/0.8/0.6 (BP=0.935, ratio=0.937, hyp_len=2918, ref_len=3113)\n'
Validation perplexity: 41984.40821557428
Validation accuracy: 0.0
Validation BLEU: 1.5
Epoch 188 / 1000
Epoch Step: 5 / 67 Loss (mean): 6.684220317751169 Loss (std): 3.4642904404555366 Loss ratio: 0.5182789129878739 Tokens per Sec: 2740.848232380691
Epoch Step: 10 / 67 Loss (mean): 5.180897293612361 Loss (std): 3.3220593520774697 Loss ratio: 0.6412131265704317 Tokens per Sec: 2476.8031459261706
Epoch Step: 15 / 67 Loss (mean): 5.945748578757048 Loss (std): 3.761890315411742 Loss ratio: 0.6327025547047536 Tokens per Sec: 2617.2792046617888
Epoch Step: 20 / 67 Loss (mean): 6.316103236284107 Loss (std): 4.555134938230488 Loss ratio: 0.7211938703063959 Tokens per Sec: 3229.5061567526745
Epoch Step: 25 / 67 Loss (mean): 7.097921872511506 Loss (std): 4.651610688959037 Loss ratio: 0.6553482515739675 Tokens per Sec: 2807.220755333694
Epoch Step: 30 / 67 Loss (mean): 8.848447322845459 Loss (std): 4.302737506874229 Loss ratio: 0.4862703421158603 Tokens per Sec: 3489.3995319327687
Epoch Step: 35 / 67 Loss (mean): 5.517731389962137 Loss (std): 3.4846578547140474 Loss ratio: 0.631538146466017 Tokens per Sec: 2587.9797096823017
Epoch Step: 40 / 67 Loss (mean): 6.051706155762076 Loss (std): 3.615256302541475 Loss ratio: 0.5973945544430048 Tokens per Sec: 2645.211232739626
Epoch Step: 45 / 67 Loss (mean): 6.693899077596143 Loss (std): 3.946423998899299 Loss ratio: 0.5895553478103087 Tokens per Sec: 2842.0906129309233
Epoch Step: 50 / 67 Loss (mean): 7.36939924955368 Loss (std): 4.227681416069237 Loss ratio: 0.573680604470613 Tokens per Sec: 3031.251439716657
Epoch Step: 55 / 67 Loss (mean): 6.111329510807991 Loss (std): 3.400922874266776 Loss ratio: 0.5564947640692889 Tokens per Sec: 3362.9468515932276
Epoch Step: 60 / 67 Loss (mean): 6.6231513186357915 Loss (std): 3.845615454500299 Loss ratio: 0.580632280539893 Tokens per Sec: 2426.845782687416
Epoch Step: 65 / 67 Loss (mean): 6.2692074798978865 Loss (std): 3.5944248597778095 Loss ratio: 0.5733459725656354 Tokens per Sec: 2242.2162231873167
Mean loss per sample: 7.284653391726612 Std loss per sample: 7.7882828241083395 ratio: 1.0691356754123285
Epoch ended with duration 0:00:11.373751
Train perplexity: 2.679449932934805
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix raw print ( ) creation[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test method_1 for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix colon and space and actual commits in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 72.66384238004684 Loss (std): 33.54752796892476 Loss ratio: 0.46168117278280285 Tokens per Sec: 4292.134062804235
Mean loss per sample: 76.72163852023297 Std loss per sample: 40.26318431913281 ratio: 0.5247956781907706
Epoch ended with duration 0:00:01.035427
b'BLEU = 1.53, 8.2/1.6/0.9/0.7 (BP=0.903, ratio=0.907, hyp_len=2825, ref_len=3113)\n'
Validation perplexity: 32766.313323379964
Validation accuracy: 0.0
Validation BLEU: 1.53
Epoch 189 / 1000
Epoch Step: 5 / 67 Loss (mean): 6.454817482735962 Loss (std): 4.0676443943794505 Loss ratio: 0.6301718685708406 Tokens per Sec: 2867.3156967240766
Epoch Step: 10 / 67 Loss (mean): 5.937300787772983 Loss (std): 3.348057137778194 Loss ratio: 0.5639022271994432 Tokens per Sec: 3115.607899005916
Epoch Step: 15 / 67 Loss (mean): 5.434873847523704 Loss (std): 3.6220035696936406 Loss ratio: 0.6664374687084847 Tokens per Sec: 2617.573064334622
Epoch Step: 20 / 67 Loss (mean): 23.91686494741589 Loss (std): 24.537047762198885 Loss ratio: 1.025930773792742 Tokens per Sec: 2779.0534148831157
Epoch Step: 25 / 67 Loss (mean): 5.559384807012975 Loss (std): 3.857142192603123 Loss ratio: 0.6938073773446064 Tokens per Sec: 2938.6043963476895
Epoch Step: 30 / 67 Loss (mean): 5.51512108836323 Loss (std): 3.083775217400306 Loss ratio: 0.5591491406973812 Tokens per Sec: 2811.5021209252704
Epoch Step: 35 / 67 Loss (mean): 5.66171920648776 Loss (std): 3.5801290289207373 Loss ratio: 0.6323395594783772 Tokens per Sec: 2673.397536942535
Epoch Step: 40 / 67 Loss (mean): 7.427528884727508 Loss (std): 4.600619986802247 Loss ratio: 0.6194011572626862 Tokens per Sec: 3435.721162887637
Epoch Step: 45 / 67 Loss (mean): 6.832353621721268 Loss (std): 3.98776160426632 Loss ratio: 0.5836585494621526 Tokens per Sec: 3085.716273038371
Epoch Step: 50 / 67 Loss (mean): 6.707549654878676 Loss (std): 4.7570917405158175 Loss ratio: 0.7092145396278638 Tokens per Sec: 2799.351743946341
Epoch Step: 55 / 67 Loss (mean): 25.45097346790135 Loss (std): 22.083783355917834 Loss ratio: 0.867698965769219 Tokens per Sec: 2655.9687394142575
Epoch Step: 60 / 67 Loss (mean): 5.9114397573284805 Loss (std): 3.664591140302662 Loss ratio: 0.6199151629278851 Tokens per Sec: 2118.4459185982932
Epoch Step: 65 / 67 Loss (mean): 6.250907029025257 Loss (std): 3.6847223537233993 Loss ratio: 0.589470029967472 Tokens per Sec: 2294.508334218691
Mean loss per sample: 8.476142895680429 Std loss per sample: 10.618829365245341 ratio: 1.252790272171657
Epoch ended with duration 0:00:11.468236
Train perplexity: 3.1481649084571903
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix exception creation length during openjdk[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and use constraints in java[0m
Epoch Step: 5 / 8 Loss (mean): 72.40510392189026 Loss (std): 32.62079625886324 Loss ratio: 0.45053172348256215 Tokens per Sec: 4430.310445452931
Mean loss per sample: 75.5825368214826 Std loss per sample: 39.9667564602904 ratio: 0.5287829456516834
Epoch ended with duration 0:00:01.015841
b'BLEU = 1.55, 7.8/1.8/1.0/0.8 (BP=0.863, ratio=0.872, hyp_len=2714, ref_len=3113)\n'
Validation perplexity: 28079.28936682673
Validation accuracy: 0.0
Validation BLEU: 1.55
Epoch 190 / 1000
Epoch Step: 5 / 67 Loss (mean): 7.114923438057303 Loss (std): 3.809649601584357 Loss ratio: 0.535444918663041 Tokens per Sec: 2966.1264015168526
Epoch Step: 10 / 67 Loss (mean): 6.361748240888119 Loss (std): 3.8251968775776066 Loss ratio: 0.601280769489174 Tokens per Sec: 2448.005173977627
Epoch Step: 15 / 67 Loss (mean): 8.711931782774627 Loss (std): 4.468590239052916 Loss ratio: 0.512927597514972 Tokens per Sec: 3403.25589744535
Epoch Step: 20 / 67 Loss (mean): 6.652968673035502 Loss (std): 4.355789249569125 Loss ratio: 0.6547136268990937 Tokens per Sec: 2281.2541550937235
Epoch Step: 25 / 67 Loss (mean): 6.176888791844249 Loss (std): 3.4969332616787274 Loss ratio: 0.5661318148217203 Tokens per Sec: 2440.788520121382
Epoch Step: 30 / 67 Loss (mean): 6.305664578452706 Loss (std): 2.88645095520492 Loss ratio: 0.45775523250448596 Tokens per Sec: 2686.2570299533963
Epoch Step: 35 / 67 Loss (mean): 5.771235546097159 Loss (std): 3.7293856421715548 Loss ratio: 0.6462022927990835 Tokens per Sec: 2959.3820578641103
Epoch Step: 40 / 67 Loss (mean): 6.317521557677537 Loss (std): 3.468071061744694 Loss ratio: 0.5489607008194579 Tokens per Sec: 3208.91516036025
Epoch Step: 45 / 67 Loss (mean): 23.013726931996644 Loss (std): 19.35377597976066 Loss ratio: 0.8409666125329988 Tokens per Sec: 2386.8430838311256
Epoch Step: 50 / 67 Loss (mean): 6.07985863275826 Loss (std): 4.123032352784115 Loss ratio: 0.6781460888858878 Tokens per Sec: 2679.699432748897
Epoch Step: 55 / 67 Loss (mean): 8.235376933589578 Loss (std): 4.962787431482113 Loss ratio: 0.6026181280471116 Tokens per Sec: 3543.31102056383
Epoch Step: 60 / 67 Loss (mean): 5.443459464237094 Loss (std): 3.5309671161306304 Loss ratio: 0.6486623330859136 Tokens per Sec: 2579.4936282458475
Epoch Step: 65 / 67 Loss (mean): 5.801658595446497 Loss (std): 4.20746557855738 Loss ratio: 0.7252177130622027 Tokens per Sec: 2683.5348620784926
Mean loss per sample: 7.9509479290008045 Std loss per sample: 9.780889186231517 ratio: 1.230153847512454
Epoch ended with duration 0:00:11.440562
Train perplexity: 2.9322234305233734
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix bad test length ( ) creation[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api and gb2312han[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix sorting of password[0m
Epoch Step: 5 / 8 Loss (mean): 72.30655011534691 Loss (std): 33.21345519406232 Loss ratio: 0.45934227453914767 Tokens per Sec: 4430.659725897799
Mean loss per sample: 75.43580955804372 Std loss per sample: 39.70574253172631 ratio: 0.5263513809204224
Epoch ended with duration 0:00:01.018805
b'BLEU = 1.66, 7.8/1.7/0.9/0.8 (BP=0.921, ratio=0.924, hyp_len=2877, ref_len=3113)\n'
Validation perplexity: 27526.47032705666
Validation accuracy: 0.0
Validation BLEU: 1.66
Model saved checkpoint_commit_msg_generator!
Epoch 191 / 1000
Epoch Step: 5 / 67 Loss (mean): 7.0205836202949286 Loss (std): 4.440135649910943 Loss ratio: 0.6324453763467055 Tokens per Sec: 2544.173704212624
Epoch Step: 10 / 67 Loss (mean): 5.965466661378741 Loss (std): 3.474373170926766 Loss ratio: 0.5824143136060653 Tokens per Sec: 2953.938422209428
Epoch Step: 15 / 67 Loss (mean): 6.498965037055314 Loss (std): 3.5154323282167184 Loss ratio: 0.5409218711245081 Tokens per Sec: 2495.642857713095
Epoch Step: 20 / 67 Loss (mean): 7.031970659270883 Loss (std): 3.712530019164014 Loss ratio: 0.5279501577938824 Tokens per Sec: 3317.8071564313846
Epoch Step: 25 / 67 Loss (mean): 7.081277436111122 Loss (std): 4.102593825709343 Loss ratio: 0.5793578718986606 Tokens per Sec: 3230.437706337155
Epoch Step: 30 / 67 Loss (mean): 6.252224576659501 Loss (std): 3.745416043993908 Loss ratio: 0.5990533446249056 Tokens per Sec: 2451.576753386345
Epoch Step: 35 / 67 Loss (mean): 5.584656469989568 Loss (std): 3.5927122715285242 Loss ratio: 0.6433184012006445 Tokens per Sec: 3012.936886338727
Epoch Step: 40 / 67 Loss (mean): 4.854021850042045 Loss (std): 3.3201567902748748 Loss ratio: 0.6840012041243935 Tokens per Sec: 2468.6958267570103
Epoch Step: 45 / 67 Loss (mean): 26.08868372719735 Loss (std): 22.92311157808726 Loss ratio: 0.8786611014104175 Tokens per Sec: 2507.2810821202575
Epoch Step: 50 / 67 Loss (mean): 9.004654651507735 Loss (std): 4.2317390180473025 Loss ratio: 0.4699501737513878 Tokens per Sec: 2898.698470769006
Epoch Step: 55 / 67 Loss (mean): 6.648954821750522 Loss (std): 4.01533219943117 Loss ratio: 0.6039042687274603 Tokens per Sec: 3114.822277347989
Epoch Step: 60 / 67 Loss (mean): 5.595483899582177 Loss (std): 4.023763970718314 Loss ratio: 0.7191092035880533 Tokens per Sec: 2461.727912435898
Epoch Step: 65 / 67 Loss (mean): 5.424395306035876 Loss (std): 3.126133350088999 Loss ratio: 0.576310016825371 Tokens per Sec: 3037.618485102171
Mean loss per sample: 7.780533977170757 Std loss per sample: 9.470847329556388 ratio: 1.2172490162430063
Epoch ended with duration 0:00:11.409949
Train perplexity: 2.86538873825369
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix bad ( ) call ( ) creation[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix colon and space in gerrit core ( s )[0m
Epoch Step: 5 / 8 Loss (mean): 72.8175333738327 Loss (std): 33.37753861345677 Loss ratio: 0.45837227748572895 Tokens per Sec: 4415.027613190247
Mean loss per sample: 75.84570141796206 Std loss per sample: 39.95898337753375 ratio: 0.5268457227039437
Epoch ended with duration 0:00:01.022100
b'BLEU = 2.01, 8.2/2.0/1.2/1.1 (BP=0.923, ratio=0.926, hyp_len=2882, ref_len=3113)\n'
Validation perplexity: 29098.76658645959
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.01
Model saved best_on_validation_commit_msg_generator!
Epoch 192 / 1000
Epoch Step: 5 / 67 Loss (mean): 5.627296556252986 Loss (std): 4.101455124220152 Loss ratio: 0.728850005188133 Tokens per Sec: 2720.6714785879085
Epoch Step: 10 / 67 Loss (mean): 5.85926803201437 Loss (std): 3.0352197370747893 Loss ratio: 0.5180202920383051 Tokens per Sec: 2604.6468464299974
Epoch Step: 15 / 67 Loss (mean): 24.408067729789764 Loss (std): 23.09560167303871 Loss ratio: 0.9462281868732606 Tokens per Sec: 2301.7720593197355
Epoch Step: 20 / 67 Loss (mean): 6.356394973117858 Loss (std): 3.633102801337691 Loss ratio: 0.5715665588281761 Tokens per Sec: 3103.419194230566
Epoch Step: 25 / 67 Loss (mean): 5.52142928307876 Loss (std): 3.8919264610815496 Loss ratio: 0.7048766291382081 Tokens per Sec: 2682.2607333823644
Epoch Step: 30 / 67 Loss (mean): 6.770598484203219 Loss (std): 4.116215383307974 Loss ratio: 0.6079544360681994 Tokens per Sec: 3164.357881385728
Epoch Step: 35 / 67 Loss (mean): 7.3712580762803555 Loss (std): 3.1600444325388644 Loss ratio: 0.4286981136513767 Tokens per Sec: 2939.4715066194676
Epoch Step: 40 / 67 Loss (mean): 5.854956062976271 Loss (std): 3.585385633886036 Loss ratio: 0.6123676412463912 Tokens per Sec: 2974.527998325177
Epoch Step: 45 / 67 Loss (mean): 5.590325688943267 Loss (std): 3.4220066998085965 Loss ratio: 0.6121301137385887 Tokens per Sec: 2703.4167301721845
Epoch Step: 50 / 67 Loss (mean): 5.066843138076365 Loss (std): 3.348840530951177 Loss ratio: 0.660932347754221 Tokens per Sec: 2568.5397320688003
Epoch Step: 55 / 67 Loss (mean): 5.9588549910113215 Loss (std): 3.3880846411993226 Loss ratio: 0.5685798104350758 Tokens per Sec: 2797.2131309809856
Epoch Step: 60 / 67 Loss (mean): 6.617253051139414 Loss (std): 3.948841027438049 Loss ratio: 0.5967492850765477 Tokens per Sec: 3005.692210558658
Epoch Step: 65 / 67 Loss (mean): 6.358087293803692 Loss (std): 3.335845005690943 Loss ratio: 0.524661718460819 Tokens per Sec: 2614.572749137388
Mean loss per sample: 7.86572902642131 Std loss per sample: 9.864419089867573 ratio: 1.254101057477645
Epoch ended with duration 0:00:11.434122
Train perplexity: 2.8986087835123993
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix bad print warnings length and getimei[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api and gb2312han[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in gerrit master server[0m
Epoch Step: 5 / 8 Loss (mean): 83.21428701281548 Loss (std): 31.71895131277109 Loss ratio: 0.38117194115820746 Tokens per Sec: 4201.212660820015
Mean loss per sample: 79.50424276854172 Std loss per sample: 39.44637739400696 ratio: 0.4961543688787276
Epoch ended with duration 0:00:01.065084
b'BLEU = 1.74, 8.3/1.9/1.0/0.9 (BP=0.911, ratio=0.915, hyp_len=2847, ref_len=3113)\n'
Validation perplexity: 47774.578696789504
Validation accuracy: 0.0
Validation BLEU: 1.74
Epoch 193 / 1000
Epoch Step: 5 / 67 Loss (mean): 6.069607222219929 Loss (std): 3.3111587155661586 Loss ratio: 0.5455309700180432 Tokens per Sec: 2604.481056978923
Epoch Step: 10 / 67 Loss (mean): 24.313865731004626 Loss (std): 22.681202947861127 Loss ratio: 0.9328505470414952 Tokens per Sec: 2542.5443066029725
Epoch Step: 15 / 67 Loss (mean): 23.160357191227376 Loss (std): 19.187204087823027 Loss ratio: 0.8284502665222585 Tokens per Sec: 2618.650087986428
Epoch Step: 20 / 67 Loss (mean): 5.481398053467274 Loss (std): 3.769940351160775 Loss ratio: 0.6877698562278448 Tokens per Sec: 2986.1271912268426
Epoch Step: 25 / 67 Loss (mean): 6.543111205101013 Loss (std): 4.293754252747753 Loss ratio: 0.6562251684489696 Tokens per Sec: 2931.712389116932
Epoch Step: 30 / 67 Loss (mean): 6.156737846322358 Loss (std): 3.5492707364275806 Loss ratio: 0.5764856040683441 Tokens per Sec: 2251.545188590871
Epoch Step: 35 / 67 Loss (mean): 5.902427387423813 Loss (std): 3.315057159167771 Loss ratio: 0.5616430227047093 Tokens per Sec: 3185.6741770625654
Epoch Step: 40 / 67 Loss (mean): 18.392992158886045 Loss (std): 21.911984797323974 Loss ratio: 1.1913224671679006 Tokens per Sec: 2671.5037651143916
Epoch Step: 45 / 67 Loss (mean): 5.933577275136486 Loss (std): 3.1505095691392517 Loss ratio: 0.5309629289469029 Tokens per Sec: 3135.848251805667
Epoch Step: 50 / 67 Loss (mean): 7.350478232372552 Loss (std): 3.9723910911600644 Loss ratio: 0.5404262097757243 Tokens per Sec: 3034.2300537889037
Epoch Step: 55 / 67 Loss (mean): 5.488122231326997 Loss (std): 2.6976284217282567 Loss ratio: 0.491539420592676 Tokens per Sec: 2600.6928098301833
Epoch Step: 60 / 67 Loss (mean): 5.834665677510202 Loss (std): 3.4465162757524226 Loss ratio: 0.59069644539139 Tokens per Sec: 2829.2333509887317
Epoch Step: 65 / 67 Loss (mean): 6.074651554226875 Loss (std): 4.093284110325517 Loss ratio: 0.6738302722034025 Tokens per Sec: 2215.8515960459968
Mean loss per sample: 9.568773386451563 Std loss per sample: 12.359223298570104 ratio: 1.291620440721226
Epoch ended with duration 0:00:11.535216
Train perplexity: 3.6497267721705846
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during keys ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for developer options than exists[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in gerrit master server[0m
Epoch Step: 5 / 8 Loss (mean): 72.81082928180695 Loss (std): 32.44486585581534 Loss ratio: 0.445604948822115 Tokens per Sec: 4177.9478160342505
Mean loss per sample: 77.10778169260651 Std loss per sample: 38.29455852380708 ratio: 0.49663675550244707
Epoch ended with duration 0:00:01.051491
b'BLEU = 1.84, 8.1/1.9/1.0/0.7 (BP=0.988, ratio=0.988, hyp_len=3077, ref_len=3113)\n'
Validation perplexity: 34526.607930398866
Validation accuracy: 0.0
Validation BLEU: 1.84
Epoch 194 / 1000
Epoch Step: 5 / 67 Loss (mean): 6.130236940225586 Loss (std): 3.910051085414361 Loss ratio: 0.6378303356852754 Tokens per Sec: 2801.4275876641805
Epoch Step: 10 / 67 Loss (mean): 5.934139180928469 Loss (std): 3.443741688613563 Loss ratio: 0.5803270842856684 Tokens per Sec: 2957.4539097298107
Epoch Step: 15 / 67 Loss (mean): 5.2670967746526 Loss (std): 3.2617746558193503 Loss ratio: 0.6192737280841941 Tokens per Sec: 2261.9144831994136
Epoch Step: 20 / 67 Loss (mean): 7.407658819109201 Loss (std): 3.2980160274272885 Loss ratio: 0.44521705277780155 Tokens per Sec: 3508.4776499210116
Epoch Step: 25 / 67 Loss (mean): 6.885708590503782 Loss (std): 3.6499086699820973 Loss ratio: 0.5300701622801405 Tokens per Sec: 2858.6377902022787
Epoch Step: 30 / 67 Loss (mean): 25.89765154570341 Loss (std): 19.272133361300586 Loss ratio: 0.7441652895549117 Tokens per Sec: 2812.8591087474097
Epoch Step: 35 / 67 Loss (mean): 23.904348380863667 Loss (std): 19.114991908169277 Loss ratio: 0.7996449685058786 Tokens per Sec: 2424.7513625642982
Epoch Step: 40 / 67 Loss (mean): 5.955756014096551 Loss (std): 3.8953674392712094 Loss ratio: 0.6540508761694314 Tokens per Sec: 2981.433341825404
Epoch Step: 45 / 67 Loss (mean): 5.8556545577012 Loss (std): 3.554988256569745 Loss ratio: 0.6071034794725586 Tokens per Sec: 2477.9579617424
Epoch Step: 50 / 67 Loss (mean): 5.284360649995506 Loss (std): 3.0414095002700523 Loss ratio: 0.5755491916080026 Tokens per Sec: 2708.6969902127757
Epoch Step: 55 / 67 Loss (mean): 5.446633156388998 Loss (std): 3.7065770469361303 Loss ratio: 0.6805262885362949 Tokens per Sec: 3049.547764427197
Epoch Step: 60 / 67 Loss (mean): 5.858025657013059 Loss (std): 4.0712883642112825 Loss ratio: 0.6949932626766928 Tokens per Sec: 3040.5501304491436
Epoch Step: 65 / 67 Loss (mean): 20.504090973874554 Loss (std): 18.94812333382922 Loss ratio: 0.9241142832409452 Tokens per Sec: 2403.2281612695742
Mean loss per sample: 8.233258218129427 Std loss per sample: 10.217785778240849 ratio: 1.2410379351083076
Epoch ended with duration 0:00:11.461682
Train perplexity: 3.046390620687205
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings when scoring is not found[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix colon and space and quicksettings bug in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 72.72769397497177 Loss (std): 32.74463387582016 Loss ratio: 0.45023610795481533 Tokens per Sec: 4404.285950149057
Mean loss per sample: 75.65533637414214 Std loss per sample: 39.55950868290224 ratio: 0.5228911875728979
Epoch ended with duration 0:00:01.022335
b'BLEU = 1.62, 8.0/1.8/0.9/0.7 (BP=0.922, ratio=0.925, hyp_len=2880, ref_len=3113)\n'
Validation perplexity: 28357.68061759136
Validation accuracy: 0.0
Validation BLEU: 1.62
Epoch 195 / 1000
Epoch Step: 5 / 67 Loss (mean): 5.410619087982923 Loss (std): 3.603947093807997 Loss ratio: 0.6660877498865934 Tokens per Sec: 2634.061781354211
Epoch Step: 10 / 67 Loss (mean): 7.9526539305225015 Loss (std): 4.1705264652532295 Loss ratio: 0.5244194581693836 Tokens per Sec: 3596.046923198163
Epoch Step: 15 / 67 Loss (mean): 3.0388579148621786 Loss (std): 2.4610330824221283 Loss ratio: 0.8098546070173023 Tokens per Sec: 2562.8033949242176
Epoch Step: 20 / 67 Loss (mean): 5.982463373802602 Loss (std): 3.4767077673329654 Loss ratio: 0.5811498625394983 Tokens per Sec: 2980.999512106147
Epoch Step: 25 / 67 Loss (mean): 6.29134975373745 Loss (std): 3.5938155797199602 Loss ratio: 0.5712312493173682 Tokens per Sec: 3055.426352581558
Epoch Step: 30 / 67 Loss (mean): 6.354289315640926 Loss (std): 3.447640824880595 Loss ratio: 0.5425690669126935 Tokens per Sec: 3579.6820520357596
Epoch Step: 35 / 67 Loss (mean): 5.784662187797949 Loss (std): 3.5626540090629297 Loss ratio: 0.615879353608223 Tokens per Sec: 3009.0442115514566
Epoch Step: 40 / 67 Loss (mean): 5.259967591613531 Loss (std): 3.5885527633453385 Loss ratio: 0.6822385691248195 Tokens per Sec: 2469.896727365306
Epoch Step: 45 / 67 Loss (mean): 6.019443581113592 Loss (std): 3.4992944804450796 Loss ratio: 0.5813318844659249 Tokens per Sec: 2552.678703426952
Epoch Step: 50 / 67 Loss (mean): 19.050126381218433 Loss (std): 20.154759035603824 Loss ratio: 1.0579855814224126 Tokens per Sec: 2434.4612686639507
Epoch Step: 55 / 67 Loss (mean): 5.814178132452071 Loss (std): 3.005405121036634 Loss ratio: 0.5169097080569038 Tokens per Sec: 3327.0797038264254
Epoch Step: 60 / 67 Loss (mean): 4.5275643789209425 Loss (std): 2.9911499695946104 Loss ratio: 0.6606532164447086 Tokens per Sec: 2319.971461710153
Epoch Step: 65 / 67 Loss (mean): 4.842837110161781 Loss (std): 3.1994898153300464 Loss ratio: 0.6606643466526099 Tokens per Sec: 2423.2182940647363
Mean loss per sample: 6.710802651850085 Std loss per sample: 7.31135339691379 ratio: 1.0894901513603803
Epoch ended with duration 0:00:11.371164
Train perplexity: 2.4792836886829037
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during log codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix colon and space in gerrit core ( s )[0m
Epoch Step: 5 / 8 Loss (mean): 72.92932778596878 Loss (std): 32.68352644223071 Loss ratio: 0.44815340322551067 Tokens per Sec: 4418.389525631382
Mean loss per sample: 75.93410036651815 Std loss per sample: 39.463952720683 ratio: 0.5197131793252133
Epoch ended with duration 0:00:01.019594
b'BLEU = 1.88, 8.2/2.0/1.1/0.8 (BP=0.960, ratio=0.961, hyp_len=2991, ref_len=3113)\n'
Validation perplexity: 29449.455731938706
Validation accuracy: 0.0
Validation BLEU: 1.88
Model saved checkpoint_commit_msg_generator!
Epoch 196 / 1000
Epoch Step: 5 / 67 Loss (mean): 5.309135967632756 Loss (std): 3.487084194086847 Loss ratio: 0.6568082293137564 Tokens per Sec: 2612.092492177497
Epoch Step: 10 / 67 Loss (mean): 4.232516868272796 Loss (std): 2.8220937551812764 Loss ratio: 0.666764916245429 Tokens per Sec: 2542.932979694142
Epoch Step: 15 / 67 Loss (mean): 5.125081873498857 Loss (std): 3.0055514884974066 Loss ratio: 0.5864397023662644 Tokens per Sec: 2862.7052636198387
Epoch Step: 20 / 67 Loss (mean): 4.523981574457139 Loss (std): 3.291032705446428 Loss ratio: 0.7274637730683816 Tokens per Sec: 2633.827919451658
Epoch Step: 25 / 67 Loss (mean): 6.153127923607826 Loss (std): 3.391345986958559 Loss ratio: 0.5511580498671116 Tokens per Sec: 2746.509370561503
Epoch Step: 30 / 67 Loss (mean): 6.047791162505746 Loss (std): 3.8428620855097644 Loss ratio: 0.6354158042582896 Tokens per Sec: 2984.0321334750015
Epoch Step: 35 / 67 Loss (mean): 2.66869313154547 Loss (std): 2.2455873767726096 Loss ratio: 0.8414558235371802 Tokens per Sec: 2678.291451778385
Epoch Step: 40 / 67 Loss (mean): 7.659770746715367 Loss (std): 4.5512930021346945 Loss ratio: 0.5941813603346239 Tokens per Sec: 3165.330194064948
Epoch Step: 45 / 67 Loss (mean): 5.3821147051639855 Loss (std): 3.2915509523522966 Loss ratio: 0.6115720553473428 Tokens per Sec: 2976.9915808050882
Epoch Step: 50 / 67 Loss (mean): 6.633195675909519 Loss (std): 3.8873202326133107 Loss ratio: 0.5860403374999631 Tokens per Sec: 2911.26980478741
Epoch Step: 55 / 67 Loss (mean): 5.932435916736722 Loss (std): 3.2234113872615238 Loss ratio: 0.5433537643731747 Tokens per Sec: 2667.339538886548
Epoch Step: 60 / 67 Loss (mean): 6.4048161008395255 Loss (std): 3.965371400140581 Loss ratio: 0.6191233811726164 Tokens per Sec: 2738.7118113764554
Epoch Step: 65 / 67 Loss (mean): 28.993832184933126 Loss (std): 23.402287176105304 Loss ratio: 0.8071470865540322 Tokens per Sec: 2506.1799153419024
Mean loss per sample: 8.351960721826098 Std loss per sample: 11.110932033419157 ratio: 1.3303381569291948
Epoch ended with duration 0:00:11.454967
Train perplexity: 3.095711918007975
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during keys ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix colon and space and actual commits in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 72.96819266676903 Loss (std): 33.00736335992629 Loss ratio: 0.4523527602042199 Tokens per Sec: 4404.941467304696
Mean loss per sample: 77.12308792256918 Std loss per sample: 39.42113656449233 ratio: 0.511145723367181
Epoch ended with duration 0:00:01.037698
b'BLEU = 1.94, 8.7/2.2/1.2/0.8 (BP=0.922, ratio=0.925, hyp_len=2880, ref_len=3113)\n'
Validation perplexity: 34598.2997077263
Validation accuracy: 0.0
Validation BLEU: 1.94
Epoch 197 / 1000
Epoch Step: 5 / 67 Loss (mean): 6.393320258706808 Loss (std): 3.4873096866583007 Loss ratio: 0.5454614418711581 Tokens per Sec: 3239.50428658695
Epoch Step: 10 / 67 Loss (mean): 5.007894653361291 Loss (std): 3.3525303149772645 Loss ratio: 0.6694490493579076 Tokens per Sec: 2396.977864775182
Epoch Step: 15 / 67 Loss (mean): 6.435525092994794 Loss (std): 3.8497919324433405 Loss ratio: 0.5982094509481317 Tokens per Sec: 2983.90282541296
Epoch Step: 20 / 67 Loss (mean): 5.720234954962507 Loss (std): 3.012726436211541 Loss ratio: 0.5266787920307179 Tokens per Sec: 2618.8729444820538
Epoch Step: 25 / 67 Loss (mean): 5.454151084646583 Loss (std): 3.4569397417001855 Loss ratio: 0.6338181117555507 Tokens per Sec: 2410.5021559650936
Epoch Step: 30 / 67 Loss (mean): 6.831398783251643 Loss (std): 3.0329049885657087 Loss ratio: 0.443965443212216 Tokens per Sec: 2703.8939491911688
Epoch Step: 35 / 67 Loss (mean): 5.05921326961834 Loss (std): 3.16835266314788 Loss ratio: 0.6262540229672698 Tokens per Sec: 2220.1754691993015
Epoch Step: 40 / 67 Loss (mean): 21.917827771045268 Loss (std): 18.890889634259565 Loss ratio: 0.8618960707053066 Tokens per Sec: 2953.336212365441
Epoch Step: 45 / 67 Loss (mean): 6.655957566574216 Loss (std): 3.635338890909616 Loss ratio: 0.5461781951805177 Tokens per Sec: 3632.263881212951
Epoch Step: 50 / 67 Loss (mean): 6.016638638451695 Loss (std): 4.372423103109975 Loss ratio: 0.7267219066749806 Tokens per Sec: 3019.6998263175715
Epoch Step: 55 / 67 Loss (mean): 5.002660884987563 Loss (std): 3.4415004236881415 Loss ratio: 0.6879339820965493 Tokens per Sec: 2686.7185061227297
Epoch Step: 60 / 67 Loss (mean): 5.652389103081077 Loss (std): 3.3021531114163487 Loss ratio: 0.5842048470471306 Tokens per Sec: 2787.3780629507783
Epoch Step: 65 / 67 Loss (mean): 23.91284511424601 Loss (std): 22.53899016717162 Loss ratio: 0.9425474074493996 Tokens per Sec: 2452.326852671497
Mean loss per sample: 7.524404619717809 Std loss per sample: 9.766537617000054 ratio: 1.2979814497756679
Epoch ended with duration 0:00:11.420784
Train perplexity: 2.7677917421529923
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during log codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api parity[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix colon and space and actual commits in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 72.73713567852974 Loss (std): 32.390475175388204 Loss ratio: 0.44530864287180194 Tokens per Sec: 4414.380778934
Mean loss per sample: 75.83845576741656 Std loss per sample: 39.403411842240395 ratio: 0.5195703346476865
Epoch ended with duration 0:00:01.018724
b'BLEU = 1.71, 7.8/2.0/1.1/0.7 (BP=0.901, ratio=0.906, hyp_len=2819, ref_len=3113)\n'
Validation perplexity: 29070.20808184476
Validation accuracy: 0.0
Validation BLEU: 1.71
Epoch 198 / 1000
Epoch Step: 5 / 67 Loss (mean): 4.616476603434421 Loss (std): 3.0407084249154095 Loss ratio: 0.6586643204588709 Tokens per Sec: 2738.5162962046657
Epoch Step: 10 / 67 Loss (mean): 4.803745036013424 Loss (std): 2.799735688273913 Loss ratio: 0.5828235402346381 Tokens per Sec: 2368.216416373648
Epoch Step: 15 / 67 Loss (mean): 5.832475439179689 Loss (std): 3.773297471859079 Loss ratio: 0.6469461399720486 Tokens per Sec: 3021.6169409028016
Epoch Step: 20 / 67 Loss (mean): 5.734449478797615 Loss (std): 3.6393780104161393 Loss ratio: 0.6346516825847484 Tokens per Sec: 2787.282580015507
Epoch Step: 25 / 67 Loss (mean): 5.163549485150725 Loss (std): 3.5308633974614465 Loss ratio: 0.6838054728855533 Tokens per Sec: 2848.98452598627
Epoch Step: 30 / 67 Loss (mean): 6.396416655741632 Loss (std): 4.000072686532851 Loss ratio: 0.6253614956340056 Tokens per Sec: 3391.4607137125513
Epoch Step: 35 / 67 Loss (mean): 5.757949642837048 Loss (std): 2.959966237554058 Loss ratio: 0.5140660167523848 Tokens per Sec: 3435.397787481174
Epoch Step: 40 / 67 Loss (mean): 5.589993520639837 Loss (std): 3.8115474862189402 Loss ratio: 0.6818518612133679 Tokens per Sec: 3320.085758219933
Epoch Step: 45 / 67 Loss (mean): 6.348416578955948 Loss (std): 3.9528537092945224 Loss ratio: 0.6226519101467981 Tokens per Sec: 2767.1825777992813
Epoch Step: 50 / 67 Loss (mean): 5.30797702819109 Loss (std): 3.1936734535980222 Loss ratio: 0.6016743170959798 Tokens per Sec: 2303.2799821168574
Epoch Step: 55 / 67 Loss (mean): 5.014481530990452 Loss (std): 2.8980088723361352 Loss ratio: 0.5779279182555341 Tokens per Sec: 2787.113521069651
Epoch Step: 60 / 67 Loss (mean): 4.862213782500476 Loss (std): 3.098861786393879 Loss ratio: 0.6373355687376291 Tokens per Sec: 2477.4351487119366
Epoch Step: 65 / 67 Loss (mean): 38.390433594584465 Loss (std): 18.36812481212536 Loss ratio: 0.4784557790125208 Tokens per Sec: 2576.562458513893
Mean loss per sample: 7.511724691114974 Std loss per sample: 9.840177133670588 ratio: 1.309975743028729
Epoch ended with duration 0:00:11.417742
Train perplexity: 2.7630474151490114
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during log codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in response has spaces[0m
Epoch Step: 5 / 8 Loss (mean): 73.1095858514309 Loss (std): 32.00265544490487 Loss ratio: 0.4377354224101177 Tokens per Sec: 4435.103136365228
Mean loss per sample: 76.14687538098116 Std loss per sample: 38.945135439802556 ratio: 0.5114475839612678
Epoch ended with duration 0:00:01.018515
b'BLEU = 1.92, 7.8/2.0/1.1/0.8 (BP=1.000, ratio=1.005, hyp_len=3129, ref_len=3113)\n'
Validation perplexity: 30310.987012376514
Validation accuracy: 0.0
Validation BLEU: 1.92
Epoch 199 / 1000
Epoch Step: 5 / 67 Loss (mean): 6.079758222214878 Loss (std): 3.8766904904527646 Loss ratio: 0.6376389239111012 Tokens per Sec: 2623.060618911927
Epoch Step: 10 / 67 Loss (mean): 5.2682434365851805 Loss (std): 3.128012956007907 Loss ratio: 0.5937487501593989 Tokens per Sec: 2329.649453945706
Epoch Step: 15 / 67 Loss (mean): 4.058205606881529 Loss (std): 2.8017325036449012 Loss ratio: 0.6903870269396856 Tokens per Sec: 2517.926477809574
Epoch Step: 20 / 67 Loss (mean): 5.299430751241744 Loss (std): 4.032689040743784 Loss ratio: 0.7609664565951463 Tokens per Sec: 3839.2066716642244
Epoch Step: 25 / 67 Loss (mean): 6.201459366828203 Loss (std): 3.2118571764514843 Loss ratio: 0.5179195712595985 Tokens per Sec: 3124.052049742527
Epoch Step: 30 / 67 Loss (mean): 5.487876890227199 Loss (std): 3.1051884635813534 Loss ratio: 0.5658269173477757 Tokens per Sec: 2936.166683434614
Epoch Step: 35 / 67 Loss (mean): 23.69648097269237 Loss (std): 19.12261533459644 Loss ratio: 0.8069812288429318 Tokens per Sec: 2988.7390966834955
Epoch Step: 40 / 67 Loss (mean): 5.599071322008967 Loss (std): 3.333534193039543 Loss ratio: 0.5953726968856432 Tokens per Sec: 2454.6100785661047
Epoch Step: 45 / 67 Loss (mean): 19.442642353475094 Loss (std): 17.930241619518192 Loss ratio: 0.9222121815306353 Tokens per Sec: 2555.3798132675984
Epoch Step: 50 / 67 Loss (mean): 6.992865979671478 Loss (std): 3.5049354433132045 Loss ratio: 0.5012158753652912 Tokens per Sec: 3578.626281346325
Epoch Step: 55 / 67 Loss (mean): 5.439011211507022 Loss (std): 3.5595592005671612 Loss ratio: 0.654449689869437 Tokens per Sec: 2680.4590533135256
Epoch Step: 60 / 67 Loss (mean): 5.275872789788991 Loss (std): 3.2042639441189062 Loss ratio: 0.6073429121188233 Tokens per Sec: 2366.217172193092
Epoch Step: 65 / 67 Loss (mean): 5.718241105787456 Loss (std): 3.589400541969415 Loss ratio: 0.6277105976410416 Tokens per Sec: 2363.7618825431377
Mean loss per sample: 8.802490671657365 Std loss per sample: 11.531113090822169 ratio: 1.3099829946938244
Epoch ended with duration 0:00:11.494619
Train perplexity: 3.2902859479496462
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print in randomaccessfile ( ) call log[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in response has spaces[0m
Epoch Step: 5 / 8 Loss (mean): 72.79528033733368 Loss (std): 32.74386723130327 Loss ratio: 0.44980755729723176 Tokens per Sec: 4418.764255036444
Mean loss per sample: 76.89927080420198 Std loss per sample: 39.31655610890318 ratio: 0.511273458093114
Epoch ended with duration 0:00:01.038262
b'BLEU = 1.69, 8.1/1.9/1.0/0.8 (BP=0.890, ratio=0.895, hyp_len=2787, ref_len=3113)\n'
Validation perplexity: 33564.64601156216
Validation accuracy: 0.0
Validation BLEU: 1.69
Epoch 200 / 1000
Epoch Step: 5 / 67 Loss (mean): 5.868657611310482 Loss (std): 3.6779713703904195 Loss ratio: 0.6267142528986491 Tokens per Sec: 3571.425336296913
Epoch Step: 10 / 67 Loss (mean): 5.808331165462732 Loss (std): 3.3595320413602248 Loss ratio: 0.5783988456678469 Tokens per Sec: 2646.8109269622923
Epoch Step: 15 / 67 Loss (mean): 6.443160759285092 Loss (std): 3.2561116727541375 Loss ratio: 0.5053593716502928 Tokens per Sec: 2924.5536988830495
Epoch Step: 20 / 67 Loss (mean): 5.739029907621443 Loss (std): 3.447367264562428 Loss ratio: 0.6006881511428119 Tokens per Sec: 3512.626259128305
Epoch Step: 25 / 67 Loss (mean): 6.042133131064475 Loss (std): 3.1892399695920624 Loss ratio: 0.527833448951198 Tokens per Sec: 3179.688787471951
Epoch Step: 30 / 67 Loss (mean): 5.143268836312927 Loss (std): 3.2032856160909158 Loss ratio: 0.6228112350408006 Tokens per Sec: 2323.6670437836106
Epoch Step: 35 / 67 Loss (mean): 4.682195690460503 Loss (std): 3.333525875125328 Loss ratio: 0.7119578282294026 Tokens per Sec: 2642.8929346320656
Epoch Step: 40 / 67 Loss (mean): 5.726358195068315 Loss (std): 3.6727724040711243 Loss ratio: 0.6413801370710985 Tokens per Sec: 2787.3247683758027
Epoch Step: 45 / 67 Loss (mean): 4.8101476731244475 Loss (std): 3.1228529772162696 Loss ratio: 0.6492218512675745 Tokens per Sec: 2326.48883299171
Epoch Step: 50 / 67 Loss (mean): 5.520758520811796 Loss (std): 3.6715449289122013 Loss ratio: 0.6650435651317569 Tokens per Sec: 2646.858321946378
Epoch Step: 55 / 67 Loss (mean): 6.8751459727063775 Loss (std): 4.04573544555419 Loss ratio: 0.5884581158880616 Tokens per Sec: 2557.9394996135766
Epoch Step: 60 / 67 Loss (mean): 6.50547955557704 Loss (std): 4.36956665573359 Loss ratio: 0.6716747963626498 Tokens per Sec: 2445.480365591576
Epoch Step: 65 / 67 Loss (mean): 5.749814007431269 Loss (std): 3.3900732017065565 Loss ratio: 0.5895970195427369 Tokens per Sec: 2904.975571863718
Mean loss per sample: 7.7949451040555156 Std loss per sample: 10.376835308973533 ratio: 1.331226220384121
Epoch ended with duration 0:00:11.460305
Train perplexity: 2.8709811847669697
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during log device[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: update changeeventlistener to use configuration[0m
Epoch Step: 5 / 8 Loss (mean): 73.3160600066185 Loss (std): 33.92961639687738 Loss ratio: 0.462785594231529 Tokens per Sec: 4303.956541437039
Mean loss per sample: 77.52379065068041 Std loss per sample: 39.17544986153185 ratio: 0.5053345499842121
Epoch ended with duration 0:00:01.036331
b'BLEU = 1.94, 8.6/2.2/1.2/0.8 (BP=0.951, ratio=0.952, hyp_len=2965, ref_len=3113)\n'
Validation perplexity: 36529.01719462741
Validation accuracy: 0.0
Validation BLEU: 1.94
Model saved checkpoint_commit_msg_generator!
Epoch 201 / 1000
Epoch Step: 5 / 67 Loss (mean): 5.521892928984016 Loss (std): 3.914373977163539 Loss ratio: 0.7088826291102591 Tokens per Sec: 2795.9723918119153
Epoch Step: 10 / 67 Loss (mean): 19.798391913820524 Loss (std): 16.53231188446874 Loss ratio: 0.8350330651313224 Tokens per Sec: 2352.9183851824228
Epoch Step: 15 / 67 Loss (mean): 4.589399928692728 Loss (std): 2.8701417589650684 Loss ratio: 0.6253849748462903 Tokens per Sec: 2892.2876091094276
Epoch Step: 20 / 67 Loss (mean): 5.336994648911059 Loss (std): 3.523357006671692 Loss ratio: 0.6601762299669132 Tokens per Sec: 2763.2971204470928
Epoch Step: 25 / 67 Loss (mean): 5.759583896026015 Loss (std): 3.3426444932319295 Loss ratio: 0.5803621500397416 Tokens per Sec: 2939.7614428059132
Epoch Step: 30 / 67 Loss (mean): 6.0995053965598345 Loss (std): 3.7351148938308616 Loss ratio: 0.6123635690096272 Tokens per Sec: 3057.5008700304184
Epoch Step: 35 / 67 Loss (mean): 5.589057839475572 Loss (std): 3.0317660987826724 Loss ratio: 0.5424467210500629 Tokens per Sec: 3132.921178876077
Epoch Step: 40 / 67 Loss (mean): 5.868279785383493 Loss (std): 4.442818508908882 Loss ratio: 0.757090437299002 Tokens per Sec: 2628.596348007204
Epoch Step: 45 / 67 Loss (mean): 5.0747714545577765 Loss (std): 3.263583138404962 Loss ratio: 0.6430995302209832 Tokens per Sec: 2575.023546326707
Epoch Step: 50 / 67 Loss (mean): 6.189294942654669 Loss (std): 3.766503120573268 Loss ratio: 0.6085512413725376 Tokens per Sec: 3052.894564452604
Epoch Step: 55 / 67 Loss (mean): 4.012094234698452 Loss (std): 2.720861511134063 Loss ratio: 0.678164906397958 Tokens per Sec: 2379.132270577644
Epoch Step: 60 / 67 Loss (mean): 4.651290478184819 Loss (std): 3.1422690253631202 Loss ratio: 0.6755692941777742 Tokens per Sec: 2683.334733282515
Epoch Step: 65 / 67 Loss (mean): 5.5828638998791575 Loss (std): 3.2523725437714393 Loss ratio: 0.5825634660092355 Tokens per Sec: 2653.1636688993653
Mean loss per sample: 7.274966887743298 Std loss per sample: 8.928993136764676 ratio: 1.227358594828527
Epoch ended with duration 0:00:11.429277
Train perplexity: 2.675940596299705
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during headless ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in gerrit master server[0m
Epoch Step: 5 / 8 Loss (mean): 82.90286856889725 Loss (std): 33.44969120544076 Loss ratio: 0.40348050414735726 Tokens per Sec: 4320.2207742906785
Mean loss per sample: 77.96066612005234 Std loss per sample: 40.37878424703538 ratio: 0.5179379071088966
Epoch ended with duration 0:00:01.029303
b'BLEU = 1.92, 8.3/2.3/1.2/0.9 (BP=0.905, ratio=0.909, hyp_len=2831, ref_len=3113)\n'
Validation perplexity: 38757.000116880496
Validation accuracy: 0.0
Validation BLEU: 1.92
Epoch 202 / 1000
Epoch Step: 5 / 67 Loss (mean): 4.29060988035053 Loss (std): 2.886569053165036 Loss ratio: 0.6727642767953567 Tokens per Sec: 2185.8723296421826
Epoch Step: 10 / 67 Loss (mean): 16.396019050152972 Loss (std): 15.603428069366428 Loss ratio: 0.9516595474570915 Tokens per Sec: 2408.904073045447
Epoch Step: 15 / 67 Loss (mean): 6.086833664216101 Loss (std): 2.626623437025833 Loss ratio: 0.43152541730645516 Tokens per Sec: 2905.921199476532
Epoch Step: 20 / 67 Loss (mean): 6.1956764799542725 Loss (std): 4.012449021796377 Loss ratio: 0.6476208102179654 Tokens per Sec: 2812.281981469101
Epoch Step: 25 / 67 Loss (mean): 25.879389059264213 Loss (std): 24.131259395468167 Loss ratio: 0.9324508913331454 Tokens per Sec: 2679.259879031878
Epoch Step: 30 / 67 Loss (mean): 5.421403082669713 Loss (std): 3.4331930087863 Loss ratio: 0.6332665098747206 Tokens per Sec: 3652.7608891240484
Epoch Step: 35 / 67 Loss (mean): 5.2554630832746625 Loss (std): 3.330350389837345 Loss ratio: 0.633693042281293 Tokens per Sec: 2505.9747831895234
Epoch Step: 40 / 67 Loss (mean): 6.339413733687252 Loss (std): 4.068698593725733 Loss ratio: 0.6418099156559101 Tokens per Sec: 3400.7097222779084
Epoch Step: 45 / 67 Loss (mean): 5.172573050484061 Loss (std): 3.623741110965475 Loss ratio: 0.7005683777875997 Tokens per Sec: 2500.8001416922243
Epoch Step: 50 / 67 Loss (mean): 5.077040810137987 Loss (std): 3.182548914528027 Loss ratio: 0.6268511586853937 Tokens per Sec: 3400.9118758138666
Epoch Step: 55 / 67 Loss (mean): 5.115473531186581 Loss (std): 3.0411874181116123 Loss ratio: 0.5945075073834233 Tokens per Sec: 3199.693074224652
Epoch Step: 60 / 67 Loss (mean): 27.836106943897903 Loss (std): 22.6573500413532 Loss ratio: 0.8139554172218768 Tokens per Sec: 2214.021725514607
Epoch Step: 65 / 67 Loss (mean): 5.422216857317835 Loss (std): 3.0614569140386165 Loss ratio: 0.5646135141029758 Tokens per Sec: 2789.6064579194303
Mean loss per sample: 7.960002893124403 Std loss per sample: 10.971248609988795 ratio: 1.3782970631160711
Epoch ended with duration 0:00:11.474757
Train perplexity: 2.93581799878771
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during headless ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt[0m
Epoch Step: 5 / 8 Loss (mean): 72.94914126396179 Loss (std): 33.057197229577056 Loss ratio: 0.4531540283656213 Tokens per Sec: 4415.672687882322
Mean loss per sample: 76.3537078421624 Std loss per sample: 39.82240472755778 ratio: 0.5215516816796671
Epoch ended with duration 0:00:01.020563
b'BLEU = 2.15, 9.1/2.5/1.4/1.0 (BP=0.900, ratio=0.904, hyp_len=2815, ref_len=3113)\n'
Validation perplexity: 31172.60791248864
Validation accuracy: 0.0
Validation BLEU: 2.15
Model saved best_on_validation_commit_msg_generator!
Epoch 203 / 1000
Epoch Step: 5 / 67 Loss (mean): 4.47070098342374 Loss (std): 3.325562928480478 Loss ratio: 0.7438571581527925 Tokens per Sec: 2862.5395759841417
Epoch Step: 10 / 67 Loss (mean): 5.712328095920384 Loss (std): 3.5410644853973876 Loss ratio: 0.6198986518169949 Tokens per Sec: 2869.8345136863277
Epoch Step: 15 / 67 Loss (mean): 5.153486247640103 Loss (std): 3.3382750613632433 Loss ratio: 0.6477702473528312 Tokens per Sec: 2838.569190175171
Epoch Step: 20 / 67 Loss (mean): 5.256005583098158 Loss (std): 3.471632909593063 Loss ratio: 0.6605078428297074 Tokens per Sec: 2875.9501318235407
Epoch Step: 25 / 67 Loss (mean): 4.696815264411271 Loss (std): 3.0814682470300427 Loss ratio: 0.6560761012635429 Tokens per Sec: 2174.2024469467638
Epoch Step: 30 / 67 Loss (mean): 2.298051648462812 Loss (std): 1.721508507337438 Loss ratio: 0.7491165433505252 Tokens per Sec: 2808.5130107528444
Epoch Step: 35 / 67 Loss (mean): 5.56928113126196 Loss (std): 3.8926948549634917 Loss ratio: 0.6989582251671024 Tokens per Sec: 2836.6419555683797
Epoch Step: 40 / 67 Loss (mean): 5.483672478236258 Loss (std): 3.69791125150307 Loss ratio: 0.6743494010956045 Tokens per Sec: 2492.230293953199
Epoch Step: 45 / 67 Loss (mean): 5.648579851724207 Loss (std): 2.962488207865289 Loss ratio: 0.5244660225456493 Tokens per Sec: 3616.9117346430353
Epoch Step: 50 / 67 Loss (mean): 5.0787662758957595 Loss (std): 3.6632177365115064 Loss ratio: 0.7212810232865878 Tokens per Sec: 3062.1090717689303
Epoch Step: 55 / 67 Loss (mean): 4.2618673988908995 Loss (std): 2.936183143926332 Loss ratio: 0.6889428668499726 Tokens per Sec: 2639.805790495484
Epoch Step: 60 / 67 Loss (mean): 4.297810820862651 Loss (std): 2.9980634146496943 Loss ratio: 0.6975791954583815 Tokens per Sec: 2593.2030226657967
Epoch Step: 65 / 67 Loss (mean): 5.143455809680745 Loss (std): 3.2801118652878754 Loss ratio: 0.6377252933940288 Tokens per Sec: 3030.7232215898916
Mean loss per sample: 6.371565848490703 Std loss per sample: 7.504613274239989 ratio: 1.1778287241616883
Epoch ended with duration 0:00:11.380381
Train perplexity: 2.3680599669582625
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length arrays if stack traces[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api parity[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix colon and space and stack trace password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 73.38605305552483 Loss (std): 33.46627283042781 Loss ratio: 0.45603042318009396 Tokens per Sec: 4295.082667142972
Mean loss per sample: 77.83296319891195 Std loss per sample: 39.57142777574703 ratio: 0.5084147660499223
Epoch ended with duration 0:00:01.036788
b'BLEU = 2.29, 9.1/2.7/1.5/1.1 (BP=0.914, ratio=0.917, hyp_len=2856, ref_len=3113)\n'
Validation perplexity: 38092.0406876255
Validation accuracy: 0.0
Validation BLEU: 2.29
Model saved best_on_validation_commit_msg_generator!
Epoch 204 / 1000
Epoch Step: 5 / 67 Loss (mean): 5.099682458676398 Loss (std): 2.741135099885943 Loss ratio: 0.5375109376118672 Tokens per Sec: 2820.974526090675
Epoch Step: 10 / 67 Loss (mean): 5.262211143039167 Loss (std): 3.573117654308897 Loss ratio: 0.6790144973630341 Tokens per Sec: 2862.9512295739532
Epoch Step: 15 / 67 Loss (mean): 22.57070391625166 Loss (std): 20.88117325504979 Loss ratio: 0.9251449725506634 Tokens per Sec: 3223.978389993561
Epoch Step: 20 / 67 Loss (mean): 4.2223043399862945 Loss (std): 2.7089197205118696 Loss ratio: 0.641573771662481 Tokens per Sec: 2606.731213914116
Epoch Step: 25 / 67 Loss (mean): 5.220228243153542 Loss (std): 3.427073850968801 Loss ratio: 0.6564988524138753 Tokens per Sec: 2644.0965336013282
Epoch Step: 30 / 67 Loss (mean): 6.229115223046392 Loss (std): 3.470740463603342 Loss ratio: 0.5571803280765053 Tokens per Sec: 2746.552230315674
Epoch Step: 35 / 67 Loss (mean): 4.772134703816846 Loss (std): 2.980250067600428 Loss ratio: 0.6245108850797456 Tokens per Sec: 2443.8887868602646
Epoch Step: 40 / 67 Loss (mean): 3.956481604836881 Loss (std): 2.713037552622686 Loss ratio: 0.6857197438516942 Tokens per Sec: 2368.5097069418753
Epoch Step: 45 / 67 Loss (mean): 34.027602889575064 Loss (std): 24.086348328081716 Loss ratio: 0.7078473440002727 Tokens per Sec: 2569.0072827993386
Epoch Step: 50 / 67 Loss (mean): 4.26515535346698 Loss (std): 3.114253252232447 Loss ratio: 0.7301617395251478 Tokens per Sec: 3305.7535132753587
Epoch Step: 55 / 67 Loss (mean): 24.493683928623796 Loss (std): 20.362102473800498 Loss ratio: 0.8313205368835902 Tokens per Sec: 2714.2943558188736
Epoch Step: 60 / 67 Loss (mean): 5.887210415210575 Loss (std): 3.70335795212423 Loss ratio: 0.6290513997182768 Tokens per Sec: 2798.175635846985
Epoch Step: 65 / 67 Loss (mean): 4.707303544506431 Loss (std): 2.745579771476538 Loss ratio: 0.5832595551822263 Tokens per Sec: 2730.607942537522
Mean loss per sample: 7.26972077337984 Std loss per sample: 10.26796685560773 ratio: 1.4124293319774845
Epoch ended with duration 0:00:11.454894
Train perplexity: 2.6740418935431913
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print when call log command during it[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api and gb2312han[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt[0m
Epoch Step: 5 / 8 Loss (mean): 73.95244187116623 Loss (std): 33.634407226616084 Loss ratio: 0.4548113135359498 Tokens per Sec: 4394.569217853608
Mean loss per sample: 77.26099957892153 Std loss per sample: 40.46534934415038 ratio: 0.5237487162305651
Epoch ended with duration 0:00:01.021594
b'BLEU = 1.92, 8.8/2.3/1.2/0.8 (BP=0.925, ratio=0.928, hyp_len=2888, ref_len=3113)\n'
Validation perplexity: 35251.00498722488
Validation accuracy: 0.0
Validation BLEU: 1.92
Epoch 205 / 1000
Epoch Step: 5 / 67 Loss (mean): 22.15141198504716 Loss (std): 19.821456715686914 Loss ratio: 0.8948168509107666 Tokens per Sec: 2846.5825363936556
Epoch Step: 10 / 67 Loss (mean): 4.394395899027586 Loss (std): 3.057046282561859 Loss ratio: 0.6956692917081817 Tokens per Sec: 2738.2357973414573
Epoch Step: 15 / 67 Loss (mean): 5.788902346976101 Loss (std): 3.207418268488712 Loss ratio: 0.5540632880366592 Tokens per Sec: 2881.8489355151432
Epoch Step: 20 / 67 Loss (mean): 5.04246758390218 Loss (std): 3.183313271676315 Loss ratio: 0.6313006913200354 Tokens per Sec: 2817.1843945985433
Epoch Step: 25 / 67 Loss (mean): 5.173183840233833 Loss (std): 3.212763881877756 Loss ratio: 0.6210418924011284 Tokens per Sec: 2530.0759899380514
Epoch Step: 30 / 67 Loss (mean): 5.729019301012158 Loss (std): 3.6275810872031453 Loss ratio: 0.6331940767876716 Tokens per Sec: 2751.795870690324
Epoch Step: 35 / 67 Loss (mean): 21.90270288422471 Loss (std): 19.86067533177173 Loss ratio: 0.9067682393699575 Tokens per Sec: 2904.5139208009286
Epoch Step: 40 / 67 Loss (mean): 24.430318703874946 Loss (std): 23.41627474990946 Loss ratio: 0.9584923976532223 Tokens per Sec: 2759.035352803091
Epoch Step: 45 / 67 Loss (mean): 6.382619809592143 Loss (std): 3.8908303229707193 Loss ratio: 0.609597694840506 Tokens per Sec: 3013.5234257888956
Epoch Step: 50 / 67 Loss (mean): 5.188958156853914 Loss (std): 3.0702911026067494 Loss ratio: 0.5916970246814014 Tokens per Sec: 2712.835657502555
Epoch Step: 55 / 67 Loss (mean): 4.804422487970442 Loss (std): 3.3522267467065547 Loss ratio: 0.6977377104324258 Tokens per Sec: 2881.027998002308
Epoch Step: 60 / 67 Loss (mean): 5.038798845605925 Loss (std): 3.363345729543392 Loss ratio: 0.6674895808703282 Tokens per Sec: 2375.8308812501123
Epoch Step: 65 / 67 Loss (mean): 5.9742367174476385 Loss (std): 4.034916214485227 Loss ratio: 0.675386062741929 Tokens per Sec: 2436.7924638895115
Mean loss per sample: 9.203697452227338 Std loss per sample: 13.379906656883877 ratio: 1.4537534209847236
Epoch ended with duration 0:00:11.574497
Train perplexity: 3.47382967514233
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix exception creation ( ) creation[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test method_1 for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix colon and space in gerrit core ( cherry picked[0m
Epoch Step: 5 / 8 Loss (mean): 85.53421866893768 Loss (std): 33.921486676031925 Loss ratio: 0.39658381410281984 Tokens per Sec: 4234.694283251744
Mean loss per sample: 80.21136778006789 Std loss per sample: 39.480128442926656 ratio: 0.49220116219907256
Epoch ended with duration 0:00:01.059997
b'BLEU = 1.76, 8.4/2.2/1.0/0.7 (BP=0.928, ratio=0.930, hyp_len=2896, ref_len=3113)\n'
Validation perplexity: 52579.26163294551
Validation accuracy: 0.0
Validation BLEU: 1.76
Model saved checkpoint_commit_msg_generator!
Epoch 206 / 1000
Epoch Step: 5 / 67 Loss (mean): 5.367084998637438 Loss (std): 3.064998321976583 Loss ratio: 0.5710731845600928 Tokens per Sec: 2553.971786465985
Epoch Step: 10 / 67 Loss (mean): 6.185781775508076 Loss (std): 3.35279908902097 Loss ratio: 0.542017033691038 Tokens per Sec: 2688.1186728416096
Epoch Step: 15 / 67 Loss (mean): 4.17025071522221 Loss (std): 3.0139223031815496 Loss ratio: 0.7227196897731254 Tokens per Sec: 2388.019292323627
Epoch Step: 20 / 67 Loss (mean): 5.08960343664512 Loss (std): 3.0013063476914286 Loss ratio: 0.5896935557065286 Tokens per Sec: 2581.868480201665
Epoch Step: 25 / 67 Loss (mean): 5.293459695298225 Loss (std): 2.970973283838375 Loss ratio: 0.5612535949744292 Tokens per Sec: 3097.5813122517698
Epoch Step: 30 / 67 Loss (mean): 6.383623634465039 Loss (std): 2.982290343799665 Loss ratio: 0.4671782853391211 Tokens per Sec: 2337.2623011969195
Epoch Step: 35 / 67 Loss (mean): 25.732822011224926 Loss (std): 24.508603479076527 Loss ratio: 0.9524257956778164 Tokens per Sec: 2803.8092325285916
Epoch Step: 40 / 67 Loss (mean): 5.471581394551322 Loss (std): 3.0783211895170455 Loss ratio: 0.5626017356851314 Tokens per Sec: 3037.4911439753446
Epoch Step: 45 / 67 Loss (mean): 26.763487884774804 Loss (std): 20.959918060870216 Loss ratio: 0.783153457094577 Tokens per Sec: 2722.51272519577
Epoch Step: 50 / 67 Loss (mean): 4.311605522292666 Loss (std): 3.226164074692226 Loss ratio: 0.7482512159360849 Tokens per Sec: 3201.681141033662
Epoch Step: 55 / 67 Loss (mean): 6.54236277192831 Loss (std): 4.03911530232832 Loss ratio: 0.6173786815459368 Tokens per Sec: 2974.679266942408
Epoch Step: 60 / 67 Loss (mean): 6.189523551613092 Loss (std): 3.8527553685320113 Loss ratio: 0.6224639645369665 Tokens per Sec: 2775.4433673546473
Epoch Step: 65 / 67 Loss (mean): 21.43816970475018 Loss (std): 18.324545966702765 Loss ratio: 0.8547626135566269 Tokens per Sec: 2504.9690117151326
Mean loss per sample: 8.40385784409011 Std loss per sample: 11.633079487530985 ratio: 1.3842546724789946
Epoch ended with duration 0:00:11.562398
Train perplexity: 3.1175254666986647
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings length not complete during openjdk[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt[0m
Epoch Step: 5 / 8 Loss (mean): 73.51040518283844 Loss (std): 33.8444558744686 Loss ratio: 0.4604036093977325 Tokens per Sec: 4395.024878332323
Mean loss per sample: 76.63076682266642 Std loss per sample: 40.13210553416683 ratio: 0.5237074767506602
Epoch ended with duration 0:00:01.027871
b'BLEU = 1.81, 8.2/2.2/1.2/0.8 (BP=0.891, ratio=0.896, hyp_len=2790, ref_len=3113)\n'
Validation perplexity: 32365.27899148975
Validation accuracy: 0.0
Validation BLEU: 1.81
Epoch 207 / 1000
Epoch Step: 5 / 67 Loss (mean): 5.222471289569512 Loss (std): 3.282084916142055 Loss ratio: 0.6284543723001677 Tokens per Sec: 2857.711964521204
Epoch Step: 10 / 67 Loss (mean): 4.339726003934629 Loss (std): 2.7227684472328484 Loss ratio: 0.6274056114981084 Tokens per Sec: 2550.799324604711
Epoch Step: 15 / 67 Loss (mean): 5.639442914281972 Loss (std): 3.2627270272782476 Loss ratio: 0.5785548460851236 Tokens per Sec: 2600.0618968351073
Epoch Step: 20 / 67 Loss (mean): 5.419900170527399 Loss (std): 3.007791771330696 Loss ratio: 0.5549533527732882 Tokens per Sec: 2752.0463060508196
Epoch Step: 25 / 67 Loss (mean): 5.417296269908547 Loss (std): 3.2410045246411174 Loss ratio: 0.5982697573038277 Tokens per Sec: 3318.5135426093084
Epoch Step: 30 / 67 Loss (mean): 6.188910153694451 Loss (std): 3.255103484429452 Loss ratio: 0.5259574632031664 Tokens per Sec: 3391.9959160551384
Epoch Step: 35 / 67 Loss (mean): 5.0008487780578434 Loss (std): 3.2819588832913014 Loss ratio: 0.6562803693827952 Tokens per Sec: 2383.0742967860556
Epoch Step: 40 / 67 Loss (mean): 4.850958818569779 Loss (std): 2.510667165252209 Loss ratio: 0.5175610140496792 Tokens per Sec: 3134.209223531767
Epoch Step: 45 / 67 Loss (mean): 5.476219360833056 Loss (std): 3.6875981698246023 Loss ratio: 0.6733839400589015 Tokens per Sec: 2978.7653999788245
Epoch Step: 50 / 67 Loss (mean): 6.631078762002289 Loss (std): 4.435016411672793 Loss ratio: 0.668822761853852 Tokens per Sec: 3449.4846274947627
Epoch Step: 55 / 67 Loss (mean): 4.586278758943081 Loss (std): 3.21678352265791 Loss ratio: 0.7013929356965701 Tokens per Sec: 2295.209855934044
Epoch Step: 60 / 67 Loss (mean): 4.6761005111038685 Loss (std): 3.1343535969518697 Loss ratio: 0.6702921781747492 Tokens per Sec: 2477.208540458767
Epoch Step: 65 / 67 Loss (mean): 5.017797127831727 Loss (std): 3.5860514405120134 Loss ratio: 0.7146664859409343 Tokens per Sec: 2494.745550407559
Mean loss per sample: 5.879591604585568 Std loss per sample: 7.1953722453092075 ratio: 1.2237877609896317
Epoch ended with duration 0:00:11.402896
Train perplexity: 2.2155641488658904
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings when getting command and not used[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt[0m
Epoch Step: 5 / 8 Loss (mean): 84.98697274923325 Loss (std): 32.163598217250666 Loss ratio: 0.3784532755644111 Tokens per Sec: 4291.992263321657
Mean loss per sample: 78.92554769017657 Std loss per sample: 39.77475169227604 ratio: 0.5039528119388215
Epoch ended with duration 0:00:01.050672
b'BLEU = 1.79, 7.5/2.1/1.2/0.8 (BP=0.926, ratio=0.929, hyp_len=2891, ref_len=3113)\n'
Validation perplexity: 44171.07323211715
Validation accuracy: 0.0
Validation BLEU: 1.79
Epoch 208 / 1000
Epoch Step: 5 / 67 Loss (mean): 5.819988442584872 Loss (std): 2.6164501841417565 Loss ratio: 0.4495627800559161 Tokens per Sec: 2649.565234995005
Epoch Step: 10 / 67 Loss (mean): 4.767643467523158 Loss (std): 2.958969991464148 Loss ratio: 0.6206357525726153 Tokens per Sec: 2700.8907965211547
Epoch Step: 15 / 67 Loss (mean): 5.04566532978788 Loss (std): 3.323434131569279 Loss ratio: 0.6586711393537859 Tokens per Sec: 3035.6346227680697
Epoch Step: 20 / 67 Loss (mean): 4.990605815779418 Loss (std): 3.333931541929664 Loss ratio: 0.6680414492742262 Tokens per Sec: 3416.5258211154464
Epoch Step: 25 / 67 Loss (mean): 4.71121209859848 Loss (std): 3.347035577116769 Loss ratio: 0.7104404359363199 Tokens per Sec: 3131.197163037515
Epoch Step: 30 / 67 Loss (mean): 4.685708574485034 Loss (std): 3.2154239140017298 Loss ratio: 0.6862193546373314 Tokens per Sec: 2807.6738049599016
Epoch Step: 35 / 67 Loss (mean): 4.752194240689278 Loss (std): 3.418739549655574 Loss ratio: 0.719402317435515 Tokens per Sec: 3060.308488281379
Epoch Step: 40 / 67 Loss (mean): 4.087104766163975 Loss (std): 3.1478421751697105 Loss ratio: 0.7701887657076562 Tokens per Sec: 2341.010164237178
Epoch Step: 45 / 67 Loss (mean): 4.510549516417086 Loss (std): 3.1696506204831802 Loss ratio: 0.7027193934899895 Tokens per Sec: 2685.9129204020473
Epoch Step: 50 / 67 Loss (mean): 27.950458833947778 Loss (std): 22.036286163838856 Loss ratio: 0.7884051669690034 Tokens per Sec: 2477.8462042070396
Epoch Step: 55 / 67 Loss (mean): 5.478247690480202 Loss (std): 3.155871966057801 Loss ratio: 0.5760732526829523 Tokens per Sec: 2561.828227776734
Epoch Step: 60 / 67 Loss (mean): 23.48056650813669 Loss (std): 18.57764355844998 Loss ratio: 0.7911923058590726 Tokens per Sec: 3068.748300279815
Epoch Step: 65 / 67 Loss (mean): 4.444787733256817 Loss (std): 3.286497095396482 Loss ratio: 0.739404734855218 Tokens per Sec: 2368.8223972149394
Mean loss per sample: 6.9310788981043645 Std loss per sample: 9.74915140982529 ratio: 1.4065849708465534
Epoch ended with duration 0:00:11.466264
Train perplexity: 2.5542866741849912
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during log codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix sorting of password[0m
Epoch Step: 5 / 8 Loss (mean): 73.97465986013412 Loss (std): 33.55790118346273 Loss ratio: 0.4536404932028286 Tokens per Sec: 4409.135183333165
Mean loss per sample: 76.99993964003735 Std loss per sample: 39.92480823899387 ratio: 0.5185044095571515
Epoch ended with duration 0:00:01.022172
b'BLEU = 1.87, 8.2/2.2/1.1/0.7 (BP=0.957, ratio=0.958, hyp_len=2982, ref_len=3113)\n'
Validation perplexity: 34025.687068535866
Validation accuracy: 0.0
Validation BLEU: 1.87
Epoch 209 / 1000
Epoch Step: 5 / 67 Loss (mean): 4.595080783590674 Loss (std): 2.8769337402237327 Loss ratio: 0.6260899156544638 Tokens per Sec: 2436.325527680748
Epoch Step: 10 / 67 Loss (mean): 4.7966105793602765 Loss (std): 2.723035111757777 Loss ratio: 0.5676998511146486 Tokens per Sec: 3000.058254601021
Epoch Step: 15 / 67 Loss (mean): 5.642036818433553 Loss (std): 3.0147469668969 Loss ratio: 0.5343366347853629 Tokens per Sec: 3052.8418326429496
Epoch Step: 20 / 67 Loss (mean): 21.28990171570331 Loss (std): 28.10137808385057 Loss ratio: 1.3199393054559363 Tokens per Sec: 2477.9647404436823
Epoch Step: 25 / 67 Loss (mean): 4.168597978481557 Loss (std): 2.704221735254972 Loss ratio: 0.6487125285801738 Tokens per Sec: 2907.645118169479
Epoch Step: 30 / 67 Loss (mean): 5.1922364654019475 Loss (std): 3.4043540785655564 Loss ratio: 0.6556623723226394 Tokens per Sec: 3050.8431535385453
Epoch Step: 35 / 67 Loss (mean): 4.3375478172674775 Loss (std): 3.176572990075593 Loss ratio: 0.7323430481688007 Tokens per Sec: 2622.0121434665575
Epoch Step: 40 / 67 Loss (mean): 4.085840325336903 Loss (std): 2.8354790644061887 Loss ratio: 0.6939769640098173 Tokens per Sec: 2966.41146622284
Epoch Step: 45 / 67 Loss (mean): 5.0446399338543415 Loss (std): 3.2457586577337394 Loss ratio: 0.6434073988019652 Tokens per Sec: 2503.8622375556815
Epoch Step: 50 / 67 Loss (mean): 4.3426796505227685 Loss (std): 2.879047923533167 Loss ratio: 0.6629657619775361 Tokens per Sec: 2594.5223922519613
Epoch Step: 55 / 67 Loss (mean): 4.074130695313215 Loss (std): 3.454461786869276 Loss ratio: 0.8479015636006003 Tokens per Sec: 3128.948975912473
Epoch Step: 60 / 67 Loss (mean): 5.169353041332215 Loss (std): 3.4450576948073306 Loss ratio: 0.6664388497481091 Tokens per Sec: 2713.9261625477175
Epoch Step: 65 / 67 Loss (mean): 5.124133313889615 Loss (std): 3.3489698655394426 Loss ratio: 0.653568059297293 Tokens per Sec: 2500.1583824890013
Mean loss per sample: 6.446510749838922 Std loss per sample: 8.898723011870647 ratio: 1.3803937288234567
Epoch ended with duration 0:00:11.453116
Train perplexity: 2.3921943058824167
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings length not complete during device[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api testmultipleuserfield[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix sorting of password[0m
Epoch Step: 5 / 8 Loss (mean): 74.37199121713638 Loss (std): 34.146308505398686 Loss ratio: 0.45912860401579353 Tokens per Sec: 4418.582737543629
Mean loss per sample: 77.56969911153199 Std loss per sample: 40.471987025962974 ratio: 0.5217499550664901
Epoch ended with duration 0:00:01.021101
b'BLEU = 2.15, 8.2/2.3/1.4/1.0 (BP=0.938, ratio=0.940, hyp_len=2925, ref_len=3113)\n'
Validation perplexity: 36756.9879222448
Validation accuracy: 0.0
Validation BLEU: 2.15
Epoch 210 / 1000
Epoch Step: 5 / 67 Loss (mean): 6.955047369003296 Loss (std): 3.6442480915605655 Loss ratio: 0.5239717140967237 Tokens per Sec: 2678.1356614074143
Epoch Step: 10 / 67 Loss (mean): 21.87575276196003 Loss (std): 21.74609704749358 Loss ratio: 0.9940730855812236 Tokens per Sec: 2542.074066855031
Epoch Step: 15 / 67 Loss (mean): 4.433586692903191 Loss (std): 3.0156016074308707 Loss ratio: 0.6801720178964633 Tokens per Sec: 2660.567684600887
Epoch Step: 20 / 67 Loss (mean): 4.990226566325873 Loss (std): 3.0893550263563814 Loss ratio: 0.6190811149143803 Tokens per Sec: 3000.243839945589
Epoch Step: 25 / 67 Loss (mean): 4.234882433433086 Loss (std): 3.2403556779663534 Loss ratio: 0.7651583553736341 Tokens per Sec: 2848.2886631570973
Epoch Step: 30 / 67 Loss (mean): 4.288239049259573 Loss (std): 3.033809395252424 Loss ratio: 0.707472078958904 Tokens per Sec: 3117.7964527824993
Epoch Step: 35 / 67 Loss (mean): 4.283137002028525 Loss (std): 2.9103994812887843 Loss ratio: 0.6795018417366518 Tokens per Sec: 2644.6528770589043
Epoch Step: 40 / 67 Loss (mean): 4.497007132042199 Loss (std): 2.6424392958015055 Loss ratio: 0.5875995341376099 Tokens per Sec: 2920.2844770246197
Epoch Step: 45 / 67 Loss (mean): 4.394825862837024 Loss (std): 2.5088201714933 Loss ratio: 0.570857697163401 Tokens per Sec: 2820.5846331600233
Epoch Step: 50 / 67 Loss (mean): 4.3871854797471315 Loss (std): 3.3224065149361635 Loss ratio: 0.7572979374301859 Tokens per Sec: 2749.0428309991103
Epoch Step: 55 / 67 Loss (mean): 5.7847315557301044 Loss (std): 3.16968042244589 Loss ratio: 0.5479390688935499 Tokens per Sec: 2387.2475116707396
Epoch Step: 60 / 67 Loss (mean): 5.266125037334859 Loss (std): 3.0602103639497025 Loss ratio: 0.5811123629336474 Tokens per Sec: 3136.5749280654077
Epoch Step: 65 / 67 Loss (mean): 22.301925042178482 Loss (std): 21.563014527515882 Loss ratio: 0.9668678594666095 Tokens per Sec: 2548.4624356949225
Mean loss per sample: 6.587975791292645 Std loss per sample: 9.515049829255828 ratio: 1.444305524290467
Epoch ended with duration 0:00:11.456336
Train perplexity: 2.4384223299059307
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length arrays if device ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api and gb2312han[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space when getting string password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 85.56996974349022 Loss (std): 33.162487906344616 Loss ratio: 0.3875482018487855 Tokens per Sec: 4325.473765228578
Mean loss per sample: 79.25172536978957 Std loss per sample: 40.058546611811316 ratio: 0.5054596152310581
Epoch ended with duration 0:00:01.044183
b'BLEU = 2.08, 8.5/2.3/1.4/1.0 (BP=0.926, ratio=0.928, hyp_len=2890, ref_len=3113)\n'
Validation perplexity: 46167.3593609947
Validation accuracy: 0.0
Validation BLEU: 2.08
Model saved checkpoint_commit_msg_generator!
Epoch 211 / 1000
Epoch Step: 5 / 67 Loss (mean): 4.880492015276104 Loss (std): 2.8267732987577565 Loss ratio: 0.5791984271073205 Tokens per Sec: 2978.380939673372
Epoch Step: 10 / 67 Loss (mean): 21.078278858680278 Loss (std): 19.340671149628825 Loss ratio: 0.9175640610553984 Tokens per Sec: 2289.6354597419877
Epoch Step: 15 / 67 Loss (mean): 4.445184127893299 Loss (std): 2.6584149719903096 Loss ratio: 0.5980438369940391 Tokens per Sec: 3143.531915837984
Epoch Step: 20 / 67 Loss (mean): 4.958395596127957 Loss (std): 3.639676043552197 Loss ratio: 0.7340430937770361 Tokens per Sec: 2801.9019635118148
Epoch Step: 25 / 67 Loss (mean): 19.345482957549393 Loss (std): 19.54394543944863 Loss ratio: 1.0102588538282933 Tokens per Sec: 2912.3145710557824
Epoch Step: 30 / 67 Loss (mean): 5.182828835211694 Loss (std): 2.994653775021346 Loss ratio: 0.577802947046201 Tokens per Sec: 2431.4847185081776
Epoch Step: 35 / 67 Loss (mean): 5.404366746544838 Loss (std): 3.0228262499288765 Loss ratio: 0.5593303326169441 Tokens per Sec: 3027.109258957465
Epoch Step: 40 / 67 Loss (mean): 3.9252371629700065 Loss (std): 2.671153046403209 Loss ratio: 0.6805074280867395 Tokens per Sec: 2590.045879898572
Epoch Step: 45 / 67 Loss (mean): 20.586408138275146 Loss (std): 20.756883461662742 Loss ratio: 1.0082809649086204 Tokens per Sec: 3021.6560029821844
Epoch Step: 50 / 67 Loss (mean): 4.8903707093559206 Loss (std): 3.378646444224232 Loss ratio: 0.6908773680000246 Tokens per Sec: 2537.0915605216096
Epoch Step: 55 / 67 Loss (mean): 4.151340022217482 Loss (std): 2.800882049833517 Loss ratio: 0.6746934808624508 Tokens per Sec: 2460.9933885850996
Epoch Step: 60 / 67 Loss (mean): 4.815415080403909 Loss (std): 3.5025136757728084 Loss ratio: 0.7273544683668315 Tokens per Sec: 3034.0844112071295
Epoch Step: 65 / 67 Loss (mean): 5.300551254302263 Loss (std): 2.9515567613158837 Loss ratio: 0.5568395851130037 Tokens per Sec: 2987.3505211360557
Mean loss per sample: 6.911834665346651 Std loss per sample: 9.940548230032306 ratio: 1.438192420873504
Epoch ended with duration 0:00:11.472877
Train perplexity: 2.54764462867552
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix exception exception declaration[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix sorting of password[0m
Epoch Step: 5 / 8 Loss (mean): 74.91421535611153 Loss (std): 35.078637939989946 Loss ratio: 0.4682507555240411 Tokens per Sec: 4410.155695887787
Mean loss per sample: 78.40521401215773 Std loss per sample: 41.38008881704481 ratio: 0.5277721556965369
Epoch ended with duration 0:00:01.021572
b'BLEU = 1.75, 8.8/2.0/1.2/0.8 (BP=0.876, ratio=0.883, hyp_len=2749, ref_len=3113)\n'
Validation perplexity: 41163.650176353854
Validation accuracy: 0.0
Validation BLEU: 1.75
Epoch 212 / 1000
Epoch Step: 5 / 67 Loss (mean): 4.5580123364925385 Loss (std): 2.9281293192196594 Loss ratio: 0.6424136450391664 Tokens per Sec: 3447.8979448926775
Epoch Step: 10 / 67 Loss (mean): 3.919649073854089 Loss (std): 2.4974715798257536 Loss ratio: 0.6371671373555018 Tokens per Sec: 2709.676071630298
Epoch Step: 15 / 67 Loss (mean): 5.085567950736731 Loss (std): 2.8918978309280874 Loss ratio: 0.5686479580926938 Tokens per Sec: 3250.567146694647
Epoch Step: 20 / 67 Loss (mean): 4.328980995342135 Loss (std): 2.7206097085760437 Loss ratio: 0.6284642301510089 Tokens per Sec: 2615.994498021477
Epoch Step: 25 / 67 Loss (mean): 5.0453398081008345 Loss (std): 3.4963842428319016 Loss ratio: 0.6929928163050746 Tokens per Sec: 2533.7885457895572
Epoch Step: 30 / 67 Loss (mean): 4.316831965115853 Loss (std): 2.962553664439749 Loss ratio: 0.6862795884528348 Tokens per Sec: 2636.3744621520773
Epoch Step: 35 / 67 Loss (mean): 3.3235605999361724 Loss (std): 2.20560177482232 Loss ratio: 0.6636261649222456 Tokens per Sec: 2419.5045746359433
Epoch Step: 40 / 67 Loss (mean): 5.050478891469538 Loss (std): 3.302532379824158 Loss ratio: 0.6539047980979127 Tokens per Sec: 3081.5976085245616
Epoch Step: 45 / 67 Loss (mean): 19.61021703062579 Loss (std): 24.006491959277405 Loss ratio: 1.2241828798623613 Tokens per Sec: 2844.268487800865
Epoch Step: 50 / 67 Loss (mean): 5.319371861405671 Loss (std): 3.01921753111121 Loss ratio: 0.5675891082210159 Tokens per Sec: 2584.771330672794
Epoch Step: 55 / 67 Loss (mean): 4.332138814032078 Loss (std): 3.4122334058479016 Loss ratio: 0.787655602077075 Tokens per Sec: 2995.919285729652
Epoch Step: 60 / 67 Loss (mean): 4.66532605770044 Loss (std): 3.0905482599605425 Loss ratio: 0.6624506458362928 Tokens per Sec: 2557.9076824562253
Epoch Step: 65 / 67 Loss (mean): 5.09074550261721 Loss (std): 3.051289899900548 Loss ratio: 0.59937977617067 Tokens per Sec: 2574.5855526097803
Mean loss per sample: 5.335813104922971 Std loss per sample: 6.094227776029343 ratio: 1.142136663371256
Epoch ended with duration 0:00:11.428747
Train perplexity: 2.0584103085819176
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during log codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix sorting of password[0m
Epoch Step: 5 / 8 Loss (mean): 74.97463265061378 Loss (std): 34.836993601553424 Loss ratio: 0.46465040734371943 Tokens per Sec: 4281.504880319291
Mean loss per sample: 79.35737649241432 Std loss per sample: 40.986632951941424 ratio: 0.5164817029436362
Epoch ended with duration 0:00:01.037789
b'BLEU = 1.96, 9.0/2.4/1.3/0.8 (BP=0.913, ratio=0.917, hyp_len=2854, ref_len=3113)\n'
Validation perplexity: 46833.12073184981
Validation accuracy: 0.0
Validation BLEU: 1.96
Epoch 213 / 1000
Epoch Step: 5 / 67 Loss (mean): 20.204538332065567 Loss (std): 23.036462234489964 Loss ratio: 1.140162762240897 Tokens per Sec: 2084.980741385127
Epoch Step: 10 / 67 Loss (mean): 3.8382342411205173 Loss (std): 2.88580637298193 Loss ratio: 0.7518578053588153 Tokens per Sec: 2534.630234585365
Epoch Step: 15 / 67 Loss (mean): 4.602549236966297 Loss (std): 3.2112122598216697 Loss ratio: 0.6977029673099799 Tokens per Sec: 2210.21320912152
Epoch Step: 20 / 67 Loss (mean): 3.6938030172605067 Loss (std): 2.5083587113027037 Loss ratio: 0.6790721377348966 Tokens per Sec: 2769.294667460166
Epoch Step: 25 / 67 Loss (mean): 4.8809638218954206 Loss (std): 3.047371302292203 Loss ratio: 0.6243380228761498 Tokens per Sec: 2837.744550996751
Epoch Step: 30 / 67 Loss (mean): 26.018385528586805 Loss (std): 22.18824859275618 Loss ratio: 0.8527911375737595 Tokens per Sec: 3158.2928040971146
Epoch Step: 35 / 67 Loss (mean): 5.222422861028463 Loss (std): 2.9563620694650803 Loss ratio: 0.5660901363477253 Tokens per Sec: 2490.080962457149
Epoch Step: 40 / 67 Loss (mean): 5.537263108417392 Loss (std): 3.414989380017733 Loss ratio: 0.6167287544683375 Tokens per Sec: 2963.045290484531
Epoch Step: 45 / 67 Loss (mean): 6.655441366136074 Loss (std): 3.0509793473930036 Loss ratio: 0.4584187854042053 Tokens per Sec: 3084.5781101972707
Epoch Step: 50 / 67 Loss (mean): 4.275042210705578 Loss (std): 2.6292534722640424 Loss ratio: 0.6150239793375267 Tokens per Sec: 2761.8780912120965
Epoch Step: 55 / 67 Loss (mean): 21.318015914410353 Loss (std): 23.537649168652482 Loss ratio: 1.1041200674187377 Tokens per Sec: 3204.5372941297433
Epoch Step: 60 / 67 Loss (mean): 5.930903400294483 Loss (std): 2.738729580221708 Loss ratio: 0.4617727511943162 Tokens per Sec: 3176.4927546668246
Epoch Step: 65 / 67 Loss (mean): 4.525560161564499 Loss (std): 2.989473521803917 Loss ratio: 0.6605753575421363 Tokens per Sec: 2773.020874090933
Mean loss per sample: 6.673307405553315 Std loss per sample: 9.766014819222523 ratio: 1.4634444699933282
Epoch ended with duration 0:00:11.508237
Train perplexity: 2.466737894136126
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings length not used ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt[0m
Epoch Step: 5 / 8 Loss (mean): 74.58189183473587 Loss (std): 34.22308692897722 Loss ratio: 0.4588659001143507 Tokens per Sec: 4287.084783301848
Mean loss per sample: 79.17757957196626 Std loss per sample: 41.115856019019965 ratio: 0.519286599076306
Epoch ended with duration 0:00:01.035312
b'BLEU = 2.19, 8.4/2.5/1.4/1.0 (BP=0.938, ratio=0.940, hyp_len=2926, ref_len=3113)\n'
Validation perplexity: 45705.78870455776
Validation accuracy: 0.0
Validation BLEU: 2.19
Epoch 214 / 1000
Epoch Step: 5 / 67 Loss (mean): 5.418541857972741 Loss (std): 3.332909044684872 Loss ratio: 0.6150933465210556 Tokens per Sec: 3071.284187450271
Epoch Step: 10 / 67 Loss (mean): 4.280221407534555 Loss (std): 2.9795642302587555 Loss ratio: 0.6961238558859998 Tokens per Sec: 3139.484233391316
Epoch Step: 15 / 67 Loss (mean): 17.73699590191245 Loss (std): 19.26392809895063 Loss ratio: 1.0860874189452534 Tokens per Sec: 2285.5120916591586
Epoch Step: 20 / 67 Loss (mean): 4.092197814956307 Loss (std): 2.8895320360435477 Loss ratio: 0.7061076142220655 Tokens per Sec: 3012.7249564958356
Epoch Step: 25 / 67 Loss (mean): 29.40626639313996 Loss (std): 24.580635653373744 Loss ratio: 0.8358978771649854 Tokens per Sec: 2918.8281358971203
Epoch Step: 30 / 67 Loss (mean): 3.9510300694964826 Loss (std): 2.4442264763752193 Loss ratio: 0.6186301884274726 Tokens per Sec: 2558.6321510335997
Epoch Step: 35 / 67 Loss (mean): 4.658122935099527 Loss (std): 2.8388900998863553 Loss ratio: 0.6094493725133294 Tokens per Sec: 3093.6345807568377
Epoch Step: 40 / 67 Loss (mean): 4.553651791531593 Loss (std): 2.8285688031466685 Loss ratio: 0.6211649314967267 Tokens per Sec: 2549.2575712686557
Epoch Step: 45 / 67 Loss (mean): 3.9833897221833467 Loss (std): 2.790384584001169 Loss ratio: 0.7005050418395224 Tokens per Sec: 2842.3263596279817
Epoch Step: 50 / 67 Loss (mean): 3.692100557964295 Loss (std): 2.5887918846465636 Loss ratio: 0.7011704703064587 Tokens per Sec: 2469.7289609442223
Epoch Step: 55 / 67 Loss (mean): 6.360611900687218 Loss (std): 4.038195635576105 Loss ratio: 0.6348753388238964 Tokens per Sec: 3066.342188468567
Epoch Step: 60 / 67 Loss (mean): 3.767310392577201 Loss (std): 2.820642183460814 Loss ratio: 0.7487151016328188 Tokens per Sec: 2544.45816131549
Epoch Step: 65 / 67 Loss (mean): 4.594806016422808 Loss (std): 2.6955356464395357 Loss ratio: 0.5866484105760116 Tokens per Sec: 2753.672792638484
Mean loss per sample: 6.668077719397843 Std loss per sample: 9.667003059204704 ratio: 1.44974360917882
Epoch ended with duration 0:00:11.483335
Train perplexity: 2.4649931093178887
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix exception # method_1 ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt[0m
Epoch Step: 5 / 8 Loss (mean): 86.75150144100189 Loss (std): 35.56994730534113 Loss ratio: 0.41002111449946027 Tokens per Sec: 4320.698470260635
Mean loss per sample: 79.68046026053976 Std loss per sample: 40.90434267356574 ratio: 0.5133547489537136
Epoch ended with duration 0:00:01.031563
b'BLEU = 2.27, 8.7/2.6/1.6/1.1 (BP=0.917, ratio=0.921, hyp_len=2866, ref_len=3113)\n'
Validation perplexity: 48929.19720319902
Validation accuracy: 0.0
Validation BLEU: 2.27
Epoch 215 / 1000
Epoch Step: 5 / 67 Loss (mean): 4.812460078392178 Loss (std): 3.0929783643499 Loss ratio: 0.6427021344524588 Tokens per Sec: 2537.240387359731
Epoch Step: 10 / 67 Loss (mean): 4.5473249482456595 Loss (std): 3.486444256948422 Loss ratio: 0.766702247283533 Tokens per Sec: 2606.8246574210775
Epoch Step: 15 / 67 Loss (mean): 32.66011333279312 Loss (std): 24.245968933049543 Loss ratio: 0.7423724677864126 Tokens per Sec: 2803.399624755229
Epoch Step: 20 / 67 Loss (mean): 5.629370114766061 Loss (std): 3.0518370503400547 Loss ratio: 0.5421276249602003 Tokens per Sec: 3581.7574466775072
Epoch Step: 25 / 67 Loss (mean): 3.8642520285211504 Loss (std): 2.5743552837194152 Loss ratio: 0.6661975628708207 Tokens per Sec: 2488.1822546432986
Epoch Step: 30 / 67 Loss (mean): 3.6687787314876914 Loss (std): 3.012786222030111 Loss ratio: 0.8211959462620481 Tokens per Sec: 2864.905245959289
Epoch Step: 35 / 67 Loss (mean): 4.839504017028958 Loss (std): 3.108134373157953 Loss ratio: 0.6422423376902334 Tokens per Sec: 2975.1756022838044
Epoch Step: 40 / 67 Loss (mean): 4.121102382894605 Loss (std): 2.6698384286947596 Loss ratio: 0.6478456928846068 Tokens per Sec: 2381.5948492243183
Epoch Step: 45 / 67 Loss (mean): 7.464565429659117 Loss (std): 13.172292675840398 Loss ratio: 1.7646429386903955 Tokens per Sec: 2745.719198748605
Epoch Step: 50 / 67 Loss (mean): 4.60975853446871 Loss (std): 3.091433975148938 Loss ratio: 0.6706281797697752 Tokens per Sec: 2712.7102072299012
Epoch Step: 55 / 67 Loss (mean): 4.763975405599922 Loss (std): 3.028854404895511 Loss ratio: 0.6357829642309185 Tokens per Sec: 2940.7086737741297
Epoch Step: 60 / 67 Loss (mean): 4.200078212656081 Loss (std): 3.004811435342987 Loss ratio: 0.7154179715721959 Tokens per Sec: 2614.222192171743
Epoch Step: 65 / 67 Loss (mean): 4.251567643601447 Loss (std): 3.1485445792792124 Loss ratio: 0.7405608573622791 Tokens per Sec: 2965.7989793997954
Mean loss per sample: 6.22769734876639 Std loss per sample: 9.224777223006248 ratio: 1.48125008432427
Epoch ended with duration 0:00:11.451631
Train perplexity: 2.322410543512564
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings length not complete during openjdk[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test method_1 for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt[0m
Epoch Step: 5 / 8 Loss (mean): 75.33475276827812 Loss (std): 35.229528543198185 Loss ratio: 0.467639797684882 Tokens per Sec: 4407.781060943207
Mean loss per sample: 78.96948055263425 Std loss per sample: 41.6928761612063 ratio: 0.5279618894468657
Epoch ended with duration 0:00:01.021757
b'BLEU = 1.97, 8.3/2.4/1.4/0.9 (BP=0.871, ratio=0.879, hyp_len=2735, ref_len=3113)\n'
Validation perplexity: 44434.83850835127
Validation accuracy: 0.0
Validation BLEU: 1.97
Model saved checkpoint_commit_msg_generator!
Epoch 216 / 1000
Epoch Step: 5 / 67 Loss (mean): 4.883237998466939 Loss (std): 3.0369065485890627 Loss ratio: 0.6219042671158932 Tokens per Sec: 3856.0490179924677
Epoch Step: 10 / 67 Loss (mean): 3.737104015890509 Loss (std): 2.6714631711426446 Loss ratio: 0.714848492250507 Tokens per Sec: 2790.249178701827
Epoch Step: 15 / 67 Loss (mean): 4.333293138537556 Loss (std): 2.234372477762199 Loss ratio: 0.5156292007782972 Tokens per Sec: 2682.4696484348055
Epoch Step: 20 / 67 Loss (mean): 3.931556231342256 Loss (std): 2.8254145283868533 Loss ratio: 0.7186504178326963 Tokens per Sec: 2508.5781163164606
Epoch Step: 25 / 67 Loss (mean): 4.98782750684768 Loss (std): 3.0057925522966795 Loss ratio: 0.6026256016612629 Tokens per Sec: 2648.3737910532104
Epoch Step: 30 / 67 Loss (mean): 4.226768347900361 Loss (std): 2.927515353628124 Loss ratio: 0.6926131532811259 Tokens per Sec: 2746.847296417743
Epoch Step: 35 / 67 Loss (mean): 4.489257475826889 Loss (std): 2.8282153399593213 Loss ratio: 0.6299962421822073 Tokens per Sec: 2634.3265258941774
Epoch Step: 40 / 67 Loss (mean): 3.768150944262743 Loss (std): 2.542854541513811 Loss ratio: 0.6748282059627876 Tokens per Sec: 2760.0991401326455
Epoch Step: 45 / 67 Loss (mean): 4.515903140883893 Loss (std): 3.012193412957371 Loss ratio: 0.6670190477929068 Tokens per Sec: 2881.4094561345637
Epoch Step: 50 / 67 Loss (mean): 4.154176901443861 Loss (std): 2.6603236570859385 Loss ratio: 0.6403972965526079 Tokens per Sec: 2771.3853780497343
Epoch Step: 55 / 67 Loss (mean): 19.272040193900466 Loss (std): 20.565489477680824 Loss ratio: 1.0671153272184297 Tokens per Sec: 2274.375179864109
Epoch Step: 60 / 67 Loss (mean): 5.125346381217241 Loss (std): 3.0696354937587524 Loss ratio: 0.5989127886083928 Tokens per Sec: 2894.277106688382
Epoch Step: 65 / 67 Loss (mean): 4.180015010759234 Loss (std): 3.0432141910691444 Loss ratio: 0.7280390580502705 Tokens per Sec: 2592.875060180899
Mean loss per sample: 6.45200923589952 Std loss per sample: 9.604585714426104 ratio: 1.4886193375213082
Epoch ended with duration 0:00:11.484333
Train perplexity: 2.393974625659709
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during log command[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: update colon and space in new password[0m
Epoch Step: 5 / 8 Loss (mean): 74.76697742938995 Loss (std): 33.86407846094812 Loss ratio: 0.4529282796396231 Tokens per Sec: 4159.621304294674
Mean loss per sample: 81.22957896404579 Std loss per sample: 41.06595752348841 ratio: 0.5055542334112703
Epoch ended with duration 0:00:01.069556
b'BLEU = 2.41, 8.5/2.9/1.7/1.2 (BP=0.913, ratio=0.917, hyp_len=2854, ref_len=3113)\n'
Validation perplexity: 60358.852922269376
Validation accuracy: 0.0
Validation BLEU: 2.41
Model saved best_on_validation_commit_msg_generator!
Epoch 217 / 1000
Epoch Step: 5 / 67 Loss (mean): 3.9930090233683586 Loss (std): 2.459752127009731 Loss ratio: 0.6160146677892485 Tokens per Sec: 2963.043273562698
Epoch Step: 10 / 67 Loss (mean): 3.745734967349563 Loss (std): 2.3879301427573316 Loss ratio: 0.6375064342704958 Tokens per Sec: 2540.074158011881
Epoch Step: 15 / 67 Loss (mean): 4.555228230543435 Loss (std): 2.928431646967557 Loss ratio: 0.6428726506680869 Tokens per Sec: 3028.746609067772
Epoch Step: 20 / 67 Loss (mean): 3.479886107685161 Loss (std): 2.929266979616428 Loss ratio: 0.8417709341542193 Tokens per Sec: 2750.639757974955
Epoch Step: 25 / 67 Loss (mean): 4.529495652299374 Loss (std): 2.4096364885127244 Loss ratio: 0.5319878135415552 Tokens per Sec: 2168.779490596415
Epoch Step: 30 / 67 Loss (mean): 4.750713092740625 Loss (std): 2.688864434054752 Loss ratio: 0.5659917535671641 Tokens per Sec: 2693.9131763063892
Epoch Step: 35 / 67 Loss (mean): 21.498572942102328 Loss (std): 20.393274706224656 Loss ratio: 0.9485873672241248 Tokens per Sec: 2359.3092754571135
Epoch Step: 40 / 67 Loss (mean): 3.9419949292205274 Loss (std): 3.2885046250415044 Loss ratio: 0.8342234538824632 Tokens per Sec: 2716.690394876301
Epoch Step: 45 / 67 Loss (mean): 1.9360975985459628 Loss (std): 1.4308618435661842 Loss ratio: 0.7390442737188363 Tokens per Sec: 3099.700160685202
Epoch Step: 50 / 67 Loss (mean): 5.837978398427367 Loss (std): 3.6602962358573676 Loss ratio: 0.6269800924312048 Tokens per Sec: 3137.0291566880514
Epoch Step: 55 / 67 Loss (mean): 4.515183418174274 Loss (std): 2.7439631930654613 Loss ratio: 0.607719097749298 Tokens per Sec: 2927.274989543073
Epoch Step: 60 / 67 Loss (mean): 3.715529679437168 Loss (std): 2.792633798663984 Loss ratio: 0.7516112209032374 Tokens per Sec: 2651.7665642146603
Epoch Step: 65 / 67 Loss (mean): 4.384979688562453 Loss (std): 2.527503796304503 Loss ratio: 0.5764003429473366 Tokens per Sec: 3384.7419156322935
Mean loss per sample: 6.00665896350083 Std loss per sample: 8.620315332133577 ratio: 1.4351264795478655
Epoch ended with duration 0:00:11.442993
Train perplexity: 2.253983833442934
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during log codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt[0m
Epoch Step: 5 / 8 Loss (mean): 85.3488640487194 Loss (std): 34.43118687736288 Loss ratio: 0.40341704908583953 Tokens per Sec: 4317.559926695596
Mean loss per sample: 79.84331773490202 Std loss per sample: 41.25682082240001 ratio: 0.5167222754868734
Epoch ended with duration 0:00:01.033626
b'BLEU = 2.22, 8.3/2.6/1.5/1.2 (BP=0.890, ratio=0.896, hyp_len=2789, ref_len=3113)\n'
Validation perplexity: 50021.074316037564
Validation accuracy: 0.0
Validation BLEU: 2.22
Epoch 218 / 1000
Epoch Step: 5 / 67 Loss (mean): 17.678040796192363 Loss (std): 21.18146581249639 Loss ratio: 1.1981794847457656 Tokens per Sec: 2593.347220418877
Epoch Step: 10 / 67 Loss (mean): 4.673006459604949 Loss (std): 3.1102637495772325 Loss ratio: 0.6655808795608151 Tokens per Sec: 2866.5318614445496
Epoch Step: 15 / 67 Loss (mean): 4.590663457289338 Loss (std): 2.8344968244876263 Loss ratio: 0.617448186053987 Tokens per Sec: 2656.168105100316
Epoch Step: 20 / 67 Loss (mean): 4.430249026976526 Loss (std): 2.755729083633742 Loss ratio: 0.6220257748161893 Tokens per Sec: 2854.8264694760724
Epoch Step: 25 / 67 Loss (mean): 4.1076921643689275 Loss (std): 3.024779667476157 Loss ratio: 0.7363696076628614 Tokens per Sec: 2532.9185328300014
Epoch Step: 30 / 67 Loss (mean): 5.167243347037584 Loss (std): 3.5265948766508988 Loss ratio: 0.6824905737549055 Tokens per Sec: 3174.1904055349046
Epoch Step: 35 / 67 Loss (mean): 4.1023630308918655 Loss (std): 2.6618051660409106 Loss ratio: 0.648846809996293 Tokens per Sec: 2684.8485543388133
Epoch Step: 40 / 67 Loss (mean): 4.046723262406886 Loss (std): 2.723904666872954 Loss ratio: 0.6731136502901971 Tokens per Sec: 2792.9539223056013
Epoch Step: 45 / 67 Loss (mean): 5.304829426109791 Loss (std): 3.103835224945112 Loss ratio: 0.5850961408237509 Tokens per Sec: 3584.093979785629
Epoch Step: 50 / 67 Loss (mean): 5.365933218039572 Loss (std): 2.544239169077869 Loss ratio: 0.4741466331568322 Tokens per Sec: 2478.3841469322565
Epoch Step: 55 / 67 Loss (mean): 4.363202719716355 Loss (std): 3.090575611189553 Loss ratio: 0.7083273021498452 Tokens per Sec: 2292.9348540956894
Epoch Step: 60 / 67 Loss (mean): 20.89016436901875 Loss (std): 21.426968203936525 Loss ratio: 1.025696486893798 Tokens per Sec: 2733.749735241346
Epoch Step: 65 / 67 Loss (mean): 4.553318252786994 Loss (std): 2.776245682007186 Loss ratio: 0.6097192262605194 Tokens per Sec: 3128.9941931586336
Mean loss per sample: 5.8916400269217934 Std loss per sample: 8.977927325297365 ratio: 1.5238417968974363
Epoch ended with duration 0:00:11.428545
Train perplexity: 2.219178791961486
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings length not used and stack[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix colon and space in gerrit core ( cherry picked in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 74.14031141996384 Loss (std): 33.65527767617912 Loss ratio: 0.45394033328968086 Tokens per Sec: 4337.9247774428595
Mean loss per sample: 78.14904332112093 Std loss per sample: 40.83417437773871 ratio: 0.5225166251869225
Epoch ended with duration 0:00:01.029428
b'BLEU = 2.26, 8.3/2.7/1.6/1.2 (BP=0.888, ratio=0.894, hyp_len=2782, ref_len=3113)\n'
Validation perplexity: 39759.14480231899
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.26
Epoch 219 / 1000
Epoch Step: 5 / 67 Loss (mean): 17.67069482943043 Loss (std): 18.54956866531768 Loss ratio: 1.0497362352963897 Tokens per Sec: 2650.1165339600307
Epoch Step: 10 / 67 Loss (mean): 5.087296298705041 Loss (std): 2.7060749178445267 Loss ratio: 0.5319279159213415 Tokens per Sec: 2994.646721081762
Epoch Step: 15 / 67 Loss (mean): 4.0150858871638775 Loss (std): 2.6027329207630148 Loss ratio: 0.6482384172861364 Tokens per Sec: 2705.6808882704318
Epoch Step: 20 / 67 Loss (mean): 4.285604109754786 Loss (std): 2.5132163970411003 Loss ratio: 0.5864322351475675 Tokens per Sec: 2721.006821136035
Epoch Step: 25 / 67 Loss (mean): 4.391175698023289 Loss (std): 2.8480115181191046 Loss ratio: 0.6485760793860177 Tokens per Sec: 3039.3406428115004
Epoch Step: 30 / 67 Loss (mean): 3.910917421337217 Loss (std): 2.4399835504586056 Loss ratio: 0.6238903274066904 Tokens per Sec: 3056.7230225674466
Epoch Step: 35 / 67 Loss (mean): 5.277316840365529 Loss (std): 3.016000740913874 Loss ratio: 0.5715026844408632 Tokens per Sec: 2531.6875648320124
Epoch Step: 40 / 67 Loss (mean): 5.143393578007817 Loss (std): 3.2826231266067527 Loss ratio: 0.638221259334038 Tokens per Sec: 3322.663904968738
Epoch Step: 45 / 67 Loss (mean): 4.45596482232213 Loss (std): 2.5368840814187736 Loss ratio: 0.569323184220456 Tokens per Sec: 3142.9997286039406
Epoch Step: 50 / 67 Loss (mean): 3.7212618640623987 Loss (std): 2.7075499772535276 Loss ratio: 0.727589209295196 Tokens per Sec: 2392.6693460698466
Epoch Step: 55 / 67 Loss (mean): 4.500435473630205 Loss (std): 2.936669051633911 Loss ratio: 0.6525299760080981 Tokens per Sec: 2491.6083134098376
Epoch Step: 60 / 67 Loss (mean): 3.645422191824764 Loss (std): 2.41794783409027 Loss ratio: 0.6632833474028791 Tokens per Sec: 2302.6271494279104
Epoch Step: 65 / 67 Loss (mean): 4.530519409105182 Loss (std): 2.8609688956613417 Loss ratio: 0.6314880562947216 Tokens per Sec: 2766.9322192930754
Mean loss per sample: 6.057320039052179 Std loss per sample: 9.382622529536384 ratio: 1.5489725603147317
Epoch ended with duration 0:00:11.453828
Train perplexity: 2.269486676606174
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during log codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt[0m
Epoch Step: 5 / 8 Loss (mean): 75.80554872751236 Loss (std): 34.3284241020513 Loss ratio: 0.45284843495357974 Tokens per Sec: 4426.1919161080505
Mean loss per sample: 79.46918273509526 Std loss per sample: 41.264550633290405 ratio: 0.5192522335462135
Epoch ended with duration 0:00:01.020197
b'BLEU = 2.33, 8.1/2.6/1.5/1.1 (BP=0.956, ratio=0.957, hyp_len=2979, ref_len=3113)\n'
Validation perplexity: 47548.1275222767
Validation accuracy: 0.0
Validation BLEU: 2.33
Epoch 220 / 1000
Epoch Step: 5 / 67 Loss (mean): 4.635155852185562 Loss (std): 2.98785168062706 Loss ratio: 0.6446065193726404 Tokens per Sec: 2727.486770256665
Epoch Step: 10 / 67 Loss (mean): 3.96152574615553 Loss (std): 3.008701062512944 Loss ratio: 0.7594803758205392 Tokens per Sec: 2604.2211888092984
Epoch Step: 15 / 67 Loss (mean): 4.6201553251594305 Loss (std): 2.7491353689734535 Loss ratio: 0.5950309406272153 Tokens per Sec: 3184.3882205273226
Epoch Step: 20 / 67 Loss (mean): 4.723096373490989 Loss (std): 3.2951209166025404 Loss ratio: 0.697661164632771 Tokens per Sec: 2784.725657551722
Epoch Step: 25 / 67 Loss (mean): 3.5125269994605333 Loss (std): 2.329691239356327 Loss ratio: 0.663252194136623 Tokens per Sec: 2666.263784960686
Epoch Step: 30 / 67 Loss (mean): 3.9332923388574272 Loss (std): 2.726129582773614 Loss ratio: 0.6930910158499739 Tokens per Sec: 2847.0890720970583
Epoch Step: 35 / 67 Loss (mean): 3.7227344163693488 Loss (std): 2.512507085886129 Loss ratio: 0.674909033219858 Tokens per Sec: 2595.465294704926
Epoch Step: 40 / 67 Loss (mean): 3.6112227390985936 Loss (std): 2.4566070522884926 Loss ratio: 0.6802701549508111 Tokens per Sec: 2844.894586480155
Epoch Step: 45 / 67 Loss (mean): 4.270641067298129 Loss (std): 3.236785542624599 Loss ratio: 0.7579156130469163 Tokens per Sec: 3465.0543201965033
Epoch Step: 50 / 67 Loss (mean): 3.9187166548799723 Loss (std): 2.7123112394925175 Loss ratio: 0.6921427289505303 Tokens per Sec: 2413.7675032445645
Epoch Step: 55 / 67 Loss (mean): 4.3414140057284385 Loss (std): 2.9075781891051835 Loss ratio: 0.6697306880358962 Tokens per Sec: 2688.6714824676965
Epoch Step: 60 / 67 Loss (mean): 4.7197771281935275 Loss (std): 3.0747511550831303 Loss ratio: 0.6514610905494126 Tokens per Sec: 2307.491023788584
Epoch Step: 65 / 67 Loss (mean): 4.466511812992394 Loss (std): 2.8577994097673036 Loss ratio: 0.6398280200344273 Tokens per Sec: 2715.159548358673
Mean loss per sample: 5.9185131218212765 Std loss per sample: 8.813990862219033 ratio: 1.489223844029722
Epoch ended with duration 0:00:11.457335
Train perplexity: 2.227262239594238
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length from inactive ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt[0m
Epoch Step: 5 / 8 Loss (mean): 75.2193723320961 Loss (std): 34.36328380252578 Loss ratio: 0.45684087406114887 Tokens per Sec: 4191.934722010369
Mean loss per sample: 81.31426111352248 Std loss per sample: 40.1553323264329 ratio: 0.4938289025386607
Epoch ended with duration 0:00:01.048645
b'BLEU = 1.77, 8.1/2.2/1.1/0.7 (BP=0.929, ratio=0.932, hyp_len=2900, ref_len=3113)\n'
Validation perplexity: 61055.5177821845
Validation accuracy: 0.0
Validation BLEU: 1.77
Model saved checkpoint_commit_msg_generator!
Epoch 221 / 1000
Epoch Step: 5 / 67 Loss (mean): 3.5244756233878434 Loss (std): 2.329777435375361 Loss ratio: 0.661028102993631 Tokens per Sec: 2387.961409320395
Epoch Step: 10 / 67 Loss (mean): 3.5314305457286537 Loss (std): 2.514386786171614 Loss ratio: 0.7120023326560457 Tokens per Sec: 2370.0929799177316
Epoch Step: 15 / 67 Loss (mean): 6.36597920442 Loss (std): 3.37487894232947 Loss ratio: 0.5301429417152727 Tokens per Sec: 3269.7732755442494
Epoch Step: 20 / 67 Loss (mean): 4.414760511368513 Loss (std): 2.5794442901078014 Loss ratio: 0.5842772860420032 Tokens per Sec: 2922.3552326697595
Epoch Step: 25 / 67 Loss (mean): 4.394964777166024 Loss (std): 2.5756008960605534 Loss ratio: 0.5860344796031246 Tokens per Sec: 3128.4215874790525
Epoch Step: 30 / 67 Loss (mean): 4.509097295231186 Loss (std): 2.8239488476392656 Loss ratio: 0.626278091321265 Tokens per Sec: 2774.5772015439725
Epoch Step: 35 / 67 Loss (mean): 20.91912156739272 Loss (std): 19.392552021506734 Loss ratio: 0.927025160164206 Tokens per Sec: 2651.4628884253125
Epoch Step: 40 / 67 Loss (mean): 3.835877498378977 Loss (std): 2.8425918923071527 Loss ratio: 0.741053877113755 Tokens per Sec: 2863.5650920428634
Epoch Step: 45 / 67 Loss (mean): 3.9610577567946166 Loss (std): 2.812046197777502 Loss ratio: 0.7099230484468062 Tokens per Sec: 2326.606327657299
Epoch Step: 50 / 67 Loss (mean): 5.252807795535773 Loss (std): 2.406637799404944 Loss ratio: 0.45816216642274327 Tokens per Sec: 2800.6038343549462
Epoch Step: 55 / 67 Loss (mean): 5.653914676979184 Loss (std): 3.457489618479298 Loss ratio: 0.611521364578956 Tokens per Sec: 3005.95035367776
Epoch Step: 60 / 67 Loss (mean): 4.812144259456545 Loss (std): 2.9850780899681664 Loss ratio: 0.620321821005691 Tokens per Sec: 3411.222160082811
Epoch Step: 65 / 67 Loss (mean): 4.328926831483841 Loss (std): 2.6621101419729785 Loss ratio: 0.6149584517372122 Tokens per Sec: 2585.1600619622845
Mean loss per sample: 5.535482806882324 Std loss per sample: 8.14624884931991 ratio: 1.471641974787022
Epoch ended with duration 0:00:11.403980
Train perplexity: 2.1147767337969543
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during log command during log[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt[0m
Epoch Step: 5 / 8 Loss (mean): 75.08113569021225 Loss (std): 34.38118268165241 Loss ratio: 0.45792038660031115 Tokens per Sec: 4183.714028682953
Mean loss per sample: 81.13942051520112 Std loss per sample: 40.650120259197145 ratio: 0.500991010301602
Epoch ended with duration 0:00:01.049165
b'BLEU = 2.50, 8.7/2.8/1.7/1.2 (BP=0.938, ratio=0.940, hyp_len=2925, ref_len=3113)\n'
Validation perplexity: 59625.87028469899
Validation accuracy: 0.0
Validation BLEU: 2.5
Model saved best_on_validation_commit_msg_generator!
Epoch 222 / 1000
Epoch Step: 5 / 67 Loss (mean): 14.436853607650846 Loss (std): 21.706891230664045 Loss ratio: 1.5035749354111636 Tokens per Sec: 2889.033986772572
Epoch Step: 10 / 67 Loss (mean): 4.8464966784231365 Loss (std): 2.9914493033865135 Loss ratio: 0.6172395241091584 Tokens per Sec: 2698.0524575408613
Epoch Step: 15 / 67 Loss (mean): 3.5731075120856985 Loss (std): 2.3133955312624344 Loss ratio: 0.6474463820183392 Tokens per Sec: 3020.0766791730407
Epoch Step: 20 / 67 Loss (mean): 3.9787707570940256 Loss (std): 2.2738173002579556 Loss ratio: 0.5714873861993204 Tokens per Sec: 2560.3038519575853
Epoch Step: 25 / 67 Loss (mean): 24.976356777362525 Loss (std): 25.128233610656782 Loss ratio: 1.0060808241429315 Tokens per Sec: 3099.625191857907
Epoch Step: 30 / 67 Loss (mean): 4.5506876590661705 Loss (std): 2.7736329801884754 Loss ratio: 0.6094975502576334 Tokens per Sec: 2704.2807332562284
Epoch Step: 35 / 67 Loss (mean): 3.6162931602448225 Loss (std): 2.555811701176504 Loss ratio: 0.706749034971345 Tokens per Sec: 2577.031233989991
Epoch Step: 40 / 67 Loss (mean): 20.29356902698055 Loss (std): 23.171124097956415 Loss ratio: 1.1417964019611395 Tokens per Sec: 3545.9662440949273
Epoch Step: 45 / 67 Loss (mean): 4.298187811858952 Loss (std): 3.034989773150743 Loss ratio: 0.7061091571608454 Tokens per Sec: 2526.146175944986
Epoch Step: 50 / 67 Loss (mean): 4.2445759596303105 Loss (std): 2.7789598336536137 Loss ratio: 0.654708470312227 Tokens per Sec: 2440.6928501781417
Epoch Step: 55 / 67 Loss (mean): 5.003058443777263 Loss (std): 3.260399620664759 Loss ratio: 0.6516812980108199 Tokens per Sec: 2982.3484379696883
Epoch Step: 60 / 67 Loss (mean): 4.239924810593948 Loss (std): 2.608343027804907 Loss ratio: 0.615186151718459 Tokens per Sec: 2657.2856197068586
Epoch Step: 65 / 67 Loss (mean): 4.093290673568845 Loss (std): 2.0977233954095733 Loss ratio: 0.5124784831321586 Tokens per Sec: 2719.323266316018
Mean loss per sample: 5.801753921556975 Std loss per sample: 9.072405127428995 ratio: 1.5637349067356339
Epoch ended with duration 0:00:11.439401
Train perplexity: 2.192353555221591
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during run command during file[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt[0m
Epoch Step: 5 / 8 Loss (mean): 75.47338798642159 Loss (std): 34.521380037336705 Loss ratio: 0.45739804397740097 Tokens per Sec: 4424.273468286578
Mean loss per sample: 79.81098604495408 Std loss per sample: 42.048924663972166 ratio: 0.5268563483263798
Epoch ended with duration 0:00:01.020525
b'BLEU = 2.17, 8.9/2.6/1.5/1.0 (BP=0.893, ratio=0.898, hyp_len=2797, ref_len=3113)\n'
Validation perplexity: 49802.38526869333
Validation accuracy: 0.0
Validation BLEU: 2.17
Epoch 223 / 1000
Epoch Step: 5 / 67 Loss (mean): 4.4605913162231445 Loss (std): 2.3288204248580087 Loss ratio: 0.5220878264251877 Tokens per Sec: 2498.0415642911603
Epoch Step: 10 / 67 Loss (mean): 4.058569644577801 Loss (std): 2.6810185518250083 Loss ratio: 0.6605821229178156 Tokens per Sec: 2519.8579035396033
Epoch Step: 15 / 67 Loss (mean): 3.6830634153448045 Loss (std): 2.3481432126380644 Loss ratio: 0.6375516649686125 Tokens per Sec: 3295.736440199727
Epoch Step: 20 / 67 Loss (mean): 3.4557312474935316 Loss (std): 2.658859357357973 Loss ratio: 0.7694057109581263 Tokens per Sec: 3154.2708725184775
Epoch Step: 25 / 67 Loss (mean): 4.428096623858437 Loss (std): 2.881293546193566 Loss ratio: 0.6506844341808741 Tokens per Sec: 2803.3016922304228
Epoch Step: 30 / 67 Loss (mean): 4.485271611716598 Loss (std): 2.7580292869682514 Loss ratio: 0.6149079756426838 Tokens per Sec: 2913.1583789083265
Epoch Step: 35 / 67 Loss (mean): 6.3751871678978205 Loss (std): 3.356950600536029 Loss ratio: 0.526565026583049 Tokens per Sec: 3124.1198348604717
Epoch Step: 40 / 67 Loss (mean): 3.7187685323879123 Loss (std): 2.4257889027977484 Loss ratio: 0.6523097314798697 Tokens per Sec: 2740.875214635704
Epoch Step: 45 / 67 Loss (mean): 3.4988361067371443 Loss (std): 2.160981402122291 Loss ratio: 0.6176286445544671 Tokens per Sec: 2611.1169474961653
Epoch Step: 50 / 67 Loss (mean): 4.015691733220592 Loss (std): 2.5041610019273604 Loss ratio: 0.6235939330729001 Tokens per Sec: 2437.29051037672
Epoch Step: 55 / 67 Loss (mean): 3.717614990659058 Loss (std): 2.7979566429455343 Loss ratio: 0.7526214118395066 Tokens per Sec: 3114.675137910764
Epoch Step: 60 / 67 Loss (mean): 3.6438572010956705 Loss (std): 2.3755751575669475 Loss ratio: 0.6519396964438223 Tokens per Sec: 2232.506414763985
Epoch Step: 65 / 67 Loss (mean): 3.288104238221422 Loss (std): 2.2841768561751845 Loss ratio: 0.6946789671761517 Tokens per Sec: 2779.41829646168
Mean loss per sample: 4.914404758270105 Std loss per sample: 6.977496548324416 ratio: 1.4198050204518624
Epoch ended with duration 0:00:11.388389
Train perplexity: 1.9443302261178896
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix exception exception ( ) creation[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt[0m
Epoch Step: 5 / 8 Loss (mean): 75.64317545294762 Loss (std): 34.33092148668449 Loss ratio: 0.4538535205735695 Tokens per Sec: 4440.568429547576
Mean loss per sample: 79.66857925155124 Std loss per sample: 41.93004044476146 ratio: 0.5263058641019387
Epoch ended with duration 0:00:01.014816
b'BLEU = 2.26, 8.7/2.6/1.6/1.1 (BP=0.910, ratio=0.914, hyp_len=2845, ref_len=3113)\n'
Validation perplexity: 48850.48020293633
Validation accuracy: 0.0
Validation BLEU: 2.26
Epoch 224 / 1000
Epoch Step: 5 / 67 Loss (mean): 3.8178388364613056 Loss (std): 2.677690327151696 Loss ratio: 0.7013628499922759 Tokens per Sec: 3115.032090432434
Epoch Step: 10 / 67 Loss (mean): 2.808034871937707 Loss (std): 2.290931979469557 Loss ratio: 0.8158488351993581 Tokens per Sec: 2682.0881621160224
Epoch Step: 15 / 67 Loss (mean): 3.86922077415511 Loss (std): 2.766964780190641 Loss ratio: 0.7151219694344891 Tokens per Sec: 2470.9286739111512
Epoch Step: 20 / 67 Loss (mean): 4.343046911992133 Loss (std): 2.727335473896576 Loss ratio: 0.6279774382279378 Tokens per Sec: 3517.7347086919826
Epoch Step: 25 / 67 Loss (mean): 4.607698982115835 Loss (std): 2.7837858441264594 Loss ratio: 0.6041596586346787 Tokens per Sec: 3068.37470322828
Epoch Step: 30 / 67 Loss (mean): 3.2934575899271294 Loss (std): 2.3982406589607685 Loss ratio: 0.7281832522439834 Tokens per Sec: 2427.505798165208
Epoch Step: 35 / 67 Loss (mean): 3.5303413204674143 Loss (std): 2.5982593524977475 Loss ratio: 0.7359796452071495 Tokens per Sec: 2276.9920973204617
Epoch Step: 40 / 67 Loss (mean): 3.6794554733205587 Loss (std): 2.8005495674638103 Loss ratio: 0.7611315282302977 Tokens per Sec: 2499.653732406178
Epoch Step: 45 / 67 Loss (mean): 5.215658832341433 Loss (std): 3.370222554687127 Loss ratio: 0.6461738896319172 Tokens per Sec: 2897.260018407597
Epoch Step: 50 / 67 Loss (mean): 4.626409329473972 Loss (std): 2.8751603146100475 Loss ratio: 0.6214669109135996 Tokens per Sec: 2884.4915174670987
Epoch Step: 55 / 67 Loss (mean): 4.067848326580133 Loss (std): 2.2891382095179074 Loss ratio: 0.5627393220539274 Tokens per Sec: 3181.321464601507
Epoch Step: 60 / 67 Loss (mean): 3.464442789554596 Loss (std): 2.2625327893801392 Loss ratio: 0.653072637308876 Tokens per Sec: 2391.2942927062395
Epoch Step: 65 / 67 Loss (mean): 3.5724869868718088 Loss (std): 2.459156592704763 Loss ratio: 0.6883598461636622 Tokens per Sec: 2684.7947901811986
Mean loss per sample: 5.699384345839816 Std loss per sample: 8.848520135946822 ratio: 1.5525396427081941
Epoch ended with duration 0:00:11.449005
Train perplexity: 2.1621975205406114
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during headless ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for developer options percentages[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt[0m
Epoch Step: 5 / 8 Loss (mean): 75.6932307779789 Loss (std): 33.835302443670436 Loss ratio: 0.44700565817985927 Tokens per Sec: 4404.437206021628
Mean loss per sample: 79.52008585411994 Std loss per sample: 41.57621520492614 ratio: 0.5228391639465525
Epoch ended with duration 0:00:01.022119
b'BLEU = 2.39, 8.0/2.7/1.7/1.3 (BP=0.918, ratio=0.922, hyp_len=2869, ref_len=3113)\n'
Validation perplexity: 47877.26195434671
Validation accuracy: 0.0
Validation BLEU: 2.39
Epoch 225 / 1000
Epoch Step: 5 / 67 Loss (mean): 17.104302557883784 Loss (std): 20.39155035702005 Loss ratio: 1.1921883565852323 Tokens per Sec: 2579.9559396950895
Epoch Step: 10 / 67 Loss (mean): 3.9822047944180667 Loss (std): 2.357738560920856 Loss ratio: 0.5920686360042917 Tokens per Sec: 2901.0195970431164
Epoch Step: 15 / 67 Loss (mean): 1.910474700764531 Loss (std): 1.3282028795682528 Loss ratio: 0.6952213913310312 Tokens per Sec: 2888.0557090399434
Epoch Step: 20 / 67 Loss (mean): 2.961507414933294 Loss (std): 2.2066271225583884 Loss ratio: 0.7451026836642552 Tokens per Sec: 2493.863433559551
Epoch Step: 25 / 67 Loss (mean): 4.116084649693221 Loss (std): 2.8315314973214942 Loss ratio: 0.6879186747368117 Tokens per Sec: 3203.565341847407
Epoch Step: 30 / 67 Loss (mean): 3.711518691969104 Loss (std): 2.548023408861709 Loss ratio: 0.6865177358193189 Tokens per Sec: 2354.899424768023
Epoch Step: 35 / 67 Loss (mean): 3.641676648054272 Loss (std): 3.282937197993842 Loss ratio: 0.9014905811991566 Tokens per Sec: 2812.5872716763233
Epoch Step: 40 / 67 Loss (mean): 4.300492456881329 Loss (std): 2.945340580836819 Loss ratio: 0.684884489478386 Tokens per Sec: 2577.8705879154318
Epoch Step: 45 / 67 Loss (mean): 23.7052597803995 Loss (std): 21.60513053186296 Loss ratio: 0.9114066132161516 Tokens per Sec: 2758.461427716647
Epoch Step: 50 / 67 Loss (mean): 3.7300995078403503 Loss (std): 2.2947247693034156 Loss ratio: 0.6151913010578137 Tokens per Sec: 2446.1090606405614
Epoch Step: 55 / 67 Loss (mean): 6.302692133001983 Loss (std): 3.273530689482897 Loss ratio: 0.5193861004795277 Tokens per Sec: 3725.6364298202516
Epoch Step: 60 / 67 Loss (mean): 4.702541261678562 Loss (std): 2.7385578481116335 Loss ratio: 0.5823570056531756 Tokens per Sec: 3282.672712595026
Epoch Step: 65 / 67 Loss (mean): 3.5122816448565573 Loss (std): 2.3020242353357903 Loss ratio: 0.6554213095942668 Tokens per Sec: 2489.306931617914
Mean loss per sample: 5.932917761214276 Std loss per sample: 9.36236855992319 ratio: 1.5780378115349127
Epoch ended with duration 0:00:11.459965
Train perplexity: 2.231607280822357
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during log ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 75.8933747112751 Loss (std): 34.203424347773144 Loss ratio: 0.4506773414398149 Tokens per Sec: 4286.322446791691
Mean loss per sample: 80.84663837268704 Std loss per sample: 40.789224233602134 ratio: 0.5045259154199073
Epoch ended with duration 0:00:01.037781
b'BLEU = 2.28, 9.1/2.6/1.5/1.0 (BP=0.926, ratio=0.929, hyp_len=2892, ref_len=3113)\n'
Validation perplexity: 57306.40058507578
Validation accuracy: 0.0
Validation BLEU: 2.28
Model saved checkpoint_commit_msg_generator!
Epoch 226 / 1000
Epoch Step: 5 / 67 Loss (mean): 3.8376035802066326 Loss (std): 2.1806770772453357 Loss ratio: 0.5682392752843739 Tokens per Sec: 2428.775681647525
Epoch Step: 10 / 67 Loss (mean): 3.4500995008274913 Loss (std): 1.7666260417543342 Loss ratio: 0.5120507513857547 Tokens per Sec: 3140.4358832172747
Epoch Step: 15 / 67 Loss (mean): 3.9002834716811776 Loss (std): 2.774659350374328 Loss ratio: 0.7113994073816228 Tokens per Sec: 3155.3273384934246
Epoch Step: 20 / 67 Loss (mean): 4.578799352515489 Loss (std): 2.3011082734567823 Loss ratio: 0.50255713262312 Tokens per Sec: 2701.7787640207785
Epoch Step: 25 / 67 Loss (mean): 4.238027149112895 Loss (std): 2.8066380177142785 Loss ratio: 0.6622510708318055 Tokens per Sec: 2248.0093508409996
Epoch Step: 30 / 67 Loss (mean): 4.243523641023785 Loss (std): 2.786913526518058 Loss ratio: 0.6567451397173534 Tokens per Sec: 2382.418827351587
Epoch Step: 35 / 67 Loss (mean): 4.477787435054779 Loss (std): 3.087023277692886 Loss ratio: 0.6894081781385678 Tokens per Sec: 2781.7385714607703
Epoch Step: 40 / 67 Loss (mean): 3.7308936645276845 Loss (std): 2.4224440902090087 Loss ratio: 0.649293254653957 Tokens per Sec: 2962.8798593300785
Epoch Step: 45 / 67 Loss (mean): 4.8404025780037045 Loss (std): 2.7573852184675345 Loss ratio: 0.5696603069748684 Tokens per Sec: 3154.747704517502
Epoch Step: 50 / 67 Loss (mean): 3.764107266906649 Loss (std): 2.523482603783839 Loss ratio: 0.6704066661356445 Tokens per Sec: 2783.958526795264
Epoch Step: 55 / 67 Loss (mean): 4.354741825722158 Loss (std): 2.5931369813866203 Loss ratio: 0.5954743323863049 Tokens per Sec: 2847.184590070548
Epoch Step: 60 / 67 Loss (mean): 4.730420340783894 Loss (std): 3.2886778379058543 Loss ratio: 0.6952189448265556 Tokens per Sec: 2937.773351398869
Epoch Step: 65 / 67 Loss (mean): 4.05088459700346 Loss (std): 2.8224222050097563 Loss ratio: 0.696742189865782 Tokens per Sec: 2598.107649077826
Mean loss per sample: 6.147459689955206 Std loss per sample: 10.172212546384095 ratio: 1.6547017889365316
Epoch ended with duration 0:00:11.452459
Train perplexity: 2.297334507977393
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during log device[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt[0m
Epoch Step: 5 / 8 Loss (mean): 76.11434507369995 Loss (std): 34.527958684800915 Loss ratio: 0.45363273705328744 Tokens per Sec: 4439.5712305707475
Mean loss per sample: 80.01652337928287 Std loss per sample: 41.78779314988274 ratio: 0.5222395498465513
Epoch ended with duration 0:00:01.018409
b'BLEU = 2.27, 8.3/2.7/1.6/1.0 (BP=0.923, ratio=0.926, hyp_len=2882, ref_len=3113)\n'
Validation perplexity: 51209.080517016715
Validation accuracy: 0.0
Validation BLEU: 2.27
Epoch 227 / 1000
Epoch Step: 5 / 67 Loss (mean): 3.570155639667064 Loss (std): 2.1612597908406386 Loss ratio: 0.6053685074195218 Tokens per Sec: 2686.3808332177755
Epoch Step: 10 / 67 Loss (mean): 16.865823071449995 Loss (std): 15.445571731959387 Loss ratio: 0.9157911633797007 Tokens per Sec: 2823.5094844200994
Epoch Step: 15 / 67 Loss (mean): 3.2656294850166887 Loss (std): 2.2438823874718175 Loss ratio: 0.6871209357237753 Tokens per Sec: 2799.5575214742985
Epoch Step: 20 / 67 Loss (mean): 20.701119280420244 Loss (std): 24.066595754775108 Loss ratio: 1.1625746139020625 Tokens per Sec: 2732.236240839201
Epoch Step: 25 / 67 Loss (mean): 3.497136455029249 Loss (std): 2.695529455574944 Loss ratio: 0.7707818926248903 Tokens per Sec: 2485.561862247657
Epoch Step: 30 / 67 Loss (mean): 2.0071969296605814 Loss (std): 1.4136346498516679 Loss ratio: 0.7042829873652281 Tokens per Sec: 2322.772147630205
Epoch Step: 35 / 67 Loss (mean): 3.306110418634489 Loss (std): 2.4879963634389064 Loss ratio: 0.7525448482953314 Tokens per Sec: 2722.3850219159826
Epoch Step: 40 / 67 Loss (mean): 3.9567869007587433 Loss (std): 2.949196000136915 Loss ratio: 0.745351234248017 Tokens per Sec: 2836.915144390422
Epoch Step: 45 / 67 Loss (mean): 3.9650955527904443 Loss (std): 2.6510236721764713 Loss ratio: 0.6685901100947763 Tokens per Sec: 2522.602696622997
Epoch Step: 50 / 67 Loss (mean): 3.328549436875619 Loss (std): 2.726586914507384 Loss ratio: 0.819151695420431 Tokens per Sec: 3083.5153228230683
Epoch Step: 55 / 67 Loss (mean): 3.8667933389078826 Loss (std): 2.6742041033205535 Loss ratio: 0.6915818532147989 Tokens per Sec: 2662.748578748845
Epoch Step: 60 / 67 Loss (mean): 3.6849197522969916 Loss (std): 2.2694012539094732 Loss ratio: 0.6158617843698886 Tokens per Sec: 2871.012440880536
Epoch Step: 65 / 67 Loss (mean): 18.842342500109226 Loss (std): 18.207359674522177 Loss ratio: 0.9663002184795565 Tokens per Sec: 3208.085155204283
Mean loss per sample: 6.018037567803251 Std loss per sample: 9.57342625701709 ratio: 1.5907887162810872
Epoch ended with duration 0:00:11.452060
Train perplexity: 2.2574565634347903
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during headless ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 75.5112102329731 Loss (std): 33.77058518661701 Loss ratio: 0.4472261149361182 Tokens per Sec: 4433.359676227045
Mean loss per sample: 79.59706192426994 Std loss per sample: 41.10331414291881 ratio: 0.516392353552261
Epoch ended with duration 0:00:01.019487
b'BLEU = 2.44, 8.0/2.7/1.6/1.2 (BP=0.958, ratio=0.959, hyp_len=2985, ref_len=3113)\n'
Validation perplexity: 48379.31419745702
Validation accuracy: 0.0
Validation BLEU: 2.44
Epoch 228 / 1000
Epoch Step: 5 / 67 Loss (mean): 3.2249529927503318 Loss (std): 2.0781094089261885 Loss ratio: 0.644384402996807 Tokens per Sec: 2343.533055324817
Epoch Step: 10 / 67 Loss (mean): 4.381884729489684 Loss (std): 2.747304776675899 Loss ratio: 0.6269687466187297 Tokens per Sec: 2732.620190153549
Epoch Step: 15 / 67 Loss (mean): 3.8125862313900143 Loss (std): 2.96298521760926 Loss ratio: 0.7771588726870574 Tokens per Sec: 2836.488754979166
Epoch Step: 20 / 67 Loss (mean): 3.8094062639866024 Loss (std): 2.7576663279148 Loss ratio: 0.7239097478221868 Tokens per Sec: 3524.4964911334905
Epoch Step: 25 / 67 Loss (mean): 4.362083287676796 Loss (std): 2.521444230384016 Loss ratio: 0.5780367003782986 Tokens per Sec: 2516.674806708609
Epoch Step: 30 / 67 Loss (mean): 3.5285897703142837 Loss (std): 2.6090949106538144 Loss ratio: 0.7394157667756963 Tokens per Sec: 2767.6193682236735
Epoch Step: 35 / 67 Loss (mean): 3.565134304400999 Loss (std): 2.4055999075741212 Loss ratio: 0.674757162613626 Tokens per Sec: 2887.9594971878005
Epoch Step: 40 / 67 Loss (mean): 3.418513084296137 Loss (std): 2.468127698958394 Loss ratio: 0.7219886652756734 Tokens per Sec: 2499.670309404994
Epoch Step: 45 / 67 Loss (mean): 3.685354025568813 Loss (std): 2.5818277720448974 Loss ratio: 0.7005643838101571 Tokens per Sec: 2988.6273435696353
Epoch Step: 50 / 67 Loss (mean): 3.676247634808533 Loss (std): 2.74755418935469 Loss ratio: 0.7473800631218329 Tokens per Sec: 2900.5996735617227
Epoch Step: 55 / 67 Loss (mean): 3.4149628449231386 Loss (std): 2.6483387770731106 Loss ratio: 0.7755102756125938 Tokens per Sec: 2629.6741815852347
Epoch Step: 60 / 67 Loss (mean): 14.20211775181815 Loss (std): 17.751291217347305 Loss ratio: 1.249904523223291 Tokens per Sec: 2777.390315603437
Epoch Step: 65 / 67 Loss (mean): 3.3358883312903345 Loss (std): 1.6666500279838947 Loss ratio: 0.49961205606041015 Tokens per Sec: 2591.1367864490894
Mean loss per sample: 5.8680587080837805 Std loss per sample: 9.27622634410636 ratio: 1.5807998531656682
Epoch ended with duration 0:00:11.492795
Train perplexity: 2.212109683745383
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during log command during log codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt[0m
Epoch Step: 5 / 8 Loss (mean): 76.01696309447289 Loss (std): 34.138285116338594 Loss ratio: 0.4490877263001415 Tokens per Sec: 4436.141608288495
Mean loss per sample: 80.26450950395865 Std loss per sample: 41.856314056222246 ratio: 0.5214797214223043
Epoch ended with duration 0:00:01.018806
b'BLEU = 2.19, 8.5/2.4/1.4/1.0 (BP=0.944, ratio=0.946, hyp_len=2944, ref_len=3113)\n'
Validation perplexity: 52959.286119042146
Validation accuracy: 0.0
Validation BLEU: 2.19
Epoch 229 / 1000
Epoch Step: 5 / 67 Loss (mean): 17.981705634389073 Loss (std): 18.84030369102623 Loss ratio: 1.047748421317449 Tokens per Sec: 2583.0365262115456
Epoch Step: 10 / 67 Loss (mean): 3.2102980078198016 Loss (std): 2.0330153433748475 Loss ratio: 0.6332793212414327 Tokens per Sec: 2897.9435804939303
Epoch Step: 15 / 67 Loss (mean): 4.099133025854826 Loss (std): 2.74386671847731 Loss ratio: 0.6693773295891291 Tokens per Sec: 2648.1297198774914
Epoch Step: 20 / 67 Loss (mean): 4.517524785362184 Loss (std): 2.6858235461849564 Loss ratio: 0.5945343243910117 Tokens per Sec: 3141.4331968052165
Epoch Step: 25 / 67 Loss (mean): 3.796260467963293 Loss (std): 2.648277700662005 Loss ratio: 0.6976016853982665 Tokens per Sec: 2434.158292896949
Epoch Step: 30 / 67 Loss (mean): 4.403869631234556 Loss (std): 2.9332992170407617 Loss ratio: 0.6660731271961965 Tokens per Sec: 2924.875942249089
Epoch Step: 35 / 67 Loss (mean): 3.5396826493088156 Loss (std): 2.443818629694218 Loss ratio: 0.690406138576128 Tokens per Sec: 2885.129253583601
Epoch Step: 40 / 67 Loss (mean): 3.700083765666932 Loss (std): 2.0142859941182314 Loss ratio: 0.5443892954015761 Tokens per Sec: 2774.6835821864415
Epoch Step: 45 / 67 Loss (mean): 3.8778632041066885 Loss (std): 2.8856076821730365 Loss ratio: 0.7441231240744013 Tokens per Sec: 2796.5583901643367
Epoch Step: 50 / 67 Loss (mean): 3.668160159722902 Loss (std): 2.697879814143358 Loss ratio: 0.7354858284996911 Tokens per Sec: 2446.33162504716
Epoch Step: 55 / 67 Loss (mean): 16.980912054190412 Loss (std): 19.340385033492105 Loss ratio: 1.1389485424441286 Tokens per Sec: 2959.7894904296218
Epoch Step: 60 / 67 Loss (mean): 3.9473568513058126 Loss (std): 2.5990983261629563 Loss ratio: 0.6584401725177588 Tokens per Sec: 2709.191853448228
Epoch Step: 65 / 67 Loss (mean): 3.9965381184592843 Loss (std): 2.2167595678488463 Loss ratio: 0.5546699423708825 Tokens per Sec: 2621.2419666096653
Mean loss per sample: 5.716034185764826 Std loss per sample: 9.077407644951597 ratio: 1.5880604191552796
Epoch ended with duration 0:00:11.493611
Train perplexity: 2.1670738335070996
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length arrays if not ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix colon and space in gerrit core[0m
Epoch Step: 5 / 8 Loss (mean): 76.87911948561668 Loss (std): 35.46770565381731 Loss ratio: 0.46134380688963234 Tokens per Sec: 4399.242286912984
Mean loss per sample: 80.63736944999852 Std loss per sample: 42.53154527865076 ratio: 0.5274421222907532
Epoch ended with duration 0:00:01.024155
b'BLEU = 2.36, 8.8/2.7/1.6/1.1 (BP=0.916, ratio=0.919, hyp_len=2861, ref_len=3113)\n'
Validation perplexity: 55704.03762878516
Validation accuracy: 0.0
Validation BLEU: 2.36
Epoch 230 / 1000
Epoch Step: 5 / 67 Loss (mean): 3.7372417598962784 Loss (std): 2.4137655471806267 Loss ratio: 0.6458681836113319 Tokens per Sec: 2545.246165524853
Epoch Step: 10 / 67 Loss (mean): 2.9733063046005554 Loss (std): 2.102182707855912 Loss ratio: 0.7070185485441692 Tokens per Sec: 3569.130710290527
Epoch Step: 15 / 67 Loss (mean): 3.5910891268868 Loss (std): 2.924289854841352 Loss ratio: 0.8143183729267359 Tokens per Sec: 2826.1688365076016
Epoch Step: 20 / 67 Loss (mean): 2.9767218788620085 Loss (std): 2.2147194694411354 Loss ratio: 0.7440128972639579 Tokens per Sec: 3311.8432917095183
Epoch Step: 25 / 67 Loss (mean): 3.6137301470153034 Loss (std): 2.977099259925473 Loss ratio: 0.8238299869691033 Tokens per Sec: 2603.087887327205
Epoch Step: 30 / 67 Loss (mean): 3.7624015021137893 Loss (std): 2.541646186109506 Loss ratio: 0.675538265834085 Tokens per Sec: 2511.7664754666944
Epoch Step: 35 / 67 Loss (mean): 5.7751779817044735 Loss (std): 3.2484011555355807 Loss ratio: 0.5624763714341587 Tokens per Sec: 2886.2534555115367
Epoch Step: 40 / 67 Loss (mean): 4.19428581232205 Loss (std): 2.790658526805718 Loss ratio: 0.6653477258529378 Tokens per Sec: 2686.6220548306146
Epoch Step: 45 / 67 Loss (mean): 3.6493626749143004 Loss (std): 2.4612923166932834 Loss ratio: 0.674444426587742 Tokens per Sec: 2610.67460562763
Epoch Step: 50 / 67 Loss (mean): 4.572378620970994 Loss (std): 2.1731861905592127 Loss ratio: 0.475285703723659 Tokens per Sec: 3503.1368731663474
Epoch Step: 55 / 67 Loss (mean): 2.482082628295757 Loss (std): 2.107442515750714 Loss ratio: 0.8490621914540059 Tokens per Sec: 2483.3182759171586
Epoch Step: 60 / 67 Loss (mean): 2.898025326896459 Loss (std): 1.9264434928026068 Loss ratio: 0.6647434978995389 Tokens per Sec: 2734.873332357039
Epoch Step: 65 / 67 Loss (mean): 3.21783586172387 Loss (std): 2.3535076730572446 Loss ratio: 0.7313945689561727 Tokens per Sec: 2336.3600591328914
Mean loss per sample: 4.5319815908191465 Std loss per sample: 6.8949911566367446 ratio: 1.5214075826354998
Epoch ended with duration 0:00:11.414380
Train perplexity: 1.846285560510481
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print during keys ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 75.96980276703835 Loss (std): 35.14323258991099 Loss ratio: 0.4625947588369793 Tokens per Sec: 4281.169558608033
Mean loss per sample: 81.36536706080201 Std loss per sample: 42.17921258605343 ratio: 0.5183927033050083
Epoch ended with duration 0:00:01.041921
b'BLEU = 2.40, 8.0/2.7/1.7/1.3 (BP=0.913, ratio=0.917, hyp_len=2854, ref_len=3113)\n'
Validation perplexity: 61479.8420221206
Validation accuracy: 0.0
Validation BLEU: 2.4
Model saved checkpoint_commit_msg_generator!
Epoch 231 / 1000
Epoch Step: 5 / 67 Loss (mean): 14.780815560370684 Loss (std): 17.823780993328423 Loss ratio: 1.2058726340592687 Tokens per Sec: 2503.2378818537345
Epoch Step: 10 / 67 Loss (mean): 4.116951871430501 Loss (std): 2.53966916260529 Loss ratio: 0.6168809453978001 Tokens per Sec: 3057.0156320231736
Epoch Step: 15 / 67 Loss (mean): 3.1166664456250146 Loss (std): 2.425944510708488 Loss ratio: 0.778377973078858 Tokens per Sec: 2648.883633289071
Epoch Step: 20 / 67 Loss (mean): 12.805375252268277 Loss (std): 16.458610843891613 Loss ratio: 1.2852892257863526 Tokens per Sec: 2703.7581460714737
Epoch Step: 25 / 67 Loss (mean): 5.497091817203909 Loss (std): 3.250633883362255 Loss ratio: 0.5913370180918112 Tokens per Sec: 3658.7968623135407
Epoch Step: 30 / 67 Loss (mean): 25.647699190303683 Loss (std): 22.33861246483989 Loss ratio: 0.8709791977474993 Tokens per Sec: 2948.155739217419
Epoch Step: 35 / 67 Loss (mean): 3.870455020922236 Loss (std): 2.761775737979454 Loss ratio: 0.713553244528182 Tokens per Sec: 2432.828533636406
Epoch Step: 40 / 67 Loss (mean): 3.4596517717000097 Loss (std): 2.2710363645842695 Loss ratio: 0.6564349577496129 Tokens per Sec: 2306.5301973956593
Epoch Step: 45 / 67 Loss (mean): 4.6467752838507295 Loss (std): 2.9378017102559597 Loss ratio: 0.6322237532049187 Tokens per Sec: 3116.982904721951
Epoch Step: 50 / 67 Loss (mean): 4.172413490014151 Loss (std): 2.4538764681436636 Loss ratio: 0.5881191962437408 Tokens per Sec: 2653.352703715772
Epoch Step: 55 / 67 Loss (mean): 3.7709430186077952 Loss (std): 2.3441788632686555 Loss ratio: 0.6216426108008679 Tokens per Sec: 3096.216312157291
Epoch Step: 60 / 67 Loss (mean): 3.6072091255337 Loss (std): 2.3053948054257107 Loss ratio: 0.639107610675225 Tokens per Sec: 2802.135375902482
Epoch Step: 65 / 67 Loss (mean): 3.5880805044434965 Loss (std): 2.721475889456801 Loss ratio: 0.7584768195937944 Tokens per Sec: 2538.0495173940935
Mean loss per sample: 5.494445607931765 Std loss per sample: 8.868095980689374 ratio: 1.6140110601672746
Epoch ended with duration 0:00:11.453487
Train perplexity: 2.1030673510933324
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings not used command during openjdk[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api and gb2312han[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix colon and space and library bytes[0m
Epoch Step: 5 / 8 Loss (mean): 88.56607455015182 Loss (std): 34.14066941345998 Loss ratio: 0.38548247268345776 Tokens per Sec: 4317.097829154803
Mean loss per sample: 81.78263300315278 Std loss per sample: 41.96873058767966 ratio: 0.5131741183493289
Epoch ended with duration 0:00:01.033083
b'BLEU = 2.59, 8.8/2.8/1.9/1.3 (BP=0.922, ratio=0.925, hyp_len=2878, ref_len=3113)\n'
Validation perplexity: 65056.51529544251
Validation accuracy: 0.0
Validation BLEU: 2.59
Model saved best_on_validation_commit_msg_generator!
Epoch 232 / 1000
Epoch Step: 5 / 67 Loss (mean): 3.400807580212131 Loss (std): 2.147153021978956 Loss ratio: 0.6313656304674031 Tokens per Sec: 2462.238976133347
Epoch Step: 10 / 67 Loss (mean): 18.335664614336565 Loss (std): 21.98189553282776 Loss ratio: 1.1988600356291543 Tokens per Sec: 2722.5044217047403
Epoch Step: 15 / 67 Loss (mean): 3.461896425113082 Loss (std): 2.100302889478346 Loss ratio: 0.6066914290798693 Tokens per Sec: 2848.652414688667
Epoch Step: 20 / 67 Loss (mean): 4.286986144259572 Loss (std): 2.9974529367982043 Loss ratio: 0.699198186309023 Tokens per Sec: 3344.121684496131
Epoch Step: 25 / 67 Loss (mean): 3.180920504499227 Loss (std): 2.2041475005403135 Loss ratio: 0.6929275652826518 Tokens per Sec: 2391.1507302542977
Epoch Step: 30 / 67 Loss (mean): 3.2306916936067864 Loss (std): 1.98959648071703 Loss ratio: 0.6158422620933595 Tokens per Sec: 3086.718249901803
Epoch Step: 35 / 67 Loss (mean): 4.661968141794205 Loss (std): 2.335757593315172 Loss ratio: 0.5010239285797077 Tokens per Sec: 3296.2787146790834
Epoch Step: 40 / 67 Loss (mean): 15.213492712937295 Loss (std): 16.638139526407027 Loss ratio: 1.0936436386010318 Tokens per Sec: 2737.2483872899115
Epoch Step: 45 / 67 Loss (mean): 3.1207900210138177 Loss (std): 2.1613694851774183 Loss ratio: 0.6925712626046135 Tokens per Sec: 2522.7944140850836
Epoch Step: 50 / 67 Loss (mean): 3.913559678941965 Loss (std): 2.404542124092651 Loss ratio: 0.6144130462685883 Tokens per Sec: 2526.384253998249
Epoch Step: 55 / 67 Loss (mean): 3.311217470676638 Loss (std): 2.5810399358376706 Loss ratio: 0.7794836668671726 Tokens per Sec: 2880.66869943053
Epoch Step: 60 / 67 Loss (mean): 3.3236444890499115 Loss (std): 2.322882696600315 Loss ratio: 0.6988962580845487 Tokens per Sec: 2510.4226799608764
Epoch Step: 65 / 67 Loss (mean): 3.9525624027010053 Loss (std): 2.6372179228191994 Loss ratio: 0.6672172768270633 Tokens per Sec: 3071.4250160643674
Mean loss per sample: 5.054670098467577 Std loss per sample: 8.708547968702108 ratio: 1.7228716808525795
Epoch ended with duration 0:00:11.432371
Train perplexity: 1.9815818135775194
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during log command during log codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options percentages[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: update colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 76.64910772442818 Loss (std): 34.54045214715632 Loss ratio: 0.4506308445407804 Tokens per Sec: 4396.4020877538715
Mean loss per sample: 80.43537668077673 Std loss per sample: 41.480654379283976 ratio: 0.5157016239745844
Epoch ended with duration 0:00:01.021302
b'BLEU = 2.37, 8.4/2.4/1.5/1.0 (BP=0.999, ratio=0.999, hyp_len=3110, ref_len=3113)\n'
Validation perplexity: 54199.89628546806
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.37
Epoch 233 / 1000
Epoch Step: 5 / 67 Loss (mean): 3.3347387684043497 Loss (std): 2.6635960633706484 Loss ratio: 0.7987420449863788 Tokens per Sec: 2861.075154047709
Epoch Step: 10 / 67 Loss (mean): 4.355874598026276 Loss (std): 2.6817096860969483 Loss ratio: 0.6156535560762192 Tokens per Sec: 3508.4317006313086
Epoch Step: 15 / 67 Loss (mean): 18.261150270933285 Loss (std): 21.029644141055932 Loss ratio: 1.1516056671703385 Tokens per Sec: 2575.7511450562206
Epoch Step: 20 / 67 Loss (mean): 17.269353255163878 Loss (std): 22.274045617894924 Loss ratio: 1.2898019566097267 Tokens per Sec: 2797.60024938481
Epoch Step: 25 / 67 Loss (mean): 3.447360553953331 Loss (std): 2.628891381647195 Loss ratio: 0.7625809196640195 Tokens per Sec: 2538.377283641708
Epoch Step: 30 / 67 Loss (mean): 4.13432659721002 Loss (std): 2.266193282817839 Loss ratio: 0.5481408470117336 Tokens per Sec: 3014.6391456313777
Epoch Step: 35 / 67 Loss (mean): 15.612905236892402 Loss (std): 17.603601253928037 Loss ratio: 1.127503240865879 Tokens per Sec: 2597.9626219897036
Epoch Step: 40 / 67 Loss (mean): 3.804186471621506 Loss (std): 2.428649898907717 Loss ratio: 0.638415050635655 Tokens per Sec: 2518.046885014003
Epoch Step: 45 / 67 Loss (mean): 3.374923675553873 Loss (std): 2.5727071128373 Loss ratio: 0.7623008281557899 Tokens per Sec: 3000.2967374733576
Epoch Step: 50 / 67 Loss (mean): 4.354692682623863 Loss (std): 2.7836251319296483 Loss ratio: 0.6392242426283941 Tokens per Sec: 2569.7784550009296
Epoch Step: 55 / 67 Loss (mean): 4.533883555326611 Loss (std): 2.5174934611844586 Loss ratio: 0.5552620464252537 Tokens per Sec: 2361.888504626187
Epoch Step: 60 / 67 Loss (mean): 3.7268108003772795 Loss (std): 2.58887857189528 Loss ratio: 0.6946632685601313 Tokens per Sec: 3015.315600287563
Epoch Step: 65 / 67 Loss (mean): 3.9474941035732627 Loss (std): 2.392611198047305 Loss ratio: 0.6061088719249811 Tokens per Sec: 2740.5211425189264
Mean loss per sample: 5.483973756580549 Std loss per sample: 9.372012690084997 ratio: 1.708982045882141
Epoch ended with duration 0:00:11.462032
Train perplexity: 2.100089754189999
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during run command during call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test java 7 for sslcontext.tls[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix colon and space and library ' in sdk '[0m
Epoch Step: 5 / 8 Loss (mean): 76.52215451002121 Loss (std): 35.05207574013452 Loss ratio: 0.4580644123858818 Tokens per Sec: 4423.36767790128
Mean loss per sample: 80.17402538999183 Std loss per sample: 41.68321291541599 ratio: 0.5199091939397537
Epoch ended with duration 0:00:01.019619
b'BLEU = 2.51, 8.4/2.7/1.7/1.3 (BP=0.951, ratio=0.952, hyp_len=2963, ref_len=3113)\n'
Validation perplexity: 52313.85310630367
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.51
Epoch 234 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.7181842897552997 Loss (std): 1.9452039751052042 Loss ratio: 0.7156262297727863 Tokens per Sec: 2943.9716976995364
Epoch Step: 10 / 67 Loss (mean): 5.206182722002268 Loss (std): 2.869292774021662 Loss ratio: 0.551131784502206 Tokens per Sec: 3268.6992047939148
Epoch Step: 15 / 67 Loss (mean): 4.323184255510569 Loss (std): 3.0581969648289054 Loss ratio: 0.7073945462608399 Tokens per Sec: 2965.6006097970276
Epoch Step: 20 / 67 Loss (mean): 3.5420930702239275 Loss (std): 2.351117357416306 Loss ratio: 0.6637649860701347 Tokens per Sec: 2897.9799783435737
Epoch Step: 25 / 67 Loss (mean): 3.5620762545149773 Loss (std): 2.0816914961364947 Loss ratio: 0.5844039676292511 Tokens per Sec: 2756.1713691431514
Epoch Step: 30 / 67 Loss (mean): 14.262510305736214 Loss (std): 18.944221865711572 Loss ratio: 1.3282529834942471 Tokens per Sec: 2692.841315898264
Epoch Step: 35 / 67 Loss (mean): 3.82443863467779 Loss (std): 2.178590115164174 Loss ratio: 0.5696496462016629 Tokens per Sec: 2316.845675308681
Epoch Step: 40 / 67 Loss (mean): 3.6674037030898035 Loss (std): 2.2622965458462394 Loss ratio: 0.6168659708611421 Tokens per Sec: 3276.7876029524705
Epoch Step: 45 / 67 Loss (mean): 3.2429262414807454 Loss (std): 2.2763085723623013 Loss ratio: 0.7019304180421079 Tokens per Sec: 2655.6065407485326
Epoch Step: 50 / 67 Loss (mean): 3.5050755669362843 Loss (std): 2.187753345346444 Loss ratio: 0.6241672407818343 Tokens per Sec: 2395.056240556278
Epoch Step: 55 / 67 Loss (mean): 2.880389776080847 Loss (std): 2.2891305682759526 Loss ratio: 0.7947294450512247 Tokens per Sec: 2750.1099343904
Epoch Step: 60 / 67 Loss (mean): 17.652127831126563 Loss (std): 17.224369623337413 Loss ratio: 0.9757673289089336 Tokens per Sec: 2504.103717527739
Epoch Step: 65 / 67 Loss (mean): 4.219035067362711 Loss (std): 3.2535234890873754 Loss ratio: 0.7711534597699208 Tokens per Sec: 2674.5353560817302
Mean loss per sample: 5.324955631744342 Std loss per sample: 8.963401637579542 ratio: 1.6832819383780147
Epoch ended with duration 0:00:11.466423
Train perplexity: 2.0553886969710167
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings in run command during call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api parity[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt[0m
Epoch Step: 5 / 8 Loss (mean): 76.18731063604355 Loss (std): 35.191446668162975 Loss ratio: 0.4619069287834162 Tokens per Sec: 4399.195855261335
Mean loss per sample: 81.93054879151407 Std loss per sample: 41.76088729150837 ratio: 0.5097108210244741
Epoch ended with duration 0:00:01.053971
b'BLEU = 2.34, 8.1/2.7/1.6/1.2 (BP=0.922, ratio=0.925, hyp_len=2880, ref_len=3113)\n'
Validation perplexity: 66373.7466789568
Validation accuracy: 0.0
Validation BLEU: 2.34
Epoch 235 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.960148380836472 Loss (std): 2.171440166643255 Loss ratio: 0.7335578786187922 Tokens per Sec: 2652.5597167681635
Epoch Step: 10 / 67 Loss (mean): 3.311553746694699 Loss (std): 2.495666909406644 Loss ratio: 0.7536241596252511 Tokens per Sec: 3532.9897814296046
Epoch Step: 15 / 67 Loss (mean): 3.8312644939869642 Loss (std): 2.522015035126547 Loss ratio: 0.6582722333800659 Tokens per Sec: 2342.2090648343224
Epoch Step: 20 / 67 Loss (mean): 12.719098322093487 Loss (std): 15.537006701661431 Loss ratio: 1.2215493825276236 Tokens per Sec: 2944.078047383525
Epoch Step: 25 / 67 Loss (mean): 3.06631955166813 Loss (std): 2.2206537780928355 Loss ratio: 0.7242082048770038 Tokens per Sec: 2334.8571259241144
Epoch Step: 30 / 67 Loss (mean): 3.71349690889474 Loss (std): 2.717091301499564 Loss ratio: 0.7316799685470212 Tokens per Sec: 2569.424575743494
Epoch Step: 35 / 67 Loss (mean): 3.334345485898666 Loss (std): 2.1835711457051055 Loss ratio: 0.6548724944489649 Tokens per Sec: 2730.69552453488
Epoch Step: 40 / 67 Loss (mean): 3.646294657490216 Loss (std): 2.3495161824399484 Loss ratio: 0.644357190830306 Tokens per Sec: 2967.924085739308
Epoch Step: 45 / 67 Loss (mean): 3.965917599387467 Loss (std): 3.035119179850661 Loss ratio: 0.7653006155043244 Tokens per Sec: 3066.112503053591
Epoch Step: 50 / 67 Loss (mean): 2.6708301313919947 Loss (std): 1.8341089186828474 Loss ratio: 0.686718671144742 Tokens per Sec: 2415.934625680375
Epoch Step: 55 / 67 Loss (mean): 3.0401492598466575 Loss (std): 2.3134772994096466 Loss ratio: 0.7609749067143948 Tokens per Sec: 2738.6458564880068
Epoch Step: 60 / 67 Loss (mean): 2.950870333239436 Loss (std): 2.1931401875022507 Loss ratio: 0.7432180813904633 Tokens per Sec: 3268.393036214518
Epoch Step: 65 / 67 Loss (mean): 10.200351396517362 Loss (std): 16.180297808490568 Loss ratio: 1.5862490594211194 Tokens per Sec: 2743.8605277073966
Mean loss per sample: 5.1751823350970545 Std loss per sample: 8.80958643356559 ratio: 1.7022755650213002
Epoch ended with duration 0:00:11.460594
Train perplexity: 2.0141568935399783
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings from inactive ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api parity[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt[0m
Epoch Step: 5 / 8 Loss (mean): 76.38843724131584 Loss (std): 35.595359168528375 Loss ratio: 0.46597836601998305 Tokens per Sec: 4445.401131590502
Mean loss per sample: 80.31134354139938 Std loss per sample: 42.43449215774314 ratio: 0.5283748258534456
Epoch ended with duration 0:00:01.015978
b'BLEU = 2.31, 8.2/2.5/1.6/1.2 (BP=0.935, ratio=0.937, hyp_len=2916, ref_len=3113)\n'
Validation perplexity: 53296.47974137451
Validation accuracy: 0.0
Validation BLEU: 2.31
Model saved checkpoint_commit_msg_generator!
Epoch 236 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.9790625406562217 Loss (std): 1.5828475273460263 Loss ratio: 0.7997966182620901 Tokens per Sec: 2490.3822475933152
Epoch Step: 10 / 67 Loss (mean): 3.3906579597387463 Loss (std): 2.0742931596245744 Loss ratio: 0.6117671508760503 Tokens per Sec: 2758.9672928492464
Epoch Step: 15 / 67 Loss (mean): 3.6679742373526096 Loss (std): 2.452946767365483 Loss ratio: 0.6687470000159863 Tokens per Sec: 2772.6657625103394
Epoch Step: 20 / 67 Loss (mean): 4.178732787724584 Loss (std): 2.32069702986004 Loss ratio: 0.555359040108356 Tokens per Sec: 2793.2512480536607
Epoch Step: 25 / 67 Loss (mean): 4.293798779137433 Loss (std): 2.3229460306679157 Loss ratio: 0.5410002075445568 Tokens per Sec: 2810.285173667402
Epoch Step: 30 / 67 Loss (mean): 3.807355949858902 Loss (std): 2.064905801580488 Loss ratio: 0.542346402273476 Tokens per Sec: 2723.2052529858806
Epoch Step: 35 / 67 Loss (mean): 3.3335181844886392 Loss (std): 2.027658341042321 Loss ratio: 0.6082637708344654 Tokens per Sec: 2634.8348334117927
Epoch Step: 40 / 67 Loss (mean): 3.351929451804608 Loss (std): 2.5711691053434316 Loss ratio: 0.7670713666002631 Tokens per Sec: 2837.2058740113926
Epoch Step: 45 / 67 Loss (mean): 3.479145735502243 Loss (std): 2.844813869108705 Loss ratio: 0.8176759714545366 Tokens per Sec: 2716.385982887493
Epoch Step: 50 / 67 Loss (mean): 3.6809884116519243 Loss (std): 2.7228890027504495 Loss ratio: 0.739716809249202 Tokens per Sec: 2576.3963247037336
Epoch Step: 55 / 67 Loss (mean): 3.6871569715440273 Loss (std): 2.294223840581375 Loss ratio: 0.6222202792794714 Tokens per Sec: 2725.672768405896
Epoch Step: 60 / 67 Loss (mean): 3.56782155809924 Loss (std): 2.609923928045458 Loss ratio: 0.7315175060032703 Tokens per Sec: 2671.245346766121
Epoch Step: 65 / 67 Loss (mean): 4.05774053465575 Loss (std): 2.289447787357625 Loss ratio: 0.5642173933508681 Tokens per Sec: 3568.926350945964
Mean loss per sample: 4.8774608066176715 Std loss per sample: 8.394107766965396 ratio: 1.7209995322927838
Epoch ended with duration 0:00:11.445277
Train perplexity: 1.934635728783444
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length arrays during openjdk ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: update compatibility key for lambda 2.0[0m
Epoch Step: 5 / 8 Loss (mean): 77.90677198767662 Loss (std): 36.379403131701025 Loss ratio: 0.4669607301590619 Tokens per Sec: 4432.951036158759
Mean loss per sample: 82.02455743854163 Std loss per sample: 42.66021635641974 ratio: 0.5200907836459059
Epoch ended with duration 0:00:01.031086
b'BLEU = 2.49, 8.6/2.7/1.8/1.4 (BP=0.902, ratio=0.907, hyp_len=2822, ref_len=3113)\n'
Validation perplexity: 67224.74792882126
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.49
Epoch 237 / 1000
Epoch Step: 5 / 67 Loss (mean): 3.299602146493271 Loss (std): 2.231383748272508 Loss ratio: 0.6762584242600167 Tokens per Sec: 3064.549527056837
Epoch Step: 10 / 67 Loss (mean): 2.8499051715480164 Loss (std): 2.028494201740375 Loss ratio: 0.7117760345122409 Tokens per Sec: 2197.2575312120425
Epoch Step: 15 / 67 Loss (mean): 15.3550495961681 Loss (std): 20.421356749805007 Loss ratio: 1.3299440436129375 Tokens per Sec: 3182.822466975603
Epoch Step: 20 / 67 Loss (mean): 3.207750538131222 Loss (std): 2.3927004580074414 Loss ratio: 0.7459122614320831 Tokens per Sec: 2559.584760575454
Epoch Step: 25 / 67 Loss (mean): 3.989035554230213 Loss (std): 2.568726230862305 Loss ratio: 0.6439466873485932 Tokens per Sec: 3370.714682382313
Epoch Step: 30 / 67 Loss (mean): 2.995729141868651 Loss (std): 1.8719345643518748 Loss ratio: 0.6248677619713694 Tokens per Sec: 2965.9243299492873
Epoch Step: 35 / 67 Loss (mean): 13.120664409419987 Loss (std): 17.862006989598605 Loss ratio: 1.3613645187643522 Tokens per Sec: 2538.090023618522
Epoch Step: 40 / 67 Loss (mean): 2.8333668555133045 Loss (std): 2.014842004730871 Loss ratio: 0.7111122941282003 Tokens per Sec: 2489.7949519555023
Epoch Step: 45 / 67 Loss (mean): 3.5201954878866673 Loss (std): 2.426942793330443 Loss ratio: 0.6894340958284242 Tokens per Sec: 3014.9478967876685
Epoch Step: 50 / 67 Loss (mean): 3.20626070414437 Loss (std): 2.479099030005917 Loss ratio: 0.7732056930995869 Tokens per Sec: 2853.5068503545444
Epoch Step: 55 / 67 Loss (mean): 3.997045991476625 Loss (std): 2.5206915757894817 Loss ratio: 0.6306386219134459 Tokens per Sec: 2941.2126844099953
Epoch Step: 60 / 67 Loss (mean): 2.9078928505041404 Loss (std): 2.17546221466952 Loss ratio: 0.7481232378601436 Tokens per Sec: 2762.196202824499
Epoch Step: 65 / 67 Loss (mean): 13.28713340847753 Loss (std): 17.667029561656364 Loss ratio: 1.329634392801712 Tokens per Sec: 2275.767578228522
Mean loss per sample: 4.600376774915623 Std loss per sample: 7.306576922149643 ratio: 1.5882561971858609
Epoch ended with duration 0:00:11.455393
Train perplexity: 1.8634501046470189
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during log ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: update compatibility key for lambda dir[0m
Epoch Step: 5 / 8 Loss (mean): 76.71531277894974 Loss (std): 35.35876774621878 Loss ratio: 0.4609088650671712 Tokens per Sec: 4418.787677734748
Mean loss per sample: 81.48055831428434 Std loss per sample: 42.24554601924794 ratio: 0.5184739389769484
Epoch ended with duration 0:00:01.035764
b'BLEU = 2.40, 8.3/2.8/1.7/1.2 (BP=0.925, ratio=0.928, hyp_len=2888, ref_len=3113)\n'
Validation perplexity: 62447.1018021507
Validation accuracy: 0.0
Validation BLEU: 2.4
Epoch 238 / 1000
Epoch Step: 5 / 67 Loss (mean): 16.23337858961895 Loss (std): 21.674845432942007 Loss ratio: 1.3352023618054967 Tokens per Sec: 2869.501013603964
Epoch Step: 10 / 67 Loss (mean): 3.133630537195131 Loss (std): 2.0441914397200813 Loss ratio: 0.652339647401384 Tokens per Sec: 2528.625198541726
Epoch Step: 15 / 67 Loss (mean): 2.7192433445598 Loss (std): 2.003898800825511 Loss ratio: 0.7369325017691305 Tokens per Sec: 2433.082182801215
Epoch Step: 20 / 67 Loss (mean): 2.6756158326752484 Loss (std): 1.9531435366595824 Loss ratio: 0.729979062318041 Tokens per Sec: 2321.551932235685
Epoch Step: 25 / 67 Loss (mean): 3.4411045322194695 Loss (std): 2.626991358767191 Loss ratio: 0.76341515759558 Tokens per Sec: 2830.5297660957276
Epoch Step: 30 / 67 Loss (mean): 3.984606944024563 Loss (std): 2.7873480957836834 Loss ratio: 0.6995289961946372 Tokens per Sec: 2667.477911228443
Epoch Step: 35 / 67 Loss (mean): 21.3899345099926 Loss (std): 26.41028928875816 Loss ratio: 1.234706411860225 Tokens per Sec: 3188.418330686654
Epoch Step: 40 / 67 Loss (mean): 3.563786269398406 Loss (std): 2.1714071178042444 Loss ratio: 0.6092977955635915 Tokens per Sec: 3087.6573423414275
Epoch Step: 45 / 67 Loss (mean): 3.823422346729785 Loss (std): 2.6294421358034845 Loss ratio: 0.687719508165891 Tokens per Sec: 2704.16225408817
Epoch Step: 50 / 67 Loss (mean): 2.8775735951494426 Loss (std): 1.8708517926031318 Loss ratio: 0.6501490685613454 Tokens per Sec: 2817.1118441474077
Epoch Step: 55 / 67 Loss (mean): 3.8005379557143897 Loss (std): 2.6140335576052998 Loss ratio: 0.6878061969292814 Tokens per Sec: 2841.925158306224
Epoch Step: 60 / 67 Loss (mean): 3.0432755809742957 Loss (std): 2.082498275285997 Loss ratio: 0.684295003812731 Tokens per Sec: 2424.889428673041
Epoch Step: 65 / 67 Loss (mean): 4.766467020846903 Loss (std): 3.4760691494199456 Loss ratio: 0.7292758208997991 Tokens per Sec: 3309.2139505035157
Mean loss per sample: 5.386224537336412 Std loss per sample: 9.665075843522715 ratio: 1.794406411490278
Epoch ended with duration 0:00:11.477376
Train perplexity: 2.072497998830721
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings not during command during call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix colon and space statements and quicksettings file[0m
Epoch Step: 5 / 8 Loss (mean): 77.65281963348389 Loss (std): 35.10876120008009 Loss ratio: 0.4521247440310744 Tokens per Sec: 4413.050688642038
Mean loss per sample: 81.20833425345968 Std loss per sample: 42.18838231234992 ratio: 0.5195080369543793
Epoch ended with duration 0:00:01.021701
b'BLEU = 2.34, 7.8/2.6/1.6/1.1 (BP=0.957, ratio=0.958, hyp_len=2982, ref_len=3113)\n'
Validation perplexity: 60185.32735527312
Validation accuracy: 0.0
Validation BLEU: 2.34
Epoch 239 / 1000
Epoch Step: 5 / 67 Loss (mean): 3.3105021400842816 Loss (std): 2.626821860124414 Loss ratio: 0.7934813961659418 Tokens per Sec: 2856.026186413436
Epoch Step: 10 / 67 Loss (mean): 3.022568239015527 Loss (std): 2.1536796976633714 Loss ratio: 0.7125330273320284 Tokens per Sec: 3099.5238914403844
Epoch Step: 15 / 67 Loss (mean): 14.835108704864979 Loss (std): 18.72228219219677 Loss ratio: 1.262025278322163 Tokens per Sec: 2296.834042301726
Epoch Step: 20 / 67 Loss (mean): 2.9976869077654555 Loss (std): 2.242661311476977 Loss ratio: 0.7481306021877743 Tokens per Sec: 2556.78182842776
Epoch Step: 25 / 67 Loss (mean): 3.6626205504871905 Loss (std): 2.241976614664533 Loss ratio: 0.6121236376414455 Tokens per Sec: 3270.0320719780443
Epoch Step: 30 / 67 Loss (mean): 3.094470841344446 Loss (std): 2.5881081124762924 Loss ratio: 0.8363653255016112 Tokens per Sec: 2386.3787928167794
Epoch Step: 35 / 67 Loss (mean): 3.4099356685765088 Loss (std): 2.3244640849589286 Loss ratio: 0.6816738821144053 Tokens per Sec: 2889.195820341379
Epoch Step: 40 / 67 Loss (mean): 17.3613682591822 Loss (std): 17.26886524030682 Loss ratio: 0.9946719050310763 Tokens per Sec: 2255.210799923461
Epoch Step: 45 / 67 Loss (mean): 3.662730756215751 Loss (std): 2.6999323705186704 Loss ratio: 0.7371364564367211 Tokens per Sec: 2971.97607715323
Epoch Step: 50 / 67 Loss (mean): 4.106253192992881 Loss (std): 3.0074311250133032 Loss ratio: 0.7324027486043326 Tokens per Sec: 2828.5299345173385
Epoch Step: 55 / 67 Loss (mean): 2.9502971139736474 Loss (std): 2.3097974393784684 Loss ratio: 0.7829033314775157 Tokens per Sec: 2559.7743871141533
Epoch Step: 60 / 67 Loss (mean): 2.8071760972961783 Loss (std): 2.2164620649106967 Loss ratio: 0.7895700120293676 Tokens per Sec: 2850.5646544804817
Epoch Step: 65 / 67 Loss (mean): 4.077471899334341 Loss (std): 3.0194553743863684 Loss ratio: 0.7405214429262659 Tokens per Sec: 3043.633472570894
Mean loss per sample: 5.343920158028019 Std loss per sample: 9.228073229114722 ratio: 1.7268359100110526
Epoch ended with duration 0:00:11.522303
Train perplexity: 2.0606693804794722
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during command ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: update colon and space in new password prompt[0m
Epoch Step: 5 / 8 Loss (mean): 76.64320638775826 Loss (std): 34.97613438450991 Loss ratio: 0.4563500932823243 Tokens per Sec: 4404.187057695406
Mean loss per sample: 80.7294864669198 Std loss per sample: 42.30727654637028 ratio: 0.5240622528139872
Epoch ended with duration 0:00:01.021046
b'BLEU = 2.34, 7.9/2.6/1.7/1.2 (BP=0.925, ratio=0.927, hyp_len=2887, ref_len=3113)\n'
Validation perplexity: 56403.777821843374
Validation accuracy: 0.0
Validation BLEU: 2.34
Epoch 240 / 1000
Epoch Step: 5 / 67 Loss (mean): 17.942330481484532 Loss (std): 23.922979069310887 Loss ratio: 1.33332618602684 Tokens per Sec: 2796.278870479832
Epoch Step: 10 / 67 Loss (mean): 9.674912649265025 Loss (std): 15.211056482366633 Loss ratio: 1.5722164151551459 Tokens per Sec: 2691.260294113543
Epoch Step: 15 / 67 Loss (mean): 3.706903606886044 Loss (std): 2.371578540696846 Loss ratio: 0.6397734584442222 Tokens per Sec: 3257.6887839395977
Epoch Step: 20 / 67 Loss (mean): 3.2983954215887934 Loss (std): 2.2653989236520555 Loss ratio: 0.6868184781074074 Tokens per Sec: 2397.943894553618
Epoch Step: 25 / 67 Loss (mean): 3.521820812486112 Loss (std): 2.8506368731053247 Loss ratio: 0.8094213263204076 Tokens per Sec: 3010.790553415519
Epoch Step: 30 / 67 Loss (mean): 3.641432373377029 Loss (std): 2.4890846301981777 Loss ratio: 0.683545477432504 Tokens per Sec: 2267.4001848378502
Epoch Step: 35 / 67 Loss (mean): 3.101147023960948 Loss (std): 1.9337563516777911 Loss ratio: 0.6235616488791608 Tokens per Sec: 2743.586195764322
Epoch Step: 40 / 67 Loss (mean): 3.020265128929168 Loss (std): 2.447296363064824 Loss ratio: 0.8102918977621381 Tokens per Sec: 2462.6000489779076
Epoch Step: 45 / 67 Loss (mean): 3.33868564479053 Loss (std): 1.9426871239151815 Loss ratio: 0.5818718293968242 Tokens per Sec: 2607.489411029943
Epoch Step: 50 / 67 Loss (mean): 3.548929989337921 Loss (std): 2.164111122540241 Loss ratio: 0.6097925653765777 Tokens per Sec: 3047.514878014726
Epoch Step: 55 / 67 Loss (mean): 4.3580954521894455 Loss (std): 2.741068595730069 Loss ratio: 0.6289602019508304 Tokens per Sec: 3171.0351463777556
Epoch Step: 60 / 67 Loss (mean): 3.9187868190929294 Loss (std): 2.3716851186290486 Loss ratio: 0.6052090170033837 Tokens per Sec: 3279.970453127588
Epoch Step: 65 / 67 Loss (mean): 2.9172608198132366 Loss (std): 1.982401354718274 Loss ratio: 0.6795420352045134 Tokens per Sec: 2586.444548408071
Mean loss per sample: 4.70832012053411 Std loss per sample: 7.930596001759141 ratio: 1.6843790988577676
Epoch ended with duration 0:00:11.467028
Train perplexity: 1.8908649471021914
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings length not used[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix colon and space and library ' in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 89.69327020645142 Loss (std): 36.367164853756236 Loss ratio: 0.40546146628446195 Tokens per Sec: 4288.251775051666
Mean loss per sample: 82.78536451498016 Std loss per sample: 42.619785042372904 ratio: 0.51482270196033
Epoch ended with duration 0:00:01.035635
b'BLEU = 2.35, 8.5/2.5/1.7/1.2 (BP=0.928, ratio=0.930, hyp_len=2896, ref_len=3113)\n'
Validation perplexity: 74525.73028287344
Validation accuracy: 0.0
Validation BLEU: 2.35
Model saved checkpoint_commit_msg_generator!
Epoch 241 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.8727997426176444 Loss (std): 2.10467249097722 Loss ratio: 0.7326206765319047 Tokens per Sec: 2528.842950956666
Epoch Step: 10 / 67 Loss (mean): 3.2173466510139406 Loss (std): 2.0683087025867275 Loss ratio: 0.6428616269667131 Tokens per Sec: 3391.6380513416934
Epoch Step: 15 / 67 Loss (mean): 3.668846587650478 Loss (std): 2.5883644329787394 Loss ratio: 0.7054981371233412 Tokens per Sec: 2779.2445642407906
Epoch Step: 20 / 67 Loss (mean): 3.319765407126397 Loss (std): 2.188399976576794 Loss ratio: 0.6592031990811912 Tokens per Sec: 2743.8712711527246
Epoch Step: 25 / 67 Loss (mean): 2.7537179889623076 Loss (std): 2.4380542235128226 Loss ratio: 0.8853681579904856 Tokens per Sec: 2269.8904758152585
Epoch Step: 30 / 67 Loss (mean): 3.2152802385389805 Loss (std): 2.302446491624101 Loss ratio: 0.7160951210493335 Tokens per Sec: 2741.1672709332574
Epoch Step: 35 / 67 Loss (mean): 2.5865261254366487 Loss (std): 2.129175677404475 Loss ratio: 0.8231796526103269 Tokens per Sec: 3115.9920022025985
Epoch Step: 40 / 67 Loss (mean): 13.10026362654753 Loss (std): 17.593836851656967 Loss ratio: 1.343013954009541 Tokens per Sec: 2661.093721505616
Epoch Step: 45 / 67 Loss (mean): 3.455215570749715 Loss (std): 2.0580704224066877 Loss ratio: 0.5956416843653336 Tokens per Sec: 2491.459509528132
Epoch Step: 50 / 67 Loss (mean): 4.123274453682825 Loss (std): 2.756175208208301 Loss ratio: 0.6684433062045 Tokens per Sec: 2824.612680230832
Epoch Step: 55 / 67 Loss (mean): 4.066352267516777 Loss (std): 2.265466162239509 Loss ratio: 0.5571249152063685 Tokens per Sec: 2452.195321396032
Epoch Step: 60 / 67 Loss (mean): 5.450609703548253 Loss (std): 2.94564620036631 Loss ratio: 0.5404250828028918 Tokens per Sec: 2808.0697599938208
Epoch Step: 65 / 67 Loss (mean): 23.007216763217002 Loss (std): 20.782827886358035 Loss ratio: 0.9033177763415856 Tokens per Sec: 3102.821992822429
Mean loss per sample: 4.664909656204116 Std loss per sample: 8.125755838885475 ratio: 1.741889219243205
Epoch ended with duration 0:00:11.470584
Train perplexity: 1.8797916475355072
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings length not used[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: update colon and ignore case in new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 77.22101429104805 Loss (std): 34.28688996184586 Loss ratio: 0.44400983691586415 Tokens per Sec: 4402.200454416034
Mean loss per sample: 82.42755005349878 Std loss per sample: 41.81520797448107 ratio: 0.5072965039885491
Epoch ended with duration 0:00:01.043623
b'BLEU = 2.43, 8.6/2.7/1.6/1.1 (BP=0.963, ratio=0.964, hyp_len=3000, ref_len=3113)\n'
Validation perplexity: 70998.17482988974
Validation accuracy: 0.0
Validation BLEU: 2.43
Epoch 242 / 1000
Epoch Step: 5 / 67 Loss (mean): 3.1361356071429327 Loss (std): 2.286986731888252 Loss ratio: 0.7292371945522252 Tokens per Sec: 2449.8990908322894
Epoch Step: 10 / 67 Loss (mean): 3.0703257613349706 Loss (std): 2.0498576556333465 Loss ratio: 0.6676352331884396 Tokens per Sec: 3085.3393653943017
Epoch Step: 15 / 67 Loss (mean): 2.911431908607483 Loss (std): 2.0521140428593543 Loss ratio: 0.7048469987542542 Tokens per Sec: 2413.5013851653152
Epoch Step: 20 / 67 Loss (mean): 2.5304686771560227 Loss (std): 2.0284657590681814 Loss ratio: 0.8016166243748809 Tokens per Sec: 2527.141719412612
Epoch Step: 25 / 67 Loss (mean): 2.4438093269709498 Loss (std): 1.8207764471195655 Loss ratio: 0.7450566732128728 Tokens per Sec: 2897.2353264820104
Epoch Step: 30 / 67 Loss (mean): 2.5894133887486532 Loss (std): 2.1066984388382917 Loss ratio: 0.8135813493481487 Tokens per Sec: 2347.663721348074
Epoch Step: 35 / 67 Loss (mean): 2.633651369600557 Loss (std): 1.8903236259709624 Loss ratio: 0.7177577289805316 Tokens per Sec: 2814.4097327067157
Epoch Step: 40 / 67 Loss (mean): 3.273297110805288 Loss (std): 2.1854680970603995 Loss ratio: 0.66766566647619 Tokens per Sec: 3032.651624354214
Epoch Step: 45 / 67 Loss (mean): 3.143883907236159 Loss (std): 2.4340033727550545 Loss ratio: 0.774202688322174 Tokens per Sec: 2686.736090113373
Epoch Step: 50 / 67 Loss (mean): 15.382259345147759 Loss (std): 18.441541874087523 Loss ratio: 1.1988838219597953 Tokens per Sec: 3290.6466610547595
Epoch Step: 55 / 67 Loss (mean): 1.257459020685582 Loss (std): 1.0596675472288744 Loss ratio: 0.8427054319838834 Tokens per Sec: 2918.3881741181685
Epoch Step: 60 / 67 Loss (mean): 3.0670135628897697 Loss (std): 1.9929538505176858 Loss ratio: 0.6498027509992181 Tokens per Sec: 2910.558815048535
Epoch Step: 65 / 67 Loss (mean): 19.881146165076643 Loss (std): 23.143164185673786 Loss ratio: 1.1640759538465255 Tokens per Sec: 2729.057381097456
Mean loss per sample: 4.210647523003437 Std loss per sample: 7.550242495738552 ratio: 1.7931309743906079
Epoch ended with duration 0:00:11.429087
Train perplexity: 1.767735604320495
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings length not used[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix colon and space after saving timestamps file ' prompt[0m
Epoch Step: 5 / 8 Loss (mean): 77.52447244524956 Loss (std): 35.23878683606751 Loss ratio: 0.4545504886983185 Tokens per Sec: 4297.5884753967575
Mean loss per sample: 82.65907270107112 Std loss per sample: 42.75077144460961 ratio: 0.5171939394870037
Epoch ended with duration 0:00:01.037566
b'BLEU = 2.39, 8.3/2.6/1.7/1.2 (BP=0.925, ratio=0.928, hyp_len=2889, ref_len=3113)\n'
Validation perplexity: 73261.09000314889
Validation accuracy: 0.0
Validation BLEU: 2.39
Epoch 243 / 1000
Epoch Step: 5 / 67 Loss (mean): 3.004471984342672 Loss (std): 2.4309110127700166 Loss ratio: 0.8090975803529947 Tokens per Sec: 3107.3923217564025
Epoch Step: 10 / 67 Loss (mean): 2.8355662598041818 Loss (std): 1.7449164109383324 Loss ratio: 0.6153678845998233 Tokens per Sec: 2605.318821385688
Epoch Step: 15 / 67 Loss (mean): 2.9627176276408136 Loss (std): 1.6907579744452659 Loss ratio: 0.570678068902436 Tokens per Sec: 2133.553829651555
Epoch Step: 20 / 67 Loss (mean): 3.4522227877750993 Loss (std): 2.1280314827247278 Loss ratio: 0.6164235663643854 Tokens per Sec: 3235.4183316610392
Epoch Step: 25 / 67 Loss (mean): 3.6881050255615264 Loss (std): 2.4221865513228473 Loss ratio: 0.656756392384477 Tokens per Sec: 2994.182539403445
Epoch Step: 30 / 67 Loss (mean): 2.826758921146393 Loss (std): 1.8427718449688435 Loss ratio: 0.6519027254795067 Tokens per Sec: 2958.895800353352
Epoch Step: 35 / 67 Loss (mean): 3.3580365066882223 Loss (std): 2.3482333924740284 Loss ratio: 0.6992876306725783 Tokens per Sec: 2755.3782122939742
Epoch Step: 40 / 67 Loss (mean): 2.8912472983356565 Loss (std): 1.9415111275422716 Loss ratio: 0.6715133391252628 Tokens per Sec: 2314.817673387785
Epoch Step: 45 / 67 Loss (mean): 2.655677017988637 Loss (std): 2.012550167664578 Loss ratio: 0.7578294175203759 Tokens per Sec: 2731.6051145125616
Epoch Step: 50 / 67 Loss (mean): 3.21947526326403 Loss (std): 2.7165247602755014 Loss ratio: 0.843778733532303 Tokens per Sec: 2227.6508229118435
Epoch Step: 55 / 67 Loss (mean): 2.4881479593459517 Loss (std): 1.8903052171912451 Loss ratio: 0.759723797811502 Tokens per Sec: 2964.156753225908
Epoch Step: 60 / 67 Loss (mean): 2.914101299131289 Loss (std): 2.0897040837134595 Loss ratio: 0.7171007007671328 Tokens per Sec: 3034.6559276975845
Epoch Step: 65 / 67 Loss (mean): 4.2312668496742845 Loss (std): 2.6775767806773962 Loss ratio: 0.6328073543467275 Tokens per Sec: 3129.255543411081
Mean loss per sample: 4.529200680219349 Std loss per sample: 8.037847763445827 ratio: 1.7746724711382307
Epoch ended with duration 0:00:11.455880
Train perplexity: 1.8455910144048853
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings length not used[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix colon and space and quicksettings file format in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 77.16347661614418 Loss (std): 35.16677578325994 Loss ratio: 0.4557437964880698 Tokens per Sec: 4290.7845852142
Mean loss per sample: 82.14490788979609 Std loss per sample: 41.903909156665044 ratio: 0.5101218107503689
Epoch ended with duration 0:00:01.041181
b'BLEU = 2.47, 8.7/2.7/1.7/1.2 (BP=0.927, ratio=0.930, hyp_len=2895, ref_len=3113)\n'
Validation perplexity: 68330.14933647586
Validation accuracy: 0.0
Validation BLEU: 2.47
Epoch 244 / 1000
Epoch Step: 5 / 67 Loss (mean): 3.268053386360407 Loss (std): 2.3137059111011666 Loss ratio: 0.7079767793138514 Tokens per Sec: 2938.687005174709
Epoch Step: 10 / 67 Loss (mean): 13.654162018676288 Loss (std): 18.812481054342623 Loss ratio: 1.3777836405200654 Tokens per Sec: 2627.7743206033224
Epoch Step: 15 / 67 Loss (mean): 2.765726792742498 Loss (std): 1.9277352042998437 Loss ratio: 0.6970085437789388 Tokens per Sec: 2581.0995779395635
Epoch Step: 20 / 67 Loss (mean): 3.5650688293389976 Loss (std): 2.0821214097741545 Loss ratio: 0.5840340003085445 Tokens per Sec: 2649.0184669989576
Epoch Step: 25 / 67 Loss (mean): 2.7911807633936405 Loss (std): 2.142571870385024 Loss ratio: 0.7676220395629234 Tokens per Sec: 2673.470802148173
Epoch Step: 30 / 67 Loss (mean): 2.7223968161270022 Loss (std): 2.2816836200215262 Loss ratio: 0.8381157392284739 Tokens per Sec: 2488.172018884587
Epoch Step: 35 / 67 Loss (mean): 3.3883039890788496 Loss (std): 2.3145166805257857 Loss ratio: 0.6830900320590817 Tokens per Sec: 3216.3412136945044
Epoch Step: 40 / 67 Loss (mean): 22.181353019550443 Loss (std): 23.47107387411778 Loss ratio: 1.0581443725921764 Tokens per Sec: 2460.448164511832
Epoch Step: 45 / 67 Loss (mean): 2.1015626154839993 Loss (std): 1.8995360602932287 Loss ratio: 0.903868410247561 Tokens per Sec: 3181.9912334259807
Epoch Step: 50 / 67 Loss (mean): 2.84559061890468 Loss (std): 1.8031194065773783 Loss ratio: 0.6336538343211969 Tokens per Sec: 3111.682203493855
Epoch Step: 55 / 67 Loss (mean): 2.351202657446265 Loss (std): 1.9262954735976008 Loss ratio: 0.8192809188510475 Tokens per Sec: 2750.331920185562
Epoch Step: 60 / 67 Loss (mean): 2.7050720390398055 Loss (std): 2.148599984174669 Loss ratio: 0.7942856800728078 Tokens per Sec: 2440.3648503522236
Epoch Step: 65 / 67 Loss (mean): 14.259631431195885 Loss (std): 19.03572592985123 Loss ratio: 1.3349381449093174 Tokens per Sec: 2538.690880376451
Mean loss per sample: 5.257647417651195 Std loss per sample: 10.122607115162014 ratio: 1.9253111346299052
Epoch ended with duration 0:00:11.535186
Train perplexity: 2.036755691998932
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings length not used[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: update colon and ignore case in new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 76.06126827001572 Loss (std): 35.28053693714277 Loss ratio: 0.4638436584030875 Tokens per Sec: 4295.936675461741
Mean loss per sample: 83.43587219910543 Std loss per sample: 41.38334745970973 ratio: 0.49598987065126443
Epoch ended with duration 0:00:01.067521
b'BLEU = 2.40, 8.2/2.8/1.7/1.3 (BP=0.885, ratio=0.891, hyp_len=2773, ref_len=3113)\n'
Validation perplexity: 81393.86336857786
Validation accuracy: 0.0
Validation BLEU: 2.4
Epoch 245 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.937765371403657 Loss (std): 1.8296912273783514 Loss ratio: 0.6228173444988664 Tokens per Sec: 2476.1845873552547
Epoch Step: 10 / 67 Loss (mean): 2.158098243875429 Loss (std): 1.7499096730348564 Loss ratio: 0.8108572804787777 Tokens per Sec: 2703.7306194040953
Epoch Step: 15 / 67 Loss (mean): 3.1405976221431047 Loss (std): 2.338719347546001 Loss ratio: 0.7446733484915804 Tokens per Sec: 2656.106631415438
Epoch Step: 20 / 67 Loss (mean): 1.4288698857472766 Loss (std): 1.1844257788781616 Loss ratio: 0.8289248662125211 Tokens per Sec: 2820.2726587511315
Epoch Step: 25 / 67 Loss (mean): 13.971629617037252 Loss (std): 21.144039716132617 Loss ratio: 1.5133552989659276 Tokens per Sec: 2352.3508802230713
Epoch Step: 30 / 67 Loss (mean): 3.034251483157277 Loss (std): 1.8862040389460932 Loss ratio: 0.6216373459537414 Tokens per Sec: 2538.5178262251184
Epoch Step: 35 / 67 Loss (mean): 2.9535086792893708 Loss (std): 2.9993489914589233 Loss ratio: 1.0155206289018193 Tokens per Sec: 2683.9489644701443
Epoch Step: 40 / 67 Loss (mean): 2.6582643252331764 Loss (std): 2.2309335487777613 Loss ratio: 0.8392444376584218 Tokens per Sec: 3448.485412438886
Epoch Step: 45 / 67 Loss (mean): 3.060428960889112 Loss (std): 2.171138368441364 Loss ratio: 0.7094228933876666 Tokens per Sec: 2848.5251536320425
Epoch Step: 50 / 67 Loss (mean): 3.7839915256481618 Loss (std): 2.0856475747671026 Loss ratio: 0.5511765976827474 Tokens per Sec: 3339.9278794872307
Epoch Step: 55 / 67 Loss (mean): 4.025991613976657 Loss (std): 2.6156200392044826 Loss ratio: 0.6496834295739912 Tokens per Sec: 2889.0112821927537
Epoch Step: 60 / 67 Loss (mean): 14.218127785949036 Loss (std): 19.512919938399914 Loss ratio: 1.372397282691707 Tokens per Sec: 2359.7041650447645
Epoch Step: 65 / 67 Loss (mean): 3.549827836919576 Loss (std): 2.35169812426623 Loss ratio: 0.6624823040170186 Tokens per Sec: 2759.237677692255
Mean loss per sample: 4.654221103535384 Std loss per sample: 8.470463104967367 ratio: 1.819952880737259
Epoch ended with duration 0:00:11.500513
Train perplexity: 1.877075136296741
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings length not used[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for developer[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: update colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 90.62760853767395 Loss (std): 36.66986429255872 Loss ratio: 0.4046213387316188 Tokens per Sec: 4315.263458270765
Mean loss per sample: 83.3593021367417 Std loss per sample: 42.56983212946182 ratio: 0.5106788449311959
Epoch ended with duration 0:00:01.033719
b'BLEU = 2.40, 7.8/2.7/1.7/1.2 (BP=0.940, ratio=0.942, hyp_len=2933, ref_len=3113)\n'
Validation perplexity: 80553.63747861038
Validation accuracy: 0.0
Validation BLEU: 2.4
Model saved checkpoint_commit_msg_generator!
Epoch 246 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.9227038628887385 Loss (std): 2.163882501981706 Loss ratio: 0.7403700831472438 Tokens per Sec: 3893.3073293284633
Epoch Step: 10 / 67 Loss (mean): 2.6254490747815 Loss (std): 1.574811906652817 Loss ratio: 0.5998257295407183 Tokens per Sec: 2319.9324045978447
Epoch Step: 15 / 67 Loss (mean): 4.034011336625554 Loss (std): 2.604585467531338 Loss ratio: 0.6456564571060603 Tokens per Sec: 2705.9721308462395
Epoch Step: 20 / 67 Loss (mean): 2.7313923782203346 Loss (std): 1.986549468128658 Loss ratio: 0.7273028525557407 Tokens per Sec: 2543.9557162213728
Epoch Step: 25 / 67 Loss (mean): 2.5161379326018505 Loss (std): 1.8570075562186594 Loss ratio: 0.7380388539742703 Tokens per Sec: 2440.756306992792
Epoch Step: 30 / 67 Loss (mean): 2.910208781948313 Loss (std): 2.613469145536121 Loss ratio: 0.898034931977103 Tokens per Sec: 3105.004644220185
Epoch Step: 35 / 67 Loss (mean): 2.982049597078003 Loss (std): 2.2896518290318757 Loss ratio: 0.7678114513170466 Tokens per Sec: 2988.5175372260774
Epoch Step: 40 / 67 Loss (mean): 2.713330375030637 Loss (std): 1.870985750913949 Loss ratio: 0.6895532398603775 Tokens per Sec: 2379.417668862713
Epoch Step: 45 / 67 Loss (mean): 13.747593330452219 Loss (std): 17.775329664985406 Loss ratio: 1.2929775588874433 Tokens per Sec: 2508.37888671076
Epoch Step: 50 / 67 Loss (mean): 2.496817155275494 Loss (std): 1.7734444118303316 Loss ratio: 0.7102820517246299 Tokens per Sec: 3017.323757701314
Epoch Step: 55 / 67 Loss (mean): 3.01777326525189 Loss (std): 2.0506140413263645 Loss ratio: 0.6795122963471553 Tokens per Sec: 2958.3368172434407
Epoch Step: 60 / 67 Loss (mean): 19.78420682437718 Loss (std): 19.89569264986766 Loss ratio: 1.0056350919943433 Tokens per Sec: 2868.8528459778286
Epoch Step: 65 / 67 Loss (mean): 2.95447915897239 Loss (std): 2.225727568720978 Loss ratio: 0.7533400809282126 Tokens per Sec: 2532.7699427876264
Mean loss per sample: 4.322648772482349 Std loss per sample: 7.257058674944319 ratio: 1.6788453230672356
Epoch ended with duration 0:00:11.474137
Train perplexity: 1.7947274016822754
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings length not used[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for developer options sslcontext.tls . ''[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: update colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 77.28619408607483 Loss (std): 34.95147354396177 Loss ratio: 0.4522343732573475 Tokens per Sec: 4404.712595951426
Mean loss per sample: 81.45343990599522 Std loss per sample: 41.742803878225416 ratio: 0.512474413927766
Epoch ended with duration 0:00:01.024611
b'BLEU = 2.40, 7.8/2.5/1.6/1.2 (BP=0.980, ratio=0.980, hyp_len=3052, ref_len=3113)\n'
Validation perplexity: 62218.028010240014
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.4
Epoch 247 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.670039811055176 Loss (std): 2.1282743482674715 Loss ratio: 0.7970946123932124 Tokens per Sec: 2923.432510074269
Epoch Step: 10 / 67 Loss (mean): 2.8828826965764165 Loss (std): 1.9799091586181459 Loss ratio: 0.6867810337789317 Tokens per Sec: 3397.1743860596434
Epoch Step: 15 / 67 Loss (mean): 2.1480391707737 Loss (std): 1.7185054263742656 Loss ratio: 0.800034491808303 Tokens per Sec: 2286.935872335416
Epoch Step: 20 / 67 Loss (mean): 13.875923682237044 Loss (std): 16.688041372982127 Loss ratio: 1.202661657352941 Tokens per Sec: 2584.0711203066626
Epoch Step: 25 / 67 Loss (mean): 3.635270517319441 Loss (std): 2.4025359070100616 Loss ratio: 0.6608960448923159 Tokens per Sec: 2841.0204265594393
Epoch Step: 30 / 67 Loss (mean): 3.085030292160809 Loss (std): 2.236481990877656 Loss ratio: 0.7249465253422795 Tokens per Sec: 2606.347008800115
Epoch Step: 35 / 67 Loss (mean): 2.568040169775486 Loss (std): 1.8282347802868861 Loss ratio: 0.7119182954395615 Tokens per Sec: 3251.994863871801
Epoch Step: 40 / 67 Loss (mean): 1.28152913103501 Loss (std): 1.0068352254190103 Loss ratio: 0.7856514542169268 Tokens per Sec: 2303.0122738819596
Epoch Step: 45 / 67 Loss (mean): 2.4808338101720437 Loss (std): 1.8105308887511977 Loss ratio: 0.7298074064161674 Tokens per Sec: 3120.930839564574
Epoch Step: 50 / 67 Loss (mean): 2.556584566598758 Loss (std): 2.0525081238472556 Loss ratio: 0.8028320872553344 Tokens per Sec: 2715.80282268594
Epoch Step: 55 / 67 Loss (mean): 2.589417135110125 Loss (std): 1.8104443582768517 Loss ratio: 0.6991706101457676 Tokens per Sec: 2877.932405914497
Epoch Step: 60 / 67 Loss (mean): 3.143869155086577 Loss (std): 2.042335187597913 Loss ratio: 0.6496247416319941 Tokens per Sec: 2649.1374189661824
Epoch Step: 65 / 67 Loss (mean): 2.7354356012074277 Loss (std): 2.016993381567638 Loss ratio: 0.7373572898873337 Tokens per Sec: 2632.913797627752
Mean loss per sample: 3.8483300322581186 Std loss per sample: 6.669368204126236 ratio: 1.7330551559302705
Epoch ended with duration 0:00:11.411566
Train perplexity: 1.6831683752019804
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings not closing command and call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api and gb2312han[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: update colon and space in new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 78.03989541530609 Loss (std): 36.28986069674625 Loss ratio: 0.46501677768302935 Tokens per Sec: 4262.8219366633075
Mean loss per sample: 83.23769919549832 Std loss per sample: 42.92188851901448 ratio: 0.5156544322327423
Epoch ended with duration 0:00:01.042519
b'BLEU = 2.46, 8.2/2.5/1.7/1.3 (BP=0.948, ratio=0.949, hyp_len=2954, ref_len=3113)\n'
Validation perplexity: 79237.04187874615
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.46
Epoch 248 / 1000
Epoch Step: 5 / 67 Loss (mean): 3.941582106053829 Loss (std): 2.7949865340621662 Loss ratio: 0.7091027051724685 Tokens per Sec: 3031.2262150729034
Epoch Step: 10 / 67 Loss (mean): 2.694693290628493 Loss (std): 2.0216097453647803 Loss ratio: 0.7502188662418323 Tokens per Sec: 2973.0108844811275
Epoch Step: 15 / 67 Loss (mean): 2.6290449338266626 Loss (std): 2.1662431218141154 Loss ratio: 0.8239658036810639 Tokens per Sec: 2382.9435395825108
Epoch Step: 20 / 67 Loss (mean): 2.911098580225371 Loss (std): 1.8857644656194676 Loss ratio: 0.6477844750532206 Tokens per Sec: 2910.102064458654
Epoch Step: 25 / 67 Loss (mean): 2.681801942002494 Loss (std): 1.858737175249577 Loss ratio: 0.6930926352680852 Tokens per Sec: 2539.8086201902242
Epoch Step: 30 / 67 Loss (mean): 10.632951001927722 Loss (std): 19.043907921123235 Loss ratio: 1.7910275254414914 Tokens per Sec: 2720.0529194052833
Epoch Step: 35 / 67 Loss (mean): 2.8413781982380897 Loss (std): 2.0509161786599623 Loss ratio: 0.7218033065544442 Tokens per Sec: 3063.2375963774025
Epoch Step: 40 / 67 Loss (mean): 2.523402351187542 Loss (std): 1.7625712626919339 Loss ratio: 0.6984899819334985 Tokens per Sec: 2276.0156264256752
Epoch Step: 45 / 67 Loss (mean): 3.1937492415308952 Loss (std): 2.443845204599266 Loss ratio: 0.7651963318910506 Tokens per Sec: 2936.1795231274964
Epoch Step: 50 / 67 Loss (mean): 2.7564075506525114 Loss (std): 1.9236223455662962 Loss ratio: 0.6978729778587808 Tokens per Sec: 2542.5101512172596
Epoch Step: 55 / 67 Loss (mean): 3.9735034592449665 Loss (std): 2.7315103480055627 Loss ratio: 0.6874312243645552 Tokens per Sec: 3100.274058081681
Epoch Step: 60 / 67 Loss (mean): 2.657712757936679 Loss (std): 1.8704661943713976 Loss ratio: 0.7037879427660716 Tokens per Sec: 2843.354560848479
Epoch Step: 65 / 67 Loss (mean): 2.8309577805921435 Loss (std): 2.0127570486446698 Loss ratio: 0.7109809487245927 Tokens per Sec: 2566.711677911205
Mean loss per sample: 3.9680630223283284 Std loss per sample: 7.22683460525527 ratio: 1.8212499561095181
Epoch ended with duration 0:00:11.458415
Train perplexity: 1.710657490986904
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings in switch ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: update colon and space in new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 78.38862895965576 Loss (std): 36.41665129508923 Loss ratio: 0.464565483264566 Tokens per Sec: 4391.943289513776
Mean loss per sample: 83.25492734889515 Std loss per sample: 43.077069788197996 ratio: 0.517411655500888
Epoch ended with duration 0:00:01.039394
b'BLEU = 2.43, 8.3/2.6/1.7/1.2 (BP=0.939, ratio=0.941, hyp_len=2928, ref_len=3113)\n'
Validation perplexity: 79422.25457831763
Validation accuracy: 0.0
Validation BLEU: 2.43
Epoch 249 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.1809826554963365 Loss (std): 1.5297313467457379 Loss ratio: 0.7013954663466178 Tokens per Sec: 2612.982328540243
Epoch Step: 10 / 67 Loss (mean): 2.720316381077282 Loss (std): 1.5982967930457153 Loss ratio: 0.5875407743612411 Tokens per Sec: 2504.3770296633693
Epoch Step: 15 / 67 Loss (mean): 2.53410025004996 Loss (std): 1.732482012329263 Loss ratio: 0.6836675116918153 Tokens per Sec: 2458.9631799510066
Epoch Step: 20 / 67 Loss (mean): 3.6604886148124933 Loss (std): 2.2475024848454703 Loss ratio: 0.6139897487321095 Tokens per Sec: 2969.4088021474245
Epoch Step: 25 / 67 Loss (mean): 3.564199628890492 Loss (std): 2.643322158967916 Loss ratio: 0.7416313434134895 Tokens per Sec: 2926.610969645742
Epoch Step: 30 / 67 Loss (mean): 2.5456208860850893 Loss (std): 1.9380231719421768 Loss ratio: 0.761316495529962 Tokens per Sec: 2767.5258718676982
Epoch Step: 35 / 67 Loss (mean): 2.674091043532826 Loss (std): 2.1352081654334736 Loss ratio: 0.7984799809256242 Tokens per Sec: 2464.0314500132486
Epoch Step: 40 / 67 Loss (mean): 3.27471615455579 Loss (std): 2.4511770220761027 Loss ratio: 0.7485158732508835 Tokens per Sec: 2695.4712772535513
Epoch Step: 45 / 67 Loss (mean): 3.2981257846113294 Loss (std): 2.107270961585229 Loss ratio: 0.6389298344585612 Tokens per Sec: 2983.2219170158774
Epoch Step: 50 / 67 Loss (mean): 3.729835412930697 Loss (std): 2.5320305469303688 Loss ratio: 0.6788585196419806 Tokens per Sec: 2805.001565324137
Epoch Step: 55 / 67 Loss (mean): 2.5653996825567447 Loss (std): 2.1865343248254385 Loss ratio: 0.8523172196880765 Tokens per Sec: 3032.695990240434
Epoch Step: 60 / 67 Loss (mean): 2.649473706725985 Loss (std): 2.0984681482314276 Loss ratio: 0.7920320714654506 Tokens per Sec: 2873.604731036578
Epoch Step: 65 / 67 Loss (mean): 2.7002194540109485 Loss (std): 2.143707077155714 Loss ratio: 0.7939010564387341 Tokens per Sec: 3106.9282153760482
Mean loss per sample: 3.863763233187202 Std loss per sample: 6.866350300074125 ratio: 1.7771146640396238
Epoch ended with duration 0:00:11.408032
Train perplexity: 1.6866866840391475
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings not being log device[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: update colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 79.06737288832664 Loss (std): 36.259994688286554 Loss ratio: 0.4585961739173948 Tokens per Sec: 4272.582731674315
Mean loss per sample: 83.92465611461733 Std loss per sample: 43.262197029076034 ratio: 0.5154885230627828
Epoch ended with duration 0:00:01.036223
b'BLEU = 2.52, 8.9/2.7/1.6/1.2 (BP=0.957, ratio=0.958, hyp_len=2982, ref_len=3113)\n'
Validation perplexity: 86967.88017304514
Validation accuracy: 0.0
Validation BLEU: 2.52
Epoch 250 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.720550212310627 Loss (std): 1.9894712590024868 Loss ratio: 0.7312753317325403 Tokens per Sec: 2505.1403467622436
Epoch Step: 10 / 67 Loss (mean): 2.4151597680756822 Loss (std): 1.8139623236260964 Loss ratio: 0.7510734269440901 Tokens per Sec: 2756.948585149856
Epoch Step: 15 / 67 Loss (mean): 2.782427920261398 Loss (std): 1.8832991199520264 Loss ratio: 0.6768545938739351 Tokens per Sec: 2598.8875693403074
Epoch Step: 20 / 67 Loss (mean): 2.8335771253332496 Loss (std): 1.7001581398328394 Loss ratio: 0.6000041871572097 Tokens per Sec: 3061.5282831511017
Epoch Step: 25 / 67 Loss (mean): 3.679347851779312 Loss (std): 2.2859863566179546 Loss ratio: 0.621302048272621 Tokens per Sec: 2684.040097953964
Epoch Step: 30 / 67 Loss (mean): 2.8397423818241805 Loss (std): 2.5398376214266967 Loss ratio: 0.8943901523190874 Tokens per Sec: 3009.945917982261
Epoch Step: 35 / 67 Loss (mean): 8.900276386644691 Loss (std): 14.731042479606195 Loss ratio: 1.6551219130352917 Tokens per Sec: 2674.234904108428
Epoch Step: 40 / 67 Loss (mean): 3.127441996242851 Loss (std): 2.281163898630699 Loss ratio: 0.7294024641771687 Tokens per Sec: 2818.924619069653
Epoch Step: 45 / 67 Loss (mean): 12.889095870341407 Loss (std): 20.327502145150596 Loss ratio: 1.5771084604875516 Tokens per Sec: 2847.9350135535465
Epoch Step: 50 / 67 Loss (mean): 3.2432449543848634 Loss (std): 2.438502502646972 Loss ratio: 0.7518712082940635 Tokens per Sec: 2444.1964113561785
Epoch Step: 55 / 67 Loss (mean): 2.521679104771465 Loss (std): 1.8285753294428013 Loss ratio: 0.7251419603639543 Tokens per Sec: 2901.8807344539405
Epoch Step: 60 / 67 Loss (mean): 2.4145769665483385 Loss (std): 1.8859652614690983 Loss ratio: 0.7810748166645125 Tokens per Sec: 2535.26640218902
Epoch Step: 65 / 67 Loss (mean): 3.7136263493448496 Loss (std): 1.978588027228168 Loss ratio: 0.5327913583921081 Tokens per Sec: 3355.1242326517704
Mean loss per sample: 5.024252010877011 Std loss per sample: 9.738690737163264 ratio: 1.9383364361660118
Epoch ended with duration 0:00:11.534096
Train perplexity: 1.9734432564074809
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings not removed log command[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for developer[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: update colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 78.43677288293839 Loss (std): 36.0385783230623 Loss ratio: 0.45946023782553447 Tokens per Sec: 4296.36103912391
Mean loss per sample: 84.5198105837478 Std loss per sample: 42.25733252880103 ratio: 0.499969560236173
Epoch ended with duration 0:00:01.053769
b'BLEU = 2.30, 8.5/2.5/1.6/1.2 (BP=0.924, ratio=0.927, hyp_len=2886, ref_len=3113)\n'
Validation perplexity: 94272.8227174759
Validation accuracy: 0.0
Validation BLEU: 2.3
Model saved checkpoint_commit_msg_generator!
Epoch 251 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.159840744570829 Loss (std): 1.9380961789725097 Loss ratio: 0.8973329093102275 Tokens per Sec: 2546.78792117974
Epoch Step: 10 / 67 Loss (mean): 3.2838940096553415 Loss (std): 1.8595411283158612 Loss ratio: 0.5662610068560123 Tokens per Sec: 2277.4114460463506
Epoch Step: 15 / 67 Loss (mean): 12.010189378837822 Loss (std): 16.823515767671985 Loss ratio: 1.4007702324257545 Tokens per Sec: 2616.1385797291687
Epoch Step: 20 / 67 Loss (mean): 2.855307142017409 Loss (std): 1.8494049971684696 Loss ratio: 0.6477079015260606 Tokens per Sec: 2375.3925378943413
Epoch Step: 25 / 67 Loss (mean): 3.840945502393879 Loss (std): 2.23878794503531 Loss ratio: 0.5828741760694026 Tokens per Sec: 3900.5437749292573
Epoch Step: 30 / 67 Loss (mean): 2.302233033813536 Loss (std): 1.826235973030475 Loss ratio: 0.7932454908812617 Tokens per Sec: 2355.445402884241
Epoch Step: 35 / 67 Loss (mean): 3.7743122559040785 Loss (std): 2.4989981091103552 Loss ratio: 0.6621068792602478 Tokens per Sec: 3265.1939954264935
Epoch Step: 40 / 67 Loss (mean): 13.099029681296088 Loss (std): 15.752184869100262 Loss ratio: 1.202545932970331 Tokens per Sec: 2408.6292367010105
Epoch Step: 45 / 67 Loss (mean): 2.383554301923141 Loss (std): 1.6884548244193391 Loss ratio: 0.7083769071495584 Tokens per Sec: 2331.9704134192593
Epoch Step: 50 / 67 Loss (mean): 20.391577837988734 Loss (std): 23.403699006041247 Loss ratio: 1.1477139823109248 Tokens per Sec: 3173.6284970450733
Epoch Step: 55 / 67 Loss (mean): 13.77082748443354 Loss (std): 20.407137244801376 Loss ratio: 1.4819107470389474 Tokens per Sec: 3074.46061594762
Epoch Step: 60 / 67 Loss (mean): 3.7705132896080613 Loss (std): 2.8027897947536307 Loss ratio: 0.7433443617553132 Tokens per Sec: 2920.0050707093797
Epoch Step: 65 / 67 Loss (mean): 2.7270224313251674 Loss (std): 2.0972243370873276 Loss ratio: 0.7690528368951494 Tokens per Sec: 3125.4929881669705
Mean loss per sample: 4.547554981817945 Std loss per sample: 8.586671423350134 ratio: 1.888195185694599
Epoch ended with duration 0:00:11.477003
Train perplexity: 1.8501799247353108
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings not being log command[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 78.65259346365929 Loss (std): 37.285884478417266 Loss ratio: 0.47405791514865775 Tokens per Sec: 4351.350345944751
Mean loss per sample: 82.80628925122198 Std loss per sample: 43.50270384249947 ratio: 0.5253550694744783
Epoch ended with duration 0:00:01.029549
b'BLEU = 2.44, 9.0/2.9/1.8/1.3 (BP=0.881, ratio=0.887, hyp_len=2762, ref_len=3113)\n'
Validation perplexity: 74737.36106563141
Validation accuracy: 0.0
Validation BLEU: 2.44
Epoch 252 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.7184108399087563 Loss (std): 1.8572205533484312 Loss ratio: 0.6832008341354204 Tokens per Sec: 2307.185301446502
Epoch Step: 10 / 67 Loss (mean): 2.7494937959709205 Loss (std): 2.3491120956959834 Loss ratio: 0.8543798495338844 Tokens per Sec: 2882.5088634846234
Epoch Step: 15 / 67 Loss (mean): 2.599554138723761 Loss (std): 1.973141806198844 Loss ratio: 0.7590308571790503 Tokens per Sec: 2506.1390213594673
Epoch Step: 20 / 67 Loss (mean): 3.427877394715324 Loss (std): 2.65316250797816 Loss ratio: 0.7739957421080685 Tokens per Sec: 2609.548235458046
Epoch Step: 25 / 67 Loss (mean): 2.640309571288526 Loss (std): 2.154218261953799 Loss ratio: 0.8158960924049885 Tokens per Sec: 3592.2025088970076
Epoch Step: 30 / 67 Loss (mean): 2.560481327585876 Loss (std): 1.858482700435081 Loss ratio: 0.7258333346985711 Tokens per Sec: 3016.6229360588463
Epoch Step: 35 / 67 Loss (mean): 8.158356283500325 Loss (std): 14.432723402991385 Loss ratio: 1.7690724579141641 Tokens per Sec: 2418.7435756423843
Epoch Step: 40 / 67 Loss (mean): 3.000259682070464 Loss (std): 2.2927643543416836 Loss ratio: 0.7641886360848134 Tokens per Sec: 2933.712725599149
Epoch Step: 45 / 67 Loss (mean): 3.412687706295401 Loss (std): 2.1076142290427553 Loss ratio: 0.6175819208874077 Tokens per Sec: 2554.595914393167
Epoch Step: 50 / 67 Loss (mean): 11.856666048697662 Loss (std): 17.521951391959803 Loss ratio: 1.4778143636662868 Tokens per Sec: 2867.800848880039
Epoch Step: 55 / 67 Loss (mean): 3.506425351370126 Loss (std): 2.2526210858942903 Loss ratio: 0.6424266482713185 Tokens per Sec: 3119.949218554041
Epoch Step: 60 / 67 Loss (mean): 3.395483208587393 Loss (std): 2.6866708683944176 Loss ratio: 0.7912484625456713 Tokens per Sec: 2723.4985184126167
Epoch Step: 65 / 67 Loss (mean): 2.7135990483220667 Loss (std): 1.917426664475715 Loss ratio: 0.7065991070645979 Tokens per Sec: 2753.919085931963
Mean loss per sample: 3.745021972347678 Std loss per sample: 6.597975920049726 ratio: 1.7617989877676443
Epoch ended with duration 0:00:11.455843
Train perplexity: 1.6598054618933216
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length arrays if platform[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 78.57941231131554 Loss (std): 35.72208381977515 Loss ratio: 0.45459851084469266 Tokens per Sec: 4275.822511359119
Mean loss per sample: 83.99265138487347 Std loss per sample: 43.41272557029657 ratio: 0.5168633785754609
Epoch ended with duration 0:00:01.038806
b'BLEU = 2.02, 7.9/2.4/1.4/0.9 (BP=0.928, ratio=0.931, hyp_len=2898, ref_len=3113)\n'
Validation perplexity: 87772.95592382645
Validation accuracy: 0.0
Validation BLEU: 2.02
Epoch 253 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.1432137222145684 Loss (std): 1.574202678608464 Loss ratio: 0.7345056922189966 Tokens per Sec: 2705.101867313896
Epoch Step: 10 / 67 Loss (mean): 2.2807123539969325 Loss (std): 1.8415176667239246 Loss ratio: 0.8074309167031422 Tokens per Sec: 3378.0317732626672
Epoch Step: 15 / 67 Loss (mean): 2.7570051088696346 Loss (std): 2.123299652473818 Loss ratio: 0.7701471591920138 Tokens per Sec: 3024.8262335341688
Epoch Step: 20 / 67 Loss (mean): 2.5208935563568957 Loss (std): 1.77973394152598 Loss ratio: 0.7059932923538379 Tokens per Sec: 3073.535078436486
Epoch Step: 25 / 67 Loss (mean): 2.254023623536341 Loss (std): 1.7064406248941206 Loss ratio: 0.7570642148891428 Tokens per Sec: 2559.4746957250627
Epoch Step: 30 / 67 Loss (mean): 2.245044816751033 Loss (std): 1.6794464796568422 Loss ratio: 0.7480681308123243 Tokens per Sec: 2546.2116299365553
Epoch Step: 35 / 67 Loss (mean): 2.376419420936145 Loss (std): 1.5948030104349646 Loss ratio: 0.6710949238946728 Tokens per Sec: 2944.102693076712
Epoch Step: 40 / 67 Loss (mean): 2.4151403253199533 Loss (std): 1.953628544348626 Loss ratio: 0.8089089167478553 Tokens per Sec: 2656.3083803130203
Epoch Step: 45 / 67 Loss (mean): 2.045768390467856 Loss (std): 1.3984004920632638 Loss ratio: 0.6835575808967589 Tokens per Sec: 2389.3753163942383
Epoch Step: 50 / 67 Loss (mean): 2.468150659231469 Loss (std): 2.0530998576435335 Loss ratio: 0.8318373313089511 Tokens per Sec: 2475.208531676136
Epoch Step: 55 / 67 Loss (mean): 3.673434592783451 Loss (std): 2.461424426599748 Loss ratio: 0.6700607740329103 Tokens per Sec: 3270.688305516866
Epoch Step: 60 / 67 Loss (mean): 3.782472515827976 Loss (std): 2.5438875068279154 Loss ratio: 0.6725461972778045 Tokens per Sec: 2656.7420494964526
Epoch Step: 65 / 67 Loss (mean): 2.572472610627301 Loss (std): 1.7177461139044385 Loss ratio: 0.6677412644971034 Tokens per Sec: 2759.4462542403603
Mean loss per sample: 4.0198356679975165 Std loss per sample: 7.809078961988657 ratio: 1.9426363679883347
Epoch ended with duration 0:00:11.480667
Train perplexity: 1.7226824130079064
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print during keys ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: update compatibility for ddms with dx[0m
Epoch Step: 5 / 8 Loss (mean): 77.62666481733322 Loss (std): 35.222674823695655 Loss ratio: 0.45374453361586137 Tokens per Sec: 4414.425583630544
Mean loss per sample: 82.6366180826406 Std loss per sample: 43.23910557245208 ratio: 0.5232438908524898
Epoch ended with duration 0:00:01.021963
b'BLEU = 2.48, 8.2/2.7/1.8/1.3 (BP=0.934, ratio=0.936, hyp_len=2914, ref_len=3113)\n'
Validation perplexity: 73038.49513685628
Validation accuracy: 0.0
Validation BLEU: 2.48
Epoch 254 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.1705047440482304 Loss (std): 1.9114834265095626 Loss ratio: 0.8806630954164308 Tokens per Sec: 1945.773996437117
Epoch Step: 10 / 67 Loss (mean): 2.8739302554167807 Loss (std): 1.8443601853871516 Loss ratio: 0.6417553738163629 Tokens per Sec: 2881.178724752508
Epoch Step: 15 / 67 Loss (mean): 3.117109125945717 Loss (std): 2.0415413220572503 Loss ratio: 0.6549470164724681 Tokens per Sec: 3019.5966650844075
Epoch Step: 20 / 67 Loss (mean): 2.7054669656790793 Loss (std): 1.8843823411741003 Loss ratio: 0.6965090925444419 Tokens per Sec: 2575.5206092963494
Epoch Step: 25 / 67 Loss (mean): 2.805393065325916 Loss (std): 2.060334087294171 Loss ratio: 0.7344190419372881 Tokens per Sec: 2808.986360640222
Epoch Step: 30 / 67 Loss (mean): 2.1737527560908347 Loss (std): 1.6849243729935168 Loss ratio: 0.775122363052732 Tokens per Sec: 2924.603060058236
Epoch Step: 35 / 67 Loss (mean): 2.382835844764486 Loss (std): 1.8588756719918438 Loss ratio: 0.7801106719441561 Tokens per Sec: 3050.6551949511872
Epoch Step: 40 / 67 Loss (mean): 3.786499892361462 Loss (std): 2.4297471662316417 Loss ratio: 0.6416868441309588 Tokens per Sec: 3150.39176367353
Epoch Step: 45 / 67 Loss (mean): 13.129055006778799 Loss (std): 19.58975603669888 Loss ratio: 1.492091854789571 Tokens per Sec: 2995.0596106887024
Epoch Step: 50 / 67 Loss (mean): 2.8944825648795813 Loss (std): 2.3175467770698153 Loss ratio: 0.8006774009247597 Tokens per Sec: 2476.8028747841936
Epoch Step: 55 / 67 Loss (mean): 2.2175510104279965 Loss (std): 1.9775381456268828 Loss ratio: 0.8917666995381585 Tokens per Sec: 3050.015119631951
Epoch Step: 60 / 67 Loss (mean): 2.7033568324986845 Loss (std): 2.153234074195651 Loss ratio: 0.7965038312036073 Tokens per Sec: 2770.6360814872182
Epoch Step: 65 / 67 Loss (mean): 2.668479712679982 Loss (std): 2.133040869157374 Loss ratio: 0.7993468561974333 Tokens per Sec: 3041.980264174864
Mean loss per sample: 3.3416310502631013 Std loss per sample: 5.66823152902438 ratio: 1.6962469655583599
Epoch ended with duration 0:00:11.438642
Train perplexity: 1.571643248756301
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print during log device ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: update colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 78.72914555668831 Loss (std): 35.516752801009005 Loss ratio: 0.4511258511682366 Tokens per Sec: 4412.455036994626
Mean loss per sample: 83.36597307050815 Std loss per sample: 43.55469630517138 ratio: 0.5224517234187895
Epoch ended with duration 0:00:01.021763
b'BLEU = 2.44, 7.8/2.7/1.8/1.3 (BP=0.929, ratio=0.932, hyp_len=2900, ref_len=3113)\n'
Validation perplexity: 80626.4933921465
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.44
Epoch 255 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.4389621338341385 Loss (std): 1.6481060913217405 Loss ratio: 0.6757407458109475 Tokens per Sec: 2502.6357151774937
Epoch Step: 10 / 67 Loss (mean): 2.681581789860502 Loss (std): 2.040149979081578 Loss ratio: 0.7608009521826699 Tokens per Sec: 2528.0120992657785
Epoch Step: 15 / 67 Loss (mean): 2.033623168710619 Loss (std): 1.4779691093307012 Loss ratio: 0.7267664590327125 Tokens per Sec: 2688.635383313885
Epoch Step: 20 / 67 Loss (mean): 2.4474424788495526 Loss (std): 2.1744336882089477 Loss ratio: 0.8884513965088423 Tokens per Sec: 3068.2545720555963
Epoch Step: 25 / 67 Loss (mean): 2.694960732711479 Loss (std): 1.6861477491915051 Loss ratio: 0.6256669081389629 Tokens per Sec: 2785.9995708583224
Epoch Step: 30 / 67 Loss (mean): 3.7422866746783257 Loss (std): 2.3086558193487723 Loss ratio: 0.6169104667929313 Tokens per Sec: 2880.0251598925424
Epoch Step: 35 / 67 Loss (mean): 2.302500456571579 Loss (std): 2.017684894385611 Loss ratio: 0.8763016261851004 Tokens per Sec: 2627.768062925742
Epoch Step: 40 / 67 Loss (mean): 2.2856232137419283 Loss (std): 1.373662102382117 Loss ratio: 0.6010011160733767 Tokens per Sec: 2593.3465371613142
Epoch Step: 45 / 67 Loss (mean): 3.059257229557261 Loss (std): 1.9101301964027555 Loss ratio: 0.6243771128324478 Tokens per Sec: 3182.836219854164
Epoch Step: 50 / 67 Loss (mean): 2.5502298128558323 Loss (std): 2.222678593823277 Loss ratio: 0.8715601169034438 Tokens per Sec: 2653.7150858361606
Epoch Step: 55 / 67 Loss (mean): 3.558972460683435 Loss (std): 2.3351199193552294 Loss ratio: 0.6561219411365753 Tokens per Sec: 2556.1647312896425
Epoch Step: 60 / 67 Loss (mean): 2.1296872118255123 Loss (std): 1.471487267843798 Loss ratio: 0.6909405567508092 Tokens per Sec: 2837.2733018240765
Epoch Step: 65 / 67 Loss (mean): 2.3225657945731655 Loss (std): 1.959331101900166 Loss ratio: 0.8436062851172086 Tokens per Sec: 2765.254512520261
Mean loss per sample: 3.656709380001633 Std loss per sample: 7.055305569667832 ratio: 1.9294138080135537
Epoch ended with duration 0:00:11.478830
Train perplexity: 1.6400910118621137
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings not during command during[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 79.16909462213516 Loss (std): 36.16291514344213 Loss ratio: 0.45678070863439196 Tokens per Sec: 4408.247235870883
Mean loss per sample: 83.45363978895007 Std loss per sample: 43.732552379052905 ratio: 0.5240340923373775
Epoch ended with duration 0:00:01.023282
b'BLEU = 2.53, 8.5/2.9/1.8/1.3 (BP=0.919, ratio=0.922, hyp_len=2870, ref_len=3113)\n'
Validation perplexity: 81590.08181890476
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.53
Model saved checkpoint_commit_msg_generator!
Epoch 256 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.184066276997328 Loss (std): 1.584565883880297 Loss ratio: 0.7255118127911261 Tokens per Sec: 2434.8040574018796
Epoch Step: 10 / 67 Loss (mean): 2.4257988904137164 Loss (std): 1.7203392000528548 Loss ratio: 0.7091845935173354 Tokens per Sec: 2855.7356850185042
Epoch Step: 15 / 67 Loss (mean): 2.697577218292281 Loss (std): 2.285475162739542 Loss ratio: 0.8472325267435262 Tokens per Sec: 2710.613269387551
Epoch Step: 20 / 67 Loss (mean): 2.4241234108339995 Loss (std): 1.6155087962922203 Loss ratio: 0.6664300955438642 Tokens per Sec: 3044.2885496676113
Epoch Step: 25 / 67 Loss (mean): 2.0517419181996956 Loss (std): 1.6627283512185633 Loss ratio: 0.8103983919563953 Tokens per Sec: 2630.3067271594578
Epoch Step: 30 / 67 Loss (mean): 2.0551943742320873 Loss (std): 1.7035000470149317 Loss ratio: 0.8288753941589762 Tokens per Sec: 2862.862596654935
Epoch Step: 35 / 67 Loss (mean): 13.166350331855938 Loss (std): 20.117464639667485 Loss ratio: 1.5279454163537902 Tokens per Sec: 3162.780821626296
Epoch Step: 40 / 67 Loss (mean): 2.3294685877044685 Loss (std): 1.712826393136846 Loss ratio: 0.7352863233175078 Tokens per Sec: 2582.719066330353
Epoch Step: 45 / 67 Loss (mean): 2.660931639256887 Loss (std): 1.936011150088052 Loss ratio: 0.7275689166628564 Tokens per Sec: 2837.765260962546
Epoch Step: 50 / 67 Loss (mean): 2.4685346126789227 Loss (std): 1.7794862928611819 Loss ratio: 0.7208674667640304 Tokens per Sec: 2946.726440589569
Epoch Step: 55 / 67 Loss (mean): 2.1875831725774333 Loss (std): 1.703535439456192 Loss ratio: 0.7787294493809206 Tokens per Sec: 2999.5110285883375
Epoch Step: 60 / 67 Loss (mean): 2.255395269021392 Loss (std): 1.477912017430113 Loss ratio: 0.6552784949626032 Tokens per Sec: 2516.086368433813
Epoch Step: 65 / 67 Loss (mean): 2.143426960334182 Loss (std): 1.5944400035001298 Loss ratio: 0.7438741944589241 Tokens per Sec: 2689.9007627973083
Mean loss per sample: 2.7884699797104524 Std loss per sample: 3.9106793229443713 ratio: 1.4024462703200578
Epoch ended with duration 0:00:11.405521
Train perplexity: 1.4583114018648813
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print during android device call log[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a unit test for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 78.99627983570099 Loss (std): 37.25952329463246 Loss ratio: 0.4716617462509123 Tokens per Sec: 4386.175740539289
Mean loss per sample: 83.73716908058182 Std loss per sample: 44.53109636947681 ratio: 0.531796057335348
Epoch ended with duration 0:00:01.025638
b'BLEU = 2.57, 8.8/2.9/1.9/1.5 (BP=0.890, ratio=0.896, hyp_len=2788, ref_len=3113)\n'
Validation perplexity: 84786.04840623276
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.57
Epoch 257 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.2921266411431134 Loss (std): 1.655436744253221 Loss ratio: 0.7222274347928843 Tokens per Sec: 2497.3735377251037
Epoch Step: 10 / 67 Loss (mean): 2.1118689882569015 Loss (std): 1.9299171316552555 Loss ratio: 0.9138432082608373 Tokens per Sec: 2871.7640542573135
Epoch Step: 15 / 67 Loss (mean): 2.3408371432014974 Loss (std): 1.747593336238704 Loss ratio: 0.7465676718751009 Tokens per Sec: 2727.9207772278055
Epoch Step: 20 / 67 Loss (mean): 2.7221890792716295 Loss (std): 1.8572121580030578 Loss ratio: 0.6822495072605274 Tokens per Sec: 2695.0143500933214
Epoch Step: 25 / 67 Loss (mean): 3.6377850431017578 Loss (std): 2.54332622345015 Loss ratio: 0.6991414262568914 Tokens per Sec: 2804.039820087201
Epoch Step: 30 / 67 Loss (mean): 2.048733487550635 Loss (std): 1.4331871916914805 Loss ratio: 0.6995478916122607 Tokens per Sec: 2670.0489960667305
Epoch Step: 35 / 67 Loss (mean): 2.0921297827590024 Loss (std): 1.586601698118789 Loss ratio: 0.7583667663420255 Tokens per Sec: 2894.481769856334
Epoch Step: 40 / 67 Loss (mean): 3.0993391792289913 Loss (std): 2.0450348367042857 Loss ratio: 0.6598293114898834 Tokens per Sec: 3337.0860693589784
Epoch Step: 45 / 67 Loss (mean): 1.261509574417557 Loss (std): 0.9893607164632418 Loss ratio: 0.7842673068256598 Tokens per Sec: 2455.0580303465795
Epoch Step: 50 / 67 Loss (mean): 2.3250077564734966 Loss (std): 1.7431215373970088 Loss ratio: 0.7497271923259836 Tokens per Sec: 2321.0656837790334
Epoch Step: 55 / 67 Loss (mean): 2.537876814545598 Loss (std): 1.7632181915950693 Loss ratio: 0.6947611410803524 Tokens per Sec: 3315.309394924313
Epoch Step: 60 / 67 Loss (mean): 10.779861793504097 Loss (std): 16.552957020527803 Loss ratio: 1.5355444566555159 Tokens per Sec: 2340.786050299496
Epoch Step: 65 / 67 Loss (mean): 2.5509738782420754 Loss (std): 1.7471568283879957 Loss ratio: 0.6848979690815159 Tokens per Sec: 3402.328507134005
Mean loss per sample: 3.486690298541271 Std loss per sample: 6.7965980036074 ratio: 1.9492978789802171
Epoch ended with duration 0:00:11.496128
Train perplexity: 1.602793752880248
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length arrays if device ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options percentages[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: update compatibility with current file package and dx[0m
Epoch Step: 5 / 8 Loss (mean): 79.29749685525894 Loss (std): 36.65336217652201 Loss ratio: 0.46222596715032616 Tokens per Sec: 4395.490290161505
Mean loss per sample: 83.77669655104152 Std loss per sample: 44.11621055038523 ratio: 0.5265928637268137
Epoch ended with duration 0:00:01.023579
b'BLEU = 2.54, 8.6/2.9/1.8/1.3 (BP=0.918, ratio=0.921, hyp_len=2868, ref_len=3113)\n'
Validation perplexity: 85241.43875864122
Validation accuracy: 0.0
Validation BLEU: 2.54
Epoch 258 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.2473919624462724 Loss (std): 1.5606877194901327 Loss ratio: 0.6944439357126354 Tokens per Sec: 2760.0245632374535
Epoch Step: 10 / 67 Loss (mean): 2.405227810028009 Loss (std): 1.9480933889909744 Loss ratio: 0.8099413206802597 Tokens per Sec: 2299.153470314924
Epoch Step: 15 / 67 Loss (mean): 2.0570411714725196 Loss (std): 1.622062079817037 Loss ratio: 0.7885413779326033 Tokens per Sec: 2571.6626383953903
Epoch Step: 20 / 67 Loss (mean): 2.8882914527785033 Loss (std): 2.021100482409589 Loss ratio: 0.6997564184408445 Tokens per Sec: 2972.268514304428
Epoch Step: 25 / 67 Loss (mean): 2.827498643891886 Loss (std): 1.5886515324941024 Loss ratio: 0.5618575753965409 Tokens per Sec: 2945.4230978414153
Epoch Step: 30 / 67 Loss (mean): 2.688532123574987 Loss (std): 1.748638818445987 Loss ratio: 0.6504065185283306 Tokens per Sec: 2298.8541033743436
Epoch Step: 35 / 67 Loss (mean): 14.628406684321817 Loss (std): 22.216198187217323 Loss ratio: 1.518702526299588 Tokens per Sec: 2669.243005221065
Epoch Step: 40 / 67 Loss (mean): 2.2918395315646194 Loss (std): 1.8699512558675415 Loss ratio: 0.815917183604448 Tokens per Sec: 2862.5732419368796
Epoch Step: 45 / 67 Loss (mean): 2.5613863721955568 Loss (std): 2.0509915430315986 Loss ratio: 0.8007349321818792 Tokens per Sec: 2880.692453335534
Epoch Step: 50 / 67 Loss (mean): 2.5489513042848557 Loss (std): 1.5693440560104313 Loss ratio: 0.6156822428785994 Tokens per Sec: 2665.600316233261
Epoch Step: 55 / 67 Loss (mean): 2.7112375169526786 Loss (std): 1.911223515673182 Loss ratio: 0.7049266262076958 Tokens per Sec: 2612.4142712477214
Epoch Step: 60 / 67 Loss (mean): 11.913547731935978 Loss (std): 19.010588907168305 Loss ratio: 1.5957118177491065 Tokens per Sec: 2726.8279791646896
Epoch Step: 65 / 67 Loss (mean): 2.3728614249266684 Loss (std): 1.6559551878025036 Loss ratio: 0.6978726909236512 Tokens per Sec: 3416.7733668535675
Mean loss per sample: 4.036117232193759 Std loss per sample: 8.464036427474793 ratio: 2.0970739799037794
Epoch ended with duration 0:00:11.509257
Train perplexity: 1.7264814774973731
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings not cipher suites ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a unit testing[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: update compatibility with current value and master[0m
Epoch Step: 5 / 8 Loss (mean): 79.24544915556908 Loss (std): 36.746410283354415 Loss ratio: 0.4637037290458971 Tokens per Sec: 4395.31454216238
Mean loss per sample: 83.96873604860463 Std loss per sample: 44.51219801810133 ratio: 0.5301044187724322
Epoch ended with duration 0:00:01.023574
b'BLEU = 2.48, 8.6/2.9/1.8/1.3 (BP=0.903, ratio=0.908, hyp_len=2826, ref_len=3113)\n'
Validation perplexity: 87488.94807520066
Validation accuracy: 0.0
Validation BLEU: 2.48
Epoch 259 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.8594765734742396 Loss (std): 2.347933757802772 Loss ratio: 0.8211061351518794 Tokens per Sec: 3157.6676896872896
Epoch Step: 10 / 67 Loss (mean): 1.9650216090958565 Loss (std): 1.8715242087467867 Loss ratio: 0.9524191490229515 Tokens per Sec: 2927.3961488357186
Epoch Step: 15 / 67 Loss (mean): 1.9379105074040126 Loss (std): 1.525267882682128 Loss ratio: 0.7870682762979325 Tokens per Sec: 3013.0001486252168
Epoch Step: 20 / 67 Loss (mean): 2.3372699222818483 Loss (std): 1.9722514799813196 Loss ratio: 0.8438270056784175 Tokens per Sec: 2843.4942165110247
Epoch Step: 25 / 67 Loss (mean): 2.8066473060753196 Loss (std): 1.9084180631407444 Loss ratio: 0.6799636202987629 Tokens per Sec: 2755.0365772437863
Epoch Step: 30 / 67 Loss (mean): 3.622647912906749 Loss (std): 8.720692576721959 Loss ratio: 2.407270258214144 Tokens per Sec: 2791.13814504811
Epoch Step: 35 / 67 Loss (mean): 2.302414297591895 Loss (std): 1.510223025495626 Loss ratio: 0.6559301803655296 Tokens per Sec: 2120.0350834594997
Epoch Step: 40 / 67 Loss (mean): 2.450143228925299 Loss (std): 1.780307636079425 Loss ratio: 0.726613699583725 Tokens per Sec: 2282.4918570823534
Epoch Step: 45 / 67 Loss (mean): 2.3040360156446695 Loss (std): 1.9896566184343218 Loss ratio: 0.8635527417645925 Tokens per Sec: 2579.307995928052
Epoch Step: 50 / 67 Loss (mean): 2.705740305245854 Loss (std): 2.00417109697 Loss ratio: 0.7407108114124401 Tokens per Sec: 2606.363683318754
Epoch Step: 55 / 67 Loss (mean): 2.3567601059330627 Loss (std): 1.6819715442768168 Loss ratio: 0.7136795722409384 Tokens per Sec: 2737.0445685111704
Epoch Step: 60 / 67 Loss (mean): 2.2489087049325462 Loss (std): 1.7902223408525635 Loss ratio: 0.7960404692845277 Tokens per Sec: 3352.9720071109996
Epoch Step: 65 / 67 Loss (mean): 3.3180138850584626 Loss (std): 2.4820956489000916 Loss ratio: 0.7480666853376828 Tokens per Sec: 3276.4587763093223
Mean loss per sample: 3.6806814046788383 Std loss per sample: 7.49765157324334 ratio: 2.0370281338972767
Epoch ended with duration 0:00:11.476640
Train perplexity: 1.6454191322921006
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during command ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test java 7[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 79.24146455526352 Loss (std): 36.049595002082334 Loss ratio: 0.4549334771184234 Tokens per Sec: 4395.669915276022
Mean loss per sample: 84.17726401154135 Std loss per sample: 44.19485736853009 ratio: 0.5250213093463174
Epoch ended with duration 0:00:01.026013
b'BLEU = 2.58, 9.0/2.9/1.8/1.4 (BP=0.907, ratio=0.911, hyp_len=2837, ref_len=3113)\n'
Validation perplexity: 89996.58739162123
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.58
Epoch 260 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.2833703408250585 Loss (std): 1.8255955712103078 Loss ratio: 0.7995179487838397 Tokens per Sec: 2982.193491299022
Epoch Step: 10 / 67 Loss (mean): 2.2686474374495447 Loss (std): 1.822587714889734 Loss ratio: 0.8033807654743924 Tokens per Sec: 2496.397962532095
Epoch Step: 15 / 67 Loss (mean): 3.203847129479982 Loss (std): 2.1995554836358546 Loss ratio: 0.6865357162009367 Tokens per Sec: 3103.8460769691446
Epoch Step: 20 / 67 Loss (mean): 2.0004880956257693 Loss (std): 1.6386005317775347 Loss ratio: 0.8191003662358545 Tokens per Sec: 2279.229640449758
Epoch Step: 25 / 67 Loss (mean): 1.9851872698636726 Loss (std): 1.7773986517479807 Loss ratio: 0.8953304701928896 Tokens per Sec: 2747.702926882676
Epoch Step: 30 / 67 Loss (mean): 2.494622522033751 Loss (std): 1.8013252980613055 Loss ratio: 0.7220833140690031 Tokens per Sec: 3227.133827104936
Epoch Step: 35 / 67 Loss (mean): 2.4583899709396064 Loss (std): 1.8400971444755863 Loss ratio: 0.7484968480294824 Tokens per Sec: 2433.966295831825
Epoch Step: 40 / 67 Loss (mean): 2.169265391305089 Loss (std): 1.7430216878758629 Loss ratio: 0.8035078118437199 Tokens per Sec: 2863.6376365415795
Epoch Step: 45 / 67 Loss (mean): 2.341717525734566 Loss (std): 1.9159804659393391 Loss ratio: 0.8181945281117206 Tokens per Sec: 2552.775471570409
Epoch Step: 50 / 67 Loss (mean): 2.143904175143689 Loss (std): 1.8713699655567695 Loss ratio: 0.8728794818599327 Tokens per Sec: 2790.044197309617
Epoch Step: 55 / 67 Loss (mean): 2.727440560469404 Loss (std): 1.8912650431197928 Loss ratio: 0.6934211768099167 Tokens per Sec: 3813.9779892297065
Epoch Step: 60 / 67 Loss (mean): 12.233061722829007 Loss (std): 19.371169600360346 Loss ratio: 1.5835095121126053 Tokens per Sec: 2568.945050749802
Epoch Step: 65 / 67 Loss (mean): 3.10115258814767 Loss (std): 2.3146305280349893 Loss ratio: 0.7463775039258957 Tokens per Sec: 2860.2013504038728
Mean loss per sample: 3.248795637965684 Std loss per sample: 6.31123105032086 ratio: 1.9426371349946767
Epoch ended with duration 0:00:11.453958
Train perplexity: 1.5520259197208257
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings from inactive device[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: update compatibility key reference in new password prompt[0m
Epoch Step: 5 / 8 Loss (mean): 79.02957490086555 Loss (std): 35.05960590786743 Loss ratio: 0.4436264012788388 Tokens per Sec: 4398.692908517755
Mean loss per sample: 83.75025496521934 Std loss per sample: 43.27077954410934 ratio: 0.5166644514942583
Epoch ended with duration 0:00:01.026014
b'BLEU = 2.07, 7.4/2.3/1.3/1.0 (BP=0.956, ratio=0.957, hyp_len=2979, ref_len=3113)\n'
Validation perplexity: 84936.53898844383
Validation accuracy: 0.0
Validation BLEU: 2.07
Model saved checkpoint_commit_msg_generator!
Epoch 261 / 1000
Epoch Step: 5 / 67 Loss (mean): 15.679841701174155 Loss (std): 21.927107533014443 Loss ratio: 1.3984265881569757 Tokens per Sec: 3084.26149361066
Epoch Step: 10 / 67 Loss (mean): 2.07884389947867 Loss (std): 1.7153847025100655 Loss ratio: 0.8251628238850678 Tokens per Sec: 2628.42500930717
Epoch Step: 15 / 67 Loss (mean): 2.3924325455445796 Loss (std): 1.8970044735099783 Loss ratio: 0.7929186873179619 Tokens per Sec: 2975.9934274919
Epoch Step: 20 / 67 Loss (mean): 2.01540159562137 Loss (std): 1.693136735817148 Loss ratio: 0.8400989358625252 Tokens per Sec: 2361.486740765006
Epoch Step: 25 / 67 Loss (mean): 10.269511355203576 Loss (std): 17.326646811652086 Loss ratio: 1.6871929162308827 Tokens per Sec: 2500.9661579168164
Epoch Step: 30 / 67 Loss (mean): 1.8781647802097723 Loss (std): 1.4720757654997345 Loss ratio: 0.7837841391825686 Tokens per Sec: 2908.187068643217
Epoch Step: 35 / 67 Loss (mean): 2.634381996933371 Loss (std): 1.9334481072644036 Loss ratio: 0.7339285303023974 Tokens per Sec: 3108.261474570402
Epoch Step: 40 / 67 Loss (mean): 2.6636462691240013 Loss (std): 2.1351608234719373 Loss ratio: 0.8015932326382557 Tokens per Sec: 3059.859931997506
Epoch Step: 45 / 67 Loss (mean): 1.906784639460966 Loss (std): 1.5420574977516055 Loss ratio: 0.8087213762050935 Tokens per Sec: 2357.933283351373
Epoch Step: 50 / 67 Loss (mean): 1.108901010116651 Loss (std): 0.8121724529468929 Loss ratio: 0.7324120417758987 Tokens per Sec: 2296.8851268896033
Epoch Step: 55 / 67 Loss (mean): 3.765377914533019 Loss (std): 2.7017590247914214 Loss ratio: 0.7175266563187702 Tokens per Sec: 3337.6803882978543
Epoch Step: 60 / 67 Loss (mean): 2.6637520891963504 Loss (std): 2.045340027942196 Loss ratio: 0.7678417358123112 Tokens per Sec: 3264.0828882942014
Epoch Step: 65 / 67 Loss (mean): 2.265322998398915 Loss (std): 2.226599506053695 Loss ratio: 0.9829059730675984 Tokens per Sec: 2379.883135748865
Mean loss per sample: 3.492498317876402 Std loss per sample: 7.262757110840268 ratio: 2.079530596669365
Epoch ended with duration 0:00:11.489069
Train perplexity: 1.6040537606565504
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print during classes can not used[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for developer[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 79.81994470953941 Loss (std): 36.813022618374006 Loss ratio: 0.4612008032871316 Tokens per Sec: 4152.384934146979
Mean loss per sample: 86.46610971918848 Std loss per sample: 44.12091773791099 ratio: 0.510268333815413
Epoch ended with duration 0:00:01.057822
b'BLEU = 2.89, 8.9/3.2/2.2/1.8 (BP=0.894, ratio=0.899, hyp_len=2800, ref_len=3113)\n'
Validation perplexity: 122725.64581502129
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.89
Model saved best_on_validation_commit_msg_generator!
Epoch 262 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.4590825585182756 Loss (std): 1.7486995798283533 Loss ratio: 0.7111186949664818 Tokens per Sec: 2588.0080572330316
Epoch Step: 10 / 67 Loss (mean): 1.976298505673185 Loss (std): 1.728328485920831 Loss ratio: 0.8745280538134657 Tokens per Sec: 2444.862753655252
Epoch Step: 15 / 67 Loss (mean): 2.9441657604184 Loss (std): 1.7966803072800448 Loss ratio: 0.6102510705867036 Tokens per Sec: 3238.910282610976
Epoch Step: 20 / 67 Loss (mean): 2.8025451445719227 Loss (std): 1.9289198039515059 Loss ratio: 0.6882743022668205 Tokens per Sec: 3216.260635045129
Epoch Step: 25 / 67 Loss (mean): 1.8417217817623168 Loss (std): 1.4760116392248628 Loss ratio: 0.8014302995387765 Tokens per Sec: 2358.4332920472193
Epoch Step: 30 / 67 Loss (mean): 3.071432827040553 Loss (std): 2.272829474264685 Loss ratio: 0.739989966329378 Tokens per Sec: 2863.3104766296137
Epoch Step: 35 / 67 Loss (mean): 2.0511967235943303 Loss (std): 1.5232250609271876 Loss ratio: 0.7426031074474547 Tokens per Sec: 2863.5983190314264
Epoch Step: 40 / 67 Loss (mean): 2.1078432812719257 Loss (std): 1.5264917104510969 Loss ratio: 0.72419601780355 Tokens per Sec: 2829.482715876682
Epoch Step: 45 / 67 Loss (mean): 3.3548265579156578 Loss (std): 2.3219662800054355 Loss ratio: 0.6921270712272127 Tokens per Sec: 3338.9690468977205
Epoch Step: 50 / 67 Loss (mean): 1.8943073311820626 Loss (std): 1.6336887400095925 Loss ratio: 0.8624201116247372 Tokens per Sec: 3160.144885691925
Epoch Step: 55 / 67 Loss (mean): 2.649169455806259 Loss (std): 2.1016075738159645 Loss ratio: 0.7933080948105499 Tokens per Sec: 2876.4251269064935
Epoch Step: 60 / 67 Loss (mean): 2.0412724620546214 Loss (std): 1.6407631399316918 Loss ratio: 0.8037942853940228 Tokens per Sec: 2407.1055962731366
Epoch Step: 65 / 67 Loss (mean): 8.472149216773687 Loss (std): 15.458397794094275 Loss ratio: 1.8246134951788595 Tokens per Sec: 2401.5114831640312
Mean loss per sample: 3.1852506267956286 Std loss per sample: 6.288947453593625 ratio: 1.9743964260420928
Epoch ended with duration 0:00:11.431836
Train perplexity: 1.53873938586717
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings length not active ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space in new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 79.58100336790085 Loss (std): 35.811825711905584 Loss ratio: 0.45000470208133053 Tokens per Sec: 4407.256731989285
Mean loss per sample: 84.03520039701071 Std loss per sample: 43.73305660821188 ratio: 0.5204135457713212
Epoch ended with duration 0:00:01.025103
b'BLEU = 2.25, 8.1/2.6/1.5/1.1 (BP=0.913, ratio=0.916, hyp_len=2853, ref_len=3113)\n'
Validation perplexity: 88280.53020981188
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.25
Epoch 263 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.9929623859934509 Loss (std): 1.8226842130172944 Loss ratio: 0.9145602675831355 Tokens per Sec: 2332.640122599867
Epoch Step: 10 / 67 Loss (mean): 2.2516147155547515 Loss (std): 1.7054686700846984 Loss ratio: 0.7574424959576204 Tokens per Sec: 2895.401243614274
Epoch Step: 15 / 67 Loss (mean): 11.08532542566536 Loss (std): 20.736437237403287 Loss ratio: 1.870620522280125 Tokens per Sec: 2393.7400707951097
Epoch Step: 20 / 67 Loss (mean): 2.1278036898584105 Loss (std): 1.6642083219325974 Loss ratio: 0.7821249346754061 Tokens per Sec: 2469.1341613115674
Epoch Step: 25 / 67 Loss (mean): 2.0392095893621445 Loss (std): 1.6644392790245572 Loss ratio: 0.8162178560297896 Tokens per Sec: 3018.8902155044666
Epoch Step: 30 / 67 Loss (mean): 4.239663231186569 Loss (std): 2.7829952485201526 Loss ratio: 0.65641894102548 Tokens per Sec: 3342.289511474175
Epoch Step: 35 / 67 Loss (mean): 2.35464618972037 Loss (std): 1.996350809095815 Loss ratio: 0.8478347268524853 Tokens per Sec: 2747.2711943440927
Epoch Step: 40 / 67 Loss (mean): 1.5308247007778846 Loss (std): 1.1922530921708345 Loss ratio: 0.7788305816890688 Tokens per Sec: 2845.5087626418212
Epoch Step: 45 / 67 Loss (mean): 2.3119115142617375 Loss (std): 1.820729782213403 Loss ratio: 0.7875430227245598 Tokens per Sec: 2393.215179246196
Epoch Step: 50 / 67 Loss (mean): 2.21095730853267 Loss (std): 1.7454166599019794 Loss ratio: 0.7894393316261485 Tokens per Sec: 2642.0455917378936
Epoch Step: 55 / 67 Loss (mean): 2.6924571797717363 Loss (std): 1.6239554324627683 Loss ratio: 0.6031499570962334 Tokens per Sec: 3549.1555700765903
Epoch Step: 60 / 67 Loss (mean): 2.8736182539723814 Loss (std): 1.8420217519198836 Loss ratio: 0.6410112927747248 Tokens per Sec: 2960.8883383590774
Epoch Step: 65 / 67 Loss (mean): 9.550431197742 Loss (std): 16.120391519182547 Loss ratio: 1.687922899543413 Tokens per Sec: 2607.5407061003525
Mean loss per sample: 3.5558667279232163 Std loss per sample: 7.639912774148654 ratio: 2.148537433687989
Epoch ended with duration 0:00:11.479303
Train perplexity: 1.617865605855963
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings from inactive ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: adapt colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 79.86800128221512 Loss (std): 36.44619478535726 Loss ratio: 0.4563303726178639 Tokens per Sec: 4381.948784621457
Mean loss per sample: 84.7546822028082 Std loss per sample: 44.666069367177506 ratio: 0.527004151349382
Epoch ended with duration 0:00:01.025426
b'BLEU = 2.38, 8.1/2.7/1.7/1.3 (BP=0.903, ratio=0.907, hyp_len=2825, ref_len=3113)\n'
Validation perplexity: 97321.72659650628
Validation accuracy: 0.0
Validation BLEU: 2.38
Epoch 264 / 1000
Epoch Step: 5 / 67 Loss (mean): 10.42370422417298 Loss (std): 15.06570590944136 Loss ratio: 1.4453312935053737 Tokens per Sec: 2981.2597477749773
Epoch Step: 10 / 67 Loss (mean): 2.3380051092244685 Loss (std): 1.591676400264487 Loss ratio: 0.6807839700540502 Tokens per Sec: 2639.373690671734
Epoch Step: 15 / 67 Loss (mean): 1.7861318280920386 Loss (std): 1.5447577785808937 Loss ratio: 0.8648621307146277 Tokens per Sec: 2859.764009152911
Epoch Step: 20 / 67 Loss (mean): 2.760473974281922 Loss (std): 2.575378781852491 Loss ratio: 0.9329480393027144 Tokens per Sec: 2569.262095974644
Epoch Step: 25 / 67 Loss (mean): 2.0799325614934787 Loss (std): 1.6860037462601496 Loss ratio: 0.8106050058899642 Tokens per Sec: 2676.634596207577
Epoch Step: 30 / 67 Loss (mean): 2.1924468155484647 Loss (std): 1.941073507336943 Loss ratio: 0.8853457669172067 Tokens per Sec: 2325.6427464502185
Epoch Step: 35 / 67 Loss (mean): 9.544679601676762 Loss (std): 14.410035968764461 Loss ratio: 1.5097453838296444 Tokens per Sec: 3117.7340192501615
Epoch Step: 40 / 67 Loss (mean): 16.760711806520703 Loss (std): 22.5387682999522 Loss ratio: 1.344738132850871 Tokens per Sec: 2663.3816786164325
Epoch Step: 45 / 67 Loss (mean): 2.593492985004559 Loss (std): 1.9273139659422829 Loss ratio: 0.7431344434266495 Tokens per Sec: 3136.5305471466036
Epoch Step: 50 / 67 Loss (mean): 2.8624993334524333 Loss (std): 1.9832265650469705 Loss ratio: 0.6928304023934985 Tokens per Sec: 2911.5663407683596
Epoch Step: 55 / 67 Loss (mean): 2.179300121613778 Loss (std): 1.8808346758656378 Loss ratio: 0.863045276422448 Tokens per Sec: 2898.7573516670604
Epoch Step: 60 / 67 Loss (mean): 2.924511315417476 Loss (std): 1.819645219472577 Loss ratio: 0.6222048825319116 Tokens per Sec: 2956.4716101290683
Epoch Step: 65 / 67 Loss (mean): 2.499905725417193 Loss (std): 1.9371464673647558 Loss ratio: 0.7748878078358247 Tokens per Sec: 2405.598020459202
Mean loss per sample: 4.151434253581197 Std loss per sample: 8.883722271872069 ratio: 2.139916407012494
Epoch ended with duration 0:00:11.550653
Train perplexity: 1.753629902190539
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print during keys ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 93.99301409721375 Loss (std): 35.505376316167805 Loss ratio: 0.37774484260549207 Tokens per Sec: 4279.080020994555
Mean loss per sample: 86.21373721273218 Std loss per sample: 43.52357286819067 ratio: 0.5048333858999333
Epoch ended with duration 0:00:01.037831
b'BLEU = 2.47, 8.1/2.6/1.7/1.2 (BP=0.957, ratio=0.958, hyp_len=2982, ref_len=3113)\n'
Validation perplexity: 118599.27187145101
Validation accuracy: 0.0
Validation BLEU: 2.47
Epoch 265 / 1000
Epoch Step: 5 / 67 Loss (mean): 3.0267685293219984 Loss (std): 2.050148285568625 Loss ratio: 0.6773389724743377 Tokens per Sec: 2837.1817528194997
Epoch Step: 10 / 67 Loss (mean): 2.1134293894283473 Loss (std): 1.6174478276541222 Loss ratio: 0.765319076068881 Tokens per Sec: 2292.294229931328
Epoch Step: 15 / 67 Loss (mean): 2.0566355687915348 Loss (std): 1.6879768385648635 Loss ratio: 0.8207466914309507 Tokens per Sec: 2504.127312024776
Epoch Step: 20 / 67 Loss (mean): 2.4483186359284446 Loss (std): 1.6435498376749347 Loss ratio: 0.6712973603828623 Tokens per Sec: 2472.5047717130105
Epoch Step: 25 / 67 Loss (mean): 10.289123076945543 Loss (std): 15.969430249796421 Loss ratio: 1.552069124877953 Tokens per Sec: 3407.1530737833573
Epoch Step: 30 / 67 Loss (mean): 2.185251824907027 Loss (std): 1.8825361569885932 Loss ratio: 0.8614733256514666 Tokens per Sec: 2758.1919903533153
Epoch Step: 35 / 67 Loss (mean): 3.464451067149639 Loss (std): 2.2809045190638737 Loss ratio: 0.6583740035157942 Tokens per Sec: 2963.5751861526464
Epoch Step: 40 / 67 Loss (mean): 2.2381611661985517 Loss (std): 1.8800974969787376 Loss ratio: 0.8400188178459131 Tokens per Sec: 2350.3846811862695
Epoch Step: 45 / 67 Loss (mean): 11.249653222970665 Loss (std): 15.751449060537816 Loss ratio: 1.4001719651566624 Tokens per Sec: 2699.408889103036
Epoch Step: 50 / 67 Loss (mean): 2.1357007845072076 Loss (std): 1.709150991911357 Loss ratio: 0.8002764265059382 Tokens per Sec: 3084.771981371843
Epoch Step: 55 / 67 Loss (mean): 2.1453492413274944 Loss (std): 1.7719719668652938 Loss ratio: 0.8259596772080041 Tokens per Sec: 2969.6609264126737
Epoch Step: 60 / 67 Loss (mean): 2.217629679478705 Loss (std): 1.63839065595449 Loss ratio: 0.7388026373905783 Tokens per Sec: 3075.0980857249388
Epoch Step: 65 / 67 Loss (mean): 2.4810412862570956 Loss (std): 1.7957695886716565 Loss ratio: 0.723796737530619 Tokens per Sec: 2595.4611972673392
Mean loss per sample: 3.2067852399096486 Std loss per sample: 6.6987113945279555 ratio: 2.088917995243327
Epoch ended with duration 0:00:11.479842
Train perplexity: 1.543229236197549
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings from inactive device ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: update colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 80.39673599600792 Loss (std): 36.29329965675531 Loss ratio: 0.4514275263433262 Tokens per Sec: 4417.531010416957
Mean loss per sample: 85.04736739885611 Std loss per sample: 43.77773177267328 ratio: 0.5147452897320616
Epoch ended with duration 0:00:01.036254
b'BLEU = 2.41, 8.1/2.7/1.6/1.2 (BP=0.941, ratio=0.943, hyp_len=2936, ref_len=3113)\n'
Validation perplexity: 101259.48146942955
Validation accuracy: 0.0
Validation BLEU: 2.41
Model saved checkpoint_commit_msg_generator!
Epoch 266 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.9066292640054598 Loss (std): 1.4797450335639586 Loss ratio: 0.7761052772552647 Tokens per Sec: 2891.3023501347075
Epoch Step: 10 / 67 Loss (mean): 1.9022753114113584 Loss (std): 1.279667700462478 Loss ratio: 0.6727037315713528 Tokens per Sec: 2528.889302257742
Epoch Step: 15 / 67 Loss (mean): 2.5592912210850045 Loss (std): 1.7590442842793086 Loss ratio: 0.6873169687713642 Tokens per Sec: 3011.0786283256666
Epoch Step: 20 / 67 Loss (mean): 2.482763618696481 Loss (std): 1.4551816770367214 Loss ratio: 0.5861136622425343 Tokens per Sec: 2844.6800244041333
Epoch Step: 25 / 67 Loss (mean): 1.8609719838423189 Loss (std): 1.3722144529076474 Loss ratio: 0.7373643799163803 Tokens per Sec: 2632.866366779514
Epoch Step: 30 / 67 Loss (mean): 2.1713871526299044 Loss (std): 1.7429038421758576 Loss ratio: 0.8026683956681407 Tokens per Sec: 2521.7175955004664
Epoch Step: 35 / 67 Loss (mean): 2.1376146043185145 Loss (std): 1.7359697848908358 Loss ratio: 0.812106065042662 Tokens per Sec: 2967.9508739201706
Epoch Step: 40 / 67 Loss (mean): 2.9012930884491652 Loss (std): 2.2897269929235677 Loss ratio: 0.7892091295566077 Tokens per Sec: 2755.5316009271105
Epoch Step: 45 / 67 Loss (mean): 2.379802509211004 Loss (std): 1.5280313691619185 Loss ratio: 0.6420832666776706 Tokens per Sec: 3267.7929284674456
Epoch Step: 50 / 67 Loss (mean): 1.9079110620368738 Loss (std): 1.6723753360748912 Loss ratio: 0.8765478482469061 Tokens per Sec: 2308.6675138846176
Epoch Step: 55 / 67 Loss (mean): 2.5857091015204787 Loss (std): 2.0432599496525383 Loss ratio: 0.7902126145787385 Tokens per Sec: 3385.6850800998186
Epoch Step: 60 / 67 Loss (mean): 2.1436608927324414 Loss (std): 1.579010973375555 Loss ratio: 0.7365955029215703 Tokens per Sec: 2567.791594887334
Epoch Step: 65 / 67 Loss (mean): 2.064680996350944 Loss (std): 1.502649953357125 Loss ratio: 0.7277879517527714 Tokens per Sec: 2483.756397470284
Mean loss per sample: 3.0474079131217304 Std loss per sample: 6.333778545853411 ratio: 2.0784150748513217
Epoch ended with duration 0:00:11.455202
Train perplexity: 1.510307723989477
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: adapt colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 80.25574743747711 Loss (std): 36.03710227525784 Loss ratio: 0.4490283054597726 Tokens per Sec: 4394.522884792542
Mean loss per sample: 85.90295555454786 Std loss per sample: 43.511319632076685 ratio: 0.506517143108624
Epoch ended with duration 0:00:01.040290
b'BLEU = 2.47, 8.1/2.6/1.7/1.2 (BP=0.959, ratio=0.960, hyp_len=2989, ref_len=3113)\n'
Validation perplexity: 113708.0121659068
Validation accuracy: 0.0
Validation BLEU: 2.47
Epoch 267 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.120398516766727 Loss (std): 1.6909407395147853 Loss ratio: 0.7974636494715168 Tokens per Sec: 2620.8757611927385
Epoch Step: 10 / 67 Loss (mean): 2.1238145461538807 Loss (std): 1.933208065299142 Loss ratio: 0.9102527660901856 Tokens per Sec: 2893.8475241158135
Epoch Step: 15 / 67 Loss (mean): 1.9943208130134735 Loss (std): 1.5182475414968337 Loss ratio: 0.7612855121351915 Tokens per Sec: 3323.776973085149
Epoch Step: 20 / 67 Loss (mean): 3.103029895108193 Loss (std): 1.96350138715531 Loss ratio: 0.6327690849033373 Tokens per Sec: 2677.586060341096
Epoch Step: 25 / 67 Loss (mean): 2.086208962602541 Loss (std): 1.5072560893704379 Loss ratio: 0.7224856744408477 Tokens per Sec: 2322.4214344163533
Epoch Step: 30 / 67 Loss (mean): 1.2481352062452407 Loss (std): 1.1091620186439104 Loss ratio: 0.888655342060735 Tokens per Sec: 2793.436043708892
Epoch Step: 35 / 67 Loss (mean): 2.627804363379255 Loss (std): 1.9308705297810302 Loss ratio: 0.7347847338597175 Tokens per Sec: 2952.4426054025644
Epoch Step: 40 / 67 Loss (mean): 1.977826014335733 Loss (std): 1.6807572593837967 Loss ratio: 0.849800360194115 Tokens per Sec: 2663.3624236430983
Epoch Step: 45 / 67 Loss (mean): 1.8834290853701532 Loss (std): 1.6305397942900608 Loss ratio: 0.8657293268727494 Tokens per Sec: 2444.7625193355716
Epoch Step: 50 / 67 Loss (mean): 2.468778176466003 Loss (std): 1.8031223367435758 Loss ratio: 0.7303703321473387 Tokens per Sec: 3265.52400781799
Epoch Step: 55 / 67 Loss (mean): 2.3839356142561883 Loss (std): 1.7268372907894958 Loss ratio: 0.7243640643911796 Tokens per Sec: 2693.3728721505477
Epoch Step: 60 / 67 Loss (mean): 2.3983496325090528 Loss (std): 2.062334257870943 Loss ratio: 0.8598972518087012 Tokens per Sec: 2715.162242474012
Epoch Step: 65 / 67 Loss (mean): 2.2344068109523505 Loss (std): 2.2549310238476648 Loss ratio: 1.0091855309403421 Tokens per Sec: 3024.6729125336665
Mean loss per sample: 3.1720163352166177 Std loss per sample: 6.232287509345397 ratio: 1.964771568214447
Epoch ended with duration 0:00:11.437162
Train perplexity: 1.535986590780465
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings from inactive ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for developer[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 80.06836998462677 Loss (std): 35.373201300892134 Loss ratio: 0.44178745374339246 Tokens per Sec: 4389.694164709165
Mean loss per sample: 84.49539694141168 Std loss per sample: 43.57036879703317 ratio: 0.5156537559938851
Epoch ended with duration 0:00:01.028079
b'BLEU = 2.40, 7.6/2.6/1.6/1.2 (BP=0.955, ratio=0.956, hyp_len=2977, ref_len=3113)\n'
Validation perplexity: 93961.4378100358
Validation accuracy: 0.0
Validation BLEU: 2.4
Epoch 268 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.115570706781 Loss (std): 1.9019345017830436 Loss ratio: 0.899017222958707 Tokens per Sec: 2682.359374638356
Epoch Step: 10 / 67 Loss (mean): 2.384934318251908 Loss (std): 2.2087285880163385 Loss ratio: 0.9261171559790697 Tokens per Sec: 2954.71224431951
Epoch Step: 15 / 67 Loss (mean): 1.6983574802288786 Loss (std): 1.251357357313381 Loss ratio: 0.7368044548222805 Tokens per Sec: 2403.2546136323813
Epoch Step: 20 / 67 Loss (mean): 2.503410934965359 Loss (std): 1.6375160282631502 Loss ratio: 0.6541139552407561 Tokens per Sec: 3350.399622811709
Epoch Step: 25 / 67 Loss (mean): 2.282029783469625 Loss (std): 1.3876003228339981 Loss ratio: 0.6080553079917627 Tokens per Sec: 2788.5894507562257
Epoch Step: 30 / 67 Loss (mean): 1.8290439038974 Loss (std): 1.4667132223847072 Loss ratio: 0.8019015941932154 Tokens per Sec: 2336.1477424095374
Epoch Step: 35 / 67 Loss (mean): 2.499319916125387 Loss (std): 1.7525269398490315 Loss ratio: 0.7012015262799635 Tokens per Sec: 3004.236413305784
Epoch Step: 40 / 67 Loss (mean): 1.976685352216009 Loss (std): 1.6372447317626588 Loss ratio: 0.8282778692760523 Tokens per Sec: 3023.357236662486
Epoch Step: 45 / 67 Loss (mean): 1.9683419772190973 Loss (std): 1.3941311403883723 Loss ratio: 0.7082768932043106 Tokens per Sec: 2477.5984533672754
Epoch Step: 50 / 67 Loss (mean): 11.848586611798964 Loss (std): 18.87025785314286 Loss ratio: 1.592616779654683 Tokens per Sec: 2762.7434108525013
Epoch Step: 55 / 67 Loss (mean): 1.7483965642168187 Loss (std): 1.3868660996703075 Loss ratio: 0.7932217027042398 Tokens per Sec: 3217.3529906233166
Epoch Step: 60 / 67 Loss (mean): 9.475028602581006 Loss (std): 16.07468099869421 Loss ratio: 1.6965311317704574 Tokens per Sec: 3024.3593289211854
Epoch Step: 65 / 67 Loss (mean): 1.9064841251529288 Loss (std): 1.545386857111857 Loss ratio: 0.810595187614213 Tokens per Sec: 2376.265303023415
Mean loss per sample: 2.908517371317563 Std loss per sample: 6.035907718553945 ratio: 2.075252421758674
Epoch ended with duration 0:00:11.420137
Train perplexity: 1.4821912544378943
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: fix colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 80.04622420668602 Loss (std): 36.34975523420084 Loss ratio: 0.4541095547535477 Tokens per Sec: 4382.749359022665
Mean loss per sample: 84.66715789500807 Std loss per sample: 43.764383489714064 ratio: 0.5168991681991298
Epoch ended with duration 0:00:01.024868
b'BLEU = 2.51, 8.1/2.8/1.7/1.3 (BP=0.936, ratio=0.938, hyp_len=2919, ref_len=3113)\n'
Validation perplexity: 96174.20166808674
Validation accuracy: 0.0
Validation BLEU: 2.51
Epoch 269 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.679347824130673 Loss (std): 2.3582922103230297 Loss ratio: 0.8801739696070213 Tokens per Sec: 2513.688402264336
Epoch Step: 10 / 67 Loss (mean): 1.9799528277944773 Loss (std): 1.7094317536677397 Loss ratio: 0.8633699397636264 Tokens per Sec: 2590.2501902019535
Epoch Step: 15 / 67 Loss (mean): 2.4637475083582103 Loss (std): 1.7550587836883225 Loss ratio: 0.7123533469782611 Tokens per Sec: 2675.421230937132
Epoch Step: 20 / 67 Loss (mean): 2.1937701299320906 Loss (std): 1.9764292821289102 Loss ratio: 0.900928157951577 Tokens per Sec: 3156.2717341610037
Epoch Step: 25 / 67 Loss (mean): 1.9166592336259782 Loss (std): 1.8618673751100363 Loss ratio: 0.9714128325188586 Tokens per Sec: 2158.5551358830385
Epoch Step: 30 / 67 Loss (mean): 1.9188117199228145 Loss (std): 1.6301293576316933 Loss ratio: 0.8495514910119824 Tokens per Sec: 2646.659538616459
Epoch Step: 35 / 67 Loss (mean): 2.233033876866102 Loss (std): 1.6422703347559782 Loss ratio: 0.735443537946134 Tokens per Sec: 3067.769647947413
Epoch Step: 40 / 67 Loss (mean): 2.4631631360389292 Loss (std): 1.6968028185050574 Loss ratio: 0.6888714733014908 Tokens per Sec: 2573.0222967372088
Epoch Step: 45 / 67 Loss (mean): 1.877415704773739 Loss (std): 1.5571667208430067 Loss ratio: 0.8294203126582838 Tokens per Sec: 2870.1570881248244
Epoch Step: 50 / 67 Loss (mean): 2.245052879326977 Loss (std): 1.7288000677629416 Loss ratio: 0.7700487073966837 Tokens per Sec: 2682.330532377819
Epoch Step: 55 / 67 Loss (mean): 1.7583799312706105 Loss (std): 1.2697546671710813 Loss ratio: 0.7221162187932575 Tokens per Sec: 3104.1163743506963
Epoch Step: 60 / 67 Loss (mean): 1.915927940455731 Loss (std): 1.5376117120202129 Loss ratio: 0.8025415150292499 Tokens per Sec: 3119.0211330078373
Epoch Step: 65 / 67 Loss (mean): 1.89108997117728 Loss (std): 1.4134819534686331 Loss ratio: 0.7474429958447104 Tokens per Sec: 2585.133292585859
Mean loss per sample: 2.920335607843118 Std loss per sample: 6.126200390949261 ratio: 2.0977727267017467
Epoch ended with duration 0:00:11.465519
Train perplexity: 1.484563180078667
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print length during command ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: update colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 81.02876591682434 Loss (std): 36.7566691778716 Loss ratio: 0.4536249412412643 Tokens per Sec: 4413.810085642806
Mean loss per sample: 85.22925334094 Std loss per sample: 43.895178863374895 ratio: 0.5150247965658262
Epoch ended with duration 0:00:01.022448
b'BLEU = 2.49, 8.0/2.7/1.7/1.2 (BP=0.953, ratio=0.954, hyp_len=2971, ref_len=3113)\n'
Validation perplexity: 103786.42156981163
Validation accuracy: 0.0
Validation BLEU: 2.49
Epoch 270 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.072370820096694 Loss (std): 1.770364635404177 Loss ratio: 0.8542702002152175 Tokens per Sec: 2747.046921091182
Epoch Step: 10 / 67 Loss (mean): 2.449792059487663 Loss (std): 2.09618276480217 Loss ratio: 0.855657424753248 Tokens per Sec: 2373.9120288244276
Epoch Step: 15 / 67 Loss (mean): 2.9177067219279706 Loss (std): 2.1997522501550053 Loss ratio: 0.7539319266130513 Tokens per Sec: 2804.7235619935145
Epoch Step: 20 / 67 Loss (mean): 1.8693166307057254 Loss (std): 1.3877602448232587 Loss ratio: 0.7423890752522412 Tokens per Sec: 2914.344831840473
Epoch Step: 25 / 67 Loss (mean): 2.0837625747080892 Loss (std): 1.7185382771226272 Loss ratio: 0.8247284493836224 Tokens per Sec: 2357.375007833232
Epoch Step: 30 / 67 Loss (mean): 10.432745014782995 Loss (std): 16.408206088723738 Loss ratio: 1.572760195468559 Tokens per Sec: 2792.054493559804
Epoch Step: 35 / 67 Loss (mean): 2.232994438149035 Loss (std): 1.7259548139888998 Loss ratio: 0.7729328763664864 Tokens per Sec: 3015.1388229213
Epoch Step: 40 / 67 Loss (mean): 2.0286494202446193 Loss (std): 2.133049321910544 Loss ratio: 1.0514627616896646 Tokens per Sec: 2415.7213673565743
Epoch Step: 45 / 67 Loss (mean): 2.2333406301913783 Loss (std): 1.9355768665583393 Loss ratio: 0.8666733772682391 Tokens per Sec: 3038.845066038394
Epoch Step: 50 / 67 Loss (mean): 2.8285526731051505 Loss (std): 2.2131955215691033 Loss ratio: 0.782448049355038 Tokens per Sec: 2551.8465668704134
Epoch Step: 55 / 67 Loss (mean): 2.35701341094682 Loss (std): 1.858444502113885 Loss ratio: 0.7884743011993902 Tokens per Sec: 3077.3678751775656
Epoch Step: 60 / 67 Loss (mean): 2.252470680803526 Loss (std): 1.7688122620847302 Loss ratio: 0.7852764864640724 Tokens per Sec: 2756.6465738736565
Epoch Step: 65 / 67 Loss (mean): 14.156386845279485 Loss (std): 20.02311232935577 Loss ratio: 1.414422518132342 Tokens per Sec: 2919.0163930769195
Mean loss per sample: 4.1388217911174 Std loss per sample: 9.693464910668405 ratio: 2.3420831820959753
Epoch ended with duration 0:00:11.582750
Train perplexity: 1.7506399502447871
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings not cipher suites ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 80.21181440353394 Loss (std): 35.86894167611747 Loss ratio: 0.44717778724797397 Tokens per Sec: 4398.338980338222
Mean loss per sample: 85.14309847696883 Std loss per sample: 43.81364753068845 ratio: 0.5145883614106436
Epoch ended with duration 0:00:01.022022
b'BLEU = 2.54, 8.6/2.8/1.7/1.3 (BP=0.946, ratio=0.948, hyp_len=2950, ref_len=3113)\n'
Validation perplexity: 102581.70690164881
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.54
Model saved checkpoint_commit_msg_generator!
Epoch 271 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.085448750294745 Loss (std): 1.4899746438258321 Loss ratio: 0.7144623638510647 Tokens per Sec: 2984.2558734508343
Epoch Step: 10 / 67 Loss (mean): 2.1077623047167435 Loss (std): 1.4285650608163143 Loss ratio: 0.6777638340051324 Tokens per Sec: 2731.0108194261993
Epoch Step: 15 / 67 Loss (mean): 1.870252021588385 Loss (std): 1.4366219605896906 Loss ratio: 0.768143514353527 Tokens per Sec: 2940.891575261365
Epoch Step: 20 / 67 Loss (mean): 10.938998879049905 Loss (std): 19.88637168411756 Loss ratio: 1.817933423706939 Tokens per Sec: 3322.0997871137806
Epoch Step: 25 / 67 Loss (mean): 1.4168561294320083 Loss (std): 1.6317280941997854 Loss ratio: 1.1516540460984668 Tokens per Sec: 2400.3772616008487
Epoch Step: 30 / 67 Loss (mean): 5.468513116706163 Loss (std): 11.546814886145162 Loss ratio: 2.111509040889003 Tokens per Sec: 2533.2034340560313
Epoch Step: 35 / 67 Loss (mean): 17.546950485324487 Loss (std): 24.232906419514514 Loss ratio: 1.3810323588581317 Tokens per Sec: 2938.34064573802
Epoch Step: 40 / 67 Loss (mean): 2.019512029015459 Loss (std): 1.7510521847760339 Loss ratio: 0.8670669744065336 Tokens per Sec: 2913.4800527990355
Epoch Step: 45 / 67 Loss (mean): 2.416723942500539 Loss (std): 1.6694847869274896 Loss ratio: 0.6908049188274705 Tokens per Sec: 2890.639846420635
Epoch Step: 50 / 67 Loss (mean): 2.1346833952120505 Loss (std): 1.658852536955046 Loss ratio: 0.7770953485072959 Tokens per Sec: 2618.56037640268
Epoch Step: 55 / 67 Loss (mean): 1.7443711899541086 Loss (std): 1.4622595248628731 Loss ratio: 0.8382731458098335 Tokens per Sec: 2953.1415226395548
Epoch Step: 60 / 67 Loss (mean): 2.1566480076289736 Loss (std): 1.6709827558274097 Loss ratio: 0.7748055083242323 Tokens per Sec: 2760.224294089365
Epoch Step: 65 / 67 Loss (mean): 1.392278584302403 Loss (std): 1.128307605789985 Loss ratio: 0.8104036207346536 Tokens per Sec: 2251.091709140356
Mean loss per sample: 2.8108374037311803 Std loss per sample: 5.78231252512 ratio: 2.057149416556221
Epoch ended with duration 0:00:11.428046
Train perplexity: 1.4627313832696769
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings length not stack traces[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: update colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.39352908730507 Loss (std): 37.27897415394586 Loss ratio: 0.3907914353375876 Tokens per Sec: 4287.3769310718
Mean loss per sample: 87.87280119931111 Std loss per sample: 44.12613838282532 ratio: 0.5021592322149763
Epoch ended with duration 0:00:01.052871
b'BLEU = 2.46, 8.1/2.5/1.6/1.2 (BP=0.986, ratio=0.987, hyp_len=3071, ref_len=3113)\n'
Validation perplexity: 148499.74395079643
Validation accuracy: 0.0
Validation BLEU: 2.46
Epoch 272 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.9820088050328195 Loss (std): 1.505504768414179 Loss ratio: 0.7595853078913288 Tokens per Sec: 2321.0085484638307
Epoch Step: 10 / 67 Loss (mean): 2.3008724274113774 Loss (std): 2.021406930327972 Loss ratio: 0.8785393341438659 Tokens per Sec: 2981.044491365728
Epoch Step: 15 / 67 Loss (mean): 2.0490652942680754 Loss (std): 1.832177444638408 Loss ratio: 0.8941527874995611 Tokens per Sec: 3003.4594003043117
Epoch Step: 20 / 67 Loss (mean): 2.9308324647136033 Loss (std): 2.188768155347573 Loss ratio: 0.7468076670023703 Tokens per Sec: 3065.7007424608573
Epoch Step: 25 / 67 Loss (mean): 2.625200605019927 Loss (std): 1.910636098753001 Loss ratio: 0.7278057513393336 Tokens per Sec: 2942.7666138498344
Epoch Step: 30 / 67 Loss (mean): 2.460687844431959 Loss (std): 1.32908480309489 Loss ratio: 0.5401273493923016 Tokens per Sec: 2789.3052411180074
Epoch Step: 35 / 67 Loss (mean): 1.9220614951482276 Loss (std): 1.5470879457939555 Loss ratio: 0.8049107428140042 Tokens per Sec: 2927.9399139021375
Epoch Step: 40 / 67 Loss (mean): 1.9368690382689238 Loss (std): 1.6650826957380152 Loss ratio: 0.8596774809442885 Tokens per Sec: 2916.7160525697723
Epoch Step: 45 / 67 Loss (mean): 1.9441586972679943 Loss (std): 1.5613990642345341 Loss ratio: 0.8031232565678262 Tokens per Sec: 2272.0879297281713
Epoch Step: 50 / 67 Loss (mean): 2.507030977983959 Loss (std): 1.8037466360864396 Loss ratio: 0.7194752086936441 Tokens per Sec: 3327.8306236080925
Epoch Step: 55 / 67 Loss (mean): 1.7854459405643865 Loss (std): 1.5389786742933675 Loss ratio: 0.8619575868014745 Tokens per Sec: 2902.1500591423205
Epoch Step: 60 / 67 Loss (mean): 2.326195469358936 Loss (std): 1.950901840491963 Loss ratio: 0.8386663400344433 Tokens per Sec: 2634.2160863705826
Epoch Step: 65 / 67 Loss (mean): 1.7305785631178878 Loss (std): 1.6885017571342071 Loss ratio: 0.9756862780572797 Tokens per Sec: 2112.23850069384
Mean loss per sample: 2.8717952913866 Std loss per sample: 6.464231557409954 ratio: 2.2509374455756572
Epoch ended with duration 0:00:11.443697
Train perplexity: 1.4748452708820514
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print during classes can not construction[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for developer[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: update colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 80.5112252831459 Loss (std): 36.86403619329401 Loss ratio: 0.4578744897205169 Tokens per Sec: 4279.988105695019
Mean loss per sample: 86.49398737706122 Std loss per sample: 44.657859799686406 ratio: 0.5163117247098955
Epoch ended with duration 0:00:01.038148
b'BLEU = 2.45, 8.0/2.7/1.7/1.3 (BP=0.934, ratio=0.936, hyp_len=2913, ref_len=3113)\n'
Validation perplexity: 123190.17064636305
Validation accuracy: 0.0
Validation BLEU: 2.45
Epoch 273 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.771807107317727 Loss (std): 1.2998767943329597 Loss ratio: 0.7336446439143112 Tokens per Sec: 2823.8999749111567
Epoch Step: 10 / 67 Loss (mean): 1.9401360170450062 Loss (std): 1.449708640511692 Loss ratio: 0.7472201061035518 Tokens per Sec: 3192.0648807580023
Epoch Step: 15 / 67 Loss (mean): 10.539171592448838 Loss (std): 18.18504710861653 Loss ratio: 1.7254721539637754 Tokens per Sec: 2264.630885808953
Epoch Step: 20 / 67 Loss (mean): 1.9906062618247233 Loss (std): 1.453556699696817 Loss ratio: 0.7302080414257259 Tokens per Sec: 2799.637568011484
Epoch Step: 25 / 67 Loss (mean): 2.078520755923819 Loss (std): 1.7959916682495398 Loss ratio: 0.8640720392764584 Tokens per Sec: 2940.6866701412155
Epoch Step: 30 / 67 Loss (mean): 1.9670652793938643 Loss (std): 1.4998492636566516 Loss ratio: 0.762480675841535 Tokens per Sec: 2227.452013456184
Epoch Step: 35 / 67 Loss (mean): 2.3654357213526964 Loss (std): 1.830538485335417 Loss ratio: 0.7738694688725706 Tokens per Sec: 2809.1903644530344
Epoch Step: 40 / 67 Loss (mean): 2.069848399347393 Loss (std): 1.7798058332022408 Loss ratio: 0.859872555769495 Tokens per Sec: 3065.186346350004
Epoch Step: 45 / 67 Loss (mean): 2.7871020142920315 Loss (std): 2.097889471395477 Loss ratio: 0.7527135571779114 Tokens per Sec: 3009.4847569473304
Epoch Step: 50 / 67 Loss (mean): 2.302024384844117 Loss (std): 1.7206893771697331 Loss ratio: 0.7474679193227793 Tokens per Sec: 2786.405251492315
Epoch Step: 55 / 67 Loss (mean): 1.9909005197114311 Loss (std): 1.3639889545804318 Loss ratio: 0.6851115568437008 Tokens per Sec: 2826.170711050056
Epoch Step: 60 / 67 Loss (mean): 1.75380969629623 Loss (std): 1.6666897419398807 Loss ratio: 0.9503253092166539 Tokens per Sec: 2696.704806826697
Epoch Step: 65 / 67 Loss (mean): 9.659844811307266 Loss (std): 14.901778883825134 Loss ratio: 1.542651996477413 Tokens per Sec: 2648.6896865713134
Mean loss per sample: 3.1204525995553123 Std loss per sample: 6.916532145019293 ratio: 2.216515689424332
Epoch ended with duration 0:00:11.475654
Train perplexity: 1.5253079834204897
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings not cipher suites ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog method_1 for sslcontext.tls[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: adapt colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 82.19509917497635 Loss (std): 37.26021596271463 Loss ratio: 0.4533143257531127 Tokens per Sec: 4424.523946637227
Mean loss per sample: 86.12104481800658 Std loss per sample: 44.486660387953705 ratio: 0.5165596920237576
Epoch ended with duration 0:00:01.018808
b'BLEU = 2.66, 8.5/2.9/1.8/1.3 (BP=0.968, ratio=0.968, hyp_len=3014, ref_len=3113)\n'
Validation perplexity: 117118.80739713184
Validation accuracy: 0.0
Validation BLEU: 2.66
Epoch 274 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.8540139843244106 Loss (std): 1.309975356051828 Loss ratio: 0.7065617450178908 Tokens per Sec: 3505.284841449194
Epoch Step: 10 / 67 Loss (mean): 1.8087688113446347 Loss (std): 1.6934297169345804 Loss ratio: 0.936233368417984 Tokens per Sec: 2356.37808379177
Epoch Step: 15 / 67 Loss (mean): 7.301906796055846 Loss (std): 12.971141910505892 Loss ratio: 1.776404749169396 Tokens per Sec: 2717.906050431711
Epoch Step: 20 / 67 Loss (mean): 12.637115095567424 Loss (std): 21.707972635402374 Loss ratio: 1.717794961210461 Tokens per Sec: 2721.460322927499
Epoch Step: 25 / 67 Loss (mean): 1.9343494562781416 Loss (std): 1.631773881697859 Loss ratio: 0.8435776050711827 Tokens per Sec: 2910.201770466531
Epoch Step: 30 / 67 Loss (mean): 1.9681585144717246 Loss (std): 1.8149937262325297 Loss ratio: 0.922178631897286 Tokens per Sec: 3217.7358735543858
Epoch Step: 35 / 67 Loss (mean): 2.1924455186817795 Loss (std): 1.4864550192466175 Loss ratio: 0.6779894900833646 Tokens per Sec: 2740.484318822944
Epoch Step: 40 / 67 Loss (mean): 2.009233788601705 Loss (std): 1.8249488464523638 Loss ratio: 0.9082809859187211 Tokens per Sec: 2381.714064693862
Epoch Step: 45 / 67 Loss (mean): 19.052547295636032 Loss (std): 21.27653813686748 Loss ratio: 1.1167293174357242 Tokens per Sec: 2309.7470701327798
Epoch Step: 50 / 67 Loss (mean): 0.8937686821833873 Loss (std): 0.8133527874643492 Loss ratio: 0.9100260544791186 Tokens per Sec: 2440.564744711088
Epoch Step: 55 / 67 Loss (mean): 2.0291115628788248 Loss (std): 1.6815029910177148 Loss ratio: 0.8286892755330139 Tokens per Sec: 2812.9914630885696
Epoch Step: 60 / 67 Loss (mean): 8.068996355199488 Loss (std): 12.869397901915725 Loss ratio: 1.5949192855469518 Tokens per Sec: 2969.619308704292
Epoch Step: 65 / 67 Loss (mean): 2.075705685536377 Loss (std): 1.8298405137268219 Loss ratio: 0.8815510438099408 Tokens per Sec: 2781.769919020625
Mean loss per sample: 3.1300087728888775 Std loss per sample: 7.348073219224955 ratio: 2.347620646584631
Epoch ended with duration 0:00:11.503821
Train perplexity: 1.5272814020899148
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings when scoring ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: use colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 81.04832315444946 Loss (std): 37.7958805165323 Loss ratio: 0.46633760015622666 Tokens per Sec: 4399.820830085908
Mean loss per sample: 86.0720517183425 Std loss per sample: 45.57658603910651 ratio: 0.5295166680614151
Epoch ended with duration 0:00:01.023019
b'BLEU = 2.52, 8.5/3.0/1.9/1.5 (BP=0.865, ratio=0.873, hyp_len=2719, ref_len=3113)\n'
Validation perplexity: 116343.77952704031
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.52
Epoch 275 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.9410364605719224 Loss (std): 1.5594445950864377 Loss ratio: 0.8034081928718385 Tokens per Sec: 2703.12366583795
Epoch Step: 10 / 67 Loss (mean): 9.108734976151027 Loss (std): 16.219058117055894 Loss ratio: 1.7806048984322733 Tokens per Sec: 2543.958276613708
Epoch Step: 15 / 67 Loss (mean): 2.3068435075692832 Loss (std): 1.711494552297936 Loss ratio: 0.7419205276309941 Tokens per Sec: 3254.7506085299688
Epoch Step: 20 / 67 Loss (mean): 1.4842584515572526 Loss (std): 1.4060400769904138 Loss ratio: 0.9473013783517461 Tokens per Sec: 3426.993089133011
Epoch Step: 25 / 67 Loss (mean): 1.860840684385039 Loss (std): 1.5865517042229689 Loss ratio: 0.8525994286003502 Tokens per Sec: 2301.669879303627
Epoch Step: 30 / 67 Loss (mean): 2.3665182253462262 Loss (std): 1.67507766671211 Loss ratio: 0.7078236916882577 Tokens per Sec: 2915.4941566759426
Epoch Step: 35 / 67 Loss (mean): 2.15982100518886 Loss (std): 1.5102747566995482 Loss ratio: 0.6992592224407439 Tokens per Sec: 3084.9629292092536
Epoch Step: 40 / 67 Loss (mean): 1.6277492960944073 Loss (std): 1.4180615531756868 Loss ratio: 0.8711793373698017 Tokens per Sec: 2342.550268827439
Epoch Step: 45 / 67 Loss (mean): 1.8972916054190136 Loss (std): 1.4003278891235766 Loss ratio: 0.7380667711404946 Tokens per Sec: 2754.435409726451
Epoch Step: 50 / 67 Loss (mean): 2.326324689289322 Loss (std): 1.4576965934976405 Loss ratio: 0.6266092606114058 Tokens per Sec: 2638.283003502641
Epoch Step: 55 / 67 Loss (mean): 2.0647967715049163 Loss (std): 1.6511199952298716 Loss ratio: 0.7996525459628947 Tokens per Sec: 2714.065422632342
Epoch Step: 60 / 67 Loss (mean): 32.3775762966834 Loss (std): 31.365838806531794 Loss ratio: 0.9687519077746642 Tokens per Sec: 3129.695283125349
Epoch Step: 65 / 67 Loss (mean): 2.7942538197967224 Loss (std): 2.0127873573574044 Loss ratio: 0.7203308958897053 Tokens per Sec: 2514.153457783571
Mean loss per sample: 2.9586619050379546 Std loss per sample: 7.1435846175103945 ratio: 2.4144646623348316
Epoch ended with duration 0:00:11.443138
Train perplexity: 1.4922814318275845
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings when scoring is missing[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test batch for sslcontext.tls[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: adapt colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 81.27214869856834 Loss (std): 36.410721538179544 Loss ratio: 0.4480098301968598 Tokens per Sec: 4289.283299631076
Mean loss per sample: 86.94352008280207 Std loss per sample: 43.03146593464494 ratio: 0.4949358605870021
Epoch ended with duration 0:00:01.037988
b'BLEU = 2.44, 8.1/2.6/1.6/1.2 (BP=0.967, ratio=0.968, hyp_len=3012, ref_len=3113)\n'
Validation perplexity: 130928.18905176446
Validation accuracy: 0.0
Validation BLEU: 2.44
Model saved checkpoint_commit_msg_generator!
Epoch 276 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.3255470952717587 Loss (std): 1.7809116249747774 Loss ratio: 0.7658032935973131 Tokens per Sec: 3231.2851704408677
Epoch Step: 10 / 67 Loss (mean): 8.704453967162408 Loss (std): 14.888409313679569 Loss ratio: 1.7104357573543567 Tokens per Sec: 2879.7776182601438
Epoch Step: 15 / 67 Loss (mean): 2.285397528205067 Loss (std): 1.7079644182662417 Loss ratio: 0.7473380001454991 Tokens per Sec: 2853.867359748659
Epoch Step: 20 / 67 Loss (mean): 1.8899707334057894 Loss (std): 1.5464971983443523 Loss ratio: 0.8182651567082806 Tokens per Sec: 2764.547186088756
Epoch Step: 25 / 67 Loss (mean): 9.215675645973533 Loss (std): 14.281213555240175 Loss ratio: 1.5496653857907696 Tokens per Sec: 2471.921080511633
Epoch Step: 30 / 67 Loss (mean): 1.9087833791272715 Loss (std): 1.4618268212581118 Loss ratio: 0.7658421784490202 Tokens per Sec: 2492.2859001696397
Epoch Step: 35 / 67 Loss (mean): 2.1299810372292995 Loss (std): 1.5916849909882895 Loss ratio: 0.747276601607106 Tokens per Sec: 2847.7754676649974
Epoch Step: 40 / 67 Loss (mean): 2.2052421350963414 Loss (std): 1.8265224229224577 Loss ratio: 0.8282638871502706 Tokens per Sec: 2596.9926406994846
Epoch Step: 45 / 67 Loss (mean): 1.9266509093577042 Loss (std): 1.4953213515565407 Loss ratio: 0.776124696121023 Tokens per Sec: 2661.4442491949094
Epoch Step: 50 / 67 Loss (mean): 0.801454017094026 Loss (std): 0.5719019422860786 Loss ratio: 0.713580480087585 Tokens per Sec: 2833.850670754896
Epoch Step: 55 / 67 Loss (mean): 1.8151983268326148 Loss (std): 1.4513801510251823 Loss ratio: 0.7995711154922294 Tokens per Sec: 3171.301979135801
Epoch Step: 60 / 67 Loss (mean): 1.7839953480288386 Loss (std): 1.374826275665784 Loss ratio: 0.7706445407410109 Tokens per Sec: 2652.577775863545
Epoch Step: 65 / 67 Loss (mean): 18.21898746257648 Loss (std): 20.392382452324817 Loss ratio: 1.1192928528115351 Tokens per Sec: 2549.1800135378594
Mean loss per sample: 2.8179834411515334 Std loss per sample: 5.952670439018046 ratio: 2.1123865925150938
Epoch ended with duration 0:00:11.460059
Train perplexity: 1.4641463189979942
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings not during log device[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 80.91681602597237 Loss (std): 36.731168687547395 Loss ratio: 0.45393739511151265 Tokens per Sec: 4384.343699350725
Mean loss per sample: 85.433218331122 Std loss per sample: 44.06748756451471 ratio: 0.5158120977453755
Epoch ended with duration 0:00:01.025260
b'BLEU = 2.56, 8.1/2.9/1.8/1.4 (BP=0.929, ratio=0.931, hyp_len=2899, ref_len=3113)\n'
Validation perplexity: 106695.18793871457
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.56
Epoch 277 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.7890397015144117 Loss (std): 1.4941631362888126 Loss ratio: 0.8351760640213921 Tokens per Sec: 2743.369742315862
Epoch Step: 10 / 67 Loss (mean): 1.653761128836777 Loss (std): 1.3941650971227015 Loss ratio: 0.8430268875066194 Tokens per Sec: 2974.245823578615
Epoch Step: 15 / 67 Loss (mean): 1.7150686053792015 Loss (std): 1.258136476350016 Loss ratio: 0.733577929421571 Tokens per Sec: 2615.6851691712895
Epoch Step: 20 / 67 Loss (mean): 1.7431800009217113 Loss (std): 1.5191959203244 Loss ratio: 0.8715083465397269 Tokens per Sec: 2816.859637340497
Epoch Step: 25 / 67 Loss (mean): 1.9637712948024273 Loss (std): 1.5039650811213066 Loss ratio: 0.765855517443348 Tokens per Sec: 2788.560033147487
Epoch Step: 30 / 67 Loss (mean): 12.702023450983688 Loss (std): 22.23508633310446 Loss ratio: 1.7505152953707148 Tokens per Sec: 2932.159395090928
Epoch Step: 35 / 67 Loss (mean): 1.8672918411903083 Loss (std): 1.7776876253436054 Loss ratio: 0.9520138128009039 Tokens per Sec: 2588.2333061787585
Epoch Step: 40 / 67 Loss (mean): 2.1514521520002745 Loss (std): 1.857005668130649 Loss ratio: 0.8631405845601219 Tokens per Sec: 2878.839637110049
Epoch Step: 45 / 67 Loss (mean): 1.9216869504889473 Loss (std): 1.3958452257241378 Loss ratio: 0.7263645233002096 Tokens per Sec: 3286.3692055458896
Epoch Step: 50 / 67 Loss (mean): 2.403134830412455 Loss (std): 1.8736988100936427 Loss ratio: 0.7796894233238074 Tokens per Sec: 2265.297020582178
Epoch Step: 55 / 67 Loss (mean): 9.11158247035928 Loss (std): 16.152293870068426 Loss ratio: 1.7727210309090822 Tokens per Sec: 2748.2402175035277
Epoch Step: 60 / 67 Loss (mean): 1.9247973090969026 Loss (std): 1.542932743419761 Loss ratio: 0.8016079075586878 Tokens per Sec: 2613.019630573724
Epoch Step: 65 / 67 Loss (mean): 2.507448444608599 Loss (std): 1.9749884548950136 Loss ratio: 0.7876486789355703 Tokens per Sec: 2661.5630033655316
Mean loss per sample: 2.5814032744265005 Std loss per sample: 5.406094062612289 ratio: 2.0942462249775127
Epoch ended with duration 0:00:11.450802
Train perplexity: 1.4180222600492263
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print during log command during log codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: update colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 81.991071164608 Loss (std): 37.87230296036106 Loss ratio: 0.46190764948450747 Tokens per Sec: 4412.817080594645
Mean loss per sample: 87.24799957724868 Std loss per sample: 45.813600140010905 ratio: 0.5250962814276092
Epoch ended with duration 0:00:01.020126
b'BLEU = 2.59, 8.7/2.8/1.8/1.3 (BP=0.940, ratio=0.942, hyp_len=2932, ref_len=3113)\n'
Validation perplexity: 136443.61098840376
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.59
Epoch 278 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.9764600488124415 Loss (std): 1.5438995539221971 Loss ratio: 0.7811438206655638 Tokens per Sec: 2471.666443248595
Epoch Step: 10 / 67 Loss (mean): 2.4332120064646006 Loss (std): 1.7541959002814445 Loss ratio: 0.72093837101776 Tokens per Sec: 2613.852921589974
Epoch Step: 15 / 67 Loss (mean): 2.336606319877319 Loss (std): 1.5785803030739558 Loss ratio: 0.6755867642936263 Tokens per Sec: 2605.86631698468
Epoch Step: 20 / 67 Loss (mean): 1.943785985960858 Loss (std): 1.4892969726381042 Loss ratio: 0.7661836145515324 Tokens per Sec: 3212.307749752311
Epoch Step: 25 / 67 Loss (mean): 1.8063333024038002 Loss (std): 1.3308050941902616 Loss ratio: 0.736743928941174 Tokens per Sec: 2787.895066531278
Epoch Step: 30 / 67 Loss (mean): 1.7670895422343165 Loss (std): 1.332041515436073 Loss ratio: 0.7538053299505317 Tokens per Sec: 3319.3266369986704
Epoch Step: 35 / 67 Loss (mean): 1.4493439360812772 Loss (std): 1.0529672939432775 Loss ratio: 0.7265130572045451 Tokens per Sec: 2101.7044682450273
Epoch Step: 40 / 67 Loss (mean): 1.761163016781211 Loss (std): 1.3243596507521922 Loss ratio: 0.751980162048064 Tokens per Sec: 2887.081822682078
Epoch Step: 45 / 67 Loss (mean): 1.875519771128893 Loss (std): 1.5988247674400626 Loss ratio: 0.8524702282811527 Tokens per Sec: 2737.432074020106
Epoch Step: 50 / 67 Loss (mean): 1.6396872765617445 Loss (std): 1.220234654140955 Loss ratio: 0.7441874262143825 Tokens per Sec: 2470.478968744374
Epoch Step: 55 / 67 Loss (mean): 1.9792039800086059 Loss (std): 1.7491766761173482 Loss ratio: 0.8837778691763456 Tokens per Sec: 3190.0301113876535
Epoch Step: 60 / 67 Loss (mean): 7.763755354040768 Loss (std): 16.27552323247367 Loss ratio: 2.096346740756433 Tokens per Sec: 2434.022079160544
Epoch Step: 65 / 67 Loss (mean): 2.1136463878210634 Loss (std): 1.5496591549698522 Loss ratio: 0.7331685961753424 Tokens per Sec: 3064.7238844012477
Mean loss per sample: 3.1565340206739165 Std loss per sample: 7.498283337331872 ratio: 2.375479968922051
Epoch ended with duration 0:00:11.487979
Train perplexity: 1.5327724462577308
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings not cipher suites ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 81.76492893695831 Loss (std): 36.88010956747051 Loss ratio: 0.45105046927767156 Tokens per Sec: 4314.135675511794
Mean loss per sample: 87.85180551057957 Std loss per sample: 44.290998816420654 ratio: 0.5041558173905362
Epoch ended with duration 0:00:01.034994
b'BLEU = 2.68, 8.9/3.0/1.9/1.5 (BP=0.913, ratio=0.916, hyp_len=2853, ref_len=3113)\n'
Validation perplexity: 148077.81936740087
Validation accuracy: 0.0
Validation BLEU: 2.68
Epoch 279 / 1000
Epoch Step: 5 / 67 Loss (mean): 3.1549385068938136 Loss (std): 2.1614091766078416 Loss ratio: 0.6850875767895239 Tokens per Sec: 2689.8500734586687
Epoch Step: 10 / 67 Loss (mean): 1.6068877129582688 Loss (std): 1.3207424261425091 Loss ratio: 0.8219257733392159 Tokens per Sec: 2668.1789916808343
Epoch Step: 15 / 67 Loss (mean): 2.2077132035046816 Loss (std): 2.2249999442165187 Loss ratio: 1.0078301568720045 Tokens per Sec: 2535.108672272608
Epoch Step: 20 / 67 Loss (mean): 2.225642968376633 Loss (std): 2.0598910141691684 Loss ratio: 0.9255262606974367 Tokens per Sec: 3057.6052068644144
Epoch Step: 25 / 67 Loss (mean): 1.7858597509621177 Loss (std): 1.5621186071983806 Loss ratio: 0.8747151652624466 Tokens per Sec: 2739.7967519143654
Epoch Step: 30 / 67 Loss (mean): 1.6666191950789653 Loss (std): 1.295484934533511 Loss ratio: 0.777313100892331 Tokens per Sec: 2436.597783639161
Epoch Step: 35 / 67 Loss (mean): 1.7298872488900088 Loss (std): 1.6219250363638749 Loss ratio: 0.9375900292950258 Tokens per Sec: 2726.297106899639
Epoch Step: 40 / 67 Loss (mean): 2.15263449876511 Loss (std): 1.9132979134636492 Loss ratio: 0.8888168960226366 Tokens per Sec: 2701.887620570877
Epoch Step: 45 / 67 Loss (mean): 1.9860022261273116 Loss (std): 1.5322067370103192 Loss ratio: 0.7715030309901062 Tokens per Sec: 2796.9129937761973
Epoch Step: 50 / 67 Loss (mean): 1.2862570813740604 Loss (std): 1.095751860847145 Loss ratio: 0.8518918004141087 Tokens per Sec: 2753.21344449445
Epoch Step: 55 / 67 Loss (mean): 1.9829351565567777 Loss (std): 1.6050930672437154 Loss ratio: 0.8094531290830722 Tokens per Sec: 3351.103549841673
Epoch Step: 60 / 67 Loss (mean): 1.7244284687330946 Loss (std): 1.446244282530318 Loss ratio: 0.8386803562764459 Tokens per Sec: 2830.562886235127
Epoch Step: 65 / 67 Loss (mean): 1.4420927021856187 Loss (std): 1.0844953404792257 Loss ratio: 0.7520288666849069 Tokens per Sec: 2737.2946984035284
Mean loss per sample: 2.5638681429653767 Std loss per sample: 6.194976645694379 ratio: 2.4162617967276794
Epoch ended with duration 0:00:11.413634
Train perplexity: 1.4146619923650727
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print during switch ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 82.20633772015572 Loss (std): 37.593426837738015 Loss ratio: 0.45730570026987943 Tokens per Sec: 4282.555161885256
Mean loss per sample: 87.77799138768775 Std loss per sample: 44.97897694317702 ratio: 0.5124174776854831
Epoch ended with duration 0:00:01.039895
b'BLEU = 2.14, 8.5/2.5/1.4/1.0 (BP=0.910, ratio=0.914, hyp_len=2844, ref_len=3113)\n'
Validation perplexity: 146603.96072702913
Validation accuracy: 0.0
Validation BLEU: 2.14
Epoch 280 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.6134378922870383 Loss (std): 1.3949690302229822 Loss ratio: 0.8645941916274337 Tokens per Sec: 2510.1444333903646
Epoch Step: 10 / 67 Loss (mean): 9.148280676628929 Loss (std): 17.437108499322097 Loss ratio: 1.9060530733243242 Tokens per Sec: 2380.4004576868506
Epoch Step: 15 / 67 Loss (mean): 1.3804714578436688 Loss (std): 1.1478758321375295 Loss ratio: 0.8315100074075711 Tokens per Sec: 3079.5348663820414
Epoch Step: 20 / 67 Loss (mean): 2.194901273585856 Loss (std): 1.4561151334226614 Loss ratio: 0.6634080315802887 Tokens per Sec: 2732.17806370608
Epoch Step: 25 / 67 Loss (mean): 2.813734440249391 Loss (std): 2.0864697287469567 Loss ratio: 0.7415304368816077 Tokens per Sec: 3400.3817625156676
Epoch Step: 30 / 67 Loss (mean): 1.3959301795694046 Loss (std): 1.203583508137213 Loss ratio: 0.8622089598410118 Tokens per Sec: 2255.4882701733354
Epoch Step: 35 / 67 Loss (mean): 1.8378621604060754 Loss (std): 1.9022835942084229 Loss ratio: 1.0350523750856884 Tokens per Sec: 2574.199267732195
Epoch Step: 40 / 67 Loss (mean): 2.033088800497353 Loss (std): 1.6074153275799494 Loss ratio: 0.7906272107675417 Tokens per Sec: 3057.6011907347693
Epoch Step: 45 / 67 Loss (mean): 1.3746286815730855 Loss (std): 1.4531365017624809 Loss ratio: 1.0571120195888488 Tokens per Sec: 2463.0370650855466
Epoch Step: 50 / 67 Loss (mean): 2.2521718158386648 Loss (std): 1.9470310620424038 Loss ratio: 0.8645126665513162 Tokens per Sec: 3325.6921695362184
Epoch Step: 55 / 67 Loss (mean): 1.6230005617253482 Loss (std): 1.2681174563579447 Loss ratio: 0.7813413539486757 Tokens per Sec: 2491.6585049714363
Epoch Step: 60 / 67 Loss (mean): 2.355631320446264 Loss (std): 1.7429044667198443 Loss ratio: 0.739888475582698 Tokens per Sec: 3639.8411510791366
Epoch Step: 65 / 67 Loss (mean): 1.8958477855485398 Loss (std): 1.4948091783759219 Loss ratio: 0.7884647648246811 Tokens per Sec: 2660.4257219668484
Mean loss per sample: 2.1815780245805305 Std loss per sample: 4.418024517099007 ratio: 2.025150816207225
Epoch ended with duration 0:00:11.411140
Train perplexity: 1.3433505237042849
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level call to return ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 82.1017190515995 Loss (std): 37.40935331891116 Loss ratio: 0.45564640729873185 Tokens per Sec: 4406.157987883678
Mean loss per sample: 86.63792783046355 Std loss per sample: 44.87368811128396 ratio: 0.5179450759613564
Epoch ended with duration 0:00:01.027339
b'BLEU = 2.54, 8.7/2.8/1.7/1.2 (BP=0.949, ratio=0.950, hyp_len=2958, ref_len=3113)\n'
Validation perplexity: 125616.77120911377
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.54
Model saved checkpoint_commit_msg_generator!
Epoch 281 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.7331588440796449 Loss (std): 0.7334905033172288 Loss ratio: 1.0004523702336294 Tokens per Sec: 2491.928144066371
Epoch Step: 10 / 67 Loss (mean): 1.7574309929623269 Loss (std): 1.5182150548484108 Loss ratio: 0.8638831686297431 Tokens per Sec: 2874.1319594031943
Epoch Step: 15 / 67 Loss (mean): 1.4474536888301373 Loss (std): 1.1586170169374386 Loss ratio: 0.8004518734370406 Tokens per Sec: 2480.8013287686563
Epoch Step: 20 / 67 Loss (mean): 1.674625928455498 Loss (std): 1.3903006035275702 Loss ratio: 0.8302156200398975 Tokens per Sec: 2968.0368016511484
Epoch Step: 25 / 67 Loss (mean): 11.377527058066335 Loss (std): 19.432453148465118 Loss ratio: 1.7079680891365647 Tokens per Sec: 2874.2067498388838
Epoch Step: 30 / 67 Loss (mean): 1.6001068957848474 Loss (std): 1.528239408889885 Loss ratio: 0.955085821400881 Tokens per Sec: 2574.082030328189
Epoch Step: 35 / 67 Loss (mean): 1.917732409783639 Loss (std): 2.018822586114696 Loss ratio: 1.0527133899470689 Tokens per Sec: 2599.8630516007333
Epoch Step: 40 / 67 Loss (mean): 1.4710204303846695 Loss (std): 1.0823656516012938 Loss ratio: 0.7357923991023408 Tokens per Sec: 3496.078153096274
Epoch Step: 45 / 67 Loss (mean): 1.7259566792054102 Loss (std): 1.394244170950507 Loss ratio: 0.8078094819809638 Tokens per Sec: 2631.091557869862
Epoch Step: 50 / 67 Loss (mean): 1.7430262711714022 Loss (std): 1.306640903537027 Loss ratio: 0.7496392482133376 Tokens per Sec: 2750.269116621663
Epoch Step: 55 / 67 Loss (mean): 1.4718996544834226 Loss (std): 1.291293883746481 Loss ratio: 0.8772974977018205 Tokens per Sec: 2575.8798024334815
Epoch Step: 60 / 67 Loss (mean): 1.514277552254498 Loss (std): 1.2467581487920674 Loss ratio: 0.8233352907700835 Tokens per Sec: 2626.1050913668128
Epoch Step: 65 / 67 Loss (mean): 1.71014525659848 Loss (std): 1.4969996111266863 Loss ratio: 0.8753640109520606 Tokens per Sec: 3007.528925232964
Mean loss per sample: 2.6132667151764837 Std loss per sample: 6.558912666073368 ratio: 2.5098519902245875
Epoch ended with duration 0:00:11.432324
Train perplexity: 1.4241487127189256
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command fix stack openjdk[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 82.57139304280281 Loss (std): 38.39395079631286 Loss ratio: 0.4649788429318427 Tokens per Sec: 4298.245857368438
Mean loss per sample: 89.1728051634597 Std loss per sample: 45.683465964477804 ratio: 0.5123026676208847
Epoch ended with duration 0:00:01.050494
b'BLEU = 2.52, 8.5/2.8/1.8/1.3 (BP=0.933, ratio=0.935, hyp_len=2910, ref_len=3113)\n'
Validation perplexity: 177107.52896919503
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.52
Epoch 282 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.3186687845736742 Loss (std): 1.155964572419017 Loss ratio: 0.8766147996691531 Tokens per Sec: 2664.467448646405
Epoch Step: 10 / 67 Loss (mean): 1.400947542162612 Loss (std): 1.3038006194082123 Loss ratio: 0.9306562738213336 Tokens per Sec: 2770.8301560782734
Epoch Step: 15 / 67 Loss (mean): 1.7459623438771814 Loss (std): 1.0886108369516536 Loss ratio: 0.6235018989780866 Tokens per Sec: 2778.3535424172983
Epoch Step: 20 / 67 Loss (mean): 1.9999084885930642 Loss (std): 1.4449398254165928 Loss ratio: 0.7225029713400077 Tokens per Sec: 2646.7656007530763
Epoch Step: 25 / 67 Loss (mean): 14.213613974978216 Loss (std): 30.77403199890695 Loss ratio: 2.1651095951446164 Tokens per Sec: 2637.60735132053
Epoch Step: 30 / 67 Loss (mean): 1.3429396736901253 Loss (std): 1.1079494758354103 Loss ratio: 0.8250180537082431 Tokens per Sec: 2503.610480779892
Epoch Step: 35 / 67 Loss (mean): 2.103033624938689 Loss (std): 1.8758070546431695 Loss ratio: 0.8919529542462051 Tokens per Sec: 2191.530331007495
Epoch Step: 40 / 67 Loss (mean): 1.8176465900614858 Loss (std): 1.5891151319677235 Loss ratio: 0.8742706864231337 Tokens per Sec: 3051.274868620428
Epoch Step: 45 / 67 Loss (mean): 1.7690510662505403 Loss (std): 1.6013906348878495 Loss ratio: 0.9052257820244596 Tokens per Sec: 2775.9233178466866
Epoch Step: 50 / 67 Loss (mean): 1.6574955224059522 Loss (std): 1.3914478112870041 Loss ratio: 0.8394881268018364 Tokens per Sec: 3113.60477458145
Epoch Step: 55 / 67 Loss (mean): 1.6869840057333931 Loss (std): 1.5562055714341958 Loss ratio: 0.9224779643110231 Tokens per Sec: 3147.286304863721
Epoch Step: 60 / 67 Loss (mean): 2.2102769589982927 Loss (std): 1.5527017419805764 Loss ratio: 0.702491936885714 Tokens per Sec: 2776.7445994991263
Epoch Step: 65 / 67 Loss (mean): 1.7283046799711883 Loss (std): 1.3019535967952662 Loss ratio: 0.7533125448789333 Tokens per Sec: 2919.178132798421
Mean loss per sample: 3.0666345643400064 Std loss per sample: 7.97357292096288 ratio: 2.6001053446936977
Epoch ended with duration 0:00:11.505609
Train perplexity: 1.5142416933449325
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings if not active ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api url[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 96.94100019335747 Loss (std): 37.31210653759023 Loss ratio: 0.38489500276630023 Tokens per Sec: 4145.79042972611
Mean loss per sample: 90.09640607237816 Std loss per sample: 45.2537500735022 ratio: 0.5022814121702922
Epoch ended with duration 0:00:01.055625
b'BLEU = 2.61, 8.7/2.9/1.8/1.4 (BP=0.937, ratio=0.939, hyp_len=2923, ref_len=3113)\n'
Validation perplexity: 200722.1318123663
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.61
Epoch 283 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.7467228478053585 Loss (std): 1.6988332396469528 Loss ratio: 0.9725831672617233 Tokens per Sec: 2969.294411898244
Epoch Step: 10 / 67 Loss (mean): 2.335432613035664 Loss (std): 1.5895445846003216 Loss ratio: 0.6806210445670641 Tokens per Sec: 3033.561051478798
Epoch Step: 15 / 67 Loss (mean): 9.247943894937634 Loss (std): 15.95036944746777 Loss ratio: 1.7247476443060032 Tokens per Sec: 2296.9678123896215
Epoch Step: 20 / 67 Loss (mean): 2.102841058280319 Loss (std): 1.7297488784856987 Loss ratio: 0.8225770900156709 Tokens per Sec: 2499.6074246162752
Epoch Step: 25 / 67 Loss (mean): 1.774647037847899 Loss (std): 1.4888034107798058 Loss ratio: 0.8389293076471513 Tokens per Sec: 2667.4727817716166
Epoch Step: 30 / 67 Loss (mean): 2.07745649444405 Loss (std): 1.5613637915559866 Loss ratio: 0.7515747240588182 Tokens per Sec: 3085.15010501066
Epoch Step: 35 / 67 Loss (mean): 1.6120840995572507 Loss (std): 1.2741964440700095 Loss ratio: 0.7904032081328511 Tokens per Sec: 2886.2550277515707
Epoch Step: 40 / 67 Loss (mean): 0.8561658647266173 Loss (std): 1.165569093123512 Loss ratio: 1.3613823455758662 Tokens per Sec: 2402.5127835727035
Epoch Step: 45 / 67 Loss (mean): 1.9164113212609664 Loss (std): 1.5390486861480495 Loss ratio: 0.8030889136761002 Tokens per Sec: 2315.423009607027
Epoch Step: 50 / 67 Loss (mean): 9.186353154073004 Loss (std): 18.859736197092484 Loss ratio: 2.053016673839775 Tokens per Sec: 2971.1108971792596
Epoch Step: 55 / 67 Loss (mean): 1.354173178842757 Loss (std): 1.1217629795800093 Loss ratio: 0.8283748320422654 Tokens per Sec: 2790.9762773783827
Epoch Step: 60 / 67 Loss (mean): 1.9344639841583557 Loss (std): 1.7659000072624136 Loss ratio: 0.9128626956736645 Tokens per Sec: 3028.0883609093867
Epoch Step: 65 / 67 Loss (mean): 2.121544281137176 Loss (std): 1.7169875462366604 Loss ratio: 0.8093102564497652 Tokens per Sec: 2670.794604127541
Mean loss per sample: 2.9112762872038425 Std loss per sample: 7.324322326808125 ratio: 2.515845836755956
Epoch ended with duration 0:00:11.506072
Train perplexity: 1.4827446308536274
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test java method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 83.10946303606033 Loss (std): 38.71261148717243 Loss ratio: 0.4658026904875493 Tokens per Sec: 4386.187279751546
Mean loss per sample: 87.39841043240712 Std loss per sample: 45.26286313960509 ratio: 0.5178911483133992
Epoch ended with duration 0:00:01.024534
b'BLEU = 2.53, 8.5/2.8/1.7/1.3 (BP=0.948, ratio=0.949, hyp_len=2955, ref_len=3113)\n'
Validation perplexity: 139253.32938760152
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.53
Epoch 284 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.9861331251158845 Loss (std): 1.6141308793615745 Loss ratio: 0.8127002459955424 Tokens per Sec: 2562.8657939262575
Epoch Step: 10 / 67 Loss (mean): 1.7735919809201732 Loss (std): 1.7899904455657254 Loss ratio: 1.0092459059479082 Tokens per Sec: 2985.7402722673723
Epoch Step: 15 / 67 Loss (mean): 1.6871573438402265 Loss (std): 1.2316480734353574 Loss ratio: 0.7300137583089549 Tokens per Sec: 2703.479259273654
Epoch Step: 20 / 67 Loss (mean): 1.9880133993574418 Loss (std): 1.5886604320351663 Loss ratio: 0.7991195796510462 Tokens per Sec: 3042.426606271382
Epoch Step: 25 / 67 Loss (mean): 2.2772688118275255 Loss (std): 2.0295756522064763 Loss ratio: 0.8912323576669574 Tokens per Sec: 3315.504449598188
Epoch Step: 30 / 67 Loss (mean): 1.9176338406396098 Loss (std): 1.5002062033835482 Loss ratio: 0.7823215108068637 Tokens per Sec: 2678.0948668112273
Epoch Step: 35 / 67 Loss (mean): 8.758530883817002 Loss (std): 18.08679695754992 Loss ratio: 2.065049172911933 Tokens per Sec: 2640.8373444498116
Epoch Step: 40 / 67 Loss (mean): 1.9345846642972901 Loss (std): 1.431681141556046 Loss ratio: 0.7400457410718095 Tokens per Sec: 2612.37960828995
Epoch Step: 45 / 67 Loss (mean): 1.8148654259275645 Loss (std): 1.3735715153773376 Loss ratio: 0.7568448303406933 Tokens per Sec: 2885.559849138805
Epoch Step: 50 / 67 Loss (mean): 0.8849336323106572 Loss (std): 0.8873890309446774 Loss ratio: 1.0027746698106714 Tokens per Sec: 2536.007326292267
Epoch Step: 55 / 67 Loss (mean): 1.6039173951139674 Loss (std): 1.0975464986656012 Loss ratio: 0.6842911623809743 Tokens per Sec: 3238.9433942158976
Epoch Step: 60 / 67 Loss (mean): 1.6097315947990865 Loss (std): 1.7090652496638346 Loss ratio: 1.0617082097324095 Tokens per Sec: 2332.1796074616177
Epoch Step: 65 / 67 Loss (mean): 2.1470775057096034 Loss (std): 1.9709551059795198 Loss ratio: 0.9179711029239833 Tokens per Sec: 2614.7111301727837
Mean loss per sample: 2.3594635935924666 Std loss per sample: 4.929448420542442 ratio: 2.0892241922821846
Epoch ended with duration 0:00:11.457251
Train perplexity: 1.3760743214332392
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 83.15144336223602 Loss (std): 38.669007490635714 Loss ratio: 0.4650431300654679 Tokens per Sec: 4405.98332640362
Mean loss per sample: 87.75221051593296 Std loss per sample: 45.74547655453517 ratio: 0.5213028399578524
Epoch ended with duration 0:00:01.023104
b'BLEU = 2.54, 8.8/2.8/1.8/1.3 (BP=0.915, ratio=0.918, hyp_len=2858, ref_len=3113)\n'
Validation perplexity: 146092.65393579946
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.54
Epoch 285 / 1000
Epoch Step: 5 / 67 Loss (mean): 14.05284037545789 Loss (std): 20.7452726340336 Loss ratio: 1.4762334218400064 Tokens per Sec: 2908.221028257406
Epoch Step: 10 / 67 Loss (mean): 7.106420757248998 Loss (std): 11.57158799125625 Loss ratio: 1.6283285758801291 Tokens per Sec: 2706.0580274213994
Epoch Step: 15 / 67 Loss (mean): 1.351365526264999 Loss (std): 1.1564123889023872 Loss ratio: 0.8557361915976669 Tokens per Sec: 2567.374184462272
Epoch Step: 20 / 67 Loss (mean): 1.6516820511315018 Loss (std): 1.3576067994306995 Loss ratio: 0.8219540791768349 Tokens per Sec: 2480.441334926305
Epoch Step: 25 / 67 Loss (mean): 1.9378712468314916 Loss (std): 1.4639781508330807 Loss ratio: 0.7554568721873304 Tokens per Sec: 2649.5758604257
Epoch Step: 30 / 67 Loss (mean): 1.3677656496874988 Loss (std): 1.24414629092372 Loss ratio: 0.9096194886952872 Tokens per Sec: 2665.1330925754482
Epoch Step: 35 / 67 Loss (mean): 2.485151879256591 Loss (std): 2.1461539372645544 Loss ratio: 0.8635906542285678 Tokens per Sec: 3510.314013633718
Epoch Step: 40 / 67 Loss (mean): 1.6152361336862668 Loss (std): 1.1667315934973737 Loss ratio: 0.7223288094940502 Tokens per Sec: 2608.05832471428
Epoch Step: 45 / 67 Loss (mean): 1.5756430255714804 Loss (std): 1.5746641457689952 Loss ratio: 0.999378742655158 Tokens per Sec: 2821.1643218664835
Epoch Step: 50 / 67 Loss (mean): 2.2731079736258835 Loss (std): 1.6428960412058222 Loss ratio: 0.7227531909032915 Tokens per Sec: 2748.2974044837206
Epoch Step: 55 / 67 Loss (mean): 2.304167626891285 Loss (std): 2.018584777313531 Loss ratio: 0.8760581277834139 Tokens per Sec: 3404.0821473279216
Epoch Step: 60 / 67 Loss (mean): 4.621116060443455 Loss (std): 9.977552835230789 Loss ratio: 2.159121888462874 Tokens per Sec: 2184.700432361158
Epoch Step: 65 / 67 Loss (mean): 3.5594456649851054 Loss (std): 2.202485103615118 Loss ratio: 0.618771941170883 Tokens per Sec: 3052.63822805145
Mean loss per sample: 2.6554212943728066 Std loss per sample: 6.665128602421564 ratio: 2.510007966173151
Epoch ended with duration 0:00:11.442932
Train perplexity: 1.432294556346563
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 83.10195496678352 Loss (std): 38.48833842641412 Loss ratio: 0.46314600470949446 Tokens per Sec: 4276.07656864543
Mean loss per sample: 88.17711076653394 Std loss per sample: 44.74775335221545 ratio: 0.5074758399681957
Epoch ended with duration 0:00:01.040648
b'BLEU = 2.48, 8.2/2.7/1.7/1.3 (BP=0.940, ratio=0.942, hyp_len=2931, ref_len=3113)\n'
Validation perplexity: 154751.81360281768
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.48
Model saved checkpoint_commit_msg_generator!
Epoch 286 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.5200526136904955 Loss (std): 1.2868553669670235 Loss ratio: 0.8465860690457954 Tokens per Sec: 2299.831179203571
Epoch Step: 10 / 67 Loss (mean): 1.955617452505976 Loss (std): 1.6188697075131728 Loss ratio: 0.8278048988766763 Tokens per Sec: 2933.0313378161677
Epoch Step: 15 / 67 Loss (mean): 1.5320433613087516 Loss (std): 1.3479379895870014 Loss ratio: 0.879830182114116 Tokens per Sec: 2471.236436791376
Epoch Step: 20 / 67 Loss (mean): 2.0050350080709904 Loss (std): 1.6218506602870173 Loss ratio: 0.8088889489502589 Tokens per Sec: 2502.083627399051
Epoch Step: 25 / 67 Loss (mean): 2.2958835242316127 Loss (std): 1.8704023017751121 Loss ratio: 0.814676477283881 Tokens per Sec: 2873.247543857708
Epoch Step: 30 / 67 Loss (mean): 1.5830131637048908 Loss (std): 1.3361531512675173 Loss ratio: 0.8440568795652834 Tokens per Sec: 3072.6250241751413
Epoch Step: 35 / 67 Loss (mean): 1.696963820955716 Loss (std): 1.4206320520703524 Loss ratio: 0.8371610723381622 Tokens per Sec: 2966.888510638804
Epoch Step: 40 / 67 Loss (mean): 1.9936687145964243 Loss (std): 1.6780655709072705 Loss ratio: 0.8416972983633136 Tokens per Sec: 2807.5664516549805
Epoch Step: 45 / 67 Loss (mean): 1.7948404377675615 Loss (std): 1.5803797359915008 Loss ratio: 0.880512664377671 Tokens per Sec: 2427.663398880714
Epoch Step: 50 / 67 Loss (mean): 1.5688959532417357 Loss (std): 1.1298378744367152 Loss ratio: 0.7201483770177267 Tokens per Sec: 3173.843991497798
Epoch Step: 55 / 67 Loss (mean): 1.7159382951795124 Loss (std): 1.4824755085971209 Loss ratio: 0.8639445327152817 Tokens per Sec: 3003.3035696761085
Epoch Step: 60 / 67 Loss (mean): 2.092375436099246 Loss (std): 1.9424400133299862 Loss ratio: 0.9283420077570878 Tokens per Sec: 2548.5732348480437
Epoch Step: 65 / 67 Loss (mean): 2.236329621053301 Loss (std): 1.8270241090729737 Loss ratio: 0.816974426253163 Tokens per Sec: 2668.2376438756046
Mean loss per sample: 2.986985754551985 Std loss per sample: 7.693975818345604 ratio: 2.5758327794568325
Epoch ended with duration 0:00:11.486376
Train perplexity: 1.4980111374966858
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings not cipher suites ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 82.74039968848228 Loss (std): 38.63200240085572 Loss ratio: 0.46690616127436246 Tokens per Sec: 4405.907644062534
Mean loss per sample: 87.14195837764467 Std loss per sample: 45.32968485225392 ratio: 0.5201820764207516
Epoch ended with duration 0:00:01.021818
b'BLEU = 2.39, 8.6/2.6/1.7/1.2 (BP=0.927, ratio=0.930, hyp_len=2895, ref_len=3113)\n'
Validation perplexity: 134496.87183478219
Validation accuracy: 0.0
Validation BLEU: 2.39
Epoch 287 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.8283833973109722 Loss (std): 1.2407685456520292 Loss ratio: 0.6786150801176843 Tokens per Sec: 2601.878044614785
Epoch Step: 10 / 67 Loss (mean): 2.3055529231205583 Loss (std): 1.8030795189446331 Loss ratio: 0.7820594794693201 Tokens per Sec: 2887.952833276422
Epoch Step: 15 / 67 Loss (mean): 1.4746547356480733 Loss (std): 1.2737784340875653 Loss ratio: 0.8637807910526066 Tokens per Sec: 2700.1480428868053
Epoch Step: 20 / 67 Loss (mean): 2.364913340192288 Loss (std): 1.808356317321931 Loss ratio: 0.7646607114892826 Tokens per Sec: 3026.8069090572717
Epoch Step: 25 / 67 Loss (mean): 4.591141829267144 Loss (std): 11.209240114576751 Loss ratio: 2.4414928859573073 Tokens per Sec: 2587.37682799837
Epoch Step: 30 / 67 Loss (mean): 1.2165760490461253 Loss (std): 1.2018292526293233 Loss ratio: 0.9878784425943907 Tokens per Sec: 2771.354467338679
Epoch Step: 35 / 67 Loss (mean): 1.8463218325050548 Loss (std): 1.4032451907732475 Loss ratio: 0.7600219886201263 Tokens per Sec: 2622.551969823862
Epoch Step: 40 / 67 Loss (mean): 1.9340961541747674 Loss (std): 1.4591564765899523 Loss ratio: 0.7544384354626564 Tokens per Sec: 2394.8919399318897
Epoch Step: 45 / 67 Loss (mean): 1.3851055079721846 Loss (std): 1.0846698449559369 Loss ratio: 0.7830954672499353 Tokens per Sec: 3194.5235629137924
Epoch Step: 50 / 67 Loss (mean): 1.5708441728493199 Loss (std): 1.4358787489321378 Loss ratio: 0.9140809596203479 Tokens per Sec: 2653.572341333358
Epoch Step: 55 / 67 Loss (mean): 1.7273329659365118 Loss (std): 1.4086523996092188 Loss ratio: 0.8155071589486436 Tokens per Sec: 2535.343726789553
Epoch Step: 60 / 67 Loss (mean): 2.6434639856452122 Loss (std): 1.9604196892702332 Loss ratio: 0.7416101372728697 Tokens per Sec: 2757.4604658748062
Epoch Step: 65 / 67 Loss (mean): 1.6910196386743337 Loss (std): 1.4164045660368236 Loss ratio: 0.8376038537004851 Tokens per Sec: 2992.2179511731124
Mean loss per sample: 2.4338933334583146 Std loss per sample: 5.896389051128331 ratio: 2.422616048974571
Epoch ended with duration 0:00:11.465377
Train perplexity: 1.390001843332859
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings not during log device[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test java method_1 for sslcontext.tls[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 82.88602709770203 Loss (std): 37.96925585642108 Loss ratio: 0.4580899481605598 Tokens per Sec: 4164.705776556548
Mean loss per sample: 91.93900147202562 Std loss per sample: 44.9568238207774 ratio: 0.48898533920293297
Epoch ended with duration 0:00:01.071145
b'BLEU = 2.52, 8.2/2.8/1.8/1.3 (BP=0.934, ratio=0.936, hyp_len=2914, ref_len=3113)\n'
Validation perplexity: 257656.21683621043
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.52
Epoch 288 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.6637867807876319 Loss (std): 1.2179825944173033 Loss ratio: 0.7320544966950115 Tokens per Sec: 2438.9404156549413
Epoch Step: 10 / 67 Loss (mean): 1.5763049833476543 Loss (std): 1.4752078355732374 Loss ratio: 0.9358644749319301 Tokens per Sec: 2460.526637008397
Epoch Step: 15 / 67 Loss (mean): 2.2677697200560942 Loss (std): 1.629805436090788 Loss ratio: 0.7186820697343442 Tokens per Sec: 2773.9392053347524
Epoch Step: 20 / 67 Loss (mean): 1.056237644603243 Loss (std): 0.7844984477666929 Loss ratio: 0.7427291119333053 Tokens per Sec: 2439.0060631589763
Epoch Step: 25 / 67 Loss (mean): 2.2819873429834843 Loss (std): 1.7103776371472046 Loss ratio: 0.7495123241617311 Tokens per Sec: 2710.544570124966
Epoch Step: 30 / 67 Loss (mean): 1.8769871892873198 Loss (std): 1.6510792036771824 Loss ratio: 0.8796432991660891 Tokens per Sec: 2850.11647139372
Epoch Step: 35 / 67 Loss (mean): 1.6025756131857634 Loss (std): 1.0743905055245078 Loss ratio: 0.6704148601068031 Tokens per Sec: 2906.8068557098663
Epoch Step: 40 / 67 Loss (mean): 1.639939542626962 Loss (std): 1.5937767597969985 Loss ratio: 0.9718509239944193 Tokens per Sec: 2725.702992068476
Epoch Step: 45 / 67 Loss (mean): 1.8146271783625707 Loss (std): 1.3150545085328984 Loss ratio: 0.7246967995483999 Tokens per Sec: 3031.721153716574
Epoch Step: 50 / 67 Loss (mean): 1.3152818597882288 Loss (std): 1.2560856986525084 Loss ratio: 0.9549935546550825 Tokens per Sec: 3165.5797931328543
Epoch Step: 55 / 67 Loss (mean): 1.6102893312927336 Loss (std): 1.238662956842696 Loss ratio: 0.769217638576977 Tokens per Sec: 2881.9186533972897
Epoch Step: 60 / 67 Loss (mean): 1.746796960476786 Loss (std): 1.5588676537499235 Loss ratio: 0.8924149108459821 Tokens per Sec: 3302.539736078523
Epoch Step: 65 / 67 Loss (mean): 1.5746841084910557 Loss (std): 1.4037897579087766 Loss ratio: 0.8914738837708606 Tokens per Sec: 2335.3409134737185
Mean loss per sample: 2.620872973267293 Std loss per sample: 6.919790164169233 ratio: 2.6402615596980747
Epoch ended with duration 0:00:11.461043
Train perplexity: 1.4256150935347804
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings from inactive ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 83.73848044872284 Loss (std): 38.601431530200934 Loss ratio: 0.46097602109986313 Tokens per Sec: 4407.606270763754
Mean loss per sample: 88.09197695431162 Std loss per sample: 45.831537776114416 ratio: 0.5202691477781759
Epoch ended with duration 0:00:01.021523
b'BLEU = 2.48, 8.1/2.8/1.8/1.3 (BP=0.925, ratio=0.927, hyp_len=2887, ref_len=3113)\n'
Validation perplexity: 152976.67742085678
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.48
Epoch 289 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.365927897801157 Loss (std): 1.2106655210750181 Loss ratio: 0.8863319381820394 Tokens per Sec: 2421.2767979572814
Epoch Step: 10 / 67 Loss (mean): 1.6169165558821987 Loss (std): 1.0122743527924465 Loss ratio: 0.626052314889029 Tokens per Sec: 3200.768292270595
Epoch Step: 15 / 67 Loss (mean): 0.7299053668088856 Loss (std): 0.7008924940910478 Loss ratio: 0.9602511859247168 Tokens per Sec: 2874.780863574956
Epoch Step: 20 / 67 Loss (mean): 7.493894392158836 Loss (std): 14.849346402110434 Loss ratio: 1.981525976353217 Tokens per Sec: 3014.2758763289717
Epoch Step: 25 / 67 Loss (mean): 1.6099516093672719 Loss (std): 1.3267799384257608 Loss ratio: 0.8241116880197408 Tokens per Sec: 2710.1022388038
Epoch Step: 30 / 67 Loss (mean): 1.5778136534499936 Loss (std): 1.3029781825128282 Loss ratio: 0.8258124650295556 Tokens per Sec: 3015.8647129513533
Epoch Step: 35 / 67 Loss (mean): 2.263409423176199 Loss (std): 1.7117972196392286 Loss ratio: 0.7562914610636798 Tokens per Sec: 2831.619969399183
Epoch Step: 40 / 67 Loss (mean): 1.4196023861295544 Loss (std): 1.0275618195479108 Loss ratio: 0.723837765833492 Tokens per Sec: 2627.8638080055734
Epoch Step: 45 / 67 Loss (mean): 8.202226809575222 Loss (std): 19.125598132129902 Loss ratio: 2.331756799239301 Tokens per Sec: 2411.879179734667
Epoch Step: 50 / 67 Loss (mean): 1.7723388216109015 Loss (std): 1.5915431905437647 Loss ratio: 0.897990367946232 Tokens per Sec: 2749.383552864862
Epoch Step: 55 / 67 Loss (mean): 1.4127637659257744 Loss (std): 1.3039229106226082 Loss ratio: 0.9229589136356117 Tokens per Sec: 2650.8871785247043
Epoch Step: 60 / 67 Loss (mean): 2.0709861619398 Loss (std): 1.9352897933127897 Loss ratio: 0.9344774141320629 Tokens per Sec: 3438.3922796195598
Epoch Step: 65 / 67 Loss (mean): 1.6540515414671972 Loss (std): 1.5828361964926432 Loss ratio: 0.9569449057727767 Tokens per Sec: 2690.42419412326
Mean loss per sample: 2.463861081741669 Std loss per sample: 6.10732228530455 ratio: 2.47876080780795
Epoch ended with duration 0:00:11.446287
Train perplexity: 1.3956492247109609
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings not during command ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 82.87610357999802 Loss (std): 37.39098388207453 Loss ratio: 0.4511672516792738 Tokens per Sec: 4173.433333597561
Mean loss per sample: 89.95676658607897 Std loss per sample: 45.37430170840602 ratio: 0.5044012077177951
Epoch ended with duration 0:00:01.053056
b'BLEU = 2.42, 8.2/2.7/1.6/1.2 (BP=0.944, ratio=0.945, hyp_len=2942, ref_len=3113)\n'
Validation perplexity: 196959.45024987202
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.42
Epoch 290 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.8183930567465723 Loss (std): 1.272159983553335 Loss ratio: 0.6996067097998355 Tokens per Sec: 2709.73804538997
Epoch Step: 10 / 67 Loss (mean): 1.4509270621929318 Loss (std): 1.5238400330697524 Loss ratio: 1.0502526782887487 Tokens per Sec: 2449.1464022931286
Epoch Step: 15 / 67 Loss (mean): 8.83174352304195 Loss (std): 16.516322574919077 Loss ratio: 1.8701089464190301 Tokens per Sec: 2640.565636311802
Epoch Step: 20 / 67 Loss (mean): 8.807600687781814 Loss (std): 16.630949339742138 Loss ratio: 1.888249698105992 Tokens per Sec: 2211.762605827767
Epoch Step: 25 / 67 Loss (mean): 2.110137112729717 Loss (std): 1.8930013652046327 Loss ratio: 0.8970987495479888 Tokens per Sec: 2909.8150229160997
Epoch Step: 30 / 67 Loss (mean): 1.4628632602107245 Loss (std): 1.369924070972085 Loss ratio: 0.9364676167851452 Tokens per Sec: 2969.687222907968
Epoch Step: 35 / 67 Loss (mean): 1.371828292059945 Loss (std): 1.1086696227300523 Loss ratio: 0.808169381800158 Tokens per Sec: 2527.8189025059773
Epoch Step: 40 / 67 Loss (mean): 1.9287608058948535 Loss (std): 1.5135786954545407 Loss ratio: 0.7847415246248287 Tokens per Sec: 2375.9721260962774
Epoch Step: 45 / 67 Loss (mean): 10.656404819805175 Loss (std): 15.610389347607406 Loss ratio: 1.4648832895870412 Tokens per Sec: 2896.6179336470395
Epoch Step: 50 / 67 Loss (mean): 12.707682532258332 Loss (std): 22.520753342827067 Loss ratio: 1.7722156093889148 Tokens per Sec: 3758.3424315870398
Epoch Step: 55 / 67 Loss (mean): 2.0980666633695364 Loss (std): 1.9601717623727952 Loss ratio: 0.9342752528295363 Tokens per Sec: 3642.4998910322875
Epoch Step: 60 / 67 Loss (mean): 1.7114556622691453 Loss (std): 1.5353388693119208 Loss ratio: 0.8970953225140996 Tokens per Sec: 2688.2080352331936
Epoch Step: 65 / 67 Loss (mean): 1.4573556321847718 Loss (std): 1.1722234644016398 Loss ratio: 0.8043496306006788 Tokens per Sec: 2352.475275840001
Mean loss per sample: 2.8864475740900284 Std loss per sample: 7.188382881820463 ratio: 2.4903909381020535
Epoch ended with duration 0:00:11.513241
Train perplexity: 1.4777719774644873
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 83.79608079791069 Loss (std): 38.43005797754563 Loss ratio: 0.4586140259975478 Tokens per Sec: 4427.449597416668
Mean loss per sample: 87.86276805547418 Std loss per sample: 45.63461263011614 ratio: 0.5193851006526868
Epoch ended with duration 0:00:01.017242
b'BLEU = 2.50, 8.3/2.7/1.7/1.3 (BP=0.942, ratio=0.944, hyp_len=2938, ref_len=3113)\n'
Validation perplexity: 148297.97040379286
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.5
Model saved checkpoint_commit_msg_generator!
Epoch 291 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.5477495928062126 Loss (std): 1.1741199370526114 Loss ratio: 0.7585981236950764 Tokens per Sec: 2649.9204729087546
Epoch Step: 10 / 67 Loss (mean): 2.0205715061165392 Loss (std): 1.911878250022584 Loss ratio: 0.9462066767917263 Tokens per Sec: 2940.126794885962
Epoch Step: 15 / 67 Loss (mean): 1.5161772420397028 Loss (std): 1.3526978248041592 Loss ratio: 0.8921765788967945 Tokens per Sec: 2452.5905403718957
Epoch Step: 20 / 67 Loss (mean): 1.5269015175872482 Loss (std): 1.2841126590193692 Loss ratio: 0.840992457096038 Tokens per Sec: 2446.089740796341
Epoch Step: 25 / 67 Loss (mean): 1.6551354231778532 Loss (std): 1.2678855242358171 Loss ratio: 0.7660312905402521 Tokens per Sec: 2761.024566450387
Epoch Step: 30 / 67 Loss (mean): 2.6302853734232485 Loss (std): 1.9830643823775131 Loss ratio: 0.7539350681924699 Tokens per Sec: 3699.1337970528093
Epoch Step: 35 / 67 Loss (mean): 1.6542045352980494 Loss (std): 1.390465198261739 Loss ratio: 0.8405642522381366 Tokens per Sec: 2865.6410537427046
Epoch Step: 40 / 67 Loss (mean): 1.9210130480350927 Loss (std): 1.6332876925231588 Loss ratio: 0.8502220712106908 Tokens per Sec: 3042.4876270541426
Epoch Step: 45 / 67 Loss (mean): 1.6309937020996585 Loss (std): 1.5780342341021654 Loss ratio: 0.9675293240376613 Tokens per Sec: 2200.2722811591984
Epoch Step: 50 / 67 Loss (mean): 14.129013081197627 Loss (std): 22.250549560982744 Loss ratio: 1.574812722807438 Tokens per Sec: 2624.1693733052007
Epoch Step: 55 / 67 Loss (mean): 1.8199272366473451 Loss (std): 1.5452687502772957 Loss ratio: 0.8490827100999802 Tokens per Sec: 3169.825958038289
Epoch Step: 60 / 67 Loss (mean): 3.2701494357315823 Loss (std): 2.2572797173220707 Loss ratio: 0.6902680631831991 Tokens per Sec: 2921.3909255831727
Epoch Step: 65 / 67 Loss (mean): 1.836682079883758 Loss (std): 1.8965574524951285 Loss ratio: 1.0325997478100075 Tokens per Sec: 2478.635117124122
Mean loss per sample: 2.7445971394053026 Std loss per sample: 7.609884419293465 ratio: 2.7726781136784138
Epoch ended with duration 0:00:11.496421
Train perplexity: 1.449680532199776
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 83.65586346387863 Loss (std): 38.365290133823244 Loss ratio: 0.4586085008899443 Tokens per Sec: 4318.085496531171
Mean loss per sample: 89.15384716894783 Std loss per sample: 44.51561751774448 ratio: 0.499312356463841
Epoch ended with duration 0:00:01.033861
b'BLEU = 2.60, 8.7/2.8/1.8/1.4 (BP=0.921, ratio=0.924, hyp_len=2876, ref_len=3113)\n'
Validation perplexity: 176653.09754686477
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.6
Epoch 292 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.6973272897303104 Loss (std): 1.5020481139546609 Loss ratio: 0.8849490154567198 Tokens per Sec: 2651.329572344622
Epoch Step: 10 / 67 Loss (mean): 2.1998931169509888 Loss (std): 1.6293792636352302 Loss ratio: 0.7406629217939096 Tokens per Sec: 3189.6499894121625
Epoch Step: 15 / 67 Loss (mean): 1.4207670309115201 Loss (std): 1.1580409594077776 Loss ratio: 0.8150815258324332 Tokens per Sec: 2464.7515846575307
Epoch Step: 20 / 67 Loss (mean): 1.4433332299231552 Loss (std): 1.2242052617239136 Loss ratio: 0.8481792259359897 Tokens per Sec: 3361.419570183003
Epoch Step: 25 / 67 Loss (mean): 1.4547282029525377 Loss (std): 1.4730785298899933 Loss ratio: 1.0126142649191867 Tokens per Sec: 2831.9780215172473
Epoch Step: 30 / 67 Loss (mean): 1.3836430465453304 Loss (std): 1.2318798909616717 Loss ratio: 0.8903162517510713 Tokens per Sec: 2802.419446302773
Epoch Step: 35 / 67 Loss (mean): 1.8176713736029342 Loss (std): 1.4939312110666134 Loss ratio: 0.8218929080152632 Tokens per Sec: 3104.215543035791
Epoch Step: 40 / 67 Loss (mean): 1.4782561764586717 Loss (std): 1.1515643575197647 Loss ratio: 0.7790018914573157 Tokens per Sec: 2455.6374234383497
Epoch Step: 45 / 67 Loss (mean): 1.9789469498209655 Loss (std): 1.5770947488645612 Loss ratio: 0.7969363448612103 Tokens per Sec: 2686.1674324047835
Epoch Step: 50 / 67 Loss (mean): 1.80590377910994 Loss (std): 1.4682208291103622 Loss ratio: 0.8130116599202154 Tokens per Sec: 2861.195190757252
Epoch Step: 55 / 67 Loss (mean): 1.6269744283054024 Loss (std): 1.1060073357988967 Loss ratio: 0.6797939270323221 Tokens per Sec: 2571.807962462484
Epoch Step: 60 / 67 Loss (mean): 5.892916122717517 Loss (std): 14.970359217215625 Loss ratio: 2.5403991683343436 Tokens per Sec: 2527.1765447293924
Epoch Step: 65 / 67 Loss (mean): 1.5593973813811317 Loss (std): 1.3002540162268184 Loss ratio: 0.8338182632288413 Tokens per Sec: 2931.6793866235143
Mean loss per sample: 2.3252483730880518 Std loss per sample: 5.710298378010943 ratio: 2.4557799691855573
Epoch ended with duration 0:00:11.459918
Train perplexity: 1.3697187696695785
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command use 0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 83.030891507864 Loss (std): 38.56459131323138 Loss ratio: 0.46446076409499787 Tokens per Sec: 4280.590656777884
Mean loss per sample: 89.00441342567811 Std loss per sample: 45.939498039091355 ratio: 0.5161485399536113
Epoch ended with duration 0:00:01.036839
b'BLEU = 2.51, 8.3/2.8/1.8/1.3 (BP=0.927, ratio=0.930, hyp_len=2894, ref_len=3113)\n'
Validation perplexity: 173111.6842260323
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.51
Epoch 293 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.3622836190043017 Loss (std): 1.1589258393451873 Loss ratio: 0.8507228767767542 Tokens per Sec: 2498.8653594612033
Epoch Step: 10 / 67 Loss (mean): 1.9063390998053364 Loss (std): 1.83319469157544 Loss ratio: 0.9616309562987165 Tokens per Sec: 2784.8266651593503
Epoch Step: 15 / 67 Loss (mean): 1.8252214270178229 Loss (std): 1.5907146658196814 Loss ratio: 0.8715187331647233 Tokens per Sec: 2679.2532987063664
Epoch Step: 20 / 67 Loss (mean): 1.970844873576425 Loss (std): 1.7345232843226936 Loss ratio: 0.8800912276647697 Tokens per Sec: 2564.7349571597115
Epoch Step: 25 / 67 Loss (mean): 1.3629572173231281 Loss (std): 1.3089365535135329 Loss ratio: 0.9603651067524388 Tokens per Sec: 2789.7931120135977
Epoch Step: 30 / 67 Loss (mean): 1.5897529355133884 Loss (std): 1.1386970647084373 Loss ratio: 0.7162729750460949 Tokens per Sec: 2735.6857010064214
Epoch Step: 35 / 67 Loss (mean): 1.6729631796479225 Loss (std): 1.478067750734754 Loss ratio: 0.8835028581118057 Tokens per Sec: 2883.6745212507312
Epoch Step: 40 / 67 Loss (mean): 1.5018806446751114 Loss (std): 1.499690967809631 Loss ratio: 0.9985420433552801 Tokens per Sec: 2629.1513359823102
Epoch Step: 45 / 67 Loss (mean): 1.8633593197446316 Loss (std): 1.5847766545988016 Loss ratio: 0.8504943935429431 Tokens per Sec: 3039.181965574681
Epoch Step: 50 / 67 Loss (mean): 1.293647676706314 Loss (std): 1.0649196975291284 Loss ratio: 0.8231914428513198 Tokens per Sec: 3168.0937518588257
Epoch Step: 55 / 67 Loss (mean): 1.6176120161544532 Loss (std): 1.2881884956188825 Loss ratio: 0.7963519575486904 Tokens per Sec: 2991.4007770950006
Epoch Step: 60 / 67 Loss (mean): 2.2566234096884727 Loss (std): 1.6900759546561956 Loss ratio: 0.7489401853229516 Tokens per Sec: 2679.1809691629956
Epoch Step: 65 / 67 Loss (mean): 1.5637224027886987 Loss (std): 1.086016803077141 Loss ratio: 0.6945074145771457 Tokens per Sec: 2530.281358684329
Mean loss per sample: 2.357184612796285 Std loss per sample: 6.343249911696363 ratio: 2.6910280498443786
Epoch ended with duration 0:00:11.447713
Train perplexity: 1.3756500805854337
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings not cipher suites call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 83.43765276670456 Loss (std): 37.72772827392218 Loss ratio: 0.45216670199736575 Tokens per Sec: 4187.000887341158
Mean loss per sample: 90.64167927010138 Std loss per sample: 45.19404102802815 ratio: 0.4986011004204292
Epoch ended with duration 0:00:01.047829
b'BLEU = 2.58, 7.9/2.7/1.8/1.4 (BP=0.958, ratio=0.959, hyp_len=2984, ref_len=3113)\n'
Validation perplexity: 216116.10963931237
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.58
Epoch 294 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.5927766604581848 Loss (std): 1.2427997083858233 Loss ratio: 0.780272425657163 Tokens per Sec: 2694.2777657775987
Epoch Step: 10 / 67 Loss (mean): 1.3046315776300617 Loss (std): 1.277527904150279 Loss ratio: 0.979225036443608 Tokens per Sec: 3183.9197888077
Epoch Step: 15 / 67 Loss (mean): 1.5146996460971422 Loss (std): 1.312408495502379 Loss ratio: 0.8664480109201862 Tokens per Sec: 2968.7811288206944
Epoch Step: 20 / 67 Loss (mean): 1.0117678116366733 Loss (std): 1.28934727200637 Loss ratio: 1.274350950066966 Tokens per Sec: 2364.454225114126
Epoch Step: 25 / 67 Loss (mean): 1.8219109749188647 Loss (std): 1.6634173850237124 Loss ratio: 0.9130069514498586 Tokens per Sec: 2504.023010505923
Epoch Step: 30 / 67 Loss (mean): 1.3386896143201739 Loss (std): 1.067720879723957 Loss ratio: 0.7975865863919301 Tokens per Sec: 2865.2196201188335
Epoch Step: 35 / 67 Loss (mean): 1.5860929886694066 Loss (std): 1.4058005083889178 Loss ratio: 0.8863291865177851 Tokens per Sec: 3110.8377024046713
Epoch Step: 40 / 67 Loss (mean): 1.933905049576424 Loss (std): 1.384789636899695 Loss ratio: 0.7160587523172351 Tokens per Sec: 2537.0937517612333
Epoch Step: 45 / 67 Loss (mean): 1.13350854878081 Loss (std): 0.9954887651518209 Loss ratio: 0.8782366628134902 Tokens per Sec: 2704.5142638920743
Epoch Step: 50 / 67 Loss (mean): 1.5367226348025724 Loss (std): 1.7186359491346455 Loss ratio: 1.1183774548589531 Tokens per Sec: 3276.0516644185254
Epoch Step: 55 / 67 Loss (mean): 0.6851482254319957 Loss (std): 0.7655577102298008 Loss ratio: 1.117360713803361 Tokens per Sec: 2296.3209718292615
Epoch Step: 60 / 67 Loss (mean): 1.2869705011107726 Loss (std): 1.1716435738647708 Loss ratio: 0.9103888339736892 Tokens per Sec: 2720.4299022100763
Epoch Step: 65 / 67 Loss (mean): 1.6518398158950731 Loss (std): 1.3854245952160968 Loss ratio: 0.8387160679169031 Tokens per Sec: 2678.5485829247455
Mean loss per sample: 1.8274235868369908 Std loss per sample: 3.721759209610844 ratio: 2.0366155041550478
Epoch ended with duration 0:00:11.421229
Train perplexity: 1.28049905629408
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings from inactive ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 84.2563054561615 Loss (std): 38.42651978440493 Loss ratio: 0.4560669919760275 Tokens per Sec: 4284.9490886240455
Mean loss per sample: 90.23444079033663 Std loss per sample: 46.42092968692486 ratio: 0.5144480231753833
Epoch ended with duration 0:00:01.037105
b'BLEU = 2.51, 8.2/2.9/1.8/1.3 (BP=0.916, ratio=0.919, hyp_len=2862, ref_len=3113)\n'
Validation perplexity: 204512.21393589527
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.51
Epoch 295 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.078561455127783 Loss (std): 1.848381418694342 Loss ratio: 0.8892599322162978 Tokens per Sec: 2350.6776447609577
Epoch Step: 10 / 67 Loss (mean): 1.2071528103842866 Loss (std): 1.0538017181823858 Loss ratio: 0.8729646397020085 Tokens per Sec: 2784.472641153825
Epoch Step: 15 / 67 Loss (mean): 1.4111614830617327 Loss (std): 1.1914193047179167 Loss ratio: 0.8442827550344901 Tokens per Sec: 2570.011129931801
Epoch Step: 20 / 67 Loss (mean): 3.0098821353167295 Loss (std): 1.9180548930505894 Loss ratio: 0.6372524925627204 Tokens per Sec: 3134.583088880872
Epoch Step: 25 / 67 Loss (mean): 1.25854047795292 Loss (std): 1.008402413906112 Loss ratio: 0.801247501825551 Tokens per Sec: 2637.144864112172
Epoch Step: 30 / 67 Loss (mean): 10.312059740012046 Loss (std): 19.387115943653875 Loss ratio: 1.8800430207390582 Tokens per Sec: 2645.696145105517
Epoch Step: 35 / 67 Loss (mean): 1.4033051194855943 Loss (std): 1.223496110590112 Loss ratio: 0.871867488831371 Tokens per Sec: 2649.677609912825
Epoch Step: 40 / 67 Loss (mean): 1.8572848066396546 Loss (std): 1.6353286820224813 Loss ratio: 0.8804942980076633 Tokens per Sec: 3349.1787891750646
Epoch Step: 45 / 67 Loss (mean): 1.7738239370519295 Loss (std): 1.3061481965188901 Loss ratio: 0.7363460201634724 Tokens per Sec: 2576.906689034254
Epoch Step: 50 / 67 Loss (mean): 1.2147380860842532 Loss (std): 1.0303364265862365 Loss ratio: 0.8481963629769432 Tokens per Sec: 2810.4172681007944
Epoch Step: 55 / 67 Loss (mean): 2.003603611374274 Loss (std): 1.5546435055559928 Loss ratio: 0.7759236890622597 Tokens per Sec: 3128.945179061474
Epoch Step: 60 / 67 Loss (mean): 1.1597719924902776 Loss (std): 0.9839988244677024 Loss ratio: 0.8484416168343979 Tokens per Sec: 2480.5907365714097
Epoch Step: 65 / 67 Loss (mean): 1.389527901657857 Loss (std): 1.1998433457077848 Loss ratio: 0.863489926525579 Tokens per Sec: 2845.7628328489714
Mean loss per sample: 2.354202189130173 Std loss per sample: 6.356078152338522 ratio: 2.6998862636717518
Epoch ended with duration 0:00:11.502703
Train perplexity: 1.3750950887749627
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print during switch not used[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test java method_1 for sslcontext.tls[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 84.16594758629799 Loss (std): 39.91196444799656 Loss ratio: 0.47420560918741594 Tokens per Sec: 4378.5807473874265
Mean loss per sample: 89.08951693748841 Std loss per sample: 46.875163231601 ratio: 0.5261580132317024
Epoch ended with duration 0:00:01.028116
b'BLEU = 2.68, 9.1/2.8/1.9/1.5 (BP=0.924, ratio=0.926, hyp_len=2884, ref_len=3113)\n'
Validation perplexity: 175119.7472581024
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.68
Model saved checkpoint_commit_msg_generator!
Epoch 296 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.8285459796898067 Loss (std): 1.3331637977008381 Loss ratio: 0.7290840987914317 Tokens per Sec: 2874.643231414889
Epoch Step: 10 / 67 Loss (mean): 6.410703663481399 Loss (std): 15.646598489828532 Loss ratio: 2.4406990731703053 Tokens per Sec: 2746.6147824653244
Epoch Step: 15 / 67 Loss (mean): 1.3816370947170071 Loss (std): 1.005418469534508 Loss ratio: 0.7277008364779336 Tokens per Sec: 2593.924739964359
Epoch Step: 20 / 67 Loss (mean): 1.161230819299817 Loss (std): 1.0614126993915336 Loss ratio: 0.914041103414332 Tokens per Sec: 2667.499139366439
Epoch Step: 25 / 67 Loss (mean): 1.34683603560552 Loss (std): 1.2023116601984225 Loss ratio: 0.8926934150955345 Tokens per Sec: 2286.723060277559
Epoch Step: 30 / 67 Loss (mean): 1.4416870834538713 Loss (std): 1.302568068352616 Loss ratio: 0.9035026277907923 Tokens per Sec: 2447.7254367705673
Epoch Step: 35 / 67 Loss (mean): 1.7049550379160792 Loss (std): 1.4466594834494555 Loss ratio: 0.8485030110926964 Tokens per Sec: 2839.4296530842776
Epoch Step: 40 / 67 Loss (mean): 1.361788495327346 Loss (std): 1.3939587578550003 Loss ratio: 1.0236235381911647 Tokens per Sec: 3102.253847617144
Epoch Step: 45 / 67 Loss (mean): 2.094116671476513 Loss (std): 1.6374997576604575 Loss ratio: 0.7819524957536842 Tokens per Sec: 3534.081502267079
Epoch Step: 50 / 67 Loss (mean): 1.277622993919067 Loss (std): 1.0597372661571214 Loss ratio: 0.8294600764083087 Tokens per Sec: 2655.914520993986
Epoch Step: 55 / 67 Loss (mean): 1.4530966248130426 Loss (std): 1.11885214494738 Loss ratio: 0.7699778017799285 Tokens per Sec: 2457.754039505158
Epoch Step: 60 / 67 Loss (mean): 1.2644627580884844 Loss (std): 1.2686333640117413 Loss ratio: 1.003298322466659 Tokens per Sec: 2829.386921924955
Epoch Step: 65 / 67 Loss (mean): 6.668119794660015 Loss (std): 14.58653759996221 Loss ratio: 2.187503831536357 Tokens per Sec: 2955.920008784909
Mean loss per sample: 2.5601573801481883 Std loss per sample: 7.05943780278841 ratio: 2.757423374644176
Epoch ended with duration 0:00:11.498731
Train perplexity: 1.4139519181464135
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings not during command and call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test java method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 84.31749150156975 Loss (std): 39.45738556979398 Loss ratio: 0.46796204283496023 Tokens per Sec: 4432.471765931955
Mean loss per sample: 88.7516728544333 Std loss per sample: 46.59472579052695 ratio: 0.5250010990435034
Epoch ended with duration 0:00:01.019874
b'BLEU = 2.55, 7.9/2.9/1.9/1.4 (BP=0.910, ratio=0.914, hyp_len=2845, ref_len=3113)\n'
Validation perplexity: 167282.84884122832
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.55
Epoch 297 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.320406168117188 Loss (std): 1.3910885076411175 Loss ratio: 1.0535307553316855 Tokens per Sec: 2778.7679496157025
Epoch Step: 10 / 67 Loss (mean): 1.474972955940757 Loss (std): 1.2332797957011448 Loss ratio: 0.8361372259293682 Tokens per Sec: 2896.667347677704
Epoch Step: 15 / 67 Loss (mean): 1.9682604325935245 Loss (std): 1.8527460599004195 Loss ratio: 0.9413114388826611 Tokens per Sec: 2525.729029664663
Epoch Step: 20 / 67 Loss (mean): 6.10540507233236 Loss (std): 11.40631574901881 Loss ratio: 1.8682324291157015 Tokens per Sec: 2672.2335470454905
Epoch Step: 25 / 67 Loss (mean): 1.3883922901004553 Loss (std): 1.793414486383866 Loss ratio: 1.2917202862413661 Tokens per Sec: 2644.89957950631
Epoch Step: 30 / 67 Loss (mean): 1.5078639924759045 Loss (std): 1.1951057106385776 Loss ratio: 0.7925819016847936 Tokens per Sec: 2881.681364384189
Epoch Step: 35 / 67 Loss (mean): 1.343104776373366 Loss (std): 1.117273656019742 Loss ratio: 0.8318588956526459 Tokens per Sec: 2438.0032078408453
Epoch Step: 40 / 67 Loss (mean): 1.0577522938838229 Loss (std): 0.8215606369055478 Loss ratio: 0.7767041883586623 Tokens per Sec: 3170.9154580393533
Epoch Step: 45 / 67 Loss (mean): 1.686245184391737 Loss (std): 1.3259156871957074 Loss ratio: 0.7863125122423951 Tokens per Sec: 2495.418281116928
Epoch Step: 50 / 67 Loss (mean): 1.3703479192918167 Loss (std): 1.1210914888858146 Loss ratio: 0.8181071924166415 Tokens per Sec: 2835.563333685081
Epoch Step: 55 / 67 Loss (mean): 1.4904330925783142 Loss (std): 1.173843903503039 Loss ratio: 0.7875857758045317 Tokens per Sec: 3799.838460337231
Epoch Step: 60 / 67 Loss (mean): 1.1845862842164934 Loss (std): 0.9079793520113236 Loss ratio: 0.7664949055288762 Tokens per Sec: 2764.8675016479892
Epoch Step: 65 / 67 Loss (mean): 1.430810297257267 Loss (std): 1.2952934978626904 Loss ratio: 0.9052866759106012 Tokens per Sec: 2498.52857661548
Mean loss per sample: 2.128591979675884 Std loss per sample: 5.866879543368814 ratio: 2.756225523438339
Epoch ended with duration 0:00:11.453743
Train perplexity: 1.3337544862435111
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings from inactive ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test java method_1 extension point[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 84.58738270401955 Loss (std): 38.866680353032294 Loss ratio: 0.4594855534073094 Tokens per Sec: 4394.4418042865445
Mean loss per sample: 89.3105186110393 Std loss per sample: 46.43248837435776 ratio: 0.5198994373392704
Epoch ended with duration 0:00:01.025437
b'BLEU = 2.58, 8.2/2.9/1.8/1.4 (BP=0.926, ratio=0.928, hyp_len=2890, ref_len=3113)\n'
Validation perplexity: 180443.85833626788
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.58
Epoch 298 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.398551000514999 Loss (std): 1.1848615965023628 Loss ratio: 0.8472065702759872 Tokens per Sec: 3285.682390700684
Epoch Step: 10 / 67 Loss (mean): 1.50659209076548 Loss (std): 1.2660480118684605 Loss ratio: 0.8403389475018403 Tokens per Sec: 2879.4642429673863
Epoch Step: 15 / 67 Loss (mean): 1.214514170482289 Loss (std): 1.0825584937252999 Loss ratio: 0.8913510603959532 Tokens per Sec: 2861.403474045347
Epoch Step: 20 / 67 Loss (mean): 0.9273407292785123 Loss (std): 0.9129174368650845 Loss ratio: 0.9844466095815189 Tokens per Sec: 2495.141479507289
Epoch Step: 25 / 67 Loss (mean): 1.3187795486301184 Loss (std): 1.1079417226053776 Loss ratio: 0.8401265577376079 Tokens per Sec: 2356.9541850995115
Epoch Step: 30 / 67 Loss (mean): 1.4831265712273307 Loss (std): 1.3135496730672047 Loss ratio: 0.8856625581053436 Tokens per Sec: 2540.3467919897616
Epoch Step: 35 / 67 Loss (mean): 2.4473933785920963 Loss (std): 2.1948929888526014 Loss ratio: 0.8968288498497329 Tokens per Sec: 2830.6364894554854
Epoch Step: 40 / 67 Loss (mean): 0.5908158713330826 Loss (std): 0.49312275858168003 Loss ratio: 0.8346471083605567 Tokens per Sec: 2390.357299738752
Epoch Step: 45 / 67 Loss (mean): 1.8358139444608241 Loss (std): 1.378119091946711 Loss ratio: 0.750685599760744 Tokens per Sec: 3398.2358422869956
Epoch Step: 50 / 67 Loss (mean): 1.7607903621392325 Loss (std): 1.470838152188469 Loss ratio: 0.8353283751516606 Tokens per Sec: 3078.2047826457338
Epoch Step: 55 / 67 Loss (mean): 5.132382984447759 Loss (std): 11.136923718003285 Loss ratio: 2.1699323202790195 Tokens per Sec: 2618.791212125189
Epoch Step: 60 / 67 Loss (mean): 1.2884814118151553 Loss (std): 1.050212392596582 Loss ratio: 0.8150776433143025 Tokens per Sec: 3241.405962472061
Epoch Step: 65 / 67 Loss (mean): 1.2887432169809472 Loss (std): 1.1179902306252545 Loss ratio: 0.8675042598821942 Tokens per Sec: 2698.60159352735
Mean loss per sample: 1.7420619786453384 Std loss per sample: 3.322313454561716 ratio: 1.9071155304963445
Epoch ended with duration 0:00:11.404403
Train perplexity: 1.2657951331263693
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings on run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test java for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 84.52534508705139 Loss (std): 38.795737756789876 Loss ratio: 0.45898348852447424 Tokens per Sec: 4417.913398710852
Mean loss per sample: 89.21139084217978 Std loss per sample: 46.367636651964325 ratio: 0.5197501822832402
Epoch ended with duration 0:00:01.019340
b'BLEU = 2.48, 8.0/2.8/1.7/1.2 (BP=0.949, ratio=0.951, hyp_len=2959, ref_len=3113)\n'
Validation perplexity: 178036.0587489243
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.48
Epoch 299 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.0901975493179634 Loss (std): 0.8685688716842838 Loss ratio: 0.7967077822066906 Tokens per Sec: 2650.115347452263
Epoch Step: 10 / 67 Loss (mean): 1.2007728918688372 Loss (std): 1.0335998629450085 Loss ratio: 0.8607788116671696 Tokens per Sec: 2624.945383952268
Epoch Step: 15 / 67 Loss (mean): 1.2251620951865334 Loss (std): 1.081589329590753 Loss ratio: 0.8828132488265391 Tokens per Sec: 2666.9668573223335
Epoch Step: 20 / 67 Loss (mean): 1.4626601830532309 Loss (std): 1.1484825758116715 Loss ratio: 0.7852012306879584 Tokens per Sec: 2686.1413050829674
Epoch Step: 25 / 67 Loss (mean): 1.5981314266246045 Loss (std): 1.4094995968869073 Loss ratio: 0.8819672608928639 Tokens per Sec: 2274.8503810382244
Epoch Step: 30 / 67 Loss (mean): 2.0505456485552713 Loss (std): 1.7471753002228856 Loss ratio: 0.8520538430606859 Tokens per Sec: 3072.9077317346487
Epoch Step: 35 / 67 Loss (mean): 2.5298726716428064 Loss (std): 2.0617610315254424 Loss ratio: 0.8149663240508506 Tokens per Sec: 3005.8895717906507
Epoch Step: 40 / 67 Loss (mean): 1.298867939010961 Loss (std): 1.0282172467146713 Loss ratio: 0.7916257040709004 Tokens per Sec: 2714.9110614795395
Epoch Step: 45 / 67 Loss (mean): 1.2924971653847024 Loss (std): 0.9107964916659443 Loss ratio: 0.7046796821367515 Tokens per Sec: 2739.2249523315686
Epoch Step: 50 / 67 Loss (mean): 1.23889786133077 Loss (std): 1.1157426882455028 Loss ratio: 0.9005929569101208 Tokens per Sec: 2670.4675840326818
Epoch Step: 55 / 67 Loss (mean): 1.4415566590323579 Loss (std): 1.3922005946367255 Loss ratio: 0.9657619670469543 Tokens per Sec: 3210.3958964639987
Epoch Step: 60 / 67 Loss (mean): 1.497632556129247 Loss (std): 1.2951653662776077 Loss ratio: 0.8648085012421657 Tokens per Sec: 2529.42380359479
Epoch Step: 65 / 67 Loss (mean): 1.4470271271420643 Loss (std): 1.1118940420872283 Loss ratio: 0.7683988926201148 Tokens per Sec: 3275.088583438403
Mean loss per sample: 2.0908366238667364 Std loss per sample: 5.950981671100489 ratio: 2.8462203135197166
Epoch ended with duration 0:00:11.438096
Train perplexity: 1.3269586553656012
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print during during logging ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 83.65398785471916 Loss (std): 39.08894147928507 Loss ratio: 0.46726931353434514 Tokens per Sec: 4422.22765282864
Mean loss per sample: 88.60927575020517 Std loss per sample: 45.83634375119948 ratio: 0.5172860669848478
Epoch ended with duration 0:00:01.022936
b'BLEU = 2.45, 7.7/2.7/1.7/1.2 (BP=0.959, ratio=0.960, hyp_len=2989, ref_len=3113)\n'
Validation perplexity: 164085.67946348028
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.45
Epoch 300 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.4644148924271576 Loss (std): 1.177259022111399 Loss ratio: 0.8039108508109889 Tokens per Sec: 2814.0101012308164
Epoch Step: 10 / 67 Loss (mean): 1.5018846726015909 Loss (std): 1.2845709445852969 Loss ratio: 0.8553059818901678 Tokens per Sec: 2702.759380718912
Epoch Step: 15 / 67 Loss (mean): 1.4543516596895643 Loss (std): 1.2201469739767636 Loss ratio: 0.8389628229510926 Tokens per Sec: 3069.0320187293287
Epoch Step: 20 / 67 Loss (mean): 1.5567867141216993 Loss (std): 1.3299597476038587 Loss ratio: 0.8542979815665945 Tokens per Sec: 3075.7758818042635
Epoch Step: 25 / 67 Loss (mean): 1.6069880006834865 Loss (std): 1.2731748193786743 Loss ratio: 0.7922740050561459 Tokens per Sec: 2833.2415921465645
Epoch Step: 30 / 67 Loss (mean): 1.1595682155166287 Loss (std): 1.0489423777027398 Loss ratio: 0.904597386912161 Tokens per Sec: 2891.1866907237077
Epoch Step: 35 / 67 Loss (mean): 1.5895903370401356 Loss (std): 1.6434900119875842 Loss ratio: 1.033907902993303 Tokens per Sec: 2924.950309061079
Epoch Step: 40 / 67 Loss (mean): 1.447566339164041 Loss (std): 1.2260131806241774 Loss ratio: 0.8469478375216926 Tokens per Sec: 2808.596967605841
Epoch Step: 45 / 67 Loss (mean): 1.043202485627262 Loss (std): 1.160882856319786 Loss ratio: 1.1128068350237534 Tokens per Sec: 2419.7941688292017
Epoch Step: 50 / 67 Loss (mean): 4.805809700861573 Loss (std): 13.418858271068267 Loss ratio: 2.792215902486228 Tokens per Sec: 2290.013327171628
Epoch Step: 55 / 67 Loss (mean): 1.4507615100592375 Loss (std): 1.3755823746954918 Loss ratio: 0.9481795354767332 Tokens per Sec: 3003.848597888117
Epoch Step: 60 / 67 Loss (mean): 1.4198615859204438 Loss (std): 1.5866343277288957 Loss ratio: 1.1174570419132364 Tokens per Sec: 2672.759226270717
Epoch Step: 65 / 67 Loss (mean): 1.5252541344380006 Loss (std): 1.629116331250212 Loss ratio: 1.0680950108360012 Tokens per Sec: 2688.929342589194
Mean loss per sample: 1.8970949006383362 Std loss per sample: 4.715336138757485 ratio: 2.4855562772167406
Epoch ended with duration 0:00:11.446107
Train perplexity: 1.2926267631701085
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print during switch ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test java method_1 extension point[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 84.49094104766846 Loss (std): 39.14421436367414 Loss ratio: 0.46329480863030736 Tokens per Sec: 4402.7662115027015
Mean loss per sample: 89.47392560566058 Std loss per sample: 46.746615075114796 ratio: 0.5224607589158619
Epoch ended with duration 0:00:01.022268
b'BLEU = 2.40, 7.6/2.6/1.7/1.3 (BP=0.938, ratio=0.940, hyp_len=2927, ref_len=3113)\n'
Validation perplexity: 184484.28245584498
Validation accuracy: 0.0
Validation BLEU: 2.4
Model saved checkpoint_commit_msg_generator!
Epoch 301 / 1000
Epoch Step: 5 / 67 Loss (mean): 9.46486955502769 Loss (std): 21.404007562484466 Loss ratio: 2.261416011921133 Tokens per Sec: 2752.824555655577
Epoch Step: 10 / 67 Loss (mean): 1.1124909428472165 Loss (std): 1.0607893693447945 Loss ratio: 0.9535262971488997 Tokens per Sec: 2976.017977321326
Epoch Step: 15 / 67 Loss (mean): 7.626480501523474 Loss (std): 16.268646674927627 Loss ratio: 2.133178819729203 Tokens per Sec: 2677.4516641886503
Epoch Step: 20 / 67 Loss (mean): 0.764806383112002 Loss (std): 0.7511971095647123 Loss ratio: 0.9822055962818805 Tokens per Sec: 2267.991750222889
Epoch Step: 25 / 67 Loss (mean): 2.8189029465429485 Loss (std): 2.4433301922170942 Loss ratio: 0.866766340860919 Tokens per Sec: 2520.606344962982
Epoch Step: 30 / 67 Loss (mean): 1.2653881465666927 Loss (std): 1.234085000134674 Loss ratio: 0.9752620201817507 Tokens per Sec: 3027.6997159736975
Epoch Step: 35 / 67 Loss (mean): 1.1225705821998417 Loss (std): 1.0339077074764875 Loss ratio: 0.9210179955458958 Tokens per Sec: 2336.119487564432
Epoch Step: 40 / 67 Loss (mean): 9.177317635621876 Loss (std): 18.185099228233046 Loss ratio: 1.9815266236015796 Tokens per Sec: 2442.5256729367375
Epoch Step: 45 / 67 Loss (mean): 1.4714117831317708 Loss (std): 1.136988305325 Loss ratio: 0.7727193151226642 Tokens per Sec: 3067.003976983865
Epoch Step: 50 / 67 Loss (mean): 1.2526367466780357 Loss (std): 1.1435861263338827 Loss ratio: 0.9129431412312047 Tokens per Sec: 3165.449557649392
Epoch Step: 55 / 67 Loss (mean): 1.4217932388419285 Loss (std): 1.2127486719952119 Loss ratio: 0.852971190792139 Tokens per Sec: 2533.903298672632
Epoch Step: 60 / 67 Loss (mean): 1.2896101786755025 Loss (std): 1.1819667527406876 Loss ratio: 0.9165302602951146 Tokens per Sec: 2863.0691322414295
Epoch Step: 65 / 67 Loss (mean): 2.813189941458404 Loss (std): 2.0241680152997525 Loss ratio: 0.7195276740718014 Tokens per Sec: 3320.6499681178398
Mean loss per sample: 2.3671744173252716 Std loss per sample: 6.564813830990759 ratio: 2.7732700146398606
Epoch ended with duration 0:00:11.497766
Train perplexity: 1.3775106907186274
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the time call ( ) command[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 85.18995299935341 Loss (std): 39.284694218519775 Loss ratio: 0.46114233938851856 Tokens per Sec: 4437.477782479898
Mean loss per sample: 89.70448639353768 Std loss per sample: 46.87665394728562 ratio: 0.5225675529943463
Epoch ended with duration 0:00:01.018067
b'BLEU = 2.72, 8.2/3.0/1.9/1.4 (BP=0.951, ratio=0.952, hyp_len=2965, ref_len=3113)\n'
Validation perplexity: 190339.51268402414
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.72
Epoch 302 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6211092288029336 Loss (std): 0.5200659676739658 Loss ratio: 0.8373180489948461 Tokens per Sec: 2683.1188429461436
Epoch Step: 10 / 67 Loss (mean): 1.480816711729858 Loss (std): 1.5935146904736888 Loss ratio: 1.0761052855840474 Tokens per Sec: 2949.185658975869
Epoch Step: 15 / 67 Loss (mean): 1.144065912696533 Loss (std): 1.1211539754485058 Loss ratio: 0.9799732366870154 Tokens per Sec: 2588.8565646531047
Epoch Step: 20 / 67 Loss (mean): 3.0233113078866154 Loss (std): 2.4578807219831678 Loss ratio: 0.812976392993846 Tokens per Sec: 2760.156014458686
Epoch Step: 25 / 67 Loss (mean): 1.5304002314805984 Loss (std): 1.168837880539423 Loss ratio: 0.7637465393014357 Tokens per Sec: 3100.3096762958867
Epoch Step: 30 / 67 Loss (mean): 1.4914380779955536 Loss (std): 1.5572652069639432 Loss ratio: 1.0441366825345235 Tokens per Sec: 2629.415068076724
Epoch Step: 35 / 67 Loss (mean): 1.2839339595811907 Loss (std): 1.1414305909586293 Loss ratio: 0.8890103594821614 Tokens per Sec: 2610.690650527547
Epoch Step: 40 / 67 Loss (mean): 1.5100157837150618 Loss (std): 1.9162926291921203 Loss ratio: 1.2690547011882907 Tokens per Sec: 2695.1964607614673
Epoch Step: 45 / 67 Loss (mean): 1.3677864053752273 Loss (std): 1.2444480383656267 Loss ratio: 0.909826295593452 Tokens per Sec: 2373.062626769995
Epoch Step: 50 / 67 Loss (mean): 2.0157685293233953 Loss (std): 2.050213985750121 Loss ratio: 1.01708800188397 Tokens per Sec: 2961.73452273808
Epoch Step: 55 / 67 Loss (mean): 1.2887173171620816 Loss (std): 1.0749680275181737 Loss ratio: 0.8341379550058263 Tokens per Sec: 2433.8803504774037
Epoch Step: 60 / 67 Loss (mean): 11.498048800509423 Loss (std): 19.53024816797255 Loss ratio: 1.6985706450565126 Tokens per Sec: 2751.983624901307
Epoch Step: 65 / 67 Loss (mean): 1.6525647355010733 Loss (std): 1.4868150100339548 Loss ratio: 0.8997015233918436 Tokens per Sec: 3464.8199024475402
Mean loss per sample: 2.6358657790593756 Std loss per sample: 7.369475657050567 ratio: 2.795846327076794
Epoch ended with duration 0:00:11.505185
Train perplexity: 1.4285099207242387
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command line 0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 84.71675872802734 Loss (std): 38.78519092126508 Loss ratio: 0.4578219410610376 Tokens per Sec: 4271.437018666639
Mean loss per sample: 90.76191197360149 Std loss per sample: 46.617174695598266 ratio: 0.5136204568845694
Epoch ended with duration 0:00:01.040346
b'BLEU = 2.54, 8.0/2.7/1.7/1.2 (BP=0.977, ratio=0.978, hyp_len=3043, ref_len=3113)\n'
Validation perplexity: 219666.28157951447
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.54
Epoch 303 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.1838540316966828 Loss (std): 1.2145588717688536 Loss ratio: 1.025936339489561 Tokens per Sec: 2537.2443849568394
Epoch Step: 10 / 67 Loss (mean): 1.2435440100671258 Loss (std): 1.0027513939791182 Loss ratio: 0.8063658269119002 Tokens per Sec: 2494.6672085441173
Epoch Step: 15 / 67 Loss (mean): 1.151194453559583 Loss (std): 1.1073782454563716 Loss ratio: 0.961938482271411 Tokens per Sec: 2876.6827877444666
Epoch Step: 20 / 67 Loss (mean): 1.4770108404336497 Loss (std): 1.1922183373626007 Loss ratio: 0.8071832005055332 Tokens per Sec: 2178.4757775378484
Epoch Step: 25 / 67 Loss (mean): 1.3233220151159912 Loss (std): 1.1612223913181348 Loss ratio: 0.877505533841173 Tokens per Sec: 2851.887037077706
Epoch Step: 30 / 67 Loss (mean): 1.27142984198872 Loss (std): 1.2286884801248845 Loss ratio: 0.9663832321278686 Tokens per Sec: 2288.2320271910635
Epoch Step: 35 / 67 Loss (mean): 5.986838084456394 Loss (std): 15.179256948654723 Loss ratio: 2.535438028308227 Tokens per Sec: 2309.8794076058643
Epoch Step: 40 / 67 Loss (mean): 1.3031163143459707 Loss (std): 1.295844282784224 Loss ratio: 0.9944195069298963 Tokens per Sec: 2973.77375314562
Epoch Step: 45 / 67 Loss (mean): 1.2322174464934506 Loss (std): 1.1448889523401302 Loss ratio: 0.929128990664892 Tokens per Sec: 2937.710740665731
Epoch Step: 50 / 67 Loss (mean): 1.7275137460965198 Loss (std): 1.4980712678676005 Loss ratio: 0.8671834138817325 Tokens per Sec: 3148.254114686421
Epoch Step: 55 / 67 Loss (mean): 1.4362775832414627 Loss (std): 1.4405697915923195 Loss ratio: 1.0029884253579797 Tokens per Sec: 3046.8184964477177
Epoch Step: 60 / 67 Loss (mean): 1.4431369316880591 Loss (std): 1.3871814822140154 Loss ratio: 0.9612265140989831 Tokens per Sec: 3585.0175565451996
Epoch Step: 65 / 67 Loss (mean): 2.1065309282857925 Loss (std): 1.903388538853115 Loss ratio: 0.9035654370391863 Tokens per Sec: 3107.820144382981
Mean loss per sample: 1.9922330117270532 Std loss per sample: 5.133636608971284 ratio: 2.576825390781458
Epoch ended with duration 0:00:11.486379
Train perplexity: 1.3093732109896699
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test java for generic[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 85.36915698647499 Loss (std): 39.26383505815072 Loss ratio: 0.4599299846005423 Tokens per Sec: 4410.14791876812
Mean loss per sample: 89.89252737946198 Std loss per sample: 46.38974514445579 ratio: 0.5160578581646887
Epoch ended with duration 0:00:01.022164
b'BLEU = 2.46, 7.5/2.6/1.6/1.2 (BP=0.988, ratio=0.988, hyp_len=3076, ref_len=3113)\n'
Validation perplexity: 195252.24917707258
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.46
Epoch 304 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.4664056755718775 Loss (std): 1.3761848714095641 Loss ratio: 0.9384748670403716 Tokens per Sec: 2664.908356557052
Epoch Step: 10 / 67 Loss (mean): 1.4089387509739026 Loss (std): 1.0615493453997353 Loss ratio: 0.7534389586956559 Tokens per Sec: 2719.249248092577
Epoch Step: 15 / 67 Loss (mean): 1.566046263964381 Loss (std): 1.5911303572347102 Loss ratio: 1.016017466308326 Tokens per Sec: 2615.236290660576
Epoch Step: 20 / 67 Loss (mean): 1.1443441171431914 Loss (std): 1.0875874714904683 Loss ratio: 0.9504024665286752 Tokens per Sec: 2907.097434292718
Epoch Step: 25 / 67 Loss (mean): 1.147174982528668 Loss (std): 0.9448028090897845 Loss ratio: 0.8235908413964859 Tokens per Sec: 2862.812034487454
Epoch Step: 30 / 67 Loss (mean): 1.3781646219140384 Loss (std): 1.3649077090824369 Loss ratio: 0.9903807479739322 Tokens per Sec: 2742.259201327877
Epoch Step: 35 / 67 Loss (mean): 6.250982179109997 Loss (std): 11.931551122103368 Loss ratio: 1.9087482223157066 Tokens per Sec: 2233.662825170794
Epoch Step: 40 / 67 Loss (mean): 1.141706630733097 Loss (std): 1.129634030116795 Loss ratio: 0.9894258294632571 Tokens per Sec: 2878.1572667136625
Epoch Step: 45 / 67 Loss (mean): 1.0960558747174218 Loss (std): 0.9092005403471736 Loss ratio: 0.8295202473884626 Tokens per Sec: 2746.6643138776217
Epoch Step: 50 / 67 Loss (mean): 1.4649699496803805 Loss (std): 1.298205004527779 Loss ratio: 0.8861649379299655 Tokens per Sec: 2939.8098598892375
Epoch Step: 55 / 67 Loss (mean): 1.4757271215785295 Loss (std): 1.204680788675364 Loss ratio: 0.8163303168046153 Tokens per Sec: 2770.8104275260284
Epoch Step: 60 / 67 Loss (mean): 2.3878362538816873 Loss (std): 1.9276575346582585 Loss ratio: 0.8072821289670268 Tokens per Sec: 3143.2731870906127
Epoch Step: 65 / 67 Loss (mean): 1.2596353903063573 Loss (std): 0.9876125755478697 Loss ratio: 0.7840463860797618 Tokens per Sec: 2838.184512358996
Mean loss per sample: 1.9528527219411496 Std loss per sample: 5.217653840635638 ratio: 2.671811233900554
Epoch ended with duration 0:00:11.428140
Train perplexity: 1.3024152376292413
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings from inactive ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 85.0594365298748 Loss (std): 39.08514127990168 Loss ratio: 0.45950388192583536 Tokens per Sec: 4275.692752738608
Mean loss per sample: 92.90744625202944 Std loss per sample: 45.66270147519291 ratio: 0.4914859176230502
Epoch ended with duration 0:00:01.053677
b'BLEU = 2.56, 8.2/2.8/1.8/1.4 (BP=0.926, ratio=0.929, hyp_len=2892, ref_len=3113)\n'
Validation perplexity: 293790.76128555747
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.56
Epoch 305 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.9453883568348829 Loss (std): 0.825601400837774 Loss ratio: 0.873293387705609 Tokens per Sec: 2668.8753509686017
Epoch Step: 10 / 67 Loss (mean): 1.4074542380985804 Loss (std): 1.3817702011583493 Loss ratio: 0.981751423069407 Tokens per Sec: 2654.9337245116903
Epoch Step: 15 / 67 Loss (mean): 1.2122010758466786 Loss (std): 1.0811445233251529 Loss ratio: 0.891885467573944 Tokens per Sec: 3159.37709105718
Epoch Step: 20 / 67 Loss (mean): 1.690624544658931 Loss (std): 1.1338043913433598 Loss ratio: 0.6706423344705995 Tokens per Sec: 2467.7384740037796
Epoch Step: 25 / 67 Loss (mean): 1.3432008919480722 Loss (std): 1.3696690379254568 Loss ratio: 1.0197052772493302 Tokens per Sec: 2892.1938385810067
Epoch Step: 30 / 67 Loss (mean): 1.707143431121949 Loss (std): 1.4769312810069897 Loss ratio: 0.8651477398336342 Tokens per Sec: 3273.5937008599153
Epoch Step: 35 / 67 Loss (mean): 1.1334437902551144 Loss (std): 1.263084379958315 Loss ratio: 1.1143776081511911 Tokens per Sec: 2661.2317086795497
Epoch Step: 40 / 67 Loss (mean): 1.228145259898156 Loss (std): 1.0854108644736282 Loss ratio: 0.883780526550773 Tokens per Sec: 2751.8037764589153
Epoch Step: 45 / 67 Loss (mean): 1.0937514702090994 Loss (std): 1.027378172010155 Loss ratio: 0.93931592321768 Tokens per Sec: 2486.402571971722
Epoch Step: 50 / 67 Loss (mean): 1.7697246326133609 Loss (std): 1.4770303333795312 Loss ratio: 0.8346102586583729 Tokens per Sec: 3272.627355266945
Epoch Step: 55 / 67 Loss (mean): 1.2089403693098575 Loss (std): 1.1209812503932584 Loss ratio: 0.927242797784301 Tokens per Sec: 3032.391554001229
Epoch Step: 60 / 67 Loss (mean): 1.267681048833765 Loss (std): 1.1349646221247114 Loss ratio: 0.8953077141674166 Tokens per Sec: 2692.4019018988574
Epoch Step: 65 / 67 Loss (mean): 1.681164387962781 Loss (std): 1.3807099804657341 Loss ratio: 0.8212819581188401 Tokens per Sec: 2364.660075109821
Mean loss per sample: 2.0121958234479047 Std loss per sample: 5.476805325920948 ratio: 2.721805334302117
Epoch ended with duration 0:00:11.503762
Train perplexity: 1.3129145596014673
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 85.29410520195961 Loss (std): 38.687399076826345 Loss ratio: 0.45357646915015076 Tokens per Sec: 4385.124004039951
Mean loss per sample: 90.92532799258584 Std loss per sample: 46.4799163300823 ratio: 0.5111877774460415
Epoch ended with duration 0:00:01.039283
b'BLEU = 2.23, 7.8/2.5/1.5/1.1 (BP=0.945, ratio=0.946, hyp_len=2946, ref_len=3113)\n'
Validation perplexity: 224585.23261007783
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.23
Model saved checkpoint_commit_msg_generator!
Epoch 306 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.2889062813483179 Loss (std): 1.5388539048652983 Loss ratio: 1.1939222634988724 Tokens per Sec: 2466.2092947095775
Epoch Step: 10 / 67 Loss (mean): 1.1893283531971974 Loss (std): 1.1400260753872296 Loss ratio: 0.9585461174978032 Tokens per Sec: 3093.6831986132056
Epoch Step: 15 / 67 Loss (mean): 1.4585980955744162 Loss (std): 1.2190878518877943 Loss ratio: 0.8357942160946676 Tokens per Sec: 2573.9045633917667
Epoch Step: 20 / 67 Loss (mean): 1.0556688402430154 Loss (std): 0.947805146714596 Loss ratio: 0.8978243087068961 Tokens per Sec: 2763.8036981667383
Epoch Step: 25 / 67 Loss (mean): 1.9318178643006831 Loss (std): 1.5355424375322866 Loss ratio: 0.7948691571335852 Tokens per Sec: 3788.9483775141953
Epoch Step: 30 / 67 Loss (mean): 0.8728809001331683 Loss (std): 0.7887027707939845 Loss ratio: 0.9035628694288746 Tokens per Sec: 3195.0957768267035
Epoch Step: 35 / 67 Loss (mean): 1.0419919229461811 Loss (std): 0.8808193532044958 Loss ratio: 0.8453226304422996 Tokens per Sec: 2878.4955049237496
Epoch Step: 40 / 67 Loss (mean): 1.452539332327433 Loss (std): 1.2117981507912405 Loss ratio: 0.8342618501418148 Tokens per Sec: 2640.409464522788
Epoch Step: 45 / 67 Loss (mean): 12.07851222914178 Loss (std): 18.102917362828382 Loss ratio: 1.4987704627355962 Tokens per Sec: 2673.3472595913704
Epoch Step: 50 / 67 Loss (mean): 1.3932742770412005 Loss (std): 1.179045420374609 Loss ratio: 0.8462407149857568 Tokens per Sec: 2509.439748854554
Epoch Step: 55 / 67 Loss (mean): 1.6556181797059253 Loss (std): 1.5835467873168416 Loss ratio: 0.9564685908426753 Tokens per Sec: 2544.4440093090443
Epoch Step: 60 / 67 Loss (mean): 1.1783118657767773 Loss (std): 1.0541692134805936 Loss ratio: 0.8946436373070509 Tokens per Sec: 2491.3421199614786
Epoch Step: 65 / 67 Loss (mean): 9.558465165289817 Loss (std): 21.527707664789013 Loss ratio: 2.2522138536387377 Tokens per Sec: 2653.993783921494
Mean loss per sample: 2.0951861012029513 Std loss per sample: 6.682532338363665 ratio: 3.1894695819750276
Epoch ended with duration 0:00:11.453613
Train perplexity: 1.3277397778479292
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 86.01311859488487 Loss (std): 38.89881223522127 Loss ratio: 0.45224278424819897 Tokens per Sec: 4357.607392509478
Mean loss per sample: 89.66453962980724 Std loss per sample: 46.56323103339223 ratio: 0.5193048581483285
Epoch ended with duration 0:00:01.031687
b'BLEU = 2.63, 8.2/3.0/1.9/1.5 (BP=0.902, ratio=0.907, hyp_len=2823, ref_len=3113)\n'
Validation perplexity: 189311.8933707321
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.63
Epoch 307 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.23132906970568 Loss (std): 1.0763263350793046 Loss ratio: 0.8741175381627065 Tokens per Sec: 2507.970948532561
Epoch Step: 10 / 67 Loss (mean): 1.3453529683756642 Loss (std): 1.2871033905695164 Loss ratio: 0.9567031261123418 Tokens per Sec: 2729.552190998297
Epoch Step: 15 / 67 Loss (mean): 1.3127406184066785 Loss (std): 1.055684588988987 Loss ratio: 0.8041836857842565 Tokens per Sec: 2427.5936915345883
Epoch Step: 20 / 67 Loss (mean): 1.1884817951649893 Loss (std): 1.4971986819223326 Loss ratio: 1.259757354309736 Tokens per Sec: 2733.517168685259
Epoch Step: 25 / 67 Loss (mean): 1.34469619065203 Loss (std): 1.1761106707852789 Loss ratio: 0.874629287240707 Tokens per Sec: 3590.5121735598063
Epoch Step: 30 / 67 Loss (mean): 1.3660222965991125 Loss (std): 1.1730076265608878 Loss ratio: 0.8587031335295482 Tokens per Sec: 2637.2366840179225
Epoch Step: 35 / 67 Loss (mean): 1.283312898420263 Loss (std): 1.4442035098852777 Loss ratio: 1.1253713039610747 Tokens per Sec: 2836.280998641599
Epoch Step: 40 / 67 Loss (mean): 1.2687296023359522 Loss (std): 1.1284771880260973 Loss ratio: 0.889454447936246 Tokens per Sec: 2207.2682121387343
Epoch Step: 45 / 67 Loss (mean): 1.2266318281763233 Loss (std): 1.2614496489074474 Loss ratio: 1.0283848991452382 Tokens per Sec: 3056.3549343628665
Epoch Step: 50 / 67 Loss (mean): 1.5730159373488277 Loss (std): 1.6535108761177488 Loss ratio: 1.0511723605957788 Tokens per Sec: 2421.200890895295
Epoch Step: 55 / 67 Loss (mean): 1.2257544203603175 Loss (std): 1.1245372621672747 Loss ratio: 0.9174246027493097 Tokens per Sec: 2916.6970033792277
Epoch Step: 60 / 67 Loss (mean): 1.2234656701330096 Loss (std): 1.0976058015669625 Loss ratio: 0.8971284020152652 Tokens per Sec: 3697.331584641785
Epoch Step: 65 / 67 Loss (mean): 3.3994594528339803 Loss (std): 2.962839909390678 Loss ratio: 0.8715620675871537 Tokens per Sec: 2967.45484626419
Mean loss per sample: 1.6596688720169732 Std loss per sample: 3.798491687300338 ratio: 2.288704543023743
Epoch ended with duration 0:00:11.429261
Train perplexity: 1.2517627083513057
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable opportunistic print for openjdk ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 84.8031639456749 Loss (std): 38.50734735470371 Loss ratio: 0.4540791352946643 Tokens per Sec: 4402.857288730596
Mean loss per sample: 91.36007192999612 Std loss per sample: 46.21618398259332 ratio: 0.5058685157122695
Epoch ended with duration 0:00:01.035691
b'BLEU = 2.47, 7.7/2.6/1.7/1.3 (BP=0.973, ratio=0.973, hyp_len=3030, ref_len=3113)\n'
Validation perplexity: 238214.345790509
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.47
Epoch 308 / 1000
Epoch Step: 5 / 67 Loss (mean): 10.212946033949265 Loss (std): 22.197755227004876 Loss ratio: 2.173491875235258 Tokens per Sec: 3737.364732212614
Epoch Step: 10 / 67 Loss (mean): 1.2626749484916218 Loss (std): 1.0970344775436316 Loss ratio: 0.8688178052903778 Tokens per Sec: 2373.9642393580534
Epoch Step: 15 / 67 Loss (mean): 1.0965728433802724 Loss (std): 1.0099008011356563 Loss ratio: 0.9209609805971095 Tokens per Sec: 3404.2808444229036
Epoch Step: 20 / 67 Loss (mean): 5.493675777455792 Loss (std): 15.610601846678183 Loss ratio: 2.84155863561131 Tokens per Sec: 2643.569773776375
Epoch Step: 25 / 67 Loss (mean): 1.2036959020188078 Loss (std): 1.1232400698743363 Loss ratio: 0.933159336997382 Tokens per Sec: 2534.4086545506643
Epoch Step: 30 / 67 Loss (mean): 1.3104663614940364 Loss (std): 1.155045397858342 Loss ratio: 0.8814002646672272 Tokens per Sec: 2633.6674278183773
Epoch Step: 35 / 67 Loss (mean): 1.0665428519714624 Loss (std): 0.9072374066490008 Loss ratio: 0.850633807138652 Tokens per Sec: 3044.7163521510943
Epoch Step: 40 / 67 Loss (mean): 1.2189467833959498 Loss (std): 1.0836279005410596 Loss ratio: 0.8889870462778566 Tokens per Sec: 3281.1445019560383
Epoch Step: 45 / 67 Loss (mean): 1.1281530377600575 Loss (std): 0.9913576100679895 Loss ratio: 0.8787439087486972 Tokens per Sec: 2344.8399590337403
Epoch Step: 50 / 67 Loss (mean): 1.2920745683368295 Loss (std): 1.0296883388413736 Loss ratio: 0.7969264035331939 Tokens per Sec: 2983.261378344135
Epoch Step: 55 / 67 Loss (mean): 1.348660796036711 Loss (std): 1.4813592857136777 Loss ratio: 1.0983927834685532 Tokens per Sec: 2409.3741587157183
Epoch Step: 60 / 67 Loss (mean): 1.1533211129135452 Loss (std): 0.9637992765005636 Loss ratio: 0.8356729671459778 Tokens per Sec: 2723.1483846910996
Epoch Step: 65 / 67 Loss (mean): 1.1133800422539935 Loss (std): 0.9836526938289996 Loss ratio: 0.8834833179132922 Tokens per Sec: 2542.87377824129
Mean loss per sample: 1.982772402555725 Std loss per sample: 6.031809588114424 ratio: 3.0421089078805164
Epoch ended with duration 0:00:11.472303
Train perplexity: 1.3076982622876605
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings not cipher suites ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 85.49208337068558 Loss (std): 39.51448190593219 Loss ratio: 0.4622004792490685 Tokens per Sec: 4409.875736859089
Mean loss per sample: 90.2291203605347 Std loss per sample: 47.00717759207977 ratio: 0.5209756828421906
Epoch ended with duration 0:00:01.025872
b'BLEU = 2.52, 8.0/2.8/1.8/1.4 (BP=0.925, ratio=0.928, hyp_len=2889, ref_len=3113)\n'
Validation perplexity: 204364.81100749737
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.52
Epoch 309 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.4212467349134386 Loss (std): 1.3056450248031015 Loss ratio: 0.9186617585317599 Tokens per Sec: 2506.564687541078
Epoch Step: 10 / 67 Loss (mean): 1.702191723510623 Loss (std): 1.4718927995302122 Loss ratio: 0.86470447435531 Tokens per Sec: 3724.6868166296717
Epoch Step: 15 / 67 Loss (mean): 1.3628951316932216 Loss (std): 1.1538147441027835 Loss ratio: 0.8465909938861674 Tokens per Sec: 2554.267619045297
Epoch Step: 20 / 67 Loss (mean): 1.0999572961009108 Loss (std): 1.1082063060127196 Loss ratio: 1.0074993910591346 Tokens per Sec: 3571.162654152491
Epoch Step: 25 / 67 Loss (mean): 1.2616598274908029 Loss (std): 0.9554469889815695 Loss ratio: 0.7572936604328352 Tokens per Sec: 2905.2955867501187
Epoch Step: 30 / 67 Loss (mean): 1.7485210979357362 Loss (std): 1.8011035719111355 Loss ratio: 1.0300725418969647 Tokens per Sec: 3198.3892621154873
Epoch Step: 35 / 67 Loss (mean): 1.4274687212891877 Loss (std): 1.0630254066653821 Loss ratio: 0.7446926092400354 Tokens per Sec: 2877.4935260365705
Epoch Step: 40 / 67 Loss (mean): 1.1206420728121884 Loss (std): 1.1719352590541572 Loss ratio: 1.0457712480071817 Tokens per Sec: 2826.519604187045
Epoch Step: 45 / 67 Loss (mean): 1.0441048719803803 Loss (std): 0.9997499006933869 Loss ratio: 0.9575186626580295 Tokens per Sec: 2481.96331327601
Epoch Step: 50 / 67 Loss (mean): 1.0211179901089054 Loss (std): 1.076602139489636 Loss ratio: 1.0543366681599773 Tokens per Sec: 2337.722325162622
Epoch Step: 55 / 67 Loss (mean): 1.1624354491359554 Loss (std): 1.2248999701681464 Loss ratio: 1.0537359051452029 Tokens per Sec: 2298.716670095486
Epoch Step: 60 / 67 Loss (mean): 1.8704724704148248 Loss (std): 1.832055142599803 Loss ratio: 0.9794611637312675 Tokens per Sec: 2434.8245770460053
Epoch Step: 65 / 67 Loss (mean): 1.1425343046430498 Loss (std): 1.0262680678557978 Loss ratio: 0.8982382968154502 Tokens per Sec: 3021.0056467214645
Mean loss per sample: 1.6458041903691811 Std loss per sample: 3.9418028086096237 ratio: 2.395061837657256
Epoch ended with duration 0:00:11.454404
Train perplexity: 1.2494167434431076
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings from inactive ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 86.4023300409317 Loss (std): 40.267301293085666 Loss ratio: 0.46604415961941864 Tokens per Sec: 4410.659322780465
Mean loss per sample: 91.10705361674067 Std loss per sample: 47.665519043192795 ratio: 0.5231814349271677
Epoch ended with duration 0:00:01.022756
b'BLEU = 2.60, 8.5/2.9/1.8/1.3 (BP=0.939, ratio=0.941, hyp_len=2928, ref_len=3113)\n'
Validation perplexity: 230184.77765556183
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.6
Epoch 310 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.2216069037094712 Loss (std): 1.085436466392971 Loss ratio: 0.8885317061462146 Tokens per Sec: 2786.6222578051875
Epoch Step: 10 / 67 Loss (mean): 1.2602269707422238 Loss (std): 1.2432851334941672 Loss ratio: 0.9865565190704667 Tokens per Sec: 2383.6075745677203
Epoch Step: 15 / 67 Loss (mean): 1.2198855010792613 Loss (std): 1.2689812449050932 Loss ratio: 1.0402461901403006 Tokens per Sec: 2729.019582487967
Epoch Step: 20 / 67 Loss (mean): 1.5211051169317216 Loss (std): 1.3297482435147887 Loss ratio: 0.8741987839716653 Tokens per Sec: 3456.6651446881506
Epoch Step: 25 / 67 Loss (mean): 8.877800763119012 Loss (std): 26.634766268418232 Loss ratio: 3.0001536392962165 Tokens per Sec: 2809.35530808673
Epoch Step: 30 / 67 Loss (mean): 2.0323310519452207 Loss (std): 1.6672120920503628 Loss ratio: 0.8203447417951968 Tokens per Sec: 3228.33523911949
Epoch Step: 35 / 67 Loss (mean): 1.0920994762855116 Loss (std): 1.0765945618098258 Loss ratio: 0.9858026536846061 Tokens per Sec: 2259.897452712106
Epoch Step: 40 / 67 Loss (mean): 1.5622821589931846 Loss (std): 1.3899429290891074 Loss ratio: 0.8896875132881621 Tokens per Sec: 3012.339668652364
Epoch Step: 45 / 67 Loss (mean): 1.366158126736991 Loss (std): 1.4039401209700026 Loss ratio: 1.0276556523681868 Tokens per Sec: 2314.3974796904113
Epoch Step: 50 / 67 Loss (mean): 1.1035048969788477 Loss (std): 1.1435441702993256 Loss ratio: 1.0362837296237621 Tokens per Sec: 3224.876815374706
Epoch Step: 55 / 67 Loss (mean): 1.252939068712294 Loss (std): 1.429004310784516 Loss ratio: 1.140521791098088 Tokens per Sec: 2668.327135015667
Epoch Step: 60 / 67 Loss (mean): 1.2144382483238587 Loss (std): 0.9919264847401544 Loss ratio: 0.8167780338845468 Tokens per Sec: 2655.724667759478
Epoch Step: 65 / 67 Loss (mean): 10.229578068479896 Loss (std): 19.62626236919333 Loss ratio: 1.9185798512713996 Tokens per Sec: 2612.494692737718
Mean loss per sample: 2.074103676513592 Std loss per sample: 6.504448382263055 ratio: 3.136028567866256
Epoch ended with duration 0:00:11.465973
Train perplexity: 1.3239578681838389
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 85.25657796859741 Loss (std): 38.87183756129857 Loss ratio: 0.45593945344154263 Tokens per Sec: 4402.7972160934205
Mean loss per sample: 89.89654890533353 Std loss per sample: 46.26506331774568 ratio: 0.514647824428339
Epoch ended with duration 0:00:01.024359
b'BLEU = 2.56, 8.4/2.7/1.7/1.3 (BP=0.956, ratio=0.957, hyp_len=2980, ref_len=3113)\n'
Validation perplexity: 195358.6884651662
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.56
Model saved checkpoint_commit_msg_generator!
Epoch 311 / 1000
Epoch Step: 5 / 67 Loss (mean): 5.947981331504707 Loss (std): 14.357343197203956 Loss ratio: 2.413817797503387 Tokens per Sec: 2485.128340980467
Epoch Step: 10 / 67 Loss (mean): 1.0889289135302533 Loss (std): 1.1448688841542332 Loss ratio: 1.0513715541289332 Tokens per Sec: 2570.6302396233496
Epoch Step: 15 / 67 Loss (mean): 1.0514664828078821 Loss (std): 0.9263269913726572 Loss ratio: 0.8809857532490746 Tokens per Sec: 2469.6991431962974
Epoch Step: 20 / 67 Loss (mean): 1.7505138954147696 Loss (std): 1.5250234571521375 Loss ratio: 0.8711861477630807 Tokens per Sec: 3158.975062021142
Epoch Step: 25 / 67 Loss (mean): 1.2153280519414693 Loss (std): 1.2571020398686636 Loss ratio: 1.0343726024100743 Tokens per Sec: 2810.9923559707345
Epoch Step: 30 / 67 Loss (mean): 1.5760144569649128 Loss (std): 1.6901111997555662 Loss ratio: 1.0723957462994222 Tokens per Sec: 2970.3549502475844
Epoch Step: 35 / 67 Loss (mean): 1.340188273577951 Loss (std): 1.42544828913975 Loss ratio: 1.063617938794657 Tokens per Sec: 3242.5717911524216
Epoch Step: 40 / 67 Loss (mean): 0.7442318887028488 Loss (std): 0.8860515601905572 Loss ratio: 1.190558445076697 Tokens per Sec: 2036.996254831561
Epoch Step: 45 / 67 Loss (mean): 1.5139643593574874 Loss (std): 1.4047618135845643 Loss ratio: 0.9278698041351068 Tokens per Sec: 3107.728159303684
Epoch Step: 50 / 67 Loss (mean): 1.1803273286204785 Loss (std): 1.0902637521222254 Loss ratio: 0.9236961016538386 Tokens per Sec: 3162.9080650572196
Epoch Step: 55 / 67 Loss (mean): 1.3972353998397011 Loss (std): 1.4624715428139938 Loss ratio: 1.0466894432976555 Tokens per Sec: 2915.814446232781
Epoch Step: 60 / 67 Loss (mean): 1.1367362893070094 Loss (std): 1.107116878781159 Loss ratio: 0.9739434635768447 Tokens per Sec: 2918.0108541692025
Epoch Step: 65 / 67 Loss (mean): 2.435140860034153 Loss (std): 2.044609929394198 Loss ratio: 0.8396269648916828 Tokens per Sec: 2460.8501578904807
Mean loss per sample: 1.8227256288900084 Std loss per sample: 5.0453857559816075 ratio: 2.768044557015481
Epoch ended with duration 0:00:11.460103
Train perplexity: 1.2796853882693935
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print during switch ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.86773353815079 Loss (std): 40.55945681670258 Loss ratio: 0.3981580369755899 Tokens per Sec: 4308.85634611392
Mean loss per sample: 93.19359504614697 Std loss per sample: 47.7180002554354 ratio: 0.5120308990312771
Epoch ended with duration 0:00:01.033848
b'BLEU = 2.58, 8.7/2.8/1.7/1.3 (BP=0.940, ratio=0.942, hyp_len=2931, ref_len=3113)\n'
Validation perplexity: 305407.24169469305
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.58
Epoch 312 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.1422156463522697 Loss (std): 1.1759288989299546 Loss ratio: 1.0295156634260352 Tokens per Sec: 2597.3912243133327
Epoch Step: 10 / 67 Loss (mean): 1.2015626041102223 Loss (std): 1.2338792306780668 Loss ratio: 1.0268954996246538 Tokens per Sec: 3223.905637114679
Epoch Step: 15 / 67 Loss (mean): 1.546730701578781 Loss (std): 1.2972959052476576 Loss ratio: 0.8387341790807411 Tokens per Sec: 3145.646726491481
Epoch Step: 20 / 67 Loss (mean): 0.9862765394500457 Loss (std): 0.8493553081253247 Loss ratio: 0.8611735899131605 Tokens per Sec: 2805.6981990088498
Epoch Step: 25 / 67 Loss (mean): 1.0706913206959143 Loss (std): 1.1283693263312038 Loss ratio: 1.053869873156159 Tokens per Sec: 2907.5620043265176
Epoch Step: 30 / 67 Loss (mean): 5.007801112951711 Loss (std): 9.424826606748898 Loss ratio: 1.882028937286148 Tokens per Sec: 3325.7436590985644
Epoch Step: 35 / 67 Loss (mean): 1.0395974804705475 Loss (std): 1.102212116269029 Loss ratio: 1.0602296917554481 Tokens per Sec: 2414.438326173585
Epoch Step: 40 / 67 Loss (mean): 1.4351691129268147 Loss (std): 1.5847546568480764 Loss ratio: 1.1042285139597272 Tokens per Sec: 2373.609390423804
Epoch Step: 45 / 67 Loss (mean): 1.2267378245014697 Loss (std): 1.166110817149386 Loss ratio: 0.9505786761105847 Tokens per Sec: 2733.5784573333117
Epoch Step: 50 / 67 Loss (mean): 1.1447082379308995 Loss (std): 1.2136910266047027 Loss ratio: 1.0602623326957898 Tokens per Sec: 2553.446611486647
Epoch Step: 55 / 67 Loss (mean): 10.218060651881387 Loss (std): 19.511684492383676 Loss ratio: 1.909529132496499 Tokens per Sec: 2344.9044204065513
Epoch Step: 60 / 67 Loss (mean): 2.6947222326416522 Loss (std): 2.374142087196664 Loss ratio: 0.88103406667977 Tokens per Sec: 3103.0307600724173
Epoch Step: 65 / 67 Loss (mean): 1.2150047356262803 Loss (std): 0.9896838202345958 Loss ratio: 0.814551409731303 Tokens per Sec: 2529.057220496543
Mean loss per sample: 2.0733980009337976 Std loss per sample: 6.459481839132714 ratio: 3.1154085400986946
Epoch ended with duration 0:00:11.502693
Train perplexity: 1.323831465760111
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow call log codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 85.86877280473709 Loss (std): 38.621196034728534 Loss ratio: 0.4497699777607388 Tokens per Sec: 4434.242045579971
Mean loss per sample: 92.03308152370765 Std loss per sample: 46.92134244765047 ratio: 0.5098312657885259
Epoch ended with duration 0:00:01.031057
b'BLEU = 2.57, 8.5/2.7/1.7/1.3 (BP=0.965, ratio=0.966, hyp_len=3006, ref_len=3113)\n'
Validation perplexity: 260962.24341587836
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.57
Epoch 313 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.1753964158706367 Loss (std): 1.1959777836966587 Loss ratio: 1.0175101502336785 Tokens per Sec: 2609.6812297555452
Epoch Step: 10 / 67 Loss (mean): 1.4090869473293424 Loss (std): 1.2489234291107703 Loss ratio: 0.886335248139136 Tokens per Sec: 2823.3392166286676
Epoch Step: 15 / 67 Loss (mean): 1.0200251235219184 Loss (std): 1.1283221011664077 Loss ratio: 1.1061708924095557 Tokens per Sec: 2318.9169224906123
Epoch Step: 20 / 67 Loss (mean): 1.076543174451217 Loss (std): 1.0291396938499495 Loss ratio: 0.9559669489099384 Tokens per Sec: 2709.058346505163
Epoch Step: 25 / 67 Loss (mean): 1.46925378148444 Loss (std): 1.2402436522319131 Loss ratio: 0.8441316727317525 Tokens per Sec: 2519.0121333623183
Epoch Step: 30 / 67 Loss (mean): 1.0971987914526835 Loss (std): 0.96356715271334 Loss ratio: 0.8782065385230546 Tokens per Sec: 2577.7795683029394
Epoch Step: 35 / 67 Loss (mean): 1.753458083840087 Loss (std): 1.3103934469275413 Loss ratio: 0.747319516220068 Tokens per Sec: 3283.1618426600176
Epoch Step: 40 / 67 Loss (mean): 5.246164076612331 Loss (std): 11.099683561552908 Loss ratio: 2.115771333008029 Tokens per Sec: 2463.9072867851833
Epoch Step: 45 / 67 Loss (mean): 1.5822327502537519 Loss (std): 1.5140172810522234 Loss ratio: 0.9568865774074085 Tokens per Sec: 2976.8194462817005
Epoch Step: 50 / 67 Loss (mean): 1.3289854233153164 Loss (std): 1.2330514468846383 Loss ratio: 0.927814124408258 Tokens per Sec: 3523.959227646585
Epoch Step: 55 / 67 Loss (mean): 1.8048691847361624 Loss (std): 1.5234377284179528 Loss ratio: 0.8440709948963145 Tokens per Sec: 3581.25372258156
Epoch Step: 60 / 67 Loss (mean): 20.087622792838374 Loss (std): 23.084913512696666 Loss ratio: 1.149210822543267 Tokens per Sec: 2345.7629416718137
Epoch Step: 65 / 67 Loss (mean): 0.8762766088475473 Loss (std): 0.9406196297075177 Loss ratio: 1.073427751249223 Tokens per Sec: 2880.5994821172108
Mean loss per sample: 2.1469145180970566 Std loss per sample: 6.359084669479097 ratio: 2.9619645383531843
Epoch ended with duration 0:00:11.486530
Train perplexity: 1.3370650110104492
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings from inactive ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 85.58191484212875 Loss (std): 39.492304430733135 Loss ratio: 0.46145619087378215 Tokens per Sec: 4402.785589320728
Mean loss per sample: 90.4346893522583 Std loss per sample: 47.2407697293351 ratio: 0.5223744347185665
Epoch ended with duration 0:00:01.020883
b'BLEU = 2.59, 8.4/3.0/1.9/1.4 (BP=0.901, ratio=0.906, hyp_len=2820, ref_len=3113)\n'
Validation perplexity: 210138.1069029514
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.59
Epoch 314 / 1000
Epoch Step: 5 / 67 Loss (mean): 3.3815870243124664 Loss (std): 3.571124437870119 Loss ratio: 1.0560498405615302 Tokens per Sec: 3059.344715787475
Epoch Step: 10 / 67 Loss (mean): 1.7102554549928755 Loss (std): 1.4451319276771195 Loss ratio: 0.8449801598107691 Tokens per Sec: 3192.4427182903555
Epoch Step: 15 / 67 Loss (mean): 1.3997831143205985 Loss (std): 1.1151313559270126 Loss ratio: 0.7966458121394434 Tokens per Sec: 2239.020539549359
Epoch Step: 20 / 67 Loss (mean): 5.988409561570734 Loss (std): 14.299128160056666 Loss ratio: 2.387800636051698 Tokens per Sec: 2613.702814770517
Epoch Step: 25 / 67 Loss (mean): 1.0748843796318397 Loss (std): 1.3101557719191785 Loss ratio: 1.218880650556967 Tokens per Sec: 3125.822297110695
Epoch Step: 30 / 67 Loss (mean): 1.4551130160398316 Loss (std): 1.1640207918280874 Loss ratio: 0.799952154229252 Tokens per Sec: 2998.488114312375
Epoch Step: 35 / 67 Loss (mean): 1.1610570030170493 Loss (std): 1.0980033080256744 Loss ratio: 0.9456928515761693 Tokens per Sec: 2897.702425131142
Epoch Step: 40 / 67 Loss (mean): 1.0854101309669204 Loss (std): 1.2829471342046215 Loss ratio: 1.1819929606348232 Tokens per Sec: 2677.832982858515
Epoch Step: 45 / 67 Loss (mean): 8.317363397916779 Loss (std): 15.342943177891565 Loss ratio: 1.8446883277619515 Tokens per Sec: 3209.112885386639
Epoch Step: 50 / 67 Loss (mean): 1.2561641206266358 Loss (std): 1.1596054941745768 Loss ratio: 0.9231321569637804 Tokens per Sec: 2606.063887947877
Epoch Step: 55 / 67 Loss (mean): 1.2374402922141599 Loss (std): 1.185001417215862 Loss ratio: 0.9576231068858534 Tokens per Sec: 2539.250867541174
Epoch Step: 60 / 67 Loss (mean): 1.9515713618602604 Loss (std): 1.5918475525134754 Loss ratio: 0.8156747857767845 Tokens per Sec: 2229.6863875071836
Epoch Step: 65 / 67 Loss (mean): 1.2758939982159063 Loss (std): 1.266914282335772 Loss ratio: 0.9929620204400281 Tokens per Sec: 2717.410834105262
Mean loss per sample: 2.0869462717924256 Std loss per sample: 6.099128357860818 ratio: 2.9225133585362646
Epoch ended with duration 0:00:11.497109
Train perplexity: 1.3262603765203707
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 86.60480400919914 Loss (std): 39.54596956395983 Loss ratio: 0.45662558811124687 Tokens per Sec: 4426.338804632795
Mean loss per sample: 91.88151446546688 Std loss per sample: 47.38331866706932 ratio: 0.5157002357082181
Epoch ended with duration 0:00:01.036291
b'BLEU = 2.52, 8.2/2.9/1.8/1.3 (BP=0.928, ratio=0.931, hyp_len=2897, ref_len=3113)\n'
Validation perplexity: 255656.73975819725
Validation accuracy: 0.0
Validation BLEU: 2.52
Epoch 315 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.451225178054301 Loss (std): 0.9301449864206581 Loss ratio: 0.6409377403910054 Tokens per Sec: 2838.3523366694144
Epoch Step: 10 / 67 Loss (mean): 1.1205110573209822 Loss (std): 1.0314019375041865 Loss ratio: 0.9204745734238038 Tokens per Sec: 2861.3263725052793
Epoch Step: 15 / 67 Loss (mean): 0.7856879905448295 Loss (std): 0.7038692471876787 Loss ratio: 0.8958635688189479 Tokens per Sec: 2956.57186984312
Epoch Step: 20 / 67 Loss (mean): 5.3487353884847835 Loss (std): 15.846675567632916 Loss ratio: 2.9626957433244874 Tokens per Sec: 3428.79083284181
Epoch Step: 25 / 67 Loss (mean): 1.2046392762567848 Loss (std): 1.107961683540021 Loss ratio: 0.9197456079821893 Tokens per Sec: 2583.7273977049294
Epoch Step: 30 / 67 Loss (mean): 7.335178405570332 Loss (std): 17.53944064443951 Loss ratio: 2.391140293345839 Tokens per Sec: 2427.7321552735475
Epoch Step: 35 / 67 Loss (mean): 0.9132239224563818 Loss (std): 0.9360831878590905 Loss ratio: 1.0250313913604256 Tokens per Sec: 2602.8668774725493
Epoch Step: 40 / 67 Loss (mean): 1.101484583428828 Loss (std): 1.0033027094990778 Loss ratio: 0.9108640507485648 Tokens per Sec: 2991.6046066314907
Epoch Step: 45 / 67 Loss (mean): 1.255868257896509 Loss (std): 1.2272440518315617 Loss ratio: 0.9772076363225464 Tokens per Sec: 2653.262497697277
Epoch Step: 50 / 67 Loss (mean): 1.065307216864312 Loss (std): 0.9715048512264519 Loss ratio: 0.9119480614109012 Tokens per Sec: 2686.959868572441
Epoch Step: 55 / 67 Loss (mean): 1.1127778361551464 Loss (std): 0.9777756581671697 Loss ratio: 0.8786800261457092 Tokens per Sec: 3037.3251833608538
Epoch Step: 60 / 67 Loss (mean): 4.499926379387034 Loss (std): 11.281417792746325 Loss ratio: 2.507022746955039 Tokens per Sec: 2624.7801608742875
Epoch Step: 65 / 67 Loss (mean): 1.1509689157828689 Loss (std): 0.9948765148815752 Loss ratio: 0.8643817406701012 Tokens per Sec: 2587.2130967904072
Mean loss per sample: 1.7359370480124428 Std loss per sample: 4.991619745581352 ratio: 2.875461268193162
Epoch ended with duration 0:00:11.455681
Train perplexity: 1.2647466014898778
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 86.67621573805809 Loss (std): 39.72979252279902 Loss ratio: 0.45837017899887766 Tokens per Sec: 4386.356528507065
Mean loss per sample: 91.08236207067966 Std loss per sample: 47.65325814619434 ratio: 0.5231886510498657
Epoch ended with duration 0:00:01.024607
b'BLEU = 2.53, 8.3/2.7/1.8/1.4 (BP=0.934, ratio=0.936, hyp_len=2915, ref_len=3113)\n'
Validation perplexity: 229415.8328265214
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.53
Model saved checkpoint_commit_msg_generator!
Epoch 316 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.0311595275125 Loss (std): 1.1142517626179638 Loss ratio: 1.0805813580619381 Tokens per Sec: 3184.7023552137266
Epoch Step: 10 / 67 Loss (mean): 1.039361223258311 Loss (std): 0.7786141466129042 Loss ratio: 0.7491275691159746 Tokens per Sec: 2346.9763092292333
Epoch Step: 15 / 67 Loss (mean): 6.993688934599049 Loss (std): 15.998952463950854 Loss ratio: 2.28762711832966 Tokens per Sec: 2697.0617687977733
Epoch Step: 20 / 67 Loss (mean): 1.3356575752841309 Loss (std): 1.144724876959837 Loss ratio: 0.8570496646315376 Tokens per Sec: 3183.0939940629887
Epoch Step: 25 / 67 Loss (mean): 1.1277207212988287 Loss (std): 1.3533158195865074 Loss ratio: 1.200045183197356 Tokens per Sec: 2522.4252739910366
Epoch Step: 30 / 67 Loss (mean): 0.863377797708381 Loss (std): 0.8007711920164383 Loss ratio: 0.9274864307860173 Tokens per Sec: 2601.328124755564
Epoch Step: 35 / 67 Loss (mean): 1.0308642568124924 Loss (std): 0.9908270582184088 Loss ratio: 0.9611615221601711 Tokens per Sec: 2400.1803187688884
Epoch Step: 40 / 67 Loss (mean): 1.0892364664468914 Loss (std): 1.100763213975962 Loss ratio: 1.0105824106005843 Tokens per Sec: 3161.7849714867
Epoch Step: 45 / 67 Loss (mean): 1.2871257344959304 Loss (std): 1.2933390558003535 Loss ratio: 1.0048272838759271 Tokens per Sec: 3020.9676016460353
Epoch Step: 50 / 67 Loss (mean): 1.0359590754596866 Loss (std): 1.031194908999447 Loss ratio: 0.9954012020618425 Tokens per Sec: 2742.8560025416323
Epoch Step: 55 / 67 Loss (mean): 1.075952083512675 Loss (std): 1.149736288491412 Loss ratio: 1.0685757350251628 Tokens per Sec: 2839.761167891302
Epoch Step: 60 / 67 Loss (mean): 1.4387729903683066 Loss (std): 1.3249930139197774 Loss ratio: 0.9209187431163807 Tokens per Sec: 2448.6081030154896
Epoch Step: 65 / 67 Loss (mean): 2.10350301863582 Loss (std): 1.8759516951211948 Loss ratio: 0.8918226779335936 Tokens per Sec: 2908.0668890267557
Mean loss per sample: 1.724888051857251 Std loss per sample: 5.275893780574747 ratio: 3.0586876492616413
Epoch ended with duration 0:00:11.437157
Train perplexity: 1.2628573114053934
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command line 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 102.5225585103035 Loss (std): 40.53668424976661 Loss ratio: 0.3953928270888078 Tokens per Sec: 4076.8513651363182
Mean loss per sample: 96.97263172952856 Std loss per sample: 46.865339615204846 ratio: 0.48328418832562386
Epoch ended with duration 0:00:01.078178
b'BLEU = 2.57, 8.3/2.8/1.8/1.3 (BP=0.938, ratio=0.940, hyp_len=2927, ref_len=3113)\n'
Validation perplexity: 509674.9982262639
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.57
Epoch 317 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.3717006315127946 Loss (std): 1.7253069355858544 Loss ratio: 1.257786791045712 Tokens per Sec: 2725.7899013669266
Epoch Step: 10 / 67 Loss (mean): 1.061568938428536 Loss (std): 1.0535105140877867 Loss ratio: 0.9924089486334459 Tokens per Sec: 2777.226561814017
Epoch Step: 15 / 67 Loss (mean): 5.001529823814053 Loss (std): 14.304209831350773 Loss ratio: 2.8599669171706963 Tokens per Sec: 3180.601437476418
Epoch Step: 20 / 67 Loss (mean): 0.9809840510133654 Loss (std): 0.9847551985179986 Loss ratio: 1.0038442495581223 Tokens per Sec: 2953.027300284377
Epoch Step: 25 / 67 Loss (mean): 1.0601704502187204 Loss (std): 1.088027479729913 Loss ratio: 1.0262759912855952 Tokens per Sec: 2192.7537142387605
Epoch Step: 30 / 67 Loss (mean): 1.2731397104798816 Loss (std): 1.5185989575269743 Loss ratio: 1.1927983590697775 Tokens per Sec: 2852.9089339935567
Epoch Step: 35 / 67 Loss (mean): 1.4937436591135338 Loss (std): 1.4676035298147252 Loss ratio: 0.9825002575647274 Tokens per Sec: 2582.1444586917064
Epoch Step: 40 / 67 Loss (mean): 8.287804358289577 Loss (std): 16.919126405090314 Loss ratio: 2.0414485759630137 Tokens per Sec: 2416.6815583238117
Epoch Step: 45 / 67 Loss (mean): 5.5108740550640505 Loss (std): 16.402408432998406 Loss ratio: 2.976371491909874 Tokens per Sec: 2630.3316335345107
Epoch Step: 50 / 67 Loss (mean): 0.9996767982956953 Loss (std): 1.1382688702673 Loss ratio: 1.1386368796473862 Tokens per Sec: 2651.8226010886183
Epoch Step: 55 / 67 Loss (mean): 1.1153176972875372 Loss (std): 1.1720563113594236 Loss ratio: 1.0508721543734805 Tokens per Sec: 2855.020166532379
Epoch Step: 60 / 67 Loss (mean): 1.227076291164849 Loss (std): 1.0821266454109446 Loss ratio: 0.8818739740979712 Tokens per Sec: 3019.909942132315
Epoch Step: 65 / 67 Loss (mean): 1.1215720471227542 Loss (std): 0.8767113032506888 Loss ratio: 0.7816807716452782 Tokens per Sec: 2844.033238145761
Mean loss per sample: 1.8576276302799923 Std loss per sample: 5.851957793814284 ratio: 3.1502318863184886
Epoch ended with duration 0:00:11.512418
Train perplexity: 1.2857426486916963
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print warnings[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 87.36983489990234 Loss (std): 40.084458216151454 Loss ratio: 0.45879059130734673 Tokens per Sec: 4393.102478488832
Mean loss per sample: 91.42769558630029 Std loss per sample: 48.03369774688329 ratio: 0.5253736019360064
Epoch ended with duration 0:00:01.027650
b'BLEU = 2.54, 8.2/2.8/1.8/1.3 (BP=0.937, ratio=0.939, hyp_len=2924, ref_len=3113)\n'
Validation perplexity: 240407.4272608762
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.54
Epoch 318 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.1206105293822475 Loss (std): 0.9854678920578717 Loss ratio: 0.879402670436378 Tokens per Sec: 2966.706063344833
Epoch Step: 10 / 67 Loss (mean): 0.7661163020966342 Loss (std): 0.7312789372442805 Loss ratio: 0.9545273155563795 Tokens per Sec: 2764.707360583788
Epoch Step: 15 / 67 Loss (mean): 1.337631515604222 Loss (std): 6.3521233092400236 Loss ratio: 4.748784127122411 Tokens per Sec: 2371.153664933679
Epoch Step: 20 / 67 Loss (mean): 1.3750376023817807 Loss (std): 1.0957619462129375 Loss ratio: 0.7968959862005999 Tokens per Sec: 3233.1368376875457
Epoch Step: 25 / 67 Loss (mean): 1.2283404539339244 Loss (std): 1.237048896968615 Loss ratio: 1.0070896004497782 Tokens per Sec: 2893.0039235312424
Epoch Step: 30 / 67 Loss (mean): 1.418241246137768 Loss (std): 1.1169214558329605 Loss ratio: 0.7875398200938113 Tokens per Sec: 3129.8680613499537
Epoch Step: 35 / 67 Loss (mean): 1.4024212560034357 Loss (std): 1.2492541381152 Loss ratio: 0.8907838017767035 Tokens per Sec: 3063.68812945354
Epoch Step: 40 / 67 Loss (mean): 1.0238978597917594 Loss (std): 1.09444924755935 Loss ratio: 1.0689047126067235 Tokens per Sec: 2391.939779677967
Epoch Step: 45 / 67 Loss (mean): 1.2510288482299075 Loss (std): 1.2768364339776312 Loss ratio: 1.0206290892366225 Tokens per Sec: 3283.742916851134
Epoch Step: 50 / 67 Loss (mean): 1.1232408676296473 Loss (std): 1.0884814069084017 Loss ratio: 0.9690543126385726 Tokens per Sec: 2826.9885368891555
Epoch Step: 55 / 67 Loss (mean): 1.0434129240456969 Loss (std): 0.8963759367839037 Loss ratio: 0.8590807302906729 Tokens per Sec: 2623.0251487961136
Epoch Step: 60 / 67 Loss (mean): 0.7720779786177445 Loss (std): 0.7937742386939977 Loss ratio: 1.0281011253747918 Tokens per Sec: 2051.6470602829672
Epoch Step: 65 / 67 Loss (mean): 0.8909773573395796 Loss (std): 0.9808596302335992 Loss ratio: 1.1008805354632178 Tokens per Sec: 2677.1161940950515
Mean loss per sample: 1.4573091834282963 Std loss per sample: 4.168541573886652 ratio: 2.8604373191968953
Epoch ended with duration 0:00:11.421066
Train perplexity: 1.2179553577713882
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings on run correctly , call )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api url[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 87.06939235329628 Loss (std): 40.20057123151961 Loss ratio: 0.4617072675596512 Tokens per Sec: 4306.153864034841
Mean loss per sample: 95.22816824546602 Std loss per sample: 47.42150517785073 ratio: 0.497977710288558
Epoch ended with duration 0:00:01.068306
b'BLEU = 2.61, 8.5/2.8/1.8/1.3 (BP=0.959, ratio=0.960, hyp_len=2988, ref_len=3113)\n'
Validation perplexity: 402368.0495157199
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.61
Epoch 319 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.0802663987269625 Loss (std): 1.0911652762701345 Loss ratio: 1.0100890646566585 Tokens per Sec: 2692.1099699578626
Epoch Step: 10 / 67 Loss (mean): 0.915875504622818 Loss (std): 0.9907635294743141 Loss ratio: 1.0817665987063787 Tokens per Sec: 2515.6678432853273
Epoch Step: 15 / 67 Loss (mean): 1.0609463670989498 Loss (std): 1.1735002052813488 Loss ratio: 1.106088150798957 Tokens per Sec: 2522.3489816191513
Epoch Step: 20 / 67 Loss (mean): 1.0480060469999444 Loss (std): 0.999005892714369 Loss ratio: 0.9532443973717091 Tokens per Sec: 3645.391869070043
Epoch Step: 25 / 67 Loss (mean): 1.0980878261325415 Loss (std): 1.0858555737069817 Loss ratio: 0.9888604061219386 Tokens per Sec: 2811.0015865197684
Epoch Step: 30 / 67 Loss (mean): 1.0540618273080327 Loss (std): 0.9870968963398388 Loss ratio: 0.9364696365684586 Tokens per Sec: 2883.623639028414
Epoch Step: 35 / 67 Loss (mean): 1.1027073425138951 Loss (std): 1.0805611781902509 Loss ratio: 0.979916553132623 Tokens per Sec: 2553.303133175842
Epoch Step: 40 / 67 Loss (mean): 6.01303818821907 Loss (std): 12.989444750166944 Loss ratio: 2.1602132472094167 Tokens per Sec: 3104.1424643874775
Epoch Step: 45 / 67 Loss (mean): 1.0201393871975597 Loss (std): 1.065667498127598 Loss ratio: 1.0446293040945211 Tokens per Sec: 2643.3866271771208
Epoch Step: 50 / 67 Loss (mean): 0.8612256177875679 Loss (std): 0.8453393538234466 Loss ratio: 0.9815538882773459 Tokens per Sec: 2460.784200606803
Epoch Step: 55 / 67 Loss (mean): 1.0106537803076208 Loss (std): 0.9737122679089373 Loss ratio: 0.9634479055849974 Tokens per Sec: 2812.3873173124134
Epoch Step: 60 / 67 Loss (mean): 1.799241567729041 Loss (std): 1.66052947410331 Loss ratio: 0.9229052417898449 Tokens per Sec: 3262.303237460654
Epoch Step: 65 / 67 Loss (mean): 0.8164180228777695 Loss (std): 1.0241616925390782 Loss ratio: 1.2544574762436511 Tokens per Sec: 2492.128144002168
Mean loss per sample: 1.5645849346194702 Std loss per sample: 4.650764720047977 ratio: 2.9725230105063685
Epoch ended with duration 0:00:11.417858
Train perplexity: 1.2357621374109262
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings not during command device[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 87.17334163188934 Loss (std): 40.70770738727419 Loss ratio: 0.4669742678807977 Tokens per Sec: 4331.461499092003
Mean loss per sample: 93.39029416954908 Std loss per sample: 47.524397888240784 ratio: 0.5088794109799113
Epoch ended with duration 0:00:01.032823
b'BLEU = 2.16, 7.4/2.3/1.5/1.1 (BP=0.950, ratio=0.951, hyp_len=2960, ref_len=3113)\n'
Validation perplexity: 313657.7298611681
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.16
Epoch 320 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.8948256568837678 Loss (std): 0.9854343339667603 Loss ratio: 1.1012584701678507 Tokens per Sec: 2660.8048962604294
Epoch Step: 10 / 67 Loss (mean): 0.7804207298904657 Loss (std): 0.7673894274505639 Loss ratio: 0.9833022087435699 Tokens per Sec: 2815.894608897326
Epoch Step: 15 / 67 Loss (mean): 1.0022930428967811 Loss (std): 0.8805656466602333 Loss ratio: 0.8785510913208208 Tokens per Sec: 2815.897580554195
Epoch Step: 20 / 67 Loss (mean): 0.4880901269969486 Loss (std): 0.49594590262964294 Loss ratio: 1.0160949283711767 Tokens per Sec: 2590.202050165741
Epoch Step: 25 / 67 Loss (mean): 13.26455153702409 Loss (std): 22.789169790674695 Loss ratio: 1.7180505294178576 Tokens per Sec: 3213.8334919676213
Epoch Step: 30 / 67 Loss (mean): 0.9320025207707658 Loss (std): 0.9173347044189925 Loss ratio: 0.9842620421888526 Tokens per Sec: 2387.2983505182992
Epoch Step: 35 / 67 Loss (mean): 1.047121864525252 Loss (std): 1.123686503531155 Loss ratio: 1.073119129300787 Tokens per Sec: 2858.975332388985
Epoch Step: 40 / 67 Loss (mean): 1.1333506453665905 Loss (std): 0.9873410548372111 Loss ratio: 0.871169976276714 Tokens per Sec: 2882.340968335468
Epoch Step: 45 / 67 Loss (mean): 1.0633326533134095 Loss (std): 0.9694822723070553 Loss ratio: 0.911739397154869 Tokens per Sec: 2404.654329034614
Epoch Step: 50 / 67 Loss (mean): 1.881618766230531 Loss (std): 1.724864323085202 Loss ratio: 0.916691709309768 Tokens per Sec: 2924.983897430888
Epoch Step: 55 / 67 Loss (mean): 1.312329642183613 Loss (std): 1.1317461711559893 Loss ratio: 0.8623947328301241 Tokens per Sec: 2811.9629164927246
Epoch Step: 60 / 67 Loss (mean): 5.87953775045753 Loss (std): 16.524722457498502 Loss ratio: 2.810547896594863 Tokens per Sec: 3000.0240192245815
Epoch Step: 65 / 67 Loss (mean): 1.202734656399116 Loss (std): 1.0765009057956563 Loss ratio: 0.895044389107908 Tokens per Sec: 3056.213843531912
Mean loss per sample: 1.7551463236024234 Std loss per sample: 5.622204101355776 ratio: 3.203268027144454
Epoch ended with duration 0:00:11.382945
Train perplexity: 1.2680379652176148
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow call log codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 87.37752518057823 Loss (std): 41.31141346370014 Loss ratio: 0.4727922126236027 Tokens per Sec: 4308.028733355153
Mean loss per sample: 93.03037834033125 Std loss per sample: 47.657082563962376 ratio: 0.5122744141662994
Epoch ended with duration 0:00:01.034666
b'BLEU = 2.22, 7.8/2.5/1.5/1.0 (BP=0.951, ratio=0.952, hyp_len=2963, ref_len=3113)\n'
Validation perplexity: 298726.1649717273
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.22
Model saved checkpoint_commit_msg_generator!
Epoch 321 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.2406152595067397 Loss (std): 1.0314865938305284 Loss ratio: 0.8314314900823004 Tokens per Sec: 2770.789190725486
Epoch Step: 10 / 67 Loss (mean): 2.0855247120489366 Loss (std): 7.369065608368534 Loss ratio: 3.5334348069789834 Tokens per Sec: 2734.837558517774
Epoch Step: 15 / 67 Loss (mean): 2.2264166576205753 Loss (std): 1.80349091851357 Loss ratio: 0.8100419624245013 Tokens per Sec: 2505.7921648750475
Epoch Step: 20 / 67 Loss (mean): 0.9388124317047186 Loss (std): 1.0115148589115743 Loss ratio: 1.077440844146941 Tokens per Sec: 2784.4278199381597
Epoch Step: 25 / 67 Loss (mean): 1.490745288087055 Loss (std): 1.2769608935162824 Loss ratio: 0.8565922721479108 Tokens per Sec: 3157.0281669250653
Epoch Step: 30 / 67 Loss (mean): 0.970609947151388 Loss (std): 0.9717556321643817 Loss ratio: 1.0011803763358866 Tokens per Sec: 3011.364174139954
Epoch Step: 35 / 67 Loss (mean): 1.401540165534243 Loss (std): 1.2449203557096356 Loss ratio: 0.8882516436730825 Tokens per Sec: 2881.8732225642075
Epoch Step: 40 / 67 Loss (mean): 1.0189735013991594 Loss (std): 1.0829631967226259 Loss ratio: 1.0627981937072963 Tokens per Sec: 2524.7549082240525
Epoch Step: 45 / 67 Loss (mean): 0.9959283593379951 Loss (std): 1.0736592707281118 Loss ratio: 1.0780486976410486 Tokens per Sec: 2405.930167037889
Epoch Step: 50 / 67 Loss (mean): 1.3943968279054388 Loss (std): 1.3701126234565506 Loss ratio: 0.9825844379713871 Tokens per Sec: 2914.926092813757
Epoch Step: 55 / 67 Loss (mean): 0.9784506616342696 Loss (std): 1.1102254508758398 Loss ratio: 1.1346769892530622 Tokens per Sec: 2596.0715066111334
Epoch Step: 60 / 67 Loss (mean): 3.6182624302455224 Loss (std): 12.512661784106758 Loss ratio: 3.4581963097844435 Tokens per Sec: 3236.052918002268
Epoch Step: 65 / 67 Loss (mean): 1.148781500698533 Loss (std): 1.0234506299968305 Loss ratio: 0.8909010367720117 Tokens per Sec: 2502.9413695360286
Mean loss per sample: 1.8380544345897518 Std loss per sample: 5.874866801243543 ratio: 3.1962420104031337
Epoch ended with duration 0:00:11.420094
Train perplexity: 1.2823421881823196
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 87.581976801157 Loss (std): 39.901420833432454 Loss ratio: 0.4555894065285055 Tokens per Sec: 4312.562231661594
Mean loss per sample: 92.94201080989642 Std loss per sample: 47.46534108214103 ratio: 0.5106984523847524
Epoch ended with duration 0:00:01.032415
b'BLEU = 2.44, 7.9/2.7/1.7/1.3 (BP=0.937, ratio=0.939, hyp_len=2924, ref_len=3113)\n'
Validation perplexity: 295170.13955932786
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.44
Epoch 322 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.14392108831089 Loss (std): 1.3959682461672596 Loss ratio: 1.2203361406935347 Tokens per Sec: 2585.544003443948
Epoch Step: 10 / 67 Loss (mean): 1.3909962192701641 Loss (std): 1.0849984445130503 Loss ratio: 0.7800153799715814 Tokens per Sec: 2497.336059156367
Epoch Step: 15 / 67 Loss (mean): 1.6284083437058143 Loss (std): 1.7421291623268185 Loss ratio: 1.0698355661591652 Tokens per Sec: 2701.157686935367
Epoch Step: 20 / 67 Loss (mean): 1.2357001109048724 Loss (std): 1.393712054163142 Loss ratio: 1.127872403557981 Tokens per Sec: 3210.43444922174
Epoch Step: 25 / 67 Loss (mean): 0.9659100756398402 Loss (std): 1.086719912849608 Loss ratio: 1.125073586306407 Tokens per Sec: 3063.0432149055787
Epoch Step: 30 / 67 Loss (mean): 0.927316191024147 Loss (std): 0.9805305374224205 Loss ratio: 1.0573853308217367 Tokens per Sec: 3061.18225806803
Epoch Step: 35 / 67 Loss (mean): 1.0891733210301027 Loss (std): 0.9655597749455769 Loss ratio: 0.8865070015049429 Tokens per Sec: 2650.8284362571676
Epoch Step: 40 / 67 Loss (mean): 0.9214111596811563 Loss (std): 0.7854975464758991 Loss ratio: 0.8524940665443117 Tokens per Sec: 2945.910630580097
Epoch Step: 45 / 67 Loss (mean): 2.2797705585253425 Loss (std): 1.8723288781044494 Loss ratio: 0.8212795235479993 Tokens per Sec: 2441.299241522749
Epoch Step: 50 / 67 Loss (mean): 8.358577082399279 Loss (std): 17.22594556447437 Loss ratio: 2.0608705757762498 Tokens per Sec: 2657.6973789201634
Epoch Step: 55 / 67 Loss (mean): 1.0305170170613565 Loss (std): 0.9691699269953916 Loss ratio: 0.9404696001615738 Tokens per Sec: 2766.4351914879812
Epoch Step: 60 / 67 Loss (mean): 0.9328052942146314 Loss (std): 1.0456417042963588 Loss ratio: 1.1209645901256695 Tokens per Sec: 2596.015095482284
Epoch Step: 65 / 67 Loss (mean): 1.1480352031358052 Loss (std): 1.0246737680435185 Loss ratio: 0.8925455989891855 Tokens per Sec: 2945.9453762343956
Mean loss per sample: 1.4974966133936285 Std loss per sample: 4.642261510227169 ratio: 3.100014696999462
Epoch ended with duration 0:00:11.356827
Train perplexity: 1.2245958416100138
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test java for sslcontext.tls[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 87.6965426504612 Loss (std): 40.27780070986085 Loss ratio: 0.45928607323094994 Tokens per Sec: 4329.526831738447
Mean loss per sample: 93.74307904795545 Std loss per sample: 47.073312831193945 ratio: 0.5021524075085373
Epoch ended with duration 0:00:01.030746
b'BLEU = 2.60, 8.5/2.9/1.8/1.4 (BP=0.920, ratio=0.923, hyp_len=2874, ref_len=3113)\n'
Validation perplexity: 329017.52903890907
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.6
Epoch 323 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.6022343560180161 Loss (std): 1.4303950642993009 Loss ratio: 0.8927502140537155 Tokens per Sec: 3784.2136927391666
Epoch Step: 10 / 67 Loss (mean): 5.398754854191793 Loss (std): 11.649062988441582 Loss ratio: 2.1577314219772026 Tokens per Sec: 2978.255386641023
Epoch Step: 15 / 67 Loss (mean): 1.4667668978363508 Loss (std): 1.3497427301679903 Loss ratio: 0.9202162471480747 Tokens per Sec: 3010.443575299023
Epoch Step: 20 / 67 Loss (mean): 0.832527507445775 Loss (std): 0.8602401358253137 Loss ratio: 1.0332873426183382 Tokens per Sec: 2772.681127302447
Epoch Step: 25 / 67 Loss (mean): 1.1471944685908966 Loss (std): 1.0719559819789906 Loss ratio: 0.9344152289155284 Tokens per Sec: 2762.409005069514
Epoch Step: 30 / 67 Loss (mean): 0.8654048693424556 Loss (std): 0.8393627566743033 Loss ratio: 0.9699075963277864 Tokens per Sec: 2824.895820870837
Epoch Step: 35 / 67 Loss (mean): 0.9201577119529247 Loss (std): 0.8753004850958616 Loss ratio: 0.9512505016538316 Tokens per Sec: 2154.807526404797
Epoch Step: 40 / 67 Loss (mean): 1.1726464548846707 Loss (std): 1.1441115718074049 Loss ratio: 0.9756662522123326 Tokens per Sec: 2828.2995059700193
Epoch Step: 45 / 67 Loss (mean): 24.41932430677116 Loss (std): 29.510590555494137 Loss ratio: 1.2084933303134533 Tokens per Sec: 2596.506942809949
Epoch Step: 50 / 67 Loss (mean): 2.8988841311074793 Loss (std): 2.41450891981215 Loss ratio: 0.8329097716954005 Tokens per Sec: 2900.1729009570026
Epoch Step: 55 / 67 Loss (mean): 1.2743188742024358 Loss (std): 1.2195890402547966 Loss ratio: 0.9570516963566963 Tokens per Sec: 3091.5040063783385
Epoch Step: 60 / 67 Loss (mean): 1.200091317681654 Loss (std): 1.4980200636659264 Loss ratio: 1.2482550632561977 Tokens per Sec: 2340.361120904814
Epoch Step: 65 / 67 Loss (mean): 1.1176696984912269 Loss (std): 1.0101214613031904 Loss ratio: 0.9037745790789364 Tokens per Sec: 2697.5107283253838
Mean loss per sample: 1.9891357398744756 Std loss per sample: 6.615927668262162 ratio: 3.3260312685747935
Epoch ended with duration 0:00:11.392777
Train perplexity: 1.3088246200093618
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable opportunistic print on method_1 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 87.58081477880478 Loss (std): 40.38947906089679 Loss ratio: 0.4611681127071605 Tokens per Sec: 4320.950422790243
Mean loss per sample: 92.8474863071422 Std loss per sample: 47.37159822593123 ratio: 0.5102087316529453
Epoch ended with duration 0:00:01.032783
b'BLEU = 2.27, 8.5/2.5/1.5/1.1 (BP=0.936, ratio=0.938, hyp_len=2921, ref_len=3113)\n'
Validation perplexity: 291413.1941265484
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.27
Epoch 324 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.4105061247682897 Loss (std): 1.6184848767762916 Loss ratio: 1.1474497333658635 Tokens per Sec: 2801.1715210835887
Epoch Step: 10 / 67 Loss (mean): 1.0182434753514826 Loss (std): 0.8656455637707255 Loss ratio: 0.850136126305074 Tokens per Sec: 2488.279326922233
Epoch Step: 15 / 67 Loss (mean): 1.2727697245718446 Loss (std): 1.354344354986121 Loss ratio: 1.0640922146712106 Tokens per Sec: 3393.3439316280355
Epoch Step: 20 / 67 Loss (mean): 0.891825076774694 Loss (std): 1.0608355545073354 Loss ratio: 1.1895107932419569 Tokens per Sec: 2573.0266131261073
Epoch Step: 25 / 67 Loss (mean): 0.9345431593246758 Loss (std): 0.9220195915794809 Loss ratio: 0.9865992623024016 Tokens per Sec: 2490.360806486815
Epoch Step: 30 / 67 Loss (mean): 7.36898138995457 Loss (std): 16.936590123636183 Loss ratio: 2.298362450300692 Tokens per Sec: 3063.3174224219943
Epoch Step: 35 / 67 Loss (mean): 1.0931124659691704 Loss (std): 1.075350910608207 Loss ratio: 0.9837513925475037 Tokens per Sec: 3226.966822413551
Epoch Step: 40 / 67 Loss (mean): 1.0910596861795057 Loss (std): 1.3911938820112184 Loss ratio: 1.2750850385487833 Tokens per Sec: 2576.451814184398
Epoch Step: 45 / 67 Loss (mean): 0.949719876924064 Loss (std): 0.9890659413896234 Loss ratio: 1.0414291260208144 Tokens per Sec: 2813.0035772867113
Epoch Step: 50 / 67 Loss (mean): 1.1992848205263726 Loss (std): 0.8926391551414753 Loss ratio: 0.7443095583830462 Tokens per Sec: 2906.4599447392557
Epoch Step: 55 / 67 Loss (mean): 1.126866586448159 Loss (std): 1.4127044331422633 Loss ratio: 1.2536572209448986 Tokens per Sec: 2516.6323948448908
Epoch Step: 60 / 67 Loss (mean): 0.879858962027356 Loss (std): 1.159165724843487 Loss ratio: 1.317444925687359 Tokens per Sec: 2762.343161566771
Epoch Step: 65 / 67 Loss (mean): 1.433530118811177 Loss (std): 2.108840574111755 Loss ratio: 1.4710821533771548 Tokens per Sec: 2560.808412707129
Mean loss per sample: 1.8342206042383933 Std loss per sample: 5.752164119596457 ratio: 3.136026335275454
Epoch ended with duration 0:00:11.396543
Train perplexity: 1.2816771890644632
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print 9 cipher a log codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for developer[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 87.63032165169716 Loss (std): 40.92276540947603 Loss ratio: 0.466993212373807 Tokens per Sec: 4416.647478469571
Mean loss per sample: 92.1193342958806 Std loss per sample: 47.56075415415609 ratio: 0.516295026637887
Epoch ended with duration 0:00:01.018780
b'BLEU = 2.13, 7.8/2.4/1.4/1.0 (BP=0.947, ratio=0.949, hyp_len=2953, ref_len=3113)\n'
Validation perplexity: 264030.47475937696
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.13
Epoch 325 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.9910062022536295 Loss (std): 1.2038847922423972 Loss ratio: 1.2148105526531159 Tokens per Sec: 2921.2225418065836
Epoch Step: 10 / 67 Loss (mean): 0.9902403684245655 Loss (std): 1.0839606497610703 Loss ratio: 1.094643971630454 Tokens per Sec: 3309.578012023427
Epoch Step: 15 / 67 Loss (mean): 1.1031511867186055 Loss (std): 1.1951511371563825 Loss ratio: 1.0833974087554008 Tokens per Sec: 2626.1662324045164
Epoch Step: 20 / 67 Loss (mean): 0.8654099755221978 Loss (std): 0.8217984156198788 Loss ratio: 0.9496058964700478 Tokens per Sec: 2683.8545665809547
Epoch Step: 25 / 67 Loss (mean): 1.042125342413783 Loss (std): 1.0438034718003755 Loss ratio: 1.0016102951519301 Tokens per Sec: 3422.3796041778437
Epoch Step: 30 / 67 Loss (mean): 0.8862973775394494 Loss (std): 0.8068501851524741 Loss ratio: 0.9103605692622744 Tokens per Sec: 3004.583214815032
Epoch Step: 35 / 67 Loss (mean): 0.9192056703031994 Loss (std): 0.9186817838563783 Loss ratio: 0.9994300661280209 Tokens per Sec: 3365.8660518784936
Epoch Step: 40 / 67 Loss (mean): 0.8330487116618315 Loss (std): 0.7343345989259928 Loss ratio: 0.8815025924007301 Tokens per Sec: 2583.707266315972
Epoch Step: 45 / 67 Loss (mean): 1.3623103966237977 Loss (std): 1.4468839568785679 Loss ratio: 1.062080976893642 Tokens per Sec: 2615.4571835890138
Epoch Step: 50 / 67 Loss (mean): 2.5172197387437336 Loss (std): 2.4956071823934725 Loss ratio: 0.9914141161307406 Tokens per Sec: 2408.5905865718655
Epoch Step: 55 / 67 Loss (mean): 1.248493027756922 Loss (std): 1.3560968378944325 Loss ratio: 1.086186953186943 Tokens per Sec: 2934.58678787367
Epoch Step: 60 / 67 Loss (mean): 1.4697419074364007 Loss (std): 1.2853594808958562 Loss ratio: 0.8745477518143618 Tokens per Sec: 2615.9606048128444
Epoch Step: 65 / 67 Loss (mean): 0.9890526140516158 Loss (std): 1.0300653851436452 Loss ratio: 1.0414667233161865 Tokens per Sec: 2486.1646422878043
Mean loss per sample: 1.724351562099674 Std loss per sample: 5.822835822143263 ratio: 3.3768263677350276
Epoch ended with duration 0:00:11.357896
Train perplexity: 1.2627656478208733
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test java method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 87.70287361741066 Loss (std): 40.5770083212006 Loss ratio: 0.4626645245195855 Tokens per Sec: 4297.584782807625
Mean loss per sample: 94.40217899128062 Std loss per sample: 47.17937072362149 ratio: 0.4997699335730288
Epoch ended with duration 0:00:01.049373
b'BLEU = 2.53, 7.9/2.7/1.7/1.3 (BP=0.958, ratio=0.959, hyp_len=2985, ref_len=3113)\n'
Validation perplexity: 359757.74594961136
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.53
Model saved checkpoint_commit_msg_generator!
Epoch 326 / 1000
Epoch Step: 5 / 67 Loss (mean): 5.34877620259067 Loss (std): 13.556349966502603 Loss ratio: 2.534476944452566 Tokens per Sec: 2883.8523359792957
Epoch Step: 10 / 67 Loss (mean): 2.8435400669113733 Loss (std): 3.036080408716299 Loss ratio: 1.0677114924615996 Tokens per Sec: 2825.5681014767442
Epoch Step: 15 / 67 Loss (mean): 1.5698225379455835 Loss (std): 1.473554785659145 Loss ratio: 0.9386760286851128 Tokens per Sec: 2820.9004235394273
Epoch Step: 20 / 67 Loss (mean): 0.8613806045614183 Loss (std): 1.1458100477610738 Loss ratio: 1.3302018198383698 Tokens per Sec: 2926.4322723092073
Epoch Step: 25 / 67 Loss (mean): 4.974039209773764 Loss (std): 13.954555883103922 Loss ratio: 2.805477660024039 Tokens per Sec: 2788.6193584726716
Epoch Step: 30 / 67 Loss (mean): 1.131202794087585 Loss (std): 1.1126535037458825 Loss ratio: 0.9836021530015189 Tokens per Sec: 2557.7927742254155
Epoch Step: 35 / 67 Loss (mean): 1.263669482228579 Loss (std): 1.3800451457256666 Loss ratio: 1.0920934351376834 Tokens per Sec: 2867.427944949654
Epoch Step: 40 / 67 Loss (mean): 0.9009270633832784 Loss (std): 0.7420959516999363 Loss ratio: 0.8237025857710624 Tokens per Sec: 2416.972218957597
Epoch Step: 45 / 67 Loss (mean): 0.9545690165978158 Loss (std): 1.0550877911530783 Loss ratio: 1.1053027835677318 Tokens per Sec: 2453.000541060083
Epoch Step: 50 / 67 Loss (mean): 1.018692851997912 Loss (std): 1.0205506753308098 Loss ratio: 1.0018237325698853 Tokens per Sec: 2828.132817558855
Epoch Step: 55 / 67 Loss (mean): 1.1466121316625504 Loss (std): 1.0922855406546763 Loss ratio: 0.952619905626585 Tokens per Sec: 2893.03665489868
Epoch Step: 60 / 67 Loss (mean): 1.1157557760889176 Loss (std): 1.0519841169461874 Loss ratio: 0.942844428405049 Tokens per Sec: 3131.25079328438
Epoch Step: 65 / 67 Loss (mean): 1.0733253341459204 Loss (std): 0.9618185304229266 Loss ratio: 0.8961108992999561 Tokens per Sec: 2589.6256167619254
Mean loss per sample: 1.544565666177032 Std loss per sample: 4.792118365407927 ratio: 3.1025669353825154
Epoch ended with duration 0:00:11.377978
Train perplexity: 1.2324194794791796
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings not closing device ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test java for generic[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 88.00668177008629 Loss (std): 40.111243254328954 Loss ratio: 0.4557749758037449 Tokens per Sec: 4452.659039194949
Mean loss per sample: 92.18801875265895 Std loss per sample: 47.576393129641986 ratio: 0.5160800044666298
Epoch ended with duration 0:00:01.014517
b'BLEU = 2.75, 8.1/2.9/1.9/1.4 (BP=0.975, ratio=0.975, hyp_len=3036, ref_len=3113)\n'
Validation perplexity: 266499.5367491032
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.75
Epoch 327 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.0012233156594448 Loss (std): 1.0625539793539156 Loss ratio: 1.0612557286024407 Tokens per Sec: 2346.38859923026
Epoch Step: 10 / 67 Loss (mean): 1.361488168593496 Loss (std): 1.2814265543928267 Loss ratio: 0.9411955123463334 Tokens per Sec: 2707.2669893333746
Epoch Step: 15 / 67 Loss (mean): 1.152800547410152 Loss (std): 1.2332171761014419 Loss ratio: 1.069757625351542 Tokens per Sec: 3736.7509392692673
Epoch Step: 20 / 67 Loss (mean): 0.987069200782571 Loss (std): 1.0073466001905267 Loss ratio: 1.0205430372985798 Tokens per Sec: 2505.2133132399567
Epoch Step: 25 / 67 Loss (mean): 0.8375332912837621 Loss (std): 0.7408284832149695 Loss ratio: 0.884536162233546 Tokens per Sec: 2834.2497951725386
Epoch Step: 30 / 67 Loss (mean): 1.1454850797308609 Loss (std): 0.8781762554482941 Loss ratio: 0.7666413740235074 Tokens per Sec: 3029.5946742117503
Epoch Step: 35 / 67 Loss (mean): 1.314783666166477 Loss (std): 1.3249901207452663 Loss ratio: 1.00776283950085 Tokens per Sec: 3344.973501345156
Epoch Step: 40 / 67 Loss (mean): 0.949313210323453 Loss (std): 0.8177165416026678 Loss ratio: 0.8613769751756145 Tokens per Sec: 2670.8360136771967
Epoch Step: 45 / 67 Loss (mean): 1.0848577850265428 Loss (std): 1.081294948555254 Loss ratio: 0.9967158492841515 Tokens per Sec: 2896.7237233213627
Epoch Step: 50 / 67 Loss (mean): 0.8862616497499403 Loss (std): 0.7344951609850705 Loss ratio: 0.8287565655044525 Tokens per Sec: 2486.204415782993
Epoch Step: 55 / 67 Loss (mean): 1.406707415357232 Loss (std): 1.5523349230079975 Loss ratio: 1.1035236653058969 Tokens per Sec: 2840.384555815853
Epoch Step: 60 / 67 Loss (mean): 0.8371103622630471 Loss (std): 1.0023179533825781 Loss ratio: 1.197354612446689 Tokens per Sec: 2508.233846869234
Epoch Step: 65 / 67 Loss (mean): 0.9664789321395801 Loss (std): 0.8639713775388848 Loss ratio: 0.8939371038603342 Tokens per Sec: 2623.633193372585
Mean loss per sample: 1.454586154125825 Std loss per sample: 4.263995541520862 ratio: 2.9314149109878143
Epoch ended with duration 0:00:11.345632
Train perplexity: 1.2175067151129852
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings from inactive ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog updating[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 88.15292975306511 Loss (std): 41.357158387922766 Loss ratio: 0.46915239804023373 Tokens per Sec: 4424.934949121774
Mean loss per sample: 92.40045366301888 Std loss per sample: 47.91156445593848 ratio: 0.5185208790280428
Epoch ended with duration 0:00:01.017759
b'BLEU = 2.06, 7.6/2.2/1.3/1.0 (BP=0.961, ratio=0.962, hyp_len=2994, ref_len=3113)\n'
Validation perplexity: 274283.225094597
Validation accuracy: 0.0
Validation BLEU: 2.06
Epoch 328 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.7866082520340569 Loss (std): 0.8865962155402983 Loss ratio: 1.12711278231278 Tokens per Sec: 3162.2164030054214
Epoch Step: 10 / 67 Loss (mean): 1.3277319265762344 Loss (std): 1.35130074063565 Loss ratio: 1.017751184247103 Tokens per Sec: 2669.1211008418777
Epoch Step: 15 / 67 Loss (mean): 0.9133361005224288 Loss (std): 0.9273716688630044 Loss ratio: 1.0153673640323067 Tokens per Sec: 2669.1448029257704
Epoch Step: 20 / 67 Loss (mean): 1.0461313651467208 Loss (std): 1.1488333633882992 Loss ratio: 1.0981731373929071 Tokens per Sec: 2986.76785631331
Epoch Step: 25 / 67 Loss (mean): 1.5704806696157902 Loss (std): 1.8503062875770055 Loss ratio: 1.178178326785565 Tokens per Sec: 3542.791763852082
Epoch Step: 30 / 67 Loss (mean): 1.121309624722926 Loss (std): 1.2616195532116754 Loss ratio: 1.1251304059067715 Tokens per Sec: 2923.58075559051
Epoch Step: 35 / 67 Loss (mean): 0.9059020925196819 Loss (std): 0.9218607205596708 Loss ratio: 1.0176162834502362 Tokens per Sec: 2371.475219161264
Epoch Step: 40 / 67 Loss (mean): 1.0145523835963104 Loss (std): 1.1583868756604658 Loss ratio: 1.1417713805513932 Tokens per Sec: 2637.4394896066156
Epoch Step: 45 / 67 Loss (mean): 0.9614362468710169 Loss (std): 0.9759844668069219 Loss ratio: 1.0151317572883818 Tokens per Sec: 2757.6465166183557
Epoch Step: 50 / 67 Loss (mean): 0.8269579790649004 Loss (std): 0.8831472494817987 Loss ratio: 1.0679469475346686 Tokens per Sec: 2581.4184231832487
Epoch Step: 55 / 67 Loss (mean): 0.7893820752797183 Loss (std): 0.8042813809707775 Loss ratio: 1.0188746440508922 Tokens per Sec: 2713.92340163303
Epoch Step: 60 / 67 Loss (mean): 0.7627734267007327 Loss (std): 0.8046265228065453 Loss ratio: 1.054869630536085 Tokens per Sec: 2743.214489907232
Epoch Step: 65 / 67 Loss (mean): 1.286120523698628 Loss (std): 1.557422908765369 Loss ratio: 1.2109463149585151 Tokens per Sec: 2527.7133895501984
Mean loss per sample: 1.555248255543437 Std loss per sample: 5.581465633637459 ratio: 3.5887940164814234
Epoch ended with duration 0:00:11.391162
Train perplexity: 1.2342020464735766
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 88.96156221628189 Loss (std): 40.63463908351607 Loss ratio: 0.4567662490540106 Tokens per Sec: 4417.125282985876
Mean loss per sample: 92.48920184263929 Std loss per sample: 47.472374812528734 ratio: 0.5132747809122412
Epoch ended with duration 0:00:01.019116
b'BLEU = 2.19, 7.5/2.4/1.4/1.0 (BP=0.958, ratio=0.959, hyp_len=2986, ref_len=3113)\n'
Validation perplexity: 277601.93767843914
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.19
Epoch 329 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.320393117275671 Loss (std): 6.8527474661286 Loss ratio: 2.953270036490316 Tokens per Sec: 2590.82784964383
Epoch Step: 10 / 67 Loss (mean): 0.8333088203507941 Loss (std): 0.9810995033560077 Loss ratio: 1.1773540365779385 Tokens per Sec: 2961.5513696038574
Epoch Step: 15 / 67 Loss (mean): 0.895634015352698 Loss (std): 0.7512633847525927 Loss ratio: 0.8388062220445562 Tokens per Sec: 2583.4273058454323
Epoch Step: 20 / 67 Loss (mean): 1.1192746104788966 Loss (std): 1.0944938216054605 Loss ratio: 0.9778599562239392 Tokens per Sec: 2552.775418699723
Epoch Step: 25 / 67 Loss (mean): 1.02815237492905 Loss (std): 1.0686097257733067 Loss ratio: 1.039349567078565 Tokens per Sec: 3070.6187439677697
Epoch Step: 30 / 67 Loss (mean): 1.3388025015447056 Loss (std): 1.3283864137164776 Loss ratio: 0.9922198473514876 Tokens per Sec: 2603.9934074638927
Epoch Step: 35 / 67 Loss (mean): 0.8796309661083797 Loss (std): 1.0528905956559305 Loss ratio: 1.1969685427447803 Tokens per Sec: 2532.5530436512186
Epoch Step: 40 / 67 Loss (mean): 1.0099861815106124 Loss (std): 1.0159900371990869 Loss ratio: 1.005944492903353 Tokens per Sec: 2404.7185131533306
Epoch Step: 45 / 67 Loss (mean): 1.075424853948789 Loss (std): 0.8377096571967545 Loss ratio: 0.7789569435008108 Tokens per Sec: 3054.173362798183
Epoch Step: 50 / 67 Loss (mean): 0.656158932375547 Loss (std): 0.7064427379063041 Loss ratio: 1.076633576180561 Tokens per Sec: 2864.062677577926
Epoch Step: 55 / 67 Loss (mean): 0.9969715068145888 Loss (std): 1.039922900210915 Loss ratio: 1.043081866535544 Tokens per Sec: 3360.591620869766
Epoch Step: 60 / 67 Loss (mean): 0.9856132311397232 Loss (std): 0.7389393562645632 Loss ratio: 0.7497254835044003 Tokens per Sec: 2942.678717589395
Epoch Step: 65 / 67 Loss (mean): 0.9027909137075767 Loss (std): 1.202048895631248 Loss ratio: 1.3314809413562663 Tokens per Sec: 2551.1913769024472
Mean loss per sample: 1.418007119020938 Std loss per sample: 4.548587044039266 ratio: 3.2077321637001615
Epoch ended with duration 0:00:11.418031
Train perplexity: 1.2114959986276794
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow call log[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 104.04416930675507 Loss (std): 42.43323197935647 Loss ratio: 0.4078386348998559 Tokens per Sec: 4311.681158308381
Mean loss per sample: 94.8169320181745 Std loss per sample: 48.7824704201557 ratio: 0.5144911291878236
Epoch ended with duration 0:00:01.032515
b'BLEU = 2.13, 7.1/2.5/1.5/1.1 (BP=0.924, ratio=0.927, hyp_len=2886, ref_len=3113)\n'
Validation perplexity: 380557.5221678364
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.13
Epoch 330 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.107958959764801 Loss (std): 1.5812106406921997 Loss ratio: 1.4271382768797332 Tokens per Sec: 2460.1758887142278
Epoch Step: 10 / 67 Loss (mean): 0.9862515298882499 Loss (std): 0.8535527199221786 Loss ratio: 0.8654513519678827 Tokens per Sec: 2954.8735258855986
Epoch Step: 15 / 67 Loss (mean): 0.9170650863670744 Loss (std): 0.9717273722385924 Loss ratio: 1.0596056775948814 Tokens per Sec: 3058.477851378429
Epoch Step: 20 / 67 Loss (mean): 0.4408065866058071 Loss (std): 0.5404191683073843 Loss ratio: 1.2259779792960674 Tokens per Sec: 2909.5514780365334
Epoch Step: 25 / 67 Loss (mean): 0.7942651035264134 Loss (std): 0.7918716570923084 Loss ratio: 0.9969865899641336 Tokens per Sec: 3145.194101666526
Epoch Step: 30 / 67 Loss (mean): 2.513557429658249 Loss (std): 2.4693430375857286 Loss ratio: 0.982409635224236 Tokens per Sec: 2515.4020959395975
Epoch Step: 35 / 67 Loss (mean): 1.154409421083983 Loss (std): 1.168781252926291 Loss ratio: 1.0124495101822826 Tokens per Sec: 2437.5757651652825
Epoch Step: 40 / 67 Loss (mean): 1.057968590874225 Loss (std): 0.8650341035759161 Loss ratio: 0.8176368476696625 Tokens per Sec: 2695.5278697477556
Epoch Step: 45 / 67 Loss (mean): 0.9061781706986949 Loss (std): 0.9040625163891597 Loss ratio: 0.9976652998516793 Tokens per Sec: 2331.7046043666483
Epoch Step: 50 / 67 Loss (mean): 0.872025405842578 Loss (std): 0.8798713065111398 Loss ratio: 1.0089973303713333 Tokens per Sec: 2719.175389016105
Epoch Step: 55 / 67 Loss (mean): 1.3949123205966316 Loss (std): 1.3628334778855515 Loss ratio: 0.97700296840352 Tokens per Sec: 3254.964300414963
Epoch Step: 60 / 67 Loss (mean): 0.7761153492028825 Loss (std): 0.6799988825363278 Loss ratio: 0.8761569826376039 Tokens per Sec: 2620.7988281413636
Epoch Step: 65 / 67 Loss (mean): 1.1035750850278419 Loss (std): 0.9594666972017651 Loss ratio: 0.8694167802615433 Tokens per Sec: 2568.9822418492004
Mean loss per sample: 2.029514137439367 Std loss per sample: 6.989462793209042 ratio: 3.4439093890854244
Epoch ended with duration 0:00:11.504430
Train perplexity: 1.3159945393785073
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 88.43797501921654 Loss (std): 40.966500808978694 Loss ratio: 0.46322296276093106 Tokens per Sec: 4416.393991516355
Mean loss per sample: 93.01869769785247 Std loss per sample: 48.96065207041338 ratio: 0.5263528009115929
Epoch ended with duration 0:00:01.023798
b'BLEU = 2.23, 8.1/2.5/1.5/1.1 (BP=0.924, ratio=0.927, hyp_len=2885, ref_len=3113)\n'
Validation perplexity: 298253.67454839736
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.23
Model saved checkpoint_commit_msg_generator!
Epoch 331 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.8981044606189243 Loss (std): 1.1972396052561294 Loss ratio: 1.3330738881210515 Tokens per Sec: 2430.6894664545052
Epoch Step: 10 / 67 Loss (mean): 1.2726278289046604 Loss (std): 1.8275257197506507 Loss ratio: 1.4360252685371386 Tokens per Sec: 2903.169876824268
Epoch Step: 15 / 67 Loss (mean): 1.7438568685902283 Loss (std): 2.1698058504479256 Loss ratio: 1.2442568478696556 Tokens per Sec: 2939.486641190447
Epoch Step: 20 / 67 Loss (mean): 0.8890889715839876 Loss (std): 0.8705690314655753 Loss ratio: 0.9791697561095405 Tokens per Sec: 3289.44724080433
Epoch Step: 25 / 67 Loss (mean): 1.213550289394334 Loss (std): 1.2606977044756624 Loss ratio: 1.0388508127708982 Tokens per Sec: 2958.9026009831073
Epoch Step: 30 / 67 Loss (mean): 1.3548149436246604 Loss (std): 1.2286242054845709 Loss ratio: 0.9068575832190927 Tokens per Sec: 3055.7130678083863
Epoch Step: 35 / 67 Loss (mean): 1.101407804468181 Loss (std): 1.3494098875499283 Loss ratio: 1.2251682638125994 Tokens per Sec: 2640.6403498250384
Epoch Step: 40 / 67 Loss (mean): 1.0246839108076529 Loss (std): 0.8868919693962323 Loss ratio: 0.8655273690178141 Tokens per Sec: 2285.495199638532
Epoch Step: 45 / 67 Loss (mean): 1.0597466592444107 Loss (std): 1.046879771225799 Loss ratio: 0.9878585245762551 Tokens per Sec: 3467.720442491997
Epoch Step: 50 / 67 Loss (mean): 0.9245322892966215 Loss (std): 0.9906875275862896 Loss ratio: 1.071555357293144 Tokens per Sec: 2631.7292020044406
Epoch Step: 55 / 67 Loss (mean): 0.985619997169124 Loss (std): 1.0636318072468662 Loss ratio: 1.079149987116542 Tokens per Sec: 2418.4899302184795
Epoch Step: 60 / 67 Loss (mean): 5.335054003691766 Loss (std): 11.878995458414956 Loss ratio: 2.22659329225063 Tokens per Sec: 2761.5397377740296
Epoch Step: 65 / 67 Loss (mean): 0.8968187050777487 Loss (std): 0.8763167344773689 Loss ratio: 0.9771392250358979 Tokens per Sec: 2797.4430832896446
Mean loss per sample: 1.4462520800215395 Std loss per sample: 4.482609375372362 ratio: 3.0994661562081216
Epoch ended with duration 0:00:11.406744
Train perplexity: 1.216134630886806
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for developer[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 88.9479728937149 Loss (std): 41.474838062183125 Loss ratio: 0.46628199286499705 Tokens per Sec: 4400.598910607718
Mean loss per sample: 94.05129135387843 Std loss per sample: 47.812469139201504 ratio: 0.5083658974899322
Epoch ended with duration 0:00:01.039743
b'BLEU = 2.47, 8.3/2.9/1.6/1.2 (BP=0.937, ratio=0.939, hyp_len=2924, ref_len=3113)\n'
Validation perplexity: 343051.06620753667
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.47
Epoch 332 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.9936051764670992 Loss (std): 0.8656602348252467 Loss ratio: 0.8712316072096379 Tokens per Sec: 2793.6586173390433
Epoch Step: 10 / 67 Loss (mean): 1.3148249661608133 Loss (std): 1.3445736658666216 Loss ratio: 1.0226255969208375 Tokens per Sec: 2838.798118010027
Epoch Step: 15 / 67 Loss (mean): 0.9283552630804479 Loss (std): 0.9166602289688376 Loss ratio: 0.9874024152426258 Tokens per Sec: 2680.1528705853325
Epoch Step: 20 / 67 Loss (mean): 1.1579042701341677 Loss (std): 1.2933600803533976 Loss ratio: 1.1169836002103477 Tokens per Sec: 2432.5453164361697
Epoch Step: 25 / 67 Loss (mean): 0.7677860816475004 Loss (std): 0.6258434778564669 Loss ratio: 0.815127406990166 Tokens per Sec: 2669.508849788881
Epoch Step: 30 / 67 Loss (mean): 1.2273238793786732 Loss (std): 1.015719370884873 Loss ratio: 0.8275886976134418 Tokens per Sec: 2674.7935801349795
Epoch Step: 35 / 67 Loss (mean): 5.351088265044382 Loss (std): 12.447432297731341 Loss ratio: 2.326149687913642 Tokens per Sec: 2787.466680352086
Epoch Step: 40 / 67 Loss (mean): 0.9742991969687864 Loss (std): 1.0257313692467427 Loss ratio: 1.052788889119452 Tokens per Sec: 2363.6282592696584
Epoch Step: 45 / 67 Loss (mean): 0.8445795432780869 Loss (std): 0.9920214526355408 Loss ratio: 1.174574331726274 Tokens per Sec: 2823.8647403693394
Epoch Step: 50 / 67 Loss (mean): 0.7555871224612929 Loss (std): 0.9558390174386621 Loss ratio: 1.2650281999580104 Tokens per Sec: 2669.837968621795
Epoch Step: 55 / 67 Loss (mean): 0.9414601953467354 Loss (std): 1.0119769972115034 Loss ratio: 1.0749015223514542 Tokens per Sec: 3019.5817727345107
Epoch Step: 60 / 67 Loss (mean): 1.0499872278887779 Loss (std): 0.9663611124574464 Loss ratio: 0.9203551117479024 Tokens per Sec: 2714.8502747752464
Epoch Step: 65 / 67 Loss (mean): 1.0158476444048574 Loss (std): 0.9192067113862051 Loss ratio: 0.9048667056020294 Tokens per Sec: 3195.7525543979145
Mean loss per sample: 1.5950554795666374 Std loss per sample: 4.831188687529888 ratio: 3.0288530708928567
Epoch ended with duration 0:00:11.470672
Train perplexity: 1.2408672757770658
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 104.23127365112305 Loss (std): 40.76844635970613 Loss ratio: 0.39113449286021335 Tokens per Sec: 4204.72501869413
Mean loss per sample: 96.08309297703329 Std loss per sample: 48.29222618823893 ratio: 0.5026089886571636
Epoch ended with duration 0:00:01.047485
b'BLEU = 2.23, 7.4/2.6/1.5/1.2 (BP=0.931, ratio=0.933, hyp_len=2905, ref_len=3113)\n'
Validation perplexity: 451793.32518439717
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.23
Epoch 333 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.1214159348746762 Loss (std): 1.0598748114088703 Loss ratio: 0.9451219466819121 Tokens per Sec: 3292.2092287899854
Epoch Step: 10 / 67 Loss (mean): 0.9602244375855662 Loss (std): 0.9268736335326605 Loss ratio: 0.9652676991467073 Tokens per Sec: 2575.0045788129055
Epoch Step: 15 / 67 Loss (mean): 0.9109086393145844 Loss (std): 0.8433059842340956 Loss ratio: 0.9257854716018978 Tokens per Sec: 3172.660653215836
Epoch Step: 20 / 67 Loss (mean): 5.914032316359226 Loss (std): 16.248913183573652 Loss ratio: 2.7475184974262614 Tokens per Sec: 2992.363374632022
Epoch Step: 25 / 67 Loss (mean): 1.1607889042061288 Loss (std): 1.1436911006259936 Loss ratio: 0.9852705315168148 Tokens per Sec: 2667.2402039056246
Epoch Step: 30 / 67 Loss (mean): 1.004110413370654 Loss (std): 0.9372512409421667 Loss ratio: 0.9334145214129882 Tokens per Sec: 2164.8430479690237
Epoch Step: 35 / 67 Loss (mean): 0.93764294590801 Loss (std): 1.0207946360221023 Loss ratio: 1.088681614336221 Tokens per Sec: 2753.8923009981113
Epoch Step: 40 / 67 Loss (mean): 0.952484397275839 Loss (std): 1.0230712328526301 Loss ratio: 1.0741081279427502 Tokens per Sec: 2723.833202110293
Epoch Step: 45 / 67 Loss (mean): 4.053095285227755 Loss (std): 12.136511110375096 Loss ratio: 2.994380900594374 Tokens per Sec: 2763.8315158406117
Epoch Step: 50 / 67 Loss (mean): 1.0218647139554378 Loss (std): 0.9319888212608031 Loss ratio: 0.9120471707583064 Tokens per Sec: 2878.4008418802464
Epoch Step: 55 / 67 Loss (mean): 0.7254208715166897 Loss (std): 0.8336372847930237 Loss ratio: 1.1491774189651838 Tokens per Sec: 2237.099563435936
Epoch Step: 60 / 67 Loss (mean): 1.049544944835361 Loss (std): 1.4237675999341144 Loss ratio: 1.3565570554555493 Tokens per Sec: 3261.042151134828
Epoch Step: 65 / 67 Loss (mean): 1.3539047960657626 Loss (std): 1.2300443801423457 Loss ratio: 0.9085161554318029 Tokens per Sec: 2978.697359255872
Mean loss per sample: 1.748691149865571 Std loss per sample: 6.126445136637033 ratio: 3.5034460699981222
Epoch ended with duration 0:00:11.450410
Train perplexity: 1.266930965695202
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) to ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 87.72733950614929 Loss (std): 41.83900886108192 Loss ratio: 0.476920981493451 Tokens per Sec: 4292.682933527754
Mean loss per sample: 94.29692556574696 Std loss per sample: 47.70839885336561 ratio: 0.5059380098251636
Epoch ended with duration 0:00:01.036525
b'BLEU = 2.33, 7.6/2.6/1.6/1.2 (BP=0.937, ratio=0.939, hyp_len=2922, ref_len=3113)\n'
Validation perplexity: 354662.68426280655
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.33
Epoch 334 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.0097481037373655 Loss (std): 1.1990921297237886 Loss ratio: 1.1875160995951435 Tokens per Sec: 2747.3862466453534
Epoch Step: 10 / 67 Loss (mean): 1.1492453257669695 Loss (std): 1.5848625633930673 Loss ratio: 1.3790463427252844 Tokens per Sec: 3128.5227930059973
Epoch Step: 15 / 67 Loss (mean): 0.7470005028881133 Loss (std): 0.9271807380601388 Loss ratio: 1.2412049717174196 Tokens per Sec: 2233.639965518582
Epoch Step: 20 / 67 Loss (mean): 0.9195499207999092 Loss (std): 0.8378811452390998 Loss ratio: 0.9111861425753087 Tokens per Sec: 2791.0511723584495
Epoch Step: 25 / 67 Loss (mean): 0.9109342847077642 Loss (std): 0.764498320225874 Loss ratio: 0.8392464012605826 Tokens per Sec: 2685.9540030196754
Epoch Step: 30 / 67 Loss (mean): 0.7603460235986859 Loss (std): 0.8471477321360505 Loss ratio: 1.1141607976412315 Tokens per Sec: 2517.4123185420385
Epoch Step: 35 / 67 Loss (mean): 0.3283040469479082 Loss (std): 0.38038749415886725 Loss ratio: 1.1586439390411263 Tokens per Sec: 2646.0612583816137
Epoch Step: 40 / 67 Loss (mean): 1.0010999526712112 Loss (std): 1.051224009080135 Loss ratio: 1.050068982897441 Tokens per Sec: 2608.6209895508337
Epoch Step: 45 / 67 Loss (mean): 2.0633133705123328 Loss (std): 1.784157294804474 Loss ratio: 0.8647049548084192 Tokens per Sec: 3978.574097840753
Epoch Step: 50 / 67 Loss (mean): 1.502712630550377 Loss (std): 1.5136085164481135 Loss ratio: 1.0072508114167815 Tokens per Sec: 2908.2237804447695
Epoch Step: 55 / 67 Loss (mean): 1.0127578737738077 Loss (std): 1.16171029647068 Loss ratio: 1.1470760450786086 Tokens per Sec: 2785.0276704607677
Epoch Step: 60 / 67 Loss (mean): 0.9690397330268752 Loss (std): 1.1283974222146154 Loss ratio: 1.1644490764996533 Tokens per Sec: 2742.8569829519865
Epoch Step: 65 / 67 Loss (mean): 0.7805021365929861 Loss (std): 0.8866888689804984 Loss ratio: 1.1360492526657697 Tokens per Sec: 2840.6333830560866
Mean loss per sample: 1.3757772237935488 Std loss per sample: 4.514712199818689 ratio: 3.281572133728079
Epoch ended with duration 0:00:11.424118
Train perplexity: 1.204593620511405
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog extension api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 87.8043654859066 Loss (std): 41.24966110263686 Loss ratio: 0.46979054941474185 Tokens per Sec: 4402.432939728824
Mean loss per sample: 92.51873047955212 Std loss per sample: 47.662923097243265 ratio: 0.5151705265538357
Epoch ended with duration 0:00:01.022046
b'BLEU = 2.53, 8.0/2.8/1.7/1.3 (BP=0.963, ratio=0.964, hyp_len=3000, ref_len=3113)\n'
Validation perplexity: 278715.0316549537
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.53
Epoch 335 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.951780175571912 Loss (std): 0.9576535775635949 Loss ratio: 1.006170964832456 Tokens per Sec: 2891.8189668617256
Epoch Step: 10 / 67 Loss (mean): 0.8032372030429542 Loss (std): 0.9896577880806424 Loss ratio: 1.2320865920197164 Tokens per Sec: 2157.1907372446854
Epoch Step: 15 / 67 Loss (mean): 0.7565328667405993 Loss (std): 0.6455357803201375 Loss ratio: 0.85328187141601 Tokens per Sec: 2553.4161568386794
Epoch Step: 20 / 67 Loss (mean): 0.748274758210755 Loss (std): 0.8080347962442817 Loss ratio: 1.0798637631134618 Tokens per Sec: 3066.850489698683
Epoch Step: 25 / 67 Loss (mean): 2.8339332658797503 Loss (std): 9.1562629414189 Loss ratio: 3.23093809288289 Tokens per Sec: 2787.329155751966
Epoch Step: 30 / 67 Loss (mean): 0.8402488377032569 Loss (std): 1.025592900676484 Loss ratio: 1.2205823497237414 Tokens per Sec: 2617.864439167966
Epoch Step: 35 / 67 Loss (mean): 1.3094139014719985 Loss (std): 1.3897968739607933 Loss ratio: 1.061388513134335 Tokens per Sec: 2957.126992769981
Epoch Step: 40 / 67 Loss (mean): 1.0137363998946967 Loss (std): 0.9620231371648362 Loss ratio: 0.9489874658390167 Tokens per Sec: 2406.8794367248356
Epoch Step: 45 / 67 Loss (mean): 0.9261460156994872 Loss (std): 0.8758732731547715 Loss ratio: 0.9457183406368742 Tokens per Sec: 2906.930401701892
Epoch Step: 50 / 67 Loss (mean): 0.8840664685558295 Loss (std): 0.8515372831659124 Loss ratio: 0.963205045608103 Tokens per Sec: 3019.691945638744
Epoch Step: 55 / 67 Loss (mean): 0.969920974879642 Loss (std): 1.0175740732328928 Loss ratio: 1.0491309081744151 Tokens per Sec: 3430.9118722708813
Epoch Step: 60 / 67 Loss (mean): 0.9069727208698168 Loss (std): 0.93311414450956 Loss ratio: 1.0288227231516651 Tokens per Sec: 2798.769590203738
Epoch Step: 65 / 67 Loss (mean): 1.074700164317619 Loss (std): 1.308902082102385 Loss ratio: 1.217923031521515 Tokens per Sec: 2591.4700885676934
Mean loss per sample: 1.346946254527981 Std loss per sample: 4.177157325235179 ratio: 3.101205642907413
Epoch ended with duration 0:00:11.424536
Train perplexity: 1.1999038682124297
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow call log[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test java method_1 extension inside headsetclientservice.stop[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 89.1360011100769 Loss (std): 41.1564024260479 Loss ratio: 0.46172592345961916 Tokens per Sec: 4422.0302124900045
Mean loss per sample: 93.26803464698988 Std loss per sample: 48.38242670316836 ratio: 0.5187460729315352
Epoch ended with duration 0:00:01.019516
b'BLEU = 2.44, 8.2/2.8/1.6/1.2 (BP=0.948, ratio=0.949, hyp_len=2954, ref_len=3113)\n'
Validation perplexity: 308503.7515601008
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.44
Model saved checkpoint_commit_msg_generator!
Epoch 336 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.1755908667109907 Loss (std): 1.4779914831384904 Loss ratio: 1.2572328732644384 Tokens per Sec: 3017.5571366457407
Epoch Step: 10 / 67 Loss (mean): 2.989060284846346 Loss (std): 11.34064534753522 Loss ratio: 3.7940503927033347 Tokens per Sec: 2381.8652945129825
Epoch Step: 15 / 67 Loss (mean): 1.1944861836382188 Loss (std): 1.3129955694426452 Loss ratio: 1.0992136932412775 Tokens per Sec: 3139.1205927166093
Epoch Step: 20 / 67 Loss (mean): 1.0529351701261476 Loss (std): 1.2223248208434063 Loss ratio: 1.160873770316709 Tokens per Sec: 2600.3823137495006
Epoch Step: 25 / 67 Loss (mean): 3.0339076752134133 Loss (std): 7.847668537323302 Loss ratio: 2.586653707836141 Tokens per Sec: 2736.2482743059822
Epoch Step: 30 / 67 Loss (mean): 6.176982000921271 Loss (std): 16.46874544308774 Loss ratio: 2.6661475524182356 Tokens per Sec: 2981.3959482646
Epoch Step: 35 / 67 Loss (mean): 0.9613299706252292 Loss (std): 0.9369366603072887 Loss ratio: 0.9746254552928632 Tokens per Sec: 3135.474056350137
Epoch Step: 40 / 67 Loss (mean): 0.8490010633977363 Loss (std): 0.8278471498270816 Loss ratio: 0.975083760807088 Tokens per Sec: 2516.627423775005
Epoch Step: 45 / 67 Loss (mean): 1.1972779837815324 Loss (std): 1.1509578556763278 Loss ratio: 0.9613121357507092 Tokens per Sec: 2771.1525827850182
Epoch Step: 50 / 67 Loss (mean): 0.9698479597573169 Loss (std): 0.8355725631188681 Loss ratio: 0.861550055049816 Tokens per Sec: 2791.255717281578
Epoch Step: 55 / 67 Loss (mean): 0.8781137750847847 Loss (std): 1.1362058387311484 Loss ratio: 1.2939164274258699 Tokens per Sec: 2354.461751622121
Epoch Step: 60 / 67 Loss (mean): 1.0379110237117857 Loss (std): 0.9434144867432525 Loss ratio: 0.9089550695486459 Tokens per Sec: 2419.061115429026
Epoch Step: 65 / 67 Loss (mean): 1.024033597772359 Loss (std): 1.1746428440441898 Loss ratio: 1.1470745164997127 Tokens per Sec: 3182.928476569911
Mean loss per sample: 1.7482565192825983 Std loss per sample: 6.006720989721816 ratio: 3.4358350296252236
Epoch ended with duration 0:00:11.506815
Train perplexity: 1.2668564655113566
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog extension api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 103.57427930831909 Loss (std): 39.21831517714537 Loss ratio: 0.378649172739118 Tokens per Sec: 4322.763480797277
Mean loss per sample: 94.80810809184294 Std loss per sample: 47.78875555522511 ratio: 0.504057685751212
Epoch ended with duration 0:00:01.030716
b'BLEU = 2.23, 8.0/2.5/1.5/1.1 (BP=0.946, ratio=0.947, hyp_len=2949, ref_len=3113)\n'
Validation perplexity: 380102.72343480156
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.23
Epoch 337 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.9391628859448247 Loss (std): 1.20485938399065 Loss ratio: 1.2829077916324676 Tokens per Sec: 2614.747019678244
Epoch Step: 10 / 67 Loss (mean): 1.2904957942664623 Loss (std): 1.1685635295119126 Loss ratio: 0.9055151785102423 Tokens per Sec: 2936.9364842756922
Epoch Step: 15 / 67 Loss (mean): 0.7783381633344106 Loss (std): 0.8847166281114399 Loss ratio: 1.1366738389407793 Tokens per Sec: 2756.098589310912
Epoch Step: 20 / 67 Loss (mean): 0.6817982851498527 Loss (std): 0.8596336443075643 Loss ratio: 1.2608328049968989 Tokens per Sec: 2030.9658399105156
Epoch Step: 25 / 67 Loss (mean): 1.2174435892666224 Loss (std): 1.2753888183897624 Loss ratio: 1.0475958226188087 Tokens per Sec: 2496.436170847862
Epoch Step: 30 / 67 Loss (mean): 0.871052791189868 Loss (std): 0.9224690491885814 Loss ratio: 1.0590277173998583 Tokens per Sec: 3059.5657536796493
Epoch Step: 35 / 67 Loss (mean): 0.889077132800594 Loss (std): 1.040914993041859 Loss ratio: 1.1707814256373636 Tokens per Sec: 2795.016059517021
Epoch Step: 40 / 67 Loss (mean): 1.0603209763066843 Loss (std): 1.0151536228600122 Loss ratio: 0.9574021881524977 Tokens per Sec: 2581.8876043858218
Epoch Step: 45 / 67 Loss (mean): 0.7893915440363344 Loss (std): 0.8347556887778859 Loss ratio: 1.0574672291390335 Tokens per Sec: 2857.9208423421383
Epoch Step: 50 / 67 Loss (mean): 1.1125696282251738 Loss (std): 1.0900475730001706 Loss ratio: 0.9797567229469211 Tokens per Sec: 3366.407488940241
Epoch Step: 55 / 67 Loss (mean): 0.8024293687776662 Loss (std): 0.7855965413533116 Loss ratio: 0.9790226678143699 Tokens per Sec: 2433.990151211739
Epoch Step: 60 / 67 Loss (mean): 1.103261703021417 Loss (std): 1.161316119779644 Loss ratio: 1.0526207123833249 Tokens per Sec: 2855.1998504961507
Epoch Step: 65 / 67 Loss (mean): 0.7625805499847047 Loss (std): 0.6958993873204418 Loss ratio: 0.9125585321241141 Tokens per Sec: 3631.8224510610107
Mean loss per sample: 1.458253599919851 Std loss per sample: 5.250561419463759 ratio: 3.600581832784327
Epoch ended with duration 0:00:11.429667
Train perplexity: 1.2181109971757182
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings from inactive ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog updating groups[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 89.07501170039177 Loss (std): 40.58343968446954 Loss ratio: 0.4556097036616055 Tokens per Sec: 4440.158459542438
Mean loss per sample: 93.81584394393397 Std loss per sample: 47.77457397302249 ratio: 0.5092377999772985
Epoch ended with duration 0:00:01.031155
b'BLEU = 2.47, 7.8/2.6/1.6/1.2 (BP=1.000, ratio=1.009, hyp_len=3141, ref_len=3113)\n'
Validation perplexity: 332278.0026297684
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.47
Epoch 338 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.4879972639027983 Loss (std): 1.5921766854275474 Loss ratio: 1.0700131808384525 Tokens per Sec: 2475.825080983744
Epoch Step: 10 / 67 Loss (mean): 0.9286998346215114 Loss (std): 0.8090464365321371 Loss ratio: 0.8711603107605391 Tokens per Sec: 3280.242274517933
Epoch Step: 15 / 67 Loss (mean): 1.0636852581083076 Loss (std): 1.2291342479805842 Loss ratio: 1.1555431821688649 Tokens per Sec: 3194.2235783746887
Epoch Step: 20 / 67 Loss (mean): 0.726089367759414 Loss (std): 0.6520552281084125 Loss ratio: 0.89803715225929 Tokens per Sec: 2570.9844305504475
Epoch Step: 25 / 67 Loss (mean): 1.322033074189676 Loss (std): 1.5861964683442498 Loss ratio: 1.19981602526585 Tokens per Sec: 2824.0423100863272
Epoch Step: 30 / 67 Loss (mean): 0.8456934789137449 Loss (std): 1.295192676328842 Loss ratio: 1.5315155060583634 Tokens per Sec: 2522.2966429920607
Epoch Step: 35 / 67 Loss (mean): 0.8411968675791286 Loss (std): 0.8377079481089779 Loss ratio: 0.9958524340679116 Tokens per Sec: 2520.0233127538036
Epoch Step: 40 / 67 Loss (mean): 2.6110293553410884 Loss (std): 8.849899467856387 Loss ratio: 3.3894293259296933 Tokens per Sec: 3212.4628707172874
Epoch Step: 45 / 67 Loss (mean): 0.9879122736747377 Loss (std): 0.9225190091233484 Loss ratio: 0.9338066078396354 Tokens per Sec: 2747.4660026823135
Epoch Step: 50 / 67 Loss (mean): 1.472796618076245 Loss (std): 4.886242441734907 Loss ratio: 3.3176627252969095 Tokens per Sec: 2266.6542834308343
Epoch Step: 55 / 67 Loss (mean): 0.9853342007554602 Loss (std): 1.0813359473406774 Loss ratio: 1.0974306448630446 Tokens per Sec: 2488.846282223191
Epoch Step: 60 / 67 Loss (mean): 0.833314125193283 Loss (std): 0.9735693846327025 Loss ratio: 1.1683101908381646 Tokens per Sec: 3054.9168291549927
Epoch Step: 65 / 67 Loss (mean): 1.0298866509110667 Loss (std): 0.9069759807626561 Loss ratio: 0.880656118768332 Tokens per Sec: 3141.8998226366575
Mean loss per sample: 1.2659659358174007 Std loss per sample: 3.9023993146033296 ratio: 3.082546855483638
Epoch ended with duration 0:00:11.422031
Train perplexity: 1.1868287450252633
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) return[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test java 7 for sslcontext.tls[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 88.96888932585716 Loss (std): 41.3369577964365 Loss ratio: 0.46462261257455845 Tokens per Sec: 4396.543141075142
Mean loss per sample: 94.9871398962912 Std loss per sample: 48.490426337181795 ratio: 0.510494645802838
Epoch ended with duration 0:00:01.037979
b'BLEU = 2.28, 8.7/2.5/1.5/1.1 (BP=0.933, ratio=0.935, hyp_len=2910, ref_len=3113)\n'
Validation perplexity: 389437.56502764754
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.28
Epoch 339 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.46239565108858405 Loss (std): 0.5733308454423975 Loss ratio: 1.239914008906976 Tokens per Sec: 2745.051140629025
Epoch Step: 10 / 67 Loss (mean): 0.8244589173991699 Loss (std): 0.7936612827026288 Loss ratio: 0.9626450341592581 Tokens per Sec: 3088.223925024296
Epoch Step: 15 / 67 Loss (mean): 1.22825543070212 Loss (std): 1.4186564976407519 Loss ratio: 1.155017484294607 Tokens per Sec: 3195.1114291492513
Epoch Step: 20 / 67 Loss (mean): 3.762859629379818 Loss (std): 10.999823355764587 Loss ratio: 2.9232616784000367 Tokens per Sec: 2319.086582405701
Epoch Step: 25 / 67 Loss (mean): 0.7657306172623066 Loss (std): 0.7142006655561474 Loss ratio: 0.9327048565846919 Tokens per Sec: 2760.4713567010667
Epoch Step: 30 / 67 Loss (mean): 0.7628079140558839 Loss (std): 0.7711413951187832 Loss ratio: 1.010924743843558 Tokens per Sec: 2627.8607843709615
Epoch Step: 35 / 67 Loss (mean): 0.8367202218905732 Loss (std): 1.041418073360512 Loss ratio: 1.2446431269551765 Tokens per Sec: 2407.8468849034207
Epoch Step: 40 / 67 Loss (mean): 0.9592930538055953 Loss (std): 1.3699486621091324 Loss ratio: 1.4280814988437915 Tokens per Sec: 2457.4402225899707
Epoch Step: 45 / 67 Loss (mean): 1.00392378817196 Loss (std): 1.7731271053898827 Loss ratio: 1.766196922794868 Tokens per Sec: 2231.6057781222225
Epoch Step: 50 / 67 Loss (mean): 0.9119381493364926 Loss (std): 1.0424237704378345 Loss ratio: 1.1430860428377523 Tokens per Sec: 3306.854048057685
Epoch Step: 55 / 67 Loss (mean): 3.7703608468873426 Loss (std): 12.318081581930025 Loss ratio: 3.2670829350722053 Tokens per Sec: 3277.0167797933286
Epoch Step: 60 / 67 Loss (mean): 0.827527480549179 Loss (std): 1.0061131040687756 Loss ratio: 1.215806275582631 Tokens per Sec: 2435.1408186568633
Epoch Step: 65 / 67 Loss (mean): 0.9791890404594596 Loss (std): 1.12627769885546 Loss ratio: 1.1502147719371763 Tokens per Sec: 3173.0360583308598
Mean loss per sample: 1.4599687909253665 Std loss per sample: 4.90942759740135 ratio: 3.362693523256498
Epoch ended with duration 0:00:11.500299
Train perplexity: 1.2183937107284442
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to android-changed ( ) and grow[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 89.60321512818336 Loss (std): 41.28666030001421 Loss ratio: 0.4607720854765188 Tokens per Sec: 4434.000292544114
Mean loss per sample: 93.39786551917186 Std loss per sample: 48.6308941571573 ratio: 0.5206852842603217
Epoch ended with duration 0:00:01.017662
b'BLEU = 2.58, 8.4/2.8/1.8/1.4 (BP=0.933, ratio=0.935, hyp_len=2910, ref_len=3113)\n'
Validation perplexity: 313979.7246331002
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.58
Epoch 340 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.1489556428277865 Loss (std): 1.371899094965786 Loss ratio: 1.1940400863424943 Tokens per Sec: 2789.956967546137
Epoch Step: 10 / 67 Loss (mean): 1.2282469025813043 Loss (std): 1.1139653468275523 Loss ratio: 0.9069555514338559 Tokens per Sec: 3039.9328867252007
Epoch Step: 15 / 67 Loss (mean): 0.7334350224409718 Loss (std): 0.773666433287936 Loss ratio: 1.0548534084356493 Tokens per Sec: 2897.791218161918
Epoch Step: 20 / 67 Loss (mean): 0.9657957278832328 Loss (std): 0.8948802620333459 Loss ratio: 0.9265730176656355 Tokens per Sec: 2838.99746762429
Epoch Step: 25 / 67 Loss (mean): 0.3846463128658278 Loss (std): 0.5499432212741772 Loss ratio: 1.4297374051938676 Tokens per Sec: 2198.9869542989095
Epoch Step: 30 / 67 Loss (mean): 0.8819770915361005 Loss (std): 1.117935779545087 Loss ratio: 1.2675338058928807 Tokens per Sec: 2931.096562767661
Epoch Step: 35 / 67 Loss (mean): 6.167769019339175 Loss (std): 16.52409473213753 Loss ratio: 2.6791040131895127 Tokens per Sec: 2817.9309226933365
Epoch Step: 40 / 67 Loss (mean): 1.3415900736581534 Loss (std): 1.0808116313534692 Loss ratio: 0.8056198779157542 Tokens per Sec: 2560.351970198556
Epoch Step: 45 / 67 Loss (mean): 0.9793128733435879 Loss (std): 1.0244096443182038 Loss ratio: 1.0460494007606025 Tokens per Sec: 2588.314821306358
Epoch Step: 50 / 67 Loss (mean): 1.216697461437434 Loss (std): 1.686370126656893 Loss ratio: 1.3860225570492906 Tokens per Sec: 2855.2421693316137
Epoch Step: 55 / 67 Loss (mean): 0.8411005450470839 Loss (std): 0.8487497764223086 Loss ratio: 1.0090943127076402 Tokens per Sec: 2825.784234094901
Epoch Step: 60 / 67 Loss (mean): 0.7693293720658403 Loss (std): 0.8034927273199295 Loss ratio: 1.0444066696197392 Tokens per Sec: 2733.8893828967452
Epoch Step: 65 / 67 Loss (mean): 5.6778764829505235 Loss (std): 12.925162652772382 Loss ratio: 2.2764078598018016 Tokens per Sec: 2998.7590110638903
Mean loss per sample: 1.363735125178484 Std loss per sample: 4.8767645226218335 ratio: 3.5760349884539115
Epoch ended with duration 0:00:11.415928
Train perplexity: 1.2026325831391427
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test java method_1 for sslcontext.tls[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 89.24443465471268 Loss (std): 41.90891121993408 Loss ratio: 0.46959691528194386 Tokens per Sec: 4414.378830924346
Mean loss per sample: 93.61285541927228 Std loss per sample: 48.93280552426553 ratio: 0.5227145919767728
Epoch ended with duration 0:00:01.021200
b'BLEU = 2.56, 8.2/2.9/1.9/1.4 (BP=0.905, ratio=0.909, hyp_len=2831, ref_len=3113)\n'
Validation perplexity: 323262.0824172161
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.56
Model saved checkpoint_commit_msg_generator!
Epoch 341 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.0230740945553407 Loss (std): 1.2152921223379536 Loss ratio: 1.1878828022384407 Tokens per Sec: 3474.913857103048
Epoch Step: 10 / 67 Loss (mean): 0.548691264615627 Loss (std): 0.4937352933460588 Loss ratio: 0.8998417237277027 Tokens per Sec: 2739.3921811733076
Epoch Step: 15 / 67 Loss (mean): 0.6690212593093747 Loss (std): 0.7780037787743976 Loss ratio: 1.1628984399950528 Tokens per Sec: 2826.5832553899254
Epoch Step: 20 / 67 Loss (mean): 0.8450592347217025 Loss (std): 0.8049484237719275 Loss ratio: 0.9525349119899454 Tokens per Sec: 2572.067493130261
Epoch Step: 25 / 67 Loss (mean): 0.8142092365087592 Loss (std): 0.8917732462901773 Loss ratio: 1.0952629942077348 Tokens per Sec: 2804.994284806659
Epoch Step: 30 / 67 Loss (mean): 1.09983887677663 Loss (std): 1.4341992960955814 Loss ratio: 1.3040085474145844 Tokens per Sec: 2593.793676868061
Epoch Step: 35 / 67 Loss (mean): 1.11033205606509 Loss (std): 0.8383407299060313 Loss ratio: 0.7550360500957075 Tokens per Sec: 3236.277603657732
Epoch Step: 40 / 67 Loss (mean): 0.9222340830601752 Loss (std): 1.0597969732347752 Loss ratio: 1.1491626613040977 Tokens per Sec: 2656.077815480633
Epoch Step: 45 / 67 Loss (mean): 0.8271639536105795 Loss (std): 0.8480671016227013 Loss ratio: 1.0252708642837727 Tokens per Sec: 3297.397867082414
Epoch Step: 50 / 67 Loss (mean): 0.8704254399272031 Loss (std): 0.9266679968487994 Loss ratio: 1.0646150196693471 Tokens per Sec: 3123.5151241788462
Epoch Step: 55 / 67 Loss (mean): 0.8148256160056917 Loss (std): 0.8972422532730768 Loss ratio: 1.1011463503950634 Tokens per Sec: 2744.0490615968424
Epoch Step: 60 / 67 Loss (mean): 5.599612090591108 Loss (std): 15.088777512713568 Loss ratio: 2.694611210313456 Tokens per Sec: 2421.867348542316
Epoch Step: 65 / 67 Loss (mean): 0.48854272711157265 Loss (std): 0.6143807116391532 Loss ratio: 1.2575782578354542 Tokens per Sec: 2254.553664056075
Mean loss per sample: 1.4228002213648872 Std loss per sample: 5.086680875309921 ratio: 3.575119541681183
Epoch ended with duration 0:00:11.408530
Train perplexity: 1.2122819151073927
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) return[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 89.30806869268417 Loss (std): 41.3721764172452 Loss ratio: 0.463252391669223 Tokens per Sec: 4412.515373469104
Mean loss per sample: 94.58076063763411 Std loss per sample: 47.79780791226409 ratio: 0.5053650191648503
Epoch ended with duration 0:00:01.033660
b'BLEU = 2.17, 7.9/2.3/1.4/1.0 (BP=0.954, ratio=0.955, hyp_len=2972, ref_len=3113)\n'
Validation perplexity: 368570.4555200533
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.17
Epoch 342 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.8693968963198131 Loss (std): 1.07361933631734 Loss ratio: 1.2349012756567312 Tokens per Sec: 2840.205014588979
Epoch Step: 10 / 67 Loss (mean): 0.7577491134870797 Loss (std): 0.8741629357103582 Loss ratio: 1.1536310899626852 Tokens per Sec: 2889.6264420050493
Epoch Step: 15 / 67 Loss (mean): 0.6736889046733268 Loss (std): 0.7916791245807312 Loss ratio: 1.175140512317949 Tokens per Sec: 2296.290078369589
Epoch Step: 20 / 67 Loss (mean): 3.0167171477951342 Loss (std): 9.357826136038344 Loss ratio: 3.1019899041173997 Tokens per Sec: 2883.7602804939393
Epoch Step: 25 / 67 Loss (mean): 1.1182914229866583 Loss (std): 1.1793966283937436 Loss ratio: 1.0546415756671812 Tokens per Sec: 3008.416606944361
Epoch Step: 30 / 67 Loss (mean): 1.0166866842191666 Loss (std): 0.8830426514414408 Loss ratio: 0.8685494411876095 Tokens per Sec: 2733.9866631674577
Epoch Step: 35 / 67 Loss (mean): 1.6561634432873689 Loss (std): 1.3997784166323362 Loss ratio: 0.8451934030459419 Tokens per Sec: 3214.364911089317
Epoch Step: 40 / 67 Loss (mean): 0.8731329286820255 Loss (std): 0.9134968332041725 Loss ratio: 1.046228819457165 Tokens per Sec: 3398.157087996033
Epoch Step: 45 / 67 Loss (mean): 0.7754238309862558 Loss (std): 0.8229669244480546 Loss ratio: 1.0613123966042275 Tokens per Sec: 2646.2908299525266
Epoch Step: 50 / 67 Loss (mean): 0.7893254175723996 Loss (std): 0.8337395965467845 Loss ratio: 1.0562685275117358 Tokens per Sec: 2391.801952754875
Epoch Step: 55 / 67 Loss (mean): 5.501502875180449 Loss (std): 13.841864932502824 Loss ratio: 2.5160152137608054 Tokens per Sec: 2832.8678521222178
Epoch Step: 60 / 67 Loss (mean): 1.2589552395511419 Loss (std): 1.4176782193457924 Loss ratio: 1.1260751572480372 Tokens per Sec: 2931.937712627226
Epoch Step: 65 / 67 Loss (mean): 3.011642068711808 Loss (std): 9.178505560514488 Loss ratio: 3.047674773795572 Tokens per Sec: 2170.994645248292
Mean loss per sample: 1.1953604983005564 Std loss per sample: 3.7649526066727326 ratio: 3.1496377971543854
Epoch ended with duration 0:00:11.444216
Train perplexity: 1.1755450756649926
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level ( ) return ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 89.24596726894379 Loss (std): 41.32207375929521 Loss ratio: 0.4630133441746521 Tokens per Sec: 4400.699577941017
Mean loss per sample: 93.58624273563018 Std loss per sample: 48.5271785174923 ratio: 0.5185289749752612
Epoch ended with duration 0:00:01.023160
b'BLEU = 2.54, 7.9/2.8/1.8/1.3 (BP=0.949, ratio=0.950, hyp_len=2958, ref_len=3113)\n'
Validation perplexity: 322098.3390114863
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.54
Epoch 343 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.7947045812325086 Loss (std): 0.8378042443657977 Loss ratio: 1.0542335657187802 Tokens per Sec: 2520.3883455842542
Epoch Step: 10 / 67 Loss (mean): 0.9568897181598004 Loss (std): 0.9157046096187359 Loss ratio: 0.9569593990201214 Tokens per Sec: 2852.359129178589
Epoch Step: 15 / 67 Loss (mean): 0.8070334729200113 Loss (std): 0.9302586508819526 Loss ratio: 1.152689054539569 Tokens per Sec: 2358.07597259051
Epoch Step: 20 / 67 Loss (mean): 0.7562745012692176 Loss (std): 0.8903965529883187 Loss ratio: 1.177345727634623 Tokens per Sec: 3237.640152508703
Epoch Step: 25 / 67 Loss (mean): 0.843301376895397 Loss (std): 1.0120350013767878 Loss ratio: 1.20008697851601 Tokens per Sec: 2664.401503533303
Epoch Step: 30 / 67 Loss (mean): 0.6925667369359871 Loss (std): 0.797064197224415 Loss ratio: 1.1508843187455686 Tokens per Sec: 2670.0926463002115
Epoch Step: 35 / 67 Loss (mean): 0.6749960314191412 Loss (std): 0.8008214639104692 Loss ratio: 1.1864091441053173 Tokens per Sec: 3098.342358100426
Epoch Step: 40 / 67 Loss (mean): 0.6232959446351742 Loss (std): 0.7423998657485024 Loss ratio: 1.1910872710443219 Tokens per Sec: 3176.762122106628
Epoch Step: 45 / 67 Loss (mean): 5.867586020991439 Loss (std): 16.01254638236432 Loss ratio: 2.728983661267006 Tokens per Sec: 2653.0822450514584
Epoch Step: 50 / 67 Loss (mean): 0.7887494329042966 Loss (std): 1.0679334893884713 Loss ratio: 1.353957853834742 Tokens per Sec: 2491.308380815626
Epoch Step: 55 / 67 Loss (mean): 3.9103616069769487 Loss (std): 10.721227564843295 Loss ratio: 2.7417483707169836 Tokens per Sec: 2503.134613378865
Epoch Step: 60 / 67 Loss (mean): 1.11592485307483 Loss (std): 1.3643011670649523 Loss ratio: 1.2225744083983288 Tokens per Sec: 3238.6123426633694
Epoch Step: 65 / 67 Loss (mean): 0.8560294992930721 Loss (std): 0.9882490794751312 Loss ratio: 1.1544568035228329 Tokens per Sec: 2606.9566719571344
Mean loss per sample: 1.3984318455015132 Std loss per sample: 5.075336382726755 ratio: 3.6293054960476896
Epoch ended with duration 0:00:11.433491
Train perplexity: 1.2082915618343182
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print nested within else clause ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test java for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 89.27407556772232 Loss (std): 40.8169909704377 Loss ratio: 0.4572098978440206 Tokens per Sec: 4297.549703527342
Mean loss per sample: 95.23265717630504 Std loss per sample: 48.19033295899755 ratio: 0.5060273900557282
Epoch ended with duration 0:00:01.038149
b'BLEU = 2.40, 8.0/2.7/1.6/1.2 (BP=0.948, ratio=0.950, hyp_len=2956, ref_len=3113)\n'
Validation perplexity: 402612.8967522294
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.4
Epoch 344 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.8948113498918246 Loss (std): 1.1728510381455912 Loss ratio: 1.3107243647360747 Tokens per Sec: 2598.033772355637
Epoch Step: 10 / 67 Loss (mean): 0.864376949990401 Loss (std): 0.8512877741171389 Loss ratio: 0.9848570975042688 Tokens per Sec: 2765.4983361660084
Epoch Step: 15 / 67 Loss (mean): 1.3528732924314681 Loss (std): 1.8953079179625032 Loss ratio: 1.4009500583429642 Tokens per Sec: 3387.3382068350643
Epoch Step: 20 / 67 Loss (mean): 1.2688202800927684 Loss (std): 1.238162881391111 Loss ratio: 0.975837871460081 Tokens per Sec: 3094.5533919180134
Epoch Step: 25 / 67 Loss (mean): 0.7047316121243057 Loss (std): 0.9907723904342095 Loss ratio: 1.4058861180466669 Tokens per Sec: 2828.192908663385
Epoch Step: 30 / 67 Loss (mean): 0.728071569261374 Loss (std): 0.7282835886540651 Loss ratio: 1.0002912068011476 Tokens per Sec: 2674.1751872631808
Epoch Step: 35 / 67 Loss (mean): 7.183204847824527 Loss (std): 16.00727262016394 Loss ratio: 2.228430479051677 Tokens per Sec: 2641.741540914036
Epoch Step: 40 / 67 Loss (mean): 0.8939647984225303 Loss (std): 1.0805851946287635 Loss ratio: 1.2087558666018385 Tokens per Sec: 2845.001164407344
Epoch Step: 45 / 67 Loss (mean): 0.7677612960687838 Loss (std): 0.8893856541763389 Loss ratio: 1.1584142867455234 Tokens per Sec: 2522.2757524619515
Epoch Step: 50 / 67 Loss (mean): 0.5815872757673441 Loss (std): 0.6960453060055993 Loss ratio: 1.1968028445726218 Tokens per Sec: 2690.7244820773717
Epoch Step: 55 / 67 Loss (mean): 0.6540498429676518 Loss (std): 0.7245116370987266 Loss ratio: 1.1077315358893216 Tokens per Sec: 2559.846760133691
Epoch Step: 60 / 67 Loss (mean): 0.7542328351992182 Loss (std): 1.0294246613631668 Loss ratio: 1.3648632270050416 Tokens per Sec: 2445.9842150723885
Epoch Step: 65 / 67 Loss (mean): 0.8875800931127742 Loss (std): 0.7929121660916769 Loss ratio: 0.8933415386896595 Tokens per Sec: 2582.685638287399
Mean loss per sample: 1.291439836164157 Std loss per sample: 4.3010990964031866 ratio: 3.3304680372709727
Epoch ended with duration 0:00:11.424746
Train perplexity: 1.190926339914216
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 89.54017156362534 Loss (std): 40.60163851610836 Loss ratio: 0.45344606568301804 Tokens per Sec: 4434.932071168773
Mean loss per sample: 93.86301012215067 Std loss per sample: 48.365164907766676 ratio: 0.5152739598359952
Epoch ended with duration 0:00:01.022965
b'BLEU = 2.57, 8.4/2.7/1.7/1.3 (BP=0.966, ratio=0.966, hyp_len=3008, ref_len=3113)\n'
Validation perplexity: 334408.68000331975
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.57
Epoch 345 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.8517820868182753 Loss (std): 1.0318310554771077 Loss ratio: 1.2113791443200956 Tokens per Sec: 2837.4313860587677
Epoch Step: 10 / 67 Loss (mean): 4.941024945728714 Loss (std): 12.296800879007648 Loss ratio: 2.4887145914204827 Tokens per Sec: 2677.3310872167663
Epoch Step: 15 / 67 Loss (mean): 5.955364764173282 Loss (std): 20.785509864419044 Loss ratio: 3.4902160803754674 Tokens per Sec: 2425.6184433223616
Epoch Step: 20 / 67 Loss (mean): 0.8152037808031309 Loss (std): 1.0883658435340768 Loss ratio: 1.3350843913675539 Tokens per Sec: 2663.871506590811
Epoch Step: 25 / 67 Loss (mean): 0.9281911837751977 Loss (std): 0.8669819493486799 Loss ratio: 0.9340553589643421 Tokens per Sec: 3426.068302119564
Epoch Step: 30 / 67 Loss (mean): 0.765024896216346 Loss (std): 0.9525997380486934 Loss ratio: 1.245187892263446 Tokens per Sec: 2679.815813827408
Epoch Step: 35 / 67 Loss (mean): 1.075216233228275 Loss (std): 1.0882335030824368 Loss ratio: 1.0121066530172058 Tokens per Sec: 2872.382107739161
Epoch Step: 40 / 67 Loss (mean): 0.8112055175879505 Loss (std): 0.907014136581055 Loss ratio: 1.1181064686024118 Tokens per Sec: 2340.329832256004
Epoch Step: 45 / 67 Loss (mean): 0.6474882688635262 Loss (std): 0.7197821758129145 Loss ratio: 1.1116528444233884 Tokens per Sec: 2424.590176755592
Epoch Step: 50 / 67 Loss (mean): 1.0061411469941959 Loss (std): 0.904346094862067 Loss ratio: 0.8988262706119938 Tokens per Sec: 2770.6229100517353
Epoch Step: 55 / 67 Loss (mean): 6.2277627056173515 Loss (std): 18.34059697719498 Loss ratio: 2.9449736356608494 Tokens per Sec: 2739.154990293206
Epoch Step: 60 / 67 Loss (mean): 2.3387805510719772 Loss (std): 5.337998204835787 Loss ratio: 2.2823852380631102 Tokens per Sec: 2660.2229194097854
Epoch Step: 65 / 67 Loss (mean): 2.210770821708138 Loss (std): 2.0230047088869973 Loss ratio: 0.9150675814166642 Tokens per Sec: 3262.2990140881416
Mean loss per sample: 2.2543241005640633 Std loss per sample: 9.073342825779918 ratio: 4.024861741712135
Epoch ended with duration 0:00:11.559355
Train perplexity: 1.35663776528067
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings from inactive ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 90.10659018158913 Loss (std): 41.87524576820126 Loss ratio: 0.46473011223498 Tokens per Sec: 4297.243245751048
Mean loss per sample: 95.03220047129959 Std loss per sample: 48.780120256503565 ratio: 0.5133009655104799
Epoch ended with duration 0:00:01.035731
b'BLEU = 2.71, 8.1/2.9/2.0/1.6 (BP=0.935, ratio=0.937, hyp_len=2916, ref_len=3113)\n'
Validation perplexity: 391822.9471430755
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.71
Model saved checkpoint_commit_msg_generator!
Epoch 346 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.9403120235874667 Loss (std): 1.0452745259212222 Loss ratio: 1.1116251836632949 Tokens per Sec: 2588.1975934364323
Epoch Step: 10 / 67 Loss (mean): 1.1227610401983839 Loss (std): 1.244681749963986 Loss ratio: 1.1085900787437901 Tokens per Sec: 2368.7274898303135
Epoch Step: 15 / 67 Loss (mean): 1.4103345213225111 Loss (std): 2.9116606164953303 Loss ratio: 2.064517724323292 Tokens per Sec: 2446.1460237917713
Epoch Step: 20 / 67 Loss (mean): 0.8369373107561842 Loss (std): 0.9433789076148578 Loss ratio: 1.1271798920787772 Tokens per Sec: 2965.58133801343
Epoch Step: 25 / 67 Loss (mean): 0.8553632269031368 Loss (std): 0.8855905566706559 Loss ratio: 1.035338589287919 Tokens per Sec: 3103.351052314215
Epoch Step: 30 / 67 Loss (mean): 1.162678234744817 Loss (std): 1.1551216747165234 Loss ratio: 0.9935007297784738 Tokens per Sec: 2389.27928082171
Epoch Step: 35 / 67 Loss (mean): 0.9102548197843134 Loss (std): 0.9693649946642177 Loss ratio: 1.0649380520653662 Tokens per Sec: 2789.4930949897057
Epoch Step: 40 / 67 Loss (mean): 1.4316472564969445 Loss (std): 1.4826681471353422 Loss ratio: 1.0356378922299891 Tokens per Sec: 3041.1512878631775
Epoch Step: 45 / 67 Loss (mean): 0.7988197434970061 Loss (std): 0.7881510181491247 Loss ratio: 0.9866443895074791 Tokens per Sec: 2855.888485415364
Epoch Step: 50 / 67 Loss (mean): 1.0115959922259208 Loss (std): 1.0616783155787295 Loss ratio: 1.049508226344993 Tokens per Sec: 2730.7950188673976
Epoch Step: 55 / 67 Loss (mean): 0.9079006367537659 Loss (std): 1.0649624576568595 Loss ratio: 1.172994504624068 Tokens per Sec: 2685.9027005852504
Epoch Step: 60 / 67 Loss (mean): 6.79975786615978 Loss (std): 16.607791720354914 Loss ratio: 2.4424092809255136 Tokens per Sec: 2692.4041003700786
Epoch Step: 65 / 67 Loss (mean): 1.3344410392455757 Loss (std): 1.318015567161911 Loss ratio: 0.9876911219000347 Tokens per Sec: 3571.660676692996
Mean loss per sample: 1.5557927884782792 Std loss per sample: 5.258469566979564 ratio: 3.3799292591675223
Epoch ended with duration 0:00:11.461302
Train perplexity: 1.2342929798450084
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings from inactive ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog updating[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 88.93567630648613 Loss (std): 41.67039486270254 Loss ratio: 0.46854531941827143 Tokens per Sec: 4369.0056043940685
Mean loss per sample: 93.80922124143996 Std loss per sample: 48.75025776981782 ratio: 0.5196744746910076
Epoch ended with duration 0:00:01.025224
b'BLEU = 2.61, 8.8/2.9/1.9/1.4 (BP=0.905, ratio=0.909, hyp_len=2830, ref_len=3113)\n'
Validation perplexity: 331979.9186307823
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.61
Epoch 347 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.8174324803985655 Loss (std): 0.8469538419666006 Loss ratio: 1.0361147400867177 Tokens per Sec: 2400.3008089631458
Epoch Step: 10 / 67 Loss (mean): 0.7894062240375206 Loss (std): 0.7931339666624764 Loss ratio: 1.0047222108357465 Tokens per Sec: 3197.9661701811424
Epoch Step: 15 / 67 Loss (mean): 1.1741088127018884 Loss (std): 1.1506290827884307 Loss ratio: 0.9800020835722836 Tokens per Sec: 2615.770966863499
Epoch Step: 20 / 67 Loss (mean): 1.3840347243240103 Loss (std): 1.4177686317607996 Loss ratio: 1.0243735990462708 Tokens per Sec: 2772.522938319002
Epoch Step: 25 / 67 Loss (mean): 1.2031047095078975 Loss (std): 1.1455436439510824 Loss ratio: 0.9521562295435124 Tokens per Sec: 2551.034552065044
Epoch Step: 30 / 67 Loss (mean): 1.029589661386126 Loss (std): 1.22063898782412 Loss ratio: 1.1855587071268627 Tokens per Sec: 3060.5889731713164
Epoch Step: 35 / 67 Loss (mean): 1.1372213619179092 Loss (std): 1.0860665603317217 Loss ratio: 0.9550177271556739 Tokens per Sec: 3431.993243915112
Epoch Step: 40 / 67 Loss (mean): 0.9508067248971201 Loss (std): 1.034838694424515 Loss ratio: 1.088379654168398 Tokens per Sec: 2700.0584343949586
Epoch Step: 45 / 67 Loss (mean): 0.4723235490022316 Loss (std): 0.48807735329663043 Loss ratio: 1.0333538404504248 Tokens per Sec: 2550.5625245086107
Epoch Step: 50 / 67 Loss (mean): 0.8232835831731791 Loss (std): 1.031947238531853 Loss ratio: 1.2534529530571015 Tokens per Sec: 2227.976777158925
Epoch Step: 55 / 67 Loss (mean): 0.9394012519551325 Loss (std): 0.9500673993051746 Loss ratio: 1.0113541975038283 Tokens per Sec: 3646.3795929971625
Epoch Step: 60 / 67 Loss (mean): 0.8462448079953901 Loss (std): 0.851799595652529 Loss ratio: 1.006564043412328 Tokens per Sec: 2229.8395286413843
Epoch Step: 65 / 67 Loss (mean): 1.0095888828800526 Loss (std): 1.167760957374577 Loss ratio: 1.1566697862632038 Tokens per Sec: 3151.4642468193783
Mean loss per sample: 1.0992323498160037 Std loss per sample: 3.416236453374995 ratio: 3.107838350960855
Epoch ended with duration 0:00:11.364601
Train perplexity: 1.1603548031811985
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test java method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 104.53527587652206 Loss (std): 41.27232623785293 Loss ratio: 0.39481721258003033 Tokens per Sec: 4329.903506414077
Mean loss per sample: 96.2866238900384 Std loss per sample: 49.267951649149445 ratio: 0.5116801239745887
Epoch ended with duration 0:00:01.030764
b'BLEU = 2.58, 8.3/2.9/1.8/1.3 (BP=0.944, ratio=0.945, hyp_len=2943, ref_len=3113)\n'
Validation perplexity: 464428.17347986164
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.58
Epoch 348 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.7053644555999199 Loss (std): 0.8805237929621718 Loss ratio: 1.2483245873415567 Tokens per Sec: 2558.869881136809
Epoch Step: 10 / 67 Loss (mean): 0.6354480123263784 Loss (std): 0.7127729912150357 Loss ratio: 1.121685767188995 Tokens per Sec: 2255.7693652235625
Epoch Step: 15 / 67 Loss (mean): 0.8123138601658866 Loss (std): 0.8276626771362203 Loss ratio: 1.0188951804505704 Tokens per Sec: 2528.4385831299915
Epoch Step: 20 / 67 Loss (mean): 5.096226276946254 Loss (std): 12.556244181039753 Loss ratio: 2.463831764660903 Tokens per Sec: 2708.344937028632
Epoch Step: 25 / 67 Loss (mean): 1.2576717643532902 Loss (std): 1.2208191383230635 Loss ratio: 0.9706977392076725 Tokens per Sec: 2573.8718475729224
Epoch Step: 30 / 67 Loss (mean): 0.9189394181303214 Loss (std): 0.780390635415303 Loss ratio: 0.8492296880713742 Tokens per Sec: 3744.2334142534437
Epoch Step: 35 / 67 Loss (mean): 0.9362100039434154 Loss (std): 1.252415515310519 Loss ratio: 1.3377506222270779 Tokens per Sec: 2556.1877386859505
Epoch Step: 40 / 67 Loss (mean): 0.7176783614268061 Loss (std): 0.7293928948799843 Loss ratio: 1.0163228182467263 Tokens per Sec: 2554.706741093321
Epoch Step: 45 / 67 Loss (mean): 0.9623942931502825 Loss (std): 1.1089754473639468 Loss ratio: 1.152308835637261 Tokens per Sec: 3223.755115913133
Epoch Step: 50 / 67 Loss (mean): 0.7280598874203861 Loss (std): 0.9184828798980541 Loss ratio: 1.261548528861221 Tokens per Sec: 2977.122160175368
Epoch Step: 55 / 67 Loss (mean): 0.7197261896653799 Loss (std): 0.80568817550939 Loss ratio: 1.1194370679827228 Tokens per Sec: 3265.7798057913956
Epoch Step: 60 / 67 Loss (mean): 0.5205818733884371 Loss (std): 0.5528758510967711 Loss ratio: 1.0620343875942786 Tokens per Sec: 2528.465973597658
Epoch Step: 65 / 67 Loss (mean): 0.9329995782463811 Loss (std): 0.8471529903219905 Loss ratio: 0.9079886101494885 Tokens per Sec: 2787.7670602882727
Mean loss per sample: 1.24385801036125 Std loss per sample: 4.165645469604361 ratio: 3.348971856035678
Epoch ended with duration 0:00:11.380780
Train perplexity: 1.183284011765044
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow call log codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 88.67208659648895 Loss (std): 40.82743571189298 Loss ratio: 0.4604316564431628 Tokens per Sec: 4319.351489430053
Mean loss per sample: 96.47272102950049 Std loss per sample: 49.098209091597596 ratio: 0.508933598717339
Epoch ended with duration 0:00:01.051106
b'BLEU = 2.68, 8.6/3.0/1.9/1.4 (BP=0.931, ratio=0.933, hyp_len=2905, ref_len=3113)\n'
Validation perplexity: 476289.76075382106
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.68
Epoch 349 / 1000
Epoch Step: 5 / 67 Loss (mean): 17.747280272829812 Loss (std): 33.00178651126015 Loss ratio: 1.8595405044560103 Tokens per Sec: 2866.8342251507033
Epoch Step: 10 / 67 Loss (mean): 0.6201527049124707 Loss (std): 0.5779303759248929 Loss ratio: 0.9319162382859605 Tokens per Sec: 3047.0396356353403
Epoch Step: 15 / 67 Loss (mean): 1.0569188325898722 Loss (std): 1.1292146660349245 Loss ratio: 1.0684024460685393 Tokens per Sec: 3222.1735477141065
Epoch Step: 20 / 67 Loss (mean): 0.9542876132181846 Loss (std): 0.8515434479004754 Loss ratio: 0.8923341727435604 Tokens per Sec: 3153.6923928284577
Epoch Step: 25 / 67 Loss (mean): 0.6989637939841487 Loss (std): 0.7991258931618991 Loss ratio: 1.1433008405296912 Tokens per Sec: 2820.043287832168
Epoch Step: 30 / 67 Loss (mean): 0.7165126426552888 Loss (std): 0.7333000773703773 Loss ratio: 1.0234293628830844 Tokens per Sec: 2018.331885226806
Epoch Step: 35 / 67 Loss (mean): 0.7708716880879365 Loss (std): 0.770930772136884 Loss ratio: 1.00007664576331 Tokens per Sec: 2920.2333931035864
Epoch Step: 40 / 67 Loss (mean): 0.9277593086007982 Loss (std): 0.9098951856326513 Loss ratio: 0.9807448733712101 Tokens per Sec: 3048.186046511628
Epoch Step: 45 / 67 Loss (mean): 0.9239324262889568 Loss (std): 1.9441335207466424 Loss ratio: 2.104194490234961 Tokens per Sec: 2178.536881213544
Epoch Step: 50 / 67 Loss (mean): 0.6419211716274731 Loss (std): 0.7491923914907245 Loss ratio: 1.1671096461755341 Tokens per Sec: 2923.75860610518
Epoch Step: 55 / 67 Loss (mean): 0.7306422880792525 Loss (std): 0.7105254149974182 Loss ratio: 0.9724668645518473 Tokens per Sec: 2887.6754331573284
Epoch Step: 60 / 67 Loss (mean): 0.6545626793231349 Loss (std): 0.9700162451493376 Loss ratio: 1.4819302654902422 Tokens per Sec: 2415.6640098805565
Epoch Step: 65 / 67 Loss (mean): 0.8057040843705181 Loss (std): 1.0443469243856718 Loss ratio: 1.2961916721591413 Tokens per Sec: 2950.231228675801
Mean loss per sample: 1.3195322684793749 Std loss per sample: 5.4371726015939155 ratio: 4.120530229897066
Epoch ended with duration 0:00:11.393270
Train perplexity: 1.1954615430076594
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use command[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 88.85278731584549 Loss (std): 40.25358414345919 Loss ratio: 0.4530368192093913 Tokens per Sec: 4412.429735093174
Mean loss per sample: 93.8479210955442 Std loss per sample: 48.29660083824713 ratio: 0.5146262194671055
Epoch ended with duration 0:00:01.020667
b'BLEU = 2.52, 7.7/2.8/1.7/1.3 (BP=0.957, ratio=0.958, hyp_len=2983, ref_len=3113)\n'
Validation perplexity: 333725.5686359933
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.52
Epoch 350 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.8660883840348106 Loss (std): 1.6855637226268294 Loss ratio: 0.9032603905836147 Tokens per Sec: 3066.918488294971
Epoch Step: 10 / 67 Loss (mean): 4.370797456547734 Loss (std): 11.415020510077527 Loss ratio: 2.611656253477748 Tokens per Sec: 2545.691640681498
Epoch Step: 15 / 67 Loss (mean): 0.7856664871505927 Loss (std): 0.9786458312987582 Loss ratio: 1.2456250168542267 Tokens per Sec: 3448.5842636784264
Epoch Step: 20 / 67 Loss (mean): 0.6495070887031034 Loss (std): 0.8106573460126546 Loss ratio: 1.2481116220476152 Tokens per Sec: 2551.469916938023
Epoch Step: 25 / 67 Loss (mean): 0.5569904550357023 Loss (std): 0.7159069568297945 Loss ratio: 1.2853127919111396 Tokens per Sec: 2788.9024573644365
Epoch Step: 30 / 67 Loss (mean): 0.696391533332644 Loss (std): 0.7240540604128533 Loss ratio: 1.0397226642716744 Tokens per Sec: 2600.2406337778407
Epoch Step: 35 / 67 Loss (mean): 0.891890996528673 Loss (std): 0.9621576178476118 Loss ratio: 1.078783866629917 Tokens per Sec: 2690.594868376464
Epoch Step: 40 / 67 Loss (mean): 0.5233943420753349 Loss (std): 0.5905218749606653 Loss ratio: 1.1282542195988592 Tokens per Sec: 2559.8048366149465
Epoch Step: 45 / 67 Loss (mean): 0.5776274972886313 Loss (std): 0.6265036005459708 Loss ratio: 1.084615264139541 Tokens per Sec: 2472.099936746118
Epoch Step: 50 / 67 Loss (mean): 0.8917234125547111 Loss (std): 0.8840158571249508 Loss ratio: 0.9913565626726354 Tokens per Sec: 3019.44180709476
Epoch Step: 55 / 67 Loss (mean): 9.83745609014295 Loss (std): 20.085266145794144 Loss ratio: 2.041713422834935 Tokens per Sec: 2904.2817048876727
Epoch Step: 60 / 67 Loss (mean): 0.7909532834019046 Loss (std): 0.97360318294677 Loss ratio: 1.2309237516017189 Tokens per Sec: 2879.9339467301857
Epoch Step: 65 / 67 Loss (mean): 0.8409765199103276 Loss (std): 1.0699071373826923 Loss ratio: 1.2722199871843929 Tokens per Sec: 2833.5312749805553
Mean loss per sample: 1.1070148534816833 Std loss per sample: 3.8184542225151676 ratio: 3.449325192435955
Epoch ended with duration 0:00:11.409122
Train perplexity: 1.1615772660826726
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test java method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 90.04491564631462 Loss (std): 41.263844214981305 Loss ratio: 0.4582584582239004 Tokens per Sec: 4384.441702668907
Mean loss per sample: 94.3270075962436 Std loss per sample: 48.78765465955442 ratio: 0.5172183015535128
Epoch ended with duration 0:00:01.024343
b'BLEU = 2.70, 7.9/2.8/1.9/1.5 (BP=0.952, ratio=0.953, hyp_len=2968, ref_len=3113)\n'
Validation perplexity: 356111.4723938193
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.7
Model saved checkpoint_commit_msg_generator!
Epoch 351 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.7258340790285729 Loss (std): 0.8369249202791196 Loss ratio: 1.1530526665256973 Tokens per Sec: 2739.7520165337264
Epoch Step: 10 / 67 Loss (mean): 0.6216606444868376 Loss (std): 0.6765743218361271 Loss ratio: 1.0883338487586247 Tokens per Sec: 2696.95820951325
Epoch Step: 15 / 67 Loss (mean): 0.7095436274721578 Loss (std): 1.0259057917531236 Loss ratio: 1.4458671067317557 Tokens per Sec: 3059.629123152366
Epoch Step: 20 / 67 Loss (mean): 0.6979191626305692 Loss (std): 0.6705927125813345 Loss ratio: 0.9608458235388796 Tokens per Sec: 3254.5079644272673
Epoch Step: 25 / 67 Loss (mean): 0.6684118997873156 Loss (std): 0.6611477298368513 Loss ratio: 0.9891321953532309 Tokens per Sec: 2608.1555753213374
Epoch Step: 30 / 67 Loss (mean): 0.7965106444316916 Loss (std): 0.778143961822803 Loss ratio: 0.976941070734851 Tokens per Sec: 3604.250321416472
Epoch Step: 35 / 67 Loss (mean): 0.782957955787424 Loss (std): 0.9868940852653482 Loss ratio: 1.2604688131341928 Tokens per Sec: 3262.5838247229185
Epoch Step: 40 / 67 Loss (mean): 0.9510280015674653 Loss (std): 1.1717828256947507 Loss ratio: 1.232122317916446 Tokens per Sec: 3053.23951076499
Epoch Step: 45 / 67 Loss (mean): 0.3548205061815679 Loss (std): 0.40677367705904804 Loss ratio: 1.1464209930721838 Tokens per Sec: 2364.545491929574
Epoch Step: 50 / 67 Loss (mean): 1.7820868869894184 Loss (std): 1.810318284946448 Loss ratio: 1.0158417629146705 Tokens per Sec: 2620.8776530393347
Epoch Step: 55 / 67 Loss (mean): 0.9466527805780061 Loss (std): 1.029766093863277 Loss ratio: 1.0877970413127862 Tokens per Sec: 2869.828277704968
Epoch Step: 60 / 67 Loss (mean): 0.5839769250887912 Loss (std): 0.705619148101729 Loss ratio: 1.2082997080654216 Tokens per Sec: 2498.6818298463163
Epoch Step: 65 / 67 Loss (mean): 0.8546646767645143 Loss (std): 0.8945009657559952 Loss ratio: 1.0466104310550055 Tokens per Sec: 2312.1326318115434
Mean loss per sample: 0.9382289579374266 Std loss per sample: 2.658104847430278 ratio: 2.833108938860482
Epoch ended with duration 0:00:11.343918
Train perplexity: 1.1353512906182768
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings on run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 90.60085985064507 Loss (std): 41.330589817460414 Loss ratio: 0.4561831961152866 Tokens per Sec: 4307.077186182619
Mean loss per sample: 97.89737797711716 Std loss per sample: 48.77334639106431 ratio: 0.49820891426187885
Epoch ended with duration 0:00:01.048442
b'BLEU = 2.22, 7.7/2.6/1.5/1.1 (BP=0.930, ratio=0.932, hyp_len=2901, ref_len=3113)\n'
Validation perplexity: 577722.0926717726
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.22
Epoch 352 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.5633172368834494 Loss (std): 5.46183792667092 Loss ratio: 3.4937489319566164 Tokens per Sec: 2375.9268727970257
Epoch Step: 10 / 67 Loss (mean): 0.7516196644410229 Loss (std): 0.8534724786009369 Loss ratio: 1.1355111088474004 Tokens per Sec: 2543.5737880275565
Epoch Step: 15 / 67 Loss (mean): 0.9660545237420592 Loss (std): 1.1691499174488391 Loss ratio: 1.2102318127139242 Tokens per Sec: 2874.65863372347
Epoch Step: 20 / 67 Loss (mean): 0.7774116717337165 Loss (std): 0.9867804300055505 Loss ratio: 1.2693151722367608 Tokens per Sec: 2990.9125490418373
Epoch Step: 25 / 67 Loss (mean): 0.64867378649069 Loss (std): 0.5972660964273687 Loss ratio: 0.9207495491047424 Tokens per Sec: 3044.6369533617303
Epoch Step: 30 / 67 Loss (mean): 1.2255211536830757 Loss (std): 1.5255860875951526 Loss ratio: 1.244846800897959 Tokens per Sec: 2981.245909277003
Epoch Step: 35 / 67 Loss (mean): 0.7729491316858912 Loss (std): 0.8821436183238188 Loss ratio: 1.1412699518786726 Tokens per Sec: 3172.3611245032703
Epoch Step: 40 / 67 Loss (mean): 1.0009726670687087 Loss (std): 0.9749743427126178 Loss ratio: 0.9740269387852263 Tokens per Sec: 2817.689948518978
Epoch Step: 45 / 67 Loss (mean): 0.6686031799472403 Loss (std): 0.9729773253025745 Loss ratio: 1.4552388539033758 Tokens per Sec: 2367.7765003765116
Epoch Step: 50 / 67 Loss (mean): 0.773911741853226 Loss (std): 0.8830826425284417 Loss ratio: 1.1410637605959986 Tokens per Sec: 3473.8934531865275
Epoch Step: 55 / 67 Loss (mean): 0.7056612656451762 Loss (std): 0.8492248901564765 Loss ratio: 1.2034455219531457 Tokens per Sec: 2778.372993802368
Epoch Step: 60 / 67 Loss (mean): 0.7874322368297726 Loss (std): 0.7287374649699572 Loss ratio: 0.9254605423621943 Tokens per Sec: 2453.738072842126
Epoch Step: 65 / 67 Loss (mean): 0.7983190823579207 Loss (std): 1.0170582212693493 Loss ratio: 1.2739996371693374 Tokens per Sec: 2580.483577457987
Mean loss per sample: 1.0637187177760004 Std loss per sample: 4.258349937764172 ratio: 4.0032669037425945
Epoch ended with duration 0:00:11.404365
Train perplexity: 1.1547926902291958
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow call log[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 90.45616534352303 Loss (std): 43.05788409238403 Loss ratio: 0.47600828455268057 Tokens per Sec: 4389.154871549163
Mean loss per sample: 95.08178411839438 Std loss per sample: 49.82384430519118 ratio: 0.5240104060642288
Epoch ended with duration 0:00:01.024423
b'BLEU = 2.23, 8.4/2.5/1.5/1.1 (BP=0.924, ratio=0.926, hyp_len=2884, ref_len=3113)\n'
Validation perplexity: 394464.65609151986
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.23
Epoch 353 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.7582852500854642 Loss (std): 1.0947027995656977 Loss ratio: 1.4436556684207122 Tokens per Sec: 2168.6494442521134
Epoch Step: 10 / 67 Loss (mean): 0.8344776713638566 Loss (std): 0.7498507320464884 Loss ratio: 0.8985869338132735 Tokens per Sec: 3431.514936302671
Epoch Step: 15 / 67 Loss (mean): 0.9415672124450793 Loss (std): 1.1129661233527537 Loss ratio: 1.182035768283161 Tokens per Sec: 2763.0888342335993
Epoch Step: 20 / 67 Loss (mean): 0.7720662662759423 Loss (std): 1.0566290645188348 Loss ratio: 1.3685730236803113 Tokens per Sec: 3111.6865799059096
Epoch Step: 25 / 67 Loss (mean): 2.3889216895804566 Loss (std): 8.343416889531374 Loss ratio: 3.492545162079653 Tokens per Sec: 2425.358199423136
Epoch Step: 30 / 67 Loss (mean): 1.1703785241988953 Loss (std): 1.3223720007436248 Loss ratio: 1.1298669391159297 Tokens per Sec: 2458.0462428924966
Epoch Step: 35 / 67 Loss (mean): 0.6615779732383089 Loss (std): 0.6346140807264284 Loss ratio: 0.9592430618874795 Tokens per Sec: 2309.144641633172
Epoch Step: 40 / 67 Loss (mean): 0.6738987540011294 Loss (std): 0.6900897919227403 Loss ratio: 1.024025920548866 Tokens per Sec: 3191.9377932222856
Epoch Step: 45 / 67 Loss (mean): 0.5926368541113334 Loss (std): 0.5879468414985238 Loss ratio: 0.9920861948083834 Tokens per Sec: 2797.4823660468796
Epoch Step: 50 / 67 Loss (mean): 0.8190777139388956 Loss (std): 1.189438203336247 Loss ratio: 1.4521677041074772 Tokens per Sec: 3172.9445239278393
Epoch Step: 55 / 67 Loss (mean): 5.503946230513975 Loss (std): 15.668782072219894 Loss ratio: 2.846826879476382 Tokens per Sec: 2675.5756571115394
Epoch Step: 60 / 67 Loss (mean): 0.8196698167666909 Loss (std): 0.9394412616931986 Loss ratio: 1.14612157539113 Tokens per Sec: 2701.025009329375
Epoch Step: 65 / 67 Loss (mean): 0.935884970065672 Loss (std): 1.1118024233995398 Loss ratio: 1.1879690976568664 Tokens per Sec: 3017.460595181908
Mean loss per sample: 1.0326397363255297 Std loss per sample: 3.5728942307444944 ratio: 3.4599619838938427
Epoch ended with duration 0:00:11.395164
Train perplexity: 1.1499470082900163
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print preferences when scoring ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 90.25718387961388 Loss (std): 41.89708452799761 Loss ratio: 0.46419667362855516 Tokens per Sec: 4302.594068834348
Mean loss per sample: 96.50880176696133 Std loss per sample: 49.473619521200284 ratio: 0.5126332377503107
Epoch ended with duration 0:00:01.032973
b'BLEU = 2.22, 8.1/2.4/1.5/1.1 (BP=0.930, ratio=0.933, hyp_len=2903, ref_len=3113)\n'
Validation perplexity: 478624.3234634161
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.22
Epoch 354 / 1000
Epoch Step: 5 / 67 Loss (mean): 4.203889147214795 Loss (std): 13.628255677511314 Loss ratio: 3.2418208949540093 Tokens per Sec: 2540.0452045802067
Epoch Step: 10 / 67 Loss (mean): 0.7887229529078468 Loss (std): 0.8143083795096557 Loss ratio: 1.0324390541792667 Tokens per Sec: 3073.6404998397948
Epoch Step: 15 / 67 Loss (mean): 0.6916222249856219 Loss (std): 0.9174550494098773 Loss ratio: 1.3265262686272847 Tokens per Sec: 2636.0461742798084
Epoch Step: 20 / 67 Loss (mean): 0.7225789658841677 Loss (std): 0.8675591640123709 Loss ratio: 1.200642704774559 Tokens per Sec: 3115.9580705025114
Epoch Step: 25 / 67 Loss (mean): 0.6602398389586597 Loss (std): 0.6758645638824091 Loss ratio: 1.0236652258797243 Tokens per Sec: 2475.2913091293717
Epoch Step: 30 / 67 Loss (mean): 3.159566086364066 Loss (std): 9.502937574839274 Loss ratio: 3.007671722978572 Tokens per Sec: 2571.3334832602286
Epoch Step: 35 / 67 Loss (mean): 3.4551979957905132 Loss (std): 9.274804794513482 Loss ratio: 2.6843048664108475 Tokens per Sec: 2525.6967862500037
Epoch Step: 40 / 67 Loss (mean): 1.4051792236277834 Loss (std): 1.2246915759205945 Loss ratio: 0.8715554253348411 Tokens per Sec: 3819.9023291509834
Epoch Step: 45 / 67 Loss (mean): 0.9226641860441305 Loss (std): 0.9557969720642893 Loss ratio: 1.0359099079831133 Tokens per Sec: 2834.826016570288
Epoch Step: 50 / 67 Loss (mean): 0.7417641717765946 Loss (std): 1.1066105169690745 Loss ratio: 1.4918629924098905 Tokens per Sec: 2817.698936500589
Epoch Step: 55 / 67 Loss (mean): 0.9426442339463392 Loss (std): 1.2854250368029612 Loss ratio: 1.3636375108577123 Tokens per Sec: 2508.6045491890623
Epoch Step: 60 / 67 Loss (mean): 0.8070185835822485 Loss (std): 0.8720392102319133 Loss ratio: 1.080568933569097 Tokens per Sec: 2272.8042667345762
Epoch Step: 65 / 67 Loss (mean): 1.0349677965277806 Loss (std): 1.4133498123254549 Loss ratio: 1.3655978640756845 Tokens per Sec: 3037.9900343229856
Mean loss per sample: 1.7359013988424015 Std loss per sample: 7.299438283048638 ratio: 4.204984389042098
Epoch ended with duration 0:00:11.533136
Train perplexity: 1.2647405012238109
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shader print for openjdk ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 89.80332028865814 Loss (std): 42.179273570315225 Loss ratio: 0.4696850120322592 Tokens per Sec: 4429.9847616264005
Mean loss per sample: 94.26465959761475 Std loss per sample: 48.67565069745995 ratio: 0.5163722110199147
Epoch ended with duration 0:00:01.018582
b'BLEU = 2.04, 7.9/2.3/1.3/1.0 (BP=0.930, ratio=0.933, hyp_len=2903, ref_len=3113)\n'
Validation perplexity: 353115.2659142329
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.04
Epoch 355 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.7601427501067519 Loss (std): 0.9690458196466359 Loss ratio: 1.274820840573098 Tokens per Sec: 2836.0046175982534
Epoch Step: 10 / 67 Loss (mean): 0.7779335749073653 Loss (std): 0.9959358151372582 Loss ratio: 1.280232461050228 Tokens per Sec: 2381.9228335053162
Epoch Step: 15 / 67 Loss (mean): 0.7093322149012238 Loss (std): 0.7513562119730965 Loss ratio: 1.0592444501871732 Tokens per Sec: 2833.981143592029
Epoch Step: 20 / 67 Loss (mean): 0.45854290763963945 Loss (std): 0.45013317308606937 Loss ratio: 0.9816598743248274 Tokens per Sec: 3059.596088238606
Epoch Step: 25 / 67 Loss (mean): 0.6621762490303809 Loss (std): 0.6636022570167605 Loss ratio: 1.002153517267446 Tokens per Sec: 2707.929149418123
Epoch Step: 30 / 67 Loss (mean): 0.6737302244000603 Loss (std): 0.7764305865064778 Loss ratio: 1.1524354383802058 Tokens per Sec: 2470.9454437066233
Epoch Step: 35 / 67 Loss (mean): 0.9046679654566105 Loss (std): 1.0743513824154507 Loss ratio: 1.187564303631771 Tokens per Sec: 2748.565383635797
Epoch Step: 40 / 67 Loss (mean): 2.8827055903093424 Loss (std): 10.093529187715085 Loss ratio: 3.5014082678598997 Tokens per Sec: 2616.5311857036845
Epoch Step: 45 / 67 Loss (mean): 0.5915792509913445 Loss (std): 0.5955396777227137 Loss ratio: 1.0066946680850157 Tokens per Sec: 3203.5931473000073
Epoch Step: 50 / 67 Loss (mean): 1.1239194669251447 Loss (std): 1.3876092954781158 Loss ratio: 1.2346163015348264 Tokens per Sec: 2817.5616395624916
Epoch Step: 55 / 67 Loss (mean): 0.9600646155449795 Loss (std): 1.1130662200026973 Loss ratio: 1.159365944729529 Tokens per Sec: 2504.470345847422
Epoch Step: 60 / 67 Loss (mean): 0.9210221117537003 Loss (std): 1.1044146748459642 Loss ratio: 1.1991185235966482 Tokens per Sec: 2629.261078938831
Epoch Step: 65 / 67 Loss (mean): 1.056209865724668 Loss (std): 1.4225633224896292 Loss ratio: 1.346856688858521 Tokens per Sec: 2786.445831374826
Mean loss per sample: 1.3273490868858717 Std loss per sample: 5.452377477535972 ratio: 4.107719311675527
Epoch ended with duration 0:00:11.468025
Train perplexity: 1.1967265478592268
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print during method_1 ( ) ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 90.74690666794777 Loss (std): 41.75595194501673 Loss ratio: 0.4601363669376196 Tokens per Sec: 4432.6838891498355
Mean loss per sample: 95.0572195459829 Std loss per sample: 48.96018577398697 ratio: 0.5150601501688465
Epoch ended with duration 0:00:01.019263
b'BLEU = 2.53, 7.8/2.8/1.8/1.3 (BP=0.941, ratio=0.943, hyp_len=2935, ref_len=3113)\n'
Validation perplexity: 393153.6903683741
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.53
Model saved checkpoint_commit_msg_generator!
Epoch 356 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.9491935257101431 Loss (std): 1.0308219417781848 Loss ratio: 1.0859976536470484 Tokens per Sec: 2839.8304473487246
Epoch Step: 10 / 67 Loss (mean): 4.021086870940053 Loss (std): 12.260343729814517 Loss ratio: 3.0490123997117933 Tokens per Sec: 2600.3330238766644
Epoch Step: 15 / 67 Loss (mean): 0.8779969999595778 Loss (std): 1.012887997466001 Loss ratio: 1.15363491847083 Tokens per Sec: 2504.7070082908604
Epoch Step: 20 / 67 Loss (mean): 0.8909659186028875 Loss (std): 1.0074594168921285 Loss ratio: 1.1307496682610632 Tokens per Sec: 2387.4501282807364
Epoch Step: 25 / 67 Loss (mean): 0.4237858976557618 Loss (std): 0.530531784876729 Loss ratio: 1.2518863600970416 Tokens per Sec: 3046.041009932283
Epoch Step: 30 / 67 Loss (mean): 0.8188934451900423 Loss (std): 0.8389135149497261 Loss ratio: 1.024447710355085 Tokens per Sec: 3304.491229564442
Epoch Step: 35 / 67 Loss (mean): 0.6048277777736075 Loss (std): 0.5838371417050687 Loss ratio: 0.965294854436405 Tokens per Sec: 3243.0072912117853
Epoch Step: 40 / 67 Loss (mean): 1.0181051155086607 Loss (std): 0.9639792329934154 Loss ratio: 0.9468366461470894 Tokens per Sec: 2742.566951899253
Epoch Step: 45 / 67 Loss (mean): 0.5418667927151546 Loss (std): 0.6572658085323418 Loss ratio: 1.2129656538629219 Tokens per Sec: 2782.601657541721
Epoch Step: 50 / 67 Loss (mean): 0.7268203127896413 Loss (std): 0.8453152157535416 Loss ratio: 1.163031908820902 Tokens per Sec: 2770.7449769797777
Epoch Step: 55 / 67 Loss (mean): 0.5965066393546294 Loss (std): 0.7463650788648802 Loss ratio: 1.2512267754008324 Tokens per Sec: 2587.7741774542915
Epoch Step: 60 / 67 Loss (mean): 0.8306097552122083 Loss (std): 0.8263766117777378 Loss ratio: 0.9949035712524361 Tokens per Sec: 3013.9840318779306
Epoch Step: 65 / 67 Loss (mean): 0.8985863256821176 Loss (std): 1.18968647500064 Loss ratio: 1.3239534600056906 Tokens per Sec: 2583.4636424396454
Mean loss per sample: 1.0877259996790691 Std loss per sample: 4.124537244600569 ratio: 3.7918899114459927
Epoch ended with duration 0:00:11.370187
Train perplexity: 1.1585497614045286
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings from inactive ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 89.49713960289955 Loss (std): 41.42367697163224 Loss ratio: 0.46284917211242566 Tokens per Sec: 4418.916507014181
Mean loss per sample: 94.69773203476531 Std loss per sample: 49.48028270106704 ratio: 0.5225075789872339
Epoch ended with duration 0:00:01.019906
b'BLEU = 2.50, 8.7/2.8/1.8/1.4 (BP=0.894, ratio=0.899, hyp_len=2800, ref_len=3113)\n'
Validation perplexity: 374459.4832784368
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.5
Epoch 357 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6397191042051418 Loss (std): 0.6765977505992511 Loss ratio: 1.0576481867614873 Tokens per Sec: 2525.211193353407
Epoch Step: 10 / 67 Loss (mean): 0.535775532189291 Loss (std): 0.7173883059712033 Loss ratio: 1.3389717575190574 Tokens per Sec: 3011.5991544640087
Epoch Step: 15 / 67 Loss (mean): 1.6789104635390686 Loss (std): 1.4568568738923084 Loss ratio: 0.8677394688584636 Tokens per Sec: 2939.7086480929365
Epoch Step: 20 / 67 Loss (mean): 0.474678441278229 Loss (std): 0.4499040354490204 Loss ratio: 0.9478080239698788 Tokens per Sec: 2453.9377021362225
Epoch Step: 25 / 67 Loss (mean): 0.7656635548191844 Loss (std): 0.891137660074309 Loss ratio: 1.1638762932692492 Tokens per Sec: 2894.315314746307
Epoch Step: 30 / 67 Loss (mean): 0.6848350381333148 Loss (std): 0.942998447677027 Loss ratio: 1.3769716722546785 Tokens per Sec: 2161.524975615868
Epoch Step: 35 / 67 Loss (mean): 0.7718403928884072 Loss (std): 1.0710488373966813 Loss ratio: 1.3876558512162938 Tokens per Sec: 2834.2980960109044
Epoch Step: 40 / 67 Loss (mean): 0.6498435972025618 Loss (std): 0.7598793251862089 Loss ratio: 1.1693264786439805 Tokens per Sec: 2475.270130806029
Epoch Step: 45 / 67 Loss (mean): 1.147391726874048 Loss (std): 1.366970710978986 Loss ratio: 1.1913722915740022 Tokens per Sec: 3750.2218020750865
Epoch Step: 50 / 67 Loss (mean): 0.7381650195311522 Loss (std): 1.0815334420479261 Loss ratio: 1.4651648526163776 Tokens per Sec: 3680.023840696947
Epoch Step: 55 / 67 Loss (mean): 0.7921231339860242 Loss (std): 0.8206721751009051 Loss ratio: 1.036041165684961 Tokens per Sec: 2508.9711618215138
Epoch Step: 60 / 67 Loss (mean): 0.7761721266651875 Loss (std): 0.8018230936941556 Loss ratio: 1.0330480394074149 Tokens per Sec: 2895.546044674981
Epoch Step: 65 / 67 Loss (mean): 0.7175069852091838 Loss (std): 1.0229217646666673 Loss ratio: 1.4256610538341201 Tokens per Sec: 2439.6999357712734
Mean loss per sample: 1.0828782681847189 Std loss per sample: 4.1563093068762536 ratio: 3.838205483469232
Epoch ended with duration 0:00:11.407469
Train perplexity: 1.1577901216036397
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to deprecated ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 90.75796139240265 Loss (std): 42.18067221326611 Loss ratio: 0.46476002287989965 Tokens per Sec: 4433.151417548045
Mean loss per sample: 95.10058286138734 Std loss per sample: 49.32974148651243 ratio: 0.518711242373902
Epoch ended with duration 0:00:01.017910
b'BLEU = 2.44, 8.1/2.6/1.7/1.3 (BP=0.936, ratio=0.938, hyp_len=2920, ref_len=3113)\n'
Validation perplexity: 395470.86213669105
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.44
Epoch 358 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.7106556335420464 Loss (std): 0.8170215698872055 Loss ratio: 1.149672965814695 Tokens per Sec: 2599.6430768973705
Epoch Step: 10 / 67 Loss (mean): 0.7120942250039661 Loss (std): 0.7261553487038623 Loss ratio: 1.0197461560649757 Tokens per Sec: 2878.701181977873
Epoch Step: 15 / 67 Loss (mean): 5.131763289558876 Loss (std): 16.170453903070737 Loss ratio: 3.151052180440837 Tokens per Sec: 2725.6958123402273
Epoch Step: 20 / 67 Loss (mean): 3.1057908814109396 Loss (std): 10.653702693959886 Loss ratio: 3.430270453083429 Tokens per Sec: 2853.824223152137
Epoch Step: 25 / 67 Loss (mean): 1.0409387158870231 Loss (std): 1.3267914375631162 Loss ratio: 1.27461051963324 Tokens per Sec: 3627.332336623461
Epoch Step: 30 / 67 Loss (mean): 0.7399686392163858 Loss (std): 1.0446750636342361 Loss ratio: 1.4117828895296554 Tokens per Sec: 2681.562229970726
Epoch Step: 35 / 67 Loss (mean): 1.0458333502756432 Loss (std): 1.1641751157812956 Loss ratio: 1.1131554711603544 Tokens per Sec: 2789.451521450887
Epoch Step: 40 / 67 Loss (mean): 1.042714410170447 Loss (std): 1.1673823730729123 Loss ratio: 1.1195609859099256 Tokens per Sec: 2331.288277307755
Epoch Step: 45 / 67 Loss (mean): 0.36187176818826366 Loss (std): 0.3715003078246381 Loss ratio: 1.0266076010421603 Tokens per Sec: 2848.4711776392214
Epoch Step: 50 / 67 Loss (mean): 0.7497088471718598 Loss (std): 0.8355545050211806 Loss ratio: 1.1145053285327469 Tokens per Sec: 2691.7758650932046
Epoch Step: 55 / 67 Loss (mean): 0.8659540463413578 Loss (std): 0.7457848570134499 Loss ratio: 0.8612291381562095 Tokens per Sec: 2694.187128611209
Epoch Step: 60 / 67 Loss (mean): 0.8336455788521562 Loss (std): 0.9108733295349432 Loss ratio: 1.092638589637963 Tokens per Sec: 2743.25499754451
Epoch Step: 65 / 67 Loss (mean): 0.9397379509318853 Loss (std): 1.1526870658498212 Loss ratio: 1.2266047835003004 Tokens per Sec: 2616.578778695996
Mean loss per sample: 1.5948126274082448 Std loss per sample: 6.8323141588472165 ratio: 4.284085817623929
Epoch ended with duration 0:00:11.478954
Train perplexity: 1.240826504243743
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print during logging[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 91.30670002102852 Loss (std): 42.769257993351225 Loss ratio: 0.4684131392712823 Tokens per Sec: 4437.680541957476
Mean loss per sample: 96.76355462521315 Std loss per sample: 50.52199923771792 ratio: 0.5221180581201352
Epoch ended with duration 0:00:01.034162
b'BLEU = 2.40, 8.0/2.6/1.7/1.4 (BP=0.898, ratio=0.903, hyp_len=2811, ref_len=3113)\n'
Validation perplexity: 495436.68800160586
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.4
Epoch 359 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.645851358791333 Loss (std): 0.845248141226561 Loss ratio: 1.30873478815371 Tokens per Sec: 2600.89624611894
Epoch Step: 10 / 67 Loss (mean): 1.0205436656833626 Loss (std): 2.3221806490366994 Loss ratio: 2.275434875666738 Tokens per Sec: 2424.8955279159277
Epoch Step: 15 / 67 Loss (mean): 3.914741215266986 Loss (std): 13.119405295896463 Loss ratio: 3.351282900829428 Tokens per Sec: 2195.831446317126
Epoch Step: 20 / 67 Loss (mean): 0.8146091499365866 Loss (std): 0.8973263111640958 Loss ratio: 1.1015421459898262 Tokens per Sec: 3437.530851625175
Epoch Step: 25 / 67 Loss (mean): 0.747661191620864 Loss (std): 1.0171600104927234 Loss ratio: 1.36045580791429 Tokens per Sec: 2756.841478606365
Epoch Step: 30 / 67 Loss (mean): 3.7352791581943166 Loss (std): 13.473227922210093 Loss ratio: 3.6070203461642287 Tokens per Sec: 3159.047153449857
Epoch Step: 35 / 67 Loss (mean): 0.6950158839172218 Loss (std): 0.7181239269203533 Loss ratio: 1.033248222864909 Tokens per Sec: 2890.627390808522
Epoch Step: 40 / 67 Loss (mean): 0.6193609885376645 Loss (std): 0.7403794501261362 Loss ratio: 1.1953924509746747 Tokens per Sec: 2702.710499037625
Epoch Step: 45 / 67 Loss (mean): 6.463996968464926 Loss (std): 16.397279006332955 Loss ratio: 2.536708956753578 Tokens per Sec: 2559.4122714985742
Epoch Step: 50 / 67 Loss (mean): 1.0541172189987265 Loss (std): 1.0648116301836672 Loss ratio: 1.010145371873442 Tokens per Sec: 2829.7436185902616
Epoch Step: 55 / 67 Loss (mean): 0.515039231559058 Loss (std): 0.5216289620845448 Loss ratio: 1.012794618587674 Tokens per Sec: 2881.4131057277646
Epoch Step: 60 / 67 Loss (mean): 0.7242039400880458 Loss (std): 0.777441331895535 Loss ratio: 1.0735116019957263 Tokens per Sec: 2965.1957610128843
Epoch Step: 65 / 67 Loss (mean): 1.9911486201162916 Loss (std): 2.457460481689767 Loss ratio: 1.2341923937080301 Tokens per Sec: 2885.387219012949
Mean loss per sample: 1.0634277176655644 Std loss per sample: 3.8223611882572266 ratio: 3.594377995570842
Epoch ended with duration 0:00:11.419467
Train perplexity: 1.1547472243586772
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) return[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 90.68053954839706 Loss (std): 41.35306756948654 Loss ratio: 0.45603023289705963 Tokens per Sec: 4417.67342281073
Mean loss per sample: 95.05634609341134 Std loss per sample: 49.434004693294945 ratio: 0.5200494940623578
Epoch ended with duration 0:00:01.020422
b'BLEU = 2.21, 7.8/2.5/1.5/1.1 (BP=0.931, ratio=0.933, hyp_len=2904, ref_len=3113)\n'
Validation perplexity: 393107.15612232324
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.21
Epoch 360 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.646577607607469 Loss (std): 0.8440711925735979 Loss ratio: 1.3054445168568618 Tokens per Sec: 2187.5928633267235
Epoch Step: 10 / 67 Loss (mean): 0.8902118606783915 Loss (std): 0.9636644074082948 Loss ratio: 1.0825113099188863 Tokens per Sec: 3371.572939469021
Epoch Step: 15 / 67 Loss (mean): 5.981438266549958 Loss (std): 18.873632017589273 Loss ratio: 3.155366849330608 Tokens per Sec: 2963.5733071665986
Epoch Step: 20 / 67 Loss (mean): 0.6488414056511829 Loss (std): 0.7293349603842862 Loss ratio: 1.1240573644530583 Tokens per Sec: 2680.806976718507
Epoch Step: 25 / 67 Loss (mean): 0.5632082877273206 Loss (std): 0.4746368016758767 Loss ratio: 0.8427376017337194 Tokens per Sec: 2754.8423255222233
Epoch Step: 30 / 67 Loss (mean): 3.931276253781107 Loss (std): 11.867000714409047 Loss ratio: 3.0186127731408723 Tokens per Sec: 2533.2026648574792
Epoch Step: 35 / 67 Loss (mean): 0.7514789865163038 Loss (std): 1.0305599338687483 Loss ratio: 1.3713755838286366 Tokens per Sec: 2659.3950338600453
Epoch Step: 40 / 67 Loss (mean): 0.6966304632369429 Loss (std): 0.6182372868708708 Loss ratio: 0.8874680616150309 Tokens per Sec: 3136.0204854133544
Epoch Step: 45 / 67 Loss (mean): 3.3451644885062706 Loss (std): 10.253620011408074 Loss ratio: 3.0652065232184333 Tokens per Sec: 2975.8454802785586
Epoch Step: 50 / 67 Loss (mean): 1.1150297960703028 Loss (std): 1.1376576426453477 Loss ratio: 1.0202934905011438 Tokens per Sec: 2710.865242006175
Epoch Step: 55 / 67 Loss (mean): 0.8026375874032965 Loss (std): 0.9067147076228337 Loss ratio: 1.1296688840056057 Tokens per Sec: 2716.46816980193
Epoch Step: 60 / 67 Loss (mean): 0.5986618718379759 Loss (std): 0.8433829330194661 Loss ratio: 1.4087801022473039 Tokens per Sec: 2624.825658564911
Epoch Step: 65 / 67 Loss (mean): 0.8793841059305123 Loss (std): 1.0282880692947285 Loss ratio: 1.1693275581853448 Tokens per Sec: 2503.532572621456
Mean loss per sample: 1.1402250789860708 Std loss per sample: 4.434283302237802 ratio: 3.888954368711944
Epoch ended with duration 0:00:11.428790
Train perplexity: 1.1668083644770313
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) return ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 90.41858488321304 Loss (std): 42.54399545505068 Loss ratio: 0.4705226863481837 Tokens per Sec: 4441.2663410553905
Mean loss per sample: 95.67063291187658 Std loss per sample: 49.17343867521085 ratio: 0.5139867603939144
Epoch ended with duration 0:00:01.030202
b'BLEU = 2.54, 8.3/2.8/1.8/1.4 (BP=0.919, ratio=0.922, hyp_len=2870, ref_len=3113)\n'
Validation perplexity: 427232.8169550002
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.54
Model saved checkpoint_commit_msg_generator!
Epoch 361 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6077862417223514 Loss (std): 0.596989391890957 Loss ratio: 0.9822357778274181 Tokens per Sec: 2639.2122998402874
Epoch Step: 10 / 67 Loss (mean): 9.250657390221022 Loss (std): 25.456541301611864 Loss ratio: 2.751862946359063 Tokens per Sec: 2657.6765282728793
Epoch Step: 15 / 67 Loss (mean): 3.8838566395061207 Loss (std): 14.602958071307633 Loss ratio: 3.759911713210036 Tokens per Sec: 2593.0758366056125
Epoch Step: 20 / 67 Loss (mean): 0.8203841584618203 Loss (std): 0.7960290687905539 Loss ratio: 0.970312579271483 Tokens per Sec: 2600.3598961118983
Epoch Step: 25 / 67 Loss (mean): 0.6353740553604439 Loss (std): 0.5947500765072647 Loss ratio: 0.9360628931722221 Tokens per Sec: 2900.118925740963
Epoch Step: 30 / 67 Loss (mean): 0.8278168183569505 Loss (std): 0.9170596331127686 Loss ratio: 1.1078050273645648 Tokens per Sec: 2828.8293842914363
Epoch Step: 35 / 67 Loss (mean): 0.933293377107475 Loss (std): 0.9262755906830527 Loss ratio: 0.9924806212102648 Tokens per Sec: 3091.445886124833
Epoch Step: 40 / 67 Loss (mean): 5.156208220818371 Loss (std): 11.955614037039005 Loss ratio: 2.3186833279478116 Tokens per Sec: 2920.329887562697
Epoch Step: 45 / 67 Loss (mean): 0.8706828350841533 Loss (std): 0.9472537275184139 Loss ratio: 1.0879434960112195 Tokens per Sec: 2851.524431305777
Epoch Step: 50 / 67 Loss (mean): 0.9435506456648 Loss (std): 0.8462771005626518 Loss ratio: 0.8969069169216541 Tokens per Sec: 3166.5802892350475
Epoch Step: 55 / 67 Loss (mean): 0.8824476537120063 Loss (std): 1.2905753396790987 Loss ratio: 1.4624950661382665 Tokens per Sec: 2654.280997269555
Epoch Step: 60 / 67 Loss (mean): 0.9651327364117606 Loss (std): 1.2104770083535694 Loss ratio: 1.25420780239407 Tokens per Sec: 2712.0142299771255
Epoch Step: 65 / 67 Loss (mean): 2.1150526846467983 Loss (std): 7.5719715493538775 Loss ratio: 3.580039213358108 Tokens per Sec: 2528.758510563072
Mean loss per sample: 1.3618524232242353 Std loss per sample: 5.356654342905591 ratio: 3.933358895249102
Epoch ended with duration 0:00:11.460946
Train perplexity: 1.2023262767135934
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 91.26296210289001 Loss (std): 42.44302572495833 Loss ratio: 0.4650629866375364 Tokens per Sec: 4407.179064234734
Mean loss per sample: 95.11934681419955 Std loss per sample: 49.62595717413689 ratio: 0.5217230651412407
Epoch ended with duration 0:00:01.021963
b'BLEU = 2.50, 8.0/2.7/1.8/1.4 (BP=0.925, ratio=0.928, hyp_len=2889, ref_len=3113)\n'
Validation perplexity: 396477.7655513168
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.5
Epoch 362 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.8799812606303021 Loss (std): 0.9086351953971654 Loss ratio: 1.0325619829067034 Tokens per Sec: 3138.8082599071213
Epoch Step: 10 / 67 Loss (mean): 0.925997031154111 Loss (std): 0.9527799827991695 Loss ratio: 1.028923366645871 Tokens per Sec: 2941.6082062140135
Epoch Step: 15 / 67 Loss (mean): 0.6734400037385058 Loss (std): 0.6318064015009119 Loss ratio: 0.9381777114420425 Tokens per Sec: 2917.959830311221
Epoch Step: 20 / 67 Loss (mean): 0.9616866036085412 Loss (std): 1.0946775154082429 Loss ratio: 1.1382892423588717 Tokens per Sec: 2558.9340095700436
Epoch Step: 25 / 67 Loss (mean): 0.7424035310104955 Loss (std): 0.8444734622595871 Loss ratio: 1.1374857836548309 Tokens per Sec: 2688.2534637300823
Epoch Step: 30 / 67 Loss (mean): 1.0620200624107383 Loss (std): 1.136850024210381 Loss ratio: 1.0704600265552253 Tokens per Sec: 3680.946390840815
Epoch Step: 35 / 67 Loss (mean): 0.7177608920173952 Loss (std): 0.8119473536273184 Loss ratio: 1.1312226155777243 Tokens per Sec: 2889.2497939385876
Epoch Step: 40 / 67 Loss (mean): 0.7704772195138503 Loss (std): 1.001193007766609 Loss ratio: 1.2994453079330937 Tokens per Sec: 2353.5412121329136
Epoch Step: 45 / 67 Loss (mean): 0.9961750469228718 Loss (std): 1.2181157344249571 Loss ratio: 1.2227928597364965 Tokens per Sec: 2495.2175635984254
Epoch Step: 50 / 67 Loss (mean): 0.8343344719905872 Loss (std): 1.220902315591744 Loss ratio: 1.4633247894922385 Tokens per Sec: 2517.6484455761024
Epoch Step: 55 / 67 Loss (mean): 0.6436953055817867 Loss (std): 0.7080255581230731 Loss ratio: 1.0999389804204698 Tokens per Sec: 2371.1670742341157
Epoch Step: 60 / 67 Loss (mean): 0.7592418135027401 Loss (std): 0.6988546480487499 Loss ratio: 0.9204638569951834 Tokens per Sec: 3053.1598494591753
Epoch Step: 65 / 67 Loss (mean): 0.8390000679064542 Loss (std): 0.8075728529479176 Loss ratio: 0.9625420591002376 Tokens per Sec: 2984.5161680733763
Mean loss per sample: 1.0749132433180635 Std loss per sample: 3.850767312403384 ratio: 3.5823982412913242
Epoch ended with duration 0:00:11.386069
Train perplexity: 1.1565430830940358
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test java method_1 extension point[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 91.03004941344261 Loss (std): 41.37879520573741 Loss ratio: 0.4545619328162961 Tokens per Sec: 4306.342945970833
Mean loss per sample: 98.70015066495684 Std loss per sample: 49.12619578373327 ratio: 0.4977317202938715
Epoch ended with duration 0:00:01.048839
b'BLEU = 2.58, 7.9/2.8/1.8/1.4 (BP=0.951, ratio=0.952, hyp_len=2963, ref_len=3113)\n'
Validation perplexity: 644118.697970396
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.58
Epoch 363 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.0402749927015975 Loss (std): 1.0614079994136942 Loss ratio: 1.0203148271950806 Tokens per Sec: 2624.0753955861605
Epoch Step: 10 / 67 Loss (mean): 0.6081710018625017 Loss (std): 0.6230814088190043 Loss ratio: 1.0245168002269756 Tokens per Sec: 3491.6846007752115
Epoch Step: 15 / 67 Loss (mean): 0.5739071717616753 Loss (std): 0.6601610268109142 Loss ratio: 1.150292345684534 Tokens per Sec: 2878.903346441604
Epoch Step: 20 / 67 Loss (mean): 0.9349497058137786 Loss (std): 1.1592801940469908 Loss ratio: 1.2399385622972685 Tokens per Sec: 2779.8347489118337
Epoch Step: 25 / 67 Loss (mean): 0.6136084909958299 Loss (std): 0.9651265420799507 Loss ratio: 1.5728702523552753 Tokens per Sec: 2627.223741135431
Epoch Step: 30 / 67 Loss (mean): 0.2760266237393288 Loss (std): 0.35351695757867735 Loss ratio: 1.280734998637407 Tokens per Sec: 2643.5878485173666
Epoch Step: 35 / 67 Loss (mean): 0.7426901598082623 Loss (std): 1.1236496550670036 Loss ratio: 1.5129453921364628 Tokens per Sec: 2678.6291012889137
Epoch Step: 40 / 67 Loss (mean): 0.8426987544007716 Loss (std): 0.7977065868153785 Loss ratio: 0.9466094291104226 Tokens per Sec: 2930.9260044171597
Epoch Step: 45 / 67 Loss (mean): 0.6831154637911823 Loss (std): 0.8258851789837345 Loss ratio: 1.2089979260609955 Tokens per Sec: 2528.7957610126164
Epoch Step: 50 / 67 Loss (mean): 0.6667692422925029 Loss (std): 0.9204801858466412 Loss ratio: 1.3805078690819974 Tokens per Sec: 2615.8621844012837
Epoch Step: 55 / 67 Loss (mean): 0.5402412991388701 Loss (std): 0.5947759971871671 Loss ratio: 1.1009450742385372 Tokens per Sec: 3254.914282939274
Epoch Step: 60 / 67 Loss (mean): 0.6450743958412204 Loss (std): 0.83475649798246 Loss ratio: 1.2940468624458135 Tokens per Sec: 2758.8525391372496
Epoch Step: 65 / 67 Loss (mean): 0.7183346685087599 Loss (std): 0.7942844637244396 Loss ratio: 1.1057303768636826 Tokens per Sec: 2666.4744874183266
Mean loss per sample: 0.9381853032588545 Std loss per sample: 3.0509710650179462 ratio: 3.251991961950563
Epoch ended with duration 0:00:11.344405
Train perplexity: 1.1353445847247958
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow call log[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test java method_1 for sslcontext.tls[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 90.74132525920868 Loss (std): 41.943261644720785 Loss ratio: 0.46222888551502905 Tokens per Sec: 4429.555167658991
Mean loss per sample: 95.52678776489662 Std loss per sample: 49.66511765127899 ratio: 0.5199077537654784
Epoch ended with duration 0:00:01.018883
b'BLEU = 2.41, 8.0/2.6/1.7/1.3 (BP=0.928, ratio=0.931, hyp_len=2897, ref_len=3113)\n'
Validation perplexity: 418985.163289457
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.41
Epoch 364 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5817012596962741 Loss (std): 0.7268270285219246 Loss ratio: 1.2494850516593785 Tokens per Sec: 2933.302398613797
Epoch Step: 10 / 67 Loss (mean): 0.6577306312683504 Loss (std): 0.7729777491623335 Loss ratio: 1.1752193259902517 Tokens per Sec: 2724.1495877206075
Epoch Step: 15 / 67 Loss (mean): 0.5301188775920309 Loss (std): 0.6555248685270938 Loss ratio: 1.2365620170039915 Tokens per Sec: 2488.7127365829274
Epoch Step: 20 / 67 Loss (mean): 0.8544949565839488 Loss (std): 0.9985906313666212 Loss ratio: 1.1686325632145682 Tokens per Sec: 2848.899955894112
Epoch Step: 25 / 67 Loss (mean): 0.6289471129712183 Loss (std): 0.6340226110157815 Loss ratio: 1.00806983280452 Tokens per Sec: 3068.2460088527464
Epoch Step: 30 / 67 Loss (mean): 0.8146651867773471 Loss (std): 1.023208568887935 Loss ratio: 1.2559866132681379 Tokens per Sec: 2688.806065781417
Epoch Step: 35 / 67 Loss (mean): 0.7634597989963368 Loss (std): 0.8457526598224456 Loss ratio: 1.107789383192531 Tokens per Sec: 2764.188006263222
Epoch Step: 40 / 67 Loss (mean): 1.6150648273178376 Loss (std): 1.6829263402742833 Loss ratio: 1.0420178260393078 Tokens per Sec: 2638.4560281467648
Epoch Step: 45 / 67 Loss (mean): 0.523018271986075 Loss (std): 0.68204547901825 Loss ratio: 1.3040566946701415 Tokens per Sec: 2625.4288016441087
Epoch Step: 50 / 67 Loss (mean): 1.6900964146479964 Loss (std): 1.8778432906277704 Loss ratio: 1.1110864885296363 Tokens per Sec: 3327.777616449386
Epoch Step: 55 / 67 Loss (mean): 0.8725951908127172 Loss (std): 1.0281579326963977 Loss ratio: 1.1782759560464602 Tokens per Sec: 2951.3894737170576
Epoch Step: 60 / 67 Loss (mean): 0.629378761863336 Loss (std): 0.7240863183083951 Loss ratio: 1.15047783971081 Tokens per Sec: 2949.9762643821236
Epoch Step: 65 / 67 Loss (mean): 4.96489781884884 Loss (std): 20.059062180896024 Loss ratio: 4.040176235801549 Tokens per Sec: 2372.7070985803566
Mean loss per sample: 1.2150651047295131 Std loss per sample: 5.4564762145986005 ratio: 4.490686296034542
Epoch ended with duration 0:00:11.460710
Train perplexity: 1.1786832927394237
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test java for developer[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 90.45202040672302 Loss (std): 41.82181805416549 Loss ratio: 0.4623646643392943 Tokens per Sec: 4076.2068033930173
Mean loss per sample: 101.16294601718423 Std loss per sample: 48.52542458258039 ratio: 0.4796758743496609
Epoch ended with duration 0:00:01.077750
b'BLEU = 2.18, 8.0/2.3/1.4/1.1 (BP=0.949, ratio=0.950, hyp_len=2957, ref_len=3113)\n'
Validation perplexity: 899317.2872980771
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.18
Epoch 365 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6322053099574987 Loss (std): 0.6247460386699165 Loss ratio: 0.9882011884903599 Tokens per Sec: 2900.353129036315
Epoch Step: 10 / 67 Loss (mean): 0.6602743347466458 Loss (std): 0.7658317053019625 Loss ratio: 1.1598689590075013 Tokens per Sec: 2647.914868651708
Epoch Step: 15 / 67 Loss (mean): 0.6237885995578836 Loss (std): 0.8116689127745667 Loss ratio: 1.30119228429286 Tokens per Sec: 2989.9918896573126
Epoch Step: 20 / 67 Loss (mean): 0.6652040566514188 Loss (std): 0.9467055369129103 Loss ratio: 1.4231806427617808 Tokens per Sec: 2815.6598416318725
Epoch Step: 25 / 67 Loss (mean): 1.1605636669846717 Loss (std): 1.5039159310783687 Loss ratio: 1.2958495719461738 Tokens per Sec: 2904.7689452217214
Epoch Step: 30 / 67 Loss (mean): 0.7398141018347815 Loss (std): 0.8388919972535674 Loss ratio: 1.133922691082891 Tokens per Sec: 2727.913146801757
Epoch Step: 35 / 67 Loss (mean): 0.965910455735866 Loss (std): 1.2747380126819299 Loss ratio: 1.3197269013003776 Tokens per Sec: 3023.2174308321155
Epoch Step: 40 / 67 Loss (mean): 0.7832831939376774 Loss (std): 1.0475488827622346 Loss ratio: 1.3373820488807573 Tokens per Sec: 2709.609529585471
Epoch Step: 45 / 67 Loss (mean): 0.7034055538388202 Loss (std): 0.8160365576521794 Loss ratio: 1.1601224261006726 Tokens per Sec: 2468.1913674626676
Epoch Step: 50 / 67 Loss (mean): 2.591523631298471 Loss (std): 8.729624910864805 Loss ratio: 3.3685299278906697 Tokens per Sec: 2377.2209552102017
Epoch Step: 55 / 67 Loss (mean): 0.7629085916378244 Loss (std): 0.9913726380298952 Loss ratio: 1.2994645084565117 Tokens per Sec: 2988.690938145641
Epoch Step: 60 / 67 Loss (mean): 0.8295332175694057 Loss (std): 1.2176466687367666 Loss ratio: 1.4678696921921492 Tokens per Sec: 2862.141320718838
Epoch Step: 65 / 67 Loss (mean): 0.8040640314720804 Loss (std): 0.8344440979771033 Loss ratio: 1.0377831432770386 Tokens per Sec: 3020.657791470178
Mean loss per sample: 1.109702971209749 Std loss per sample: 3.7621187497458624 ratio: 3.390203367343035
Epoch ended with duration 0:00:11.386760
Train perplexity: 1.1619998103832756
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print warnings[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 90.88176643848419 Loss (std): 42.60621691666764 Loss ratio: 0.4688092957073719 Tokens per Sec: 4435.295846300297
Mean loss per sample: 96.46604290824445 Std loss per sample: 50.21689323874084 ratio: 0.520565493564462
Epoch ended with duration 0:00:01.033216
b'BLEU = 2.47, 8.2/2.7/1.7/1.3 (BP=0.917, ratio=0.921, hyp_len=2866, ref_len=3113)\n'
Validation perplexity: 475858.9111066352
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.47
Model saved checkpoint_commit_msg_generator!
Epoch 366 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.8173342208610848 Loss (std): 0.9154135813304739 Loss ratio: 1.119999087235158 Tokens per Sec: 3050.605025353943
Epoch Step: 10 / 67 Loss (mean): 0.7311886502529887 Loss (std): 0.7582009402810764 Loss ratio: 1.0369429832078787 Tokens per Sec: 2678.594372411534
Epoch Step: 15 / 67 Loss (mean): 0.6848212067270651 Loss (std): 0.9107507206012493 Loss ratio: 1.3299102183969431 Tokens per Sec: 3071.555055811388
Epoch Step: 20 / 67 Loss (mean): 10.343865859991638 Loss (std): 21.31691487921431 Loss ratio: 2.0608266935928286 Tokens per Sec: 3186.28440619329
Epoch Step: 25 / 67 Loss (mean): 0.8487731061686645 Loss (std): 0.994011154219001 Loss ratio: 1.1711152803909357 Tokens per Sec: 2485.219060966714
Epoch Step: 30 / 67 Loss (mean): 0.8447156094698585 Loss (std): 1.2179055719630656 Loss ratio: 1.441793614690535 Tokens per Sec: 2861.4209350170568
Epoch Step: 35 / 67 Loss (mean): 0.648068972514011 Loss (std): 0.7634722105944205 Loss ratio: 1.1780724629243295 Tokens per Sec: 2753.221139637704
Epoch Step: 40 / 67 Loss (mean): 0.9039160288084531 Loss (std): 1.2921865613512693 Loss ratio: 1.4295427010566861 Tokens per Sec: 2525.4485475578635
Epoch Step: 45 / 67 Loss (mean): 6.368083235283848 Loss (std): 25.156310762449987 Loss ratio: 3.950374050242558 Tokens per Sec: 2231.12247948196
Epoch Step: 50 / 67 Loss (mean): 0.7465029431768926 Loss (std): 0.7772016074463327 Loss ratio: 1.0411232997137236 Tokens per Sec: 3115.886783755793
Epoch Step: 55 / 67 Loss (mean): 0.8164161176318885 Loss (std): 0.8628352840338667 Loss ratio: 1.0568572390959434 Tokens per Sec: 2922.7550835099605
Epoch Step: 60 / 67 Loss (mean): 0.7375645873946182 Loss (std): 2.1334939847035517 Loss ratio: 2.892619875148739 Tokens per Sec: 2572.4947664293136
Epoch Step: 65 / 67 Loss (mean): 0.8954016936186235 Loss (std): 1.020602350659299 Loss ratio: 1.1398262455085346 Tokens per Sec: 2951.753540886178
Mean loss per sample: 1.559571766840253 Std loss per sample: 6.652362163015829 ratio: 4.265505637162019
Epoch ended with duration 0:00:11.410103
Train perplexity: 1.2349242286594
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 90.34011259675026 Loss (std): 42.70539192765276 Loss ratio: 0.4727179400171455 Tokens per Sec: 4297.117721449387
Mean loss per sample: 96.76143814678319 Std loss per sample: 49.55005195188361 ratio: 0.5120846992447361
Epoch ended with duration 0:00:01.038464
b'BLEU = 2.83, 8.6/3.1/2.0/1.5 (BP=0.949, ratio=0.950, hyp_len=2958, ref_len=3113)\n'
Validation perplexity: 495294.60686251515
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.83
Epoch 367 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.7272071543629863 Loss (std): 0.8361442071831696 Loss ratio: 1.1498019541840305 Tokens per Sec: 2647.962946264057
Epoch Step: 10 / 67 Loss (mean): 0.841191199462628 Loss (std): 1.0246398677460609 Loss ratio: 1.2180820108444121 Tokens per Sec: 3074.6372906499246
Epoch Step: 15 / 67 Loss (mean): 0.520972633807105 Loss (std): 0.7084919167444558 Loss ratio: 1.3599407545978346 Tokens per Sec: 2906.3249597561967
Epoch Step: 20 / 67 Loss (mean): 0.8554512282717042 Loss (std): 1.0404696472899364 Loss ratio: 1.2162816685552382 Tokens per Sec: 2814.7093018786563
Epoch Step: 25 / 67 Loss (mean): 0.5566798053405364 Loss (std): 0.6328531240250602 Loss ratio: 1.1368350674009569 Tokens per Sec: 2865.5475786375823
Epoch Step: 30 / 67 Loss (mean): 1.0279239187511848 Loss (std): 1.1948943531700122 Loss ratio: 1.1624346231982599 Tokens per Sec: 2647.312614840212
Epoch Step: 35 / 67 Loss (mean): 1.0868277830486477 Loss (std): 2.015446557369897 Loss ratio: 1.8544304707746724 Tokens per Sec: 2476.4155325583097
Epoch Step: 40 / 67 Loss (mean): 0.770938071407727 Loss (std): 0.9845287739011944 Loss ratio: 1.2770529961031143 Tokens per Sec: 2389.812500149062
Epoch Step: 45 / 67 Loss (mean): 0.5207098767859861 Loss (std): 0.6717084269710258 Loss ratio: 1.289985953631336 Tokens per Sec: 3006.510418986283
Epoch Step: 50 / 67 Loss (mean): 0.7833715321612544 Loss (std): 1.00769966014754 Loss ratio: 1.286362369292874 Tokens per Sec: 3256.8543993261956
Epoch Step: 55 / 67 Loss (mean): 2.154386647976935 Loss (std): 2.5090538181011133 Loss ratio: 1.1646255886598753 Tokens per Sec: 2997.8007063367886
Epoch Step: 60 / 67 Loss (mean): 0.44970131023728754 Loss (std): 0.4849850592842889 Loss ratio: 1.0784604097070203 Tokens per Sec: 2622.3342246682378
Epoch Step: 65 / 67 Loss (mean): 0.6666228235699236 Loss (std): 0.752703754132804 Loss ratio: 1.1291298880255802 Tokens per Sec: 2531.479920513361
Mean loss per sample: 1.344573767788796 Std loss per sample: 5.533189856625313 ratio: 4.115199916271504
Epoch ended with duration 0:00:11.391541
Train perplexity: 1.1995187647478922
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 108.30369734764099 Loss (std): 42.18377546080982 Loss ratio: 0.38949524802837804 Tokens per Sec: 4321.575765273391
Mean loss per sample: 99.33615735661787 Std loss per sample: 49.8832966415827 ratio: 0.5021665621964934
Epoch ended with duration 0:00:01.047082
b'BLEU = 2.44, 8.0/2.6/1.7/1.2 (BP=0.955, ratio=0.956, hyp_len=2976, ref_len=3113)\n'
Validation perplexity: 702098.2288789047
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.44
Epoch 368 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.7894709507090738 Loss (std): 0.9338534804544453 Loss ratio: 1.1828851709055188 Tokens per Sec: 2775.3693101640333
Epoch Step: 10 / 67 Loss (mean): 0.8056923243275378 Loss (std): 1.1056435320826326 Loss ratio: 1.3722900153050928 Tokens per Sec: 2274.840221952108
Epoch Step: 15 / 67 Loss (mean): 0.6178975322545739 Loss (std): 0.8015647597860235 Loss ratio: 1.2972454459581475 Tokens per Sec: 2465.815535557974
Epoch Step: 20 / 67 Loss (mean): 0.5294388159527443 Loss (std): 0.6573573740922247 Loss ratio: 1.241611597572963 Tokens per Sec: 2818.155448116922
Epoch Step: 25 / 67 Loss (mean): 0.9645759789855219 Loss (std): 0.9757303539207355 Loss ratio: 1.0115640189868143 Tokens per Sec: 2544.8874653944986
Epoch Step: 30 / 67 Loss (mean): 0.5911001907225 Loss (std): 0.8538810826063712 Loss ratio: 1.4445623534018404 Tokens per Sec: 3376.4231178441883
Epoch Step: 35 / 67 Loss (mean): 0.5327559090146678 Loss (std): 0.7652031448047069 Loss ratio: 1.436310948141242 Tokens per Sec: 2148.8717538944375
Epoch Step: 40 / 67 Loss (mean): 0.7830148124485277 Loss (std): 1.1147216277877154 Loss ratio: 1.423627765484951 Tokens per Sec: 2493.7965009259906
Epoch Step: 45 / 67 Loss (mean): 0.740864229737781 Loss (std): 0.7527747012868511 Loss ratio: 1.016076456482837 Tokens per Sec: 2852.4717343831176
Epoch Step: 50 / 67 Loss (mean): 1.1363764575798996 Loss (std): 1.2750020213873197 Loss ratio: 1.1219891197875096 Tokens per Sec: 3622.2316886600083
Epoch Step: 55 / 67 Loss (mean): 1.2545877837692387 Loss (std): 1.422070879459408 Loss ratio: 1.1334965140398459 Tokens per Sec: 3587.3306877443997
Epoch Step: 60 / 67 Loss (mean): 0.943416970607359 Loss (std): 1.0736796872572973 Loss ratio: 1.1380754435295741 Tokens per Sec: 2926.34117774353
Epoch Step: 65 / 67 Loss (mean): 0.6106149130355334 Loss (std): 0.7212522875591042 Loss ratio: 1.1811900956915091 Tokens per Sec: 2886.1214367883704
Mean loss per sample: 1.1984871164746322 Std loss per sample: 5.617607516881381 ratio: 4.6872489822048795
Epoch ended with duration 0:00:11.403954
Train perplexity: 1.1760424723403426
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test java for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 90.04169851541519 Loss (std): 41.5100360163275 Loss ratio: 0.4610090291579846 Tokens per Sec: 4414.784053947897
Mean loss per sample: 96.39178259646306 Std loss per sample: 49.04662022647099 ratio: 0.508825741212827
Epoch ended with duration 0:00:01.032381
b'BLEU = 2.48, 8.3/2.7/1.7/1.3 (BP=0.927, ratio=0.930, hyp_len=2895, ref_len=3113)\n'
Validation perplexity: 471094.0721748766
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.48
Epoch 369 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6894721921707969 Loss (std): 0.852840313506776 Loss ratio: 1.2369466429409082 Tokens per Sec: 2876.479822828042
Epoch Step: 10 / 67 Loss (mean): 0.7011932409077417 Loss (std): 0.7742275817744843 Loss ratio: 1.104157223153199 Tokens per Sec: 2361.3272271313767
Epoch Step: 15 / 67 Loss (mean): 0.6150427008833503 Loss (std): 0.7525108215739902 Loss ratio: 1.223509880685036 Tokens per Sec: 2435.4433684165747
Epoch Step: 20 / 67 Loss (mean): 1.7591099700075574 Loss (std): 1.8199832402075573 Loss ratio: 1.0346045848399905 Tokens per Sec: 2608.3468655688184
Epoch Step: 25 / 67 Loss (mean): 0.6260882068309002 Loss (std): 0.8013864907941293 Loss ratio: 1.2799897555179078 Tokens per Sec: 2689.9432658311134
Epoch Step: 30 / 67 Loss (mean): 0.9572114395850804 Loss (std): 1.4629686077717676 Loss ratio: 1.5283651524326918 Tokens per Sec: 3170.2583795491214
Epoch Step: 35 / 67 Loss (mean): 0.6594186995935161 Loss (std): 0.7606352565531845 Loss ratio: 1.1534936103905775 Tokens per Sec: 2869.223792704025
Epoch Step: 40 / 67 Loss (mean): 0.7451327475137077 Loss (std): 0.9433217571296681 Loss ratio: 1.265978123062313 Tokens per Sec: 3099.052630543229
Epoch Step: 45 / 67 Loss (mean): 0.7234223696941626 Loss (std): 0.6773289635531201 Loss ratio: 0.9362842399240029 Tokens per Sec: 2400.127302834173
Epoch Step: 50 / 67 Loss (mean): 0.8509795671561733 Loss (std): 1.0846127345538243 Loss ratio: 1.2745461541202603 Tokens per Sec: 2466.5076525436048
Epoch Step: 55 / 67 Loss (mean): 0.804019000614062 Loss (std): 0.9564642985864862 Loss ratio: 1.1896040987290046 Tokens per Sec: 3279.399970713933
Epoch Step: 60 / 67 Loss (mean): 5.936896303348476 Loss (std): 13.34909815531592 Loss ratio: 2.2484977795193895 Tokens per Sec: 2920.312278984303
Epoch Step: 65 / 67 Loss (mean): 0.720783204829786 Loss (std): 0.8029023282879375 Loss ratio: 1.1139304064077686 Tokens per Sec: 2754.8420834643957
Mean loss per sample: 1.5191231370206915 Std loss per sample: 6.869058460545327 ratio: 4.521725917503267
Epoch ended with duration 0:00:11.439754
Train perplexity: 1.2281843330622393
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a unit testing extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 107.41007536649704 Loss (std): 42.755605120909046 Loss ratio: 0.3980595393404334 Tokens per Sec: 4326.091063401006
Mean loss per sample: 98.83413979227915 Std loss per sample: 48.78305248859476 ratio: 0.4935850364167955
Epoch ended with duration 0:00:01.050633
b'BLEU = 2.43, 7.8/2.6/1.6/1.2 (BP=0.983, ratio=0.983, hyp_len=3059, ref_len=3113)\n'
Validation perplexity: 655921.3900110237
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.43
Epoch 370 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6350413383333944 Loss (std): 0.748122496542118 Loss ratio: 1.178068971864878 Tokens per Sec: 2100.971826602439
Epoch Step: 10 / 67 Loss (mean): 0.682500179274939 Loss (std): 0.9430192374449278 Loss ratio: 1.3817128054775807 Tokens per Sec: 2823.225872209541
Epoch Step: 15 / 67 Loss (mean): 0.512627543284907 Loss (std): 0.716523375770137 Loss ratio: 1.397746541628781 Tokens per Sec: 2960.385893441325
Epoch Step: 20 / 67 Loss (mean): 0.5184157850308111 Loss (std): 0.6000970834006932 Loss ratio: 1.157559435357524 Tokens per Sec: 2219.4087698482303
Epoch Step: 25 / 67 Loss (mean): 0.9371048800239805 Loss (std): 0.9999007902421275 Loss ratio: 1.0670105465852873 Tokens per Sec: 3080.4380680059244
Epoch Step: 30 / 67 Loss (mean): 0.7997880652546883 Loss (std): 1.0485519389702511 Loss ratio: 1.311037241642691 Tokens per Sec: 2977.879288234004
Epoch Step: 35 / 67 Loss (mean): 0.601773581955058 Loss (std): 0.5422586141629202 Loss ratio: 0.9011007302800099 Tokens per Sec: 2788.8407392064078
Epoch Step: 40 / 67 Loss (mean): 0.9076920785500988 Loss (std): 1.2432990480063217 Loss ratio: 1.3697365851118855 Tokens per Sec: 2819.351227832475
Epoch Step: 45 / 67 Loss (mean): 0.7669739836710505 Loss (std): 0.8708248588349261 Loss ratio: 1.1354033870442422 Tokens per Sec: 3017.159979727494
Epoch Step: 50 / 67 Loss (mean): 0.8917360102204839 Loss (std): 1.3251284271665449 Loss ratio: 1.4860097741694918 Tokens per Sec: 2972.793462705742
Epoch Step: 55 / 67 Loss (mean): 0.6431603385135531 Loss (std): 0.6553895199009656 Loss ratio: 1.0190142032322391 Tokens per Sec: 2883.5757068018656
Epoch Step: 60 / 67 Loss (mean): 0.5112849455326796 Loss (std): 0.5276065619970647 Loss ratio: 1.0319227401608324 Tokens per Sec: 2417.3899779102853
Epoch Step: 65 / 67 Loss (mean): 0.45916014744580025 Loss (std): 0.43200794500474493 Loss ratio: 0.9408655071828498 Tokens per Sec: 3093.812773583754
Mean loss per sample: 1.1489780229829387 Std loss per sample: 4.372353672061727 ratio: 3.8054284630356694
Epoch ended with duration 0:00:11.483380
Train perplexity: 1.1681910001265827
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 91.16872072219849 Loss (std): 42.745121067406814 Loss ratio: 0.46885730905072237 Tokens per Sec: 4285.661362400762
Mean loss per sample: 97.28537616707752 Std loss per sample: 49.37464972644329 ratio: 0.5075238609515932
Epoch ended with duration 0:00:01.041870
b'BLEU = 2.62, 8.6/2.7/1.7/1.3 (BP=0.963, ratio=0.964, hyp_len=3001, ref_len=3113)\n'
Validation perplexity: 531740.5791710106
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.62
Model saved checkpoint_commit_msg_generator!
Epoch 371 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.49360265127324965 Loss (std): 0.6211120307600018 Loss ratio: 1.2583239355741733 Tokens per Sec: 2810.6448840168846
Epoch Step: 10 / 67 Loss (mean): 0.7235329742252361 Loss (std): 1.0062607896043412 Loss ratio: 1.390760097260048 Tokens per Sec: 3096.126124408154
Epoch Step: 15 / 67 Loss (mean): 0.6127562749170465 Loss (std): 0.8361465875399596 Loss ratio: 1.3645663402682495 Tokens per Sec: 2554.1207159216588
Epoch Step: 20 / 67 Loss (mean): 0.9960491240490228 Loss (std): 0.9805076474351812 Loss ratio: 0.9843968773842556 Tokens per Sec: 2962.9802393916407
Epoch Step: 25 / 67 Loss (mean): 0.8753767392263399 Loss (std): 1.2465491325149154 Loss ratio: 1.4240144576112665 Tokens per Sec: 2501.5390537811254
Epoch Step: 30 / 67 Loss (mean): 0.8659792438920704 Loss (std): 1.1441279561239883 Loss ratio: 1.3211955877623605 Tokens per Sec: 2429.3293364403294
Epoch Step: 35 / 67 Loss (mean): 4.204253285948653 Loss (std): 12.252531561606016 Loss ratio: 2.9143181269682565 Tokens per Sec: 2681.3340324750775
Epoch Step: 40 / 67 Loss (mean): 8.973264762898907 Loss (std): 19.21806305180054 Loss ratio: 2.1417024415974044 Tokens per Sec: 2993.7565551678113
Epoch Step: 45 / 67 Loss (mean): 0.7917684973217547 Loss (std): 0.7449701702592703 Loss ratio: 0.9408939264181576 Tokens per Sec: 2675.0992757600743
Epoch Step: 50 / 67 Loss (mean): 0.6503379827627214 Loss (std): 0.8121271164544315 Loss ratio: 1.2487770020819153 Tokens per Sec: 2444.929564197623
Epoch Step: 55 / 67 Loss (mean): 0.5840258041280322 Loss (std): 1.0651709567863337 Loss ratio: 1.8238422844632105 Tokens per Sec: 2928.2902573421484
Epoch Step: 60 / 67 Loss (mean): 0.9177944444236346 Loss (std): 1.506962458042513 Loss ratio: 1.6419389626931875 Tokens per Sec: 3028.3211054607136
Epoch Step: 65 / 67 Loss (mean): 1.640253913210472 Loss (std): 2.5385589688888373 Loss ratio: 1.547662193300372 Tokens per Sec: 2870.0565593136407
Mean loss per sample: 1.37897783968498 Std loss per sample: 6.18915564236727 ratio: 4.488219798935384
Epoch ended with duration 0:00:11.440796
Train perplexity: 1.2051153736062117
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 90.62715864181519 Loss (std): 42.433884583721 Loss ratio: 0.4682248149413138 Tokens per Sec: 4435.7816282984295
Mean loss per sample: 96.88777598714242 Std loss per sample: 49.08874399812956 ratio: 0.5066557003501032
Epoch ended with duration 0:00:01.035646
b'BLEU = 2.48, 7.8/2.7/1.8/1.4 (BP=0.921, ratio=0.924, hyp_len=2875, ref_len=3113)\n'
Validation perplexity: 503847.5747105023
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.48
Epoch 372 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5813664733850601 Loss (std): 0.9263895718689779 Loss ratio: 1.5934692045019192 Tokens per Sec: 2741.7784787740857
Epoch Step: 10 / 67 Loss (mean): 0.5487874356622342 Loss (std): 0.7588345834848165 Loss ratio: 1.3827477346836734 Tokens per Sec: 2784.515751376555
Epoch Step: 15 / 67 Loss (mean): 0.9512072686338797 Loss (std): 0.9486888994531907 Loss ratio: 0.9973524496040638 Tokens per Sec: 3037.6215657685466
Epoch Step: 20 / 67 Loss (mean): 0.6983598004735541 Loss (std): 0.8005689606682266 Loss ratio: 1.14635601895379 Tokens per Sec: 2580.1424769891123
Epoch Step: 25 / 67 Loss (mean): 0.950143029440369 Loss (std): 0.9302757313696288 Loss ratio: 0.9790902027851092 Tokens per Sec: 2640.387303392089
Epoch Step: 30 / 67 Loss (mean): 0.7870061575340515 Loss (std): 1.1287278856568552 Loss ratio: 1.4342046435742384 Tokens per Sec: 2926.2115287926576
Epoch Step: 35 / 67 Loss (mean): 0.4554819800250698 Loss (std): 0.3827878449854611 Loss ratio: 0.8404017321703756 Tokens per Sec: 2627.3732376996186
Epoch Step: 40 / 67 Loss (mean): 1.6263163618277758 Loss (std): 1.7300738629806736 Loss ratio: 1.0637990882882635 Tokens per Sec: 3260.780361476492
Epoch Step: 45 / 67 Loss (mean): 0.7769991192180896 Loss (std): 1.2001330206649283 Loss ratio: 1.5445744930478778 Tokens per Sec: 3023.0931939641528
Epoch Step: 50 / 67 Loss (mean): 0.35856434772168067 Loss (std): 0.4066790842602535 Loss ratio: 1.1341871740575828 Tokens per Sec: 3077.855673549623
Epoch Step: 55 / 67 Loss (mean): 0.4506620677202591 Loss (std): 0.4835149273324186 Loss ratio: 1.0728991010456028 Tokens per Sec: 2828.6678208921467
Epoch Step: 60 / 67 Loss (mean): 0.5553864008834353 Loss (std): 0.6879994730282957 Loss ratio: 1.2387762320681908 Tokens per Sec: 2780.6625439811132
Epoch Step: 65 / 67 Loss (mean): 0.5914763963228324 Loss (std): 0.6430626505760865 Loss ratio: 1.0872160826263941 Tokens per Sec: 2237.853874176399
Mean loss per sample: 1.0423366841404387 Std loss per sample: 3.9847172358496747 ratio: 3.8228696125529398
Epoch ended with duration 0:00:11.404222
Train perplexity: 1.1514567223288743
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint print not during logging tweaks[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test java 7[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 90.89671629667282 Loss (std): 42.764532391514024 Loss ratio: 0.47047389756014074 Tokens per Sec: 4409.4889075297615
Mean loss per sample: 95.89426557597567 Std loss per sample: 49.909284024183606 ratio: 0.5204616118013979
Epoch ended with duration 0:00:01.022339
b'BLEU = 2.37, 7.6/2.5/1.6/1.3 (BP=0.944, ratio=0.945, hyp_len=2942, ref_len=3113)\n'
Validation perplexity: 440378.83056298364
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.37
Epoch 373 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.806045316028758 Loss (std): 8.341256519507363 Loss ratio: 2.9726022141767423 Tokens per Sec: 2501.3648540228687
Epoch Step: 10 / 67 Loss (mean): 0.6117393822933082 Loss (std): 0.6321299813158247 Loss ratio: 1.0333321666263753 Tokens per Sec: 2958.7709730985985
Epoch Step: 15 / 67 Loss (mean): 0.6999575329246 Loss (std): 0.9692059590599269 Loss ratio: 1.3846639452687062 Tokens per Sec: 2722.1429821648503
Epoch Step: 20 / 67 Loss (mean): 0.6287315908048186 Loss (std): 0.7235143487223188 Loss ratio: 1.1507523390007681 Tokens per Sec: 2956.5725918238854
Epoch Step: 25 / 67 Loss (mean): 0.649488680268405 Loss (std): 0.9199051529936314 Loss ratio: 1.416352864862056 Tokens per Sec: 3040.57717503309
Epoch Step: 30 / 67 Loss (mean): 0.6545224394467368 Loss (std): 0.969339001619534 Loss ratio: 1.480986660195958 Tokens per Sec: 2351.990754115079
Epoch Step: 35 / 67 Loss (mean): 0.8566906136402395 Loss (std): 0.9702172569997393 Loss ratio: 1.1325176692167827 Tokens per Sec: 2571.385058257522
Epoch Step: 40 / 67 Loss (mean): 0.590440725965891 Loss (std): 0.7482385862821472 Loss ratio: 1.2672543633539466 Tokens per Sec: 2884.6239828569774
Epoch Step: 45 / 67 Loss (mean): 2.968212840817614 Loss (std): 11.80889535541113 Loss ratio: 3.9784530250055417 Tokens per Sec: 2897.1318704952623
Epoch Step: 50 / 67 Loss (mean): 0.5157839189560036 Loss (std): 0.5562443667881337 Loss ratio: 1.078444570187504 Tokens per Sec: 2779.8172337055285
Epoch Step: 55 / 67 Loss (mean): 0.7163353299547452 Loss (std): 0.9402281503639701 Loss ratio: 1.3125530893797592 Tokens per Sec: 3486.143244834508
Epoch Step: 60 / 67 Loss (mean): 0.6210919866425684 Loss (std): 0.7095426274123662 Loss ratio: 1.1424114988955738 Tokens per Sec: 2765.5254402942614
Epoch Step: 65 / 67 Loss (mean): 0.8003134499158477 Loss (std): 1.2205678121386714 Loss ratio: 1.525112207307041 Tokens per Sec: 2399.734587325002
Mean loss per sample: 1.242212896730789 Std loss per sample: 5.431594242346501 ratio: 4.372514773144904
Epoch ended with duration 0:00:11.436964
Train perplexity: 1.183020661690843
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use command[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 90.99395322799683 Loss (std): 42.75095925516046 Loss ratio: 0.46982197979730084 Tokens per Sec: 4300.0805731941955
Mean loss per sample: 97.624507689818 Std loss per sample: 49.60038545989422 ratio: 0.5080730918253574
Epoch ended with duration 0:00:01.036980
b'BLEU = 2.79, 8.3/2.8/1.9/1.5 (BP=0.972, ratio=0.972, hyp_len=3026, ref_len=3113)\n'
Validation perplexity: 556748.7901199361
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.79
Epoch 374 / 1000
Epoch Step: 5 / 67 Loss (mean): 4.86669789039297 Loss (std): 13.69836431182626 Loss ratio: 2.8147143341006036 Tokens per Sec: 2572.691521016374
Epoch Step: 10 / 67 Loss (mean): 3.692630185003509 Loss (std): 10.923434719066421 Loss ratio: 2.9581718644419417 Tokens per Sec: 2799.961077469294
Epoch Step: 15 / 67 Loss (mean): 0.46195060790341813 Loss (std): 0.410901772422922 Loss ratio: 0.889492870867335 Tokens per Sec: 3107.062728717059
Epoch Step: 20 / 67 Loss (mean): 0.5709928358410252 Loss (std): 0.6947701261134364 Loss ratio: 1.2167755574202563 Tokens per Sec: 3344.617247089727
Epoch Step: 25 / 67 Loss (mean): 0.6947252975660376 Loss (std): 0.8063472260100409 Loss ratio: 1.1606705971915368 Tokens per Sec: 2598.877777710795
Epoch Step: 30 / 67 Loss (mean): 0.6831800603249576 Loss (std): 1.1413494019371309 Loss ratio: 1.670642145782538 Tokens per Sec: 2425.4264901262645
Epoch Step: 35 / 67 Loss (mean): 8.575651991239283 Loss (std): 17.84248805122933 Loss ratio: 2.0805984279045915 Tokens per Sec: 2647.742593862434
Epoch Step: 40 / 67 Loss (mean): 2.00412680656882 Loss (std): 6.3283818009436485 Loss ratio: 3.1576753427983935 Tokens per Sec: 3049.837612209279
Epoch Step: 45 / 67 Loss (mean): 0.8667220753268339 Loss (std): 1.0366398952959204 Loss ratio: 1.1960464891874503 Tokens per Sec: 3115.291242628097
Epoch Step: 50 / 67 Loss (mean): 1.0452907766739372 Loss (std): 1.3934772146681047 Loss ratio: 1.3331000768054984 Tokens per Sec: 2412.4291192413175
Epoch Step: 55 / 67 Loss (mean): 0.7483102945225255 Loss (std): 0.9489657842657048 Loss ratio: 1.2681447672335064 Tokens per Sec: 2583.689486351922
Epoch Step: 60 / 67 Loss (mean): 0.7438949113857234 Loss (std): 0.8197045362977178 Loss ratio: 1.1019090516035075 Tokens per Sec: 2842.9915549169364
Epoch Step: 65 / 67 Loss (mean): 0.6823205552354921 Loss (std): 0.8029999197567943 Loss ratio: 1.1768660838301312 Tokens per Sec: 2518.824412333179
Mean loss per sample: 1.5610750650579222 Std loss per sample: 6.989454950928761 ratio: 4.4773343110630135
Epoch ended with duration 0:00:11.435870
Train perplexity: 1.2351754326312647
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 105.65238603949547 Loss (std): 43.26557204025437 Loss ratio: 0.40950870739521805 Tokens per Sec: 4317.453710037804
Mean loss per sample: 99.60081840880582 Std loss per sample: 49.45820132005692 ratio: 0.4965642060997791
Epoch ended with duration 0:00:01.059340
b'BLEU = 2.22, 7.5/2.5/1.5/1.2 (BP=0.931, ratio=0.933, hyp_len=2905, ref_len=3113)\n'
Validation perplexity: 727736.9383784279
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.22
Epoch 375 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6162544711623923 Loss (std): 0.9314039898435452 Loss ratio: 1.5113951028813004 Tokens per Sec: 2678.4315444051767
Epoch Step: 10 / 67 Loss (mean): 0.5376576328708325 Loss (std): 0.6124843709961656 Loss ratio: 1.1391717210928345 Tokens per Sec: 2951.708380498095
Epoch Step: 15 / 67 Loss (mean): 0.6671368189563509 Loss (std): 1.1413059325035013 Loss ratio: 1.7107524274989447 Tokens per Sec: 2833.328405979834
Epoch Step: 20 / 67 Loss (mean): 0.6830796406138688 Loss (std): 0.7411275548691965 Loss ratio: 1.0849797165717914 Tokens per Sec: 2943.8195694745887
Epoch Step: 25 / 67 Loss (mean): 0.4541226889123209 Loss (std): 0.39647181382189084 Loss ratio: 0.8730500005879228 Tokens per Sec: 2500.4018123724136
Epoch Step: 30 / 67 Loss (mean): 0.5387644786005694 Loss (std): 0.7093273496207664 Loss ratio: 1.3165815078663516 Tokens per Sec: 2543.7884148000494
Epoch Step: 35 / 67 Loss (mean): 0.7258597415566328 Loss (std): 0.9573097085703093 Loss ratio: 1.318863209739837 Tokens per Sec: 2775.7194661194394
Epoch Step: 40 / 67 Loss (mean): 4.7904012269718805 Loss (std): 12.942496710774837 Loss ratio: 2.701756303397592 Tokens per Sec: 2930.8595907937543
Epoch Step: 45 / 67 Loss (mean): 0.9183016426977701 Loss (std): 1.0898715559688568 Loss ratio: 1.1868339391913223 Tokens per Sec: 2452.9171266198105
Epoch Step: 50 / 67 Loss (mean): 0.685916436923435 Loss (std): 0.9805994205036962 Loss ratio: 1.4296193642800181 Tokens per Sec: 2483.7846888050453
Epoch Step: 55 / 67 Loss (mean): 7.174930125969695 Loss (std): 18.790657435616033 Loss ratio: 2.6189324642484193 Tokens per Sec: 3029.983520321074
Epoch Step: 60 / 67 Loss (mean): 0.6925016920722555 Loss (std): 0.8966370363281453 Loss ratio: 1.2947795602419847 Tokens per Sec: 2800.516623717166
Epoch Step: 65 / 67 Loss (mean): 0.9188379933184478 Loss (std): 1.2690464987308177 Loss ratio: 1.381142821649731 Tokens per Sec: 3085.000972103573
Mean loss per sample: 1.183504279688268 Std loss per sample: 4.786262055995903 ratio: 4.044144274033882
Epoch ended with duration 0:00:11.382495
Train perplexity: 1.1736608449595594
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) will[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 91.3161329627037 Loss (std): 42.61655151490717 Loss ratio: 0.46669246859493135 Tokens per Sec: 4389.324349406086
Mean loss per sample: 95.81308315279054 Std loss per sample: 49.80948644713249 ratio: 0.5198610127982485
Epoch ended with duration 0:00:01.023011
b'BLEU = 2.64, 8.4/3.0/2.0/1.5 (BP=0.892, ratio=0.898, hyp_len=2794, ref_len=3113)\n'
Validation perplexity: 435560.48046701314
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.64
Model saved checkpoint_commit_msg_generator!
Epoch 376 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5358496186818229 Loss (std): 0.7603956385812297 Loss ratio: 1.4190467102538666 Tokens per Sec: 2593.9880060851597
Epoch Step: 10 / 67 Loss (mean): 0.5474096221005311 Loss (std): 0.6463346713727847 Loss ratio: 1.1807148527873084 Tokens per Sec: 2677.8708194424785
Epoch Step: 15 / 67 Loss (mean): 0.6112800896953559 Loss (std): 0.8381860680804695 Loss ratio: 1.3711980517772089 Tokens per Sec: 2828.0869085546647
Epoch Step: 20 / 67 Loss (mean): 0.8443258951083408 Loss (std): 1.0052644294273856 Loss ratio: 1.1906118659293208 Tokens per Sec: 2577.570699759443
Epoch Step: 25 / 67 Loss (mean): 0.6112050573865417 Loss (std): 0.6513005750415869 Loss ratio: 1.0656007622490724 Tokens per Sec: 2402.3035471745793
Epoch Step: 30 / 67 Loss (mean): 0.6485526290125563 Loss (std): 0.752442562357379 Loss ratio: 1.1601873598184296 Tokens per Sec: 2808.8831706163246
Epoch Step: 35 / 67 Loss (mean): 1.5699634239135776 Loss (std): 1.7117796259850713 Loss ratio: 1.0903308955555007 Tokens per Sec: 3866.1137205398018
Epoch Step: 40 / 67 Loss (mean): 0.7487771784362849 Loss (std): 1.0779033282305839 Loss ratio: 1.4395515238346772 Tokens per Sec: 2295.468327998639
Epoch Step: 45 / 67 Loss (mean): 0.879582400459185 Loss (std): 1.3430079750857222 Loss ratio: 1.5268699946526971 Tokens per Sec: 2570.3305490160906
Epoch Step: 50 / 67 Loss (mean): 0.5964064547733869 Loss (std): 0.5929297477103505 Loss ratio: 0.9941705743872985 Tokens per Sec: 3167.0289651343287
Epoch Step: 55 / 67 Loss (mean): 0.6012183594502858 Loss (std): 0.7708930899501704 Loss ratio: 1.2822181455919341 Tokens per Sec: 2682.6188132771827
Epoch Step: 60 / 67 Loss (mean): 4.401801721367519 Loss (std): 12.11930772504621 Loss ratio: 2.753260708272219 Tokens per Sec: 2809.780273262432
Epoch Step: 65 / 67 Loss (mean): 0.9518644814670552 Loss (std): 1.2466508332850408 Loss ratio: 1.3096936145402212 Tokens per Sec: 2935.693476614112
Mean loss per sample: 1.1583552265140962 Std loss per sample: 4.603423221630783 ratio: 3.9741032079460847
Epoch ended with duration 0:00:11.425729
Train perplexity: 1.1696740631598581
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use engines[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 91.245011895895 Loss (std): 42.33708421927575 Loss ratio: 0.46399341004612704 Tokens per Sec: 4303.225215862123
Mean loss per sample: 97.21956515458764 Std loss per sample: 49.15208543144296 ratio: 0.5055781246633518
Epoch ended with duration 0:00:01.034142
b'BLEU = 2.78, 8.2/2.9/1.9/1.5 (BP=0.962, ratio=0.962, hyp_len=2996, ref_len=3113)\n'
Validation perplexity: 527019.2979088731
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.78
Epoch 377 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6968602932065551 Loss (std): 0.6882487079557976 Loss ratio: 0.9876423074542936 Tokens per Sec: 2627.1802383276063
Epoch Step: 10 / 67 Loss (mean): 0.6501250203727977 Loss (std): 0.9079254524497297 Loss ratio: 1.396539779270613 Tokens per Sec: 2506.916668011616
Epoch Step: 15 / 67 Loss (mean): 0.9060626210011833 Loss (std): 1.0143934623760713 Loss ratio: 1.119562201181177 Tokens per Sec: 2747.8088888620355
Epoch Step: 20 / 67 Loss (mean): 0.5116801229014527 Loss (std): 0.5062993461292736 Loss ratio: 0.9894841004538779 Tokens per Sec: 2530.0464842690544
Epoch Step: 25 / 67 Loss (mean): 12.122906741307816 Loss (std): 27.729018571145208 Loss ratio: 2.287324250104213 Tokens per Sec: 3558.6273676478886
Epoch Step: 30 / 67 Loss (mean): 0.7667472636094317 Loss (std): 1.2491178948098993 Loss ratio: 1.6291129477655093 Tokens per Sec: 3482.913008180516
Epoch Step: 35 / 67 Loss (mean): 0.7875542897672858 Loss (std): 1.0845239022807893 Loss ratio: 1.3770782743133239 Tokens per Sec: 2439.4075779598506
Epoch Step: 40 / 67 Loss (mean): 0.5890899806836387 Loss (std): 0.7978234290903269 Loss ratio: 1.3543320294880132 Tokens per Sec: 3036.8078057594794
Epoch Step: 45 / 67 Loss (mean): 9.470925289642764 Loss (std): 20.311834792108787 Loss ratio: 2.1446515700341813 Tokens per Sec: 2917.555554490421
Epoch Step: 50 / 67 Loss (mean): 0.626698943797237 Loss (std): 0.7610834309520081 Loss ratio: 1.2144322860040595 Tokens per Sec: 3238.062621791356
Epoch Step: 55 / 67 Loss (mean): 0.6372919945861213 Loss (std): 0.8158530873974981 Loss ratio: 1.2801872521987983 Tokens per Sec: 2665.1476482850226
Epoch Step: 60 / 67 Loss (mean): 0.6642919119985891 Loss (std): 0.7981255503964527 Loss ratio: 1.2014681136116978 Tokens per Sec: 2720.8301573952485
Epoch Step: 65 / 67 Loss (mean): 5.402970210227068 Loss (std): 15.471533020220722 Loss ratio: 2.8635236579567422 Tokens per Sec: 2373.768638724517
Mean loss per sample: 1.2244626380666175 Std loss per sample: 5.665354102315022 ratio: 4.626808467802997
Epoch ended with duration 0:00:11.370583
Train perplexity: 1.1801829223650573
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings from regaining ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 91.07498908042908 Loss (std): 41.89674400226065 Loss ratio: 0.4600246942139217 Tokens per Sec: 4351.433629796797
Mean loss per sample: 95.36285943831088 Std loss per sample: 49.659727528403685 ratio: 0.5207449506118048
Epoch ended with duration 0:00:01.036890
b'BLEU = 2.26, 8.1/2.7/1.5/1.1 (BP=0.913, ratio=0.917, hyp_len=2854, ref_len=3113)\n'
Validation perplexity: 409779.94045071164
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.26
Epoch 378 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.39570702811761294 Loss (std): 0.5720379460386292 Loss ratio: 1.4456097703389965 Tokens per Sec: 3188.9759062068674
Epoch Step: 10 / 67 Loss (mean): 0.5656247217630153 Loss (std): 0.7559111569050354 Loss ratio: 1.3364181723686153 Tokens per Sec: 2676.4365881760605
Epoch Step: 15 / 67 Loss (mean): 0.6200594819383696 Loss (std): 0.6818336282444925 Loss ratio: 1.0996261618530703 Tokens per Sec: 2801.500316133129
Epoch Step: 20 / 67 Loss (mean): 0.4745591488535865 Loss (std): 0.6363639932069418 Loss ratio: 1.3409582235306903 Tokens per Sec: 2857.4778877292006
Epoch Step: 25 / 67 Loss (mean): 0.5098328084332024 Loss (std): 0.969045967373428 Loss ratio: 1.9007132364656187 Tokens per Sec: 2225.1504764806223
Epoch Step: 30 / 67 Loss (mean): 0.5858710327593144 Loss (std): 0.5895031654333946 Loss ratio: 1.006199543023955 Tokens per Sec: 3002.8908910117952
Epoch Step: 35 / 67 Loss (mean): 3.7521790079190396 Loss (std): 13.338988658306901 Loss ratio: 3.554997943902658 Tokens per Sec: 2641.0340525546826
Epoch Step: 40 / 67 Loss (mean): 0.5383057674553129 Loss (std): 0.6301900156565756 Loss ratio: 1.1706915544219771 Tokens per Sec: 3243.5793214734863
Epoch Step: 45 / 67 Loss (mean): 0.7285238423501141 Loss (std): 0.7479282345006635 Loss ratio: 1.0266352190862464 Tokens per Sec: 2895.7408347014893
Epoch Step: 50 / 67 Loss (mean): 1.2448784778825939 Loss (std): 1.8950168529241325 Loss ratio: 1.5222504739156186 Tokens per Sec: 2825.0508611329524
Epoch Step: 55 / 67 Loss (mean): 0.6090018482645974 Loss (std): 0.6313212293301629 Loss ratio: 1.0366491187656761 Tokens per Sec: 2351.961396592759
Epoch Step: 60 / 67 Loss (mean): 0.906187703309115 Loss (std): 1.6023026132449616 Loss ratio: 1.7681796027399752 Tokens per Sec: 2808.2026826882693
Epoch Step: 65 / 67 Loss (mean): 0.47384829838119913 Loss (std): 0.5697384071242456 Loss ratio: 1.2023645733679629 Tokens per Sec: 2882.4525246904327
Mean loss per sample: 0.82448867135619 Std loss per sample: 2.5322006599317652 ratio: 3.071237662691694
Epoch ended with duration 0:00:11.311740
Train perplexity: 1.1180130886787345
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use engines[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for branch[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 91.72426694631577 Loss (std): 42.64534285193093 Loss ratio: 0.4649297756382215 Tokens per Sec: 4291.670026612141
Mean loss per sample: 98.67731617757532 Std loss per sample: 50.627323230205626 ratio: 0.5130593857974303
Epoch ended with duration 0:00:01.048204
b'BLEU = 2.54, 8.4/2.7/1.7/1.3 (BP=0.947, ratio=0.948, hyp_len=2952, ref_len=3113)\n'
Validation perplexity: 642128.565028434
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.54
Epoch 379 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.8785362089984119 Loss (std): 1.1404286793637433 Loss ratio: 1.2981009407271964 Tokens per Sec: 3137.988473770668
Epoch Step: 10 / 67 Loss (mean): 0.6513273968403155 Loss (std): 0.6361200038936391 Loss ratio: 0.9766516915756197 Tokens per Sec: 2711.5123611658382
Epoch Step: 15 / 67 Loss (mean): 3.889748895584489 Loss (std): 11.712384364629457 Loss ratio: 3.0110900932255444 Tokens per Sec: 2905.3096859341226
Epoch Step: 20 / 67 Loss (mean): 0.4281123976870731 Loss (std): 0.5466073670333023 Loss ratio: 1.2767847181871208 Tokens per Sec: 2614.661275150112
Epoch Step: 25 / 67 Loss (mean): 0.7103940825982136 Loss (std): 0.8681853372574704 Loss ratio: 1.2221179181027901 Tokens per Sec: 2991.504044296262
Epoch Step: 30 / 67 Loss (mean): 0.6467148866213392 Loss (std): 0.7138608290848019 Loss ratio: 1.103826189643254 Tokens per Sec: 2758.9469093314797
Epoch Step: 35 / 67 Loss (mean): 0.6765320770791732 Loss (std): 0.6658699745194994 Loss ratio: 0.9842400635226257 Tokens per Sec: 2561.4642197807807
Epoch Step: 40 / 67 Loss (mean): 0.5159495041443733 Loss (std): 0.6356180750069624 Loss ratio: 1.2319385325527967 Tokens per Sec: 2366.3239076736922
Epoch Step: 45 / 67 Loss (mean): 1.5155509467003867 Loss (std): 1.547287851356284 Loss ratio: 1.0209408365485793 Tokens per Sec: 3369.04260721177
Epoch Step: 50 / 67 Loss (mean): 0.7488411998783704 Loss (std): 1.3243147709575929 Loss ratio: 1.7684854561590535 Tokens per Sec: 2631.3454094543017
Epoch Step: 55 / 67 Loss (mean): 2.108840715212864 Loss (std): 5.439999300381496 Loss ratio: 2.5796160236940366 Tokens per Sec: 2466.9574622712476
Epoch Step: 60 / 67 Loss (mean): 0.6689697322581196 Loss (std): 0.7473782558320867 Loss ratio: 1.1172078792104654 Tokens per Sec: 2481.3545994580313
Epoch Step: 65 / 67 Loss (mean): 0.5933102790440898 Loss (std): 0.6678054296693113 Loss ratio: 1.1255585032931574 Tokens per Sec: 3274.8307731799223
Mean loss per sample: 1.065748256423348 Std loss per sample: 4.510210749813403 ratio: 4.231966341610235
Epoch ended with duration 0:00:11.390450
Train perplexity: 1.1551098352237612
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow call log[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for developer[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 91.58968344330788 Loss (std): 42.28757359573056 Loss ratio: 0.46170673383652094 Tokens per Sec: 4393.5211712993705
Mean loss per sample: 96.48378541833553 Std loss per sample: 50.03807948264622 ratio: 0.5186164625039381
Epoch ended with duration 0:00:01.027675
b'BLEU = 2.44, 7.9/2.7/1.7/1.3 (BP=0.937, ratio=0.939, hyp_len=2924, ref_len=3113)\n'
Validation perplexity: 477004.45619483804
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.44
Epoch 380 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5703013918828219 Loss (std): 0.6850706539950826 Loss ratio: 1.2012431737775628 Tokens per Sec: 2692.449358319572
Epoch Step: 10 / 67 Loss (mean): 0.41377231644582935 Loss (std): 0.44419548628602784 Loss ratio: 1.073526354062359 Tokens per Sec: 2573.376214596561
Epoch Step: 15 / 67 Loss (mean): 0.42572558450046927 Loss (std): 0.4482695982807662 Loss ratio: 1.0529543316189212 Tokens per Sec: 3007.077592133098
Epoch Step: 20 / 67 Loss (mean): 0.6391500016325153 Loss (std): 0.8742889875374761 Loss ratio: 1.3678932727910027 Tokens per Sec: 2688.248046784533
Epoch Step: 25 / 67 Loss (mean): 0.4587204159670364 Loss (std): 0.6217742501790373 Loss ratio: 1.3554536238991333 Tokens per Sec: 2660.075967172587
Epoch Step: 30 / 67 Loss (mean): 0.9334701845946256 Loss (std): 1.1932317001382686 Loss ratio: 1.2782751070474185 Tokens per Sec: 2704.936949533521
Epoch Step: 35 / 67 Loss (mean): 0.7232291235486628 Loss (std): 1.0863460398523097 Loss ratio: 1.5020772871008623 Tokens per Sec: 3246.9267855145176
Epoch Step: 40 / 67 Loss (mean): 0.6067201119567471 Loss (std): 0.7067995534800168 Loss ratio: 1.164951580722289 Tokens per Sec: 2119.635338725835
Epoch Step: 45 / 67 Loss (mean): 0.839460565985064 Loss (std): 1.2488581561165197 Loss ratio: 1.4876912707043584 Tokens per Sec: 2863.2805991134146
Epoch Step: 50 / 67 Loss (mean): 0.44241543676616857 Loss (std): 0.4716837419272822 Loss ratio: 1.066155705088073 Tokens per Sec: 2618.893302142549
Epoch Step: 55 / 67 Loss (mean): 0.8712629119399935 Loss (std): 2.442756175956761 Loss ratio: 2.8036958103927656 Tokens per Sec: 2913.1174143294256
Epoch Step: 60 / 67 Loss (mean): 0.6936732736212434 Loss (std): 0.9910230722974157 Loss ratio: 1.428659730717159 Tokens per Sec: 2550.2097295482363
Epoch Step: 65 / 67 Loss (mean): 1.025121769082034 Loss (std): 1.2399953556355774 Loss ratio: 1.2096078661425327 Tokens per Sec: 3336.5958820608657
Mean loss per sample: 1.291173490109117 Std loss per sample: 5.989795274022476 ratio: 4.639032105217927
Epoch ended with duration 0:00:11.441423
Train perplexity: 1.190883423816592
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 90.90680232644081 Loss (std): 42.015167534535365 Loss ratio: 0.4621784779499937 Tokens per Sec: 4441.579881183899
Mean loss per sample: 95.95316344316377 Std loss per sample: 49.54701294793693 ratio: 0.5163666435790338
Epoch ended with duration 0:00:01.017637
b'BLEU = 2.33, 8.3/2.6/1.5/1.1 (BP=0.944, ratio=0.945, hyp_len=2942, ref_len=3113)\n'
Validation perplexity: 443907.87448275543
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.33
Model saved checkpoint_commit_msg_generator!
Epoch 381 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.7747155369288521 Loss (std): 0.9898432865175992 Loss ratio: 1.2776861174639176 Tokens per Sec: 2563.7059870246944
Epoch Step: 10 / 67 Loss (mean): 0.5048811591332196 Loss (std): 1.0572952534642968 Loss ratio: 2.0941467795697943 Tokens per Sec: 2650.5019202800736
Epoch Step: 15 / 67 Loss (mean): 1.050287762278458 Loss (std): 1.199532148512912 Loss ratio: 1.1420985672637833 Tokens per Sec: 2784.9233955155723
Epoch Step: 20 / 67 Loss (mean): 3.7538299163861666 Loss (std): 11.70241997374802 Loss ratio: 3.117461428570532 Tokens per Sec: 2485.1090967716705
Epoch Step: 25 / 67 Loss (mean): 6.027499817428179 Loss (std): 18.78500464262898 Loss ratio: 3.11655001437133 Tokens per Sec: 2583.9817479358844
Epoch Step: 30 / 67 Loss (mean): 0.34239834133491276 Loss (std): 0.4211255839590209 Loss ratio: 1.2299288084082802 Tokens per Sec: 2627.823069792226
Epoch Step: 35 / 67 Loss (mean): 0.6918185660324525 Loss (std): 0.8493683697847713 Loss ratio: 1.2277328355841324 Tokens per Sec: 2993.564835048968
Epoch Step: 40 / 67 Loss (mean): 0.4995728554240486 Loss (std): 0.9811796220266323 Loss ratio: 1.964037099641423 Tokens per Sec: 2417.940174761649
Epoch Step: 45 / 67 Loss (mean): 0.5177208211171092 Loss (std): 0.7039737918919079 Loss ratio: 1.3597556118622243 Tokens per Sec: 2683.076564656262
Epoch Step: 50 / 67 Loss (mean): 0.5400623441819334 Loss (std): 0.6489647779578697 Loss ratio: 1.201647892968538 Tokens per Sec: 2798.3743217392666
Epoch Step: 55 / 67 Loss (mean): 1.1558711145626148 Loss (std): 1.6642031693601478 Loss ratio: 1.4397826439238317 Tokens per Sec: 3306.5135137298216
Epoch Step: 60 / 67 Loss (mean): 7.538307052105665 Loss (std): 19.484854106718753 Loss ratio: 2.584778514862442 Tokens per Sec: 3141.831633997208
Epoch Step: 65 / 67 Loss (mean): 0.6575205358676612 Loss (std): 0.6196251175387117 Loss ratio: 0.9423661828615849 Tokens per Sec: 3167.8524373047835
Mean loss per sample: 1.203583680091651 Std loss per sample: 5.4649006544497345 ratio: 4.5405240573165555
Epoch ended with duration 0:00:11.427865
Train perplexity: 1.176853708091567
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow call forward[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog extension api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 91.32282567024231 Loss (std): 41.99717465494375 Loss ratio: 0.4598759877031334 Tokens per Sec: 4429.284507401464
Mean loss per sample: 95.46538313466017 Std loss per sample: 48.919076235339105 ratio: 0.512427380785091
Epoch ended with duration 0:00:01.019066
b'BLEU = 2.46, 7.7/2.7/1.7/1.3 (BP=0.948, ratio=0.949, hyp_len=2954, ref_len=3113)\n'
Validation perplexity: 415513.0751312666
Validation accuracy: 0.0
Validation BLEU: 2.46
Epoch 382 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.7435483322478831 Loss (std): 1.2155238505332222 Loss ratio: 1.634761047554865 Tokens per Sec: 2759.6753960493475
Epoch Step: 10 / 67 Loss (mean): 0.4878380862501217 Loss (std): 0.7303992900405528 Loss ratio: 1.4972166188477265 Tokens per Sec: 3456.694406229721
Epoch Step: 15 / 67 Loss (mean): 0.6064537656202447 Loss (std): 0.7862013102935371 Loss ratio: 1.2963911758210578 Tokens per Sec: 2732.852671753823
Epoch Step: 20 / 67 Loss (mean): 0.5834485040250001 Loss (std): 0.8550281779821494 Loss ratio: 1.4654732544236884 Tokens per Sec: 2651.765139638463
Epoch Step: 25 / 67 Loss (mean): 0.5641113689780468 Loss (std): 0.6934686430413659 Loss ratio: 1.2293115884150054 Tokens per Sec: 2278.3207238122127
Epoch Step: 30 / 67 Loss (mean): 0.5952793483593268 Loss (std): 0.6346943751014619 Loss ratio: 1.0662126560425258 Tokens per Sec: 2532.6865516310622
Epoch Step: 35 / 67 Loss (mean): 0.6754851975256315 Loss (std): 0.8385839652449374 Loss ratio: 1.241454244026002 Tokens per Sec: 3629.7812878436443
Epoch Step: 40 / 67 Loss (mean): 0.9122786484076641 Loss (std): 1.3350134385238228 Loss ratio: 1.463383409064786 Tokens per Sec: 3604.0172499314976
Epoch Step: 45 / 67 Loss (mean): 1.145597539114533 Loss (std): 1.6413561948406514 Loss ratio: 1.4327511528257169 Tokens per Sec: 2731.224468127456
Epoch Step: 50 / 67 Loss (mean): 2.9211120832987945 Loss (std): 8.84965462638238 Loss ratio: 3.0295498337703353 Tokens per Sec: 2303.8295467625026
Epoch Step: 55 / 67 Loss (mean): 0.7174988311016932 Loss (std): 0.7377493136776068 Loss ratio: 1.0282237150753537 Tokens per Sec: 2587.8787881943476
Epoch Step: 60 / 67 Loss (mean): 0.594626632067957 Loss (std): 0.8895039472678699 Loss ratio: 1.4959033102409258 Tokens per Sec: 2850.9342303476396
Epoch Step: 65 / 67 Loss (mean): 0.6305661478909315 Loss (std): 0.8611602903627215 Loss ratio: 1.3656938185518892 Tokens per Sec: 2644.7111156981614
Mean loss per sample: 0.9837449319949574 Std loss per sample: 4.236854795641528 ratio: 4.3068631490172145
Epoch ended with duration 0:00:11.366953
Train perplexity: 1.1423646956939018
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow call log[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 109.63668492436409 Loss (std): 44.275618501489205 Loss ratio: 0.40383944965167423 Tokens per Sec: 4310.055649674185
Mean loss per sample: 98.77167091091148 Std loss per sample: 50.13718474254089 ratio: 0.5076069310173241
Epoch ended with duration 0:00:01.031075
b'BLEU = 2.16, 7.6/2.4/1.4/1.1 (BP=0.944, ratio=0.945, hyp_len=2943, ref_len=3113)\n'
Validation perplexity: 650392.0254171721
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.16
Epoch 383 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.7185453968559159 Loss (std): 0.876705202542158 Loss ratio: 1.2201110832778135 Tokens per Sec: 2822.9220714992625
Epoch Step: 10 / 67 Loss (mean): 0.5494432729065011 Loss (std): 0.5963496808307239 Loss ratio: 1.0853707930139767 Tokens per Sec: 2963.782005552063
Epoch Step: 15 / 67 Loss (mean): 0.5164697382424492 Loss (std): 0.606094924092168 Loss ratio: 1.17353424453234 Tokens per Sec: 2635.7939988420085
Epoch Step: 20 / 67 Loss (mean): 0.6085854485427262 Loss (std): 1.1398945634803261 Loss ratio: 1.8730230343328673 Tokens per Sec: 2536.2288467855383
Epoch Step: 25 / 67 Loss (mean): 0.7152133626223076 Loss (std): 0.9982178804886395 Loss ratio: 1.39569243621051 Tokens per Sec: 3027.3264937810522
Epoch Step: 30 / 67 Loss (mean): 0.6981889907183358 Loss (std): 0.81837041081297 Loss ratio: 1.1721330781383201 Tokens per Sec: 2427.3498288333967
Epoch Step: 35 / 67 Loss (mean): 0.6367039028555155 Loss (std): 0.9154669286745396 Loss ratio: 1.4378220780001763 Tokens per Sec: 2584.51237481849
Epoch Step: 40 / 67 Loss (mean): 2.7620899242174346 Loss (std): 9.94396410901412 Loss ratio: 3.600159437905151 Tokens per Sec: 2473.2893852397747
Epoch Step: 45 / 67 Loss (mean): 0.6263369476655498 Loss (std): 0.973878017110821 Loss ratio: 1.5548787609298924 Tokens per Sec: 3060.7611271664127
Epoch Step: 50 / 67 Loss (mean): 0.6008053679106524 Loss (std): 0.7982147634708882 Loss ratio: 1.3285746201748203 Tokens per Sec: 2608.045138865069
Epoch Step: 55 / 67 Loss (mean): 0.9099944376794156 Loss (std): 0.9905522970127325 Loss ratio: 1.088525661254313 Tokens per Sec: 3109.714562178113
Epoch Step: 60 / 67 Loss (mean): 0.9776139694949961 Loss (std): 1.2880404745547123 Loss ratio: 1.3175348498958872 Tokens per Sec: 3279.9550216565617
Epoch Step: 65 / 67 Loss (mean): 0.5408283447904978 Loss (std): 0.5850127202630901 Loss ratio: 1.08169759573106 Tokens per Sec: 2783.388476291056
Mean loss per sample: 1.0156703284130637 Std loss per sample: 4.367556669986882 ratio: 4.300171569263996
Epoch ended with duration 0:00:11.402986
Train perplexity: 1.1473098091080554
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow call forward[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 91.78038984537125 Loss (std): 42.62534542732444 Loss ratio: 0.46442759176702453 Tokens per Sec: 4406.874244754416
Mean loss per sample: 96.716743270149 Std loss per sample: 50.135873248087215 ratio: 0.5183784270738708
Epoch ended with duration 0:00:01.021454
b'BLEU = 2.46, 7.7/2.6/1.8/1.3 (BP=0.935, ratio=0.937, hyp_len=2917, ref_len=3113)\n'
Validation perplexity: 492303.6961027914
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.46
Epoch 384 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.7738709036711953 Loss (std): 1.041446395648148 Loss ratio: 1.345762440101561 Tokens per Sec: 2609.6761413119802
Epoch Step: 10 / 67 Loss (mean): 1.2586968863906804 Loss (std): 5.273454942515629 Loss ratio: 4.189614671755713 Tokens per Sec: 3089.860372611464
Epoch Step: 15 / 67 Loss (mean): 0.5816181484551635 Loss (std): 0.7474631366936988 Loss ratio: 1.2851441081730968 Tokens per Sec: 2661.5369520776485
Epoch Step: 20 / 67 Loss (mean): 0.6612291710007412 Loss (std): 0.8405062981349506 Loss ratio: 1.271127069096001 Tokens per Sec: 2805.2091091797215
Epoch Step: 25 / 67 Loss (mean): 0.6920069472107571 Loss (std): 0.8425209469028679 Loss ratio: 1.2175035963132759 Tokens per Sec: 4074.697462481674
Epoch Step: 30 / 67 Loss (mean): 1.42124700176646 Loss (std): 6.6010013149965525 Loss ratio: 4.64451380146604 Tokens per Sec: 3185.9054273537167
Epoch Step: 35 / 67 Loss (mean): 0.663367404093151 Loss (std): 1.296683262597591 Loss ratio: 1.9546984892485144 Tokens per Sec: 2909.6621494743467
Epoch Step: 40 / 67 Loss (mean): 0.9795375636895187 Loss (std): 1.3574618805795615 Loss ratio: 1.385819115978111 Tokens per Sec: 2613.0326991801717
Epoch Step: 45 / 67 Loss (mean): 4.4695360597670515 Loss (std): 14.793679027963078 Loss ratio: 3.309891413815803 Tokens per Sec: 2312.4609168988936
Epoch Step: 50 / 67 Loss (mean): 0.5800438374571968 Loss (std): 0.6148611887111469 Loss ratio: 1.0600253791275205 Tokens per Sec: 3209.366016890102
Epoch Step: 55 / 67 Loss (mean): 0.7222669795883121 Loss (std): 0.7905900537897934 Loss ratio: 1.0945953174273937 Tokens per Sec: 2908.0510311821363
Epoch Step: 60 / 67 Loss (mean): 3.1533518994692713 Loss (std): 9.999588374657371 Loss ratio: 3.171098149984581 Tokens per Sec: 2164.234060793555
Epoch Step: 65 / 67 Loss (mean): 0.5952613024419406 Loss (std): 0.7612941052014967 Loss ratio: 1.2789242339094438 Tokens per Sec: 2304.3327784616217
Mean loss per sample: 1.0897118584171845 Std loss per sample: 4.846129428607819 ratio: 4.447165910121289
Epoch ended with duration 0:00:11.451669
Train perplexity: 1.1588610894681242
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow call log[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 91.8255022764206 Loss (std): 41.554568490311965 Loss ratio: 0.45253842843375935 Tokens per Sec: 4421.9168388783655
Mean loss per sample: 95.95497339218855 Std loss per sample: 48.83367528310451 ratio: 0.5089228161578536
Epoch ended with duration 0:00:01.018202
b'BLEU = 2.52, 7.8/2.7/1.7/1.3 (BP=0.966, ratio=0.967, hyp_len=3009, ref_len=3113)\n'
Validation perplexity: 444016.76978793845
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.52
Epoch 385 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2549078662053771 Loss (std): 0.32386815605588204 Loss ratio: 1.2705302542328931 Tokens per Sec: 2259.829556800493
Epoch Step: 10 / 67 Loss (mean): 0.5946076528925914 Loss (std): 0.7805199906519975 Loss ratio: 1.3126638832430044 Tokens per Sec: 2826.3537209013057
Epoch Step: 15 / 67 Loss (mean): 0.557970703135652 Loss (std): 1.416498158945721 Loss ratio: 2.5386604547252487 Tokens per Sec: 2537.342319811455
Epoch Step: 20 / 67 Loss (mean): 0.8193143114185659 Loss (std): 1.1322610545430503 Loss ratio: 1.3819617682286622 Tokens per Sec: 2893.567837271304
Epoch Step: 25 / 67 Loss (mean): 0.5373673611902632 Loss (std): 0.9489011491608397 Loss ratio: 1.7658332412654043 Tokens per Sec: 2688.297241919735
Epoch Step: 30 / 67 Loss (mean): 0.5202209160488565 Loss (std): 0.5912352421214663 Loss ratio: 1.1365080178089966 Tokens per Sec: 2786.5221179159475
Epoch Step: 35 / 67 Loss (mean): 0.8536806152987992 Loss (std): 1.0229678374766455 Loss ratio: 1.1983027600065554 Tokens per Sec: 3301.684264150412
Epoch Step: 40 / 67 Loss (mean): 5.387807604973204 Loss (std): 14.375345832434821 Loss ratio: 2.6681253092938375 Tokens per Sec: 2735.55736360648
Epoch Step: 45 / 67 Loss (mean): 0.8345810387399979 Loss (std): 1.0949921519563532 Loss ratio: 1.312026155793701 Tokens per Sec: 3367.646724919477
Epoch Step: 50 / 67 Loss (mean): 0.6040221657603979 Loss (std): 0.68280979726108 Loss ratio: 1.1304383116495353 Tokens per Sec: 2520.1523982678054
Epoch Step: 55 / 67 Loss (mean): 0.598485205679026 Loss (std): 0.8493599708654114 Loss ratio: 1.4191829017757411 Tokens per Sec: 3347.8189946476623
Epoch Step: 60 / 67 Loss (mean): 0.546653076572511 Loss (std): 0.6528622659975551 Loss ratio: 1.1942899326405894 Tokens per Sec: 2489.531544078671
Epoch Step: 65 / 67 Loss (mean): 0.5223755994811654 Loss (std): 0.6514937502710857 Loss ratio: 1.2471749272327481 Tokens per Sec: 2588.825491541606
Mean loss per sample: 0.9394218536572809 Std loss per sample: 3.8774932761628946 ratio: 4.1275314823338976
Epoch ended with duration 0:00:11.417578
Train perplexity: 1.135534549345674
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 92.81085279583931 Loss (std): 42.87364190036933 Loss ratio: 0.46194642769505234 Tokens per Sec: 4274.781009358574
Mean loss per sample: 98.60405226943435 Std loss per sample: 50.12174385328113 ratio: 0.5083132254678955
Epoch ended with duration 0:00:01.037572
b'BLEU = 2.75, 8.4/2.9/1.9/1.5 (BP=0.949, ratio=0.950, hyp_len=2957, ref_len=3113)\n'
Validation perplexity: 635784.6903648074
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.75
Model saved checkpoint_commit_msg_generator!
Epoch 386 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5745396524725948 Loss (std): 0.6116544977060379 Loss ratio: 1.064599275391551 Tokens per Sec: 3345.838738684109
Epoch Step: 10 / 67 Loss (mean): 0.3801327723685972 Loss (std): 0.7483175213389759 Loss ratio: 1.9685688152490228 Tokens per Sec: 2098.5546329166023
Epoch Step: 15 / 67 Loss (mean): 0.5362585976399714 Loss (std): 0.7636581813016791 Loss ratio: 1.424048368944524 Tokens per Sec: 2805.850559159413
Epoch Step: 20 / 67 Loss (mean): 0.6191719644702971 Loss (std): 0.8431506044353095 Loss ratio: 1.36173898822539 Tokens per Sec: 2723.7214806469715
Epoch Step: 25 / 67 Loss (mean): 0.598198400970432 Loss (std): 0.7964648098078952 Loss ratio: 1.3314392156779826 Tokens per Sec: 3320.7576365368727
Epoch Step: 30 / 67 Loss (mean): 0.4341254139872035 Loss (std): 0.5270464978940353 Loss ratio: 1.2140420277481632 Tokens per Sec: 2711.7547545239086
Epoch Step: 35 / 67 Loss (mean): 0.41908715434692567 Loss (std): 0.4976648401974888 Loss ratio: 1.1874972426034216 Tokens per Sec: 2156.019170047703
Epoch Step: 40 / 67 Loss (mean): 0.6058694222592749 Loss (std): 0.9359693847262581 Loss ratio: 1.544836808624616 Tokens per Sec: 2681.2172649699583
Epoch Step: 45 / 67 Loss (mean): 0.6313534955916111 Loss (std): 0.9648498993247244 Loss ratio: 1.5282245304124116 Tokens per Sec: 2589.874862941019
Epoch Step: 50 / 67 Loss (mean): 4.722140939516976 Loss (std): 17.443149854298643 Loss ratio: 3.6939070810713432 Tokens per Sec: 2820.197094908161
Epoch Step: 55 / 67 Loss (mean): 0.531752688853885 Loss (std): 0.8634476838764422 Loss ratio: 1.6237768082329345 Tokens per Sec: 2724.0215367319583
Epoch Step: 60 / 67 Loss (mean): 0.6440046732313931 Loss (std): 1.0308432877695939 Loss ratio: 1.6006767196225118 Tokens per Sec: 3347.870391970632
Epoch Step: 65 / 67 Loss (mean): 0.6913866892791702 Loss (std): 1.218804893503483 Loss ratio: 1.7628411313127699 Tokens per Sec: 3318.6411867329016
Mean loss per sample: 0.9417152106509781 Std loss per sample: 4.3207405626232 ratio: 4.588160532775517
Epoch ended with duration 0:00:11.419662
Train perplexity: 1.1358869496521173
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 92.72153508663177 Loss (std): 43.51738269664691 Loss ratio: 0.4693341482751301 Tokens per Sec: 4310.542244836225
Mean loss per sample: 98.2723286390671 Std loss per sample: 49.883034581089326 ratio: 0.5076000057381246
Epoch ended with duration 0:00:01.037530
b'BLEU = 2.27, 8.3/2.6/1.5/1.1 (BP=0.925, ratio=0.928, hyp_len=2888, ref_len=3113)\n'
Validation perplexity: 607836.222757773
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.27
Epoch 387 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5391729472903535 Loss (std): 0.7559499715302885 Loss ratio: 1.4020547123689369 Tokens per Sec: 2941.068287618181
Epoch Step: 10 / 67 Loss (mean): 0.5343965591082451 Loss (std): 0.9001335446619293 Loss ratio: 1.6843924784321114 Tokens per Sec: 2672.693935475525
Epoch Step: 15 / 67 Loss (mean): 0.6087588061200222 Loss (std): 1.1057221001129467 Loss ratio: 1.816354998066252 Tokens per Sec: 2701.2218748903124
Epoch Step: 20 / 67 Loss (mean): 1.4150501581752906 Loss (std): 1.7027440381659318 Loss ratio: 1.2033100228486762 Tokens per Sec: 2891.4810272203244
Epoch Step: 25 / 67 Loss (mean): 0.7743267671176 Loss (std): 0.87391239399269 Loss ratio: 1.1286093043713232 Tokens per Sec: 2748.7672620556223
Epoch Step: 30 / 67 Loss (mean): 0.5399608722073026 Loss (std): 0.6528052347651957 Loss ratio: 1.2089861846777847 Tokens per Sec: 2975.2971932043497
Epoch Step: 35 / 67 Loss (mean): 0.6519836952356854 Loss (std): 1.0245824179954355 Loss ratio: 1.5714847249746935 Tokens per Sec: 2835.166073632997
Epoch Step: 40 / 67 Loss (mean): 0.42569847882987233 Loss (std): 0.5866495702038406 Loss ratio: 1.3780870719021088 Tokens per Sec: 2508.6285650252107
Epoch Step: 45 / 67 Loss (mean): 0.5071729793271516 Loss (std): 0.5772995607024652 Loss ratio: 1.1382695534536327 Tokens per Sec: 3366.2263497509657
Epoch Step: 50 / 67 Loss (mean): 0.5467526372085558 Loss (std): 0.7654995784701436 Loss ratio: 1.4000839252982842 Tokens per Sec: 2344.235742407633
Epoch Step: 55 / 67 Loss (mean): 0.6550788023450878 Loss (std): 1.0752010626931627 Loss ratio: 1.6413308732386056 Tokens per Sec: 3182.4049194609606
Epoch Step: 60 / 67 Loss (mean): 0.6155189955243259 Loss (std): 0.8648157922652614 Loss ratio: 1.4050188516579796 Tokens per Sec: 2662.874612251161
Epoch Step: 65 / 67 Loss (mean): 0.42182506395329256 Loss (std): 0.9104149734961103 Loss ratio: 2.1582761464286007 Tokens per Sec: 2639.03476659426
Mean loss per sample: 0.8155726103067593 Std loss per sample: 3.5483964211631958 ratio: 4.350803811114434
Epoch ended with duration 0:00:11.373322
Train perplexity: 1.1166651973650108
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings from inactive ( ) ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 92.7126675248146 Loss (std): 42.40654385549718 Loss ratio: 0.4573975163010712 Tokens per Sec: 4292.051191838962
Mean loss per sample: 100.33819905961634 Std loss per sample: 50.40292985748153 ratio: 0.5023304218120801
Epoch ended with duration 0:00:01.053241
b'BLEU = 2.20, 7.7/2.4/1.4/1.0 (BP=0.975, ratio=0.975, hyp_len=3036, ref_len=3113)\n'
Validation perplexity: 804216.0246243343
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.2
Epoch 388 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6692160846141633 Loss (std): 0.9439995049137231 Loss ratio: 1.4106049251012642 Tokens per Sec: 2659.6961716244045
Epoch Step: 10 / 67 Loss (mean): 0.4954757179002627 Loss (std): 0.669511973203911 Loss ratio: 1.351250826258818 Tokens per Sec: 2837.29242113427
Epoch Step: 15 / 67 Loss (mean): 5.813913818334186 Loss (std): 15.328974374667181 Loss ratio: 2.6366015826253286 Tokens per Sec: 2757.5294877188867
Epoch Step: 20 / 67 Loss (mean): 0.9152390859089792 Loss (std): 0.994609175817515 Loss ratio: 1.086720607905101 Tokens per Sec: 3445.5337570030256
Epoch Step: 25 / 67 Loss (mean): 0.7289943739888258 Loss (std): 0.8670262212879072 Loss ratio: 1.1893455590662723 Tokens per Sec: 2521.7937352714207
Epoch Step: 30 / 67 Loss (mean): 0.4633235403453 Loss (std): 0.4897967899637124 Loss ratio: 1.0571377176274763 Tokens per Sec: 2412.7415785273006
Epoch Step: 35 / 67 Loss (mean): 0.4873764145595487 Loss (std): 0.6338577494854001 Loss ratio: 1.3005507253735888 Tokens per Sec: 2887.1351824994317
Epoch Step: 40 / 67 Loss (mean): 0.6024365621851757 Loss (std): 0.7086887011296922 Loss ratio: 1.176370668073524 Tokens per Sec: 2695.7982463629023
Epoch Step: 45 / 67 Loss (mean): 0.49955434928415343 Loss (std): 0.671444557380303 Loss ratio: 1.3440871015185096 Tokens per Sec: 2690.3572005278597
Epoch Step: 50 / 67 Loss (mean): 0.4846611987595679 Loss (std): 0.6848868258529461 Loss ratio: 1.4131249367719794 Tokens per Sec: 2756.535539845672
Epoch Step: 55 / 67 Loss (mean): 0.40196101259061834 Loss (std): 0.45392182663839054 Loss ratio: 1.129268293242888 Tokens per Sec: 2842.009027630925
Epoch Step: 60 / 67 Loss (mean): 0.45542981493781554 Loss (std): 0.5446759006325922 Loss ratio: 1.1959601298983078 Tokens per Sec: 3000.645999476767
Epoch Step: 65 / 67 Loss (mean): 0.641376948740799 Loss (std): 0.673976887424997 Loss ratio: 1.0508280485418142 Tokens per Sec: 2529.8618987430423
Mean loss per sample: 0.9462621775148771 Std loss per sample: 4.1424957666044735 ratio: 4.377746321303586
Epoch ended with duration 0:00:11.466369
Train perplexity: 1.136585966069875
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 91.4439625442028 Loss (std): 42.03047758630777 Loss ratio: 0.45963097417164955 Tokens per Sec: 4428.827598114849
Mean loss per sample: 96.32454840698448 Std loss per sample: 50.00089182999247 ratio: 0.5190877367909561
Epoch ended with duration 0:00:01.017960
b'BLEU = 2.47, 8.1/2.8/1.7/1.3 (BP=0.917, ratio=0.920, hyp_len=2865, ref_len=3113)\n'
Validation perplexity: 466821.2236927247
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.47
Epoch 389 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.7118596205109498 Loss (std): 0.807968183861774 Loss ratio: 1.1350105562692834 Tokens per Sec: 3518.5141373976057
Epoch Step: 10 / 67 Loss (mean): 0.505039505813329 Loss (std): 0.7255661199890172 Loss ratio: 1.4366522056933868 Tokens per Sec: 2946.4558870785563
Epoch Step: 15 / 67 Loss (mean): 0.3191791519348044 Loss (std): 0.506480663667329 Loss ratio: 1.5868225120504829 Tokens per Sec: 2664.9059762369216
Epoch Step: 20 / 67 Loss (mean): 0.47318670809909236 Loss (std): 0.6310006634862105 Loss ratio: 1.3335130777893058 Tokens per Sec: 2898.7462180814396
Epoch Step: 25 / 67 Loss (mean): 0.6076513991283718 Loss (std): 0.7347482105650164 Loss ratio: 1.2091607319903401 Tokens per Sec: 2677.7973718266157
Epoch Step: 30 / 67 Loss (mean): 0.587425009245635 Loss (std): 0.938017645313625 Loss ratio: 1.5968296047153616 Tokens per Sec: 2716.8101678539597
Epoch Step: 35 / 67 Loss (mean): 0.6015756322303787 Loss (std): 0.752550794669838 Loss ratio: 1.2509662199575964 Tokens per Sec: 2389.116630230477
Epoch Step: 40 / 67 Loss (mean): 0.5737937946323655 Loss (std): 0.9941598729596396 Loss ratio: 1.7326082684400694 Tokens per Sec: 2863.906625140407
Epoch Step: 45 / 67 Loss (mean): 0.47205480015691137 Loss (std): 0.8789643582296138 Loss ratio: 1.861996441806005 Tokens per Sec: 2499.922842239093
Epoch Step: 50 / 67 Loss (mean): 0.6238189901232545 Loss (std): 1.0039356747280603 Loss ratio: 1.6093381102901376 Tokens per Sec: 2910.4516885760186
Epoch Step: 55 / 67 Loss (mean): 0.650741335355633 Loss (std): 1.3714247092137786 Loss ratio: 2.1074805528748053 Tokens per Sec: 2196.826446540264
Epoch Step: 60 / 67 Loss (mean): 0.5230909530509962 Loss (std): 0.8090612465875806 Loss ratio: 1.5466932507026272 Tokens per Sec: 2905.9880129853914
Epoch Step: 65 / 67 Loss (mean): 0.779255985544296 Loss (std): 2.3563585048433593 Loss ratio: 3.0238567923190045 Tokens per Sec: 2715.24331831403
Mean loss per sample: 0.9840878878467448 Std loss per sample: 4.557253674711045 ratio: 4.630941739037804
Epoch ended with duration 0:00:11.418652
Train perplexity: 1.1424177047348474
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 93.26076310873032 Loss (std): 43.91397676003249 Loss ratio: 0.4708730155771331 Tokens per Sec: 4398.789620113898
Mean loss per sample: 100.3740288024066 Std loss per sample: 50.22237563306546 ratio: 0.5003522946352166
Epoch ended with duration 0:00:01.056000
b'BLEU = 2.25, 8.2/2.6/1.5/1.1 (BP=0.916, ratio=0.919, hyp_len=2862, ref_len=3113)\n'
Validation perplexity: 808130.4490645757
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.25
Epoch 390 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3740851024922449 Loss (std): 0.5858080578264059 Loss ratio: 1.5659753727791128 Tokens per Sec: 2749.537488427953
Epoch Step: 10 / 67 Loss (mean): 0.19252263118202487 Loss (std): 0.21595357974155507 Loss ratio: 1.1217049051099706 Tokens per Sec: 2565.075833655208
Epoch Step: 15 / 67 Loss (mean): 0.5608876035985304 Loss (std): 0.600009864158966 Loss ratio: 1.0697506243843433 Tokens per Sec: 3053.002149946472
Epoch Step: 20 / 67 Loss (mean): 1.098159833229147 Loss (std): 1.8276432051896314 Loss ratio: 1.6642779583509564 Tokens per Sec: 2926.4465849654575
Epoch Step: 25 / 67 Loss (mean): 0.5212843648660055 Loss (std): 0.6344321392215102 Loss ratio: 1.2170557606971177 Tokens per Sec: 2530.098469154826
Epoch Step: 30 / 67 Loss (mean): 2.176731485480559 Loss (std): 7.1220400614028225 Loss ratio: 3.2718964690449557 Tokens per Sec: 2499.262994182314
Epoch Step: 35 / 67 Loss (mean): 0.6954665828598081 Loss (std): 1.0877227578383046 Loss ratio: 1.564018724473448 Tokens per Sec: 2741.259744188647
Epoch Step: 40 / 67 Loss (mean): 0.5104070724337362 Loss (std): 0.5584823580100031 Loss ratio: 1.0941900850766686 Tokens per Sec: 2669.626646491179
Epoch Step: 45 / 67 Loss (mean): 0.4900963451800635 Loss (std): 0.6127976575266764 Loss ratio: 1.2503616147178813 Tokens per Sec: 2778.2454237133948
Epoch Step: 50 / 67 Loss (mean): 0.510495748341782 Loss (std): 0.5894163768394645 Loss ratio: 1.1545960544314744 Tokens per Sec: 3465.9675282217295
Epoch Step: 55 / 67 Loss (mean): 0.6297742664464749 Loss (std): 0.8293522745181237 Loss ratio: 1.3169040380099606 Tokens per Sec: 2796.802064047377
Epoch Step: 60 / 67 Loss (mean): 0.6450801185128512 Loss (std): 0.8764960468521996 Loss ratio: 1.3587398242451618 Tokens per Sec: 2545.6594409683967
Epoch Step: 65 / 67 Loss (mean): 0.5965389017292182 Loss (std): 0.7464332623978058 Loss ratio: 1.251273404356499 Tokens per Sec: 2809.5284811570273
Mean loss per sample: 0.861103576297766 Std loss per sample: 3.600021009201152 ratio: 4.18070614069344
Epoch ended with duration 0:00:11.452898
Train perplexity: 1.1235654518869251
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) return[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 92.68437877297401 Loss (std): 42.91510775053887 Loss ratio: 0.46302417212783387 Tokens per Sec: 4436.295060142276
Mean loss per sample: 98.68339016545015 Std loss per sample: 50.436171093988804 ratio: 0.5110907824450371
Epoch ended with duration 0:00:01.034658
b'BLEU = 2.27, 8.3/2.6/1.5/1.1 (BP=0.945, ratio=0.947, hyp_len=2947, ref_len=3113)\n'
Validation perplexity: 642657.3405773127
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.27
Model saved checkpoint_commit_msg_generator!
Epoch 391 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6627845938201062 Loss (std): 0.8154870292049957 Loss ratio: 1.2303952699092704 Tokens per Sec: 2608.951473524804
Epoch Step: 10 / 67 Loss (mean): 0.5486329007899258 Loss (std): 0.6817316411120207 Loss ratio: 1.2426007265157784 Tokens per Sec: 2866.980949378969
Epoch Step: 15 / 67 Loss (mean): 1.186000059475191 Loss (std): 1.3273170267075358 Loss ratio: 1.1191542665646055 Tokens per Sec: 2985.8931061810717
Epoch Step: 20 / 67 Loss (mean): 0.4029824779063347 Loss (std): 0.6468480611485471 Loss ratio: 1.605151828211484 Tokens per Sec: 2616.8213103871667
Epoch Step: 25 / 67 Loss (mean): 0.6952253321360331 Loss (std): 1.031706722372831 Loss ratio: 1.4839889668619832 Tokens per Sec: 2484.6726478944747
Epoch Step: 30 / 67 Loss (mean): 0.43299691620268277 Loss (std): 0.5238109218857137 Loss ratio: 1.209733608450277 Tokens per Sec: 2980.853279068142
Epoch Step: 35 / 67 Loss (mean): 0.5177915410968126 Loss (std): 1.2944733358536809 Loss ratio: 2.499989345348634 Tokens per Sec: 3328.9415221711433
Epoch Step: 40 / 67 Loss (mean): 0.5156713414544356 Loss (std): 0.6882188516049996 Loss ratio: 1.3346075228146264 Tokens per Sec: 2629.672546136547
Epoch Step: 45 / 67 Loss (mean): 0.5133360697745957 Loss (std): 0.7747040211168352 Loss ratio: 1.5091556325995277 Tokens per Sec: 2505.4062382993534
Epoch Step: 50 / 67 Loss (mean): 0.5260249664861476 Loss (std): 0.6680589897688815 Loss ratio: 1.270013844079536 Tokens per Sec: 2775.9281984252093
Epoch Step: 55 / 67 Loss (mean): 6.120566471872735 Loss (std): 20.289089252968374 Loss ratio: 3.3149038322200326 Tokens per Sec: 3124.3919013606196
Epoch Step: 60 / 67 Loss (mean): 0.5333264648361364 Loss (std): 0.6594322650385309 Loss ratio: 1.2364514205030877 Tokens per Sec: 2517.317761915905
Epoch Step: 65 / 67 Loss (mean): 0.5809206998819718 Loss (std): 0.5335390607516698 Loss ratio: 0.9184369929666325 Tokens per Sec: 2938.363359216977
Mean loss per sample: 0.7042277112038822 Std loss per sample: 2.8529084063265873 ratio: 4.051116366110502
Epoch ended with duration 0:00:11.369652
Train perplexity: 1.0999687917983096
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options , provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 93.53465619683266 Loss (std): 42.96130651411619 Loss ratio: 0.45930896911310803 Tokens per Sec: 4427.627924722383
Mean loss per sample: 97.58063469472967 Std loss per sample: 50.643951207758946 ratio: 0.5189959192845282
Epoch ended with duration 0:00:01.018403
b'BLEU = 2.87, 9.1/3.1/2.0/1.5 (BP=0.944, ratio=0.945, hyp_len=2942, ref_len=3113)\n'
Validation perplexity: 553448.4185285975
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.87
Epoch 392 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.956577120712609 Loss (std): 1.2148608546025659 Loss ratio: 1.270008270423138 Tokens per Sec: 3912.0322448118495
Epoch Step: 10 / 67 Loss (mean): 0.5496902696140751 Loss (std): 0.7993375113103078 Loss ratio: 1.4541598341762614 Tokens per Sec: 2689.5728897950376
Epoch Step: 15 / 67 Loss (mean): 0.494858747413673 Loss (std): 0.6599607405785826 Loss ratio: 1.3336345856828797 Tokens per Sec: 2478.498779158955
Epoch Step: 20 / 67 Loss (mean): 0.8548670775489882 Loss (std): 0.9515603300611506 Loss ratio: 1.1131091078970945 Tokens per Sec: 3232.114122318392
Epoch Step: 25 / 67 Loss (mean): 0.6291585737781134 Loss (std): 0.9026801093884242 Loss ratio: 1.4347418075665839 Tokens per Sec: 3075.9711243223624
Epoch Step: 30 / 67 Loss (mean): 0.6357050121296197 Loss (std): 0.929367565915128 Loss ratio: 1.461947834580909 Tokens per Sec: 2669.172155160031
Epoch Step: 35 / 67 Loss (mean): 0.5465119872169453 Loss (std): 0.9342172086464077 Loss ratio: 1.7094175983290145 Tokens per Sec: 3141.540884924847
Epoch Step: 40 / 67 Loss (mean): 0.45278756725019775 Loss (std): 0.7151336313371481 Loss ratio: 1.5794020928626453 Tokens per Sec: 2861.371973101495
Epoch Step: 45 / 67 Loss (mean): 0.4546857227978762 Loss (std): 0.724909000900609 Loss ratio: 1.5943078142852893 Tokens per Sec: 2499.899878483328
Epoch Step: 50 / 67 Loss (mean): 0.6591718242780189 Loss (std): 0.9246159503888748 Loss ratio: 1.4026933742224084 Tokens per Sec: 2333.802201782361
Epoch Step: 55 / 67 Loss (mean): 0.534292283031391 Loss (std): 0.7272253602928085 Loss ratio: 1.3611002505347476 Tokens per Sec: 2490.0222325138993
Epoch Step: 60 / 67 Loss (mean): 0.5478953884303337 Loss (std): 0.650458552355954 Loss ratio: 1.1871947931875346 Tokens per Sec: 2602.6429750378506
Epoch Step: 65 / 67 Loss (mean): 0.8972945998539217 Loss (std): 1.086315124155848 Loss ratio: 1.2106560368609134 Tokens per Sec: 2543.389285813572
Mean loss per sample: 0.7875087405206604 Std loss per sample: 3.2136844197312393 ratio: 4.0808238110557555
Epoch ended with duration 0:00:11.407537
Train perplexity: 1.1124332216839532
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog extension api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 92.6051097214222 Loss (std): 42.93881812351505 Loss ratio: 0.4636765536230673 Tokens per Sec: 4280.1547517887075
Mean loss per sample: 98.41675955924343 Std loss per sample: 51.231246590059975 ratio: 0.5205540887496968
Epoch ended with duration 0:00:01.038801
b'BLEU = 2.70, 8.4/3.0/2.0/1.6 (BP=0.907, ratio=0.911, hyp_len=2836, ref_len=3113)\n'
Validation perplexity: 619850.5818020304
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.7
Epoch 393 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5229241035121959 Loss (std): 0.7413980036628192 Loss ratio: 1.4177927517267865 Tokens per Sec: 2422.3570017951793
Epoch Step: 10 / 67 Loss (mean): 0.5939376539608929 Loss (std): 0.6454977967300757 Loss ratio: 1.08681069877509 Tokens per Sec: 2803.8310407559984
Epoch Step: 15 / 67 Loss (mean): 0.5693777952837991 Loss (std): 0.8395137826294193 Loss ratio: 1.474440678198514 Tokens per Sec: 2824.5419908584113
Epoch Step: 20 / 67 Loss (mean): 0.9167165156613919 Loss (std): 1.003571398146752 Loss ratio: 1.0947456285574784 Tokens per Sec: 2959.0303050672087
Epoch Step: 25 / 67 Loss (mean): 2.4904711432172917 Loss (std): 6.632910330396472 Loss ratio: 2.6633154728417407 Tokens per Sec: 2098.341030688514
Epoch Step: 30 / 67 Loss (mean): 0.7197585999383591 Loss (std): 0.8160246359758166 Loss ratio: 1.1337476704629883 Tokens per Sec: 2729.981736571145
Epoch Step: 35 / 67 Loss (mean): 0.6617497103579808 Loss (std): 1.035495943426094 Loss ratio: 1.5647848834961047 Tokens per Sec: 3114.055504310153
Epoch Step: 40 / 67 Loss (mean): 0.7419064976857044 Loss (std): 1.0411724852173332 Loss ratio: 1.4033742640954838 Tokens per Sec: 2593.5963778332352
Epoch Step: 45 / 67 Loss (mean): 0.4177238184201997 Loss (std): 0.4407677659450183 Loss ratio: 1.055165510101792 Tokens per Sec: 3139.400250428628
Epoch Step: 50 / 67 Loss (mean): 0.45788155267655384 Loss (std): 0.44705651996942725 Loss ratio: 0.9763584432614751 Tokens per Sec: 3169.1289445257376
Epoch Step: 55 / 67 Loss (mean): 3.3441736433305778 Loss (std): 9.504044585396153 Loss ratio: 2.841971021555791 Tokens per Sec: 2636.741196691252
Epoch Step: 60 / 67 Loss (mean): 0.599142114573624 Loss (std): 0.8938244848625658 Loss ratio: 1.4918405218412176 Tokens per Sec: 3247.4016158787917
Epoch Step: 65 / 67 Loss (mean): 0.5104275902704103 Loss (std): 0.9220642769917012 Loss ratio: 1.80645461681101 Tokens per Sec: 2602.0856322624445
Mean loss per sample: 1.0698077389861265 Std loss per sample: 4.969374624318775 ratio: 4.645109998015465
Epoch ended with duration 0:00:11.498738
Train perplexity: 1.1557444499054623
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to android-changed during tests[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 92.99969375133514 Loss (std): 42.852885009285735 Loss ratio: 0.46078522714135844 Tokens per Sec: 4430.379119842474
Mean loss per sample: 97.61082265892479 Std loss per sample: 50.59851430404416 ratio: 0.5183699197049828
Epoch ended with duration 0:00:01.017536
b'BLEU = 2.75, 8.2/2.9/1.9/1.5 (BP=0.958, ratio=0.959, hyp_len=2985, ref_len=3113)\n'
Validation perplexity: 555717.219147651
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.75
Epoch 394 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6569538111202746 Loss (std): 0.8550085018874183 Loss ratio: 1.3014743006504668 Tokens per Sec: 2706.712824257091
Epoch Step: 10 / 67 Loss (mean): 0.5003393938095542 Loss (std): 0.528736769129291 Loss ratio: 1.0567562252164895 Tokens per Sec: 2907.908903369845
Epoch Step: 15 / 67 Loss (mean): 0.47373176487599267 Loss (std): 0.5380777258044419 Loss ratio: 1.1358278369728763 Tokens per Sec: 2677.020469391323
Epoch Step: 20 / 67 Loss (mean): 0.8359968319309701 Loss (std): 1.1021448905586118 Loss ratio: 1.3183601282470148 Tokens per Sec: 3400.8299025123633
Epoch Step: 25 / 67 Loss (mean): 0.26492879162764266 Loss (std): 0.28574732463544095 Loss ratio: 1.078581617648635 Tokens per Sec: 2018.051502504365
Epoch Step: 30 / 67 Loss (mean): 0.6757511724863434 Loss (std): 0.8848106953750042 Loss ratio: 1.3093735259377384 Tokens per Sec: 2477.0885800598357
Epoch Step: 35 / 67 Loss (mean): 0.7029666254602489 Loss (std): 1.0162264195290425 Loss ratio: 1.4456254148106888 Tokens per Sec: 3017.2446295519344
Epoch Step: 40 / 67 Loss (mean): 0.4565468181972392 Loss (std): 0.6289282981681211 Loss ratio: 1.3775767853372904 Tokens per Sec: 3037.339197593991
Epoch Step: 45 / 67 Loss (mean): 0.49978038646804634 Loss (std): 0.6659827608651664 Loss ratio: 1.3325508141119224 Tokens per Sec: 2666.8616153157845
Epoch Step: 50 / 67 Loss (mean): 0.34068421419397055 Loss (std): 0.43822979033012266 Loss ratio: 1.2863225593441026 Tokens per Sec: 2915.448955524236
Epoch Step: 55 / 67 Loss (mean): 0.5109633296815446 Loss (std): 0.7872687964227949 Loss ratio: 1.5407540046238863 Tokens per Sec: 2838.0029334115575
Epoch Step: 60 / 67 Loss (mean): 0.4812598582939245 Loss (std): 0.648570742114143 Loss ratio: 1.347651857799524 Tokens per Sec: 2703.8585453467485
Epoch Step: 65 / 67 Loss (mean): 6.717142525900272 Loss (std): 17.635182742177 Loss ratio: 2.6253995168598014 Tokens per Sec: 2839.656229684288
Mean loss per sample: 1.0973620071034091 Std loss per sample: 5.157380064645117 ratio: 4.699798271910752
Epoch ended with duration 0:00:11.451339
Train perplexity: 1.1600612046171956
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings on engines ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 92.81150537729263 Loss (std): 42.53212349714501 Loss ratio: 0.4582634806347077 Tokens per Sec: 4423.629790758566
Mean loss per sample: 97.78503691392844 Std loss per sample: 50.386447580285726 ratio: 0.515277686346189
Epoch ended with duration 0:00:01.017811
b'BLEU = 2.57, 8.6/2.7/1.7/1.3 (BP=0.951, ratio=0.952, hyp_len=2964, ref_len=3113)\n'
Validation perplexity: 568993.3336997544
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.57
Epoch 395 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.4642421585158445 Loss (std): 0.6177744077311516 Loss ratio: 1.3307158697222605 Tokens per Sec: 2342.7627050999436
Epoch Step: 10 / 67 Loss (mean): 0.6104425335070118 Loss (std): 0.9169889511492672 Loss ratio: 1.502170803664575 Tokens per Sec: 3160.4522568326156
Epoch Step: 15 / 67 Loss (mean): 0.5670892130037828 Loss (std): 0.6435519686928804 Loss ratio: 1.1348337332746754 Tokens per Sec: 2726.380072997208
Epoch Step: 20 / 67 Loss (mean): 0.5016365922056139 Loss (std): 0.8983704032820338 Loss ratio: 1.7908789295694048 Tokens per Sec: 3157.357278439276
Epoch Step: 25 / 67 Loss (mean): 0.6163147945335368 Loss (std): 0.9351700435353354 Loss ratio: 1.517357772083221 Tokens per Sec: 2943.9719820794317
Epoch Step: 30 / 67 Loss (mean): 0.6393976492108777 Loss (std): 1.0758925809291964 Loss ratio: 1.6826658375379164 Tokens per Sec: 3648.43520519311
Epoch Step: 35 / 67 Loss (mean): 0.6224319944885792 Loss (std): 0.9567213807768928 Loss ratio: 1.537069734924186 Tokens per Sec: 2209.49061842535
Epoch Step: 40 / 67 Loss (mean): 0.6207943611079827 Loss (std): 0.9285259933635113 Loss ratio: 1.495706229847666 Tokens per Sec: 2752.8377481221046
Epoch Step: 45 / 67 Loss (mean): 0.3982822199068323 Loss (std): 0.6885809454997023 Loss ratio: 1.7288769397257495 Tokens per Sec: 2637.5024517122883
Epoch Step: 50 / 67 Loss (mean): 1.18288661641418 Loss (std): 1.9257412193735999 Loss ratio: 1.6280015283386333 Tokens per Sec: 3037.3618699267026
Epoch Step: 55 / 67 Loss (mean): 1.0154784545011353 Loss (std): 1.497949270134833 Loss ratio: 1.4751167427483398 Tokens per Sec: 2800.2021006192913
Epoch Step: 60 / 67 Loss (mean): 0.39331920782569796 Loss (std): 0.5415887958206758 Loss ratio: 1.376970117515045 Tokens per Sec: 2739.3042785034936
Epoch Step: 65 / 67 Loss (mean): 0.5159217171894852 Loss (std): 0.693020928918529 Loss ratio: 1.3432676040345857 Tokens per Sec: 2801.066884966905
Mean loss per sample: 0.9446345948662155 Std loss per sample: 4.96616442220118 ratio: 5.257233272199306
Epoch ended with duration 0:00:11.393288
Train perplexity: 1.1363357043622857
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 92.98444414138794 Loss (std): 42.17503204251149 Loss ratio: 0.4535708357667014 Tokens per Sec: 4450.4007730376425
Mean loss per sample: 97.68380456698722 Std loss per sample: 50.03895053385984 ratio: 0.5122543164209513
Epoch ended with duration 0:00:01.015040
b'BLEU = 2.23, 8.3/2.5/1.4/1.1 (BP=0.935, ratio=0.937, hyp_len=2918, ref_len=3113)\n'
Validation perplexity: 561240.7298713056
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.23
Model saved checkpoint_commit_msg_generator!
Epoch 396 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5398978856974281 Loss (std): 0.8180073367772219 Loss ratio: 1.5151149105178254 Tokens per Sec: 2737.4059029098576
Epoch Step: 10 / 67 Loss (mean): 0.49132561424630694 Loss (std): 0.6323438500091166 Loss ratio: 1.2870158438190356 Tokens per Sec: 2327.3401843832967
Epoch Step: 15 / 67 Loss (mean): 0.8066391445827321 Loss (std): 1.2350363000763103 Loss ratio: 1.5310889737630877 Tokens per Sec: 2650.120094805193
Epoch Step: 20 / 67 Loss (mean): 0.569944062968716 Loss (std): 0.6821971259890772 Loss ratio: 1.1969545264418742 Tokens per Sec: 3011.3450514034807
Epoch Step: 25 / 67 Loss (mean): 0.3817917418818979 Loss (std): 0.6509592121638847 Loss ratio: 1.7050112423993973 Tokens per Sec: 2729.3303895992995
Epoch Step: 30 / 67 Loss (mean): 0.7727021480968688 Loss (std): 0.9117225387098059 Loss ratio: 1.179914590577156 Tokens per Sec: 3334.469457020362
Epoch Step: 35 / 67 Loss (mean): 0.5498013731921674 Loss (std): 0.9678725292948276 Loss ratio: 1.7604039867622072 Tokens per Sec: 2746.6818613570254
Epoch Step: 40 / 67 Loss (mean): 0.3860765825229464 Loss (std): 0.4240131046359856 Loss ratio: 1.098261650227865 Tokens per Sec: 2643.2977038388917
Epoch Step: 45 / 67 Loss (mean): 2.5720025352638913 Loss (std): 8.743836837024256 Loss ratio: 3.3996221687733 Tokens per Sec: 2663.0269671550495
Epoch Step: 50 / 67 Loss (mean): 0.5062224033208622 Loss (std): 0.5675816407383022 Loss ratio: 1.121210039332353 Tokens per Sec: 2624.840754356534
Epoch Step: 55 / 67 Loss (mean): 0.6063585925730877 Loss (std): 0.9746640038391805 Loss ratio: 1.6074052809298633 Tokens per Sec: 3001.8869272905167
Epoch Step: 60 / 67 Loss (mean): 0.6876684310300334 Loss (std): 0.8884655884356507 Loss ratio: 1.2919970560591978 Tokens per Sec: 2551.0963200105207
Epoch Step: 65 / 67 Loss (mean): 0.4169492704968434 Loss (std): 0.7193169564598836 Loss ratio: 1.7251905863817294 Tokens per Sec: 2929.411227699073
Mean loss per sample: 1.2257188620510842 Std loss per sample: 5.885493062993429 ratio: 4.801666389586929
Epoch ended with duration 0:00:11.438627
Train perplexity: 1.1803835312646067
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings on engines ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 109.1797947883606 Loss (std): 40.58447974260865 Loss ratio: 0.37172152431024047 Tokens per Sec: 4223.075806617074
Mean loss per sample: 99.79530060425645 Std loss per sample: 50.09847409311643 ratio: 0.502012357192896
Epoch ended with duration 0:00:01.051799
b'BLEU = 2.16, 7.6/2.3/1.4/1.1 (BP=0.952, ratio=0.953, hyp_len=2968, ref_len=3113)\n'
Validation perplexity: 747172.0317718809
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.16
Epoch 397 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.49251060996903107 Loss (std): 0.5640374619519493 Loss ratio: 1.1452290580855016 Tokens per Sec: 3260.988782907685
Epoch Step: 10 / 67 Loss (mean): 2.5764491681329673 Loss (std): 8.307353406813428 Loss ratio: 3.224342055556012 Tokens per Sec: 2463.4532512544665
Epoch Step: 15 / 67 Loss (mean): 0.49271737253002357 Loss (std): 0.6863023410063086 Loss ratio: 1.392892516621157 Tokens per Sec: 2361.456054483667
Epoch Step: 20 / 67 Loss (mean): 0.563002425187733 Loss (std): 0.813558820093614 Loss ratio: 1.4450360845645256 Tokens per Sec: 3104.0831006762564
Epoch Step: 25 / 67 Loss (mean): 4.152415957658377 Loss (std): 12.867483203294723 Loss ratio: 3.098794372842872 Tokens per Sec: 2964.275868105456
Epoch Step: 30 / 67 Loss (mean): 0.39507402765593724 Loss (std): 0.5504301258488049 Loss ratio: 1.3932328812264128 Tokens per Sec: 2252.7440041117306
Epoch Step: 35 / 67 Loss (mean): 0.4672747954446095 Loss (std): 0.5532160295595386 Loss ratio: 1.183920115000332 Tokens per Sec: 2489.6868832837804
Epoch Step: 40 / 67 Loss (mean): 0.609238895445742 Loss (std): 0.8958915032545458 Loss ratio: 1.470509368248851 Tokens per Sec: 2377.486560283414
Epoch Step: 45 / 67 Loss (mean): 0.4570603459360427 Loss (std): 0.5828243116607761 Loss ratio: 1.2751583392498718 Tokens per Sec: 2418.054509864859
Epoch Step: 50 / 67 Loss (mean): 0.5040732732450124 Loss (std): 0.5783580714128038 Loss ratio: 1.147369047538619 Tokens per Sec: 4010.5236544486825
Epoch Step: 55 / 67 Loss (mean): 0.5989673342264723 Loss (std): 0.7898315572129134 Loss ratio: 1.318655479322474 Tokens per Sec: 2694.6055393693036
Epoch Step: 60 / 67 Loss (mean): 0.8742616675663157 Loss (std): 1.1797116524037894 Loss ratio: 1.3493805071972966 Tokens per Sec: 2864.3828839190146
Epoch Step: 65 / 67 Loss (mean): 0.46405455622880254 Loss (std): 0.5941218165641845 Loss ratio: 1.280284416109153 Tokens per Sec: 3433.9310406572645
Mean loss per sample: 1.0948386143086501 Std loss per sample: 5.5222120772684455 ratio: 5.043859437452813
Epoch ended with duration 0:00:11.466353
Train perplexity: 1.1596652107070828
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 93.86489397287369 Loss (std): 44.44075021483292 Loss ratio: 0.4734544336424222 Tokens per Sec: 4398.282898586918
Mean loss per sample: 98.59089783994389 Std loss per sample: 51.82936655319437 ratio: 0.5257013343902809
Epoch ended with duration 0:00:01.022485
b'BLEU = 2.84, 9.2/3.2/2.2/1.8 (BP=0.865, ratio=0.873, hyp_len=2719, ref_len=3113)\n'
Validation perplexity: 634652.3115346945
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.84
Epoch 398 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.9779041348665487 Loss (std): 2.947241401134794 Loss ratio: 3.013834685888708 Tokens per Sec: 2439.0351514274803
Epoch Step: 10 / 67 Loss (mean): 0.6655839850718621 Loss (std): 0.9846434316283648 Loss ratio: 1.4793676736708956 Tokens per Sec: 3120.3264062072317
Epoch Step: 15 / 67 Loss (mean): 2.1288072234019637 Loss (std): 2.5827290040037902 Loss ratio: 1.213228222645934 Tokens per Sec: 2516.1976431361054
Epoch Step: 20 / 67 Loss (mean): 0.693768302211538 Loss (std): 1.066373811929792 Loss ratio: 1.5370748541414947 Tokens per Sec: 2397.9514725206845
Epoch Step: 25 / 67 Loss (mean): 0.5318346515414305 Loss (std): 0.6228292660138708 Loss ratio: 1.1710956858653496 Tokens per Sec: 2807.344095216119
Epoch Step: 30 / 67 Loss (mean): 0.28299709179918864 Loss (std): 0.45524523439161385 Loss ratio: 1.6086569352968845 Tokens per Sec: 2839.4128667088503
Epoch Step: 35 / 67 Loss (mean): 0.7383200387339457 Loss (std): 1.0101541456839473 Loss ratio: 1.3681792348696598 Tokens per Sec: 3097.791774137244
Epoch Step: 40 / 67 Loss (mean): 0.8013970017200336 Loss (std): 1.196811553422536 Loss ratio: 1.4934065773316179 Tokens per Sec: 2828.9223340801154
Epoch Step: 45 / 67 Loss (mean): 0.9357429236697499 Loss (std): 1.4083992689299412 Loss ratio: 1.5051134593746658 Tokens per Sec: 2856.359871199813
Epoch Step: 50 / 67 Loss (mean): 0.5011309916444588 Loss (std): 0.8561968529117565 Loss ratio: 1.7085290416825964 Tokens per Sec: 2593.6110629560444
Epoch Step: 55 / 67 Loss (mean): 0.38602595640622894 Loss (std): 0.4707098799486527 Loss ratio: 1.2193736512715425 Tokens per Sec: 2666.9272914860594
Epoch Step: 60 / 67 Loss (mean): 4.1440619796921965 Loss (std): 11.514679312213946 Loss ratio: 2.7785972721067287 Tokens per Sec: 2831.6969120561407
Epoch Step: 65 / 67 Loss (mean): 1.563767543339054 Loss (std): 5.017551852427223 Loss ratio: 3.208630255692245 Tokens per Sec: 2734.879376480613
Mean loss per sample: 1.1041684944117522 Std loss per sample: 4.987203906939369 ratio: 4.5167054957462005
Epoch ended with duration 0:00:11.548881
Train perplexity: 1.161130015364656
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings from inactive ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 92.88853070139885 Loss (std): 42.466679331283935 Loss ratio: 0.45717893275541294 Tokens per Sec: 4260.224045354194
Mean loss per sample: 99.81672482937574 Std loss per sample: 50.98406732621604 ratio: 0.5107768003144458
Epoch ended with duration 0:00:01.054648
b'BLEU = 2.70, 7.9/2.8/1.9/1.5 (BP=0.972, ratio=0.973, hyp_len=3028, ref_len=3113)\n'
Validation perplexity: 749344.4980367457
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.7
Epoch 399 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2901597587624565 Loss (std): 0.3425013014807087 Loss ratio: 1.18038870359381 Tokens per Sec: 2371.40880769043
Epoch Step: 10 / 67 Loss (mean): 0.990758486015693 Loss (std): 1.0997302780187965 Loss ratio: 1.109988249953155 Tokens per Sec: 2552.295502973471
Epoch Step: 15 / 67 Loss (mean): 0.6906417716963915 Loss (std): 1.0086452240850778 Loss ratio: 1.4604463057709196 Tokens per Sec: 2734.8906094052636
Epoch Step: 20 / 67 Loss (mean): 0.5829471115939668 Loss (std): 0.6378828056330016 Loss ratio: 1.0942378698623667 Tokens per Sec: 2618.199751710561
Epoch Step: 25 / 67 Loss (mean): 0.496224539107061 Loss (std): 0.7092531616808023 Loss ratio: 1.4292988471651946 Tokens per Sec: 3186.350957328133
Epoch Step: 30 / 67 Loss (mean): 0.8134591531415936 Loss (std): 0.9583921029297496 Loss ratio: 1.1781686876697157 Tokens per Sec: 2989.462499528085
Epoch Step: 35 / 67 Loss (mean): 0.521414738297608 Loss (std): 0.7575929463159201 Loss ratio: 1.452956525144306 Tokens per Sec: 2312.7375293871755
Epoch Step: 40 / 67 Loss (mean): 6.38702694157837 Loss (std): 14.721195326760313 Loss ratio: 2.304858811684047 Tokens per Sec: 2639.491156254677
Epoch Step: 45 / 67 Loss (mean): 0.818278921559795 Loss (std): 1.0463044661215026 Loss ratio: 1.2786648153261087 Tokens per Sec: 3217.3664233759996
Epoch Step: 50 / 67 Loss (mean): 0.6924838677005027 Loss (std): 0.711007693009019 Loss ratio: 1.026749829378737 Tokens per Sec: 3243.9814377893194
Epoch Step: 55 / 67 Loss (mean): 0.5586882481402426 Loss (std): 0.7219158350858818 Loss ratio: 1.2921621986662328 Tokens per Sec: 2369.349529804216
Epoch Step: 60 / 67 Loss (mean): 0.5923159092781134 Loss (std): 0.8543061812276597 Loss ratio: 1.4423151022042404 Tokens per Sec: 3021.3563773532214
Epoch Step: 65 / 67 Loss (mean): 0.6479136067100626 Loss (std): 1.0772939061931641 Loss ratio: 1.6627122737294922 Tokens per Sec: 2693.1208985548333
Mean loss per sample: 0.9765582655116627 Std loss per sample: 4.145506512767625 ratio: 4.245017075960755
Epoch ended with duration 0:00:11.437662
Train perplexity: 1.1412544527616326
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 94.05067285895348 Loss (std): 42.55218904669604 Loss ratio: 0.45243896458360255 Tokens per Sec: 4286.627348859054
Mean loss per sample: 99.2816120251769 Std loss per sample: 50.42673626738605 ratio: 0.5079161713711728
Epoch ended with duration 0:00:01.038629
b'BLEU = 2.40, 8.1/2.7/1.7/1.2 (BP=0.921, ratio=0.924, hyp_len=2876, ref_len=3113)\n'
Validation perplexity: 696927.5445139742
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.4
Epoch 400 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6200132393278182 Loss (std): 0.8833349292210699 Loss ratio: 1.424703334042882 Tokens per Sec: 2603.2199761655297
Epoch Step: 10 / 67 Loss (mean): 2.0150926229034667 Loss (std): 10.032260610095385 Loss ratio: 4.978560536656771 Tokens per Sec: 2549.154693679619
Epoch Step: 15 / 67 Loss (mean): 0.9266376557061449 Loss (std): 1.3632671700510643 Loss ratio: 1.4711976808369456 Tokens per Sec: 3040.356745718004
Epoch Step: 20 / 67 Loss (mean): 0.4776533282965829 Loss (std): 0.6837123941409542 Loss ratio: 1.4313987857662864 Tokens per Sec: 2447.956366372757
Epoch Step: 25 / 67 Loss (mean): 0.5721852139686234 Loss (std): 0.8290064226573949 Loss ratio: 1.448842791493131 Tokens per Sec: 2666.3745356101285
Epoch Step: 30 / 67 Loss (mean): 0.4821521916164784 Loss (std): 0.78924959597632 Loss ratio: 1.6369304333767671 Tokens per Sec: 2643.964417837434
Epoch Step: 35 / 67 Loss (mean): 0.650903456058586 Loss (std): 1.1618110016214245 Loss ratio: 1.7849206219560356 Tokens per Sec: 2572.9041868807335
Epoch Step: 40 / 67 Loss (mean): 0.7535973844933324 Loss (std): 1.0687054395840518 Loss ratio: 1.4181384670046018 Tokens per Sec: 3066.104179196541
Epoch Step: 45 / 67 Loss (mean): 0.6981764952142839 Loss (std): 0.9691630854355529 Loss ratio: 1.3881347941083262 Tokens per Sec: 3337.1839548671132
Epoch Step: 50 / 67 Loss (mean): 1.476840542833088 Loss (std): 1.6734618626132478 Loss ratio: 1.1331364585935408 Tokens per Sec: 3198.0583115475147
Epoch Step: 55 / 67 Loss (mean): 0.430137464980362 Loss (std): 0.5050239657495195 Loss ratio: 1.1740989959397665 Tokens per Sec: 2898.5777414203385
Epoch Step: 60 / 67 Loss (mean): 1.0389076535502682 Loss (std): 2.3659357454079455 Loss ratio: 2.2773301720540924 Tokens per Sec: 2809.9683988283086
Epoch Step: 65 / 67 Loss (mean): 0.542491100348343 Loss (std): 0.7815441396628601 Loss ratio: 1.4406579926583438 Tokens per Sec: 2458.475642890896
Mean loss per sample: 0.9004315492518644 Std loss per sample: 3.9660598821788358 ratio: 4.404621190221611
Epoch ended with duration 0:00:11.454325
Train perplexity: 1.1295599494266748
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 93.33298075199127 Loss (std): 42.66071030548107 Loss ratio: 0.45708076568175926 Tokens per Sec: 4281.275829748989
Mean loss per sample: 99.17174380394768 Std loss per sample: 50.53357092917615 ratio: 0.509556139590283
Epoch ended with duration 0:00:01.036719
b'BLEU = 1.99, 7.6/2.2/1.2/0.9 (BP=0.960, ratio=0.961, hyp_len=2991, ref_len=3113)\n'
Validation perplexity: 686627.7797660588
Validation accuracy: 0.0020491803278688526
Validation BLEU: 1.99
Model saved checkpoint_commit_msg_generator!
Epoch 401 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3439893624090473 Loss (std): 0.537866962933788 Loss ratio: 1.563615104743255 Tokens per Sec: 2772.6147140466373
Epoch Step: 10 / 67 Loss (mean): 0.4658123530098237 Loss (std): 0.5550401701260008 Loss ratio: 1.1915531362353016 Tokens per Sec: 2467.320124452239
Epoch Step: 15 / 67 Loss (mean): 0.5340841951183393 Loss (std): 0.5341019109765868 Loss ratio: 1.0000331705345513 Tokens per Sec: 2977.418796206605
Epoch Step: 20 / 67 Loss (mean): 0.9857962353853509 Loss (std): 2.1063842508840724 Loss ratio: 2.136733916477861 Tokens per Sec: 3185.5655101088964
Epoch Step: 25 / 67 Loss (mean): 0.46715524687897414 Loss (std): 0.5072711474659085 Loss ratio: 1.085872738998321 Tokens per Sec: 2787.6560069486436
Epoch Step: 30 / 67 Loss (mean): 0.7748762188712135 Loss (std): 0.9271741286662964 Loss ratio: 1.1965448236583387 Tokens per Sec: 3077.1215282492467
Epoch Step: 35 / 67 Loss (mean): 0.8909512463797 Loss (std): 1.320425529277233 Loss ratio: 1.482040161729009 Tokens per Sec: 2487.181467931024
Epoch Step: 40 / 67 Loss (mean): 0.7609191931696841 Loss (std): 1.00263285717078 Loss ratio: 1.317660096066461 Tokens per Sec: 2665.674906235006
Epoch Step: 45 / 67 Loss (mean): 0.6966620453458745 Loss (std): 1.719817699396827 Loss ratio: 2.4686542217797762 Tokens per Sec: 2292.7113410021198
Epoch Step: 50 / 67 Loss (mean): 1.497088931966573 Loss (std): 1.582839609852499 Loss ratio: 1.057278279235746 Tokens per Sec: 2485.9986679450258
Epoch Step: 55 / 67 Loss (mean): 0.5626364665549772 Loss (std): 0.6812630924942673 Loss ratio: 1.210840627991358 Tokens per Sec: 2677.254295009675
Epoch Step: 60 / 67 Loss (mean): 1.000877899961779 Loss (std): 1.2575962862417733 Loss ratio: 1.256493210899949 Tokens per Sec: 3149.5833032654523
Epoch Step: 65 / 67 Loss (mean): 0.7107494516239967 Loss (std): 1.179243304138771 Loss ratio: 1.6591547154124555 Tokens per Sec: 3348.918881350323
Mean loss per sample: 1.3380753292242973 Std loss per sample: 6.392087215432459 ratio: 4.777075756368701
Epoch ended with duration 0:00:11.471553
Train perplexity: 1.19846456712089
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 94.10964143276215 Loss (std): 43.858832216455255 Loss ratio: 0.4660397335355992 Tokens per Sec: 4417.7417059821855
Mean loss per sample: 98.33514266595489 Std loss per sample: 50.74084575141002 ratio: 0.5159991064819726
Epoch ended with duration 0:00:01.018811
b'BLEU = 2.24, 8.0/2.6/1.5/1.1 (BP=0.936, ratio=0.938, hyp_len=2919, ref_len=3113)\n'
Validation perplexity: 613032.4684218635
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.24
Epoch 402 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3890024243046355 Loss (std): 0.44123512845749685 Loss ratio: 1.134273466923067 Tokens per Sec: 2233.8136287973794
Epoch Step: 10 / 67 Loss (mean): 0.5604169439720863 Loss (std): 0.7792714567737985 Loss ratio: 1.390520870497829 Tokens per Sec: 2743.3679792531143
Epoch Step: 15 / 67 Loss (mean): 0.6124654764280422 Loss (std): 0.8000481957240997 Loss ratio: 1.3062747640733288 Tokens per Sec: 2857.6645498325233
Epoch Step: 20 / 67 Loss (mean): 2.148426817904692 Loss (std): 2.488081567483277 Loss ratio: 1.1580946331278072 Tokens per Sec: 3224.3783695082693
Epoch Step: 25 / 67 Loss (mean): 0.7786744849727256 Loss (std): 1.074620320235198 Loss ratio: 1.3800636093435608 Tokens per Sec: 2696.3472029780155
Epoch Step: 30 / 67 Loss (mean): 0.5143366590964433 Loss (std): 0.6494537986364144 Loss ratio: 1.2627017482621927 Tokens per Sec: 2819.1936091640487
Epoch Step: 35 / 67 Loss (mean): 0.62092667188017 Loss (std): 0.8637602828288006 Loss ratio: 1.3910825898544972 Tokens per Sec: 2614.5854685589084
Epoch Step: 40 / 67 Loss (mean): 0.5488917498441879 Loss (std): 0.8125608317843879 Loss ratio: 1.4803662689684203 Tokens per Sec: 2627.086787627415
Epoch Step: 45 / 67 Loss (mean): 0.3718506734148832 Loss (std): 0.5126062052423676 Loss ratio: 1.378527032195098 Tokens per Sec: 2732.6951415995254
Epoch Step: 50 / 67 Loss (mean): 0.6212653781985864 Loss (std): 0.7745380178220262 Loss ratio: 1.246710415551994 Tokens per Sec: 3425.0192529615215
Epoch Step: 55 / 67 Loss (mean): 0.8226770908222534 Loss (std): 1.3277195534098118 Loss ratio: 1.6139012113279783 Tokens per Sec: 2705.222102473014
Epoch Step: 60 / 67 Loss (mean): 0.6694598785979906 Loss (std): 1.1803195425129211 Loss ratio: 1.7630922781881913 Tokens per Sec: 2627.2594296903944
Epoch Step: 65 / 67 Loss (mean): 2.3306919289316284 Loss (std): 3.275226118263136 Loss ratio: 1.4052591325377246 Tokens per Sec: 2602.8266063736783
Mean loss per sample: 0.9698123907060754 Std loss per sample: 3.847849135808275 ratio: 3.9676221635061135
Epoch ended with duration 0:00:11.474195
Train perplexity: 1.1402132879928306
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 94.53722050786018 Loss (std): 42.87938611799665 Loss ratio: 0.4535714704499007 Tokens per Sec: 4391.812171878993
Mean loss per sample: 98.28465100487725 Std loss per sample: 50.29926313765619 ratio: 0.5117712951451612
Epoch ended with duration 0:00:01.023122
b'BLEU = 2.18, 7.6/2.3/1.4/1.0 (BP=0.980, ratio=0.980, hyp_len=3051, ref_len=3113)\n'
Validation perplexity: 608852.0972141696
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.18
Epoch 403 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.9158650385506917 Loss (std): 1.2627103170236031 Loss ratio: 1.3787078487260263 Tokens per Sec: 3367.484455384207
Epoch Step: 10 / 67 Loss (mean): 0.5529640615277458 Loss (std): 0.8336214775812447 Loss ratio: 1.5075509161989482 Tokens per Sec: 3072.87472903493
Epoch Step: 15 / 67 Loss (mean): 0.5346399978516274 Loss (std): 0.7722491376250021 Loss ratio: 1.444428289555911 Tokens per Sec: 2659.535221516265
Epoch Step: 20 / 67 Loss (mean): 0.4808849397304584 Loss (std): 0.6897111494878397 Loss ratio: 1.4342540023699448 Tokens per Sec: 2057.879278065704
Epoch Step: 25 / 67 Loss (mean): 0.4323320806288393 Loss (std): 0.7887887924502355 Loss ratio: 1.8244974818961381 Tokens per Sec: 2686.3346587973456
Epoch Step: 30 / 67 Loss (mean): 0.5451996972187771 Loss (std): 0.6507466616944203 Loss ratio: 1.1935932191710104 Tokens per Sec: 2905.4257892605247
Epoch Step: 35 / 67 Loss (mean): 0.681015239439148 Loss (std): 1.563037148638291 Loss ratio: 2.2951573740486846 Tokens per Sec: 2735.9566807998963
Epoch Step: 40 / 67 Loss (mean): 0.569389077320011 Loss (std): 0.7251696850094635 Loss ratio: 1.2735925466338018 Tokens per Sec: 3289.395159658855
Epoch Step: 45 / 67 Loss (mean): 0.6194694236473879 Loss (std): 0.8636991827294184 Loss ratio: 1.3942563583591012 Tokens per Sec: 2778.483370854903
Epoch Step: 50 / 67 Loss (mean): 0.7311110888549592 Loss (std): 0.9290353734763621 Loss ratio: 1.2707171148660663 Tokens per Sec: 2724.816659289474
Epoch Step: 55 / 67 Loss (mean): 0.786974279966671 Loss (std): 1.3247355165884713 Loss ratio: 1.6833275880942067 Tokens per Sec: 2536.5676590830913
Epoch Step: 60 / 67 Loss (mean): 0.4575778747530421 Loss (std): 0.680215132123824 Loss ratio: 1.4865559933179477 Tokens per Sec: 2673.0727029058544
Epoch Step: 65 / 67 Loss (mean): 0.7104123384488048 Loss (std): 0.9692916802184586 Loss ratio: 1.36440715871422 Tokens per Sec: 3053.0320469833246
Mean loss per sample: 0.8205179082525698 Std loss per sample: 3.9466401700783265 ratio: 4.809937882383771
Epoch ended with duration 0:00:11.386661
Train perplexity: 1.1174126051621864
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow call log[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 108.48705732822418 Loss (std): 40.71465311688214 Loss ratio: 0.37529502707130524 Tokens per Sec: 4326.964935000896
Mean loss per sample: 98.98531035834648 Std loss per sample: 49.91568282965784 ratio: 0.5042736406942925
Epoch ended with duration 0:00:01.029574
b'BLEU = 2.39, 8.0/2.7/1.7/1.3 (BP=0.911, ratio=0.915, hyp_len=2849, ref_len=3113)\n'
Validation perplexity: 669497.3914688876
Validation accuracy: 0.0
Validation BLEU: 2.39
Epoch 404 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.45173500928649446 Loss (std): 0.6287924285879573 Loss ratio: 1.3919497396961131 Tokens per Sec: 2993.52558242571
Epoch Step: 10 / 67 Loss (mean): 0.6158176195749547 Loss (std): 0.7661760906171341 Loss ratio: 1.2441607161970434 Tokens per Sec: 2473.298605561445
Epoch Step: 15 / 67 Loss (mean): 0.6469738006271655 Loss (std): 0.8469866839978368 Loss ratio: 1.3091514419544998 Tokens per Sec: 3241.882117218282
Epoch Step: 20 / 67 Loss (mean): 0.3067540109550464 Loss (std): 0.5548688195279555 Loss ratio: 1.8088396555938413 Tokens per Sec: 2685.5805662341927
Epoch Step: 25 / 67 Loss (mean): 0.5957036421750672 Loss (std): 0.6825650285943259 Loss ratio: 1.1458130860206015 Tokens per Sec: 2931.27742954619
Epoch Step: 30 / 67 Loss (mean): 0.5352875399985351 Loss (std): 0.7593083956003231 Loss ratio: 1.4185056420375508 Tokens per Sec: 3346.21132382714
Epoch Step: 35 / 67 Loss (mean): 0.5882921647134935 Loss (std): 1.2123429731933675 Loss ratio: 2.060783817822553 Tokens per Sec: 3215.259466590019
Epoch Step: 40 / 67 Loss (mean): 3.279308577431948 Loss (std): 11.257168847268536 Loss ratio: 3.4327873030125495 Tokens per Sec: 2089.052523715517
Epoch Step: 45 / 67 Loss (mean): 0.695487017990672 Loss (std): 0.910801000311349 Loss ratio: 1.3095873492257835 Tokens per Sec: 2754.584734401297
Epoch Step: 50 / 67 Loss (mean): 0.44110533260027296 Loss (std): 0.5545553388145746 Loss ratio: 1.2571948190821565 Tokens per Sec: 2586.3639326099355
Epoch Step: 55 / 67 Loss (mean): 0.5003047228237847 Loss (std): 0.6068229999251353 Loss ratio: 1.2129067990806637 Tokens per Sec: 2729.3013083338146
Epoch Step: 60 / 67 Loss (mean): 0.7026557676726952 Loss (std): 1.0053342683416695 Loss ratio: 1.4307635610414078 Tokens per Sec: 2652.155431875882
Epoch Step: 65 / 67 Loss (mean): 0.42621897542267106 Loss (std): 0.42995710041947094 Loss ratio: 1.008770433069276 Tokens per Sec: 2573.2994294291743
Mean loss per sample: 0.6557676168664863 Std loss per sample: 1.9781748065867601 ratio: 3.0165789766186557
Epoch ended with duration 0:00:11.376818
Train perplexity: 1.0927802877527901
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings if not active device[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 93.3841199874878 Loss (std): 43.20506257166964 Loss ratio: 0.4626596318245387 Tokens per Sec: 4425.645576374059
Mean loss per sample: 97.95219235647409 Std loss per sample: 50.890651056022456 ratio: 0.5195458093558318
Epoch ended with duration 0:00:01.023698
b'BLEU = 2.48, 8.0/2.9/1.7/1.3 (BP=0.916, ratio=0.919, hyp_len=2862, ref_len=3113)\n'
Validation perplexity: 582029.5820717203
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.48
Epoch 405 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.45170275486816536 Loss (std): 0.6910844711423694 Loss ratio: 1.5299540764237098 Tokens per Sec: 3005.9717415166165
Epoch Step: 10 / 67 Loss (mean): 0.3954524903019774 Loss (std): 0.5891805735078354 Loss ratio: 1.489889652883264 Tokens per Sec: 2879.1041764906017
Epoch Step: 15 / 67 Loss (mean): 1.2381820203372627 Loss (std): 1.497201653107104 Loss ratio: 1.2091935018562845 Tokens per Sec: 3297.600165476762
Epoch Step: 20 / 67 Loss (mean): 0.6990587113177753 Loss (std): 0.8009555369239748 Loss ratio: 1.145762900821473 Tokens per Sec: 2675.689187044606
Epoch Step: 25 / 67 Loss (mean): 0.5038739713781979 Loss (std): 0.734354372205764 Loss ratio: 1.4574167627614407 Tokens per Sec: 2664.376241360905
Epoch Step: 30 / 67 Loss (mean): 0.45473501977176056 Loss (std): 0.6204371527274753 Loss ratio: 1.3643927248859866 Tokens per Sec: 2747.570959974782
Epoch Step: 35 / 67 Loss (mean): 0.43919441122125136 Loss (std): 0.7389496452012101 Loss ratio: 1.6825114945029485 Tokens per Sec: 2650.7573950197116
Epoch Step: 40 / 67 Loss (mean): 0.49069114940357395 Loss (std): 0.7163932541593989 Loss ratio: 1.459967751670601 Tokens per Sec: 2644.529235172199
Epoch Step: 45 / 67 Loss (mean): 0.7873166677891277 Loss (std): 0.8576335980895212 Loss ratio: 1.089312132179103 Tokens per Sec: 3234.389874510172
Epoch Step: 50 / 67 Loss (mean): 3.5847533635387663 Loss (std): 14.831950065535231 Loss ratio: 4.137509212319576 Tokens per Sec: 2597.2753433249995
Epoch Step: 55 / 67 Loss (mean): 0.5215763312007766 Loss (std): 0.728813941104526 Loss ratio: 1.397329398415464 Tokens per Sec: 2463.423905577284
Epoch Step: 60 / 67 Loss (mean): 0.5107784554857062 Loss (std): 0.7462659613035234 Loss ratio: 1.4610364890858385 Tokens per Sec: 2367.79000415423
Epoch Step: 65 / 67 Loss (mean): 0.9194616647200746 Loss (std): 1.4468417203027328 Loss ratio: 1.5735748164587333 Tokens per Sec: 2689.3884092916637
Mean loss per sample: 0.8537379777352262 Std loss per sample: 4.399005223316192 ratio: 5.152640901586407
Epoch ended with duration 0:00:11.414798
Train perplexity: 1.1224463054419123
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 94.68472969532013 Loss (std): 43.500341805310065 Loss ratio: 0.4594229919152434 Tokens per Sec: 4424.024974824835
Mean loss per sample: 98.05332315187962 Std loss per sample: 50.21160947042196 ratio: 0.5120847295776679
Epoch ended with duration 0:00:01.018827
b'BLEU = 2.12, 7.9/2.5/1.4/0.9 (BP=0.934, ratio=0.936, hyp_len=2913, ref_len=3113)\n'
Validation perplexity: 590061.2286821762
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.12
Model saved checkpoint_commit_msg_generator!
Epoch 406 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.466564963277051 Loss (std): 0.6054047328017839 Loss ratio: 1.2975786448891329 Tokens per Sec: 2426.25608024468
Epoch Step: 10 / 67 Loss (mean): 0.6413911947311135 Loss (std): 0.9312020461810813 Loss ratio: 1.4518472561374396 Tokens per Sec: 2952.294307488471
Epoch Step: 15 / 67 Loss (mean): 0.5363142201604205 Loss (std): 0.764160508586226 Loss ratio: 1.4248373059316846 Tokens per Sec: 2918.128197228716
Epoch Step: 20 / 67 Loss (mean): 0.8616125430853572 Loss (std): 1.3110403067031717 Loss ratio: 1.5216123734787497 Tokens per Sec: 2785.1285765828407
Epoch Step: 25 / 67 Loss (mean): 0.58614288559329 Loss (std): 1.0338272391605459 Loss ratio: 1.7637802395470734 Tokens per Sec: 2208.928185989061
Epoch Step: 30 / 67 Loss (mean): 1.0113753199693747 Loss (std): 1.612050143277491 Loss ratio: 1.5939188068444317 Tokens per Sec: 3131.2315703170248
Epoch Step: 35 / 67 Loss (mean): 0.40166368830250576 Loss (std): 0.5804285785678871 Loss ratio: 1.445061118222735 Tokens per Sec: 2618.5759325737477
Epoch Step: 40 / 67 Loss (mean): 0.460390514565006 Loss (std): 0.8536074764979396 Loss ratio: 1.8540944035401326 Tokens per Sec: 2731.3916513341733
Epoch Step: 45 / 67 Loss (mean): 0.5315207721705519 Loss (std): 0.8636576405004447 Loss ratio: 1.6248803164804972 Tokens per Sec: 2695.738941350999
Epoch Step: 50 / 67 Loss (mean): 4.693700223962878 Loss (std): 14.20627875779686 Loss ratio: 3.0266693823498034 Tokens per Sec: 3403.030120395639
Epoch Step: 55 / 67 Loss (mean): 0.40036395529750735 Loss (std): 0.6444448130762896 Loss ratio: 1.6096474334144484 Tokens per Sec: 2908.4367214048866
Epoch Step: 60 / 67 Loss (mean): 0.46616601347705 Loss (std): 0.5915829469979781 Loss ratio: 1.2690392046933352 Tokens per Sec: 2906.657324919593
Epoch Step: 65 / 67 Loss (mean): 0.3320159857903491 Loss (std): 0.577445042406425 Loss ratio: 1.7392085535635977 Tokens per Sec: 2488.366461069657
Mean loss per sample: 0.8976480315479559 Std loss per sample: 4.195929967856644 ratio: 4.674359905430797
Epoch ended with duration 0:00:11.414666
Train perplexity: 1.1291346269085416
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 93.53387248516083 Loss (std): 43.85794189761459 Loss ratio: 0.4688990280454031 Tokens per Sec: 4412.941668475355
Mean loss per sample: 98.24973695651919 Std loss per sample: 51.05870953687479 ratio: 0.5196829133442975
Epoch ended with duration 0:00:01.018439
b'BLEU = 2.32, 9.1/2.7/1.6/1.2 (BP=0.890, ratio=0.896, hyp_len=2788, ref_len=3113)\n'
Validation perplexity: 605978.1307669115
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.32
Epoch 407 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6078980353049701 Loss (std): 0.9444155618742517 Loss ratio: 1.5535756114106498 Tokens per Sec: 2876.23769395334
Epoch Step: 10 / 67 Loss (mean): 0.8793322455894668 Loss (std): 1.1505406617712348 Loss ratio: 1.308425418881303 Tokens per Sec: 3108.4706742099684
Epoch Step: 15 / 67 Loss (mean): 0.5028959973169549 Loss (std): 0.7330232048579363 Loss ratio: 1.457603975312497 Tokens per Sec: 2374.063968918438
Epoch Step: 20 / 67 Loss (mean): 0.5902972273761407 Loss (std): 0.8100631208037932 Loss ratio: 1.3722970111252386 Tokens per Sec: 2818.49602609105
Epoch Step: 25 / 67 Loss (mean): 0.7189831131217943 Loss (std): 0.7953440766629746 Loss ratio: 1.106206894358929 Tokens per Sec: 2664.1294733350974
Epoch Step: 30 / 67 Loss (mean): 0.5388983588163683 Loss (std): 0.7696838880047334 Loss ratio: 1.4282542810025634 Tokens per Sec: 2378.36198300591
Epoch Step: 35 / 67 Loss (mean): 0.9463636043074075 Loss (std): 1.3606899464682072 Loss ratio: 1.4378088297933043 Tokens per Sec: 3246.257806965842
Epoch Step: 40 / 67 Loss (mean): 0.5149275297881104 Loss (std): 0.8964001151384997 Loss ratio: 1.740827715129861 Tokens per Sec: 2883.253411142158
Epoch Step: 45 / 67 Loss (mean): 1.2284664106846321 Loss (std): 1.4686227170966313 Loss ratio: 1.1954927740174504 Tokens per Sec: 2842.1198742971337
Epoch Step: 50 / 67 Loss (mean): 0.812231500109192 Loss (std): 1.2432479866161557 Loss ratio: 1.530657191267539 Tokens per Sec: 2697.5871420217727
Epoch Step: 55 / 67 Loss (mean): 0.5892792948998249 Loss (std): 0.7841180203540705 Loss ratio: 1.3306390147092602 Tokens per Sec: 2881.1464632081224
Epoch Step: 60 / 67 Loss (mean): 0.5569569690269418 Loss (std): 0.7084307513297967 Loss ratio: 1.2719667599590223 Tokens per Sec: 2989.501007575705
Epoch Step: 65 / 67 Loss (mean): 0.35806270559260156 Loss (std): 0.39224314777192126 Loss ratio: 1.0954593752587283 Tokens per Sec: 2866.9665710123863
Mean loss per sample: 0.5859721120774198 Std loss per sample: 2.1146430700036185 ratio: 3.608777664361316
Epoch ended with duration 0:00:11.350330
Train perplexity: 1.0825093946342077
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 93.80787035822868 Loss (std): 43.89470782833024 Loss ratio: 0.46792137654023463 Tokens per Sec: 4405.1703624437705
Mean loss per sample: 98.44211558411357 Std loss per sample: 51.03421312203482 ratio: 0.51841849211813
Epoch ended with duration 0:00:01.019977
b'BLEU = 2.53, 8.2/2.8/1.8/1.4 (BP=0.924, ratio=0.927, hyp_len=2886, ref_len=3113)\n'
Validation perplexity: 621984.1732254942
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.53
Epoch 408 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3532831534539582 Loss (std): 0.4863043637748172 Loss ratio: 1.3765285975862278 Tokens per Sec: 3121.586793787965
Epoch Step: 10 / 67 Loss (mean): 2.66545761260204 Loss (std): 10.68124361030049 Loss ratio: 4.007283237144926 Tokens per Sec: 2664.843552540427
Epoch Step: 15 / 67 Loss (mean): 0.5797232211043593 Loss (std): 0.7341302833630352 Loss ratio: 1.2663461745840265 Tokens per Sec: 3153.3071713522736
Epoch Step: 20 / 67 Loss (mean): 0.6496012129355222 Loss (std): 1.111811201360987 Loss ratio: 1.711528826026596 Tokens per Sec: 3258.4863252348996
Epoch Step: 25 / 67 Loss (mean): 0.2985118206415791 Loss (std): 0.4673622508926947 Loss ratio: 1.5656406834684546 Tokens per Sec: 2800.999085578238
Epoch Step: 30 / 67 Loss (mean): 0.5901559347475995 Loss (std): 1.2094138586420013 Loss ratio: 2.0493123722618307 Tokens per Sec: 2477.557141712742
Epoch Step: 35 / 67 Loss (mean): 0.5200210473994957 Loss (std): 0.7560409806131654 Loss ratio: 1.453866116369617 Tokens per Sec: 2499.680267462659
Epoch Step: 40 / 67 Loss (mean): 0.40561142814840423 Loss (std): 0.5573221962318585 Loss ratio: 1.374029816605529 Tokens per Sec: 2624.8492822188514
Epoch Step: 45 / 67 Loss (mean): 0.36172215854458045 Loss (std): 0.35924462304499294 Loss ratio: 0.9931507223401628 Tokens per Sec: 3052.8143446845515
Epoch Step: 50 / 67 Loss (mean): 0.6341155700720265 Loss (std): 0.8758188317332884 Loss ratio: 1.381165946822293 Tokens per Sec: 2504.6713927581227
Epoch Step: 55 / 67 Loss (mean): 0.5385386012494564 Loss (std): 0.7794187819920211 Loss ratio: 1.4472848931974454 Tokens per Sec: 2895.507051657284
Epoch Step: 60 / 67 Loss (mean): 0.3046147909590218 Loss (std): 0.3878048118829146 Loss ratio: 1.2730990857731657 Tokens per Sec: 2402.9147277156167
Epoch Step: 65 / 67 Loss (mean): 0.3898992893682589 Loss (std): 0.5117973552028103 Loss ratio: 1.312639876907852 Tokens per Sec: 2627.8280059490608
Mean loss per sample: 0.7014170289559196 Std loss per sample: 2.8107914774783516 ratio: 4.007304301782207
Epoch ended with duration 0:00:11.434584
Train perplexity: 1.0995505702364878
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings on engines ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 94.33518835902214 Loss (std): 44.148716832285814 Loss ratio: 0.4679983959353961 Tokens per Sec: 4400.21177147472
Mean loss per sample: 98.76284414926758 Std loss per sample: 50.72902788663223 ratio: 0.5136448663827634
Epoch ended with duration 0:00:01.022599
b'BLEU = 2.45, 8.3/2.6/1.6/1.2 (BP=0.967, ratio=0.968, hyp_len=3013, ref_len=3113)\n'
Validation perplexity: 649614.5018077656
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.45
Epoch 409 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.7412034023436718 Loss (std): 0.8837634452915769 Loss ratio: 1.1923359262749373 Tokens per Sec: 2459.172200936405
Epoch Step: 10 / 67 Loss (mean): 0.49315282006864436 Loss (std): 0.7656760754614867 Loss ratio: 1.5526142086238268 Tokens per Sec: 3185.0080295252073
Epoch Step: 15 / 67 Loss (mean): 0.4275107110006502 Loss (std): 0.5618193916970536 Loss ratio: 1.3141644811238407 Tokens per Sec: 2770.305256087505
Epoch Step: 20 / 67 Loss (mean): 0.4321582054035389 Loss (std): 0.6120324618447509 Loss ratio: 1.416223165942782 Tokens per Sec: 2643.577981780314
Epoch Step: 25 / 67 Loss (mean): 0.33581733109167544 Loss (std): 0.4204660410409965 Loss ratio: 1.2520677228722679 Tokens per Sec: 3145.3486717703536
Epoch Step: 30 / 67 Loss (mean): 0.6627274705897435 Loss (std): 0.890430630325294 Loss ratio: 1.3435849121101373 Tokens per Sec: 2798.432064737447
Epoch Step: 35 / 67 Loss (mean): 0.45441862409643363 Loss (std): 0.6662560137672663 Loss ratio: 1.4661723319374296 Tokens per Sec: 2948.4146247842577
Epoch Step: 40 / 67 Loss (mean): 0.5560800807870692 Loss (std): 0.881309546364835 Loss ratio: 1.5848608443543597 Tokens per Sec: 2635.2258971971155
Epoch Step: 45 / 67 Loss (mean): 0.4470353793585673 Loss (std): 0.5437402381715674 Loss ratio: 1.216324844247804 Tokens per Sec: 2913.0277296778004
Epoch Step: 50 / 67 Loss (mean): 0.34101454078700044 Loss (std): 0.7792107554507489 Loss ratio: 2.2849780940498023 Tokens per Sec: 2518.9374923413557
Epoch Step: 55 / 67 Loss (mean): 2.9202161386201624 Loss (std): 10.788312564002128 Loss ratio: 3.6943541340401387 Tokens per Sec: 2338.5237467376683
Epoch Step: 60 / 67 Loss (mean): 0.5564433519175509 Loss (std): 0.8158290965190583 Loss ratio: 1.466149417919438 Tokens per Sec: 3557.639960627823
Epoch Step: 65 / 67 Loss (mean): 0.5983786192155094 Loss (std): 0.8424593344382915 Loss ratio: 1.407903470118599 Tokens per Sec: 2541.5435123104207
Mean loss per sample: 1.0099303645493856 Std loss per sample: 4.601495248272152 ratio: 4.556250024550222
Epoch ended with duration 0:00:11.481366
Train perplexity: 1.1464191364585965
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings on run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 94.22360199689865 Loss (std): 43.824862814971645 Loss ratio: 0.46511555370610996 Tokens per Sec: 4310.737285188494
Mean loss per sample: 101.4670061860539 Std loss per sample: 49.8587759936663 ratio: 0.49137919672374375
Epoch ended with duration 0:00:01.051944
b'BLEU = 2.46, 8.0/2.6/1.7/1.4 (BP=0.917, ratio=0.921, hyp_len=2866, ref_len=3113)\n'
Validation perplexity: 937148.2663721751
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.46
Epoch 410 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3621540610838565 Loss (std): 0.3883726807248485 Loss ratio: 1.0723963154314071 Tokens per Sec: 2137.0873263909043
Epoch Step: 10 / 67 Loss (mean): 0.4289994716964429 Loss (std): 0.6735790389034868 Loss ratio: 1.5701162433601006 Tokens per Sec: 2969.9357059935282
Epoch Step: 15 / 67 Loss (mean): 5.631472952169133 Loss (std): 16.110709872195603 Loss ratio: 2.860834103090218 Tokens per Sec: 2972.6574133073022
Epoch Step: 20 / 67 Loss (mean): 0.4142663801976596 Loss (std): 0.5551941641125773 Loss ratio: 1.3401863888826233 Tokens per Sec: 3057.1239285064858
Epoch Step: 25 / 67 Loss (mean): 1.1648281714733457 Loss (std): 1.5948059439798963 Loss ratio: 1.3691340774860281 Tokens per Sec: 3086.9072217727403
Epoch Step: 30 / 67 Loss (mean): 0.5506673370182398 Loss (std): 0.8209019644578189 Loss ratio: 1.4907402514607984 Tokens per Sec: 2615.0893192994663
Epoch Step: 35 / 67 Loss (mean): 0.533370753422787 Loss (std): 0.9118018720867503 Loss ratio: 1.709508566481133 Tokens per Sec: 2541.1642194800643
Epoch Step: 40 / 67 Loss (mean): 0.6265097348332347 Loss (std): 0.8353432219671815 Loss ratio: 1.3333283994214942 Tokens per Sec: 2900.003679293189
Epoch Step: 45 / 67 Loss (mean): 2.446615620243392 Loss (std): 12.31339504388793 Loss ratio: 5.032827773192659 Tokens per Sec: 2936.6642055146776
Epoch Step: 50 / 67 Loss (mean): 0.5245069825978135 Loss (std): 0.6536456427294155 Loss ratio: 1.2462096109607452 Tokens per Sec: 2859.3387367195915
Epoch Step: 55 / 67 Loss (mean): 0.34796462172380416 Loss (std): 0.405025601540676 Loss ratio: 1.16398500380353 Tokens per Sec: 2631.203141159373
Epoch Step: 60 / 67 Loss (mean): 0.35298849739774596 Loss (std): 0.47193960436034615 Loss ratio: 1.3369829550807333 Tokens per Sec: 2742.7175864272363
Epoch Step: 65 / 67 Loss (mean): 0.6428533431899268 Loss (std): 0.9620662813650311 Loss ratio: 1.4965563943264661 Tokens per Sec: 2679.952712946175
Mean loss per sample: 0.834614227941121 Std loss per sample: 4.142911876144004 ratio: 4.963864426759176
Epoch ended with duration 0:00:11.417739
Train perplexity: 1.119545799401316
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 93.78443518280983 Loss (std): 43.956461091005444 Loss ratio: 0.4686967619448053 Tokens per Sec: 4443.515344217118
Mean loss per sample: 100.27172086058093 Std loss per sample: 51.346597910355065 ratio: 0.5120745656868503
Epoch ended with duration 0:00:01.029306
b'BLEU = 2.53, 8.0/2.6/1.8/1.4 (BP=0.932, ratio=0.934, hyp_len=2908, ref_len=3113)\n'
Validation perplexity: 797003.3911913652
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.53
Model saved checkpoint_commit_msg_generator!
Epoch 411 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.783578466551262 Loss (std): 1.1237508177413238 Loss ratio: 1.4341267220974705 Tokens per Sec: 2893.8705884089786
Epoch Step: 10 / 67 Loss (mean): 0.48431371615151875 Loss (std): 0.8876186144210961 Loss ratio: 1.8327348262492786 Tokens per Sec: 3317.751978198162
Epoch Step: 15 / 67 Loss (mean): 0.6759208385155944 Loss (std): 1.1532319375754707 Loss ratio: 1.706164201281485 Tokens per Sec: 2918.666789789592
Epoch Step: 20 / 67 Loss (mean): 0.3729321372011327 Loss (std): 0.6390591719421558 Loss ratio: 1.713607137047278 Tokens per Sec: 2607.9149962104043
Epoch Step: 25 / 67 Loss (mean): 0.4439676534093451 Loss (std): 0.6245905562360597 Loss ratio: 1.4068379789375727 Tokens per Sec: 2254.0001020312766
Epoch Step: 30 / 67 Loss (mean): 0.47277253233187366 Loss (std): 0.6245337266009606 Loss ratio: 1.3210025623116248 Tokens per Sec: 2619.6004838246727
Epoch Step: 35 / 67 Loss (mean): 4.809438150405185 Loss (std): 14.553615101524628 Loss ratio: 3.0260530744736815 Tokens per Sec: 2583.9476677231273
Epoch Step: 40 / 67 Loss (mean): 0.609344035416143 Loss (std): 0.8264673135717439 Loss ratio: 1.3563229727970005 Tokens per Sec: 2428.7357091971385
Epoch Step: 45 / 67 Loss (mean): 1.308275121537008 Loss (std): 1.391149511866575 Loss ratio: 1.0633463015273144 Tokens per Sec: 3246.2306856549626
Epoch Step: 50 / 67 Loss (mean): 0.37114931493852055 Loss (std): 0.4575320662420857 Loss ratio: 1.232743933039117 Tokens per Sec: 2637.076475565114
Epoch Step: 55 / 67 Loss (mean): 3.5728345232928405 Loss (std): 11.485548827252163 Loss ratio: 3.214688156524727 Tokens per Sec: 2510.733522608601
Epoch Step: 60 / 67 Loss (mean): 2.017361294309012 Loss (std): 8.818704347285681 Loss ratio: 4.3714055445414255 Tokens per Sec: 2695.9109785317023
Epoch Step: 65 / 67 Loss (mean): 0.5158416265021515 Loss (std): 0.7912293469215691 Loss ratio: 1.5338609880842353 Tokens per Sec: 3505.3344548787045
Mean loss per sample: 0.8545892238804897 Std loss per sample: 3.86547324806843 ratio: 4.523194465893473
Epoch ended with duration 0:00:11.448724
Train perplexity: 1.1225755887997164
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test java method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 93.3080720603466 Loss (std): 43.059377548236014 Loss ratio: 0.4614753750392307 Tokens per Sec: 4311.521339701288
Mean loss per sample: 102.08572470915855 Std loss per sample: 51.015075130879694 ratio: 0.49972780500134817
Epoch ended with duration 0:00:01.065390
b'BLEU = 2.18, 7.8/2.4/1.6/1.2 (BP=0.900, ratio=0.904, hyp_len=2815, ref_len=3113)\n'
Validation perplexity: 1019114.0466076927
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.18
Epoch 412 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.35420783427980496 Loss (std): 0.4582986231931078 Loss ratio: 1.2938692452270177 Tokens per Sec: 2895.8114823010765
Epoch Step: 10 / 67 Loss (mean): 0.42612027618815773 Loss (std): 0.6374223449625179 Loss ratio: 1.4958742415745963 Tokens per Sec: 2786.0686290276913
Epoch Step: 15 / 67 Loss (mean): 0.45472163424710743 Loss (std): 0.6156991773361439 Loss ratio: 1.3540133808578747 Tokens per Sec: 3425.8480058990463
Epoch Step: 20 / 67 Loss (mean): 0.22621194692882932 Loss (std): 0.33756656787760747 Loss ratio: 1.492257913256069 Tokens per Sec: 2314.0328766857756
Epoch Step: 25 / 67 Loss (mean): 3.067584573800559 Loss (std): 16.110523017655122 Loss ratio: 5.2518594451318155 Tokens per Sec: 2257.9594399778875
Epoch Step: 30 / 67 Loss (mean): 0.4246280475090316 Loss (std): 0.4923941516719773 Loss ratio: 1.159589326612968 Tokens per Sec: 2898.908993856083
Epoch Step: 35 / 67 Loss (mean): 0.6376122972324083 Loss (std): 1.1103095750165686 Loss ratio: 1.7413553343245247 Tokens per Sec: 3154.2921712224465
Epoch Step: 40 / 67 Loss (mean): 4.2622977530663775 Loss (std): 16.85366941903864 Loss ratio: 3.95412765495179 Tokens per Sec: 2711.103541926444
Epoch Step: 45 / 67 Loss (mean): 0.4959005901182536 Loss (std): 0.749465492956477 Loss ratio: 1.5113220429476757 Tokens per Sec: 2924.9963518575887
Epoch Step: 50 / 67 Loss (mean): 0.3638559614191763 Loss (std): 0.3983439441144505 Loss ratio: 1.0947847125020516 Tokens per Sec: 2616.591659914931
Epoch Step: 55 / 67 Loss (mean): 0.5191425813682145 Loss (std): 0.784936018570787 Loss ratio: 1.5119854289395154 Tokens per Sec: 2524.9903851111067
Epoch Step: 60 / 67 Loss (mean): 0.4306109229364665 Loss (std): 0.7022054585012638 Loss ratio: 1.6307191041804323 Tokens per Sec: 2539.8674375655432
Epoch Step: 65 / 67 Loss (mean): 0.46062840984086506 Loss (std): 0.5722768405178649 Loss ratio: 1.242382858485805 Tokens per Sec: 3253.6392393085493
Mean loss per sample: 0.8974543478054822 Std loss per sample: 4.896420845578154 ratio: 5.455899631609366
Epoch ended with duration 0:00:11.447735
Train perplexity: 1.129105037922417
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 93.79597270488739 Loss (std): 43.48536936726127 Loss ratio: 0.4636165936897992 Tokens per Sec: 4424.594398783475
Mean loss per sample: 98.09267070779546 Std loss per sample: 50.63528546390166 ratio: 0.5161984590544709
Epoch ended with duration 0:00:01.019081
b'BLEU = 2.33, 8.0/2.5/1.6/1.2 (BP=0.945, ratio=0.947, hyp_len=2947, ref_len=3113)\n'
Validation perplexity: 593216.0150066903
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.33
Epoch 413 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6220666803565109 Loss (std): 0.7153447123847758 Loss ratio: 1.1499486067551579 Tokens per Sec: 2589.4014476685293
Epoch Step: 10 / 67 Loss (mean): 0.5400974457006669 Loss (std): 0.8994533855268674 Loss ratio: 1.665353896202951 Tokens per Sec: 3024.4760837031217
Epoch Step: 15 / 67 Loss (mean): 0.6677748646470718 Loss (std): 1.242022638993358 Loss ratio: 1.8599421822350022 Tokens per Sec: 3545.598879885188
Epoch Step: 20 / 67 Loss (mean): 0.5486523863655748 Loss (std): 0.6617864041487644 Loss ratio: 1.2062034552198355 Tokens per Sec: 3004.808897010501
Epoch Step: 25 / 67 Loss (mean): 0.6367445346022578 Loss (std): 2.2653670103665555 Loss ratio: 3.5577329482405626 Tokens per Sec: 2442.330961985524
Epoch Step: 30 / 67 Loss (mean): 0.4980332181294216 Loss (std): 0.8489493455884282 Loss ratio: 1.7046038591100878 Tokens per Sec: 2790.7210629433725
Epoch Step: 35 / 67 Loss (mean): 0.5375932573697355 Loss (std): 0.7579730879871028 Loss ratio: 1.4099378621220295 Tokens per Sec: 2738.9962954335565
Epoch Step: 40 / 67 Loss (mean): 0.7875629872287391 Loss (std): 1.2891348336986506 Loss ratio: 1.636865691511015 Tokens per Sec: 3119.5227279669143
Epoch Step: 45 / 67 Loss (mean): 0.5874996323655068 Loss (std): 0.8209880045147173 Loss ratio: 1.397427265118607 Tokens per Sec: 2282.817749287796
Epoch Step: 50 / 67 Loss (mean): 0.8215078275534324 Loss (std): 1.090027875424035 Loss ratio: 1.3268624337643786 Tokens per Sec: 2858.6170256479504
Epoch Step: 55 / 67 Loss (mean): 0.4766121413631481 Loss (std): 0.6789327775924546 Loss ratio: 1.4244974449258754 Tokens per Sec: 2699.5030380676326
Epoch Step: 60 / 67 Loss (mean): 0.4062636918533826 Loss (std): 0.5850767579059155 Loss ratio: 1.440140405451406 Tokens per Sec: 2849.751064984062
Epoch Step: 65 / 67 Loss (mean): 2.115658566305683 Loss (std): 8.861629657708944 Loss ratio: 4.188591580343197 Tokens per Sec: 2641.741493073003
Mean loss per sample: 0.9002450721737385 Std loss per sample: 4.525228668031884 ratio: 5.026663080871116
Epoch ended with duration 0:00:11.445467
Train perplexity: 1.1295314506549492
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level ( ) return ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 94.19071409106255 Loss (std): 43.828488852339106 Loss ratio: 0.4653164515768105 Tokens per Sec: 4394.4688307894385
Mean loss per sample: 98.45943550426574 Std loss per sample: 51.06868798345577 ratio: 0.5186774403276284
Epoch ended with duration 0:00:01.027306
b'BLEU = 2.51, 8.9/2.9/1.7/1.3 (BP=0.918, ratio=0.921, hyp_len=2868, ref_len=3113)\n'
Validation perplexity: 623445.7838759294
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.51
Epoch 414 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6953860991634429 Loss (std): 1.0360579133937038 Loss ratio: 1.489903112299905 Tokens per Sec: 3233.1226943046518
Epoch Step: 10 / 67 Loss (mean): 0.4673910281744611 Loss (std): 0.580241536065362 Loss ratio: 1.241447740945463 Tokens per Sec: 2356.562730560184
Epoch Step: 15 / 67 Loss (mean): 0.4312180435681512 Loss (std): 0.6491455013806002 Loss ratio: 1.5053764819514261 Tokens per Sec: 2391.8325436284117
Epoch Step: 20 / 67 Loss (mean): 0.5044492904999061 Loss (std): 0.7396222915906631 Loss ratio: 1.4661975059132346 Tokens per Sec: 3116.525422704046
Epoch Step: 25 / 67 Loss (mean): 0.38966889310540864 Loss (std): 0.527436614017292 Loss ratio: 1.353550728193785 Tokens per Sec: 2877.324302327642
Epoch Step: 30 / 67 Loss (mean): 0.4024136356438248 Loss (std): 0.8387843061461628 Loss ratio: 2.084383410130189 Tokens per Sec: 2480.4349950684077
Epoch Step: 35 / 67 Loss (mean): 0.8508768879473791 Loss (std): 1.2742788475620874 Loss ratio: 1.4976066051530745 Tokens per Sec: 3020.551216235431
Epoch Step: 40 / 67 Loss (mean): 0.4475487287854776 Loss (std): 0.6794088850138117 Loss ratio: 1.5180668412522094 Tokens per Sec: 2215.4667724579463
Epoch Step: 45 / 67 Loss (mean): 0.29027412097002525 Loss (std): 0.31468732213340084 Loss ratio: 1.0841039534691987 Tokens per Sec: 2724.2247355642144
Epoch Step: 50 / 67 Loss (mean): 0.9969146885414375 Loss (std): 1.3280184173758303 Loss ratio: 1.3321284485423952 Tokens per Sec: 3269.930677504022
Epoch Step: 55 / 67 Loss (mean): 0.5009705892880447 Loss (std): 0.7634305038724803 Loss ratio: 1.5239028401995236 Tokens per Sec: 2628.982286951232
Epoch Step: 60 / 67 Loss (mean): 0.42004891514079645 Loss (std): 0.5545663123647349 Loss ratio: 1.3202422203110546 Tokens per Sec: 2763.945922546626
Epoch Step: 65 / 67 Loss (mean): 0.5316217782074091 Loss (std): 0.7042073404911802 Loss ratio: 1.3246397520916418 Tokens per Sec: 3801.112666500476
Mean loss per sample: 0.6167140331668315 Std loss per sample: 2.2950732991292533 ratio: 3.721454638131118
Epoch ended with duration 0:00:11.386416
Train perplexity: 1.0870213320539068
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 94.85684457421303 Loss (std): 43.38688109424738 Loss ratio: 0.45739325706014644 Tokens per Sec: 4155.847166887544
Mean loss per sample: 102.09252814777562 Std loss per sample: 51.128346705439256 ratio: 0.5008040023402363
Epoch ended with duration 0:00:01.055229
b'BLEU = 2.16, 7.8/2.3/1.4/1.1 (BP=0.935, ratio=0.937, hyp_len=2917, ref_len=3113)\n'
Validation perplexity: 1020054.0906070131
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.16
Epoch 415 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.7439383279415779 Loss (std): 0.9026925989759853 Loss ratio: 1.2133970855805598 Tokens per Sec: 2485.3268380596096
Epoch Step: 10 / 67 Loss (mean): 0.8099151342175901 Loss (std): 1.176411325092251 Loss ratio: 1.4525118440078424 Tokens per Sec: 2881.643205401255
Epoch Step: 15 / 67 Loss (mean): 0.3654025941104919 Loss (std): 0.6856427754063905 Loss ratio: 1.8764036885820878 Tokens per Sec: 2779.2574893394985
Epoch Step: 20 / 67 Loss (mean): 0.37353994003206026 Loss (std): 0.49179126837992154 Loss ratio: 1.3165694365580076 Tokens per Sec: 3373.281412728561
Epoch Step: 25 / 67 Loss (mean): 1.116558736859588 Loss (std): 1.4765130163180207 Loss ratio: 1.322378274940406 Tokens per Sec: 2744.463137517153
Epoch Step: 30 / 67 Loss (mean): 0.39864565232710447 Loss (std): 0.6227551943395053 Loss ratio: 1.5621773138729986 Tokens per Sec: 2928.8704076686768
Epoch Step: 35 / 67 Loss (mean): 0.29444246259663487 Loss (std): 0.3517617114321556 Loss ratio: 1.1946704572772304 Tokens per Sec: 3067.6855389864522
Epoch Step: 40 / 67 Loss (mean): 0.39859652306040516 Loss (std): 0.6251676514517148 Loss ratio: 1.5684222397418506 Tokens per Sec: 2533.3641118915943
Epoch Step: 45 / 67 Loss (mean): 0.4223155423132994 Loss (std): 0.9766065121351908 Loss ratio: 2.312504310842258 Tokens per Sec: 2114.398264669665
Epoch Step: 50 / 67 Loss (mean): 1.3758778903720668 Loss (std): 1.4700828585942987 Loss ratio: 1.068468989058874 Tokens per Sec: 3182.869564815029
Epoch Step: 55 / 67 Loss (mean): 0.4546111591553199 Loss (std): 0.704260693788387 Loss ratio: 1.549149596540751 Tokens per Sec: 2595.2302882730824
Epoch Step: 60 / 67 Loss (mean): 0.4727541029369604 Loss (std): 0.6662506879753618 Loss ratio: 1.4092964690022018 Tokens per Sec: 2700.6303589633526
Epoch Step: 65 / 67 Loss (mean): 0.4968641614614171 Loss (std): 0.7211884875412442 Loss ratio: 1.4514801901188168 Tokens per Sec: 2869.734484684133
Mean loss per sample: 0.6118683136719457 Std loss per sample: 2.2491839564222906 ratio: 3.6759281468989333
Epoch ended with duration 0:00:11.462024
Train perplexity: 1.0863088878486415
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options rest endpoint[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 94.70586919784546 Loss (std): 43.4856935292744 Loss ratio: 0.4591657718533847 Tokens per Sec: 4373.328063814802
Mean loss per sample: 98.95496030310628 Std loss per sample: 51.38058792625683 ratio: 0.5192320604128822
Epoch ended with duration 0:00:01.028287
b'BLEU = 2.22, 8.0/2.5/1.5/1.1 (BP=0.939, ratio=0.941, hyp_len=2928, ref_len=3113)\n'
Validation perplexity: 666749.4197397217
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.22
Model saved checkpoint_commit_msg_generator!
Epoch 416 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5070972673856886 Loss (std): 0.8151261481073392 Loss ratio: 1.6074354971575298 Tokens per Sec: 3120.7782976731396
Epoch Step: 10 / 67 Loss (mean): 0.49840807572036283 Loss (std): 0.8548828001034297 Loss ratio: 1.7152266220161945 Tokens per Sec: 3216.1127746229145
Epoch Step: 15 / 67 Loss (mean): 0.5662737867241958 Loss (std): 1.0727198696455258 Loss ratio: 1.8943484490974594 Tokens per Sec: 3164.4962848127607
Epoch Step: 20 / 67 Loss (mean): 0.4887098068720661 Loss (std): 0.9565629657797878 Loss ratio: 1.9573230418725682 Tokens per Sec: 2617.829495952486
Epoch Step: 25 / 67 Loss (mean): 0.43993380277970573 Loss (std): 0.5891453230621126 Loss ratio: 1.3391681187933715 Tokens per Sec: 2818.688338964478
Epoch Step: 30 / 67 Loss (mean): 0.43853720339939173 Loss (std): 0.720177947242223 Loss ratio: 1.642227709894731 Tokens per Sec: 2810.363617354225
Epoch Step: 35 / 67 Loss (mean): 0.4069445218992769 Loss (std): 0.6055667175978593 Loss ratio: 1.4880817531873387 Tokens per Sec: 2581.5595930179034
Epoch Step: 40 / 67 Loss (mean): 2.984477481106296 Loss (std): 10.028830650396934 Loss ratio: 3.360330481260463 Tokens per Sec: 2841.5918687326835
Epoch Step: 45 / 67 Loss (mean): 0.43398107549728593 Loss (std): 0.7586854382597059 Loss ratio: 1.7481993595926988 Tokens per Sec: 2139.1402819281234
Epoch Step: 50 / 67 Loss (mean): 0.487443861347856 Loss (std): 0.7058438701709565 Loss ratio: 1.4480516140242108 Tokens per Sec: 2192.993976289265
Epoch Step: 55 / 67 Loss (mean): 4.9734697367021 Loss (std): 14.090350587620488 Loss ratio: 2.8331027096917207 Tokens per Sec: 2796.4650451872267
Epoch Step: 60 / 67 Loss (mean): 0.36964500929025235 Loss (std): 0.5316535412032979 Loss ratio: 1.4382813992920254 Tokens per Sec: 2817.5833627817015
Epoch Step: 65 / 67 Loss (mean): 0.5190678004801157 Loss (std): 0.7435673838518291 Loss ratio: 1.4325053165772579 Tokens per Sec: 2739.6957959376477
Mean loss per sample: 1.0306073533013276 Std loss per sample: 5.300275436281673 ratio: 5.1428659220249
Epoch ended with duration 0:00:11.471627
Train perplexity: 1.1496308383645468
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 94.2345598936081 Loss (std): 44.69858880970604 Loss ratio: 0.4743332898266969 Tokens per Sec: 4405.069490467821
Mean loss per sample: 98.70961947690267 Std loss per sample: 51.765601104651765 ratio: 0.5244230641246118
Epoch ended with duration 0:00:01.021554
b'BLEU = 2.02, 7.5/2.4/1.4/1.0 (BP=0.915, ratio=0.919, hyp_len=2860, ref_len=3113)\n'
Validation perplexity: 644945.757500132
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.02
Epoch 417 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.8071761995888664 Loss (std): 1.160980093697002 Loss ratio: 1.4383230009610601 Tokens per Sec: 2489.4408176271627
Epoch Step: 10 / 67 Loss (mean): 0.5316402586104232 Loss (std): 1.055846142369188 Loss ratio: 1.9860161552266753 Tokens per Sec: 3422.7465309500594
Epoch Step: 15 / 67 Loss (mean): 1.597427593307657 Loss (std): 8.487454405092702 Loss ratio: 5.313201324836548 Tokens per Sec: 2709.5008671265664
Epoch Step: 20 / 67 Loss (mean): 1.1477891914837528 Loss (std): 1.5568618418998437 Loss ratio: 1.3564005075594767 Tokens per Sec: 3117.42447011611
Epoch Step: 25 / 67 Loss (mean): 0.35108754178509116 Loss (std): 0.45560523240727857 Loss ratio: 1.2976969507114129 Tokens per Sec: 2656.605503620692
Epoch Step: 30 / 67 Loss (mean): 0.525060676078283 Loss (std): 0.8694839444960634 Loss ratio: 1.6559685082309024 Tokens per Sec: 2567.7017490181943
Epoch Step: 35 / 67 Loss (mean): 0.36170323913393077 Loss (std): 0.39322414163298736 Loss ratio: 1.0871457567660463 Tokens per Sec: 2161.7554572563845
Epoch Step: 40 / 67 Loss (mean): 0.5623100549564697 Loss (std): 0.8370750368024479 Loss ratio: 1.488636081507112 Tokens per Sec: 2459.560574945421
Epoch Step: 45 / 67 Loss (mean): 0.4418827695189975 Loss (std): 0.5238560388146576 Loss ratio: 1.1855090873647107 Tokens per Sec: 2662.099590698838
Epoch Step: 50 / 67 Loss (mean): 0.7201945757551584 Loss (std): 0.9381718143031375 Loss ratio: 1.3026643713879953 Tokens per Sec: 2541.5260167737038
Epoch Step: 55 / 67 Loss (mean): 1.2719019086798653 Loss (std): 1.4388428908240045 Loss ratio: 1.1312530321755794 Tokens per Sec: 3694.2787921976446
Epoch Step: 60 / 67 Loss (mean): 0.6031837576883845 Loss (std): 1.0039649097643994 Loss ratio: 1.664442878256456 Tokens per Sec: 3082.658064831568
Epoch Step: 65 / 67 Loss (mean): 0.40938409307273105 Loss (std): 0.6923687209699524 Loss ratio: 1.691244805759823 Tokens per Sec: 2607.768866594126
Mean loss per sample: 0.9743350930147642 Std loss per sample: 4.66503070152838 ratio: 4.787912018127105
Epoch ended with duration 0:00:11.539751
Train perplexity: 1.1409112212038623
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) return[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api and gb2312han[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 92.72530728578568 Loss (std): 43.78067815858158 Loss ratio: 0.4721545761357961 Tokens per Sec: 4289.526083421667
Mean loss per sample: 99.7210642145794 Std loss per sample: 50.34608063584721 ratio: 0.504869066855451
Epoch ended with duration 0:00:01.037103
b'BLEU = 2.81, 8.8/3.2/2.0/1.6 (BP=0.905, ratio=0.909, hyp_len=2830, ref_len=3113)\n'
Validation perplexity: 739692.8962568016
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.81
Epoch 418 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5342429815864307 Loss (std): 0.7246090993496621 Loss ratio: 1.3563287199355256 Tokens per Sec: 2447.262662337013
Epoch Step: 10 / 67 Loss (mean): 0.4289991792902583 Loss (std): 0.5882792934994983 Loss ratio: 1.3712830277968246 Tokens per Sec: 2294.5591577560735
Epoch Step: 15 / 67 Loss (mean): 0.5524247189823654 Loss (std): 0.827930687072912 Loss ratio: 1.4987212892972321 Tokens per Sec: 2236.4636884596885
Epoch Step: 20 / 67 Loss (mean): 0.5936135614465456 Loss (std): 0.83145835189213 Loss ratio: 1.4006727707938358 Tokens per Sec: 3359.762573690055
Epoch Step: 25 / 67 Loss (mean): 0.5518418362480588 Loss (std): 0.9425650907317554 Loss ratio: 1.7080348549508346 Tokens per Sec: 3251.197658836579
Epoch Step: 30 / 67 Loss (mean): 0.4068819694730337 Loss (std): 0.6315679807634788 Loss ratio: 1.552214224634833 Tokens per Sec: 3127.8203252240064
Epoch Step: 35 / 67 Loss (mean): 2.044904944981681 Loss (std): 6.262201954719097 Loss ratio: 3.062343787708526 Tokens per Sec: 2372.011917636712
Epoch Step: 40 / 67 Loss (mean): 1.1758763055404415 Loss (std): 1.652199935833675 Loss ratio: 1.405079707830588 Tokens per Sec: 3306.6672233911936
Epoch Step: 45 / 67 Loss (mean): 0.39794870058540255 Loss (std): 0.42982244278704396 Loss ratio: 1.080095103099353 Tokens per Sec: 2595.0483973234564
Epoch Step: 50 / 67 Loss (mean): 0.4589151957989088 Loss (std): 0.7495625276888134 Loss ratio: 1.6333356021997205 Tokens per Sec: 2683.8825190111684
Epoch Step: 55 / 67 Loss (mean): 0.4240952100517461 Loss (std): 0.4600644284133701 Loss ratio: 1.0848140170157432 Tokens per Sec: 2682.0440956464768
Epoch Step: 60 / 67 Loss (mean): 1.0305992367502768 Loss (std): 1.8668204453197554 Loss ratio: 1.8113931960655065 Tokens per Sec: 2580.7556422939465
Epoch Step: 65 / 67 Loss (mean): 0.5657165786833502 Loss (std): 0.9283637568511904 Loss ratio: 1.6410403934278643 Tokens per Sec: 3667.080116680375
Mean loss per sample: 0.9983661397968485 Std loss per sample: 5.075897053649643 ratio: 5.084203932119038
Epoch ended with duration 0:00:11.502913
Train perplexity: 1.1446268099885784
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api and gb2312han[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 93.7906602025032 Loss (std): 43.22524831827514 Loss ratio: 0.46086943225420957 Tokens per Sec: 4403.558903465562
Mean loss per sample: 98.44962195093271 Std loss per sample: 51.13548140356606 ratio: 0.5194075953796145
Epoch ended with duration 0:00:01.024348
b'BLEU = 2.14, 7.5/2.3/1.4/1.1 (BP=0.938, ratio=0.940, hyp_len=2927, ref_len=3113)\n'
Validation perplexity: 622617.2067778122
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.14
Epoch 419 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5171413035714068 Loss (std): 0.7367159354567383 Loss ratio: 1.4245931051512166 Tokens per Sec: 2902.623009977346
Epoch Step: 10 / 67 Loss (mean): 0.573395711449848 Loss (std): 0.8014121494486047 Loss ratio: 1.3976598245253882 Tokens per Sec: 2704.647960698801
Epoch Step: 15 / 67 Loss (mean): 0.3798054374055937 Loss (std): 0.5927238023072005 Loss ratio: 1.5605985168512255 Tokens per Sec: 2369.3734705406177
Epoch Step: 20 / 67 Loss (mean): 0.5320021540319431 Loss (std): 1.125940018964227 Loss ratio: 2.1164200378343243 Tokens per Sec: 2388.632287296928
Epoch Step: 25 / 67 Loss (mean): 0.36716503389470745 Loss (std): 0.6549060497431514 Loss ratio: 1.7836830560803345 Tokens per Sec: 2594.0025981885633
Epoch Step: 30 / 67 Loss (mean): 1.3146828928147443 Loss (std): 1.5598213652084727 Loss ratio: 1.1864620538789286 Tokens per Sec: 2994.554439018507
Epoch Step: 35 / 67 Loss (mean): 0.6119757638807641 Loss (std): 0.983373098506875 Loss ratio: 1.6068824233674603 Tokens per Sec: 2830.028947200954
Epoch Step: 40 / 67 Loss (mean): 0.384303593687946 Loss (std): 0.4638126026895602 Loss ratio: 1.2068911410341259 Tokens per Sec: 2621.7368085688413
Epoch Step: 45 / 67 Loss (mean): 0.7469614519068273 Loss (std): 1.1070313057256949 Loss ratio: 1.4820460987641182 Tokens per Sec: 3221.2859873029256
Epoch Step: 50 / 67 Loss (mean): 0.49809329619893106 Loss (std): 0.6740892638096686 Loss ratio: 1.3533393622315435 Tokens per Sec: 2809.82943658306
Epoch Step: 55 / 67 Loss (mean): 0.8049736880257115 Loss (std): 0.8996068576842509 Loss ratio: 1.1175605750426922 Tokens per Sec: 2648.810299978623
Epoch Step: 60 / 67 Loss (mean): 0.620446500426624 Loss (std): 1.0760885957096014 Loss ratio: 1.734377734373027 Tokens per Sec: 2721.9192376290016
Epoch Step: 65 / 67 Loss (mean): 0.4713749719594489 Loss (std): 0.5364246288347109 Loss ratio: 1.1379998106493827 Tokens per Sec: 3226.662896328185
Mean loss per sample: 0.9314320013639028 Std loss per sample: 5.235897730655223 ratio: 5.621341893974288
Epoch ended with duration 0:00:11.428395
Train perplexity: 1.1343076716728147
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print change time unit return[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 94.30015847086906 Loss (std): 43.679246364806765 Loss ratio: 0.4631937747835284 Tokens per Sec: 4289.669559489841
Mean loss per sample: 100.62318624006431 Std loss per sample: 51.44072590409064 ratio: 0.5112213976345832
Epoch ended with duration 0:00:01.040083
b'BLEU = 2.28, 8.7/2.5/1.5/1.1 (BP=0.934, ratio=0.936, hyp_len=2914, ref_len=3113)\n'
Validation perplexity: 835883.1143892437
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.28
Epoch 420 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5598363927565515 Loss (std): 0.798363394522357 Loss ratio: 1.426065552100559 Tokens per Sec: 2712.5296594641723
Epoch Step: 10 / 67 Loss (mean): 0.48658755744691007 Loss (std): 0.7459866303233753 Loss ratio: 1.533098450436163 Tokens per Sec: 3416.8444924211135
Epoch Step: 15 / 67 Loss (mean): 0.3716585168676829 Loss (std): 0.6067738186171621 Loss ratio: 1.6326110961508906 Tokens per Sec: 2784.6023432433226
Epoch Step: 20 / 67 Loss (mean): 0.6689697600213549 Loss (std): 0.8928962697807032 Loss ratio: 1.3347333812999262 Tokens per Sec: 2697.7688384603434
Epoch Step: 25 / 67 Loss (mean): 0.5025700866317493 Loss (std): 0.7115459056579024 Loss ratio: 1.4158142806045617 Tokens per Sec: 2607.7838334400776
Epoch Step: 30 / 67 Loss (mean): 0.486111051068292 Loss (std): 0.6021685661563638 Loss ratio: 1.2387469176703974 Tokens per Sec: 3066.217327735376
Epoch Step: 35 / 67 Loss (mean): 0.5014541030341206 Loss (std): 0.898571337700951 Loss ratio: 1.7919313697186143 Tokens per Sec: 2212.7654859045124
Epoch Step: 40 / 67 Loss (mean): 0.40050581199102453 Loss (std): 0.564260936284454 Loss ratio: 1.4088707813735777 Tokens per Sec: 2169.5383410498753
Epoch Step: 45 / 67 Loss (mean): 0.602985449047992 Loss (std): 0.9368786836774371 Loss ratio: 1.553733485868695 Tokens per Sec: 3080.072392107856
Epoch Step: 50 / 67 Loss (mean): 0.8896456908551045 Loss (std): 1.2508353878228962 Loss ratio: 1.4059927459667967 Tokens per Sec: 2936.8010992424283
Epoch Step: 55 / 67 Loss (mean): 0.3714023142529186 Loss (std): 0.37186078327450184 Loss ratio: 1.0012344269380913 Tokens per Sec: 2533.1062756585775
Epoch Step: 60 / 67 Loss (mean): 0.59758650034928 Loss (std): 1.0958690995264044 Loss ratio: 1.83382505944476 Tokens per Sec: 2870.518671726864
Epoch Step: 65 / 67 Loss (mean): 0.5724679811100941 Loss (std): 0.9299633963416251 Loss ratio: 1.6244810662393698 Tokens per Sec: 2821.922279069264
Mean loss per sample: 0.7091469417465026 Std loss per sample: 3.3474103428493804 ratio: 4.720333891034353
Epoch ended with duration 0:00:11.467113
Train perplexity: 1.1007011422525266
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) will[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 94.78809368610382 Loss (std): 43.78820977978769 Loss ratio: 0.4619589663317299 Tokens per Sec: 4305.143854611559
Mean loss per sample: 101.38585064022756 Std loss per sample: 50.882905073383654 ratio: 0.5018738290606648
Epoch ended with duration 0:00:01.034899
b'BLEU = 2.23, 8.0/2.5/1.5/1.1 (BP=0.932, ratio=0.934, hyp_len=2909, ref_len=3113)\n'
Validation perplexity: 926897.9514933038
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.23
Model saved checkpoint_commit_msg_generator!
Epoch 421 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.22268118074585108 Loss (std): 0.4120856378153485 Loss ratio: 1.8505633769100012 Tokens per Sec: 2200.6834262495627
Epoch Step: 10 / 67 Loss (mean): 0.39906339813023806 Loss (std): 0.7395848216637372 Loss ratio: 1.8533015684449385 Tokens per Sec: 2849.493354951823
Epoch Step: 15 / 67 Loss (mean): 0.6967860042786924 Loss (std): 1.0561588772836403 Loss ratio: 1.515757880896256 Tokens per Sec: 2775.3935407939957
Epoch Step: 20 / 67 Loss (mean): 0.5383623274756246 Loss (std): 0.8439209301571863 Loss ratio: 1.5675705507001627 Tokens per Sec: 2551.828124482082
Epoch Step: 25 / 67 Loss (mean): 0.520739652982229 Loss (std): 0.589269926336225 Loss ratio: 1.131601795564308 Tokens per Sec: 3660.1158624383693
Epoch Step: 30 / 67 Loss (mean): 3.695813997212099 Loss (std): 9.376179700679927 Loss ratio: 2.5369728313580597 Tokens per Sec: 3041.795136760301
Epoch Step: 35 / 67 Loss (mean): 0.4295735027844785 Loss (std): 0.5835635349577687 Loss ratio: 1.3584719056811765 Tokens per Sec: 2496.6599977838064
Epoch Step: 40 / 67 Loss (mean): 0.4686918432271341 Loss (std): 0.7531856854899572 Loss ratio: 1.606995505413466 Tokens per Sec: 2282.6534611610177
Epoch Step: 45 / 67 Loss (mean): 0.45785478232210153 Loss (std): 0.5383361723081074 Loss ratio: 1.1757792931152284 Tokens per Sec: 2411.200880935346
Epoch Step: 50 / 67 Loss (mean): 0.6521754014975158 Loss (std): 1.167198317872166 Loss ratio: 1.7897000027784886 Tokens per Sec: 2690.7100400141735
Epoch Step: 55 / 67 Loss (mean): 0.3156264755234588 Loss (std): 0.43233388755822455 Loss ratio: 1.3697643293111244 Tokens per Sec: 2963.0940549778825
Epoch Step: 60 / 67 Loss (mean): 0.7701966025779257 Loss (std): 1.1399227264350726 Loss ratio: 1.4800412292389196 Tokens per Sec: 3118.5964064203636
Epoch Step: 65 / 67 Loss (mean): 0.534784284154739 Loss (std): 0.7981946322721186 Loss ratio: 1.4925543923447875 Tokens per Sec: 3069.2645127661694
Mean loss per sample: 0.8191955127898004 Std loss per sample: 3.9278742895220478 ratio: 4.794794683561593
Epoch ended with duration 0:00:11.475151
Train perplexity: 1.1172126958864763
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings if switch ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 94.36682799458504 Loss (std): 42.69349835079055 Loss ratio: 0.4524206149351591 Tokens per Sec: 4390.913841054022
Mean loss per sample: 99.04765620821568 Std loss per sample: 50.820425942282796 ratio: 0.5130906463394679
Epoch ended with duration 0:00:01.024204
b'BLEU = 2.51, 7.9/2.7/1.7/1.3 (BP=0.968, ratio=0.969, hyp_len=3015, ref_len=3113)\n'
Validation perplexity: 675177.9246841291
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.51
Epoch 422 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6489200647047255 Loss (std): 0.8825713450178504 Loss ratio: 1.3600617287422634 Tokens per Sec: 2755.888072365133
Epoch Step: 10 / 67 Loss (mean): 0.3153132345632912 Loss (std): 0.5735909292765898 Loss ratio: 1.8191146656784427 Tokens per Sec: 2663.2172439968904
Epoch Step: 15 / 67 Loss (mean): 0.5160775216354523 Loss (std): 0.6504011064915896 Loss ratio: 1.2602779218720186 Tokens per Sec: 2841.6235182896003
Epoch Step: 20 / 67 Loss (mean): 0.5813908436030033 Loss (std): 1.0028415113070734 Loss ratio: 1.7249007657090887 Tokens per Sec: 3063.078260715841
Epoch Step: 25 / 67 Loss (mean): 0.2662635411834344 Loss (std): 0.41653286168182163 Loss ratio: 1.5643631111886385 Tokens per Sec: 2320.2468177705937
Epoch Step: 30 / 67 Loss (mean): 0.7519563864625525 Loss (std): 1.0120136633278614 Loss ratio: 1.3458409045353055 Tokens per Sec: 3468.9989075676913
Epoch Step: 35 / 67 Loss (mean): 7.577099663583795 Loss (std): 17.07256713602452 Loss ratio: 2.253179698569464 Tokens per Sec: 2665.9525087563125
Epoch Step: 40 / 67 Loss (mean): 3.4940440327118267 Loss (std): 10.763744043475786 Loss ratio: 3.080597709331596 Tokens per Sec: 2475.611369117853
Epoch Step: 45 / 67 Loss (mean): 0.2882448467426002 Loss (std): 0.3898086073077078 Loss ratio: 1.3523523896883507 Tokens per Sec: 2617.3688008436957
Epoch Step: 50 / 67 Loss (mean): 5.858145937672816 Loss (std): 18.41095805045432 Loss ratio: 3.142796073422538 Tokens per Sec: 3265.287145688951
Epoch Step: 55 / 67 Loss (mean): 0.5619382039585616 Loss (std): 1.040368593975643 Loss ratio: 1.8513932433260256 Tokens per Sec: 2225.670719416041
Epoch Step: 60 / 67 Loss (mean): 0.5946079672212363 Loss (std): 0.7664083184051215 Loss ratio: 1.288930456123477 Tokens per Sec: 2546.9736274438183
Epoch Step: 65 / 67 Loss (mean): 1.0174830329087854 Loss (std): 1.528818982635413 Loss ratio: 1.5025498540892794 Tokens per Sec: 3177.5912599645594
Mean loss per sample: 0.9640862861748367 Std loss per sample: 4.639112892727206 ratio: 4.81192706426062
Epoch ended with duration 0:00:11.512361
Train perplexity: 1.139330260900726
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print bad preferences change switch ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 94.91480576992035 Loss (std): 44.501974990107776 Loss ratio: 0.4688623089845798 Tokens per Sec: 4381.797150000789
Mean loss per sample: 99.21062626457605 Std loss per sample: 51.73288303619926 ratio: 0.5214449800794263
Epoch ended with duration 0:00:01.026675
b'BLEU = 2.20, 7.7/2.5/1.6/1.2 (BP=0.903, ratio=0.908, hyp_len=2826, ref_len=3113)\n'
Validation perplexity: 690255.3557801086
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.2
Epoch 423 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5218945601136511 Loss (std): 1.013084624344735 Loss ratio: 1.941167242908451 Tokens per Sec: 2670.966806616674
Epoch Step: 10 / 67 Loss (mean): 0.5779362678877078 Loss (std): 1.0081521517550704 Loss ratio: 1.7444002181066667 Tokens per Sec: 2669.6649268702454
Epoch Step: 15 / 67 Loss (mean): 0.5185847952961922 Loss (std): 0.6719062175906797 Loss ratio: 1.2956535241395137 Tokens per Sec: 2789.572174046073
Epoch Step: 20 / 67 Loss (mean): 0.603377136929339 Loss (std): 0.9343444033230706 Loss ratio: 1.5485247055897162 Tokens per Sec: 3387.333569274915
Epoch Step: 25 / 67 Loss (mean): 0.4753016021095391 Loss (std): 0.689059603556844 Loss ratio: 1.449731287457436 Tokens per Sec: 2423.719642732119
Epoch Step: 30 / 67 Loss (mean): 0.47893691070203204 Loss (std): 0.822754140165055 Loss ratio: 1.717875824101866 Tokens per Sec: 3105.7448908824363
Epoch Step: 35 / 67 Loss (mean): 3.2556554576808594 Loss (std): 14.578595378465415 Loss ratio: 4.477929427105399 Tokens per Sec: 2750.4930625225215
Epoch Step: 40 / 67 Loss (mean): 0.4581041393103078 Loss (std): 0.7518904836099185 Loss ratio: 1.6413090803805366 Tokens per Sec: 3117.4990596758926
Epoch Step: 45 / 67 Loss (mean): 9.887166376604 Loss (std): 20.79731530281932 Loss ratio: 2.1034656958976643 Tokens per Sec: 2631.7180104926683
Epoch Step: 50 / 67 Loss (mean): 0.647595195347094 Loss (std): 1.288641291931591 Loss ratio: 1.9898870485611204 Tokens per Sec: 2655.5315759733053
Epoch Step: 55 / 67 Loss (mean): 0.32117161012865836 Loss (std): 0.4934585425313014 Loss ratio: 1.536432632802216 Tokens per Sec: 2412.412604243798
Epoch Step: 60 / 67 Loss (mean): 0.5989184604986804 Loss (std): 0.778082046777401 Loss ratio: 1.2991452060595072 Tokens per Sec: 3248.7018398324235
Epoch Step: 65 / 67 Loss (mean): 0.33630635069857817 Loss (std): 0.5119553583294 Loss ratio: 1.5222887027436809 Tokens per Sec: 2402.243023593925
Mean loss per sample: 0.7570784471618482 Std loss per sample: 3.8507097068533995 ratio: 5.086275697437989
Epoch ended with duration 0:00:11.402964
Train perplexity: 1.107862516227131
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print change time unit test[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 94.3203606903553 Loss (std): 43.941477390765144 Loss ratio: 0.4658747811092538 Tokens per Sec: 4422.278481908003
Mean loss per sample: 99.105892136693 Std loss per sample: 51.76350619768467 ratio: 0.5223050323414599
Epoch ended with duration 0:00:01.021617
b'BLEU = 2.18, 7.8/2.5/1.5/1.1 (BP=0.912, ratio=0.916, hyp_len=2851, ref_len=3113)\n'
Validation perplexity: 680527.5183322884
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.18
Epoch 424 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3757418178811349 Loss (std): 0.555581548992473 Loss ratio: 1.4786258078099521 Tokens per Sec: 2767.3062546711917
Epoch Step: 10 / 67 Loss (mean): 0.3446934521998628 Loss (std): 0.47918387352913233 Loss ratio: 1.3901739950989502 Tokens per Sec: 2591.2024975939735
Epoch Step: 15 / 67 Loss (mean): 0.4367983982228907 Loss (std): 0.6993700677641399 Loss ratio: 1.6011278214606992 Tokens per Sec: 2238.95723366898
Epoch Step: 20 / 67 Loss (mean): 0.39315757495205617 Loss (std): 0.622955673570967 Loss ratio: 1.5844936312035542 Tokens per Sec: 2898.3400053998544
Epoch Step: 25 / 67 Loss (mean): 0.7532942944089882 Loss (std): 1.1784095477590268 Loss ratio: 1.5643415282782291 Tokens per Sec: 2924.877141352981
Epoch Step: 30 / 67 Loss (mean): 1.3024142555368599 Loss (std): 1.4943950350536896 Loss ratio: 1.147403776256806 Tokens per Sec: 3274.642164528319
Epoch Step: 35 / 67 Loss (mean): 0.5480479199250112 Loss (std): 0.8330321139037262 Loss ratio: 1.5199986782500863 Tokens per Sec: 3275.8611681276407
Epoch Step: 40 / 67 Loss (mean): 0.4430316886282526 Loss (std): 0.7464218866210648 Loss ratio: 1.6848047346955954 Tokens per Sec: 2874.8459620448757
Epoch Step: 45 / 67 Loss (mean): 0.31715200854523573 Loss (std): 0.37077051181547005 Loss ratio: 1.169062474225468 Tokens per Sec: 2429.9067707464005
Epoch Step: 50 / 67 Loss (mean): 0.39458301342165214 Loss (std): 0.657784814522293 Loss ratio: 1.667037840322292 Tokens per Sec: 3274.7217166508026
Epoch Step: 55 / 67 Loss (mean): 0.539485619556217 Loss (std): 0.8822717548581213 Loss ratio: 1.6353943884248139 Tokens per Sec: 2608.6797657902853
Epoch Step: 60 / 67 Loss (mean): 0.8046599362405686 Loss (std): 1.159061323295925 Loss ratio: 1.4404362278941663 Tokens per Sec: 2908.93926386933
Epoch Step: 65 / 67 Loss (mean): 0.36323616513982415 Loss (std): 0.3978744358715522 Loss ratio: 1.0953601927781458 Tokens per Sec: 2503.6742081821158
Mean loss per sample: 0.7061651414385934 Std loss per sample: 3.4330957400336732 ratio: 4.861604656723498
Epoch ended with duration 0:00:11.446899
Train perplexity: 1.1002571685460802
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print bad print change switch error codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 94.6562739610672 Loss (std): 44.2909802569684 Loss ratio: 0.4679138360673863 Tokens per Sec: 4285.31988202258
Mean loss per sample: 101.36827589638654 Std loss per sample: 52.029046479993525 ratio: 0.5132675486478132
Epoch ended with duration 0:00:01.041451
b'BLEU = 2.77, 8.4/3.0/2.0/1.6 (BP=0.932, ratio=0.934, hyp_len=2908, ref_len=3113)\n'
Validation perplexity: 924692.9923259967
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.77
Epoch 425 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.4581928859988693 Loss (std): 0.5195111738420674 Loss ratio: 1.1338263637802297 Tokens per Sec: 2500.841389766697
Epoch Step: 10 / 67 Loss (mean): 0.39056679695204366 Loss (std): 0.5165218768640774 Loss ratio: 1.3224930559765409 Tokens per Sec: 3004.153409211218
Epoch Step: 15 / 67 Loss (mean): 0.5112919109451468 Loss (std): 0.7120792818808076 Loss ratio: 1.3927059408479512 Tokens per Sec: 3434.6150711279543
Epoch Step: 20 / 67 Loss (mean): 3.490632451925194 Loss (std): 11.968045336351507 Loss ratio: 3.428618023003468 Tokens per Sec: 2560.2914415774085
Epoch Step: 25 / 67 Loss (mean): 1.231367523141671 Loss (std): 1.632187937265822 Loss ratio: 1.3255083527796079 Tokens per Sec: 2854.603558215079
Epoch Step: 30 / 67 Loss (mean): 0.44535080991045106 Loss (std): 0.7857845985011367 Loss ratio: 1.7644171314275556 Tokens per Sec: 2780.4177872267273
Epoch Step: 35 / 67 Loss (mean): 0.41360996397270355 Loss (std): 0.5402816818857774 Loss ratio: 1.3062588645021946 Tokens per Sec: 3179.0181216421925
Epoch Step: 40 / 67 Loss (mean): 0.4512830122257583 Loss (std): 0.5537378707515935 Loss ratio: 1.227030168985358 Tokens per Sec: 2576.979755780773
Epoch Step: 45 / 67 Loss (mean): 0.5162748354196083 Loss (std): 0.9668496712653621 Loss ratio: 1.8727422003428542 Tokens per Sec: 2384.889179063164
Epoch Step: 50 / 67 Loss (mean): 0.4691014691852615 Loss (std): 0.8585278111045641 Loss ratio: 1.830153746044882 Tokens per Sec: 2827.4662419698298
Epoch Step: 55 / 67 Loss (mean): 0.46374803136859555 Loss (std): 0.7864035560368485 Loss ratio: 1.6957561064271136 Tokens per Sec: 2466.6274918398362
Epoch Step: 60 / 67 Loss (mean): 0.5013114932371536 Loss (std): 0.9027490075337874 Loss ratio: 1.8007746076284894 Tokens per Sec: 2616.5833343658874
Epoch Step: 65 / 67 Loss (mean): 0.43410081550246105 Loss (std): 0.595099600506138 Loss ratio: 1.3708787895671763 Tokens per Sec: 2717.6801421553023
Mean loss per sample: 0.6588929090915914 Std loss per sample: 2.986608653002221 ratio: 4.532767938146165
Epoch ended with duration 0:00:11.473058
Train perplexity: 1.093242468859774
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print change print to run ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.38947370648384 Loss (std): 44.48608991398592 Loss ratio: 0.46636267279208293 Tokens per Sec: 4398.776080234427
Mean loss per sample: 99.58593816120849 Std loss per sample: 51.569892226282775 ratio: 0.5178431129784816
Epoch ended with duration 0:00:01.023369
b'BLEU = 2.44, 8.6/2.6/1.7/1.3 (BP=0.922, ratio=0.925, hyp_len=2878, ref_len=3113)\n'
Validation perplexity: 726270.9063275971
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.44
Model saved checkpoint_commit_msg_generator!
Epoch 426 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.8959384438203415 Loss (std): 1.2712509386382753 Loss ratio: 1.418904331437745 Tokens per Sec: 2351.595263118678
Epoch Step: 10 / 67 Loss (mean): 0.4146313262208423 Loss (std): 0.7170672910330046 Loss ratio: 1.7294093467773293 Tokens per Sec: 2442.4363866213453
Epoch Step: 15 / 67 Loss (mean): 0.4964674950333574 Loss (std): 0.7964658409279541 Loss ratio: 1.6042658359223296 Tokens per Sec: 2649.406990982575
Epoch Step: 20 / 67 Loss (mean): 0.3710579371181666 Loss (std): 0.9808614711437257 Loss ratio: 2.6434186498249246 Tokens per Sec: 2925.724630094783
Epoch Step: 25 / 67 Loss (mean): 2.785892302319553 Loss (std): 9.879126049168526 Loss ratio: 3.54612633120925 Tokens per Sec: 2938.820393986961
Epoch Step: 30 / 67 Loss (mean): 0.5753837594565994 Loss (std): 1.2002394625579131 Loss ratio: 2.085980778622317 Tokens per Sec: 2519.965252717597
Epoch Step: 35 / 67 Loss (mean): 0.49134382270858623 Loss (std): 0.7040320495112059 Loss ratio: 1.4328704605059501 Tokens per Sec: 3350.045182212868
Epoch Step: 40 / 67 Loss (mean): 0.600303927785717 Loss (std): 0.9684774194670707 Loss ratio: 1.6133118152989598 Tokens per Sec: 2987.948639857891
Epoch Step: 45 / 67 Loss (mean): 0.495399942396034 Loss (std): 0.6520536887610894 Loss ratio: 1.3162167230125004 Tokens per Sec: 3076.02505104652
Epoch Step: 50 / 67 Loss (mean): 0.27880638249916956 Loss (std): 0.3428778792080366 Loss ratio: 1.2298064202639187 Tokens per Sec: 2439.8558853625345
Epoch Step: 55 / 67 Loss (mean): 0.4371000653336523 Loss (std): 0.9244200883254978 Loss ratio: 2.1148935029782225 Tokens per Sec: 3114.5461994310253
Epoch Step: 60 / 67 Loss (mean): 0.3974939389518113 Loss (std): 0.6819558077070249 Loss ratio: 1.7156382547752491 Tokens per Sec: 2567.604616057828
Epoch Step: 65 / 67 Loss (mean): 0.3934855997831619 Loss (std): 0.6435530906466688 Loss ratio: 1.6355187864595593 Tokens per Sec: 2685.7409410065798
Mean loss per sample: 1.2094273687097392 Std loss per sample: 6.965506768634428 ratio: 5.759342767367239
Epoch ended with duration 0:00:11.477040
Train perplexity: 1.1777845547102699
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print up creation enable nio2 switch[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 94.44338423013687 Loss (std): 42.479015407004866 Loss ratio: 0.44978285936358703 Tokens per Sec: 4290.780904307931
Mean loss per sample: 100.31053906263875 Std loss per sample: 49.69131611825361 ratio: 0.49537482883253126
Epoch ended with duration 0:00:01.042021
b'BLEU = 2.49, 7.8/2.6/1.6/1.2 (BP=0.993, ratio=0.993, hyp_len=3090, ref_len=3113)\n'
Validation perplexity: 801207.1239921948
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.49
Epoch 427 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6560974949388765 Loss (std): 0.8738594001842397 Loss ratio: 1.3319047960481092 Tokens per Sec: 3186.289786019792
Epoch Step: 10 / 67 Loss (mean): 0.33632440005021635 Loss (std): 0.5128865646017637 Loss ratio: 1.5249757808983975 Tokens per Sec: 2207.181086287664
Epoch Step: 15 / 67 Loss (mean): 0.4384137614943029 Loss (std): 0.6292393649614042 Loss ratio: 1.4352637171257705 Tokens per Sec: 2249.1182467230947
Epoch Step: 20 / 67 Loss (mean): 0.39014766024047276 Loss (std): 0.41570206833276524 Loss ratio: 1.0654993242213517 Tokens per Sec: 2946.435882586072
Epoch Step: 25 / 67 Loss (mean): 0.6330254917920684 Loss (std): 1.1423140761030275 Loss ratio: 1.8045309247644747 Tokens per Sec: 3487.473132116688
Epoch Step: 30 / 67 Loss (mean): 0.6227250244701281 Loss (std): 1.109628947447178 Loss ratio: 1.7818923342471307 Tokens per Sec: 2824.8802717225744
Epoch Step: 35 / 67 Loss (mean): 0.3126554936475259 Loss (std): 0.3688128542111428 Loss ratio: 1.1796141814380727 Tokens per Sec: 2641.1147496244103
Epoch Step: 40 / 67 Loss (mean): 1.84126967152406 Loss (std): 2.266334822864655 Loss ratio: 1.2308543707173318 Tokens per Sec: 3020.3337872713305
Epoch Step: 45 / 67 Loss (mean): 0.34931543124366726 Loss (std): 0.7284317069903244 Loss ratio: 2.0853121329249324 Tokens per Sec: 2951.5280726239735
Epoch Step: 50 / 67 Loss (mean): 0.44602670359017793 Loss (std): 0.6394414863354249 Loss ratio: 1.4336394686425815 Tokens per Sec: 2283.063938256744
Epoch Step: 55 / 67 Loss (mean): 0.5225829280825565 Loss (std): 0.9350653896724956 Loss ratio: 1.7893148425330423 Tokens per Sec: 3060.3088007266615
Epoch Step: 60 / 67 Loss (mean): 0.7726426296721911 Loss (std): 1.3469185859439616 Loss ratio: 1.7432620647859134 Tokens per Sec: 2484.5222084129427
Epoch Step: 65 / 67 Loss (mean): 0.6109887813836394 Loss (std): 0.7351556656945456 Loss ratio: 1.2032228546483603 Tokens per Sec: 2764.102904231179
Mean loss per sample: 0.8556400061395909 Std loss per sample: 4.043046605939716 ratio: 4.725172475490965
Epoch ended with duration 0:00:11.494091
Train perplexity: 1.122735197322597
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shader print on engines ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 94.68351152539253 Loss (std): 44.047385928058645 Loss ratio: 0.4652065097548254 Tokens per Sec: 4271.68143452168
Mean loss per sample: 100.07234226118345 Std loss per sample: 50.26998654273294 ratio: 0.5023364638706164
Epoch ended with duration 0:00:01.042508
b'BLEU = 2.74, 8.5/2.8/1.9/1.5 (BP=0.958, ratio=0.959, hyp_len=2984, ref_len=3113)\n'
Validation perplexity: 775757.1826805195
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.74
Epoch 428 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3739421729924288 Loss (std): 0.6172086812024539 Loss ratio: 1.650545794991009 Tokens per Sec: 2749.603473096075
Epoch Step: 10 / 67 Loss (mean): 1.877585879774415 Loss (std): 6.773629290589567 Loss ratio: 3.6076268806428144 Tokens per Sec: 2735.198381566832
Epoch Step: 15 / 67 Loss (mean): 0.44201088818954304 Loss (std): 0.7989485777572825 Loss ratio: 1.807531441204402 Tokens per Sec: 2486.9531823647335
Epoch Step: 20 / 67 Loss (mean): 0.4241639242391102 Loss (std): 0.5470030139369723 Loss ratio: 1.2896028697353692 Tokens per Sec: 2677.7705887778206
Epoch Step: 25 / 67 Loss (mean): 1.3256044179270248 Loss (std): 1.4853581206888913 Loss ratio: 1.1205138581324954 Tokens per Sec: 3161.5555803014704
Epoch Step: 30 / 67 Loss (mean): 2.4063849093363388 Loss (std): 10.132199700043625 Loss ratio: 4.2105482214140055 Tokens per Sec: 2919.6411370538344
Epoch Step: 35 / 67 Loss (mean): 1.0402959184721112 Loss (std): 1.2701801911603725 Loss ratio: 1.2209796929953294 Tokens per Sec: 2830.0876941099223
Epoch Step: 40 / 67 Loss (mean): 0.4558943760348484 Loss (std): 0.7239414235364654 Loss ratio: 1.587958662339646 Tokens per Sec: 2601.444777632029
Epoch Step: 45 / 67 Loss (mean): 0.3943143141732435 Loss (std): 0.5989307992904309 Loss ratio: 1.518917213406786 Tokens per Sec: 2680.4926708363705
Epoch Step: 50 / 67 Loss (mean): 0.43875759400543757 Loss (std): 0.48434572748352583 Loss ratio: 1.10390277935001 Tokens per Sec: 3154.416728220142
Epoch Step: 55 / 67 Loss (mean): 2.7885789446809213 Loss (std): 8.971835710374691 Loss ratio: 3.2173504456411504 Tokens per Sec: 3129.310338040102
Epoch Step: 60 / 67 Loss (mean): 0.4637516107122792 Loss (std): 0.6192698097665522 Loss ratio: 1.3353480515472744 Tokens per Sec: 2336.266570338976
Epoch Step: 65 / 67 Loss (mean): 0.5386615062088822 Loss (std): 0.8872501354744908 Loss ratio: 1.647138555934667 Tokens per Sec: 2490.0172227027
Mean loss per sample: 1.080466935658942 Std loss per sample: 5.302138303208133 ratio: 4.907265672109188
Epoch ended with duration 0:00:11.507078
Train perplexity: 1.1574124511747161
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print tweaks to deprecated statement ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api extension api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 93.86249336600304 Loss (std): 42.79494592156146 Loss ratio: 0.45593233662234856 Tokens per Sec: 4402.163646493157
Mean loss per sample: 99.19815922455221 Std loss per sample: 50.5275948543157 ratio: 0.5093602063717507
Epoch ended with duration 0:00:01.039366
b'BLEU = 2.56, 8.4/2.7/1.8/1.3 (BP=0.951, ratio=0.952, hyp_len=2965, ref_len=3113)\n'
Validation perplexity: 689090.1489565047
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.56
Epoch 429 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.4078708969973377 Loss (std): 0.6595181746166895 Loss ratio: 1.6169777727999906 Tokens per Sec: 3123.0856291883842
Epoch Step: 10 / 67 Loss (mean): 1.0304777991841547 Loss (std): 1.6207274807582006 Loss ratio: 1.5727922348655698 Tokens per Sec: 2570.583027525709
Epoch Step: 15 / 67 Loss (mean): 1.158397790768504 Loss (std): 1.3384383423408133 Loss ratio: 1.1554220432800264 Tokens per Sec: 2729.494801491289
Epoch Step: 20 / 67 Loss (mean): 1.4064481350524147 Loss (std): 3.0125042001786064 Loss ratio: 2.141923420493809 Tokens per Sec: 3231.363203171642
Epoch Step: 25 / 67 Loss (mean): 0.7839455147477565 Loss (std): 1.0959549843972496 Loss ratio: 1.3979989218381914 Tokens per Sec: 2723.6114232359732
Epoch Step: 30 / 67 Loss (mean): 0.6856004244473297 Loss (std): 1.1491658495988888 Loss ratio: 1.6761451840191675 Tokens per Sec: 3045.736203899979
Epoch Step: 35 / 67 Loss (mean): 0.7636292474198854 Loss (std): 1.3497242826854543 Loss ratio: 1.7675125556621087 Tokens per Sec: 2373.386625939971
Epoch Step: 40 / 67 Loss (mean): 0.6845576829218771 Loss (std): 1.0971048483884562 Loss ratio: 1.6026477764528424 Tokens per Sec: 2718.2710250799832
Epoch Step: 45 / 67 Loss (mean): 0.7350255286582978 Loss (std): 0.9768379727169568 Loss ratio: 1.3289850959327345 Tokens per Sec: 2671.0899950401413
Epoch Step: 50 / 67 Loss (mean): 0.47441201738001837 Loss (std): 0.8420364325499016 Loss ratio: 1.7749053601131797 Tokens per Sec: 2946.3387294070562
Epoch Step: 55 / 67 Loss (mean): 0.5292792647705937 Loss (std): 0.9893580498283787 Loss ratio: 1.8692552602777621 Tokens per Sec: 2416.0285315076426
Epoch Step: 60 / 67 Loss (mean): 1.0244594615433016 Loss (std): 1.6197739123419734 Loss ratio: 1.5811010324428627 Tokens per Sec: 3080.111835681042
Epoch Step: 65 / 67 Loss (mean): 0.5136189436616405 Loss (std): 0.7683759936977632 Loss ratio: 1.496003999034643 Tokens per Sec: 2589.748899950423
Mean loss per sample: 0.8991381965866362 Std loss per sample: 3.154475762309254 ratio: 3.5083325058199835
Epoch ended with duration 0:00:11.427087
Train perplexity: 1.12936230474622
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during engines[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 94.0016493499279 Loss (std): 43.41824439756436 Loss ratio: 0.4618881125791402 Tokens per Sec: 4391.3610327764645
Mean loss per sample: 99.12934940589255 Std loss per sample: 51.49227879239968 ratio: 0.5194453418791309
Epoch ended with duration 0:00:01.023370
b'BLEU = 2.54, 8.3/2.7/1.7/1.3 (BP=0.952, ratio=0.953, hyp_len=2966, ref_len=3113)\n'
Validation perplexity: 682694.2758488235
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.54
Epoch 430 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.4839448371931212 Loss (std): 0.7503746821944899 Loss ratio: 1.550537632649748 Tokens per Sec: 2686.867433417235
Epoch Step: 10 / 67 Loss (mean): 0.3987516989109281 Loss (std): 0.6340962884650205 Loss ratio: 1.5902033526048072 Tokens per Sec: 2408.1994385338735
Epoch Step: 15 / 67 Loss (mean): 0.6529319682331334 Loss (std): 0.9724050542036496 Loss ratio: 1.4892900049526239 Tokens per Sec: 3687.2463493749206
Epoch Step: 20 / 67 Loss (mean): 0.4543979053196381 Loss (std): 0.5492415843302965 Loss ratio: 1.2087238473160264 Tokens per Sec: 2676.526166270115
Epoch Step: 25 / 67 Loss (mean): 0.5212449714381364 Loss (std): 0.6228590140562789 Loss ratio: 1.1949448880778362 Tokens per Sec: 2623.0490462899697
Epoch Step: 30 / 67 Loss (mean): 0.5154120715451427 Loss (std): 0.6950190398207952 Loss ratio: 1.3484725682446914 Tokens per Sec: 3555.6097971536783
Epoch Step: 35 / 67 Loss (mean): 0.49646819305053214 Loss (std): 0.9770988159700682 Loss ratio: 1.9680995271143502 Tokens per Sec: 2374.4054053039545
Epoch Step: 40 / 67 Loss (mean): 0.48981397695752094 Loss (std): 0.7595254810525324 Loss ratio: 1.550640685613596 Tokens per Sec: 2660.64607269649
Epoch Step: 45 / 67 Loss (mean): 0.4498608471330954 Loss (std): 0.6906556252715693 Loss ratio: 1.5352650262253933 Tokens per Sec: 2807.611446705545
Epoch Step: 50 / 67 Loss (mean): 0.5541411741141928 Loss (std): 0.7387417427776612 Loss ratio: 1.3331291325871184 Tokens per Sec: 2972.070455805506
Epoch Step: 55 / 67 Loss (mean): 0.4368964136519935 Loss (std): 0.6811782139648505 Loss ratio: 1.5591297906771964 Tokens per Sec: 2634.47840270719
Epoch Step: 60 / 67 Loss (mean): 0.725471569399815 Loss (std): 1.4239554412201239 Loss ratio: 1.9627997860731698 Tokens per Sec: 2988.982947566094
Epoch Step: 65 / 67 Loss (mean): 2.4065740459191147 Loss (std): 8.614766417227711 Loss ratio: 3.579680596919915 Tokens per Sec: 2442.270922193839
Mean loss per sample: 0.9454948573662223 Std loss per sample: 4.45405101821189 ratio: 4.710814642206652
Epoch ended with duration 0:00:11.473938
Train perplexity: 1.1364679738890167
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 96.21797728538513 Loss (std): 44.342389775392036 Loss ratio: 0.4608534810898311 Tokens per Sec: 4414.059380601184
Mean loss per sample: 101.24539172173034 Std loss per sample: 51.175872248551755 ratio: 0.5054637191706164
Epoch ended with duration 0:00:01.039349
b'BLEU = 2.58, 8.4/2.9/1.8/1.4 (BP=0.926, ratio=0.929, hyp_len=2891, ref_len=3113)\n'
Validation perplexity: 909421.5840585391
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.58
Model saved checkpoint_commit_msg_generator!
Epoch 431 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.38313445020321524 Loss (std): 0.42881033079239766 Loss ratio: 1.1192163235776784 Tokens per Sec: 2369.3601709629506
Epoch Step: 10 / 67 Loss (mean): 1.7439753110229503 Loss (std): 11.119435025434168 Loss ratio: 6.375913096448553 Tokens per Sec: 2454.8477368744616
Epoch Step: 15 / 67 Loss (mean): 0.4357779694691999 Loss (std): 0.4895168484117241 Loss ratio: 1.1233171080400897 Tokens per Sec: 2679.02298122509
Epoch Step: 20 / 67 Loss (mean): 0.6664173737954115 Loss (std): 1.0362767198451535 Loss ratio: 1.5549965541013757 Tokens per Sec: 2976.2035193679408
Epoch Step: 25 / 67 Loss (mean): 0.6815424842570792 Loss (std): 1.0751399366580934 Loss ratio: 1.5775097833116862 Tokens per Sec: 2426.498200986514
Epoch Step: 30 / 67 Loss (mean): 0.7491985141023179 Loss (std): 1.1107948575317292 Loss ratio: 1.482644234636093 Tokens per Sec: 2784.0158617492675
Epoch Step: 35 / 67 Loss (mean): 0.6760799367257277 Loss (std): 0.9312355796822769 Loss ratio: 1.3774045480365449 Tokens per Sec: 3031.318545377824
Epoch Step: 40 / 67 Loss (mean): 0.3875619885075139 Loss (std): 0.40760983894250075 Loss ratio: 1.051728113255354 Tokens per Sec: 2807.4749717732357
Epoch Step: 45 / 67 Loss (mean): 0.7220889222662663 Loss (std): 1.1363456370385123 Loss ratio: 1.5736921063296567 Tokens per Sec: 3067.610173770773
Epoch Step: 50 / 67 Loss (mean): 0.538698993390426 Loss (std): 0.687770639941615 Loss ratio: 1.276725311129639 Tokens per Sec: 3156.342658499191
Epoch Step: 55 / 67 Loss (mean): 0.6204985439908342 Loss (std): 0.9504358250437531 Loss ratio: 1.5317293396546514 Tokens per Sec: 2905.597510580549
Epoch Step: 60 / 67 Loss (mean): 0.4227880683611147 Loss (std): 0.5715104486414572 Loss ratio: 1.3517657933367095 Tokens per Sec: 2562.03265948067
Epoch Step: 65 / 67 Loss (mean): 0.7446040497889044 Loss (std): 1.0223369848443193 Loss ratio: 1.3729941237012508 Tokens per Sec: 2639.5712378354915
Mean loss per sample: 1.1369300597353786 Std loss per sample: 6.193230796767555 ratio: 5.447327866596327
Epoch ended with duration 0:00:11.467599
Train perplexity: 1.166288299549601
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to android-changed ( ) and hint[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 110.61003243923187 Loss (std): 45.50915735367824 Loss ratio: 0.41143788090542827 Tokens per Sec: 4321.728861755777
Mean loss per sample: 100.45764332728797 Std loss per sample: 50.60166949939975 ratio: 0.503711492957694
Epoch ended with duration 0:00:01.032836
b'BLEU = 2.59, 8.2/2.8/1.8/1.5 (BP=0.922, ratio=0.925, hyp_len=2878, ref_len=3113)\n'
Validation perplexity: 817339.6674975319
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.59
Epoch 432 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.32079156644977047 Loss (std): 0.471744126668206 Loss ratio: 1.4705627454270112 Tokens per Sec: 2639.0311661697438
Epoch Step: 10 / 67 Loss (mean): 0.3525132941285847 Loss (std): 0.43303948525058283 Loss ratio: 1.2284344802401268 Tokens per Sec: 2461.6760366442995
Epoch Step: 15 / 67 Loss (mean): 0.5161775093438337 Loss (std): 0.7543779187857723 Loss ratio: 1.4614699500269581 Tokens per Sec: 3047.3419351007497
Epoch Step: 20 / 67 Loss (mean): 0.4739756214148656 Loss (std): 0.6747548505222022 Loss ratio: 1.4236066583086913 Tokens per Sec: 2858.409850161913
Epoch Step: 25 / 67 Loss (mean): 2.10963352303952 Loss (std): 3.0876897278387454 Loss ratio: 1.463614269548609 Tokens per Sec: 3075.880649898269
Epoch Step: 30 / 67 Loss (mean): 0.6443573422766349 Loss (std): 1.0958625310149332 Loss ratio: 1.7007062061914995 Tokens per Sec: 2640.9876619749807
Epoch Step: 35 / 67 Loss (mean): 0.6420666359481402 Loss (std): 1.0299941745660977 Loss ratio: 1.6041857914717912 Tokens per Sec: 2727.154937738505
Epoch Step: 40 / 67 Loss (mean): 6.8626688755030045 Loss (std): 17.920959975083743 Loss ratio: 2.6113688858068667 Tokens per Sec: 2692.2055753375985
Epoch Step: 45 / 67 Loss (mean): 0.6495804146543378 Loss (std): 0.8706626243584853 Loss ratio: 1.340346175341189 Tokens per Sec: 2492.2036012785316
Epoch Step: 50 / 67 Loss (mean): 0.5610870757227531 Loss (std): 0.7485300043058892 Loss ratio: 1.3340710144529444 Tokens per Sec: 3524.9285981393864
Epoch Step: 55 / 67 Loss (mean): 0.6648419574376021 Loss (std): 1.625575824286538 Loss ratio: 2.445056010832626 Tokens per Sec: 2569.798851353544
Epoch Step: 60 / 67 Loss (mean): 0.39926683765952475 Loss (std): 0.6730879899520525 Loss ratio: 1.685809905720317 Tokens per Sec: 2455.8771620457055
Epoch Step: 65 / 67 Loss (mean): 9.483108949421876 Loss (std): 22.37744759593231 Loss ratio: 2.3597163878726204 Tokens per Sec: 2838.187146252226
Mean loss per sample: 1.1134721862608534 Std loss per sample: 5.640305985236497 ratio: 5.065511339063787
Epoch ended with duration 0:00:11.468693
Train perplexity: 1.1625925508780124
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 94.455271422863 Loss (std): 43.82296744300597 Loss ratio: 0.46395470345764706 Tokens per Sec: 4061.2136853528336
Mean loss per sample: 103.12022142173325 Std loss per sample: 51.10432480030245 ratio: 0.49558005302665
Epoch ended with duration 0:00:01.064249
b'BLEU = 2.56, 8.2/2.8/1.8/1.3 (BP=0.944, ratio=0.945, hyp_len=2942, ref_len=3113)\n'
Validation perplexity: 1172486.2594410933
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.56
Epoch 433 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.4265303449210478 Loss (std): 0.6748114185218945 Loss ratio: 1.5820947479054612 Tokens per Sec: 3709.3146962192536
Epoch Step: 10 / 67 Loss (mean): 0.38059652733500116 Loss (std): 0.8146377343465667 Loss ratio: 2.1404234559122037 Tokens per Sec: 2712.599036711371
Epoch Step: 15 / 67 Loss (mean): 0.5165744336009084 Loss (std): 0.8377273028432947 Loss ratio: 1.6216971811858973 Tokens per Sec: 2654.4566736290485
Epoch Step: 20 / 67 Loss (mean): 0.34226993707125075 Loss (std): 0.6040383489842694 Loss ratio: 1.7648010636076579 Tokens per Sec: 2889.418853639917
Epoch Step: 25 / 67 Loss (mean): 0.47797677537892014 Loss (std): 0.5615903730452093 Loss ratio: 1.174932343940778 Tokens per Sec: 2784.0669900434004
Epoch Step: 30 / 67 Loss (mean): 0.4725028715474764 Loss (std): 0.9515192907152656 Loss ratio: 2.0137852021914293 Tokens per Sec: 2573.1836724082527
Epoch Step: 35 / 67 Loss (mean): 2.889122149805189 Loss (std): 10.533509882993455 Loss ratio: 3.645920572691508 Tokens per Sec: 3038.087486597516
Epoch Step: 40 / 67 Loss (mean): 0.44602383490109787 Loss (std): 0.7703916931204301 Loss ratio: 1.7272433283554411 Tokens per Sec: 2452.0873250306354
Epoch Step: 45 / 67 Loss (mean): 0.8660505149746314 Loss (std): 1.6661085397113087 Loss ratio: 1.9238006454624796 Tokens per Sec: 3165.4569879387573
Epoch Step: 50 / 67 Loss (mean): 0.4776003307197243 Loss (std): 0.9499278034358034 Loss ratio: 1.988959685191802 Tokens per Sec: 2638.6925719023684
Epoch Step: 55 / 67 Loss (mean): 0.5186973250820301 Loss (std): 0.6816688615436072 Loss ratio: 1.3141939018787183 Tokens per Sec: 2650.637297739301
Epoch Step: 60 / 67 Loss (mean): 0.27162633122679836 Loss (std): 0.3390192313111481 Loss ratio: 1.2481088625685521 Tokens per Sec: 2509.2198483828465
Epoch Step: 65 / 67 Loss (mean): 3.188491636683466 Loss (std): 11.88268928802723 Loss ratio: 3.7267431255949917 Tokens per Sec: 2382.7350101163415
Mean loss per sample: 0.8554522903730164 Std loss per sample: 4.3130361182365045 ratio: 5.041819592716062
Epoch ended with duration 0:00:11.470777
Train perplexity: 1.1227066825800742
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.00814640522003 Loss (std): 44.92845887759837 Loss ratio: 0.47289059493881325 Tokens per Sec: 4369.698379701119
Mean loss per sample: 99.17578429716532 Std loss per sample: 51.652325199449066 ratio: 0.5208158984120624
Epoch ended with duration 0:00:01.026197
b'BLEU = 2.75, 8.7/3.1/2.1/1.6 (BP=0.892, ratio=0.897, hyp_len=2793, ref_len=3113)\n'
Validation perplexity: 687003.8520774764
Validation accuracy: 0.0
Validation BLEU: 2.75
Epoch 434 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.43883400581398746 Loss (std): 0.6899484681124711 Loss ratio: 1.5722310918742377 Tokens per Sec: 2604.170254017686
Epoch Step: 10 / 67 Loss (mean): 1.2789877137256553 Loss (std): 1.5402840338158326 Loss ratio: 1.2042993199121736 Tokens per Sec: 3245.687801738011
Epoch Step: 15 / 67 Loss (mean): 0.4570876695215702 Loss (std): 0.6742235201400555 Loss ratio: 1.475042021688661 Tokens per Sec: 2568.8650843924784
Epoch Step: 20 / 67 Loss (mean): 0.3543731168247177 Loss (std): 0.5816289235690406 Loss ratio: 1.6412896350056079 Tokens per Sec: 2407.901035288516
Epoch Step: 25 / 67 Loss (mean): 0.6282399426345364 Loss (std): 1.0184606709207906 Loss ratio: 1.6211332674103083 Tokens per Sec: 2814.796302840263
Epoch Step: 30 / 67 Loss (mean): 0.7352669615502236 Loss (std): 1.3428847278644376 Loss ratio: 1.8263906826890788 Tokens per Sec: 2715.846688833764
Epoch Step: 35 / 67 Loss (mean): 0.6269671424088301 Loss (std): 1.129117660912115 Loss ratio: 1.8009199917144056 Tokens per Sec: 2533.833967597109
Epoch Step: 40 / 67 Loss (mean): 0.6757979166213772 Loss (std): 0.925779627702519 Loss ratio: 1.3699060102625273 Tokens per Sec: 2287.4062879794037
Epoch Step: 45 / 67 Loss (mean): 2.666566611464077 Loss (std): 7.53151574212051 Loss ratio: 2.824424377677681 Tokens per Sec: 2375.747632114011
Epoch Step: 50 / 67 Loss (mean): 0.5805750728468411 Loss (std): 1.2333593621414687 Loss ratio: 2.1243753302974406 Tokens per Sec: 3161.1288000280792
Epoch Step: 55 / 67 Loss (mean): 0.4203641790372785 Loss (std): 0.5149431966746955 Loss ratio: 1.224993047347713 Tokens per Sec: 2566.7662433887194
Epoch Step: 60 / 67 Loss (mean): 0.8504324423556682 Loss (std): 1.1968569555416517 Loss ratio: 1.4073510086543732 Tokens per Sec: 3437.911604344456
Epoch Step: 65 / 67 Loss (mean): 0.687124932941515 Loss (std): 0.840248388375463 Loss ratio: 1.2228466005133032 Tokens per Sec: 3315.7005464829804
Mean loss per sample: 1.0525893021246382 Std loss per sample: 5.789445862221564 ratio: 5.50019447331988
Epoch ended with duration 0:00:11.462477
Train perplexity: 1.1530551041516572
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shader print for openjdk ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.63300320506096 Loss (std): 43.95358932494995 Loss ratio: 0.4596069123825644 Tokens per Sec: 4414.534677129661
Mean loss per sample: 99.91888158805058 Std loss per sample: 51.57362588698068 ratio: 0.5161549555729658
Epoch ended with duration 0:00:01.020090
b'BLEU = 2.73, 8.4/2.9/1.9/1.4 (BP=0.956, ratio=0.957, hyp_len=2980, ref_len=3113)\n'
Validation perplexity: 759790.6177412788
Validation accuracy: 0.0
Validation BLEU: 2.73
Epoch 435 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.36980441434207023 Loss (std): 0.46293279253036196 Loss ratio: 1.2518314400166886 Tokens per Sec: 2241.846529159677
Epoch Step: 10 / 67 Loss (mean): 0.4874909446371021 Loss (std): 0.6560053998118294 Loss ratio: 1.3456770982693285 Tokens per Sec: 2786.846093334331
Epoch Step: 15 / 67 Loss (mean): 0.43932483906974085 Loss (std): 0.8089494954964623 Loss ratio: 1.841347047914232 Tokens per Sec: 2561.94477525022
Epoch Step: 20 / 67 Loss (mean): 0.37483444188546855 Loss (std): 0.5327959904932917 Loss ratio: 1.4214168468971393 Tokens per Sec: 2556.36100226582
Epoch Step: 25 / 67 Loss (mean): 0.37132699697758653 Loss (std): 0.6458683439499019 Loss ratio: 1.7393519706537437 Tokens per Sec: 2973.8888381043457
Epoch Step: 30 / 67 Loss (mean): 0.7744065502283775 Loss (std): 1.245717774559643 Loss ratio: 1.608609552943829 Tokens per Sec: 3025.534022316208
Epoch Step: 35 / 67 Loss (mean): 0.2613228976330165 Loss (std): 0.4113800829781965 Loss ratio: 1.5742213434197785 Tokens per Sec: 2703.7486667408216
Epoch Step: 40 / 67 Loss (mean): 0.30480448687740136 Loss (std): 0.458977518882985 Loss ratio: 1.5058095882545035 Tokens per Sec: 2357.446906933058
Epoch Step: 45 / 67 Loss (mean): 0.4166409593708522 Loss (std): 0.40085344214508595 Loss ratio: 0.9621076207927176 Tokens per Sec: 2695.384647265971
Epoch Step: 50 / 67 Loss (mean): 0.5966446726815775 Loss (std): 0.9137174236877953 Loss ratio: 1.5314264343988133 Tokens per Sec: 3009.2025933171303
Epoch Step: 55 / 67 Loss (mean): 0.7194141794388997 Loss (std): 1.003580042710906 Loss ratio: 1.3949961946727805 Tokens per Sec: 3071.996656267572
Epoch Step: 60 / 67 Loss (mean): 0.5736327726626769 Loss (std): 0.7856159989987763 Loss ratio: 1.36954518018927 Tokens per Sec: 3463.3183737252184
Epoch Step: 65 / 67 Loss (mean): 0.5728092880563054 Loss (std): 1.0959475859281604 Loss ratio: 1.9132852919459507 Tokens per Sec: 2848.781048548461
Mean loss per sample: 0.8690961376380932 Std loss per sample: 4.7168566741286195 ratio: 5.427312894229891
Epoch ended with duration 0:00:11.448388
Train perplexity: 1.124781122945109
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 94.89788690209389 Loss (std): 43.43277371631262 Loss ratio: 0.4576790393775806 Tokens per Sec: 4287.965022150494
Mean loss per sample: 100.93222464474498 Std loss per sample: 51.0434271931396 ratio: 0.505719827070087
Epoch ended with duration 0:00:01.037954
b'BLEU = 2.75, 8.8/3.0/1.9/1.5 (BP=0.947, ratio=0.948, hyp_len=2951, ref_len=3113)\n'
Validation perplexity: 871633.4911325651
Validation accuracy: 0.0
Validation BLEU: 2.75
Model saved checkpoint_commit_msg_generator!
Epoch 436 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3364619638887234 Loss (std): 0.3560001155295813 Loss ratio: 1.0580694216221114 Tokens per Sec: 2494.006995977111
Epoch Step: 10 / 67 Loss (mean): 0.4035901122533687 Loss (std): 0.6155025567439373 Loss ratio: 1.525068474317658 Tokens per Sec: 2774.5509849725827
Epoch Step: 15 / 67 Loss (mean): 1.3683810375878238 Loss (std): 1.6415761737870913 Loss ratio: 1.1996484376024785 Tokens per Sec: 3054.6083786720465
Epoch Step: 20 / 67 Loss (mean): 0.5979085189937905 Loss (std): 1.0375424322949804 Loss ratio: 1.7352862508817268 Tokens per Sec: 2916.821124495898
Epoch Step: 25 / 67 Loss (mean): 0.337724308930774 Loss (std): 0.6240018902132728 Loss ratio: 1.8476664951624178 Tokens per Sec: 2625.066886219037
Epoch Step: 30 / 67 Loss (mean): 0.5489465566060971 Loss (std): 0.8800937009374367 Loss ratio: 1.6032411358560683 Tokens per Sec: 2947.838003969486
Epoch Step: 35 / 67 Loss (mean): 0.30342708000171115 Loss (std): 0.36698600657798636 Loss ratio: 1.2094701849812375 Tokens per Sec: 2638.3983022580787
Epoch Step: 40 / 67 Loss (mean): 2.687406816119619 Loss (std): 10.346567426802842 Loss ratio: 3.8500190461458983 Tokens per Sec: 2487.9960712161674
Epoch Step: 45 / 67 Loss (mean): 1.7252549966287916 Loss (std): 6.085181501117079 Loss ratio: 3.5271200564599066 Tokens per Sec: 2522.0477298519045
Epoch Step: 50 / 67 Loss (mean): 3.1044090699142544 Loss (std): 13.247291188777373 Loss ratio: 4.267250510623998 Tokens per Sec: 2308.338803058772
Epoch Step: 55 / 67 Loss (mean): 0.39343287343217526 Loss (std): 0.5972016560849787 Loss ratio: 1.5179251567750134 Tokens per Sec: 3269.4685592465526
Epoch Step: 60 / 67 Loss (mean): 0.6030021439219126 Loss (std): 1.8028210587970612 Loss ratio: 2.9897423698555246 Tokens per Sec: 3324.221888242362
Epoch Step: 65 / 67 Loss (mean): 0.4381696999189444 Loss (std): 0.6975454367848818 Loss ratio: 1.5919526998647293 Tokens per Sec: 2927.4252749933144
Mean loss per sample: 0.9729837587025637 Std loss per sample: 5.3955418838280655 ratio: 5.5453565751424385
Epoch ended with duration 0:00:11.536307
Train perplexity: 1.1407026416017696
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint print not run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.16211634874344 Loss (std): 43.33898510143612 Loss ratio: 0.4554226699058526 Tokens per Sec: 4401.582550339114
Mean loss per sample: 98.83230641191123 Std loss per sample: 50.87894090437384 ratio: 0.5148007038540783
Epoch ended with duration 0:00:01.022532
b'BLEU = 2.77, 8.7/3.1/2.0/1.6 (BP=0.911, ratio=0.915, hyp_len=2848, ref_len=3113)\n'
Validation perplexity: 655758.4427290913
Validation accuracy: 0.0
Validation BLEU: 2.77
Epoch 437 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.494698128222808 Loss (std): 0.9849730921807472 Loss ratio: 1.9910588619351384 Tokens per Sec: 2639.0251389965456
Epoch Step: 10 / 67 Loss (mean): 0.45148642228741664 Loss (std): 0.8927114710865147 Loss ratio: 1.9772720219661752 Tokens per Sec: 3027.6683188449374
Epoch Step: 15 / 67 Loss (mean): 0.5463623652758542 Loss (std): 0.7216157252576865 Loss ratio: 1.320763967505976 Tokens per Sec: 2922.927508746573
Epoch Step: 20 / 67 Loss (mean): 0.27055044404551154 Loss (std): 0.3101989252051898 Loss ratio: 1.146547462893865 Tokens per Sec: 2735.7364677298356
Epoch Step: 25 / 67 Loss (mean): 0.5181133935657272 Loss (std): 0.674687009169284 Loss ratio: 1.3021995137512192 Tokens per Sec: 2756.638610536291
Epoch Step: 30 / 67 Loss (mean): 0.5609488219051855 Loss (std): 0.7477678379115933 Loss ratio: 1.3330411059103444 Tokens per Sec: 3072.7700877337475
Epoch Step: 35 / 67 Loss (mean): 0.5643717972561717 Loss (std): 1.0684228874567698 Loss ratio: 1.8931188494024027 Tokens per Sec: 3001.8365024302125
Epoch Step: 40 / 67 Loss (mean): 0.5291066860645515 Loss (std): 0.8168794291262726 Loss ratio: 1.5438841553905684 Tokens per Sec: 2695.316403890551
Epoch Step: 45 / 67 Loss (mean): 0.9758533596577763 Loss (std): 1.5497177570514005 Loss ratio: 1.588064171439522 Tokens per Sec: 2821.7297894548533
Epoch Step: 50 / 67 Loss (mean): 0.3683196502934152 Loss (std): 0.4132379139245027 Loss ratio: 1.121954567439734 Tokens per Sec: 2399.874942889716
Epoch Step: 55 / 67 Loss (mean): 1.3826230933773331 Loss (std): 1.6750326774186883 Loss ratio: 1.2114890062533863 Tokens per Sec: 2874.403806874754
Epoch Step: 60 / 67 Loss (mean): 0.37034775302163325 Loss (std): 0.4767505562108815 Loss ratio: 1.28730511342682 Tokens per Sec: 2500.999330452491
Epoch Step: 65 / 67 Loss (mean): 0.5968818565888796 Loss (std): 1.2661841697716179 Loss ratio: 2.1213313083559524 Tokens per Sec: 2931.20326820074
Mean loss per sample: 0.7477285021104345 Std loss per sample: 4.366585276115264 ratio: 5.839800494150948
Epoch ended with duration 0:00:11.423489
Train perplexity: 1.1064619065087355
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.45111086964607 Loss (std): 43.26713862645575 Loss ratio: 0.45329109564313 Tokens per Sec: 4270.561728679669
Mean loss per sample: 100.73016754623319 Std loss per sample: 51.632977708472296 ratio: 0.5125870329241115
Epoch ended with duration 0:00:01.035680
b'BLEU = 2.74, 8.3/2.8/1.9/1.5 (BP=0.970, ratio=0.971, hyp_len=3022, ref_len=3113)\n'
Validation perplexity: 848089.922783101
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.74
Epoch 438 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.4213856140559074 Loss (std): 7.1944901542582596 Loss ratio: 5.061603327846315 Tokens per Sec: 3020.131638854698
Epoch Step: 10 / 67 Loss (mean): 0.49402087073031 Loss (std): 0.9995419693776986 Loss ratio: 2.0232788301030236 Tokens per Sec: 2316.389912501161
Epoch Step: 15 / 67 Loss (mean): 0.3644118866941426 Loss (std): 0.3870673113911825 Loss ratio: 1.0621698290430768 Tokens per Sec: 2927.063982585798
Epoch Step: 20 / 67 Loss (mean): 0.4810284341001534 Loss (std): 0.781209541447379 Loss ratio: 1.6240402563910097 Tokens per Sec: 3287.612473384703
Epoch Step: 25 / 67 Loss (mean): 0.3319308454847487 Loss (std): 0.44098198530437704 Loss ratio: 1.3285357215307034 Tokens per Sec: 2978.352665380168
Epoch Step: 30 / 67 Loss (mean): 0.8935947059071623 Loss (std): 1.7821235854573756 Loss ratio: 1.9943309575096395 Tokens per Sec: 2750.5499141741266
Epoch Step: 35 / 67 Loss (mean): 0.6188739224817255 Loss (std): 1.04366566440762 Loss ratio: 1.6863946378972499 Tokens per Sec: 2650.3554983349513
Epoch Step: 40 / 67 Loss (mean): 0.3364166227111127 Loss (std): 0.4787395107221229 Loss ratio: 1.4230554568441331 Tokens per Sec: 2297.5961520036326
Epoch Step: 45 / 67 Loss (mean): 0.5669206148631929 Loss (std): 0.6420719652806425 Loss ratio: 1.132560623916604 Tokens per Sec: 3310.578265572926
Epoch Step: 50 / 67 Loss (mean): 0.6136969199287705 Loss (std): 0.9313971632481227 Loss ratio: 1.5176826426898582 Tokens per Sec: 2974.801908855512
Epoch Step: 55 / 67 Loss (mean): 0.14605846984444984 Loss (std): 0.23909908584065842 Loss ratio: 1.6370093846340819 Tokens per Sec: 2518.3378743177727
Epoch Step: 60 / 67 Loss (mean): 0.8137068125433871 Loss (std): 1.0436682003226239 Loss ratio: 1.282609638059255 Tokens per Sec: 2774.479085740021
Epoch Step: 65 / 67 Loss (mean): 0.3941313374816673 Loss (std): 0.5402953107933892 Loss ratio: 1.3708509306711005 Tokens per Sec: 2337.8242955816554
Mean loss per sample: 0.778867699717512 Std loss per sample: 4.468487095732377 ratio: 5.737158053098177
Epoch ended with duration 0:00:11.457975
Train perplexity: 1.1111334022147765
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint creation switch ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 93.92177030444145 Loss (std): 43.119228920420866 Loss ratio: 0.4590972761762542 Tokens per Sec: 4418.943835402828
Mean loss per sample: 100.44462579977316 Std loss per sample: 50.939089248044965 ratio: 0.5071360348296504
Epoch ended with duration 0:00:01.036851
b'BLEU = 2.42, 8.9/2.7/1.7/1.3 (BP=0.912, ratio=0.916, hyp_len=2850, ref_len=3113)\n'
Validation perplexity: 815899.0629982022
Validation accuracy: 0.0
Validation BLEU: 2.42
Epoch 439 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.40347466236926266 Loss (std): 0.7051634276811791 Loss ratio: 1.7477266689817783 Tokens per Sec: 3057.7962087755686
Epoch Step: 10 / 67 Loss (mean): 2.5126853265755926 Loss (std): 9.010070255461088 Loss ratio: 3.585833116532917 Tokens per Sec: 3493.2073119077872
Epoch Step: 15 / 67 Loss (mean): 0.4553545992694126 Loss (std): 0.9972457511494118 Loss ratio: 2.1900421182731633 Tokens per Sec: 2305.676314215246
Epoch Step: 20 / 67 Loss (mean): 0.3542318630643422 Loss (std): 0.5719758865435578 Loss ratio: 1.6146934993243816 Tokens per Sec: 3358.0318564849
Epoch Step: 25 / 67 Loss (mean): 0.2423683277447708 Loss (std): 0.22269089795973007 Loss ratio: 0.9188118762540529 Tokens per Sec: 2662.887433472421
Epoch Step: 30 / 67 Loss (mean): 0.7568890396069037 Loss (std): 1.5585456559469852 Loss ratio: 2.0591468159671438 Tokens per Sec: 3330.1397442396446
Epoch Step: 35 / 67 Loss (mean): 0.6066773863676644 Loss (std): 1.5281483391675357 Loss ratio: 2.5188813255706757 Tokens per Sec: 2862.7468857893564
Epoch Step: 40 / 67 Loss (mean): 0.2542660845319915 Loss (std): 0.37831804798620927 Loss ratio: 1.4878824625098974 Tokens per Sec: 2130.192206504508
Epoch Step: 45 / 67 Loss (mean): 0.36744223785626673 Loss (std): 0.5488507392032365 Loss ratio: 1.493706173806648 Tokens per Sec: 2665.134734241214
Epoch Step: 50 / 67 Loss (mean): 0.7128333453365485 Loss (std): 0.7906285678873082 Loss ratio: 1.1091352180137286 Tokens per Sec: 3272.7408791822286
Epoch Step: 55 / 67 Loss (mean): 0.3692556088863057 Loss (std): 0.68873302198515 Loss ratio: 1.8651931220825728 Tokens per Sec: 2860.8638466769694
Epoch Step: 60 / 67 Loss (mean): 6.226024085859535 Loss (std): 13.006831650558384 Loss ratio: 2.089107184808252 Tokens per Sec: 2113.2871292465547
Epoch Step: 65 / 67 Loss (mean): 0.4285767386027146 Loss (std): 0.7539281616178376 Loss ratio: 1.7591439145201013 Tokens per Sec: 2339.4084640393744
Mean loss per sample: 0.8810218368591357 Std loss per sample: 4.427698995026387 ratio: 5.025640466314934
Epoch ended with duration 0:00:11.488719
Train perplexity: 1.1265974714252343
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the print not ( test ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 94.90993988513947 Loss (std): 43.33790460275787 Loss ratio: 0.45662134709183927 Tokens per Sec: 4421.404775343349
Mean loss per sample: 98.88702528801609 Std loss per sample: 50.833816622390714 ratio: 0.5140595186712645
Epoch ended with duration 0:00:01.020052
b'BLEU = 2.72, 8.2/2.8/1.9/1.5 (BP=0.954, ratio=0.955, hyp_len=2973, ref_len=3113)\n'
Validation perplexity: 660639.2199607485
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.72
Epoch 440 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.4309002449081163 Loss (std): 0.8628439156829295 Loss ratio: 2.00242150214354 Tokens per Sec: 2408.698466755164
Epoch Step: 10 / 67 Loss (mean): 0.18611572511144914 Loss (std): 0.2708827450739087 Loss ratio: 1.4554532934371864 Tokens per Sec: 2231.5027329397517
Epoch Step: 15 / 67 Loss (mean): 0.9023760554409819 Loss (std): 2.496271738291991 Loss ratio: 2.766331977938054 Tokens per Sec: 2488.5449325904397
Epoch Step: 20 / 67 Loss (mean): 0.48465716633654665 Loss (std): 0.6117709699583158 Loss ratio: 1.2622757125054067 Tokens per Sec: 2817.7418696820523
Epoch Step: 25 / 67 Loss (mean): 0.36126567753672134 Loss (std): 0.5219649293564106 Loss ratio: 1.4448229151338485 Tokens per Sec: 3136.9381194651273
Epoch Step: 30 / 67 Loss (mean): 16.773384693544358 Loss (std): 30.959024209254743 Loss ratio: 1.8457231366767657 Tokens per Sec: 3236.7214413688566
Epoch Step: 35 / 67 Loss (mean): 0.29197746865975205 Loss (std): 0.6001981402786665 Loss ratio: 2.0556317000545374 Tokens per Sec: 3102.8084220412106
Epoch Step: 40 / 67 Loss (mean): 0.3260744812141638 Loss (std): 0.4922975813340945 Loss ratio: 1.5097703429627058 Tokens per Sec: 3215.432096543176
Epoch Step: 45 / 67 Loss (mean): 0.35289907690457767 Loss (std): 0.5775597640116947 Loss ratio: 1.6366145501929559 Tokens per Sec: 2631.6826610305047
Epoch Step: 50 / 67 Loss (mean): 0.279048384847556 Loss (std): 0.3160215921741511 Loss ratio: 1.1324974783380077 Tokens per Sec: 2464.2847551722057
Epoch Step: 55 / 67 Loss (mean): 0.4623607676185202 Loss (std): 0.9706154398672774 Loss ratio: 2.099259945575881 Tokens per Sec: 2873.557660764854
Epoch Step: 60 / 67 Loss (mean): 0.7038441350523499 Loss (std): 1.0114330038396726 Loss ratio: 1.4370127610205137 Tokens per Sec: 2674.125391582827
Epoch Step: 65 / 67 Loss (mean): 0.47431153499201173 Loss (std): 0.7341478026180049 Loss ratio: 1.547817728342553 Tokens per Sec: 3085.5806324007744
Mean loss per sample: 0.7860895139685148 Std loss per sample: 4.682369823174665 ratio: 5.956535152766594
Epoch ended with duration 0:00:11.414860
Train perplexity: 1.1122196317103394
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) over[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 96.25654178857803 Loss (std): 43.55851649335738 Loss ratio: 0.4525252588964931 Tokens per Sec: 4410.352077250044
Mean loss per sample: 99.75231052269457 Std loss per sample: 51.60303754811433 ratio: 0.5173117021321944
Epoch ended with duration 0:00:01.019952
b'BLEU = 2.62, 8.8/2.9/1.8/1.4 (BP=0.918, ratio=0.922, hyp_len=2869, ref_len=3113)\n'
Validation perplexity: 742831.7181975757
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.62
Model saved checkpoint_commit_msg_generator!
Epoch 441 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.37915332480679353 Loss (std): 0.905192053094396 Loss ratio: 2.3874037068134846 Tokens per Sec: 2659.656357087088
Epoch Step: 10 / 67 Loss (mean): 0.3646612551456201 Loss (std): 0.5069936888245661 Loss ratio: 1.390314111166289 Tokens per Sec: 2621.092462338206
Epoch Step: 15 / 67 Loss (mean): 0.37956607044907287 Loss (std): 0.4749399631864431 Loss ratio: 1.2512708594436044 Tokens per Sec: 2807.6406646135515
Epoch Step: 20 / 67 Loss (mean): 2.1796489477674186 Loss (std): 7.084693618252112 Loss ratio: 3.2503828772559253 Tokens per Sec: 2387.4753079547154
Epoch Step: 25 / 67 Loss (mean): 0.4724250143772224 Loss (std): 1.0483066191503467 Loss ratio: 2.2189905006031156 Tokens per Sec: 2480.921900659245
Epoch Step: 30 / 67 Loss (mean): 0.36109862625744427 Loss (std): 0.8247680748175045 Loss ratio: 2.2840520978041283 Tokens per Sec: 2675.4221702437153
Epoch Step: 35 / 67 Loss (mean): 0.6480805778410286 Loss (std): 1.3453320388724805 Loss ratio: 2.0758715580618508 Tokens per Sec: 2502.602205179244
Epoch Step: 40 / 67 Loss (mean): 0.536006565860589 Loss (std): 0.6673659935859487 Loss ratio: 1.2450705571385206 Tokens per Sec: 3044.0333388902222
Epoch Step: 45 / 67 Loss (mean): 4.913123321312014 Loss (std): 14.886653888867805 Loss ratio: 3.029977656838549 Tokens per Sec: 2840.1644336592603
Epoch Step: 50 / 67 Loss (mean): 1.1814376587572042 Loss (std): 1.7292437261169673 Loss ratio: 1.463677506213929 Tokens per Sec: 3584.84784567059
Epoch Step: 55 / 67 Loss (mean): 2.3723034257491236 Loss (std): 10.795548911884229 Loss ratio: 4.550661097863238 Tokens per Sec: 2810.065657242396
Epoch Step: 60 / 67 Loss (mean): 0.6516197736782487 Loss (std): 1.29931605902719 Loss ratio: 1.9939788685245687 Tokens per Sec: 2970.107039618406
Epoch Step: 65 / 67 Loss (mean): 0.376025757905154 Loss (std): 0.4696711094758446 Loss ratio: 1.249039725609199 Tokens per Sec: 2720.862340061577
Mean loss per sample: 0.6956160471762521 Std loss per sample: 3.6099360320525133 ratio: 5.189552550874152
Epoch ended with duration 0:00:11.431036
Train perplexity: 1.0986879032696242
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the runtimeexception ( ) return ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 94.33222517371178 Loss (std): 43.004132624633236 Loss ratio: 0.45587955277681186 Tokens per Sec: 4287.084783301848
Mean loss per sample: 101.08403915478314 Std loss per sample: 50.20593985757739 ratio: 0.49667524445378003
Epoch ended with duration 0:00:01.037731
b'BLEU = 2.82, 8.3/3.1/2.0/1.5 (BP=0.951, ratio=0.952, hyp_len=2963, ref_len=3113)\n'
Validation perplexity: 889751.8579733972
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.82
Epoch 442 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5973604640166741 Loss (std): 0.8532177286061856 Loss ratio: 1.428313020364819 Tokens per Sec: 3163.657171979716
Epoch Step: 10 / 67 Loss (mean): 0.28885894772975007 Loss (std): 0.42961196252000156 Loss ratio: 1.4872724763988854 Tokens per Sec: 2865.6298023560576
Epoch Step: 15 / 67 Loss (mean): 0.4502850867829693 Loss (std): 0.724694570349502 Loss ratio: 1.609412773421017 Tokens per Sec: 2602.0338031716333
Epoch Step: 20 / 67 Loss (mean): 0.35814111951185623 Loss (std): 0.504656522336688 Loss ratio: 1.4090996393391835 Tokens per Sec: 3015.5983744920286
Epoch Step: 25 / 67 Loss (mean): 0.29105993517623574 Loss (std): 0.47076337980232047 Loss ratio: 1.6174104468114958 Tokens per Sec: 2376.973326697989
Epoch Step: 30 / 67 Loss (mean): 0.27144003671128303 Loss (std): 0.4925429977592722 Loss ratio: 1.814555449250713 Tokens per Sec: 2610.4722388580276
Epoch Step: 35 / 67 Loss (mean): 2.2255274563503917 Loss (std): 10.304515040510305 Loss ratio: 4.630145097112628 Tokens per Sec: 2789.175925097942
Epoch Step: 40 / 67 Loss (mean): 0.30042052223870996 Loss (std): 0.4276101700680964 Loss ratio: 1.4233720349115273 Tokens per Sec: 3295.2745086073537
Epoch Step: 45 / 67 Loss (mean): 0.5314451984449988 Loss (std): 0.6399906319679755 Loss ratio: 1.204245769536688 Tokens per Sec: 2922.7328557447595
Epoch Step: 50 / 67 Loss (mean): 0.31732524924882455 Loss (std): 0.7988616239558491 Loss ratio: 2.517485216971931 Tokens per Sec: 2320.839930010331
Epoch Step: 55 / 67 Loss (mean): 0.5626067735283868 Loss (std): 0.931641990704482 Loss ratio: 1.6559380984016452 Tokens per Sec: 3199.217923932551
Epoch Step: 60 / 67 Loss (mean): 0.6962218170665437 Loss (std): 1.0099066521820945 Loss ratio: 1.4505530097250159 Tokens per Sec: 2518.0383871525214
Epoch Step: 65 / 67 Loss (mean): 4.923252520326059 Loss (std): 14.907297467249267 Loss ratio: 3.027936797006297 Tokens per Sec: 2263.1720493529656
Mean loss per sample: 0.7834552216863412 Std loss per sample: 4.906113883904897 ratio: 6.262149703137821
Epoch ended with duration 0:00:11.459258
Train perplexity: 1.1118232861450166
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print tweaks to deprecated statement ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.78065666556358 Loss (std): 44.201423208072164 Loss ratio: 0.46148590693431824 Tokens per Sec: 4445.079150942013
Mean loss per sample: 99.09131588322705 Std loss per sample: 51.39350678782263 ratio: 0.5186479393248413
Epoch ended with duration 0:00:01.015414
b'BLEU = 2.81, 8.9/3.0/2.0/1.6 (BP=0.930, ratio=0.933, hyp_len=2903, ref_len=3113)\n'
Validation perplexity: 679184.5695991842
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.81
Epoch 443 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2979755974083673 Loss (std): 0.483935907924329 Loss ratio: 1.6240789921501801 Tokens per Sec: 2880.482464983282
Epoch Step: 10 / 67 Loss (mean): 0.5213859434734331 Loss (std): 0.7217178501483568 Loss ratio: 1.3842295888153944 Tokens per Sec: 2816.1169918765668
Epoch Step: 15 / 67 Loss (mean): 0.7132732381287497 Loss (std): 1.3256383131147733 Loss ratio: 1.8585280398189963 Tokens per Sec: 2312.440718774608
Epoch Step: 20 / 67 Loss (mean): 0.47262400647014147 Loss (std): 0.9846116827920887 Loss ratio: 2.0832874955840666 Tokens per Sec: 3488.635929290136
Epoch Step: 25 / 67 Loss (mean): 0.3716818215325475 Loss (std): 0.6582016927337642 Loss ratio: 1.770874050336429 Tokens per Sec: 2497.284166118826
Epoch Step: 30 / 67 Loss (mean): 0.4660824541351758 Loss (std): 0.734193520406445 Loss ratio: 1.5752438520105934 Tokens per Sec: 3275.2747989121444
Epoch Step: 35 / 67 Loss (mean): 0.3791443207519478 Loss (std): 0.7939698849911843 Loss ratio: 2.094109924728723 Tokens per Sec: 2769.2320038552634
Epoch Step: 40 / 67 Loss (mean): 0.34175141835476097 Loss (std): 0.6511280081446178 Loss ratio: 1.9052679028495008 Tokens per Sec: 3317.15627690701
Epoch Step: 45 / 67 Loss (mean): 0.5142879452687339 Loss (std): 1.0782389449104295 Loss ratio: 2.096566631261425 Tokens per Sec: 2472.677604356657
Epoch Step: 50 / 67 Loss (mean): 0.8438505166268442 Loss (std): 1.3290253167240378 Loss ratio: 1.5749534906213025 Tokens per Sec: 2780.4725224178997
Epoch Step: 55 / 67 Loss (mean): 0.3421552131731005 Loss (std): 0.6441238304060326 Loss ratio: 1.8825486375978802 Tokens per Sec: 2645.243683004146
Epoch Step: 60 / 67 Loss (mean): 2.3452742760255205 Loss (std): 9.740909757793139 Loss ratio: 4.153420287498664 Tokens per Sec: 2460.989734248636
Epoch Step: 65 / 67 Loss (mean): 3.1673174640745856 Loss (std): 12.317373166778363 Loss ratio: 3.888897562839412 Tokens per Sec: 2600.085019947462
Mean loss per sample: 0.6619374204903308 Std loss per sample: 3.1030961788310885 ratio: 4.687899615242279
Epoch ended with duration 0:00:11.417956
Train perplexity: 1.0936928917258593
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to deprecated ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.55154064297676 Loss (std): 43.35573965065252 Loss ratio: 0.45374192146884296 Tokens per Sec: 4407.491693612949
Mean loss per sample: 99.74948873602953 Std loss per sample: 50.714591750739224 ratio: 0.5084195657879207
Epoch ended with duration 0:00:01.034156
b'BLEU = 2.61, 8.4/2.8/1.8/1.4 (BP=0.935, ratio=0.937, hyp_len=2918, ref_len=3113)\n'
Validation perplexity: 742547.7116962479
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.61
Epoch 444 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.45276686396391597 Loss (std): 0.6225391103931774 Loss ratio: 1.3749661469104146 Tokens per Sec: 2716.18323165887
Epoch Step: 10 / 67 Loss (mean): 0.5320399877527962 Loss (std): 0.827112350886595 Loss ratio: 1.554605612221199 Tokens per Sec: 3270.9554652397783
Epoch Step: 15 / 67 Loss (mean): 1.2055987252824707 Loss (std): 1.7237148502850748 Loss ratio: 1.4297583550291246 Tokens per Sec: 3025.5207833177374
Epoch Step: 20 / 67 Loss (mean): 0.31919435509553296 Loss (std): 0.7055323593144505 Loss ratio: 2.2103534979598525 Tokens per Sec: 2429.7685452820633
Epoch Step: 25 / 67 Loss (mean): 0.7483959403616609 Loss (std): 0.9028589765148476 Loss ratio: 1.2063921352627096 Tokens per Sec: 2526.0953212829404
Epoch Step: 30 / 67 Loss (mean): 2.8767784116244 Loss (std): 9.822561559085925 Loss ratio: 3.4144310591998366 Tokens per Sec: 3002.678919057299
Epoch Step: 35 / 67 Loss (mean): 0.2838018212423776 Loss (std): 0.2931534131485794 Loss ratio: 1.0329511342290336 Tokens per Sec: 2760.1675991022353
Epoch Step: 40 / 67 Loss (mean): 0.39936140257123043 Loss (std): 0.6856715403328028 Loss ratio: 1.7169199024197281 Tokens per Sec: 2420.1923018394036
Epoch Step: 45 / 67 Loss (mean): 0.3909614386866451 Loss (std): 0.5732276663205318 Loss ratio: 1.4662000125796875 Tokens per Sec: 2507.490266189704
Epoch Step: 50 / 67 Loss (mean): 0.4750065559983341 Loss (std): 0.919267137483829 Loss ratio: 1.935272525979732 Tokens per Sec: 2512.4784665048423
Epoch Step: 55 / 67 Loss (mean): 0.4449900782910845 Loss (std): 0.8106877291117651 Loss ratio: 1.821810796827394 Tokens per Sec: 2714.081468825459
Epoch Step: 60 / 67 Loss (mean): 0.2780400979318074 Loss (std): 0.42864671920946884 Loss ratio: 1.541672306972786 Tokens per Sec: 2802.3408849154202
Epoch Step: 65 / 67 Loss (mean): 0.3885712252158555 Loss (std): 0.7742522024169293 Loss ratio: 1.9925618578339757 Tokens per Sec: 3337.8263407758654
Mean loss per sample: 0.7279000220675552 Std loss per sample: 3.7325322342760647 ratio: 5.127808931333779
Epoch ended with duration 0:00:11.413241
Train perplexity: 1.1034974823648973
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not switch statement[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 113.8018370270729 Loss (std): 43.86898089492307 Loss ratio: 0.3854857007667359 Tokens per Sec: 4321.362941843512
Mean loss per sample: 103.55790000824166 Std loss per sample: 51.12578386474336 ratio: 0.4936927444518913
Epoch ended with duration 0:00:01.048403
b'BLEU = 2.49, 8.3/2.8/1.8/1.3 (BP=0.915, ratio=0.918, hyp_len=2859, ref_len=3113)\n'
Validation perplexity: 1244134.105403898
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.49
Epoch 445 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2711543430123129 Loss (std): 0.29255544596341565 Loss ratio: 1.0789259088139738 Tokens per Sec: 2603.3944504834712
Epoch Step: 10 / 67 Loss (mean): 0.8467556197792874 Loss (std): 1.3871331073859758 Loss ratio: 1.6381740787826617 Tokens per Sec: 2835.5778699828065
Epoch Step: 15 / 67 Loss (mean): 0.27517518541571917 Loss (std): 0.43691723246025255 Loss ratio: 1.5877784612016619 Tokens per Sec: 2702.0672496640677
Epoch Step: 20 / 67 Loss (mean): 0.2942763717874186 Loss (std): 0.5136380946915685 Loss ratio: 1.7454275773884216 Tokens per Sec: 2610.813947278961
Epoch Step: 25 / 67 Loss (mean): 0.31453204702120274 Loss (std): 0.4105016556351196 Loss ratio: 1.3051186978331892 Tokens per Sec: 2737.302409289974
Epoch Step: 30 / 67 Loss (mean): 4.721726876665343 Loss (std): 14.363870009017795 Loss ratio: 3.04207981194416 Tokens per Sec: 2411.807043629312
Epoch Step: 35 / 67 Loss (mean): 0.5853267613165372 Loss (std): 1.0288513838111117 Loss ratio: 1.7577385006231112 Tokens per Sec: 3710.2756507882373
Epoch Step: 40 / 67 Loss (mean): 0.26589201296155807 Loss (std): 0.39920342467702924 Loss ratio: 1.5013742617938093 Tokens per Sec: 2416.404884266338
Epoch Step: 45 / 67 Loss (mean): 0.780628335338406 Loss (std): 2.3455068411464968 Loss ratio: 3.0046396408730263 Tokens per Sec: 2183.3366570181806
Epoch Step: 50 / 67 Loss (mean): 0.4207463486091001 Loss (std): 0.625678497244584 Loss ratio: 1.4870681571282722 Tokens per Sec: 3022.0741908488926
Epoch Step: 55 / 67 Loss (mean): 0.5188908097115927 Loss (std): 0.9615029333028652 Loss ratio: 1.8529966522962371 Tokens per Sec: 3058.936177762415
Epoch Step: 60 / 67 Loss (mean): 1.2602660133925383 Loss (std): 4.857002208690124 Loss ratio: 3.8539500050592106 Tokens per Sec: 2736.1446464072387
Epoch Step: 65 / 67 Loss (mean): 0.23455935201945977 Loss (std): 0.32791191981341444 Loss ratio: 1.3979912418337934 Tokens per Sec: 2997.4845673427267
Mean loss per sample: 0.8143986267178208 Std loss per sample: 4.40076904999716 ratio: 5.403703917985575
Epoch ended with duration 0:00:11.466656
Train perplexity: 1.1164878407480636
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use command[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.12044304609299 Loss (std): 43.91305824313143 Loss ratio: 0.4616574191296845 Tokens per Sec: 4411.744747736555
Mean loss per sample: 99.56300981318364 Std loss per sample: 51.56958403596369 ratio: 0.5179592715480072
Epoch ended with duration 0:00:01.019714
b'BLEU = 2.24, 8.2/2.5/1.5/1.1 (BP=0.945, ratio=0.946, hyp_len=2946, ref_len=3113)\n'
Validation perplexity: 724017.7383656697
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.24
Model saved checkpoint_commit_msg_generator!
Epoch 446 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.19522711954050465 Loss (std): 0.33498030062215184 Loss ratio: 1.7158492191585708 Tokens per Sec: 2150.837788255307
Epoch Step: 10 / 67 Loss (mean): 0.5151925868267426 Loss (std): 1.2614405361720495 Loss ratio: 2.4484834767163823 Tokens per Sec: 2881.6040124132974
Epoch Step: 15 / 67 Loss (mean): 0.6406867015903117 Loss (std): 1.207925337775831 Loss ratio: 1.8853604027951887 Tokens per Sec: 2564.0612950712275
Epoch Step: 20 / 67 Loss (mean): 0.35842229041008977 Loss (std): 0.5668557553014277 Loss ratio: 1.5815304194749111 Tokens per Sec: 2567.485296806557
Epoch Step: 25 / 67 Loss (mean): 0.4422118366637733 Loss (std): 0.9490802682399933 Loss ratio: 2.1462118142296744 Tokens per Sec: 2808.728484912802
Epoch Step: 30 / 67 Loss (mean): 0.7261985573604761 Loss (std): 1.1040784516033055 Loss ratio: 1.520353408049053 Tokens per Sec: 3036.9687334067344
Epoch Step: 35 / 67 Loss (mean): 0.4485635199052922 Loss (std): 0.7108043001841319 Loss ratio: 1.5846235118143537 Tokens per Sec: 2907.393618984177
Epoch Step: 40 / 67 Loss (mean): 4.979675856484391 Loss (std): 13.985860638151575 Loss ratio: 2.80858855902028 Tokens per Sec: 2711.912594290359
Epoch Step: 45 / 67 Loss (mean): 0.5434170496009756 Loss (std): 1.1662449853226917 Loss ratio: 2.146132489179445 Tokens per Sec: 2325.339061531121
Epoch Step: 50 / 67 Loss (mean): 4.656432561532711 Loss (std): 16.433926163323196 Loss ratio: 3.529295430816635 Tokens per Sec: 2933.39756799559
Epoch Step: 55 / 67 Loss (mean): 0.40052891825325787 Loss (std): 0.6892989331898718 Loss ratio: 1.7209716996115176 Tokens per Sec: 2857.9189657779702
Epoch Step: 60 / 67 Loss (mean): 0.30791029272586456 Loss (std): 0.6027100338622003 Loss ratio: 1.9574208725747235 Tokens per Sec: 2602.744403765008
Epoch Step: 65 / 67 Loss (mean): 0.4957122629220976 Loss (std): 0.683147480098839 Loss ratio: 1.3781129320300822 Tokens per Sec: 3735.542010793846
Mean loss per sample: 0.737805096612743 Std loss per sample: 4.011335701294747 ratio: 5.436850083729098
Epoch ended with duration 0:00:11.422001
Train perplexity: 1.104977330053769
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow call log[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.43821412324905 Loss (std): 44.13682115335819 Loss ratio: 0.4624648685940396 Tokens per Sec: 4317.897245819868
Mean loss per sample: 100.79099384194515 Std loss per sample: 51.12926125844591 ratio: 0.507280058559835
Epoch ended with duration 0:00:01.032156
b'BLEU = 2.59, 8.3/3.0/1.9/1.4 (BP=0.909, ratio=0.913, hyp_len=2841, ref_len=3113)\n'
Validation perplexity: 855109.6649050111
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.59
Epoch 447 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.47039850760666013 Loss (std): 0.8638680588011802 Loss ratio: 1.8364600329972416 Tokens per Sec: 3140.8328855615973
Epoch Step: 10 / 67 Loss (mean): 0.6657111249551235 Loss (std): 1.1023088682528843 Loss ratio: 1.6558366338360238 Tokens per Sec: 2193.669864324335
Epoch Step: 15 / 67 Loss (mean): 0.49227034977957373 Loss (std): 0.8291566161092144 Loss ratio: 1.6843521379674602 Tokens per Sec: 2718.507356551479
Epoch Step: 20 / 67 Loss (mean): 2.030168886987667 Loss (std): 7.141620538861639 Loss ratio: 3.5177470133818596 Tokens per Sec: 3170.8366743319402
Epoch Step: 25 / 67 Loss (mean): 0.4442068168609694 Loss (std): 0.5823299279831913 Loss ratio: 1.3109432495842415 Tokens per Sec: 2658.4548730951597
Epoch Step: 30 / 67 Loss (mean): 0.25873561541811796 Loss (std): 0.41609069329232784 Loss ratio: 1.60816937637257 Tokens per Sec: 2676.453498981792
Epoch Step: 35 / 67 Loss (mean): 1.5155205790360924 Loss (std): 8.061087244327869 Loss ratio: 5.319021962377386 Tokens per Sec: 2868.019683807998
Epoch Step: 40 / 67 Loss (mean): 0.8762873054074589 Loss (std): 1.2922472491997394 Loss ratio: 1.4746844342322933 Tokens per Sec: 2900.4245902772977
Epoch Step: 45 / 67 Loss (mean): 0.4482046055563842 Loss (std): 0.5290419400728515 Loss ratio: 1.1803581076908367 Tokens per Sec: 2890.518811581443
Epoch Step: 50 / 67 Loss (mean): 0.4858894275093917 Loss (std): 0.898857722561532 Loss ratio: 1.8499223726043268 Tokens per Sec: 3049.428251911049
Epoch Step: 55 / 67 Loss (mean): 0.41051155195600586 Loss (std): 0.8867270954044602 Loss ratio: 2.1600539404540067 Tokens per Sec: 2732.55331006943
Epoch Step: 60 / 67 Loss (mean): 0.28695940135185083 Loss (std): 0.5640043143551782 Loss ratio: 1.9654498570117696 Tokens per Sec: 2181.3277308078573
Epoch Step: 65 / 67 Loss (mean): 0.6026724277762696 Loss (std): 0.960169647433084 Loss ratio: 1.5931866187671824 Tokens per Sec: 3139.2711780461423
Mean loss per sample: 0.8019943226058097 Std loss per sample: 4.053927646792298 ratio: 5.0548084101398985
Epoch ended with duration 0:00:11.423483
Train perplexity: 1.1146156120574686
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to deprecated statement[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.6542609333992 Loss (std): 44.31983455588634 Loss ratio: 0.4633336154961746 Tokens per Sec: 4453.792997821948
Mean loss per sample: 99.49875201333742 Std loss per sample: 51.70554981656758 ratio: 0.5196602848811275
Epoch ended with duration 0:00:01.015235
b'BLEU = 2.21, 8.0/2.5/1.5/1.1 (BP=0.920, ratio=0.923, hyp_len=2873, ref_len=3113)\n'
Validation perplexity: 717740.3037973223
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.21
Epoch 448 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.28774989488738356 Loss (std): 0.45703672501706055 Loss ratio: 1.588312396068574 Tokens per Sec: 2443.3448322832023
Epoch Step: 10 / 67 Loss (mean): 0.35284262480490725 Loss (std): 0.6253331343731163 Loss ratio: 1.7722720850942364 Tokens per Sec: 2889.127551504285
Epoch Step: 15 / 67 Loss (mean): 1.18575271787995 Loss (std): 1.7831775978819513 Loss ratio: 1.5038359777662231 Tokens per Sec: 2621.0547162058797
Epoch Step: 20 / 67 Loss (mean): 0.27860528996097855 Loss (std): 0.5109376894262281 Loss ratio: 1.8339123765302159 Tokens per Sec: 2975.131898316268
Epoch Step: 25 / 67 Loss (mean): 0.3585420150520804 Loss (std): 0.5639508981591218 Loss ratio: 1.5729004537367943 Tokens per Sec: 3213.51971334001
Epoch Step: 30 / 67 Loss (mean): 0.5301825525530148 Loss (std): 0.9221697594499514 Loss ratio: 1.7393438448877292 Tokens per Sec: 2485.118772829597
Epoch Step: 35 / 67 Loss (mean): 0.6790879873224185 Loss (std): 1.085459042172832 Loss ratio: 1.598407073069717 Tokens per Sec: 2926.4369165731578
Epoch Step: 40 / 67 Loss (mean): 0.3455333120218711 Loss (std): 0.5323232763174647 Loss ratio: 1.5405845335218227 Tokens per Sec: 2867.52684077238
Epoch Step: 45 / 67 Loss (mean): 0.3075437526058522 Loss (std): 0.5251903228776815 Loss ratio: 1.707693030431234 Tokens per Sec: 2615.0130224429563
Epoch Step: 50 / 67 Loss (mean): 0.5756045596208423 Loss (std): 1.126141100853905 Loss ratio: 1.9564492359054761 Tokens per Sec: 2667.8585416981164
Epoch Step: 55 / 67 Loss (mean): 2.153728924211464 Loss (std): 9.141601956117341 Loss ratio: 4.244546216262717 Tokens per Sec: 2427.6797376907566
Epoch Step: 60 / 67 Loss (mean): 0.5662056043656776 Loss (std): 0.8880233727080902 Loss ratio: 1.568376162053264 Tokens per Sec: 3091.484542844307
Epoch Step: 65 / 67 Loss (mean): 0.6278199353837408 Loss (std): 0.8715421794751748 Loss ratio: 1.3882040539895635 Tokens per Sec: 2858.054816862732
Mean loss per sample: 0.5635681639586422 Std loss per sample: 2.2856215580286103 ratio: 4.055625750705716
Epoch ended with duration 0:00:11.397504
Train perplexity: 1.0792330087065514
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level ( ) return[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.54141411185265 Loss (std): 45.01549722286658 Loss ratio: 0.4711621409556053 Tokens per Sec: 4422.810302337365
Mean loss per sample: 100.0151048744189 Std loss per sample: 52.63638480417125 ratio: 0.5262843534510374
Epoch ended with duration 0:00:01.020308
b'BLEU = 2.51, 8.1/2.8/1.8/1.4 (BP=0.905, ratio=0.909, hyp_len=2830, ref_len=3113)\n'
Validation perplexity: 769763.150806566
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.51
Epoch 449 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.4242725527183211 Loss (std): 0.5716425301973773 Loss ratio: 1.3473474221578898 Tokens per Sec: 3396.5542172410924
Epoch Step: 10 / 67 Loss (mean): 0.5110298709714698 Loss (std): 1.1784960198761187 Loss ratio: 2.306119635699168 Tokens per Sec: 3165.2364293584674
Epoch Step: 15 / 67 Loss (mean): 0.7272876609677041 Loss (std): 1.0863649736537102 Loss ratio: 1.4937211669564558 Tokens per Sec: 2471.4739996757644
Epoch Step: 20 / 67 Loss (mean): 1.0368596714324667 Loss (std): 1.5772237043526511 Loss ratio: 1.5211544510875306 Tokens per Sec: 2760.2453657819997
Epoch Step: 25 / 67 Loss (mean): 0.5639627858327003 Loss (std): 0.8658612249184693 Loss ratio: 1.5353162419041728 Tokens per Sec: 2808.655661268735
Epoch Step: 30 / 67 Loss (mean): 0.5154857631860068 Loss (std): 0.6739941960399429 Loss ratio: 1.3074933279907874 Tokens per Sec: 2797.4029236700453
Epoch Step: 35 / 67 Loss (mean): 0.4287869071413297 Loss (std): 0.6253044792854067 Loss ratio: 1.4583105707546804 Tokens per Sec: 3182.0656475428295
Epoch Step: 40 / 67 Loss (mean): 0.3428786996373674 Loss (std): 0.5191403961495759 Loss ratio: 1.5140642935785307 Tokens per Sec: 3177.7688284338483
Epoch Step: 45 / 67 Loss (mean): 0.5079277726217697 Loss (std): 1.1949252961687995 Loss ratio: 2.352549635159653 Tokens per Sec: 2613.658816041819
Epoch Step: 50 / 67 Loss (mean): 0.3263448617362883 Loss (std): 0.46414912017873866 Loss ratio: 1.422265751969482 Tokens per Sec: 2140.6978840397514
Epoch Step: 55 / 67 Loss (mean): 0.3588990504213143 Loss (std): 0.5204645453776069 Loss ratio: 1.4501697476397044 Tokens per Sec: 3003.8939206964255
Epoch Step: 60 / 67 Loss (mean): 0.38228609953694104 Loss (std): 0.8743399813438251 Loss ratio: 2.287135165005747 Tokens per Sec: 2336.9048396557214
Epoch Step: 65 / 67 Loss (mean): 0.311114256412111 Loss (std): 0.5498543952276105 Loss ratio: 1.7673712595775661 Tokens per Sec: 2384.2634302259917
Mean loss per sample: 0.9270119305576008 Std loss per sample: 4.883665898784088 ratio: 5.268180201139964
Epoch ended with duration 0:00:11.471635
Train perplexity: 1.1336295195568415
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 96.51356279850006 Loss (std): 44.29598263652859 Loss ratio: 0.45896122111883125 Tokens per Sec: 4302.264687325684
Mean loss per sample: 102.24669217916785 Std loss per sample: 51.45321691019985 ratio: 0.5032262248644473
Epoch ended with duration 0:00:01.050760
b'BLEU = 2.78, 8.4/2.8/1.9/1.4 (BP=0.986, ratio=0.986, hyp_len=3070, ref_len=3113)\n'
Validation perplexity: 1041589.2205551049
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.78
Epoch 450 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.459982902451884 Loss (std): 0.6487317297158169 Loss ratio: 1.410338789241578 Tokens per Sec: 2654.9237078447836
Epoch Step: 10 / 67 Loss (mean): 0.4353725981491152 Loss (std): 0.6139563713983937 Loss ratio: 1.4101860659317687 Tokens per Sec: 2839.501735382738
Epoch Step: 15 / 67 Loss (mean): 1.2313890505756717 Loss (std): 1.392591484833106 Loss ratio: 1.1309110505587754 Tokens per Sec: 2709.6760586840105
Epoch Step: 20 / 67 Loss (mean): 0.42402310647958075 Loss (std): 0.8697196507146993 Loss ratio: 2.051113812960524 Tokens per Sec: 2858.9379552516516
Epoch Step: 25 / 67 Loss (mean): 0.4135082571738167 Loss (std): 0.6801780164873275 Loss ratio: 1.6448958507772122 Tokens per Sec: 2880.2372410991484
Epoch Step: 30 / 67 Loss (mean): 0.3648616739883437 Loss (std): 0.7142437839686141 Loss ratio: 1.9575741572446774 Tokens per Sec: 2628.2711593176746
Epoch Step: 35 / 67 Loss (mean): 0.46828798699425533 Loss (std): 0.6046980249648242 Loss ratio: 1.291295189624931 Tokens per Sec: 2586.40909726702
Epoch Step: 40 / 67 Loss (mean): 0.3796170139758033 Loss (std): 0.5155026515449216 Loss ratio: 1.357954550419017 Tokens per Sec: 3169.5603563552922
Epoch Step: 45 / 67 Loss (mean): 0.3740014622781018 Loss (std): 0.6007445116474273 Loss ratio: 1.6062624674999872 Tokens per Sec: 2631.5870419092917
Epoch Step: 50 / 67 Loss (mean): 0.5046536048903363 Loss (std): 1.1021083361506032 Loss ratio: 2.1838907430178702 Tokens per Sec: 2429.6367447102066
Epoch Step: 55 / 67 Loss (mean): 0.25214080906516756 Loss (std): 0.32129699042781085 Loss ratio: 1.274276034962549 Tokens per Sec: 2908.782576866544
Epoch Step: 60 / 67 Loss (mean): 0.3480441122519551 Loss (std): 0.5667472757613221 Loss ratio: 1.6283777136590205 Tokens per Sec: 2684.709077532871
Epoch Step: 65 / 67 Loss (mean): 0.32579529607028235 Loss (std): 0.42971693940888805 Loss ratio: 1.318978341897813 Tokens per Sec: 3209.740140144773
Mean loss per sample: 1.1306041353276732 Std loss per sample: 6.20848577632822 ratio: 5.49129937025117
Epoch ended with duration 0:00:11.465450
Train perplexity: 1.1652905053961011
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone provider for branch[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.88866165280342 Loss (std): 44.330349192763556 Loss ratio: 0.4623106468340984 Tokens per Sec: 4415.717518807845
Mean loss per sample: 100.22719913330235 Std loss per sample: 51.92330391003575 ratio: 0.5180560203121876
Epoch ended with duration 0:00:01.020602
b'BLEU = 2.53, 8.9/2.8/1.7/1.3 (BP=0.930, ratio=0.932, hyp_len=2901, ref_len=3113)\n'
Validation perplexity: 792209.1555343833
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.53
Model saved checkpoint_commit_msg_generator!
Epoch 451 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.4668897838855628 Loss (std): 0.9209682223448149 Loss ratio: 1.9725602361231986 Tokens per Sec: 2715.5720217005737
Epoch Step: 10 / 67 Loss (mean): 0.3419958003942156 Loss (std): 0.5518118400841442 Loss ratio: 1.613504725637202 Tokens per Sec: 2820.6458677162987
Epoch Step: 15 / 67 Loss (mean): 0.5500324243330397 Loss (std): 1.1848941010910778 Loss ratio: 2.1542259122775556 Tokens per Sec: 3511.8435724507117
Epoch Step: 20 / 67 Loss (mean): 0.4565503528301633 Loss (std): 0.6269412161914558 Loss ratio: 1.3732137371158224 Tokens per Sec: 2439.274659710134
Epoch Step: 25 / 67 Loss (mean): 0.19199325665942438 Loss (std): 0.2667471115691391 Loss ratio: 1.3893566691371881 Tokens per Sec: 2548.545599282636
Epoch Step: 30 / 67 Loss (mean): 0.2577816354096285 Loss (std): 0.37560364384889283 Loss ratio: 1.4570612962868321 Tokens per Sec: 2765.348503753083
Epoch Step: 35 / 67 Loss (mean): 0.2634894120710669 Loss (std): 0.47699823670009217 Loss ratio: 1.8103127292698913 Tokens per Sec: 2422.7652937304274
Epoch Step: 40 / 67 Loss (mean): 0.5022947683391976 Loss (std): 0.6524678448549089 Loss ratio: 1.2989740008884585 Tokens per Sec: 3078.6865299639626
Epoch Step: 45 / 67 Loss (mean): 0.6534450924273187 Loss (std): 1.2943740975721598 Loss ratio: 1.9808460000273553 Tokens per Sec: 2545.2648295672993
Epoch Step: 50 / 67 Loss (mean): 1.0423488849555724 Loss (std): 1.910571385281034 Loss ratio: 1.8329480779964258 Tokens per Sec: 2734.7584693374056
Epoch Step: 55 / 67 Loss (mean): 3.040938313504739 Loss (std): 8.827695413576302 Loss ratio: 2.9029511629264904 Tokens per Sec: 2887.514950735672
Epoch Step: 60 / 67 Loss (mean): 0.6108263800051645 Loss (std): 1.1355035188013194 Loss ratio: 1.8589628018222113 Tokens per Sec: 3135.736954429123
Epoch Step: 65 / 67 Loss (mean): 0.3784229483717354 Loss (std): 0.7990644065552129 Loss ratio: 2.1115643488149924 Tokens per Sec: 2546.289180049704
Mean loss per sample: 0.5958909561487513 Std loss per sample: 2.3618307540961623 ratio: 3.96352844379565
Epoch ended with duration 0:00:11.372083
Train perplexity: 1.0839631156380165
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 94.95983904600143 Loss (std): 43.321481257986186 Loss ratio: 0.4562084528913317 Tokens per Sec: 4421.056952500911
Mean loss per sample: 99.79961584642774 Std loss per sample: 51.14609188142067 ratio: 0.5124878632812033
Epoch ended with duration 0:00:01.019484
b'BLEU = 2.18, 7.9/2.4/1.4/1.0 (BP=0.961, ratio=0.962, hyp_len=2995, ref_len=3113)\n'
Validation perplexity: 747609.1002373369
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.18
Epoch 452 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.38756256688793655 Loss (std): 0.6401498951404935 Loss ratio: 1.6517330357283766 Tokens per Sec: 2844.5744770861593
Epoch Step: 10 / 67 Loss (mean): 0.26093492927611805 Loss (std): 0.3712177899424637 Loss ratio: 1.4226450669992352 Tokens per Sec: 3307.485851115937
Epoch Step: 15 / 67 Loss (mean): 0.6439409784215968 Loss (std): 0.9534907639478296 Loss ratio: 1.4807114252691127 Tokens per Sec: 2981.1865671709793
Epoch Step: 20 / 67 Loss (mean): 0.5246041073041852 Loss (std): 0.9138559877420903 Loss ratio: 1.7419916752809605 Tokens per Sec: 2252.629868638324
Epoch Step: 25 / 67 Loss (mean): 0.3246252627650392 Loss (std): 0.4945951346833566 Loss ratio: 1.523587937890527 Tokens per Sec: 3155.623424292758
Epoch Step: 30 / 67 Loss (mean): 0.4068956120754592 Loss (std): 0.8050687646047501 Loss ratio: 1.9785633973743841 Tokens per Sec: 3051.0947137739677
Epoch Step: 35 / 67 Loss (mean): 0.29745480807105196 Loss (std): 0.40539900176987026 Loss ratio: 1.3628927513353022 Tokens per Sec: 2619.143632056843
Epoch Step: 40 / 67 Loss (mean): 3.042516337460256 Loss (std): 10.830186716666589 Loss ratio: 3.5596149750528863 Tokens per Sec: 2466.2117633853977
Epoch Step: 45 / 67 Loss (mean): 0.2667347804599558 Loss (std): 0.4777893440857722 Loss ratio: 1.791252506560544 Tokens per Sec: 2534.205168725588
Epoch Step: 50 / 67 Loss (mean): 0.28416427171760006 Loss (std): 0.5343556604156368 Loss ratio: 1.8804463248872987 Tokens per Sec: 2559.0004430187078
Epoch Step: 55 / 67 Loss (mean): 0.418892952882743 Loss (std): 0.5770347540958689 Loss ratio: 1.3775231837270683 Tokens per Sec: 3106.4232565907737
Epoch Step: 60 / 67 Loss (mean): 0.6474143631494371 Loss (std): 0.9322335306880069 Loss ratio: 1.4399333467874071 Tokens per Sec: 2628.0422690738415
Epoch Step: 65 / 67 Loss (mean): 0.39479402843426215 Loss (std): 0.4830706799135608 Loss ratio: 1.2236017901015384 Tokens per Sec: 2993.016319975664
Mean loss per sample: 0.8809766247262856 Std loss per sample: 4.9671981419404885 ratio: 5.6382859686927205
Epoch ended with duration 0:00:11.435964
Train perplexity: 1.126590579837026
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.37022876739502 Loss (std): 43.82300038998182 Loss ratio: 0.4595039873173078 Tokens per Sec: 4169.493329420905
Mean loss per sample: 104.1951979502547 Std loss per sample: 50.95996597778777 ratio: 0.48908171374766507
Epoch ended with duration 0:00:01.066159
b'BLEU = 2.57, 8.3/2.9/1.9/1.4 (BP=0.915, ratio=0.918, hyp_len=2859, ref_len=3113)\n'
Validation perplexity: 1356360.5906903225
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.57
Epoch 453 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.42360700447898125 Loss (std): 0.6412809023396979 Loss ratio: 1.5138581174512125 Tokens per Sec: 2900.870977201533
Epoch Step: 10 / 67 Loss (mean): 0.38313158589880913 Loss (std): 0.5614970865899355 Loss ratio: 1.465546322088504 Tokens per Sec: 2859.4038906716314
Epoch Step: 15 / 67 Loss (mean): 0.261473154725536 Loss (std): 0.3201956173639624 Loss ratio: 1.2245831420057878 Tokens per Sec: 2646.1516199209022
Epoch Step: 20 / 67 Loss (mean): 0.5171404663706198 Loss (std): 1.0371911779917533 Loss ratio: 2.0056275720810213 Tokens per Sec: 3176.5546482699083
Epoch Step: 25 / 67 Loss (mean): 0.4096554784991895 Loss (std): 0.8803892505845932 Loss ratio: 2.1490967332109903 Tokens per Sec: 2704.306862460799
Epoch Step: 30 / 67 Loss (mean): 0.3572845640956075 Loss (std): 0.471538136437173 Loss ratio: 1.3197831191805753 Tokens per Sec: 2576.75179601897
Epoch Step: 35 / 67 Loss (mean): 0.7599675064266194 Loss (std): 2.560440312435535 Loss ratio: 3.3691444578660614 Tokens per Sec: 2968.7802035657774
Epoch Step: 40 / 67 Loss (mean): 0.26009133119441685 Loss (std): 0.49492965011017803 Loss ratio: 1.9029071358792071 Tokens per Sec: 3119.425150855764
Epoch Step: 45 / 67 Loss (mean): 0.263604936968477 Loss (std): 0.2649772550323259 Loss ratio: 1.0052059649550988 Tokens per Sec: 2728.490062647809
Epoch Step: 50 / 67 Loss (mean): 0.43297467198135564 Loss (std): 0.7368165934933951 Loss ratio: 1.7017544932169224 Tokens per Sec: 2696.2181029131816
Epoch Step: 55 / 67 Loss (mean): 0.5528928771673236 Loss (std): 0.9244914886872085 Loss ratio: 1.672098749804344 Tokens per Sec: 2611.8137379694326
Epoch Step: 60 / 67 Loss (mean): 3.5032307504325217 Loss (std): 12.34463142918238 Loss ratio: 3.523784845648054 Tokens per Sec: 2603.1277513835767
Epoch Step: 65 / 67 Loss (mean): 0.2632667865800613 Loss (std): 0.3925810823957479 Loss ratio: 1.491191074633948 Tokens per Sec: 2428.3803299715464
Mean loss per sample: 0.8368749051529735 Std loss per sample: 4.835114940000912 ratio: 5.777583854204703
Epoch ended with duration 0:00:11.416513
Train perplexity: 1.1198882861100488
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api and gb2312han[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 94.17095467448235 Loss (std): 43.034295333218836 Loss ratio: 0.4569805571364767 Tokens per Sec: 4416.877591822029
Mean loss per sample: 98.84395595762085 Std loss per sample: 51.565034948599774 ratio: 0.5216812140815993
Epoch ended with duration 0:00:01.019880
b'BLEU = 2.57, 8.5/2.9/1.8/1.4 (BP=0.911, ratio=0.915, hyp_len=2849, ref_len=3113)\n'
Validation perplexity: 656794.5207037057
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.57
Epoch 454 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2896696998950574 Loss (std): 0.4367684833441515 Loss ratio: 1.507815568913095 Tokens per Sec: 2244.784750991119
Epoch Step: 10 / 67 Loss (mean): 1.6706776633945992 Loss (std): 2.2682104181182137 Loss ratio: 1.3576589115996833 Tokens per Sec: 2886.81628550657
Epoch Step: 15 / 67 Loss (mean): 0.8520145063957898 Loss (std): 1.4373491047683766 Loss ratio: 1.6870007423332285 Tokens per Sec: 2932.8774641460714
Epoch Step: 20 / 67 Loss (mean): 0.4047305197473179 Loss (std): 0.7886976330318527 Loss ratio: 1.9486981943547372 Tokens per Sec: 2906.2320696008055
Epoch Step: 25 / 67 Loss (mean): 0.2932377709166758 Loss (std): 0.4972117178196721 Loss ratio: 1.6955923388223955 Tokens per Sec: 2646.668368174287
Epoch Step: 30 / 67 Loss (mean): 0.31714198984991526 Loss (std): 0.43068382658962534 Loss ratio: 1.3580157795990457 Tokens per Sec: 2800.1664263807775
Epoch Step: 35 / 67 Loss (mean): 0.3784855866433645 Loss (std): 0.663139360443 Loss ratio: 1.7520861661446996 Tokens per Sec: 3055.852959170545
Epoch Step: 40 / 67 Loss (mean): 0.45375656466785586 Loss (std): 0.9081095283959385 Loss ratio: 2.0013143590785587 Tokens per Sec: 2488.511451314495
Epoch Step: 45 / 67 Loss (mean): 0.3301693381727091 Loss (std): 0.5330892151983619 Loss ratio: 1.6145933421579777 Tokens per Sec: 2865.1788333448008
Epoch Step: 50 / 67 Loss (mean): 0.542731098305012 Loss (std): 0.8863225736222772 Loss ratio: 1.6330786579031973 Tokens per Sec: 2349.855840087677
Epoch Step: 55 / 67 Loss (mean): 3.21453952329648 Loss (std): 10.46065059364235 Loss ratio: 3.25416767093131 Tokens per Sec: 2728.3051910452027
Epoch Step: 60 / 67 Loss (mean): 0.4076572568556003 Loss (std): 0.5950159513098021 Loss ratio: 1.459598575281999 Tokens per Sec: 2927.6226162612147
Epoch Step: 65 / 67 Loss (mean): 1.1921919703454478 Loss (std): 2.862924251302672 Loss ratio: 2.4013953478256655 Tokens per Sec: 2969.268354146598
Mean loss per sample: 0.8416552178642149 Std loss per sample: 4.338609891228639 ratio: 5.154854148279743
Epoch ended with duration 0:00:11.463140
Train perplexity: 1.1206128360801957
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.25394389033318 Loss (std): 44.095082358639075 Loss ratio: 0.46292132963445787 Tokens per Sec: 4418.896986943525
Mean loss per sample: 99.54730397972781 Std loss per sample: 51.454402413438686 ratio: 0.5168839371472788
Epoch ended with duration 0:00:01.019988
b'BLEU = 2.47, 8.7/2.6/1.7/1.3 (BP=0.931, ratio=0.933, hyp_len=2904, ref_len=3113)\n'
Validation perplexity: 722478.3620651425
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.47
Epoch 455 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6153182144116727 Loss (std): 1.545801158963931 Loss ratio: 2.5121979534474304 Tokens per Sec: 2740.91952533762
Epoch Step: 10 / 67 Loss (mean): 0.4733340365155527 Loss (std): 0.8121155735962693 Loss ratio: 1.7157345784272264 Tokens per Sec: 2473.3240647353336
Epoch Step: 15 / 67 Loss (mean): 0.39658114758640295 Loss (std): 0.7599103404018293 Loss ratio: 1.916153465757643 Tokens per Sec: 2467.6365934052264
Epoch Step: 20 / 67 Loss (mean): 0.600759010463662 Loss (std): 0.865315892580934 Loss ratio: 1.4403710597916604 Tokens per Sec: 2958.912697706297
Epoch Step: 25 / 67 Loss (mean): 0.3280345003340699 Loss (std): 0.6132286744620026 Loss ratio: 1.869402986080706 Tokens per Sec: 2959.4958215134557
Epoch Step: 30 / 67 Loss (mean): 0.48162571381180896 Loss (std): 0.6303983096636541 Loss ratio: 1.308896704609872 Tokens per Sec: 3046.538069828021
Epoch Step: 35 / 67 Loss (mean): 0.2119846657733433 Loss (std): 0.25497551445516037 Loss ratio: 1.2028016909854387 Tokens per Sec: 2883.8364528711154
Epoch Step: 40 / 67 Loss (mean): 2.4280141166527756 Loss (std): 10.497160664086637 Loss ratio: 4.323352402315464 Tokens per Sec: 2767.6274647602622
Epoch Step: 45 / 67 Loss (mean): 0.4660115013975883 Loss (std): 0.8121427357563449 Loss ratio: 1.7427525572237903 Tokens per Sec: 2449.298028266855
Epoch Step: 50 / 67 Loss (mean): 0.30377889915507694 Loss (std): 0.4486798604280385 Loss ratio: 1.4769948198376697 Tokens per Sec: 3023.147072189835
Epoch Step: 55 / 67 Loss (mean): 0.33182408213906456 Loss (std): 0.502414428120979 Loss ratio: 1.5140987504048051 Tokens per Sec: 2717.45479567404
Epoch Step: 60 / 67 Loss (mean): 0.4881343210290652 Loss (std): 0.9894147036259408 Loss ratio: 2.0269312379840376 Tokens per Sec: 2949.6968391615833
Epoch Step: 65 / 67 Loss (mean): 0.4449674687930383 Loss (std): 1.0964591544937456 Loss ratio: 2.464133293761587 Tokens per Sec: 2641.2856832843736
Mean loss per sample: 0.5560188268040845 Std loss per sample: 2.3732242741693232 ratio: 4.268244454617251
Epoch ended with duration 0:00:11.411027
Train perplexity: 1.0781312179072575
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.96271711587906 Loss (std): 43.86341440630196 Loss ratio: 0.4570880830034755 Tokens per Sec: 4402.915425101606
Mean loss per sample: 101.30665873888819 Std loss per sample: 51.93961943054238 ratio: 0.5126969942263482
Epoch ended with duration 0:00:01.038008
b'BLEU = 2.41, 8.3/2.6/1.7/1.3 (BP=0.922, ratio=0.925, hyp_len=2878, ref_len=3113)\n'
Validation perplexity: 917003.7427140386
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.41
Model saved checkpoint_commit_msg_generator!
Epoch 456 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.44180309119838057 Loss (std): 1.0380662636610352 Loss ratio: 2.34961294826006 Tokens per Sec: 3018.3149403984416
Epoch Step: 10 / 67 Loss (mean): 0.49862643100641435 Loss (std): 0.8095707462972607 Loss ratio: 1.6236017506397415 Tokens per Sec: 3389.9619584701722
Epoch Step: 15 / 67 Loss (mean): 0.3036826947500231 Loss (std): 0.546604297713552 Loss ratio: 1.7999191497015998 Tokens per Sec: 3091.242492070472
Epoch Step: 20 / 67 Loss (mean): 0.3417194535686576 Loss (std): 0.45581536929436756 Loss ratio: 1.3338876804764233 Tokens per Sec: 2720.51601907768
Epoch Step: 25 / 67 Loss (mean): 0.3398542243230622 Loss (std): 0.6834528894379598 Loss ratio: 2.0110177850497335 Tokens per Sec: 3114.6917712717377
Epoch Step: 30 / 67 Loss (mean): 0.5037347130182752 Loss (std): 0.9307897732552791 Loss ratio: 1.8477777075917152 Tokens per Sec: 2407.450954079459
Epoch Step: 35 / 67 Loss (mean): 1.4322352795024926 Loss (std): 1.679126412992811 Loss ratio: 1.1723816868804402 Tokens per Sec: 3667.984117549157
Epoch Step: 40 / 67 Loss (mean): 0.29235824860370485 Loss (std): 0.38746391225380217 Loss ratio: 1.325305217500513 Tokens per Sec: 2719.6550173976675
Epoch Step: 45 / 67 Loss (mean): 0.38824505816774035 Loss (std): 0.7173617295906747 Loss ratio: 1.8477034401317227 Tokens per Sec: 2394.565672314799
Epoch Step: 50 / 67 Loss (mean): 0.4343884714617161 Loss (std): 0.7094452907144074 Loss ratio: 1.6332046942386058 Tokens per Sec: 2565.9329079592985
Epoch Step: 55 / 67 Loss (mean): 0.6030046583405237 Loss (std): 1.0599892273385656 Loss ratio: 1.7578458353135595 Tokens per Sec: 2432.4184724008796
Epoch Step: 60 / 67 Loss (mean): 0.3984722765671904 Loss (std): 0.8016986790956737 Loss ratio: 2.0119308826256352 Tokens per Sec: 3275.1768851926286
Epoch Step: 65 / 67 Loss (mean): 0.22804396756873757 Loss (std): 0.484774404317291 Loss ratio: 2.1257935892172597 Tokens per Sec: 2144.326232477396
Mean loss per sample: 0.4869832979642553 Std loss per sample: 1.3303608980486226 ratio: 2.7318409144830085
Epoch ended with duration 0:00:11.398984
Train perplexity: 1.068107831439756
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.42174097895622 Loss (std): 44.4378170919079 Loss ratio: 0.46569908111095953 Tokens per Sec: 4290.950232533001
Mean loss per sample: 101.56888778990165 Std loss per sample: 51.89643022376516 ratio: 0.5109480998858086
Epoch ended with duration 0:00:01.037392
b'BLEU = 2.57, 9.3/2.9/1.7/1.3 (BP=0.919, ratio=0.922, hyp_len=2870, ref_len=3113)\n'
Validation perplexity: 950177.003870462
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.57
Epoch 457 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.4355219940080133 Loss (std): 0.9663188002310182 Loss ratio: 2.2187600477720966 Tokens per Sec: 2862.0853393491193
Epoch Step: 10 / 67 Loss (mean): 0.37374807280684763 Loss (std): 0.6346730655390747 Loss ratio: 1.6981306706752508 Tokens per Sec: 2568.720084774798
Epoch Step: 15 / 67 Loss (mean): 0.2527555095293792 Loss (std): 0.30958076415306457 Loss ratio: 1.2248230107010991 Tokens per Sec: 2444.298597426124
Epoch Step: 20 / 67 Loss (mean): 0.29373175260116113 Loss (std): 0.2862639146748754 Loss ratio: 0.9745759937080216 Tokens per Sec: 3210.1861130765933
Epoch Step: 25 / 67 Loss (mean): 0.2631494218039734 Loss (std): 0.37667726132066903 Loss ratio: 1.4314196806454145 Tokens per Sec: 3300.637458681895
Epoch Step: 30 / 67 Loss (mean): 0.29681523823091993 Loss (std): 0.483313190453811 Loss ratio: 1.628330113152065 Tokens per Sec: 2908.8351467703287
Epoch Step: 35 / 67 Loss (mean): 0.3420137011926272 Loss (std): 0.667035658936521 Loss ratio: 1.950318529960987 Tokens per Sec: 2737.0555111536046
Epoch Step: 40 / 67 Loss (mean): 0.30054635182750644 Loss (std): 0.33207094594244924 Loss ratio: 1.104890955831784 Tokens per Sec: 3013.863891716351
Epoch Step: 45 / 67 Loss (mean): 0.4409991658758372 Loss (std): 0.9666903717355748 Loss ratio: 2.1920458053831 Tokens per Sec: 2217.8037259781154
Epoch Step: 50 / 67 Loss (mean): 0.3697109863751393 Loss (std): 0.618972307010925 Loss ratio: 1.6742058792455372 Tokens per Sec: 2915.3412326526836
Epoch Step: 55 / 67 Loss (mean): 0.3604672150413535 Loss (std): 0.5683308813860599 Loss ratio: 1.5766506846423187 Tokens per Sec: 2839.8982637122635
Epoch Step: 60 / 67 Loss (mean): 0.17104931461411374 Loss (std): 0.30267016389490575 Loss ratio: 1.7694906558247712 Tokens per Sec: 2601.085062370961
Epoch Step: 65 / 67 Loss (mean): 3.5415037865313934 Loss (std): 12.626462339253239 Loss ratio: 3.565282744373345 Tokens per Sec: 3057.739770988483
Mean loss per sample: 0.4961711388140857 Std loss per sample: 2.050274363416091 ratio: 4.132191905229547
Epoch ended with duration 0:00:11.417060
Train perplexity: 1.0694364349939187
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length ([0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.55533492565155 Loss (std): 43.42229254414938 Loss ratio: 0.4544203897975433 Tokens per Sec: 4402.679013432389
Mean loss per sample: 99.52145139549356 Std loss per sample: 50.68016224218617 ratio: 0.509238576523423
Epoch ended with duration 0:00:01.024610
b'BLEU = 2.51, 8.5/2.7/1.7/1.3 (BP=0.948, ratio=0.949, hyp_len=2955, ref_len=3113)\n'
Validation perplexity: 719951.5964605295
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.51
Epoch 458 / 1000
Epoch Step: 5 / 67 Loss (mean): 3.602131551480852 Loss (std): 11.958399635840856 Loss ratio: 3.3198120237792828 Tokens per Sec: 2376.2366838250864
Epoch Step: 10 / 67 Loss (mean): 0.33475873012503143 Loss (std): 0.412618935964415 Loss ratio: 1.2325860353523954 Tokens per Sec: 3000.658819507818
Epoch Step: 15 / 67 Loss (mean): 0.5420514319703216 Loss (std): 0.8202952571228077 Loss ratio: 1.5133162809681877 Tokens per Sec: 3080.778005022849
Epoch Step: 20 / 67 Loss (mean): 2.849038405238389 Loss (std): 11.273584725767657 Loss ratio: 3.956978854703911 Tokens per Sec: 2302.182933698297
Epoch Step: 25 / 67 Loss (mean): 0.4736229910340626 Loss (std): 0.7656515791789482 Loss ratio: 1.6165844852829012 Tokens per Sec: 3423.8375904994
Epoch Step: 30 / 67 Loss (mean): 3.192622014445078 Loss (std): 10.93639849021527 Loss ratio: 3.4255224830040416 Tokens per Sec: 2314.33777714746
Epoch Step: 35 / 67 Loss (mean): 0.729430092505936 Loss (std): 1.0711052980263132 Loss ratio: 1.4684139152342368 Tokens per Sec: 2449.0564420317205
Epoch Step: 40 / 67 Loss (mean): 0.24760363921632234 Loss (std): 0.37005785012452336 Loss ratio: 1.4945573954234865 Tokens per Sec: 2835.0274612455864
Epoch Step: 45 / 67 Loss (mean): 3.3017224935210834 Loss (std): 10.987166481424934 Loss ratio: 3.3277074324038054 Tokens per Sec: 2815.20697620284
Epoch Step: 50 / 67 Loss (mean): 0.3518098739441484 Loss (std): 0.5339919787827462 Loss ratio: 1.5178425005419833 Tokens per Sec: 2523.7703900407673
Epoch Step: 55 / 67 Loss (mean): 0.4797090780630242 Loss (std): 0.8196855272445414 Loss ratio: 1.708713811617405 Tokens per Sec: 2982.9978441136445
Epoch Step: 60 / 67 Loss (mean): 0.48269797936336545 Loss (std): 0.7820621746039943 Loss ratio: 1.6201894518710496 Tokens per Sec: 2840.9458909888913
Epoch Step: 65 / 67 Loss (mean): 0.6075959819863783 Loss (std): 1.067330050061838 Loss ratio: 1.7566443520124633 Tokens per Sec: 3136.295101782754
Mean loss per sample: 0.9759052325966171 Std loss per sample: 5.829667551329184 ratio: 5.973600055220558
Epoch ended with duration 0:00:11.540839
Train perplexity: 1.1411536214884141
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow call log[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 94.96452742815018 Loss (std): 44.12044475779739 Loss ratio: 0.4645992135450656 Tokens per Sec: 4420.640809443507
Mean loss per sample: 99.45761819037257 Std loss per sample: 51.361743061873064 ratio: 0.5164183900278123
Epoch ended with duration 0:00:01.021563
b'BLEU = 2.51, 8.7/2.8/1.8/1.3 (BP=0.909, ratio=0.913, hyp_len=2843, ref_len=3113)\n'
Validation perplexity: 713750.4846273715
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.51
Epoch 459 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.1011253689139266 Loss (std): 4.1339574182864505 Loss ratio: 3.7543022211575217 Tokens per Sec: 2458.9079254324515
Epoch Step: 10 / 67 Loss (mean): 0.36086509699998714 Loss (std): 0.47274541815861315 Loss ratio: 1.3100336443971194 Tokens per Sec: 2637.2463364843816
Epoch Step: 15 / 67 Loss (mean): 0.25537322265518014 Loss (std): 0.42957892842578765 Loss ratio: 1.682161206877317 Tokens per Sec: 2763.5487768626494
Epoch Step: 20 / 67 Loss (mean): 0.3196397287028958 Loss (std): 0.49206951061612486 Loss ratio: 1.5394504075352349 Tokens per Sec: 3191.0559842794078
Epoch Step: 25 / 67 Loss (mean): 0.32940407826117735 Loss (std): 0.6910090260784881 Loss ratio: 2.0977549207226334 Tokens per Sec: 2643.8686433246794
Epoch Step: 30 / 67 Loss (mean): 0.6940391613461543 Loss (std): 1.3519948627919613 Loss ratio: 1.9480094756751767 Tokens per Sec: 2922.049375701744
Epoch Step: 35 / 67 Loss (mean): 0.34221517396963463 Loss (std): 0.49056212197844534 Loss ratio: 1.4334902695517933 Tokens per Sec: 2510.4027509430025
Epoch Step: 40 / 67 Loss (mean): 0.3676206185391493 Loss (std): 0.7208182150653535 Loss ratio: 1.9607665585508798 Tokens per Sec: 2832.110605605214
Epoch Step: 45 / 67 Loss (mean): 0.47417766372382175 Loss (std): 0.922377623174187 Loss ratio: 1.9452152510317593 Tokens per Sec: 2729.368485327474
Epoch Step: 50 / 67 Loss (mean): 0.14119207809147025 Loss (std): 0.2320921652833997 Loss ratio: 1.6438044430016854 Tokens per Sec: 2322.0263166053264
Epoch Step: 55 / 67 Loss (mean): 1.0353460587211885 Loss (std): 2.245117576861497 Loss ratio: 2.1684706847047472 Tokens per Sec: 3104.609425004798
Epoch Step: 60 / 67 Loss (mean): 0.4749401765384391 Loss (std): 0.8334611660313676 Loss ratio: 1.7548761027251432 Tokens per Sec: 2804.6959441048593
Epoch Step: 65 / 67 Loss (mean): 0.4606761696122703 Loss (std): 0.9375090717614001 Loss ratio: 2.035071778404465 Tokens per Sec: 2908.181441856603
Mean loss per sample: 0.6013795267908241 Std loss per sample: 2.7574213048038927 ratio: 4.585159923082978
Epoch ended with duration 0:00:11.457036
Train perplexity: 1.0847683678142261
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.42470863461494 Loss (std): 43.71453087673718 Loss ratio: 0.45810494474886876 Tokens per Sec: 4426.184082327237
Mean loss per sample: 101.75001510959424 Std loss per sample: 51.281267710966986 ratio: 0.5039927282146571
Epoch ended with duration 0:00:01.036649
b'BLEU = 2.79, 8.8/3.0/2.0/1.6 (BP=0.924, ratio=0.927, hyp_len=2886, ref_len=3113)\n'
Validation perplexity: 973788.6450413123
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.79
Epoch 460 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.46936551657199743 Loss (std): 0.7709697792488986 Loss ratio: 1.6425786557130624 Tokens per Sec: 3161.3393593013584
Epoch Step: 10 / 67 Loss (mean): 0.38124704700385337 Loss (std): 0.588690310545886 Loss ratio: 1.5441176926412652 Tokens per Sec: 2707.0954153962202
Epoch Step: 15 / 67 Loss (mean): 2.9992344754136866 Loss (std): 14.491322972542577 Loss ratio: 4.8316739125719 Tokens per Sec: 2582.4792147092367
Epoch Step: 20 / 67 Loss (mean): 0.2727844297187403 Loss (std): 0.4041878201491183 Loss ratio: 1.4817114765892763 Tokens per Sec: 2406.313150474806
Epoch Step: 25 / 67 Loss (mean): 0.40705968195106834 Loss (std): 0.6531849007989834 Loss ratio: 1.6046416035806297 Tokens per Sec: 3015.0906637189146
Epoch Step: 30 / 67 Loss (mean): 0.4281382492627017 Loss (std): 0.7235852070004406 Loss ratio: 1.690073727929072 Tokens per Sec: 2888.7463910905485
Epoch Step: 35 / 67 Loss (mean): 0.6621643159014639 Loss (std): 1.149637051613997 Loss ratio: 1.7361809206660326 Tokens per Sec: 2628.4762133878958
Epoch Step: 40 / 67 Loss (mean): 0.23150548222383804 Loss (std): 0.29302660482580023 Loss ratio: 1.2657436964817905 Tokens per Sec: 2600.8264409866283
Epoch Step: 45 / 67 Loss (mean): 0.6292641108593671 Loss (std): 0.9814477412815195 Loss ratio: 1.559675380089905 Tokens per Sec: 2385.6073826443017
Epoch Step: 50 / 67 Loss (mean): 0.43754420678669703 Loss (std): 0.7077751887962284 Loss ratio: 1.6176084103457666 Tokens per Sec: 3252.5451113506756
Epoch Step: 55 / 67 Loss (mean): 0.26841706031700596 Loss (std): 0.32608424850201 Loss ratio: 1.2148417396304763 Tokens per Sec: 2913.4670290894355
Epoch Step: 60 / 67 Loss (mean): 0.44349807909020456 Loss (std): 0.5919811102277321 Loss ratio: 1.3347997164770744 Tokens per Sec: 2667.0496286473012
Epoch Step: 65 / 67 Loss (mean): 0.3574418996613531 Loss (std): 0.5173315542692662 Loss ratio: 1.4473164862860104 Tokens per Sec: 3213.0739634745523
Mean loss per sample: 0.5513153209405132 Std loss per sample: 2.970644281026411 ratio: 5.3882853753432025
Epoch ended with duration 0:00:11.433505
Train perplexity: 1.0774453317938708
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable print to make github ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 96.30563098192215 Loss (std): 44.233627950131186 Loss ratio: 0.4593046896544858 Tokens per Sec: 4409.148787060569
Mean loss per sample: 100.59433720291393 Std loss per sample: 52.115699472212974 ratio: 0.5180778652290114
Epoch ended with duration 0:00:01.025268
b'BLEU = 2.65, 8.4/2.9/1.9/1.5 (BP=0.918, ratio=0.921, hyp_len=2867, ref_len=3113)\n'
Validation perplexity: 832621.55792162
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.65
Model saved checkpoint_commit_msg_generator!
Epoch 461 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3022240392092499 Loss (std): 0.5977952116706587 Loss ratio: 1.9779869703110056 Tokens per Sec: 2516.099639527069
Epoch Step: 10 / 67 Loss (mean): 0.42612803919473663 Loss (std): 0.8285369059210548 Loss ratio: 1.9443379212660095 Tokens per Sec: 2606.8467087002614
Epoch Step: 15 / 67 Loss (mean): 0.34576332905271556 Loss (std): 0.5327825866953778 Loss ratio: 1.5408880639686027 Tokens per Sec: 2650.6013440268275
Epoch Step: 20 / 67 Loss (mean): 0.797313162824139 Loss (std): 1.240531489532668 Loss ratio: 1.5558898904147258 Tokens per Sec: 3129.0013710325093
Epoch Step: 25 / 67 Loss (mean): 2.367644437952549 Loss (std): 8.794370019864427 Loss ratio: 3.714396418184088 Tokens per Sec: 2641.287318531876
Epoch Step: 30 / 67 Loss (mean): 0.24368253055945388 Loss (std): 0.3363230735258989 Loss ratio: 1.3801689959216936 Tokens per Sec: 2825.410706889333
Epoch Step: 35 / 67 Loss (mean): 0.5674877155543072 Loss (std): 0.9466337857286881 Loss ratio: 1.6681132644502108 Tokens per Sec: 3410.2628560987864
Epoch Step: 40 / 67 Loss (mean): 0.26884059568328667 Loss (std): 0.4358734241442412 Loss ratio: 1.621308058168905 Tokens per Sec: 2645.832162014231
Epoch Step: 45 / 67 Loss (mean): 0.41930906038032845 Loss (std): 0.6923509106023149 Loss ratio: 1.6511708809113919 Tokens per Sec: 2645.722576746046
Epoch Step: 50 / 67 Loss (mean): 0.24422734303880134 Loss (std): 0.3370296351509558 Loss ratio: 1.379983219558715 Tokens per Sec: 2497.7810195226925
Epoch Step: 55 / 67 Loss (mean): 0.31476940253196517 Loss (std): 0.3982366562229582 Loss ratio: 1.2651695273415808 Tokens per Sec: 2611.6260245519334
Epoch Step: 60 / 67 Loss (mean): 0.317271453612193 Loss (std): 0.378008439261425 Loss ratio: 1.1914353937542455 Tokens per Sec: 2732.6122631283697
Epoch Step: 65 / 67 Loss (mean): 0.7774979118839838 Loss (std): 1.208142874639465 Loss ratio: 1.553885684029645 Tokens per Sec: 3023.8646863700205
Mean loss per sample: 0.567672997845697 Std loss per sample: 3.0830141158133695 ratio: 5.430968405249714
Epoch ended with duration 0:00:11.426262
Train perplexity: 1.079832562689811
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 113.36475259065628 Loss (std): 45.823415862039745 Loss ratio: 0.4042121983673485 Tokens per Sec: 4185.037257125836
Mean loss per sample: 104.42328900349189 Std loss per sample: 52.5173577014015 ratio: 0.5029276342717508
Epoch ended with duration 0:00:01.047305
b'BLEU = 2.86, 8.8/3.1/2.0/1.7 (BP=0.923, ratio=0.925, hyp_len=2881, ref_len=3113)\n'
Validation perplexity: 1398940.9690861087
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.86
Epoch 462 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.35539521052487544 Loss (std): 0.7104262372461011 Loss ratio: 1.9989752709297575 Tokens per Sec: 2592.299664611374
Epoch Step: 10 / 67 Loss (mean): 0.35253346521585627 Loss (std): 0.8789199383389431 Loss ratio: 2.4931532040533524 Tokens per Sec: 2945.0578913389836
Epoch Step: 15 / 67 Loss (mean): 0.46125307591137243 Loss (std): 0.8531770800790025 Loss ratio: 1.849694071726768 Tokens per Sec: 2931.7440931219335
Epoch Step: 20 / 67 Loss (mean): 0.4491912748053437 Loss (std): 0.7997276545744954 Loss ratio: 1.7803721920490463 Tokens per Sec: 2625.1043024627506
Epoch Step: 25 / 67 Loss (mean): 0.2668622385535855 Loss (std): 0.391585304630007 Loss ratio: 1.4673687320934967 Tokens per Sec: 2828.8493512920254
Epoch Step: 30 / 67 Loss (mean): 2.0921716025768546 Loss (std): 10.612597974336568 Loss ratio: 5.072527493091581 Tokens per Sec: 2988.8649601900743
Epoch Step: 35 / 67 Loss (mean): 0.3575469478018931 Loss (std): 0.7052337036519735 Loss ratio: 1.9724226650166343 Tokens per Sec: 2943.702854513916
Epoch Step: 40 / 67 Loss (mean): 0.6025276148793637 Loss (std): 1.2585997553958668 Loss ratio: 2.088866508878369 Tokens per Sec: 3237.172858846346
Epoch Step: 45 / 67 Loss (mean): 0.7335654679118306 Loss (std): 0.9416561061372132 Loss ratio: 1.2836701662330614 Tokens per Sec: 2451.4208702006713
Epoch Step: 50 / 67 Loss (mean): 1.3938359408293763 Loss (std): 1.4577553812674566 Loss ratio: 1.045858654211518 Tokens per Sec: 2508.1564162484083
Epoch Step: 55 / 67 Loss (mean): 0.41752531792008085 Loss (std): 0.8771805954547162 Loss ratio: 2.100903963918707 Tokens per Sec: 2581.715739437046
Epoch Step: 60 / 67 Loss (mean): 0.3190082744258689 Loss (std): 0.41674631282096275 Loss ratio: 1.3063808879910612 Tokens per Sec: 2762.351224456809
Epoch Step: 65 / 67 Loss (mean): 0.6571399275417207 Loss (std): 1.1350042106933744 Loss ratio: 1.7271880205777255 Tokens per Sec: 2628.931327768687
Mean loss per sample: 0.6049576071452901 Std loss per sample: 3.0308971505104427 ratio: 5.010098417991337
Epoch ended with duration 0:00:11.455954
Train perplexity: 1.0852936456916735
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow call log[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 96.6570394039154 Loss (std): 44.00813930187771 Loss ratio: 0.4553019580702678 Tokens per Sec: 4390.6074131165
Mean loss per sample: 100.9245649530995 Std loss per sample: 52.38632184578935 ratio: 0.5190641333964007
Epoch ended with duration 0:00:01.025599
b'BLEU = 2.57, 8.4/2.6/1.8/1.4 (BP=0.941, ratio=0.942, hyp_len=2934, ref_len=3113)\n'
Validation perplexity: 870729.1828440321
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.57
Epoch 463 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2541340789794049 Loss (std): 0.44912519768100384 Loss ratio: 1.7672765474220447 Tokens per Sec: 2711.351492617888
Epoch Step: 10 / 67 Loss (mean): 0.3402516993446625 Loss (std): 0.5013280219189634 Loss ratio: 1.473403433060114 Tokens per Sec: 2411.9216612046666
Epoch Step: 15 / 67 Loss (mean): 0.3353885947035451 Loss (std): 0.5096511165741823 Loss ratio: 1.5195839233134043 Tokens per Sec: 2962.2674625616473
Epoch Step: 20 / 67 Loss (mean): 3.563007275253767 Loss (std): 11.433364495350025 Loss ratio: 3.2089085460920677 Tokens per Sec: 2828.3891297903306
Epoch Step: 25 / 67 Loss (mean): 0.3960229034491931 Loss (std): 0.752544984607141 Loss ratio: 1.9002562176399151 Tokens per Sec: 2741.4523508888565
Epoch Step: 30 / 67 Loss (mean): 0.3003795767417614 Loss (std): 0.5345051389790655 Loss ratio: 1.7794323594729065 Tokens per Sec: 2781.3847786429624
Epoch Step: 35 / 67 Loss (mean): 0.3438551328072208 Loss (std): 0.595127199763355 Loss ratio: 1.7307497925209323 Tokens per Sec: 2900.964785558978
Epoch Step: 40 / 67 Loss (mean): 13.04366666644637 Loss (std): 21.787850066011824 Loss ratio: 1.6703777107444076 Tokens per Sec: 2407.3318669002315
Epoch Step: 45 / 67 Loss (mean): 0.9406077260234724 Loss (std): 3.8304732036705618 Loss ratio: 4.072338656906773 Tokens per Sec: 2894.954972626393
Epoch Step: 50 / 67 Loss (mean): 0.17629307520941698 Loss (std): 0.3122724205636463 Loss ratio: 1.7713255055123445 Tokens per Sec: 2539.0433771319217
Epoch Step: 55 / 67 Loss (mean): 0.41707873581617605 Loss (std): 0.9373309983872341 Loss ratio: 2.247371821900685 Tokens per Sec: 2855.7666309922465
Epoch Step: 60 / 67 Loss (mean): 0.4476596937747672 Loss (std): 0.7065951913930031 Loss ratio: 1.5784203966071493 Tokens per Sec: 2983.1554372748215
Epoch Step: 65 / 67 Loss (mean): 0.8535057237459114 Loss (std): 1.1205689247896928 Loss ratio: 1.3129014763623146 Tokens per Sec: 2598.9566038077087
Mean loss per sample: 1.1797080592850895 Std loss per sample: 6.613191040369704 ratio: 5.605786099636667
Epoch ended with duration 0:00:11.537378
Train perplexity: 1.1730581752176878
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during switch ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api help[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.08936211466789 Loss (std): 42.83598190524374 Loss ratio: 0.45048132569853605 Tokens per Sec: 4403.256522738137
Mean loss per sample: 99.47747145263386 Std loss per sample: 51.135611301022934 ratio: 0.514042129884364
Epoch ended with duration 0:00:01.023499
b'BLEU = 2.56, 8.2/2.8/1.8/1.4 (BP=0.931, ratio=0.933, hyp_len=2905, ref_len=3113)\n'
Validation perplexity: 715673.396390217
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.56
Epoch 464 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.38534694026657235 Loss (std): 0.6342584736326196 Loss ratio: 1.6459413773828258 Tokens per Sec: 2546.5961307009243
Epoch Step: 10 / 67 Loss (mean): 0.23549844677927467 Loss (std): 0.4555141958689539 Loss ratio: 1.9342556271544888 Tokens per Sec: 2588.265084480439
Epoch Step: 15 / 67 Loss (mean): 0.39749408459829283 Loss (std): 0.5534798963562777 Loss ratio: 1.3924229763459852 Tokens per Sec: 2437.566195101484
Epoch Step: 20 / 67 Loss (mean): 0.4541880483557179 Loss (std): 0.8152856455277934 Loss ratio: 1.7950398485370658 Tokens per Sec: 2928.0153232049797
Epoch Step: 25 / 67 Loss (mean): 0.3255801306017929 Loss (std): 0.6521628979874078 Loss ratio: 2.003079539227313 Tokens per Sec: 2600.9265260647426
Epoch Step: 30 / 67 Loss (mean): 0.5557765832218138 Loss (std): 1.009262832251426 Loss ratio: 1.8159506224619457 Tokens per Sec: 3232.6204301300795
Epoch Step: 35 / 67 Loss (mean): 0.3416802622959949 Loss (std): 0.5408839098713064 Loss ratio: 1.583011866815833 Tokens per Sec: 2572.7827423879307
Epoch Step: 40 / 67 Loss (mean): 0.5306843948783353 Loss (std): 0.7386431291521386 Loss ratio: 1.3918689456121653 Tokens per Sec: 3307.0216029467565
Epoch Step: 45 / 67 Loss (mean): 0.26281934242797433 Loss (std): 0.39553646858828795 Loss ratio: 1.5049747287785136 Tokens per Sec: 2298.4778549019293
Epoch Step: 50 / 67 Loss (mean): 0.40686171852212283 Loss (std): 0.5875384931519723 Loss ratio: 1.4440741569055366 Tokens per Sec: 3552.991850273488
Epoch Step: 55 / 67 Loss (mean): 0.32005790204857476 Loss (std): 0.4085070885912341 Loss ratio: 1.2763537034284362 Tokens per Sec: 2559.622759356679
Epoch Step: 60 / 67 Loss (mean): 0.6851949028641684 Loss (std): 1.9794683683898253 Loss ratio: 2.8889128627715888 Tokens per Sec: 2996.321211376107
Epoch Step: 65 / 67 Loss (mean): 0.5729128009807027 Loss (std): 1.012974912067445 Loss ratio: 1.7681135948323219 Tokens per Sec: 2816.256802304151
Mean loss per sample: 0.6643343845103261 Std loss per sample: 3.5741648978999523 ratio: 5.380069105612276
Epoch ended with duration 0:00:11.417701
Train perplexity: 1.0940476432005743
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length ([0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.72462397813797 Loss (std): 43.42220526340355 Loss ratio: 0.4536158352872769 Tokens per Sec: 4412.931934793839
Mean loss per sample: 99.93062708600134 Std loss per sample: 51.18464913117392 ratio: 0.5122018206402715
Epoch ended with duration 0:00:01.023913
b'BLEU = 2.62, 8.9/2.8/1.8/1.3 (BP=0.936, ratio=0.938, hyp_len=2919, ref_len=3113)\n'
Validation perplexity: 761000.958741001
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.62
Epoch 465 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6263813303339703 Loss (std): 1.2129747120664796 Loss ratio: 1.9364796703307758 Tokens per Sec: 3489.9243773972003
Epoch Step: 10 / 67 Loss (mean): 0.42692166762572015 Loss (std): 0.7574710317616726 Loss ratio: 1.7742623277339562 Tokens per Sec: 2504.1868326742897
Epoch Step: 15 / 67 Loss (mean): 0.5030620894103777 Loss (std): 0.8485799589222204 Loss ratio: 1.6868294725146407 Tokens per Sec: 2585.2630949381164
Epoch Step: 20 / 67 Loss (mean): 0.2740206110247527 Loss (std): 0.4322140145564857 Loss ratio: 1.5773047616386897 Tokens per Sec: 2484.643954835326
Epoch Step: 25 / 67 Loss (mean): 0.3274318542826222 Loss (std): 0.5209028568482594 Loss ratio: 1.5908741010843834 Tokens per Sec: 3268.3823574084226
Epoch Step: 30 / 67 Loss (mean): 4.263648741398356 Loss (std): 15.27304707826748 Loss ratio: 3.582154160583677 Tokens per Sec: 2487.234277589008
Epoch Step: 35 / 67 Loss (mean): 0.2263905178697314 Loss (std): 0.3417850069315178 Loss ratio: 1.509714320845302 Tokens per Sec: 2237.2628194483464
Epoch Step: 40 / 67 Loss (mean): 0.48993355325364973 Loss (std): 1.0549075477706904 Loss ratio: 2.1531645276487947 Tokens per Sec: 2713.034589398761
Epoch Step: 45 / 67 Loss (mean): 0.44174912676680833 Loss (std): 0.6522336469963366 Loss ratio: 1.4764797652687593 Tokens per Sec: 3438.828624874327
Epoch Step: 50 / 67 Loss (mean): 0.41023758774827 Loss (std): 0.6474654789189558 Loss ratio: 1.5782695156550441 Tokens per Sec: 3008.3639530713663
Epoch Step: 55 / 67 Loss (mean): 0.7009228668975993 Loss (std): 0.8588638570659465 Loss ratio: 1.2253329112622908 Tokens per Sec: 2809.5862870330757
Epoch Step: 60 / 67 Loss (mean): 0.4193161891453201 Loss (std): 0.5006638741338104 Loss ratio: 1.1940008210851552 Tokens per Sec: 2725.6111971460427
Epoch Step: 65 / 67 Loss (mean): 0.3580172156766821 Loss (std): 0.5228292686415579 Loss ratio: 1.4603467256549867 Tokens per Sec: 2708.480246735097
Mean loss per sample: 0.8648175646764893 Std loss per sample: 5.059215571355504 ratio: 5.850037947885638
Epoch ended with duration 0:00:11.447015
Train perplexity: 1.1241301871659979
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during switch ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api help[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 112.43958467245102 Loss (std): 42.25265179570326 Loss ratio: 0.3757809308775901 Tokens per Sec: 4314.496650721418
Mean loss per sample: 103.7989498844645 Std loss per sample: 49.74681822999777 ratio: 0.47926128622080916
Epoch ended with duration 0:00:01.048150
b'BLEU = 2.54, 8.2/2.7/1.8/1.3 (BP=0.952, ratio=0.953, hyp_len=2968, ref_len=3113)\n'
Validation perplexity: 1285446.805045822
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.54
Model saved checkpoint_commit_msg_generator!
Epoch 466 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.4092422467729193 Loss (std): 0.6677209690910496 Loss ratio: 1.631603223656318 Tokens per Sec: 2651.2920053702187
Epoch Step: 10 / 67 Loss (mean): 0.5405082461220445 Loss (std): 1.3226058198283563 Loss ratio: 2.4469669599263013 Tokens per Sec: 2600.6814747246285
Epoch Step: 15 / 67 Loss (mean): 2.320429865983897 Loss (std): 9.454056245515147 Loss ratio: 4.074269334361668 Tokens per Sec: 2713.2387160496505
Epoch Step: 20 / 67 Loss (mean): 5.7007689130768995 Loss (std): 15.682384565473454 Loss ratio: 2.750924446261958 Tokens per Sec: 3060.3230200746734
Epoch Step: 25 / 67 Loss (mean): 1.1837447056313977 Loss (std): 4.7700618857948145 Loss ratio: 4.029637356012934 Tokens per Sec: 2152.7231440128144
Epoch Step: 30 / 67 Loss (mean): 1.9258118856159854 Loss (std): 7.246313143283193 Loss ratio: 3.7627315509922745 Tokens per Sec: 2584.6180642708596
Epoch Step: 35 / 67 Loss (mean): 0.9599977049310837 Loss (std): 1.1887478693906421 Loss ratio: 1.2382819909720304 Tokens per Sec: 2525.922173436975
Epoch Step: 40 / 67 Loss (mean): 0.31206374895009503 Loss (std): 0.35020637885925665 Loss ratio: 1.1222270450748875 Tokens per Sec: 3116.6713847717165
Epoch Step: 45 / 67 Loss (mean): 0.26170659392846574 Loss (std): 0.3325460642374204 Loss ratio: 1.270682787336714 Tokens per Sec: 3409.1986004892515
Epoch Step: 50 / 67 Loss (mean): 0.6716979316261131 Loss (std): 1.428304207558877 Loss ratio: 2.1264085242917097 Tokens per Sec: 2702.135755339345
Epoch Step: 55 / 67 Loss (mean): 0.449561616696883 Loss (std): 0.6481199997228221 Loss ratio: 1.4416711206015107 Tokens per Sec: 3111.722480116693
Epoch Step: 60 / 67 Loss (mean): 0.6466411938163219 Loss (std): 0.9569677145538131 Loss ratio: 1.4799052762259364 Tokens per Sec: 2712.4302427218768
Epoch Step: 65 / 67 Loss (mean): 0.4041051568092371 Loss (std): 0.7551940951639168 Loss ratio: 1.8688058849009335 Tokens per Sec: 2652.390456450254
Mean loss per sample: 0.9689331802730305 Std loss per sample: 5.571153203958082 ratio: 5.749780601370485
Epoch ended with duration 0:00:11.482615
Train perplexity: 1.140077659798349
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api help[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 113.76941218972206 Loss (std): 46.97490983512475 Loss ratio: 0.41289577691400314 Tokens per Sec: 4316.671222076896
Mean loss per sample: 104.24540325828264 Std loss per sample: 51.52423450170148 ratio: 0.4942590549920263
Epoch ended with duration 0:00:01.053784
b'BLEU = 2.55, 8.6/2.7/1.8/1.4 (BP=0.928, ratio=0.931, hyp_len=2897, ref_len=3113)\n'
Validation perplexity: 1365620.3510149084
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.55
Epoch 467 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.49446252918278333 Loss (std): 1.1058066493825816 Loss ratio: 2.2363810887959286 Tokens per Sec: 3114.4218317472764
Epoch Step: 10 / 67 Loss (mean): 0.3683106681164645 Loss (std): 0.7823602724393827 Loss ratio: 2.124185749058972 Tokens per Sec: 3024.5058437318576
Epoch Step: 15 / 67 Loss (mean): 0.5147602098259085 Loss (std): 1.087054137160607 Loss ratio: 2.1117679968470133 Tokens per Sec: 2819.162907921756
Epoch Step: 20 / 67 Loss (mean): 0.25252172735054046 Loss (std): 0.29986004388974075 Loss ratio: 1.1874623504118802 Tokens per Sec: 2645.6035694748866
Epoch Step: 25 / 67 Loss (mean): 0.45548715478071244 Loss (std): 0.8046663546948897 Loss ratio: 1.7666060310356817 Tokens per Sec: 2575.9217394597304
Epoch Step: 30 / 67 Loss (mean): 0.4649300781893544 Loss (std): 0.6475134523215211 Loss ratio: 1.3927114693100262 Tokens per Sec: 2685.8020076070907
Epoch Step: 35 / 67 Loss (mean): 0.6898618656414328 Loss (std): 1.1194177917629111 Loss ratio: 1.6226694756088273 Tokens per Sec: 3003.8822169253226
Epoch Step: 40 / 67 Loss (mean): 4.048461730486451 Loss (std): 12.247156638905514 Loss ratio: 3.025138300475902 Tokens per Sec: 2829.7207438702344
Epoch Step: 45 / 67 Loss (mean): 0.485911259711429 Loss (std): 0.9152813791831319 Loss ratio: 1.883638958534724 Tokens per Sec: 2869.4020363569566
Epoch Step: 50 / 67 Loss (mean): 0.28734544972940057 Loss (std): 0.5379375706900281 Loss ratio: 1.8720935765525974 Tokens per Sec: 2419.0911045546363
Epoch Step: 55 / 67 Loss (mean): 0.5547011818780447 Loss (std): 0.8575295742471396 Loss ratio: 1.5459306781063862 Tokens per Sec: 2631.847957425111
Epoch Step: 60 / 67 Loss (mean): 0.2019941362523241 Loss (std): 0.29863347837431603 Loss ratio: 1.4784264727431167 Tokens per Sec: 3052.656789112182
Epoch Step: 65 / 67 Loss (mean): 0.23212267306735157 Loss (std): 0.4939109899750715 Loss ratio: 2.1278015777104233 Tokens per Sec: 2260.1764860010835
Mean loss per sample: 1.097110128462106 Std loss per sample: 5.984073665880775 ratio: 5.454396519216406
Epoch ended with duration 0:00:11.464403
Train perplexity: 1.1600216714394336
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings on run ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options rest endpoint[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.73176681995392 Loss (std): 44.1427587650561 Loss ratio: 0.461108785844065 Tokens per Sec: 4411.085259217123
Mean loss per sample: 99.93670101011874 Std loss per sample: 51.84174535174437 ratio: 0.5187458143779963
Epoch ended with duration 0:00:01.021072
b'BLEU = 2.76, 8.6/2.9/2.0/1.6 (BP=0.921, ratio=0.924, hyp_len=2875, ref_len=3113)\n'
Validation perplexity: 761627.6159182929
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.76
Epoch 468 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.28633624008944025 Loss (std): 0.32955809032082406 Loss ratio: 1.1509478863656344 Tokens per Sec: 2460.1821100808684
Epoch Step: 10 / 67 Loss (mean): 1.9346577422347764 Loss (std): 5.194615630567575 Loss ratio: 2.685030802692331 Tokens per Sec: 3237.986325375769
Epoch Step: 15 / 67 Loss (mean): 0.4627586957794847 Loss (std): 0.7311305702293621 Loss ratio: 1.5799391278813761 Tokens per Sec: 2881.3867312834996
Epoch Step: 20 / 67 Loss (mean): 0.57592303569254 Loss (std): 1.635171576673525 Loss ratio: 2.8392189152622667 Tokens per Sec: 2453.9755035940743
Epoch Step: 25 / 67 Loss (mean): 0.2527475864699227 Loss (std): 0.4060114026054817 Loss ratio: 1.6063908196955132 Tokens per Sec: 2779.6819525565675
Epoch Step: 30 / 67 Loss (mean): 0.3634277676974307 Loss (std): 0.5415872047154994 Loss ratio: 1.4902196608333849 Tokens per Sec: 3109.1709208808325
Epoch Step: 35 / 67 Loss (mean): 0.2833019670397334 Loss (std): 0.49876070377468784 Loss ratio: 1.7605267940294114 Tokens per Sec: 2477.2723890362513
Epoch Step: 40 / 67 Loss (mean): 0.404552076892287 Loss (std): 0.6553332109588582 Loss ratio: 1.6198982736488146 Tokens per Sec: 2827.951261131277
Epoch Step: 45 / 67 Loss (mean): 1.8277943453285843 Loss (std): 2.216008634946235 Loss ratio: 1.2123949505642337 Tokens per Sec: 3643.017829846219
Epoch Step: 50 / 67 Loss (mean): 0.28575264909886755 Loss (std): 0.44736836987822365 Loss ratio: 1.5655790813804098 Tokens per Sec: 2480.5409302644457
Epoch Step: 55 / 67 Loss (mean): 0.3224031154104523 Loss (std): 0.5786743484716507 Loss ratio: 1.794878277571663 Tokens per Sec: 2395.7976740250965
Epoch Step: 60 / 67 Loss (mean): 0.9124561436910881 Loss (std): 1.7931479397190497 Loss ratio: 1.965188082865405 Tokens per Sec: 3421.333326006259
Epoch Step: 65 / 67 Loss (mean): 0.8565804735480924 Loss (std): 1.5229257050740028 Loss ratio: 1.7779131699860056 Tokens per Sec: 2437.737398215061
Mean loss per sample: 0.7154124208524363 Std loss per sample: 3.3992091368390773 ratio: 4.751397987735261
Epoch ended with duration 0:00:11.417951
Train perplexity: 1.1016346215186368
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to deprecated ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog extension api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.05130177736282 Loss (std): 43.42349331089636 Loss ratio: 0.45684269966766505 Tokens per Sec: 4415.598621391039
Mean loss per sample: 100.03930386436767 Std loss per sample: 51.67254328076665 ratio: 0.5165224195364633
Epoch ended with duration 0:00:01.020385
b'BLEU = 2.83, 8.8/3.0/2.1/1.7 (BP=0.917, ratio=0.921, hyp_len=2866, ref_len=3113)\n'
Validation perplexity: 772291.6531679095
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.83
Epoch 469 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3141606149074505 Loss (std): 0.44738072748152447 Loss ratio: 1.424050967093121 Tokens per Sec: 2936.973838430799
Epoch Step: 10 / 67 Loss (mean): 0.30301906139720813 Loss (std): 0.5716630034460874 Loss ratio: 1.8865578977446944 Tokens per Sec: 2457.634507587404
Epoch Step: 15 / 67 Loss (mean): 0.21119955761241727 Loss (std): 0.3143232854147236 Loss ratio: 1.4882762490987493 Tokens per Sec: 2289.3602286425507
Epoch Step: 20 / 67 Loss (mean): 4.318638406017271 Loss (std): 15.93010336263073 Loss ratio: 3.6886865407474034 Tokens per Sec: 3084.4947427814805
Epoch Step: 25 / 67 Loss (mean): 0.509725993302709 Loss (std): 0.6284333704346259 Loss ratio: 1.2328846845003265 Tokens per Sec: 2637.7779467575774
Epoch Step: 30 / 67 Loss (mean): 0.27802296803565696 Loss (std): 0.4182456319911974 Loss ratio: 1.504356402444983 Tokens per Sec: 2475.0208963802734
Epoch Step: 35 / 67 Loss (mean): 0.3304991559853079 Loss (std): 0.5146156042498836 Loss ratio: 1.5570859862430648 Tokens per Sec: 3304.8428470221884
Epoch Step: 40 / 67 Loss (mean): 0.4280308506822621 Loss (std): 0.74874374335418 Loss ratio: 1.7492751799565753 Tokens per Sec: 2594.724118094525
Epoch Step: 45 / 67 Loss (mean): 0.5180542335547216 Loss (std): 0.7492342529533438 Loss ratio: 1.4462467526080025 Tokens per Sec: 2806.363152777738
Epoch Step: 50 / 67 Loss (mean): 0.3461685093525375 Loss (std): 0.6235071852471571 Loss ratio: 1.8011666815486624 Tokens per Sec: 2796.9651161969296
Epoch Step: 55 / 67 Loss (mean): 0.9003030160820344 Loss (std): 1.4251866762519356 Loss ratio: 1.5830077771527475 Tokens per Sec: 3567.3984502611297
Epoch Step: 60 / 67 Loss (mean): 0.8405995626744698 Loss (std): 4.387888158976759 Loss ratio: 5.2199505612591075 Tokens per Sec: 2690.349437029795
Epoch Step: 65 / 67 Loss (mean): 0.36721135547122685 Loss (std): 0.9587725046670093 Loss ratio: 2.610955490297017 Tokens per Sec: 2705.414092227579
Mean loss per sample: 0.5962567240287071 Std loss per sample: 3.237455459508695 ratio: 5.42963345995378
Epoch ended with duration 0:00:11.385866
Train perplexity: 1.0840167604461481
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 112.58521765470505 Loss (std): 45.498854362366515 Loss ratio: 0.40412813786895113 Tokens per Sec: 4188.161363333777
Mean loss per sample: 104.37725414555581 Std loss per sample: 52.40602642449438 ratio: 0.5020828230584923
Epoch ended with duration 0:00:01.047633
b'BLEU = 2.40, 8.3/2.7/1.6/1.2 (BP=0.931, ratio=0.934, hyp_len=2906, ref_len=3113)\n'
Validation perplexity: 1390240.7754677662
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.4
Epoch 470 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1901597004125506 Loss (std): 0.2534613033174504 Loss ratio: 1.3328865304665884 Tokens per Sec: 2769.2793744650326
Epoch Step: 10 / 67 Loss (mean): 0.41522833830094896 Loss (std): 0.8734983297249752 Loss ratio: 2.1036577929608495 Tokens per Sec: 3235.014194015576
Epoch Step: 15 / 67 Loss (mean): 0.17856589271468692 Loss (std): 0.19828344499830278 Loss ratio: 1.1104217159495324 Tokens per Sec: 2566.9585362813873
Epoch Step: 20 / 67 Loss (mean): 0.6791757942264667 Loss (std): 1.1808669258504145 Loss ratio: 1.7386764014393927 Tokens per Sec: 2148.542540656109
Epoch Step: 25 / 67 Loss (mean): 0.3080411494738655 Loss (std): 0.4637132061181818 Loss ratio: 1.505361237971629 Tokens per Sec: 3117.088544926528
Epoch Step: 30 / 67 Loss (mean): 0.2883140511894453 Loss (std): 0.4429124406573927 Loss ratio: 1.536215244557623 Tokens per Sec: 2454.9912900776385
Epoch Step: 35 / 67 Loss (mean): 0.3314306462343666 Loss (std): 0.45568530178770844 Loss ratio: 1.3749039413376303 Tokens per Sec: 2950.1173982291843
Epoch Step: 40 / 67 Loss (mean): 0.4036845736500254 Loss (std): 0.7105664729017168 Loss ratio: 1.7602021956819753 Tokens per Sec: 3498.210312034459
Epoch Step: 45 / 67 Loss (mean): 0.6229773086233763 Loss (std): 0.9739193459724377 Loss ratio: 1.5633303693268625 Tokens per Sec: 3071.137742089013
Epoch Step: 50 / 67 Loss (mean): 4.049970194188063 Loss (std): 16.911437017905627 Loss ratio: 4.175694192064548 Tokens per Sec: 2644.0172045697245
Epoch Step: 55 / 67 Loss (mean): 0.46124749689988676 Loss (std): 0.8617729747718432 Loss ratio: 1.8683526318602224 Tokens per Sec: 2468.4312607758065
Epoch Step: 60 / 67 Loss (mean): 0.4527938585069933 Loss (std): 0.872920364023101 Loss ratio: 1.927853807252156 Tokens per Sec: 2875.847740844612
Epoch Step: 65 / 67 Loss (mean): 0.4016483647938003 Loss (std): 0.8512021146819829 Loss ratio: 2.119271953513308 Tokens per Sec: 2719.401334913038
Mean loss per sample: 0.6535949540922195 Std loss per sample: 3.7497004012584907 ratio: 5.737040008924891
Epoch ended with duration 0:00:11.408542
Train perplexity: 1.092459100556123
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print change to deprecated statement ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.67899450659752 Loss (std): 42.82198513694015 Loss ratio: 0.44755889584507885 Tokens per Sec: 4274.132610966671
Mean loss per sample: 101.15346587754664 Std loss per sample: 51.79579608301524 ratio: 0.5120516201166817
Epoch ended with duration 0:00:01.037066
b'BLEU = 2.62, 8.5/2.9/1.9/1.5 (BP=0.915, ratio=0.919, hyp_len=2860, ref_len=3113)\n'
Validation perplexity: 898162.6504015016
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.62
Model saved checkpoint_commit_msg_generator!
Epoch 471 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2753994518648142 Loss (std): 0.30980481976547913 Loss ratio: 1.1249289628853494 Tokens per Sec: 2317.699544394763
Epoch Step: 10 / 67 Loss (mean): 0.2824629464048485 Loss (std): 0.38458643777578694 Loss ratio: 1.3615465060842598 Tokens per Sec: 2614.1776262448866
Epoch Step: 15 / 67 Loss (mean): 0.11374673291963215 Loss (std): 0.1909469178109933 Loss ratio: 1.678702437510069 Tokens per Sec: 2736.7004095813777
Epoch Step: 20 / 67 Loss (mean): 0.6023281033412786 Loss (std): 0.927397426307042 Loss ratio: 1.5396881220758505 Tokens per Sec: 3111.999764999076
Epoch Step: 25 / 67 Loss (mean): 1.2856695353693794 Loss (std): 1.4472619684558197 Loss ratio: 1.125687378164416 Tokens per Sec: 3831.7158063948655
Epoch Step: 30 / 67 Loss (mean): 0.3370261379677686 Loss (std): 0.5563743650463436 Loss ratio: 1.6508344676208833 Tokens per Sec: 2807.0732070587396
Epoch Step: 35 / 67 Loss (mean): 0.33939377222850453 Loss (std): 0.5233566725700707 Loss ratio: 1.5420338126231408 Tokens per Sec: 3034.5608986309235
Epoch Step: 40 / 67 Loss (mean): 0.3081448989050841 Loss (std): 0.4422545057293038 Loss ratio: 1.4352160535538465 Tokens per Sec: 2701.1555716848325
Epoch Step: 45 / 67 Loss (mean): 0.4720107226567052 Loss (std): 0.8517221156001211 Loss ratio: 1.8044550149331695 Tokens per Sec: 2902.551688576485
Epoch Step: 50 / 67 Loss (mean): 0.3071640641101112 Loss (std): 0.4895001232639793 Loss ratio: 1.5936112991671605 Tokens per Sec: 2297.188612456728
Epoch Step: 55 / 67 Loss (mean): 0.30872454438576824 Loss (std): 0.4716158506895861 Loss ratio: 1.5276266797248108 Tokens per Sec: 2697.177659817415
Epoch Step: 60 / 67 Loss (mean): 2.5982233099493897 Loss (std): 9.07809283996429 Loss ratio: 3.493961741164242 Tokens per Sec: 2638.293490832411
Epoch Step: 65 / 67 Loss (mean): 0.3752040495701294 Loss (std): 0.5309476827740706 Loss ratio: 1.415090491113772 Tokens per Sec: 2951.8521314080117
Mean loss per sample: 0.5807699853746019 Std loss per sample: 2.784681411223271 ratio: 4.794809444959739
Epoch ended with duration 0:00:11.353381
Train perplexity: 1.0817477425220003
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the daemon not during command[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 96.44264057278633 Loss (std): 44.39861935822801 Loss ratio: 0.4603629586927359 Tokens per Sec: 4282.470827065223
Mean loss per sample: 104.71848379887763 Std loss per sample: 51.30673941896319 ratio: 0.48994921963827265
Epoch ended with duration 0:00:01.053125
b'BLEU = 2.57, 8.5/2.8/1.8/1.4 (BP=0.921, ratio=0.924, hyp_len=2877, ref_len=3113)\n'
Validation perplexity: 1456038.9225358265
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.57
Epoch 472 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.624550839253061 Loss (std): 0.9110556936039281 Loss ratio: 1.4587374419246895 Tokens per Sec: 3066.1635230091956
Epoch Step: 10 / 67 Loss (mean): 0.3755499211110873 Loss (std): 0.5393646669202371 Loss ratio: 1.4361996544280822 Tokens per Sec: 3251.6270320708654
Epoch Step: 15 / 67 Loss (mean): 0.34552496618925943 Loss (std): 0.5378135479485558 Loss ratio: 1.5565113973673652 Tokens per Sec: 2527.645210535874
Epoch Step: 20 / 67 Loss (mean): 0.44918514898745343 Loss (std): 0.8939177917935306 Loss ratio: 1.9900875926298698 Tokens per Sec: 2891.392164045008
Epoch Step: 25 / 67 Loss (mean): 0.40202179257175885 Loss (std): 0.9915718851503982 Loss ratio: 2.466463021338346 Tokens per Sec: 2851.5374811346037
Epoch Step: 30 / 67 Loss (mean): 0.3217288676150929 Loss (std): 0.7993797784190526 Loss ratio: 2.4846380256291067 Tokens per Sec: 2711.0716976164263
Epoch Step: 35 / 67 Loss (mean): 0.17919625136892137 Loss (std): 0.24713646545081902 Loss ratio: 1.3791385900256659 Tokens per Sec: 2957.0179259873566
Epoch Step: 40 / 67 Loss (mean): 0.34787546993084106 Loss (std): 0.6729244648907745 Loss ratio: 1.9343832004727277 Tokens per Sec: 2493.7953991331397
Epoch Step: 45 / 67 Loss (mean): 0.24486190356401494 Loss (std): 0.337111105694661 Loss ratio: 1.37673970833331 Tokens per Sec: 2695.776309065729
Epoch Step: 50 / 67 Loss (mean): 0.13910241309176422 Loss (std): 0.18826476546731843 Loss ratio: 1.353425589699313 Tokens per Sec: 2067.425550550059
Epoch Step: 55 / 67 Loss (mean): 0.37392893579090014 Loss (std): 0.7278224023398316 Loss ratio: 1.9464190456414092 Tokens per Sec: 2983.168451882131
Epoch Step: 60 / 67 Loss (mean): 0.4975915230897954 Loss (std): 0.8873374090973176 Loss ratio: 1.783264722010123 Tokens per Sec: 2857.7242169152087
Epoch Step: 65 / 67 Loss (mean): 1.1088574118257384 Loss (std): 1.3272954407814326 Loss ratio: 1.1969937943563322 Tokens per Sec: 2983.225713401936
Mean loss per sample: 0.42482037509378695 Std loss per sample: 1.405789000457069 ratio: 3.309137421072883
Epoch ended with duration 0:00:11.313344
Train perplexity: 1.0591620487895725
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 96.93776077032089 Loss (std): 45.38305899741805 Loss ratio: 0.4681669829876329 Tokens per Sec: 4296.929448746111
Mean loss per sample: 102.39122215035509 Std loss per sample: 52.23978091746621 ratio: 0.5101978452875128
Epoch ended with duration 0:00:01.035936
b'BLEU = 2.64, 8.8/2.8/1.8/1.4 (BP=0.935, ratio=0.937, hyp_len=2917, ref_len=3113)\n'
Validation perplexity: 1062191.305243581
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.64
Epoch 473 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3641120222528116 Loss (std): 0.52455971628317 Loss ratio: 1.4406547551977171 Tokens per Sec: 2973.9217713600397
Epoch Step: 10 / 67 Loss (mean): 0.3715398259846552 Loss (std): 0.6178190194119575 Loss ratio: 1.662860819226076 Tokens per Sec: 2885.9889908256882
Epoch Step: 15 / 67 Loss (mean): 0.5111909603874665 Loss (std): 0.7793696940526824 Loss ratio: 1.5246155633541427 Tokens per Sec: 2941.068619653562
Epoch Step: 20 / 67 Loss (mean): 3.4307206290795875 Loss (std): 11.601594859119874 Loss ratio: 3.381678694785595 Tokens per Sec: 2384.3005216426277
Epoch Step: 25 / 67 Loss (mean): 0.41851366944320034 Loss (std): 0.6780889745125097 Loss ratio: 1.620231366432198 Tokens per Sec: 2909.2199832204387
Epoch Step: 30 / 67 Loss (mean): 0.5021198722024565 Loss (std): 0.914441905023765 Loss ratio: 1.8211625463312848 Tokens per Sec: 3035.5210933891744
Epoch Step: 35 / 67 Loss (mean): 0.5475494918573531 Loss (std): 1.0009179325285757 Loss ratio: 1.8279953637311266 Tokens per Sec: 2891.2670998400904
Epoch Step: 40 / 67 Loss (mean): 0.44901053561625304 Loss (std): 0.7674984348351827 Loss ratio: 1.7093105260477126 Tokens per Sec: 2649.854106653636
Epoch Step: 45 / 67 Loss (mean): 0.39463079532379197 Loss (std): 0.8409441493945061 Loss ratio: 2.1309643326353105 Tokens per Sec: 2588.0144763482544
Epoch Step: 50 / 67 Loss (mean): 0.3529315718278667 Loss (std): 0.5463284568706198 Loss ratio: 1.5479727530215899 Tokens per Sec: 2499.988510743688
Epoch Step: 55 / 67 Loss (mean): 0.339000345000386 Loss (std): 0.6181457867081596 Loss ratio: 1.823437043131787 Tokens per Sec: 2399.660702511623
Epoch Step: 60 / 67 Loss (mean): 0.2817977855884237 Loss (std): 0.4899625647214248 Loss ratio: 1.738702678938129 Tokens per Sec: 2673.4625822132025
Epoch Step: 65 / 67 Loss (mean): 0.47364480020769406 Loss (std): 0.7452069644124307 Loss ratio: 1.5733456043128864 Tokens per Sec: 3368.451506680147
Mean loss per sample: 0.6789203621875559 Std loss per sample: 3.827402590766303 ratio: 5.63748386988128
Epoch ended with duration 0:00:11.438819
Train perplexity: 1.0962088546805098
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow call log[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 96.62533828616142 Loss (std): 44.2560074502692 Loss ratio: 0.45801658483412006 Tokens per Sec: 4421.688154628458
Mean loss per sample: 100.67411152413878 Std loss per sample: 52.02732345535304 ratio: 0.5167894969987232
Epoch ended with duration 0:00:01.024634
b'BLEU = 2.61, 8.7/2.9/1.8/1.4 (BP=0.921, ratio=0.924, hyp_len=2877, ref_len=3113)\n'
Validation perplexity: 841671.7361197696
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.61
Epoch 474 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.38269891305935744 Loss (std): 1.0917172694355346 Loss ratio: 2.852679305274658 Tokens per Sec: 2815.478577867446
Epoch Step: 10 / 67 Loss (mean): 0.3870028420496965 Loss (std): 0.830979994545745 Loss ratio: 2.147219359280663 Tokens per Sec: 3171.176933789903
Epoch Step: 15 / 67 Loss (mean): 0.6589874652509025 Loss (std): 1.4670593064651547 Loss ratio: 2.2262324912456224 Tokens per Sec: 3112.306020076945
Epoch Step: 20 / 67 Loss (mean): 0.4041300009484985 Loss (std): 0.7109181806392907 Loss ratio: 1.7591324053417372 Tokens per Sec: 2493.0589794089833
Epoch Step: 25 / 67 Loss (mean): 3.3168022993195336 Loss (std): 9.47968060488388 Loss ratio: 2.8580782782346437 Tokens per Sec: 2434.700586792166
Epoch Step: 30 / 67 Loss (mean): 1.086853465953027 Loss (std): 2.5333200308165393 Loss ratio: 2.3308754217342007 Tokens per Sec: 2917.968900451399
Epoch Step: 35 / 67 Loss (mean): 0.37720286076364573 Loss (std): 0.8046124011015536 Loss ratio: 2.1331025949077347 Tokens per Sec: 2612.311254318029
Epoch Step: 40 / 67 Loss (mean): 1.8034857929269492 Loss (std): 5.918273248932749 Loss ratio: 3.2815746440274127 Tokens per Sec: 2434.781700569402
Epoch Step: 45 / 67 Loss (mean): 0.32791272161193774 Loss (std): 0.6131751462148793 Loss ratio: 1.8699339970729472 Tokens per Sec: 2591.719675537748
Epoch Step: 50 / 67 Loss (mean): 0.34640879568723904 Loss (std): 0.6467487795246786 Loss ratio: 1.867010271034245 Tokens per Sec: 2996.416550288211
Epoch Step: 55 / 67 Loss (mean): 0.3552929751931515 Loss (std): 0.5845523602750828 Loss ratio: 1.6452685560622096 Tokens per Sec: 2894.6925880624444
Epoch Step: 60 / 67 Loss (mean): 0.36880785869288957 Loss (std): 0.6746725546549105 Loss ratio: 1.829333455762172 Tokens per Sec: 2956.4266276653784
Epoch Step: 65 / 67 Loss (mean): 0.8306729374785391 Loss (std): 1.2346376274766628 Loss ratio: 1.4863101610416438 Tokens per Sec: 2404.917445184402
Mean loss per sample: 0.7572562005710093 Std loss per sample: 4.004340753274063 ratio: 5.287960336613406
Epoch ended with duration 0:00:11.509785
Train perplexity: 1.107889160625003
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print change time unit ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.60610783100128 Loss (std): 44.00052863773668 Loss ratio: 0.4602271720496611 Tokens per Sec: 4173.694523937771
Mean loss per sample: 104.46860746648468 Std loss per sample: 51.78896935437996 ratio: 0.4957371464053902
Epoch ended with duration 0:00:01.050770
b'BLEU = 2.12, 8.6/2.4/1.3/0.9 (BP=0.934, ratio=0.936, hyp_len=2915, ref_len=3113)\n'
Validation perplexity: 1407558.9503597573
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.12
Epoch 475 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3445972438858007 Loss (std): 0.6041294056100672 Loss ratio: 1.753146365297905 Tokens per Sec: 2568.078016514886
Epoch Step: 10 / 67 Loss (mean): 0.3628556780386134 Loss (std): 0.7163060356560573 Loss ratio: 1.974079720973338 Tokens per Sec: 2896.8494933175075
Epoch Step: 15 / 67 Loss (mean): 0.29204262007260695 Loss (std): 0.4959444275349175 Loss ratio: 1.698191953666273 Tokens per Sec: 2930.971015647645
Epoch Step: 20 / 67 Loss (mean): 0.35360345604567556 Loss (std): 0.8806124568897463 Loss ratio: 2.4903955033063823 Tokens per Sec: 3106.734813866315
Epoch Step: 25 / 67 Loss (mean): 0.40689493996296733 Loss (std): 0.8929676003171714 Loss ratio: 2.1945900836182504 Tokens per Sec: 2873.3608211545984
Epoch Step: 30 / 67 Loss (mean): 0.5962384256527002 Loss (std): 1.0325506673692815 Loss ratio: 1.7317747782507504 Tokens per Sec: 3168.354432414206
Epoch Step: 35 / 67 Loss (mean): 0.42158235940041777 Loss (std): 0.7614114938267876 Loss ratio: 1.8060800620540223 Tokens per Sec: 2930.4861003727833
Epoch Step: 40 / 67 Loss (mean): 0.5313807450947934 Loss (std): 1.1716270370226924 Loss ratio: 2.2048729613145563 Tokens per Sec: 2929.7159824003893
Epoch Step: 45 / 67 Loss (mean): 0.7382750607648632 Loss (std): 3.3723018942970504 Loss ratio: 4.567812287744488 Tokens per Sec: 2649.6879997182946
Epoch Step: 50 / 67 Loss (mean): 0.3016413694494986 Loss (std): 0.6066970059634064 Loss ratio: 2.0113189615557054 Tokens per Sec: 2723.2162302792763
Epoch Step: 55 / 67 Loss (mean): 0.35718686462860205 Loss (std): 0.44605505989293 Loss ratio: 1.2488002893295973 Tokens per Sec: 2227.4865526994236
Epoch Step: 60 / 67 Loss (mean): 0.42378883827132086 Loss (std): 1.0497424125994193 Loss ratio: 2.477041200238847 Tokens per Sec: 3078.982379078658
Epoch Step: 65 / 67 Loss (mean): 0.4073899912982597 Loss (std): 0.6335951061633421 Loss ratio: 1.555254472855894 Tokens per Sec: 2462.1453860919064
Mean loss per sample: 0.8010831324090081 Std loss per sample: 4.667972048544692 ratio: 5.827075692515481
Epoch ended with duration 0:00:11.407020
Train perplexity: 1.1144782065088845
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during engines ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 96.26190263032913 Loss (std): 45.072129275503194 Loss ratio: 0.468223960299143 Tokens per Sec: 4404.42169212067
Mean loss per sample: 100.75260888479772 Std loss per sample: 52.26143361586126 ratio: 0.5187104750371069
Epoch ended with duration 0:00:01.038762
b'BLEU = 2.44, 8.5/2.7/1.7/1.2 (BP=0.930, ratio=0.933, hyp_len=2903, ref_len=3113)\n'
Validation perplexity: 850673.0626228555
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.44
Model saved checkpoint_commit_msg_generator!
Epoch 476 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.26440472804279125 Loss (std): 0.5297670198304968 Loss ratio: 2.003621583290142 Tokens per Sec: 2768.650107556595
Epoch Step: 10 / 67 Loss (mean): 0.3825807407993125 Loss (std): 0.5948491363178854 Loss ratio: 1.5548329355918127 Tokens per Sec: 2934.206452249547
Epoch Step: 15 / 67 Loss (mean): 0.21138966320177133 Loss (std): 0.29442032269976015 Loss ratio: 1.3927848610967135 Tokens per Sec: 2997.9749360091073
Epoch Step: 20 / 67 Loss (mean): 0.4287490437418455 Loss (std): 0.5968698064283977 Loss ratio: 1.3921192714957507 Tokens per Sec: 2573.490748054198
Epoch Step: 25 / 67 Loss (mean): 0.17459021752074477 Loss (std): 0.2649462388885465 Loss ratio: 1.5175319823234978 Tokens per Sec: 2509.7223480738257
Epoch Step: 30 / 67 Loss (mean): 0.3742748493241379 Loss (std): 0.6607170509160969 Loss ratio: 1.7653258083176406 Tokens per Sec: 2747.098893688712
Epoch Step: 35 / 67 Loss (mean): 0.3895780982020369 Loss (std): 0.9674088112919914 Loss ratio: 2.483221761584474 Tokens per Sec: 2606.376243847404
Epoch Step: 40 / 67 Loss (mean): 0.51288431930152 Loss (std): 0.9999299508790571 Loss ratio: 1.9496208272478057 Tokens per Sec: 2383.110605849772
Epoch Step: 45 / 67 Loss (mean): 0.525958434525819 Loss (std): 1.0726776227379702 Loss ratio: 2.0394722326395414 Tokens per Sec: 2622.8638317560944
Epoch Step: 50 / 67 Loss (mean): 0.2960558561826474 Loss (std): 0.48387759072379977 Loss ratio: 1.6344131710918715 Tokens per Sec: 2963.468563158912
Epoch Step: 55 / 67 Loss (mean): 0.36396216289176664 Loss (std): 0.7424483655916716 Loss ratio: 2.0399053563500704 Tokens per Sec: 2541.6461341827066
Epoch Step: 60 / 67 Loss (mean): 0.358841561304871 Loss (std): 0.8291553961367438 Loss ratio: 2.3106448236420842 Tokens per Sec: 3097.5658471507527
Epoch Step: 65 / 67 Loss (mean): 0.7848913973066374 Loss (std): 1.8302783955274218 Loss ratio: 2.331887445585517 Tokens per Sec: 3418.836438110969
Mean loss per sample: 0.7905766307875443 Std loss per sample: 4.565923338269896 ratio: 5.775434234277183
Epoch ended with duration 0:00:11.409517
Train perplexity: 1.1128950715156716
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length ([0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.95094135403633 Loss (std): 43.599300447014706 Loss ratio: 0.4543915862809889 Tokens per Sec: 4412.240953142119
Mean loss per sample: 101.16966911808389 Std loss per sample: 51.78638225590162 ratio: 0.5118765605080436
Epoch ended with duration 0:00:01.035189
b'BLEU = 2.25, 7.7/2.6/1.5/1.0 (BP=0.961, ratio=0.962, hyp_len=2994, ref_len=3113)\n'
Validation perplexity: 900137.0291896956
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.25
Epoch 477 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.43863425150630064 Loss (std): 0.7112290878678446 Loss ratio: 1.6214627230441632 Tokens per Sec: 3242.2192186976035
Epoch Step: 10 / 67 Loss (mean): 4.060621782504313 Loss (std): 17.018858664700982 Loss ratio: 4.191195234687658 Tokens per Sec: 2758.464015398651
Epoch Step: 15 / 67 Loss (mean): 0.4028913375805132 Loss (std): 0.6811481003305637 Loss ratio: 1.6906496536288624 Tokens per Sec: 2582.489211193217
Epoch Step: 20 / 67 Loss (mean): 0.2821157292528369 Loss (std): 0.37338190129819954 Loss ratio: 1.323506145109578 Tokens per Sec: 2864.7482343905217
Epoch Step: 25 / 67 Loss (mean): 0.5042518876907707 Loss (std): 0.701079385192163 Loss ratio: 1.3903356681573704 Tokens per Sec: 2201.1432571709397
Epoch Step: 30 / 67 Loss (mean): 0.7800154082669906 Loss (std): 0.9261734752316253 Loss ratio: 1.1873784356252184 Tokens per Sec: 2558.094385041135
Epoch Step: 35 / 67 Loss (mean): 0.3748396632463482 Loss (std): 0.630425803896672 Loss ratio: 1.6818545786664796 Tokens per Sec: 2256.2521265067035
Epoch Step: 40 / 67 Loss (mean): 0.4446039183094399 Loss (std): 0.8006741989480738 Loss ratio: 1.8008707660349779 Tokens per Sec: 3164.267004907427
Epoch Step: 45 / 67 Loss (mean): 0.35724665418092627 Loss (std): 0.5881195422044891 Loss ratio: 1.6462562639051006 Tokens per Sec: 3131.0976433152086
Epoch Step: 50 / 67 Loss (mean): 0.4015913266739517 Loss (std): 0.7772966937082518 Loss ratio: 1.9355415370793898 Tokens per Sec: 2732.8684312007013
Epoch Step: 55 / 67 Loss (mean): 0.3245921342531801 Loss (std): 0.5269877512352165 Loss ratio: 1.6235382673326546 Tokens per Sec: 2475.3825110146804
Epoch Step: 60 / 67 Loss (mean): 0.6572301292908378 Loss (std): 0.9577352840253099 Loss ratio: 1.4572297302601178 Tokens per Sec: 3007.4292975780727
Epoch Step: 65 / 67 Loss (mean): 3.5157710809944547 Loss (std): 10.427255012135028 Loss ratio: 2.965851522160431 Tokens per Sec: 3152.247567672952
Mean loss per sample: 0.9930558892389061 Std loss per sample: 5.746097049845806 ratio: 5.7862776024113876
Epoch ended with duration 0:00:11.497979
Train perplexity: 1.1438047191622878
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the time unit test[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 96.21142756938934 Loss (std): 44.18047775506463 Loss ratio: 0.45920197705413845 Tokens per Sec: 4258.588146946059
Mean loss per sample: 100.84504405079318 Std loss per sample: 52.62504164892091 ratio: 0.5218406332631971
Epoch ended with duration 0:00:01.043193
b'BLEU = 2.67, 8.7/3.0/2.0/1.5 (BP=0.896, ratio=0.901, hyp_len=2806, ref_len=3113)\n'
Validation perplexity: 861396.1431487979
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.67
Epoch 478 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.866819990977092 Loss (std): 2.078472163875943 Loss ratio: 2.3978129086906033 Tokens per Sec: 3527.3671021117407
Epoch Step: 10 / 67 Loss (mean): 0.3941822953274823 Loss (std): 0.8577967799008712 Loss ratio: 2.176142333303486 Tokens per Sec: 2454.4305542947473
Epoch Step: 15 / 67 Loss (mean): 0.23446069617784815 Loss (std): 0.3370746713785831 Loss ratio: 1.4376596029677315 Tokens per Sec: 3014.9981421014327
Epoch Step: 20 / 67 Loss (mean): 8.118867331548245 Loss (std): 17.690131056412692 Loss ratio: 2.178891504689637 Tokens per Sec: 2472.6732945109934
Epoch Step: 25 / 67 Loss (mean): 0.46797371864522574 Loss (std): 1.0145746539510474 Loss ratio: 2.1680163084547144 Tokens per Sec: 3153.9439406746847
Epoch Step: 30 / 67 Loss (mean): 0.4583424102747813 Loss (std): 0.7476952899556681 Loss ratio: 1.6313028713782272 Tokens per Sec: 2707.627068957534
Epoch Step: 35 / 67 Loss (mean): 0.6556451651595125 Loss (std): 1.8560009315744739 Loss ratio: 2.830800912141136 Tokens per Sec: 2508.174119737782
Epoch Step: 40 / 67 Loss (mean): 0.41455793672685104 Loss (std): 0.6352935407004272 Loss ratio: 1.5324602049990834 Tokens per Sec: 2584.0966190354748
Epoch Step: 45 / 67 Loss (mean): 0.5043959264221485 Loss (std): 0.8688000008287948 Loss ratio: 1.7224564182972057 Tokens per Sec: 2695.9742782075873
Epoch Step: 50 / 67 Loss (mean): 0.2958978970418684 Loss (std): 0.6535951952260161 Loss ratio: 2.208853803153372 Tokens per Sec: 2066.8471886239427
Epoch Step: 55 / 67 Loss (mean): 0.5963417569364537 Loss (std): 1.8781096731425042 Loss ratio: 3.1493848138201663 Tokens per Sec: 2899.2974407867396
Epoch Step: 60 / 67 Loss (mean): 0.8634002747421619 Loss (std): 1.45984951693357 Loss ratio: 1.6908142835251312 Tokens per Sec: 3302.9481223682255
Epoch Step: 65 / 67 Loss (mean): 0.5051936765012215 Loss (std): 0.8134930321197167 Loss ratio: 1.6102597280188835 Tokens per Sec: 2978.4013036278125
Mean loss per sample: 0.8124825342182445 Std loss per sample: 4.556095692290787 ratio: 5.607622933918915
Epoch ended with duration 0:00:11.491367
Train perplexity: 1.1161984323992602
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 96.90623077750206 Loss (std): 44.7909375896282 Loss ratio: 0.4622090574595638 Tokens per Sec: 4269.7596945944515
Mean loss per sample: 102.6635241604975 Std loss per sample: 53.06476251239214 ratio: 0.5168803910280163
Epoch ended with duration 0:00:01.042746
b'BLEU = 2.83, 8.7/3.2/2.1/1.6 (BP=0.906, ratio=0.910, hyp_len=2832, ref_len=3113)\n'
Validation perplexity: 1102120.2704611698
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.83
Epoch 479 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.07846751500342396 Loss (std): 0.08687665756978076 Loss ratio: 1.1071671833368224 Tokens per Sec: 2261.427193937507
Epoch Step: 10 / 67 Loss (mean): 0.3728457490215078 Loss (std): 0.7819539256827157 Loss ratio: 2.09725852510017 Tokens per Sec: 3357.5244851861285
Epoch Step: 15 / 67 Loss (mean): 0.2663200293900445 Loss (std): 0.6109468135850138 Loss ratio: 2.294032540414897 Tokens per Sec: 2747.6511418786563
Epoch Step: 20 / 67 Loss (mean): 0.49814356894785305 Loss (std): 0.9556958582286582 Loss ratio: 1.9185148977175752 Tokens per Sec: 3148.9489401521623
Epoch Step: 25 / 67 Loss (mean): 0.42449502963063424 Loss (std): 0.7510228130338005 Loss ratio: 1.769214621163616 Tokens per Sec: 2470.225530144918
Epoch Step: 30 / 67 Loss (mean): 0.2578754338246654 Loss (std): 0.4541865436067021 Loss ratio: 1.7612633234211543 Tokens per Sec: 2505.11290833057
Epoch Step: 35 / 67 Loss (mean): 0.3592126178846229 Loss (std): 0.6306712038133843 Loss ratio: 1.755704483676997 Tokens per Sec: 3104.6048231990694
Epoch Step: 40 / 67 Loss (mean): 0.3429325716861058 Loss (std): 0.5449862556816649 Loss ratio: 1.589193621947651 Tokens per Sec: 2532.0240869745717
Epoch Step: 45 / 67 Loss (mean): 0.2048045027167973 Loss (std): 0.2514670275219361 Loss ratio: 1.2278393501419427 Tokens per Sec: 2542.2115617133973
Epoch Step: 50 / 67 Loss (mean): 0.3926712910179049 Loss (std): 0.6108402714658882 Loss ratio: 1.5556020657441831 Tokens per Sec: 2730.9658340592027
Epoch Step: 55 / 67 Loss (mean): 0.36955135567404795 Loss (std): 0.49162528519071186 Loss ratio: 1.3303300817122037 Tokens per Sec: 3262.4351374255853
Epoch Step: 60 / 67 Loss (mean): 0.2557794832655418 Loss (std): 0.41674945816280534 Loss ratio: 1.6293310661283567 Tokens per Sec: 2692.040735328365
Epoch Step: 65 / 67 Loss (mean): 0.35688510467753076 Loss (std): 0.7827928589274237 Loss ratio: 2.193402999082096 Tokens per Sec: 2679.1979534414154
Mean loss per sample: 0.7138666090567988 Std loss per sample: 4.092032118851538 ratio: 5.73220832426686
Epoch ended with duration 0:00:11.435064
Train perplexity: 1.101404241049442
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to deprecated statement[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 110.77935832738876 Loss (std): 46.57340202264734 Loss ratio: 0.4204158854667483 Tokens per Sec: 4307.372065205129
Mean loss per sample: 101.82860140966588 Std loss per sample: 51.83464855758355 ratio: 0.5090382057693984
Epoch ended with duration 0:00:01.036641
b'BLEU = 2.52, 8.3/2.7/1.7/1.3 (BP=0.941, ratio=0.943, hyp_len=2935, ref_len=3113)\n'
Validation perplexity: 984214.7690742497
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.52
Epoch 480 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2313145053867629 Loss (std): 0.30922397755520853 Loss ratio: 1.3368118745436188 Tokens per Sec: 2614.0306322922534
Epoch Step: 10 / 67 Loss (mean): 0.3582853705265734 Loss (std): 0.6196134019762204 Loss ratio: 1.729385157606553 Tokens per Sec: 2662.4631662689367
Epoch Step: 15 / 67 Loss (mean): 0.415143301270291 Loss (std): 0.7588881681567154 Loss ratio: 1.8280149669634667 Tokens per Sec: 2762.8791898249247
Epoch Step: 20 / 67 Loss (mean): 0.4382080061477609 Loss (std): 0.7867796473664078 Loss ratio: 1.795447906766703 Tokens per Sec: 3445.050722942021
Epoch Step: 25 / 67 Loss (mean): 0.3734215205950022 Loss (std): 0.5777898330648888 Loss ratio: 1.5472858450799791 Tokens per Sec: 2973.7221700539353
Epoch Step: 30 / 67 Loss (mean): 0.19229886848734168 Loss (std): 0.31568684551047077 Loss ratio: 1.6416469217615353 Tokens per Sec: 2950.0799910535743
Epoch Step: 35 / 67 Loss (mean): 0.48185353297412803 Loss (std): 1.0051562899746176 Loss ratio: 2.086020380032343 Tokens per Sec: 2866.781600827363
Epoch Step: 40 / 67 Loss (mean): 0.3908854773890198 Loss (std): 0.8137877292087363 Loss ratio: 2.081908324260491 Tokens per Sec: 2857.5536253525315
Epoch Step: 45 / 67 Loss (mean): 0.2701611213014985 Loss (std): 0.5552783843120219 Loss ratio: 2.0553600815579007 Tokens per Sec: 3183.3067278187614
Epoch Step: 50 / 67 Loss (mean): 0.6311361484549707 Loss (std): 0.969586015222569 Loss ratio: 1.536254923119406 Tokens per Sec: 2323.4495334188036
Epoch Step: 55 / 67 Loss (mean): 0.5542194033114356 Loss (std): 1.020482911443131 Loss ratio: 1.8412976978896667 Tokens per Sec: 2870.8560229553937
Epoch Step: 60 / 67 Loss (mean): 0.1727516574319452 Loss (std): 0.33589546565166195 Loss ratio: 1.944383461466855 Tokens per Sec: 2305.572937430276
Epoch Step: 65 / 67 Loss (mean): 1.1610259126318851 Loss (std): 7.514324137904441 Loss ratio: 6.4721416259095434 Tokens per Sec: 2372.2895103766036
Mean loss per sample: 0.5404488863084195 Std loss per sample: 2.6971832768954234 ratio: 4.9906352760179695
Epoch ended with duration 0:00:11.478442
Train perplexity: 1.0758624081004473
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print change time unit test[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 96.74735248088837 Loss (std): 44.71227108109892 Loss ratio: 0.46215498341343714 Tokens per Sec: 4411.859546121712
Mean loss per sample: 100.31378605454915 Std loss per sample: 51.64071770767736 ratio: 0.514791832097693
Epoch ended with duration 0:00:01.022707
b'BLEU = 2.21, 8.2/2.4/1.4/1.0 (BP=0.957, ratio=0.958, hyp_len=2983, ref_len=3113)\n'
Validation perplexity: 801559.7531852303
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.21
Model saved checkpoint_commit_msg_generator!
Epoch 481 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.26608210740505456 Loss (std): 0.5922448268426572 Loss ratio: 2.2257972646807396 Tokens per Sec: 2526.3761748598326
Epoch Step: 10 / 67 Loss (mean): 0.43603319115936756 Loss (std): 1.3471434165171943 Loss ratio: 3.089543282095746 Tokens per Sec: 2394.434555579712
Epoch Step: 15 / 67 Loss (mean): 0.3879793163796421 Loss (std): 0.531526862631969 Loss ratio: 1.3699876261235122 Tokens per Sec: 2608.846704229075
Epoch Step: 20 / 67 Loss (mean): 0.4441882167084259 Loss (std): 1.0361222586939753 Loss ratio: 2.3326198663529762 Tokens per Sec: 2867.3690427526244
Epoch Step: 25 / 67 Loss (mean): 0.7187018208496738 Loss (std): 1.0848404743617954 Loss ratio: 1.5094444495482982 Tokens per Sec: 2606.3550564024094
Epoch Step: 30 / 67 Loss (mean): 0.5277150884139701 Loss (std): 1.3571315940800142 Loss ratio: 2.571712698529859 Tokens per Sec: 2733.780204318685
Epoch Step: 35 / 67 Loss (mean): 0.17671969771868135 Loss (std): 0.2388063903894028 Loss ratio: 1.351328649110507 Tokens per Sec: 2561.8783101233767
Epoch Step: 40 / 67 Loss (mean): 0.31336799703422 Loss (std): 0.5879316867823596 Loss ratio: 1.8761701652583147 Tokens per Sec: 2870.117189278317
Epoch Step: 45 / 67 Loss (mean): 0.3042256042583631 Loss (std): 0.4724902952314782 Loss ratio: 1.553091812844972 Tokens per Sec: 2605.7748105090036
Epoch Step: 50 / 67 Loss (mean): 2.420294427211047 Loss (std): 8.37587892513733 Loss ratio: 3.460685952489268 Tokens per Sec: 3296.971187513907
Epoch Step: 55 / 67 Loss (mean): 0.12205026114714287 Loss (std): 0.1722263789294079 Loss ratio: 1.4111102861285407 Tokens per Sec: 2821.302225763186
Epoch Step: 60 / 67 Loss (mean): 0.3299842431479192 Loss (std): 0.6080820571465223 Loss ratio: 1.8427608886583795 Tokens per Sec: 2569.854826931025
Epoch Step: 65 / 67 Loss (mean): 1.0409672618843615 Loss (std): 5.398208153501699 Loss ratio: 5.185761696030526 Tokens per Sec: 3286.0714668174246
Mean loss per sample: 0.6284298959346549 Std loss per sample: 3.190507275289628 ratio: 5.076950183193357
Epoch ended with duration 0:00:11.489810
Train perplexity: 1.08874579346444
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 96.36968868970871 Loss (std): 44.91874739152482 Loss ratio: 0.4661086696684709 Tokens per Sec: 4400.219513589837
Mean loss per sample: 101.48153415707047 Std loss per sample: 53.293213343342615 ratio: 0.525151829699941
Epoch ended with duration 0:00:01.024438
b'BLEU = 2.31, 8.7/2.6/1.6/1.2 (BP=0.901, ratio=0.906, hyp_len=2819, ref_len=3113)\n'
Validation perplexity: 938995.1416215511
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.31
Epoch 482 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2498069586144993 Loss (std): 0.3432595132606225 Loss ratio: 1.37409908500723 Tokens per Sec: 2829.6187682567834
Epoch Step: 10 / 67 Loss (mean): 0.3029069388503558 Loss (std): 0.4852483468702601 Loss ratio: 1.6019717102287507 Tokens per Sec: 2784.634043037607
Epoch Step: 15 / 67 Loss (mean): 0.44368512984510744 Loss (std): 1.0751688280520435 Loss ratio: 2.4232699176269215 Tokens per Sec: 2513.2226844264605
Epoch Step: 20 / 67 Loss (mean): 2.825308099949325 Loss (std): 16.612763098884574 Loss ratio: 5.8799828235308365 Tokens per Sec: 2081.0448061045367
Epoch Step: 25 / 67 Loss (mean): 0.23297940387419658 Loss (std): 0.3979754797622175 Loss ratio: 1.7082002663939981 Tokens per Sec: 2671.7583015414093
Epoch Step: 30 / 67 Loss (mean): 0.2999101256691574 Loss (std): 0.43221428148637087 Loss ratio: 1.4411460117327393 Tokens per Sec: 2589.8210837588103
Epoch Step: 35 / 67 Loss (mean): 0.25663810972037027 Loss (std): 0.2662276124117367 Loss ratio: 1.0373658561536907 Tokens per Sec: 3163.574071388204
Epoch Step: 40 / 67 Loss (mean): 0.891261058706732 Loss (std): 1.6004418169289838 Loss ratio: 1.7957048625588012 Tokens per Sec: 2619.6393995337426
Epoch Step: 45 / 67 Loss (mean): 0.47138887703704313 Loss (std): 0.9818359971572513 Loss ratio: 2.082857795306222 Tokens per Sec: 2742.7194380952596
Epoch Step: 50 / 67 Loss (mean): 0.5313787026971113 Loss (std): 0.9631405546907542 Loss ratio: 1.8125313449751663 Tokens per Sec: 2989.52619150022
Epoch Step: 55 / 67 Loss (mean): 0.3157024959582486 Loss (std): 0.7443975867429624 Loss ratio: 2.3579084621535853 Tokens per Sec: 2984.5572619085247
Epoch Step: 60 / 67 Loss (mean): 0.3073460305859044 Loss (std): 0.5265439498584655 Loss ratio: 1.7131958686913789 Tokens per Sec: 2857.904271758864
Epoch Step: 65 / 67 Loss (mean): 0.6187133576422639 Loss (std): 2.1322416830859274 Loss ratio: 3.4462512514862755 Tokens per Sec: 2838.2893362790833
Mean loss per sample: 0.752796310042563 Std loss per sample: 4.68357410762018 ratio: 6.221568896047552
Epoch ended with duration 0:00:11.547654
Train perplexity: 1.1072208376862178
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print enable print to run ( ) , and hint[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 112.04651790857315 Loss (std): 43.60121594745699 Loss ratio: 0.3891349482456418 Tokens per Sec: 4284.4480688018775
Mean loss per sample: 102.56798220621269 Std loss per sample: 52.13554150269219 ratio: 0.5083023023488344
Epoch ended with duration 0:00:01.036100
b'BLEU = 2.02, 7.8/2.3/1.3/0.9 (BP=0.941, ratio=0.943, hyp_len=2935, ref_len=3113)\n'
Validation perplexity: 1087942.3903669943
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.02
Epoch 483 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6664230270253029 Loss (std): 0.9242454424501921 Loss ratio: 1.3868750102704663 Tokens per Sec: 3222.248490492572
Epoch Step: 10 / 67 Loss (mean): 0.8708220726421132 Loss (std): 5.313363733629113 Loss ratio: 6.1015492148793715 Tokens per Sec: 2197.9909172264493
Epoch Step: 15 / 67 Loss (mean): 0.20739532883453649 Loss (std): 0.2930932119487758 Loss ratio: 1.4132102858623712 Tokens per Sec: 3220.483788817863
Epoch Step: 20 / 67 Loss (mean): 3.0939405859680846 Loss (std): 10.234004522139623 Loss ratio: 3.3077572880855546 Tokens per Sec: 2570.9458737088435
Epoch Step: 25 / 67 Loss (mean): 3.1899286348052556 Loss (std): 9.731263627955352 Loss ratio: 3.0506211085030883 Tokens per Sec: 2441.436890988249
Epoch Step: 30 / 67 Loss (mean): 0.24228556415982894 Loss (std): 0.23596663462086495 Loss ratio: 0.9739194963559795 Tokens per Sec: 3084.9687763437764
Epoch Step: 35 / 67 Loss (mean): 0.7056510656766477 Loss (std): 0.9441428363915615 Loss ratio: 1.3379740814055519 Tokens per Sec: 3377.067141105461
Epoch Step: 40 / 67 Loss (mean): 0.40133421206519415 Loss (std): 0.794763465656845 Loss ratio: 1.9803033027439505 Tokens per Sec: 2797.727001862508
Epoch Step: 45 / 67 Loss (mean): 0.2482261635868781 Loss (std): 0.37124081708376405 Loss ratio: 1.4955748891225615 Tokens per Sec: 3261.100648492811
Epoch Step: 50 / 67 Loss (mean): 0.6586233252528473 Loss (std): 1.0745062491705093 Loss ratio: 1.6314427503125606 Tokens per Sec: 2718.782427470274
Epoch Step: 55 / 67 Loss (mean): 0.37153798256622395 Loss (std): 0.5188035291458069 Loss ratio: 1.3963674065365144 Tokens per Sec: 2420.816399985825
Epoch Step: 60 / 67 Loss (mean): 0.4813679982798931 Loss (std): 0.7112246841862513 Loss ratio: 1.477507201824221 Tokens per Sec: 3074.978088333118
Epoch Step: 65 / 67 Loss (mean): 1.586405369824206 Loss (std): 1.815400442652148 Loss ratio: 1.144348397442274 Tokens per Sec: 2246.799586964812
Mean loss per sample: 0.5890338673837207 Std loss per sample: 2.649097237291977 ratio: 4.497359802176277
Epoch ended with duration 0:00:11.461448
Train perplexity: 1.0829579220468943
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.06145283579826 Loss (std): 46.01818242288791 Loss ratio: 0.4741138843320039 Tokens per Sec: 4403.438721537085
Mean loss per sample: 102.42640793909791 Std loss per sample: 52.530606200888975 ratio: 0.5128619391995406
Epoch ended with duration 0:00:01.037328
b'BLEU = 2.09, 8.2/2.5/1.4/1.0 (BP=0.904, ratio=0.909, hyp_len=2829, ref_len=3113)\n'
Validation perplexity: 1067268.2515366008
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.09
Epoch 484 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.34591938698576996 Loss (std): 0.46115150772827807 Loss ratio: 1.3331184231869848 Tokens per Sec: 2897.4040982691513
Epoch Step: 10 / 67 Loss (mean): 0.4775460358869168 Loss (std): 1.0888369064447392 Loss ratio: 2.2800668932839314 Tokens per Sec: 2721.041696079628
Epoch Step: 15 / 67 Loss (mean): 0.4042939184582792 Loss (std): 0.7155539791610116 Loss ratio: 1.7698855869256727 Tokens per Sec: 3032.9354808875196
Epoch Step: 20 / 67 Loss (mean): 0.4507283556595212 Loss (std): 1.062474953039577 Loss ratio: 2.3572400974971437 Tokens per Sec: 2686.170477392914
Epoch Step: 25 / 67 Loss (mean): 0.3267751494386175 Loss (std): 0.6181125112068192 Loss ratio: 1.891552990699274 Tokens per Sec: 2318.300786511653
Epoch Step: 30 / 67 Loss (mean): 0.2683020585500344 Loss (std): 0.41485555100689075 Loss ratio: 1.5462257473866017 Tokens per Sec: 2846.427754175618
Epoch Step: 35 / 67 Loss (mean): 0.32866621807261254 Loss (std): 0.7921278555324909 Loss ratio: 2.4101286106547324 Tokens per Sec: 3023.322996006205
Epoch Step: 40 / 67 Loss (mean): 0.4248189187001117 Loss (std): 0.5674123471638369 Loss ratio: 1.3356569639130993 Tokens per Sec: 2478.6290142565335
Epoch Step: 45 / 67 Loss (mean): 0.2355269944819156 Loss (std): 0.32258319863350055 Loss ratio: 1.369623041906856 Tokens per Sec: 3139.168454227475
Epoch Step: 50 / 67 Loss (mean): 1.5112629129616835 Loss (std): 7.554693165943583 Loss ratio: 4.998927123235191 Tokens per Sec: 2838.9612883978843
Epoch Step: 55 / 67 Loss (mean): 0.2948890577245038 Loss (std): 0.5404984929312497 Loss ratio: 1.8328875852565656 Tokens per Sec: 2743.104362655617
Epoch Step: 60 / 67 Loss (mean): 0.3877360203623539 Loss (std): 0.5217747193734528 Loss ratio: 1.3456957619924883 Tokens per Sec: 3135.7851150242213
Epoch Step: 65 / 67 Loss (mean): 0.7364759388328821 Loss (std): 3.4895397545405826 Loss ratio: 4.73815853382878 Tokens per Sec: 2363.750324418138
Mean loss per sample: 0.5315951847180013 Std loss per sample: 2.6047029536418664 ratio: 4.899786582949581
Epoch ended with duration 0:00:11.440483
Train perplexity: 1.0745744005818796
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the daemon not active command during print[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.8207306265831 Loss (std): 43.88327359073952 Loss ratio: 0.45797264645950414 Tokens per Sec: 4434.800340299061
Mean loss per sample: 100.42419851406432 Std loss per sample: 52.27666568284355 ratio: 0.5205584555949655
Epoch ended with duration 0:00:01.019300
b'BLEU = 2.29, 8.4/2.5/1.5/1.1 (BP=0.940, ratio=0.942, hyp_len=2931, ref_len=3113)\n'
Validation perplexity: 813643.5630771203
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.29
Epoch 485 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.24781945186987286 Loss (std): 0.3427673516015181 Loss ratio: 1.3831333618698394 Tokens per Sec: 2594.617875821006
Epoch Step: 10 / 67 Loss (mean): 0.29119143307570994 Loss (std): 0.5131178368305103 Loss ratio: 1.7621323244667686 Tokens per Sec: 2728.8348199158945
Epoch Step: 15 / 67 Loss (mean): 0.7786533393009449 Loss (std): 1.219388611297436 Loss ratio: 1.5660224515214587 Tokens per Sec: 2683.2889595810407
Epoch Step: 20 / 67 Loss (mean): 0.2668669478916854 Loss (std): 0.3674639848787737 Loss ratio: 1.3769557743355991 Tokens per Sec: 2462.167867324077
Epoch Step: 25 / 67 Loss (mean): 0.2472780763200717 Loss (std): 0.6530085141497972 Loss ratio: 2.6407861298005098 Tokens per Sec: 2824.548440391717
Epoch Step: 30 / 67 Loss (mean): 1.2735727570179733 Loss (std): 5.209523398689043 Loss ratio: 4.090479613341418 Tokens per Sec: 2457.275701713906
Epoch Step: 35 / 67 Loss (mean): 0.28288440136020654 Loss (std): 0.49667556032824756 Loss ratio: 1.7557544987990106 Tokens per Sec: 3372.5754800550253
Epoch Step: 40 / 67 Loss (mean): 0.9923955658741761 Loss (std): 4.525468728559603 Loss ratio: 4.560146058868403 Tokens per Sec: 2525.8797873021977
Epoch Step: 45 / 67 Loss (mean): 0.3056930720777018 Loss (std): 0.49122663008095285 Loss ratio: 1.6069275850520148 Tokens per Sec: 2692.9791537980855
Epoch Step: 50 / 67 Loss (mean): 0.2649460871361953 Loss (std): 0.5682568937644138 Loss ratio: 2.1448019855915135 Tokens per Sec: 2665.475082246475
Epoch Step: 55 / 67 Loss (mean): 0.35330166877247393 Loss (std): 0.6122304123677906 Loss ratio: 1.7328828773861995 Tokens per Sec: 3651.924806567383
Epoch Step: 60 / 67 Loss (mean): 5.883407188317506 Loss (std): 14.32308526596688 Loss ratio: 2.434488181339509 Tokens per Sec: 3075.1138688503574
Epoch Step: 65 / 67 Loss (mean): 3.710728962010762 Loss (std): 17.984825667678464 Loss ratio: 4.846709595823696 Tokens per Sec: 2685.2548281961244
Mean loss per sample: 0.8768085535334387 Std loss per sample: 5.741643420021952 ratio: 6.548343303545321
Epoch ended with duration 0:00:11.550264
Train perplexity: 1.1259554307587458
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print enable shallow unit ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog method_1 extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.83949959278107 Loss (std): 44.28328774866895 Loss ratio: 0.4620567504716448 Tokens per Sec: 4290.641034549315
Mean loss per sample: 102.23103026581592 Std loss per sample: 50.8953047493492 ratio: 0.49784595359172085
Epoch ended with duration 0:00:01.035361
b'BLEU = 2.33, 7.7/2.5/1.6/1.2 (BP=0.944, ratio=0.945, hyp_len=2942, ref_len=3113)\n'
Validation perplexity: 1039380.8233575374
Validation accuracy: 0.0
Validation BLEU: 2.33
Model saved checkpoint_commit_msg_generator!
Epoch 486 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5844528356974479 Loss (std): 0.8560391585972704 Loss ratio: 1.4646847552304698 Tokens per Sec: 2684.791375905383
Epoch Step: 10 / 67 Loss (mean): 0.3856786449177889 Loss (std): 0.5004363626007572 Loss ratio: 1.2975475028113885 Tokens per Sec: 2652.3443969426094
Epoch Step: 15 / 67 Loss (mean): 0.3404710430877458 Loss (std): 0.5390350355929051 Loss ratio: 1.583203760015461 Tokens per Sec: 3226.328827284942
Epoch Step: 20 / 67 Loss (mean): 0.4570163653261261 Loss (std): 0.7649109433406263 Loss ratio: 1.6737058043748325 Tokens per Sec: 2562.271302529962
Epoch Step: 25 / 67 Loss (mean): 0.38046698873949936 Loss (std): 0.6177542623762571 Loss ratio: 1.6236737500483258 Tokens per Sec: 2955.2093841628216
Epoch Step: 30 / 67 Loss (mean): 0.4761409635611926 Loss (std): 0.9233962215519534 Loss ratio: 1.939333710432332 Tokens per Sec: 3302.2238073951203
Epoch Step: 35 / 67 Loss (mean): 0.33559256365515466 Loss (std): 0.542458095623349 Loss ratio: 1.6164187004476163 Tokens per Sec: 2989.050492120754
Epoch Step: 40 / 67 Loss (mean): 0.4469021504119155 Loss (std): 0.7008343359764639 Loss ratio: 1.5682053338308977 Tokens per Sec: 2439.595942894662
Epoch Step: 45 / 67 Loss (mean): 0.3835785659357498 Loss (std): 0.5636832984300556 Loss ratio: 1.469538051624276 Tokens per Sec: 2631.3175842808364
Epoch Step: 50 / 67 Loss (mean): 1.9199652432762377 Loss (std): 7.982467386452684 Loss ratio: 4.157610360087229 Tokens per Sec: 2661.585582536594
Epoch Step: 55 / 67 Loss (mean): 0.5971700328263978 Loss (std): 0.9766331843902267 Loss ratio: 1.6354356895101299 Tokens per Sec: 2592.943522684151
Epoch Step: 60 / 67 Loss (mean): 0.6088050987600582 Loss (std): 1.2061787847704522 Loss ratio: 1.9812231980761226 Tokens per Sec: 2529.523352903231
Epoch Step: 65 / 67 Loss (mean): 0.8765617544995621 Loss (std): 1.0341915611285988 Loss ratio: 1.1798273833188504 Tokens per Sec: 2979.8122780988124
Mean loss per sample: 0.9141581562823686 Std loss per sample: 4.911447787291747 ratio: 5.372645590414314
Epoch ended with duration 0:00:11.455429
Train perplexity: 1.131659724210504
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire to run[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.74485024809837 Loss (std): 44.86892143840759 Loss ratio: 0.46863012811802635 Tokens per Sec: 4300.2395447429035
Mean loss per sample: 102.04921694564038 Std loss per sample: 52.43252969379167 ratio: 0.5137964921545792
Epoch ended with duration 0:00:01.036021
b'BLEU = 2.83, 8.7/3.0/2.1/1.7 (BP=0.903, ratio=0.907, hyp_len=2824, ref_len=3113)\n'
Validation perplexity: 1014084.4768793967
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.83
Epoch 487 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.058523952523501 Loss (std): 3.555327174076459 Loss ratio: 1.7271245106077384 Tokens per Sec: 2478.829081922
Epoch Step: 10 / 67 Loss (mean): 0.9842677483547959 Loss (std): 2.7749601093006597 Loss ratio: 2.819314270877012 Tokens per Sec: 2359.965028547451
Epoch Step: 15 / 67 Loss (mean): 1.6676267261937028 Loss (std): 3.167613757078778 Loss ratio: 1.8994740893297752 Tokens per Sec: 2638.9300165762565
Epoch Step: 20 / 67 Loss (mean): 1.2770100982997974 Loss (std): 2.572023258250628 Loss ratio: 2.0140978224643664 Tokens per Sec: 2547.300891720001
Epoch Step: 25 / 67 Loss (mean): 0.9083964956225827 Loss (std): 1.3721541693078778 Loss ratio: 1.5105234068163726 Tokens per Sec: 2747.1346546520226
Epoch Step: 30 / 67 Loss (mean): 0.52065246058919 Loss (std): 0.8690852284975892 Loss ratio: 1.6692233193599038 Tokens per Sec: 2850.0428758514868
Epoch Step: 35 / 67 Loss (mean): 5.2096103245567065 Loss (std): 13.278335922607882 Loss ratio: 2.548815572638392 Tokens per Sec: 2850.6583012072083
Epoch Step: 40 / 67 Loss (mean): 0.7655304611544125 Loss (std): 1.2832786553300428 Loss ratio: 1.6763260516046234 Tokens per Sec: 2759.916240842369
Epoch Step: 45 / 67 Loss (mean): 0.9409764521551551 Loss (std): 1.2182881269549073 Loss ratio: 1.294706285332236 Tokens per Sec: 2741.4949792535217
Epoch Step: 50 / 67 Loss (mean): 5.017586045447388 Loss (std): 14.786775451942312 Loss ratio: 2.946989910687992 Tokens per Sec: 3343.7969312776722
Epoch Step: 55 / 67 Loss (mean): 0.7789248407643754 Loss (std): 1.564141881901324 Loss ratio: 2.00807805842525 Tokens per Sec: 2902.9280085314335
Epoch Step: 60 / 67 Loss (mean): 0.8741921910186647 Loss (std): 1.6718344892302166 Loss ratio: 1.9124335659897487 Tokens per Sec: 2989.5056681908823
Epoch Step: 65 / 67 Loss (mean): 0.8107753136719111 Loss (std): 1.3947051015660683 Loss ratio: 1.7202116024593843 Tokens per Sec: 2341.771379614407
Mean loss per sample: 1.4093293834562968 Std loss per sample: 6.4338880636834626 ratio: 4.5652124614791845
Epoch ended with duration 0:00:11.513518
Train perplexity: 1.2100744217541788
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) to ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add exceptions and index provider for sslcontext.tls[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.72059714794159 Loss (std): 44.59615099156805 Loss ratio: 0.4658992141747944 Tokens per Sec: 4422.440751788156
Mean loss per sample: 100.04203134311027 Std loss per sample: 51.73396269748576 ratio: 0.5171222735377673
Epoch ended with duration 0:00:01.021111
b'BLEU = 2.62, 8.3/3.1/1.8/1.4 (BP=0.920, ratio=0.923, hyp_len=2872, ref_len=3113)\n'
Validation perplexity: 772577.1620878199
Validation accuracy: 0.0
Validation BLEU: 2.62
Epoch 488 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.4836253660569128 Loss (std): 6.202898475910344 Loss ratio: 4.180906189542999 Tokens per Sec: 2867.27827268468
Epoch Step: 10 / 67 Loss (mean): 0.4983478506837855 Loss (std): 0.9060359483372622 Loss ratio: 1.818079373863228 Tokens per Sec: 2517.7582499720197
Epoch Step: 15 / 67 Loss (mean): 1.3135340528097004 Loss (std): 1.3834734172284853 Loss ratio: 1.0532451855885898 Tokens per Sec: 2850.21639497211
Epoch Step: 20 / 67 Loss (mean): 0.36644894004348316 Loss (std): 0.45072719153574664 Loss ratio: 1.2299863426600797 Tokens per Sec: 2816.936124264876
Epoch Step: 25 / 67 Loss (mean): 0.497108761464915 Loss (std): 0.7556801900025181 Loss ratio: 1.5201506160857567 Tokens per Sec: 3274.5501904720895
Epoch Step: 30 / 67 Loss (mean): 0.7263149556383723 Loss (std): 1.15296541586539 Loss ratio: 1.5874179746884411 Tokens per Sec: 2854.91360161792
Epoch Step: 35 / 67 Loss (mean): 0.501503325838712 Loss (std): 0.7309101263876729 Loss ratio: 1.4574382436353777 Tokens per Sec: 3111.125839660263
Epoch Step: 40 / 67 Loss (mean): 0.2796694032876985 Loss (std): 0.5436795371476109 Loss ratio: 1.9440079277757913 Tokens per Sec: 3160.077161883427
Epoch Step: 45 / 67 Loss (mean): 0.2936646999696677 Loss (std): 0.4375697365106681 Loss ratio: 1.49003178303645 Tokens per Sec: 2960.286049655947
Epoch Step: 50 / 67 Loss (mean): 0.7477239596628351 Loss (std): 1.0921845692785759 Loss ratio: 1.460678844330554 Tokens per Sec: 2412.5589572358463
Epoch Step: 55 / 67 Loss (mean): 0.2530293243471533 Loss (std): 0.35873156567868447 Loss ratio: 1.4177470006856159 Tokens per Sec: 2720.570947637144
Epoch Step: 60 / 67 Loss (mean): 0.8245463617859059 Loss (std): 1.3907179899497342 Loss ratio: 1.68664620257076 Tokens per Sec: 2705.2502480594444
Epoch Step: 65 / 67 Loss (mean): 0.4090363558898389 Loss (std): 0.8157430053634729 Loss ratio: 1.9943044025728796 Tokens per Sec: 2356.9485912028217
Mean loss per sample: 0.65109441448509 Std loss per sample: 2.9470183780445516 ratio: 4.526253508679175
Epoch ended with duration 0:00:11.455606
Train perplexity: 1.0920895598014
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options class )[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.9032646715641 Loss (std): 44.15761088740014 Loss ratio: 0.4604390793016782 Tokens per Sec: 4408.631904425284
Mean loss per sample: 100.37067408297882 Std loss per sample: 51.834700256431546 ratio: 0.5164327203140886
Epoch ended with duration 0:00:01.021713
b'BLEU = 2.60, 8.7/2.9/1.8/1.4 (BP=0.921, ratio=0.924, hyp_len=2876, ref_len=3113)\n'
Validation perplexity: 807763.1366066888
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.6
Epoch 489 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.4740782320222934 Loss (std): 0.712942481732693 Loss ratio: 1.503849857631023 Tokens per Sec: 3164.7341845126066
Epoch Step: 10 / 67 Loss (mean): 0.23493301180951676 Loss (std): 0.6186598164782122 Loss ratio: 2.6333456150463026 Tokens per Sec: 2751.178618397676
Epoch Step: 15 / 67 Loss (mean): 0.2875527884771145 Loss (std): 0.45117546785232016 Loss ratio: 1.5690178844787237 Tokens per Sec: 2462.307721989848
Epoch Step: 20 / 67 Loss (mean): 1.4042177400770015 Loss (std): 6.1254925810223755 Loss ratio: 4.362209938101536 Tokens per Sec: 2959.888444145858
Epoch Step: 25 / 67 Loss (mean): 0.4966115707247809 Loss (std): 1.0213404737320806 Loss ratio: 2.056618359176535 Tokens per Sec: 2436.8172487250663
Epoch Step: 30 / 67 Loss (mean): 0.39729734954744345 Loss (std): 1.032220489476347 Loss ratio: 2.5981056522328596 Tokens per Sec: 2604.3016426766508
Epoch Step: 35 / 67 Loss (mean): 0.29032706758152926 Loss (std): 0.44881403108045687 Loss ratio: 1.5458911041920729 Tokens per Sec: 3142.795936801277
Epoch Step: 40 / 67 Loss (mean): 0.2969637729765964 Loss (std): 0.5435259322592875 Loss ratio: 1.8302768947582122 Tokens per Sec: 2653.1904752812193
Epoch Step: 45 / 67 Loss (mean): 0.4145135178550845 Loss (std): 0.6147818319676354 Loss ratio: 1.4831406105857456 Tokens per Sec: 2665.410904376659
Epoch Step: 50 / 67 Loss (mean): 0.26874672030680813 Loss (std): 0.4061730066197031 Loss ratio: 1.5113598638748247 Tokens per Sec: 3203.178950761667
Epoch Step: 55 / 67 Loss (mean): 2.0224991122013307 Loss (std): 8.213138473333478 Loss ratio: 4.060886070992696 Tokens per Sec: 2651.4612888113743
Epoch Step: 60 / 67 Loss (mean): 0.5644223016424803 Loss (std): 0.9780405708171535 Loss ratio: 1.732817020112486 Tokens per Sec: 2703.5387708603716
Epoch Step: 65 / 67 Loss (mean): 1.7876510177338787 Loss (std): 6.34233064006913 Loss ratio: 3.5478572591360726 Tokens per Sec: 2643.416888402898
Mean loss per sample: 0.6604193417932092 Std loss per sample: 3.6925693189097375 ratio: 5.591249506538463
Epoch ended with duration 0:00:11.444876
Train perplexity: 1.0934682750708298
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow call log[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 96.29771265387535 Loss (std): 45.031268118655056 Loss ratio: 0.46762552170384125 Tokens per Sec: 4307.66141971667
Mean loss per sample: 102.76124749967798 Std loss per sample: 51.85520951349693 ratio: 0.5046183340043573
Epoch ended with duration 0:00:01.034586
b'BLEU = 2.76, 8.3/3.0/2.0/1.6 (BP=0.918, ratio=0.921, hyp_len=2868, ref_len=3113)\n'
Validation perplexity: 1116813.0140885345
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.76
Epoch 490 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.36741810495004756 Loss (std): 0.6397030113854865 Loss ratio: 1.741076454227691 Tokens per Sec: 2784.998538980773
Epoch Step: 10 / 67 Loss (mean): 0.4066022015576891 Loss (std): 0.9830044639521965 Loss ratio: 2.4176073326369507 Tokens per Sec: 3023.6949043206164
Epoch Step: 15 / 67 Loss (mean): 0.21553612490242813 Loss (std): 0.37281378276038046 Loss ratio: 1.7297043960920748 Tokens per Sec: 2964.266546374893
Epoch Step: 20 / 67 Loss (mean): 0.2501961630950973 Loss (std): 0.650704418441362 Loss ratio: 2.600776967926703 Tokens per Sec: 2314.7483146409386
Epoch Step: 25 / 67 Loss (mean): 0.38871510673925513 Loss (std): 0.7356032973587315 Loss ratio: 1.892396988450887 Tokens per Sec: 2506.0253991514855
Epoch Step: 30 / 67 Loss (mean): 0.2700743005334516 Loss (std): 0.39861810588489155 Loss ratio: 1.475957190660273 Tokens per Sec: 3080.8103853260936
Epoch Step: 35 / 67 Loss (mean): 0.6924438779678894 Loss (std): 1.043272425076337 Loss ratio: 1.5066526808468894 Tokens per Sec: 2896.365919105407
Epoch Step: 40 / 67 Loss (mean): 0.771648252819432 Loss (std): 1.3976924903078558 Loss ratio: 1.8113077884917081 Tokens per Sec: 3770.280870344909
Epoch Step: 45 / 67 Loss (mean): 1.6750920972432368 Loss (std): 5.419944353979134 Loss ratio: 3.2356097690980357 Tokens per Sec: 2664.893654986579
Epoch Step: 50 / 67 Loss (mean): 0.351466142328718 Loss (std): 0.5300433643931687 Loss ratio: 1.5080922471827505 Tokens per Sec: 2899.444354470765
Epoch Step: 55 / 67 Loss (mean): 1.058265209187084 Loss (std): 4.2849963088072345 Loss ratio: 4.0490760459741395 Tokens per Sec: 2294.690158148215
Epoch Step: 60 / 67 Loss (mean): 0.37679652830138366 Loss (std): 0.5737651373295521 Loss ratio: 1.5227452862055608 Tokens per Sec: 3061.941958823965
Epoch Step: 65 / 67 Loss (mean): 0.46892065424253815 Loss (std): 0.7859318755969308 Loss ratio: 1.6760444831897425 Tokens per Sec: 2577.083539199693
Mean loss per sample: 0.48838079805331264 Std loss per sample: 2.121988263444675 ratio: 4.3449461401900455
Epoch ended with duration 0:00:11.431192
Train perplexity: 1.068309809819081
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable libcore.java.io.fileinputstream time method_4[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 96.65579298138618 Loss (std): 44.79680167620911 Loss ratio: 0.4634673235243748 Tokens per Sec: 4163.284475834142
Mean loss per sample: 103.08091698391516 Std loss per sample: 52.59024303192627 ratio: 0.5101840822790944
Epoch ended with duration 0:00:01.052682
b'BLEU = 2.24, 8.2/2.4/1.6/1.2 (BP=0.902, ratio=0.907, hyp_len=2822, ref_len=3113)\n'
Validation perplexity: 1166257.6666379527
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.24
Model saved checkpoint_commit_msg_generator!
Epoch 491 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.7485158476993092 Loss (std): 1.2111140806457463 Loss ratio: 1.618020626240996 Tokens per Sec: 2912.3098473160826
Epoch Step: 10 / 67 Loss (mean): 0.38680522249705973 Loss (std): 0.7550563603353514 Loss ratio: 1.9520324866893204 Tokens per Sec: 2569.8870488572993
Epoch Step: 15 / 67 Loss (mean): 0.39096548830275424 Loss (std): 0.5577342236363898 Loss ratio: 1.4265561547583296 Tokens per Sec: 3310.3825874935696
Epoch Step: 20 / 67 Loss (mean): 0.3553263475987478 Loss (std): 0.613079269491665 Loss ratio: 1.725397718561486 Tokens per Sec: 2954.59800699175
Epoch Step: 25 / 67 Loss (mean): 0.468111021185905 Loss (std): 0.8947372246722324 Loss ratio: 1.9113782504105958 Tokens per Sec: 2780.8076642149786
Epoch Step: 30 / 67 Loss (mean): 0.2544436812167987 Loss (std): 0.5174284099451303 Loss ratio: 2.0335675363235115 Tokens per Sec: 2813.6770413314803
Epoch Step: 35 / 67 Loss (mean): 0.2566196395728184 Loss (std): 0.3899432953999767 Loss ratio: 1.5195380059339783 Tokens per Sec: 2327.3430826752533
Epoch Step: 40 / 67 Loss (mean): 0.5460977830334741 Loss (std): 0.8146314622229489 Loss ratio: 1.4917318610923833 Tokens per Sec: 2666.5870687735637
Epoch Step: 45 / 67 Loss (mean): 1.1725752480870142 Loss (std): 1.3455743157532283 Loss ratio: 1.1475377106488063 Tokens per Sec: 4025.816555384113
Epoch Step: 50 / 67 Loss (mean): 0.42919140569392766 Loss (std): 0.7185819433174518 Loss ratio: 1.6742691810327146 Tokens per Sec: 2415.68361626553
Epoch Step: 55 / 67 Loss (mean): 0.5480639935631189 Loss (std): 0.847699635573867 Loss ratio: 1.5467165249494537 Tokens per Sec: 2505.7818982805666
Epoch Step: 60 / 67 Loss (mean): 0.4625203442701604 Loss (std): 0.7421056002400345 Loss ratio: 1.6044820718341568 Tokens per Sec: 2678.034985764054
Epoch Step: 65 / 67 Loss (mean): 0.2637490086563048 Loss (std): 0.4471272288833352 Loss ratio: 1.695275486195261 Tokens per Sec: 2827.6761693273056
Mean loss per sample: 0.5842900967657937 Std loss per sample: 3.427550980449407 ratio: 5.866180172181326
Epoch ended with duration 0:00:11.426330
Train perplexity: 1.0822630692988198
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable print to apache-sshd ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.79702699184418 Loss (std): 43.396805310282176 Loss ratio: 0.453007850796631 Tokens per Sec: 4299.718309859155
Mean loss per sample: 102.49415725237522 Std loss per sample: 52.21142001340567 ratio: 0.5094087449769799
Epoch ended with duration 0:00:01.050195
b'BLEU = 2.83, 8.4/3.1/2.1/1.7 (BP=0.908, ratio=0.912, hyp_len=2839, ref_len=3113)\n'
Validation perplexity: 1077112.2241334582
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.83
Epoch 492 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.7149234548178356 Loss (std): 1.6586656008573213 Loss ratio: 2.320060406019206 Tokens per Sec: 2834.094442361167
Epoch Step: 10 / 67 Loss (mean): 0.2632059485758873 Loss (std): 0.6667905542043164 Loss ratio: 2.5333415061934588 Tokens per Sec: 2698.964925869442
Epoch Step: 15 / 67 Loss (mean): 2.801286417641677 Loss (std): 11.154535423972463 Loss ratio: 3.9819332124428564 Tokens per Sec: 2841.897666779361
Epoch Step: 20 / 67 Loss (mean): 0.402387919195462 Loss (std): 0.6017748972370845 Loss ratio: 1.495509354357056 Tokens per Sec: 2859.4982207052813
Epoch Step: 25 / 67 Loss (mean): 0.6864150472247275 Loss (std): 1.0976124008064259 Loss ratio: 1.5990506112070635 Tokens per Sec: 2905.130357972466
Epoch Step: 30 / 67 Loss (mean): 0.2644744069802982 Loss (std): 0.31802935727052833 Loss ratio: 1.2024957760628219 Tokens per Sec: 2776.0215791008986
Epoch Step: 35 / 67 Loss (mean): 0.35989957032870734 Loss (std): 0.60121981468139 Loss ratio: 1.6705210682309997 Tokens per Sec: 2606.2443183701726
Epoch Step: 40 / 67 Loss (mean): 0.30605128566821804 Loss (std): 0.4511291146453691 Loss ratio: 1.4740311044941208 Tokens per Sec: 2775.4540272634204
Epoch Step: 45 / 67 Loss (mean): 2.2007753159887216 Loss (std): 10.143993894335633 Loss ratio: 4.609281929254253 Tokens per Sec: 2594.343977470968
Epoch Step: 50 / 67 Loss (mean): 0.29817065960378386 Loss (std): 0.4199215258561702 Loss ratio: 1.408326112348451 Tokens per Sec: 3315.7858417068833
Epoch Step: 55 / 67 Loss (mean): 0.22151678757654736 Loss (std): 0.3276287070890386 Loss ratio: 1.4790242792583979 Tokens per Sec: 2620.680585501849
Epoch Step: 60 / 67 Loss (mean): 0.36038511656624905 Loss (std): 0.5203126199697325 Loss ratio: 1.443768335738372 Tokens per Sec: 2303.359233959706
Epoch Step: 65 / 67 Loss (mean): 0.2740756864677678 Loss (std): 0.5524738565599399 Loss ratio: 2.0157711312525075 Tokens per Sec: 3332.3205584631837
Mean loss per sample: 0.6784526509495832 Std loss per sample: 4.167201706425557 ratio: 6.142214494398412
Epoch ended with duration 0:00:11.441407
Train perplexity: 1.0961394874668744
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during switch cases[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.92868265509605 Loss (std): 43.833495480361 Loss ratio: 0.45693836574365193 Tokens per Sec: 4272.533460668312
Mean loss per sample: 102.04943559074499 Std loss per sample: 51.93450480203253 ratio: 0.5089151596125294
Epoch ended with duration 0:00:01.036750
b'BLEU = 2.53, 8.2/2.8/1.8/1.4 (BP=0.922, ratio=0.925, hyp_len=2880, ref_len=3113)\n'
Validation perplexity: 1014114.524980211
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.53
Epoch 493 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5432624608365586 Loss (std): 1.018126513840178 Loss ratio: 1.8740969369987135 Tokens per Sec: 2928.213194560033
Epoch Step: 10 / 67 Loss (mean): 3.617655780055429 Loss (std): 13.184407223186385 Loss ratio: 3.6444615034613315 Tokens per Sec: 2340.873230732999
Epoch Step: 15 / 67 Loss (mean): 0.373723960317875 Loss (std): 0.9037728229659028 Loss ratio: 2.4182897510697168 Tokens per Sec: 2345.822190064049
Epoch Step: 20 / 67 Loss (mean): 0.3696222964063054 Loss (std): 0.7595686332558882 Loss ratio: 2.0549859698424044 Tokens per Sec: 2728.3393598230186
Epoch Step: 25 / 67 Loss (mean): 0.3289385810294334 Loss (std): 0.5794085309468647 Loss ratio: 1.7614489888463989 Tokens per Sec: 2906.670986133496
Epoch Step: 30 / 67 Loss (mean): 0.41485063121581334 Loss (std): 0.8218172061691695 Loss ratio: 1.9809954338520563 Tokens per Sec: 2440.757240853377
Epoch Step: 35 / 67 Loss (mean): 5.828445111426845 Loss (std): 16.059248901448722 Loss ratio: 2.7553230054382896 Tokens per Sec: 3444.0363598696904
Epoch Step: 40 / 67 Loss (mean): 0.6230727678012045 Loss (std): 2.1069948207142106 Loss ratio: 3.381619177724136 Tokens per Sec: 3281.3830453476535
Epoch Step: 45 / 67 Loss (mean): 0.36579383023490664 Loss (std): 0.5974004155817024 Loss ratio: 1.6331615412924323 Tokens per Sec: 2944.2462148006775
Epoch Step: 50 / 67 Loss (mean): 0.4282923832979577 Loss (std): 1.7546012736415098 Loss ratio: 4.096737047086021 Tokens per Sec: 2568.1162316969653
Epoch Step: 55 / 67 Loss (mean): 0.30090293638932053 Loss (std): 0.8233004931425119 Loss ratio: 2.736099896603508 Tokens per Sec: 2738.7054634474976
Epoch Step: 60 / 67 Loss (mean): 0.2646674405714293 Loss (std): 0.3366637157249382 Loss ratio: 1.2720254331173702 Tokens per Sec: 3080.277373495769
Epoch Step: 65 / 67 Loss (mean): 0.39042605323629687 Loss (std): 0.8184782644589984 Loss ratio: 2.096372047086807 Tokens per Sec: 2548.3730931138407
Mean loss per sample: 0.8703903573994798 Std loss per sample: 5.2867495243919995 ratio: 6.073998269222048
Epoch ended with duration 0:00:11.463255
Train perplexity: 1.1249780978733044
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable print creation on sim ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 95.92298939824104 Loss (std): 43.789191123993795 Loss ratio: 0.45650361189428035 Tokens per Sec: 4388.482866631279
Mean loss per sample: 100.86299805801178 Std loss per sample: 51.85672697397103 ratio: 0.514130334933584
Epoch ended with duration 0:00:01.037162
b'BLEU = 2.59, 8.5/2.9/1.8/1.4 (BP=0.925, ratio=0.928, hyp_len=2888, ref_len=3113)\n'
Validation perplexity: 863494.5488851635
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.59
Epoch 494 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.20495278581074672 Loss (std): 0.3812875419532636 Loss ratio: 1.8603676961256057 Tokens per Sec: 2827.2737544489355
Epoch Step: 10 / 67 Loss (mean): 0.1793889419423067 Loss (std): 0.25184340493358576 Loss ratio: 1.4038959269550804 Tokens per Sec: 2660.731072356792
Epoch Step: 15 / 67 Loss (mean): 0.5011811100848718 Loss (std): 0.9426193166368052 Loss ratio: 1.8807957795479937 Tokens per Sec: 2645.934251661991
Epoch Step: 20 / 67 Loss (mean): 0.19263719035188842 Loss (std): 0.36526710507718224 Loss ratio: 1.896140119205188 Tokens per Sec: 2550.54754214108
Epoch Step: 25 / 67 Loss (mean): 0.24938057934741664 Loss (std): 0.5246713862267128 Loss ratio: 2.103898337230918 Tokens per Sec: 2593.8454329417277
Epoch Step: 30 / 67 Loss (mean): 0.7196201648839633 Loss (std): 1.30444228064326 Loss ratio: 1.81268166777066 Tokens per Sec: 3313.186205062512
Epoch Step: 35 / 67 Loss (mean): 0.32304920624301303 Loss (std): 0.5729271366441198 Loss ratio: 1.77349804788914 Tokens per Sec: 2445.1072682155263
Epoch Step: 40 / 67 Loss (mean): 0.3051949857394902 Loss (std): 0.7106497272493478 Loss ratio: 2.3285104947823343 Tokens per Sec: 2645.683661472854
Epoch Step: 45 / 67 Loss (mean): 0.2889215379836969 Loss (std): 0.49551767811994263 Loss ratio: 1.7150596718334767 Tokens per Sec: 2766.716139309905
Epoch Step: 50 / 67 Loss (mean): 0.47622682070868905 Loss (std): 1.1407937012045282 Loss ratio: 2.3954839408391044 Tokens per Sec: 2275.385856131867
Epoch Step: 55 / 67 Loss (mean): 0.455903404574201 Loss (std): 0.7749726017174302 Loss ratio: 1.6998614047228482 Tokens per Sec: 2907.833240638461
Epoch Step: 60 / 67 Loss (mean): 0.42945573445467744 Loss (std): 0.9026196989268142 Loss ratio: 2.1017758677106966 Tokens per Sec: 3276.3125522628507
Epoch Step: 65 / 67 Loss (mean): 0.7801254754158435 Loss (std): 1.3815718907523977 Loss ratio: 1.7709611264982148 Tokens per Sec: 3103.8740770495606
Mean loss per sample: 0.6433205428706392 Std loss per sample: 3.60460948772525 ratio: 5.6031313280323385
Epoch ended with duration 0:00:11.406419
Train perplexity: 1.0909415010230146
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to deprecated ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.74561485648155 Loss (std): 44.31531290179572 Loss ratio: 0.45337392339148147 Tokens per Sec: 4417.267669220742
Mean loss per sample: 102.9315255418664 Std loss per sample: 51.88041314306838 ratio: 0.5040284098574496
Epoch ended with duration 0:00:01.036772
b'BLEU = 2.63, 8.3/2.9/1.8/1.4 (BP=0.943, ratio=0.945, hyp_len=2941, ref_len=3113)\n'
Validation perplexity: 1142883.9294956631
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.63
Epoch 495 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2566524483845569 Loss (std): 0.5045627894726381 Loss ratio: 1.965937954804246 Tokens per Sec: 2587.3862627984813
Epoch Step: 10 / 67 Loss (mean): 0.17474945811045473 Loss (std): 0.21197015624096044 Loss ratio: 1.2129946412021457 Tokens per Sec: 3145.557349521964
Epoch Step: 15 / 67 Loss (mean): 0.2536044364023837 Loss (std): 0.4309588653746271 Loss ratio: 1.6993348834436097 Tokens per Sec: 2426.0719571870127
Epoch Step: 20 / 67 Loss (mean): 0.31598806250622147 Loss (std): 1.1425097406173428 Loss ratio: 3.615673742721999 Tokens per Sec: 2473.8013570610356
Epoch Step: 25 / 67 Loss (mean): 0.18829903961704986 Loss (std): 0.38470611590141796 Loss ratio: 2.043059362829507 Tokens per Sec: 2796.86485273772
Epoch Step: 30 / 67 Loss (mean): 0.6523941017512698 Loss (std): 1.168587932211064 Loss ratio: 1.791230069484284 Tokens per Sec: 3088.0146123615364
Epoch Step: 35 / 67 Loss (mean): 0.2019572087083361 Loss (std): 0.39145202009650937 Loss ratio: 1.938291891634525 Tokens per Sec: 2443.019916355872
Epoch Step: 40 / 67 Loss (mean): 0.31579338533992996 Loss (std): 0.56132925496713 Loss ratio: 1.7775206227416624 Tokens per Sec: 3467.391981817586
Epoch Step: 45 / 67 Loss (mean): 0.5501720792090055 Loss (std): 0.8099902141041799 Loss ratio: 1.4722488557920292 Tokens per Sec: 2783.8352060090333
Epoch Step: 50 / 67 Loss (mean): 0.29270180645289656 Loss (std): 0.48015980301119354 Loss ratio: 1.6404401764034344 Tokens per Sec: 2402.5049272766096
Epoch Step: 55 / 67 Loss (mean): 0.43336364244714787 Loss (std): 0.8101892659463091 Loss ratio: 1.8695367737156634 Tokens per Sec: 2945.4619269472078
Epoch Step: 60 / 67 Loss (mean): 0.2639065410985495 Loss (std): 0.5249011182357365 Loss ratio: 1.9889659272966822 Tokens per Sec: 3133.673897107033
Epoch Step: 65 / 67 Loss (mean): 7.334303631687362 Loss (std): 17.243644895176182 Loss ratio: 2.3510950406629174 Tokens per Sec: 2690.1659913832614
Mean loss per sample: 0.5637892933937596 Std loss per sample: 3.206376994739027 ratio: 5.687190289546065
Epoch ended with duration 0:00:11.404280
Train perplexity: 1.0792652984915716
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.19784969091415 Loss (std): 44.66882418959235 Loss ratio: 0.45956597117773373 Tokens per Sec: 4444.500493171135
Mean loss per sample: 100.92797332647882 Std loss per sample: 52.7367145711626 ratio: 0.5225183151213335
Epoch ended with duration 0:00:01.015596
b'BLEU = 2.63, 8.5/3.0/1.9/1.5 (BP=0.898, ratio=0.903, hyp_len=2811, ref_len=3113)\n'
Validation perplexity: 871131.4617577835
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.63
Model saved checkpoint_commit_msg_generator!
Epoch 496 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.052260601441958 Loss (std): 4.171825335205477 Loss ratio: 3.964631318029626 Tokens per Sec: 2606.8730212365867
Epoch Step: 10 / 67 Loss (mean): 0.22978560625233513 Loss (std): 0.756837167869003 Loss ratio: 3.2936665625517696 Tokens per Sec: 2482.9645393501164
Epoch Step: 15 / 67 Loss (mean): 0.26509741552945343 Loss (std): 0.48854830974058794 Loss ratio: 1.8429010662546734 Tokens per Sec: 2692.733421296205
Epoch Step: 20 / 67 Loss (mean): 2.4894942032206018 Loss (std): 11.217525152679777 Loss ratio: 4.505945480077005 Tokens per Sec: 2875.4992215416983
Epoch Step: 25 / 67 Loss (mean): 0.5104662180820014 Loss (std): 0.8536097764137672 Loss ratio: 1.6722159981929365 Tokens per Sec: 2896.5321885332646
Epoch Step: 30 / 67 Loss (mean): 0.241012175418291 Loss (std): 0.32259825871022796 Loss ratio: 1.338514364057913 Tokens per Sec: 3318.0466027558728
Epoch Step: 35 / 67 Loss (mean): 0.3041073410804529 Loss (std): 0.8774743943583915 Loss ratio: 2.885410103027575 Tokens per Sec: 2710.453417589966
Epoch Step: 40 / 67 Loss (mean): 3.421195080205507 Loss (std): 11.017574290454673 Loss ratio: 3.220387622500866 Tokens per Sec: 2670.242753093605
Epoch Step: 45 / 67 Loss (mean): 0.689773265949043 Loss (std): 1.323631296862691 Loss ratio: 1.918936790108178 Tokens per Sec: 2695.989172219798
Epoch Step: 50 / 67 Loss (mean): 0.2082057730658562 Loss (std): 0.28321830501373696 Loss ratio: 1.3602807493918723 Tokens per Sec: 3229.4967692199216
Epoch Step: 55 / 67 Loss (mean): 0.17997397385624936 Loss (std): 0.26150738616370245 Loss ratio: 1.4530289050158791 Tokens per Sec: 2509.9501121234252
Epoch Step: 60 / 67 Loss (mean): 0.16884225872672687 Loss (std): 0.23125896119045866 Loss ratio: 1.3696746474160473 Tokens per Sec: 2758.02697659891
Epoch Step: 65 / 67 Loss (mean): 3.0666636123551143 Loss (std): 10.103322233016529 Loss ratio: 3.29456487901438 Tokens per Sec: 2824.2313900078548
Mean loss per sample: 0.570730451392128 Std loss per sample: 3.07297155107382 ratio: 5.384278241292742
Epoch ended with duration 0:00:11.455574
Train perplexity: 1.080279352230981
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length ([0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 96.62106114625931 Loss (std): 43.18981310442955 Loss ratio: 0.44700205723316716 Tokens per Sec: 4283.602290259716
Mean loss per sample: 102.03532802130356 Std loss per sample: 52.988025996172425 ratio: 0.5193105860855297
Epoch ended with duration 0:00:01.039512
b'BLEU = 2.39, 7.8/2.6/1.7/1.3 (BP=0.927, ratio=0.929, hyp_len=2893, ref_len=3113)\n'
Validation perplexity: 1012177.5642396765
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.39
Epoch 497 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.21547935714988853 Loss (std): 0.394623012429933 Loss ratio: 1.8313727015411096 Tokens per Sec: 2868.660751963517
Epoch Step: 10 / 67 Loss (mean): 0.9567544502424425 Loss (std): 1.3851005910967227 Loss ratio: 1.447707497723932 Tokens per Sec: 3353.592629189911
Epoch Step: 15 / 67 Loss (mean): 0.5967886817816179 Loss (std): 1.1003503043379408 Loss ratio: 1.8437854770519768 Tokens per Sec: 2766.801199355674
Epoch Step: 20 / 67 Loss (mean): 0.7440718103134714 Loss (std): 2.498442971489562 Loss ratio: 3.3577981813838482 Tokens per Sec: 2816.785216510151
Epoch Step: 25 / 67 Loss (mean): 0.27789812944502046 Loss (std): 0.5202392879672141 Loss ratio: 1.8720503409150817 Tokens per Sec: 2325.077529037465
Epoch Step: 30 / 67 Loss (mean): 0.48407668351137545 Loss (std): 0.8745979033450696 Loss ratio: 1.8067342078964586 Tokens per Sec: 2699.350755818147
Epoch Step: 35 / 67 Loss (mean): 0.24200755095625937 Loss (std): 0.42806110491858407 Loss ratio: 1.7687923505988132 Tokens per Sec: 2381.491838267359
Epoch Step: 40 / 67 Loss (mean): 0.5683625455349102 Loss (std): 1.9022413791684412 Loss ratio: 3.346880251192768 Tokens per Sec: 2785.945650805721
Epoch Step: 45 / 67 Loss (mean): 0.2573734780853556 Loss (std): 0.6183029017480692 Loss ratio: 2.4023567088098123 Tokens per Sec: 2684.199055248584
Epoch Step: 50 / 67 Loss (mean): 0.1406597830077988 Loss (std): 0.23448949281617323 Loss ratio: 1.667068495357853 Tokens per Sec: 2867.515002698529
Epoch Step: 55 / 67 Loss (mean): 0.4453417901413559 Loss (std): 0.9967271119293777 Loss ratio: 2.2381171809926186 Tokens per Sec: 2830.5747781417153
Epoch Step: 60 / 67 Loss (mean): 0.5441887712659081 Loss (std): 0.9080274120905977 Loss ratio: 1.6685890265216559 Tokens per Sec: 3167.1921200133324
Epoch Step: 65 / 67 Loss (mean): 0.2524682320508873 Loss (std): 0.507811936932934 Loss ratio: 2.011389444160166 Tokens per Sec: 2458.0212099793885
Mean loss per sample: 0.7341330810941767 Std loss per sample: 4.429550239478912 ratio: 6.0337156212562455
Epoch ended with duration 0:00:11.448543
Train perplexity: 1.1044284886365034
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd # method_1 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.32653474807739 Loss (std): 43.821014946676634 Loss ratio: 0.4502473560792452 Tokens per Sec: 4419.658397510638
Mean loss per sample: 102.5703441459136 Std loss per sample: 52.356769672178956 ratio: 0.51044744080899
Epoch ended with duration 0:00:01.037095
b'BLEU = 2.70, 8.8/3.1/1.9/1.5 (BP=0.903, ratio=0.907, hyp_len=2824, ref_len=3113)\n'
Validation perplexity: 1088290.6802930047
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.7
Epoch 498 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.21035818250311422 Loss (std): 0.2809232557644355 Loss ratio: 1.335452001066213 Tokens per Sec: 2336.8187119854397
Epoch Step: 10 / 67 Loss (mean): 0.2477487696614844 Loss (std): 0.3585242438121557 Loss ratio: 1.447128251341192 Tokens per Sec: 2670.937657458311
Epoch Step: 15 / 67 Loss (mean): 0.3192618355878949 Loss (std): 0.5004883028399392 Loss ratio: 1.5676421264644125 Tokens per Sec: 2421.6151270929554
Epoch Step: 20 / 67 Loss (mean): 0.4334056342631811 Loss (std): 0.9253646408972745 Loss ratio: 2.135100625700118 Tokens per Sec: 2942.3135955076414
Epoch Step: 25 / 67 Loss (mean): 0.4036458447644691 Loss (std): 0.6280591194000325 Loss ratio: 1.5559657743200863 Tokens per Sec: 2642.0524684139127
Epoch Step: 30 / 67 Loss (mean): 1.9591611215364537 Loss (std): 7.591097272297507 Loss ratio: 3.8746671669067525 Tokens per Sec: 2925.150184419186
Epoch Step: 35 / 67 Loss (mean): 0.462375102306396 Loss (std): 0.992566839949582 Loss ratio: 2.1466701710332377 Tokens per Sec: 3307.0199153191534
Epoch Step: 40 / 67 Loss (mean): 0.3886122563353638 Loss (std): 0.5850072844761347 Loss ratio: 1.5053752807304317 Tokens per Sec: 2875.394685713002
Epoch Step: 45 / 67 Loss (mean): 0.248621477641791 Loss (std): 0.3283868016130106 Loss ratio: 1.3208303833112276 Tokens per Sec: 3240.1826126852707
Epoch Step: 50 / 67 Loss (mean): 0.7347690676251659 Loss (std): 1.293994590633625 Loss ratio: 1.7610901814578586 Tokens per Sec: 3322.0891392706144
Epoch Step: 55 / 67 Loss (mean): 1.1398462909201044 Loss (std): 1.800268720822122 Loss ratio: 1.579396042398763 Tokens per Sec: 2533.6924634017205
Epoch Step: 60 / 67 Loss (mean): 0.15934346981157432 Loss (std): 0.2823072907709475 Loss ratio: 1.7716903686406444 Tokens per Sec: 2652.2181987984495
Epoch Step: 65 / 67 Loss (mean): 0.6520422689427505 Loss (std): 0.9991804398054621 Loss ratio: 1.5323859930516106 Tokens per Sec: 2775.4612050271007
Mean loss per sample: 0.5431201338919159 Std loss per sample: 2.6401773910418225 ratio: 4.861129658594526
Epoch ended with duration 0:00:11.417887
Train perplexity: 1.0762513155294184
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to deprecated statement[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 114.84070807695389 Loss (std): 45.522210998198666 Loss ratio: 0.3963943775729298 Tokens per Sec: 4321.497354202495
Mean loss per sample: 102.87095216185342 Std loss per sample: 52.5866791361098 ratio: 0.5111907494874921
Epoch ended with duration 0:00:01.036491
b'BLEU = 2.58, 8.1/2.8/1.8/1.5 (BP=0.923, ratio=0.925, hyp_len=2881, ref_len=3113)\n'
Validation perplexity: 1133540.6499994693
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.58
Epoch 499 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2141338491164788 Loss (std): 0.4135244874033428 Loss ratio: 1.9311495548674549 Tokens per Sec: 2611.6518669382212
Epoch Step: 10 / 67 Loss (mean): 0.31751886358142656 Loss (std): 0.5873976795746588 Loss ratio: 1.849961520235861 Tokens per Sec: 2935.1255232274393
Epoch Step: 15 / 67 Loss (mean): 0.25440136338329467 Loss (std): 0.5066693798788547 Loss ratio: 1.991614247426338 Tokens per Sec: 2315.0147383253206
Epoch Step: 20 / 67 Loss (mean): 0.26916103719486273 Loss (std): 0.4497587605185171 Loss ratio: 1.6709653269500082 Tokens per Sec: 2873.6162973682626
Epoch Step: 25 / 67 Loss (mean): 0.3453250866587041 Loss (std): 0.9890444766182278 Loss ratio: 2.864096802777993 Tokens per Sec: 2698.687822051131
Epoch Step: 30 / 67 Loss (mean): 0.2727206468262011 Loss (std): 0.4802747328430687 Loss ratio: 1.7610501384192494 Tokens per Sec: 2824.9344026570393
Epoch Step: 35 / 67 Loss (mean): 0.30692792222544085 Loss (std): 0.6536964411002733 Loss ratio: 2.129804406065501 Tokens per Sec: 2708.7967467071558
Epoch Step: 40 / 67 Loss (mean): 0.32106051690425375 Loss (std): 0.4712977060370418 Loss ratio: 1.467940407563698 Tokens per Sec: 2739.577512495353
Epoch Step: 45 / 67 Loss (mean): 0.3328918305269326 Loss (std): 0.8915446635620214 Loss ratio: 2.678181264318804 Tokens per Sec: 2747.7518795827623
Epoch Step: 50 / 67 Loss (mean): 0.34471515464747426 Loss (std): 0.6173588130967202 Loss ratio: 1.7909244916373555 Tokens per Sec: 3076.852536405749
Epoch Step: 55 / 67 Loss (mean): 0.2254732786786917 Loss (std): 0.4372643360651117 Loss ratio: 1.9393177702810211 Tokens per Sec: 2811.729891018522
Epoch Step: 60 / 67 Loss (mean): 0.33531108146416955 Loss (std): 1.1410560440386208 Loss ratio: 3.4029774353298583 Tokens per Sec: 2732.915377488113
Epoch Step: 65 / 67 Loss (mean): 0.27927852693483146 Loss (std): 0.7510808175150142 Loss ratio: 2.689361139785287 Tokens per Sec: 2841.3074853693834
Mean loss per sample: 0.5399696324148338 Std loss per sample: 3.0484155638304777 ratio: 5.6455314907200576
Epoch ended with duration 0:00:11.391399
Train perplexity: 1.0757926483075029
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to deprecated statement[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 96.18560680747032 Loss (std): 44.25135094333059 Loss ratio: 0.460062086335913 Tokens per Sec: 4293.5968015039625
Mean loss per sample: 102.65125871681776 Std loss per sample: 53.205876720568455 ratio: 0.518316846628706
Epoch ended with duration 0:00:01.037385
b'BLEU = 2.21, 7.7/2.5/1.5/1.1 (BP=0.918, ratio=0.921, hyp_len=2867, ref_len=3113)\n'
Validation perplexity: 1100289.8617921846
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.21
Epoch 500 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.424340558663971 Loss (std): 0.838806685124754 Loss ratio: 1.9767299354219696 Tokens per Sec: 2880.9748180507227
Epoch Step: 10 / 67 Loss (mean): 0.25568231125726015 Loss (std): 0.4257821054651836 Loss ratio: 1.6652779121539383 Tokens per Sec: 2825.805452431928
Epoch Step: 15 / 67 Loss (mean): 0.18010461797530297 Loss (std): 0.2456391329515591 Loss ratio: 1.3638691540116012 Tokens per Sec: 2689.219856063962
Epoch Step: 20 / 67 Loss (mean): 0.37009977728666854 Loss (std): 0.8104111940644343 Loss ratio: 2.1897100290247224 Tokens per Sec: 2966.556613073664
Epoch Step: 25 / 67 Loss (mean): 0.7051445370270812 Loss (std): 1.1266952566351311 Loss ratio: 1.597821719480839 Tokens per Sec: 2374.716099440794
Epoch Step: 30 / 67 Loss (mean): 0.1129722768812263 Loss (std): 0.16828630595683175 Loss ratio: 1.4896248053295411 Tokens per Sec: 2268.87647358636
Epoch Step: 35 / 67 Loss (mean): 0.6084351174795302 Loss (std): 0.999894748568216 Loss ratio: 1.6433876346755345 Tokens per Sec: 2741.501151503082
Epoch Step: 40 / 67 Loss (mean): 0.29551916310811066 Loss (std): 0.6312618047821554 Loss ratio: 2.1361112360460326 Tokens per Sec: 3017.3321395374937
Epoch Step: 45 / 67 Loss (mean): 0.47570572108088527 Loss (std): 1.465170344947265 Loss ratio: 3.0799931134276584 Tokens per Sec: 3222.3113057209334
Epoch Step: 50 / 67 Loss (mean): 0.584756288153585 Loss (std): 0.8457037249828813 Loss ratio: 1.446249902935219 Tokens per Sec: 2926.803803554752
Epoch Step: 55 / 67 Loss (mean): 0.33146862961075385 Loss (std): 0.5369646285518871 Loss ratio: 1.6199561001668508 Tokens per Sec: 3070.776378218309
Epoch Step: 60 / 67 Loss (mean): 0.7203474305279087 Loss (std): 1.0655489038316306 Loss ratio: 1.4792152490232942 Tokens per Sec: 2631.402764478155
Epoch Step: 65 / 67 Loss (mean): 0.17323903248507122 Loss (std): 0.21499415680630624 Loss ratio: 1.2410260766425907 Tokens per Sec: 2589.621932785925
Mean loss per sample: 0.5249834517929571 Std loss per sample: 3.052630463624011 ratio: 5.814717498615378
Epoch ended with duration 0:00:11.435623
Train perplexity: 1.0736135531472641
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) return[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 96.7901900112629 Loss (std): 44.99842688212386 Loss ratio: 0.4649068968341488 Tokens per Sec: 4271.402364951274
Mean loss per sample: 102.8130413307274 Std loss per sample: 53.49674146309524 ratio: 0.5203303080103209
Epoch ended with duration 0:00:01.037496
b'BLEU = 2.39, 7.8/2.6/1.7/1.3 (BP=0.924, ratio=0.927, hyp_len=2885, ref_len=3113)\n'
Validation perplexity: 1124679.4905725673
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.39
Model saved checkpoint_commit_msg_generator!
Epoch 501 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6889937085370548 Loss (std): 0.9244903721362704 Loss ratio: 1.3417979884014433 Tokens per Sec: 2817.418074093625
Epoch Step: 10 / 67 Loss (mean): 1.1570301479805494 Loss (std): 1.690426539948281 Loss ratio: 1.4610047481465438 Tokens per Sec: 3592.4199969593897
Epoch Step: 15 / 67 Loss (mean): 0.3386754208513594 Loss (std): 0.7153954253960981 Loss ratio: 2.112333465468924 Tokens per Sec: 2431.6270197131034
Epoch Step: 20 / 67 Loss (mean): 0.34526785194611875 Loss (std): 0.8031619173283593 Loss ratio: 2.3261995369719446 Tokens per Sec: 2442.4894667044987
Epoch Step: 25 / 67 Loss (mean): 0.08450055805345376 Loss (std): 0.11905978858724223 Loss ratio: 1.4089822757374788 Tokens per Sec: 2103.1847934813018
Epoch Step: 30 / 67 Loss (mean): 0.43834790645632893 Loss (std): 0.8238771037562902 Loss ratio: 1.8795050498053882 Tokens per Sec: 2965.0901066030306
Epoch Step: 35 / 67 Loss (mean): 0.2238048024755699 Loss (std): 0.48432378469087983 Loss ratio: 2.1640455402816823 Tokens per Sec: 2904.7356013534777
Epoch Step: 40 / 67 Loss (mean): 0.22938540813538566 Loss (std): 0.44262405535372257 Loss ratio: 1.9296085960815834 Tokens per Sec: 2472.380051628859
Epoch Step: 45 / 67 Loss (mean): 0.34781431591909495 Loss (std): 0.49952668634310554 Loss ratio: 1.436187826320813 Tokens per Sec: 3006.139329915312
Epoch Step: 50 / 67 Loss (mean): 0.23661799177170906 Loss (std): 0.5077058972464432 Loss ratio: 2.145677483968683 Tokens per Sec: 3072.5867585503
Epoch Step: 55 / 67 Loss (mean): 0.17793830012669787 Loss (std): 0.32725309196637964 Loss ratio: 1.8391380143193723 Tokens per Sec: 2752.9774613258546
Epoch Step: 60 / 67 Loss (mean): 0.3094691716542002 Loss (std): 0.5489861405702714 Loss ratio: 1.7739606747767 Tokens per Sec: 2712.9289083394783
Epoch Step: 65 / 67 Loss (mean): 0.2583021630634903 Loss (std): 0.5055131238187646 Loss ratio: 1.9570611326801401 Tokens per Sec: 2718.2668147588884
Mean loss per sample: 0.5577512216948883 Std loss per sample: 3.2653358855391503 ratio: 5.854466576723011
Epoch ended with duration 0:00:11.442191
Train perplexity: 1.078383953434155
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shader activities regarding hooks ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.0910519361496 Loss (std): 45.164378639032044 Loss ratio: 0.46517550009380565 Tokens per Sec: 4423.154489605156
Mean loss per sample: 101.36410919717345 Std loss per sample: 52.133526280003046 ratio: 0.5143193847695432
Epoch ended with duration 0:00:01.023000
b'BLEU = 2.85, 8.7/3.0/2.0/1.6 (BP=0.931, ratio=0.934, hyp_len=2906, ref_len=3113)\n'
Validation perplexity: 924171.0003723539
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.85
Epoch 502 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.18074144349156995 Loss (std): 0.42535455956664364 Loss ratio: 2.35338697837988 Tokens per Sec: 2377.9469649540933
Epoch Step: 10 / 67 Loss (mean): 0.17503031851083506 Loss (std): 0.27902279994685664 Loss ratio: 1.594139817151644 Tokens per Sec: 2651.2463818796873
Epoch Step: 15 / 67 Loss (mean): 0.44712946913568885 Loss (std): 1.4415056373709363 Loss ratio: 3.2239110523343464 Tokens per Sec: 2763.289917014659
Epoch Step: 20 / 67 Loss (mean): 0.44442554521629063 Loss (std): 0.7948204036189873 Loss ratio: 1.7884219576806017 Tokens per Sec: 2803.613271870345
Epoch Step: 25 / 67 Loss (mean): 0.27132153323691455 Loss (std): 0.6786156291701901 Loss ratio: 2.5011491755710797 Tokens per Sec: 2651.6779248302887
Epoch Step: 30 / 67 Loss (mean): 0.4045011782000074 Loss (std): 0.8479767222009209 Loss ratio: 2.096351674361836 Tokens per Sec: 2789.4232788505806
Epoch Step: 35 / 67 Loss (mean): 0.9831387746962719 Loss (std): 1.3608701431400048 Loss ratio: 1.3842096132973987 Tokens per Sec: 3035.022059052627
Epoch Step: 40 / 67 Loss (mean): 0.22386300677135296 Loss (std): 0.6605921021142495 Loss ratio: 2.9508765724252006 Tokens per Sec: 2781.2547157138856
Epoch Step: 45 / 67 Loss (mean): 0.2619158234792849 Loss (std): 0.5463041671085316 Loss ratio: 2.085800544050517 Tokens per Sec: 2633.7996594751235
Epoch Step: 50 / 67 Loss (mean): 0.4129991855043045 Loss (std): 0.8486493946030789 Loss ratio: 2.0548452016117444 Tokens per Sec: 3396.2400196199114
Epoch Step: 55 / 67 Loss (mean): 6.3270048237463925 Loss (std): 14.16075522982081 Loss ratio: 2.238145160988804 Tokens per Sec: 2811.9771350063934
Epoch Step: 60 / 67 Loss (mean): 0.3354631564216106 Loss (std): 0.5707939375381117 Loss ratio: 1.7015100663416431 Tokens per Sec: 2600.3795766234807
Epoch Step: 65 / 67 Loss (mean): 0.5461986377522408 Loss (std): 1.443092745320869 Loss ratio: 2.642065808255394 Tokens per Sec: 2734.1781760141885
Mean loss per sample: 0.5660985153145872 Std loss per sample: 3.1128739304663267 ratio: 5.498820163371155
Epoch ended with duration 0:00:11.444409
Train perplexity: 1.0796025536584284
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) over[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.21798080205917 Loss (std): 45.66853986466861 Loss ratio: 0.4697540464006562 Tokens per Sec: 4399.182312880894
Mean loss per sample: 101.54995055374552 Std loss per sample: 52.97492648475992 ratio: 0.5216637348998298
Epoch ended with duration 0:00:01.023617
b'BLEU = 2.84, 8.6/3.0/2.1/1.6 (BP=0.932, ratio=0.934, hyp_len=2908, ref_len=3113)\n'
Validation perplexity: 947741.6579500409
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.84
Epoch 503 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1799249249750119 Loss (std): 0.4778493639371393 Loss ratio: 2.6558263898317778 Tokens per Sec: 2687.122284562161
Epoch Step: 10 / 67 Loss (mean): 0.2458370058066066 Loss (std): 0.41177111178575115 Loss ratio: 1.6749761104301786 Tokens per Sec: 2330.8252323794563
Epoch Step: 15 / 67 Loss (mean): 0.4333360991895461 Loss (std): 0.9156194923512706 Loss ratio: 2.112954572821703 Tokens per Sec: 2905.8684490323135
Epoch Step: 20 / 67 Loss (mean): 0.3538006537946785 Loss (std): 0.6322452555829847 Loss ratio: 1.787009856544517 Tokens per Sec: 2792.4097178797797
Epoch Step: 25 / 67 Loss (mean): 0.43598623142315773 Loss (std): 0.8176980696336441 Loss ratio: 1.875513515563307 Tokens per Sec: 3433.764824369143
Epoch Step: 30 / 67 Loss (mean): 0.2783763395332244 Loss (std): 0.6012496790354981 Loss ratio: 2.159844762825968 Tokens per Sec: 2362.9277834630625
Epoch Step: 35 / 67 Loss (mean): 0.30583771462761433 Loss (std): 0.43097958245232343 Loss ratio: 1.4091773572696253 Tokens per Sec: 3078.9541817108516
Epoch Step: 40 / 67 Loss (mean): 0.4146737862902228 Loss (std): 0.6149102379734718 Loss ratio: 1.4828770428789706 Tokens per Sec: 2558.6898360968607
Epoch Step: 45 / 67 Loss (mean): 0.21908460934537288 Loss (std): 0.5983205110337447 Loss ratio: 2.731002021646033 Tokens per Sec: 2905.054665930747
Epoch Step: 50 / 67 Loss (mean): 0.29202676055865595 Loss (std): 0.5992887429303174 Loss ratio: 2.0521706359508287 Tokens per Sec: 2509.594776712508
Epoch Step: 55 / 67 Loss (mean): 0.3222498104296392 Loss (std): 0.5519762308882717 Loss ratio: 1.7128830274635385 Tokens per Sec: 2779.341885680424
Epoch Step: 60 / 67 Loss (mean): 2.058399110857863 Loss (std): 8.55143403270273 Loss ratio: 4.154410088692088 Tokens per Sec: 2873.2464679646246
Epoch Step: 65 / 67 Loss (mean): 0.42676336779550184 Loss (std): 0.7813202599233763 Loss ratio: 1.830804419693708 Tokens per Sec: 3014.738073492454
Mean loss per sample: 0.611589229511114 Std loss per sample: 3.486144939543305 ratio: 5.700141159009657
Epoch ended with duration 0:00:11.462908
Train perplexity: 1.086267869591538
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 96.96572655439377 Loss (std): 44.72792393565426 Loss ratio: 0.4612756024734548 Tokens per Sec: 4391.068034807527
Mean loss per sample: 101.05226974867162 Std loss per sample: 52.19073051962205 ratio: 0.5164726200552079
Epoch ended with duration 0:00:01.022639
b'BLEU = 2.65, 8.5/3.0/1.8/1.4 (BP=0.931, ratio=0.933, hyp_len=2904, ref_len=3113)\n'
Validation perplexity: 885929.4226409167
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.65
Epoch 504 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1950808095298271 Loss (std): 0.2845959706317539 Loss ratio: 1.4588619522221138 Tokens per Sec: 3108.7442923834196
Epoch Step: 10 / 67 Loss (mean): 0.23145088742603548 Loss (std): 0.3376624805203775 Loss ratio: 1.458894732595415 Tokens per Sec: 2972.301796460646
Epoch Step: 15 / 67 Loss (mean): 0.4017402542194759 Loss (std): 0.7804308148262572 Loss ratio: 1.9426253820208361 Tokens per Sec: 2683.760281097302
Epoch Step: 20 / 67 Loss (mean): 0.2889836980621112 Loss (std): 0.4339652424908726 Loss ratio: 1.5016945433288784 Tokens per Sec: 3133.6733600491266
Epoch Step: 25 / 67 Loss (mean): 0.21654820026651578 Loss (std): 0.25954381049396896 Loss ratio: 1.1985498386711897 Tokens per Sec: 2369.8406366901036
Epoch Step: 30 / 67 Loss (mean): 0.2790641014871653 Loss (std): 0.6401222576281779 Loss ratio: 2.2938179945643 Tokens per Sec: 2458.4933778357026
Epoch Step: 35 / 67 Loss (mean): 0.5912144012108911 Loss (std): 1.0188113087236887 Loss ratio: 1.7232518467700015 Tokens per Sec: 2908.852515500711
Epoch Step: 40 / 67 Loss (mean): 0.2824321639491245 Loss (std): 0.531595065781027 Loss ratio: 1.882204414497157 Tokens per Sec: 2767.263232546829
Epoch Step: 45 / 67 Loss (mean): 0.213720360525258 Loss (std): 0.28951819426300424 Loss ratio: 1.354658926980372 Tokens per Sec: 2895.7937466028334
Epoch Step: 50 / 67 Loss (mean): 3.7208147681139963 Loss (std): 14.860619181154057 Loss ratio: 3.993915340399113 Tokens per Sec: 2650.549388191591
Epoch Step: 55 / 67 Loss (mean): 0.5473005261301296 Loss (std): 0.9320169120306783 Loss ratio: 1.7029344346164141 Tokens per Sec: 2600.6498896102025
Epoch Step: 60 / 67 Loss (mean): 0.9759803833294427 Loss (std): 1.5263588804554613 Loss ratio: 1.5639237289262586 Tokens per Sec: 3110.510077600512
Epoch Step: 65 / 67 Loss (mean): 0.4155611380338087 Loss (std): 0.674379142761021 Loss ratio: 1.6228157087830377 Tokens per Sec: 2418.3531764721192
Mean loss per sample: 0.48376413602210294 Std loss per sample: 2.6611583235734613 ratio: 5.500941730521078
Epoch ended with duration 0:00:11.411664
Train perplexity: 1.0676427165647921
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.2947661280632 Loss (std): 45.14520362652469 Loss ratio: 0.46400444158633153 Tokens per Sec: 4401.3772663754535
Mean loss per sample: 101.92836323227795 Std loss per sample: 53.02098749523077 ratio: 0.5201789356158372
Epoch ended with duration 0:00:01.024042
b'BLEU = 2.67, 8.9/2.9/1.9/1.4 (BP=0.930, ratio=0.932, hyp_len=2902, ref_len=3113)\n'
Validation perplexity: 997611.2270457128
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.67
Epoch 505 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.30670357004055404 Loss (std): 0.6112239019200291 Loss ratio: 1.9928816017342401 Tokens per Sec: 3096.787462221137
Epoch Step: 10 / 67 Loss (mean): 0.42781329769059084 Loss (std): 0.7586382329213801 Loss ratio: 1.773292782194099 Tokens per Sec: 2843.9244496218494
Epoch Step: 15 / 67 Loss (mean): 0.16957970872317674 Loss (std): 0.24642406774663037 Loss ratio: 1.4531459547963663 Tokens per Sec: 2336.517175094856
Epoch Step: 20 / 67 Loss (mean): 0.35455849541358475 Loss (std): 0.7427502783411503 Loss ratio: 2.0948596295083783 Tokens per Sec: 3057.040674099325
Epoch Step: 25 / 67 Loss (mean): 0.13826095464173704 Loss (std): 0.18932220265590802 Loss ratio: 1.3693106860608717 Tokens per Sec: 2627.2364972947785
Epoch Step: 30 / 67 Loss (mean): 0.2590984746373124 Loss (std): 0.380179891957657 Loss ratio: 1.4673181402933193 Tokens per Sec: 2832.075624577988
Epoch Step: 35 / 67 Loss (mean): 0.43689163833187195 Loss (std): 0.863219512951941 Loss ratio: 1.9758206319714948 Tokens per Sec: 3015.7175681772314
Epoch Step: 40 / 67 Loss (mean): 0.28283586789234505 Loss (std): 0.4853999554505296 Loss ratio: 1.7161895309377306 Tokens per Sec: 2883.4313866440248
Epoch Step: 45 / 67 Loss (mean): 0.35044995168209425 Loss (std): 0.5815995199518161 Loss ratio: 1.6595793983142162 Tokens per Sec: 2429.1062207282494
Epoch Step: 50 / 67 Loss (mean): 0.2621725240496744 Loss (std): 0.5366531283489083 Loss ratio: 2.046946491796476 Tokens per Sec: 3425.9549492094075
Epoch Step: 55 / 67 Loss (mean): 0.4736358975642361 Loss (std): 0.951702329195872 Loss ratio: 2.0093543037809947 Tokens per Sec: 2835.195943657538
Epoch Step: 60 / 67 Loss (mean): 0.4216575717800879 Loss (std): 0.9988921339609301 Loss ratio: 2.368965247662846 Tokens per Sec: 2321.1892820500816
Epoch Step: 65 / 67 Loss (mean): 0.13627696507527226 Loss (std): 0.32200406200112525 Loss ratio: 2.3628649333602865 Tokens per Sec: 2600.980961227035
Mean loss per sample: 0.6803167847187571 Std loss per sample: 4.4690735027591 ratio: 6.56910663259119
Epoch ended with duration 0:00:11.415851
Train perplexity: 1.0964159870918928
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during unit ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 96.28844600915909 Loss (std): 43.91576040485062 Loss ratio: 0.4560854622233004 Tokens per Sec: 4378.197472454127
Mean loss per sample: 101.10643823414308 Std loss per sample: 52.12789825178127 ratio: 0.5155744694622025
Epoch ended with duration 0:00:01.027406
b'BLEU = 2.58, 8.9/2.8/1.8/1.4 (BP=0.918, ratio=0.922, hyp_len=2869, ref_len=3113)\n'
Validation perplexity: 892456.7820820992
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.58
Model saved checkpoint_commit_msg_generator!
Epoch 506 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2286661057951278 Loss (std): 0.32687217689423337 Loss ratio: 1.4294736675451707 Tokens per Sec: 2414.704226947468
Epoch Step: 10 / 67 Loss (mean): 0.37657650276378263 Loss (std): 0.8814528685875835 Loss ratio: 2.340700660074104 Tokens per Sec: 3427.9950661207527
Epoch Step: 15 / 67 Loss (mean): 0.7182215895409172 Loss (std): 1.3349127427757304 Loss ratio: 1.8586363348239063 Tokens per Sec: 2590.7138256099533
Epoch Step: 20 / 67 Loss (mean): 0.22716323126769566 Loss (std): 0.30982633223236544 Loss ratio: 1.3638929614769268 Tokens per Sec: 2743.7110027667304
Epoch Step: 25 / 67 Loss (mean): 0.2841034124558064 Loss (std): 0.5773519833888846 Loss ratio: 2.0321895411189206 Tokens per Sec: 2669.876338651202
Epoch Step: 30 / 67 Loss (mean): 0.324621486623073 Loss (std): 0.47725474570925236 Loss ratio: 1.4701884051914471 Tokens per Sec: 2775.3051309913512
Epoch Step: 35 / 67 Loss (mean): 0.17533949562857742 Loss (std): 0.26352019281342626 Loss ratio: 1.5029140574901758 Tokens per Sec: 3041.1751021017503
Epoch Step: 40 / 67 Loss (mean): 0.31291881322977133 Loss (std): 0.6629075895844615 Loss ratio: 2.1184651147762694 Tokens per Sec: 2700.916462807675
Epoch Step: 45 / 67 Loss (mean): 0.18694590066297678 Loss (std): 0.23223911018063342 Loss ratio: 1.2422797684091 Tokens per Sec: 2753.850320135122
Epoch Step: 50 / 67 Loss (mean): 0.42633997430675663 Loss (std): 0.8466280031340788 Loss ratio: 1.9858048837919196 Tokens per Sec: 3107.644794076984
Epoch Step: 55 / 67 Loss (mean): 0.4877083295759803 Loss (std): 0.781518762608459 Loss ratio: 1.6024306234177323 Tokens per Sec: 3028.125652058389
Epoch Step: 60 / 67 Loss (mean): 0.524886496252293 Loss (std): 1.065392895495357 Loss ratio: 2.0297586299177017 Tokens per Sec: 2562.8144484255495
Epoch Step: 65 / 67 Loss (mean): 0.21711520171447773 Loss (std): 0.26538998740098324 Loss ratio: 1.2223464101329504 Tokens per Sec: 2286.5267716655044
Mean loss per sample: 0.5501834889751335 Std loss per sample: 3.0220983217501916 ratio: 5.4928917030565065
Epoch ended with duration 0:00:11.431525
Train perplexity: 1.0772803481745679
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.29029622673988 Loss (std): 45.813361088443514 Loss ratio: 0.47089342786739175 Tokens per Sec: 4429.737587795103
Mean loss per sample: 101.85168277686003 Std loss per sample: 53.004513195265226 ratio: 0.5204088116186478
Epoch ended with duration 0:00:01.020325
b'BLEU = 2.31, 8.4/2.5/1.6/1.2 (BP=0.931, ratio=0.933, hyp_len=2904, ref_len=3113)\n'
Validation perplexity: 987298.1523238595
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.31
Epoch 507 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.21126667722319326 Loss (std): 0.3470725585310842 Loss ratio: 1.6428173297032473 Tokens per Sec: 2857.185116503324
Epoch Step: 10 / 67 Loss (mean): 1.331444157189253 Loss (std): 8.451253929365054 Loss ratio: 6.34743401270849 Tokens per Sec: 2542.3395977202
Epoch Step: 15 / 67 Loss (mean): 0.7533886751807586 Loss (std): 0.8882888797514488 Loss ratio: 1.1790579139490303 Tokens per Sec: 2769.7804397460004
Epoch Step: 20 / 67 Loss (mean): 0.2968235447842744 Loss (std): 0.5654112478562772 Loss ratio: 1.904873308710086 Tokens per Sec: 2508.7357998356947
Epoch Step: 25 / 67 Loss (mean): 0.33505980100744637 Loss (std): 0.7041223202893315 Loss ratio: 2.101482535870315 Tokens per Sec: 2668.0741322647677
Epoch Step: 30 / 67 Loss (mean): 0.2617034997565497 Loss (std): 0.5747091952346955 Loss ratio: 2.196031752610569 Tokens per Sec: 2778.6239646171316
Epoch Step: 35 / 67 Loss (mean): 0.30999240833625663 Loss (std): 0.8425237222290065 Loss ratio: 2.7178850177359815 Tokens per Sec: 2994.1653141472275
Epoch Step: 40 / 67 Loss (mean): 0.07873224595650322 Loss (std): 0.12378759823378437 Loss ratio: 1.572260472566382 Tokens per Sec: 2569.6873054856937
Epoch Step: 45 / 67 Loss (mean): 0.4270790007940377 Loss (std): 0.8370127097373496 Loss ratio: 1.9598545191431824 Tokens per Sec: 2876.944841390024
Epoch Step: 50 / 67 Loss (mean): 0.24687900995922973 Loss (std): 0.6500341569742343 Loss ratio: 2.63300698217148 Tokens per Sec: 2893.0057372624997
Epoch Step: 55 / 67 Loss (mean): 0.5015612605184288 Loss (std): 1.1978517836451485 Loss ratio: 2.3882462182326702 Tokens per Sec: 2476.7498663820243
Epoch Step: 60 / 67 Loss (mean): 0.2875842775902129 Loss (std): 0.737896069419363 Loss ratio: 2.565842874313221 Tokens per Sec: 2897.5736773495055
Epoch Step: 65 / 67 Loss (mean): 0.2862066651960049 Loss (std): 0.6157965003684226 Loss ratio: 2.1515798730497853 Tokens per Sec: 3446.454572978795
Mean loss per sample: 0.4509852470902972 Std loss per sample: 2.240636186635119 ratio: 4.968313711127882
Epoch ended with duration 0:00:11.407533
Train perplexity: 1.0629182327641513
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shader print for cipher ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.97130727767944 Loss (std): 45.15161312971471 Loss ratio: 0.4608656798029834 Tokens per Sec: 4390.341491460409
Mean loss per sample: 102.52912824393296 Std loss per sample: 53.32051515214513 ratio: 0.5200523603915486
Epoch ended with duration 0:00:01.020614
b'BLEU = 2.64, 8.5/2.9/1.9/1.5 (BP=0.915, ratio=0.918, hyp_len=2859, ref_len=3113)\n'
Validation perplexity: 1082228.9848922405
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.64
Epoch 508 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.958851781055273 Loss (std): 1.8974073690635456 Loss ratio: 1.9788328149897545 Tokens per Sec: 2986.5941200282064
Epoch Step: 10 / 67 Loss (mean): 0.20072235545922013 Loss (std): 0.2741923495392528 Loss ratio: 1.366027958928368 Tokens per Sec: 2832.7178351286866
Epoch Step: 15 / 67 Loss (mean): 0.39663191176259716 Loss (std): 0.816861001742716 Loss ratio: 2.0594938972828936 Tokens per Sec: 2893.040151004961
Epoch Step: 20 / 67 Loss (mean): 0.18421898557426175 Loss (std): 0.23142852508832792 Loss ratio: 1.2562685890756642 Tokens per Sec: 3034.5110476192813
Epoch Step: 25 / 67 Loss (mean): 0.21834665670030518 Loss (std): 0.4057561122794289 Loss ratio: 1.858311541890725 Tokens per Sec: 2350.2185227479154
Epoch Step: 30 / 67 Loss (mean): 0.47418904687219765 Loss (std): 0.7828970901881931 Loss ratio: 1.6510231422515285 Tokens per Sec: 2676.1140131110105
Epoch Step: 35 / 67 Loss (mean): 0.6608694434798963 Loss (std): 1.3217455704440442 Loss ratio: 2.0000101131688224 Tokens per Sec: 3190.8198905478434
Epoch Step: 40 / 67 Loss (mean): 0.3962967659772403 Loss (std): 0.8596618005988894 Loss ratio: 2.169237486657311 Tokens per Sec: 3134.0672010679095
Epoch Step: 45 / 67 Loss (mean): 0.7310475650374428 Loss (std): 1.3523083572892507 Loss ratio: 1.8498226681323917 Tokens per Sec: 2657.7865751759555
Epoch Step: 50 / 67 Loss (mean): 1.6235602132510394 Loss (std): 8.02793240745986 Loss ratio: 4.944647166109482 Tokens per Sec: 2511.90624216889
Epoch Step: 55 / 67 Loss (mean): 0.2965129125441308 Loss (std): 0.4324524731801123 Loss ratio: 1.458460845666373 Tokens per Sec: 2879.913441973416
Epoch Step: 60 / 67 Loss (mean): 0.22131069240276702 Loss (std): 0.5002612433009064 Loss ratio: 2.2604476894883714 Tokens per Sec: 2361.309327577554
Epoch Step: 65 / 67 Loss (mean): 0.23486595493886853 Loss (std): 0.3714264690941446 Loss ratio: 1.5814402270044647 Tokens per Sec: 2537.6721739813192
Mean loss per sample: 0.5497718620358553 Std loss per sample: 3.2394691047102566 ratio: 5.892387967463827
Epoch ended with duration 0:00:11.443612
Train perplexity: 1.0772203528628526
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable libcore.java.io.fileinputstream time unit engines[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for generic[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.12901625037193 Loss (std): 45.73560802357133 Loss ratio: 0.47087481979306256 Tokens per Sec: 4307.234820888813
Mean loss per sample: 103.68309080112176 Std loss per sample: 51.67734515224698 ratio: 0.49841632568005845
Epoch ended with duration 0:00:01.034494
b'BLEU = 2.17, 7.7/2.4/1.4/1.1 (BP=0.945, ratio=0.946, hyp_len=2945, ref_len=3113)\n'
Validation perplexity: 1265421.6478408477
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.17
Epoch 509 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2533428858805564 Loss (std): 0.387344522852043 Loss ratio: 1.5289338854167167 Tokens per Sec: 2151.250816815561
Epoch Step: 10 / 67 Loss (mean): 0.25489503766584676 Loss (std): 0.3992943785720166 Loss ratio: 1.5665051082534975 Tokens per Sec: 2734.798709889407
Epoch Step: 15 / 67 Loss (mean): 0.6135225273501419 Loss (std): 1.7571875995563153 Loss ratio: 2.8640962983800513 Tokens per Sec: 2736.799324662727
Epoch Step: 20 / 67 Loss (mean): 0.21748882142128423 Loss (std): 0.3555818524550941 Loss ratio: 1.6349431208986982 Tokens per Sec: 2959.3314865910556
Epoch Step: 25 / 67 Loss (mean): 0.19836135138757527 Loss (std): 0.2957838172936324 Loss ratio: 1.4911363288491861 Tokens per Sec: 2812.7873801905052
Epoch Step: 30 / 67 Loss (mean): 2.520286412371206 Loss (std): 10.653060840356783 Loss ratio: 4.22692468128409 Tokens per Sec: 2704.3573639953174
Epoch Step: 35 / 67 Loss (mean): 0.23620023064904672 Loss (std): 0.3866181159174402 Loss ratio: 1.6368236172126727 Tokens per Sec: 2250.669537194592
Epoch Step: 40 / 67 Loss (mean): 8.259586701700755 Loss (std): 22.654352235149794 Loss ratio: 2.7427948943843607 Tokens per Sec: 3059.937067790384
Epoch Step: 45 / 67 Loss (mean): 0.4662198739788437 Loss (std): 0.8338996955314281 Loss ratio: 1.7886403863797302 Tokens per Sec: 3150.8635461813133
Epoch Step: 50 / 67 Loss (mean): 0.15737858599823085 Loss (std): 0.224436440256452 Loss ratio: 1.426092621387353 Tokens per Sec: 2887.668752916412
Epoch Step: 55 / 67 Loss (mean): 0.491670112904103 Loss (std): 1.2660368075611244 Loss ratio: 2.574972068330817 Tokens per Sec: 2632.77224440252
Epoch Step: 60 / 67 Loss (mean): 0.4050767849184922 Loss (std): 0.8165141080224229 Loss ratio: 2.0157020555663743 Tokens per Sec: 2640.0963585778627
Epoch Step: 65 / 67 Loss (mean): 0.254455108248294 Loss (std): 0.7055462114512842 Loss ratio: 2.772772833323595 Tokens per Sec: 3292.301149782979
Mean loss per sample: 0.8693205643568136 Std loss per sample: 5.503369733103121 ratio: 6.3306563294921165
Epoch ended with duration 0:00:11.487275
Train perplexity: 1.1248152772973339
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings on engines ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for extension api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.31175065040588 Loss (std): 45.78675439407438 Loss ratio: 0.4705161924232981 Tokens per Sec: 4397.87876549723
Mean loss per sample: 100.81700043087123 Std loss per sample: 52.56039419080065 ratio: 0.5213445546501907
Epoch ended with duration 0:00:01.022748
b'BLEU = 2.39, 8.0/2.6/1.7/1.3 (BP=0.910, ratio=0.914, hyp_len=2845, ref_len=3113)\n'
Validation perplexity: 858128.6949721732
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.39
Epoch 510 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.258894691709429 Loss (std): 0.4774983723443331 Loss ratio: 1.8443729733951222 Tokens per Sec: 2273.968408404888
Epoch Step: 10 / 67 Loss (mean): 0.4040554881830758 Loss (std): 0.7940648743354455 Loss ratio: 1.9652371952825898 Tokens per Sec: 3476.7200242095705
Epoch Step: 15 / 67 Loss (mean): 0.30001698139312794 Loss (std): 0.5666685733601957 Loss ratio: 1.888788330343409 Tokens per Sec: 2840.6542947977077
Epoch Step: 20 / 67 Loss (mean): 0.35522147418123495 Loss (std): 0.7412616997810697 Loss ratio: 2.086759257698694 Tokens per Sec: 2510.6847268731485
Epoch Step: 25 / 67 Loss (mean): 0.26168298525954015 Loss (std): 0.4512512255780155 Loss ratio: 1.72441943495279 Tokens per Sec: 2630.3168923271805
Epoch Step: 30 / 67 Loss (mean): 0.4796973623597296 Loss (std): 1.1370276128723305 Loss ratio: 2.37030199056976 Tokens per Sec: 2476.820397016987
Epoch Step: 35 / 67 Loss (mean): 0.31271277739142533 Loss (std): 0.4891286580489724 Loss ratio: 1.5641466975835328 Tokens per Sec: 2678.891331368859
Epoch Step: 40 / 67 Loss (mean): 0.5910427438866463 Loss (std): 1.0186134352042548 Loss ratio: 1.7234175459222125 Tokens per Sec: 3089.09704400375
Epoch Step: 45 / 67 Loss (mean): 0.3968085980450269 Loss (std): 0.7110822266683409 Loss ratio: 1.7920030719386089 Tokens per Sec: 3028.3263011541294
Epoch Step: 50 / 67 Loss (mean): 0.2143179595368565 Loss (std): 0.3682019178510732 Loss ratio: 1.7180170931393788 Tokens per Sec: 2728.555589493227
Epoch Step: 55 / 67 Loss (mean): 1.3175295642431593 Loss (std): 6.693786846938807 Loss ratio: 5.080559122621269 Tokens per Sec: 2894.1660876899064
Epoch Step: 60 / 67 Loss (mean): 0.21539772383039235 Loss (std): 0.31620073167692647 Loss ratio: 1.4679854831052348 Tokens per Sec: 3092.470259839671
Epoch Step: 65 / 67 Loss (mean): 0.4215149566043692 Loss (std): 1.1500898213526036 Loss ratio: 2.7284674086477776 Tokens per Sec: 2763.3493827377715
Mean loss per sample: 0.721672618120774 Std loss per sample: 4.008918458935649 ratio: 5.555037503535633
Epoch ended with duration 0:00:11.379321
Train perplexity: 1.1025681045172346
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print change to deprecated ( ) and not construction[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.27039974927902 Loss (std): 45.25404242634382 Loss ratio: 0.4605053255283602 Tokens per Sec: 4294.783936637499
Mean loss per sample: 103.85144456973697 Std loss per sample: 52.84713001029779 ratio: 0.5088723631071936
Epoch ended with duration 0:00:01.035042
b'BLEU = 2.47, 8.2/2.6/1.7/1.3 (BP=0.946, ratio=0.947, hyp_len=2949, ref_len=3113)\n'
Validation perplexity: 1294624.039794682
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.47
Model saved checkpoint_commit_msg_generator!
Epoch 511 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.37660304786368215 Loss (std): 0.5359819189473108 Loss ratio: 1.4232012247052195 Tokens per Sec: 2773.4586962228796
Epoch Step: 10 / 67 Loss (mean): 0.5369458010918606 Loss (std): 1.2176663400043963 Loss ratio: 2.2677639671048997 Tokens per Sec: 2986.9690941656186
Epoch Step: 15 / 67 Loss (mean): 0.5093112536487752 Loss (std): 0.7920687459112219 Loss ratio: 1.555176211475269 Tokens per Sec: 2848.2182525030025
Epoch Step: 20 / 67 Loss (mean): 0.2647515000808198 Loss (std): 0.5991545113289419 Loss ratio: 2.263082593095941 Tokens per Sec: 2512.3403090113347
Epoch Step: 25 / 67 Loss (mean): 0.3726094588673732 Loss (std): 1.0649110535529278 Loss ratio: 2.857981804299748 Tokens per Sec: 2451.8318898584985
Epoch Step: 30 / 67 Loss (mean): 0.44707643919537077 Loss (std): 0.8828364077969971 Loss ratio: 1.974687839479729 Tokens per Sec: 2927.178847392711
Epoch Step: 35 / 67 Loss (mean): 0.3233865164893359 Loss (std): 0.6819955169978665 Loss ratio: 2.1089176023835745 Tokens per Sec: 3607.4521910805024
Epoch Step: 40 / 67 Loss (mean): 3.882607351457409 Loss (std): 13.398787859653075 Loss ratio: 3.450976791311022 Tokens per Sec: 3297.7617444919715
Epoch Step: 45 / 67 Loss (mean): 0.42269331232091645 Loss (std): 0.6901962539292061 Loss ratio: 1.6328534987683851 Tokens per Sec: 2545.1738651313394
Epoch Step: 50 / 67 Loss (mean): 0.21452521236642497 Loss (std): 0.41673012609221655 Loss ratio: 1.9425694606954198 Tokens per Sec: 2482.4337577632546
Epoch Step: 55 / 67 Loss (mean): 0.5437021911020565 Loss (std): 1.1961100353422758 Loss ratio: 2.1999360218097004 Tokens per Sec: 2334.920961166397
Epoch Step: 60 / 67 Loss (mean): 0.32964712431203225 Loss (std): 0.46112039114715536 Loss ratio: 1.398830316234384 Tokens per Sec: 2816.729061848408
Epoch Step: 65 / 67 Loss (mean): 0.48795593606701004 Loss (std): 0.9243197495282311 Loss ratio: 1.894268890298521 Tokens per Sec: 2510.0109849391565
Mean loss per sample: 0.6239597206089652 Std loss per sample: 3.529397077794583 ratio: 5.656450186159455
Epoch ended with duration 0:00:11.423205
Train perplexity: 1.0880875044608123
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during engines ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.07485961914062 Loss (std): 45.31517703610231 Loss ratio: 0.46680651626888725 Tokens per Sec: 4315.56690641523
Mean loss per sample: 102.7292601151056 Std loss per sample: 52.59751153148671 ratio: 0.5120012688941057
Epoch ended with duration 0:00:01.032244
b'BLEU = 2.72, 8.1/3.0/2.0/1.6 (BP=0.918, ratio=0.922, hyp_len=2869, ref_len=3113)\n'
Validation perplexity: 1111982.259947597
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.72
Epoch 512 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.19654168857596233 Loss (std): 0.41171453320808155 Loss ratio: 2.09479493226678 Tokens per Sec: 2826.423180955792
Epoch Step: 10 / 67 Loss (mean): 0.2770252221780538 Loss (std): 0.5722381398106299 Loss ratio: 2.0656535723048077 Tokens per Sec: 2628.2288893131804
Epoch Step: 15 / 67 Loss (mean): 0.2944979895119104 Loss (std): 0.47915118735567264 Loss ratio: 1.6270100456366419 Tokens per Sec: 3030.8842808945287
Epoch Step: 20 / 67 Loss (mean): 0.24889427358175453 Loss (std): 0.4717999520355363 Loss ratio: 1.8955837964691613 Tokens per Sec: 2468.2009329657285
Epoch Step: 25 / 67 Loss (mean): 0.7790011395100009 Loss (std): 4.017516412115197 Loss ratio: 5.157266412527012 Tokens per Sec: 2541.1988830936198
Epoch Step: 30 / 67 Loss (mean): 0.3027284601239444 Loss (std): 0.6413761634049462 Loss ratio: 2.1186516891816223 Tokens per Sec: 2776.6779577971774
Epoch Step: 35 / 67 Loss (mean): 0.6317770098685287 Loss (std): 1.299750605516321 Loss ratio: 2.0572932936999337 Tokens per Sec: 2961.497290248071
Epoch Step: 40 / 67 Loss (mean): 0.41718124927865574 Loss (std): 0.8930596534913707 Loss ratio: 2.1406994083160544 Tokens per Sec: 3413.2620858683113
Epoch Step: 45 / 67 Loss (mean): 0.2877928080561105 Loss (std): 0.4882190714294723 Loss ratio: 1.696425545610872 Tokens per Sec: 2934.5028404275213
Epoch Step: 50 / 67 Loss (mean): 3.7440785361013695 Loss (std): 12.618260819831404 Loss ratio: 3.3701912762146637 Tokens per Sec: 2807.8819657151407
Epoch Step: 55 / 67 Loss (mean): 0.27742961868170823 Loss (std): 0.4758382440366442 Loss ratio: 1.715167422634019 Tokens per Sec: 2782.124912499201
Epoch Step: 60 / 67 Loss (mean): 0.42647919344926777 Loss (std): 0.8844945750016731 Loss ratio: 2.07394543177612 Tokens per Sec: 2596.3871885915473
Epoch Step: 65 / 67 Loss (mean): 0.13807263345890014 Loss (std): 0.18083181207988477 Loss ratio: 1.3096861235265183 Tokens per Sec: 2466.403587935211
Mean loss per sample: 0.6265091217393871 Std loss per sample: 3.6783361120373628 ratio: 5.871161303805347
Epoch ended with duration 0:00:11.460535
Train perplexity: 1.0884628867520239
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print change time unit ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 96.80911302566528 Loss (std): 44.91668605154807 Loss ratio: 0.46397167216726903 Tokens per Sec: 4423.046925329526
Mean loss per sample: 102.9921365570216 Std loss per sample: 51.779797697404035 ratio: 0.5027548648700588
Epoch ended with duration 0:00:01.040667
b'BLEU = 2.26, 7.8/2.6/1.6/1.3 (BP=0.892, ratio=0.898, hyp_len=2794, ref_len=3113)\n'
Validation perplexity: 1152310.0985940797
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.26
Epoch 513 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6303629065223504 Loss (std): 1.1668872421616407 Loss ratio: 1.8511356396258178 Tokens per Sec: 2792.6865781879133
Epoch Step: 10 / 67 Loss (mean): 2.7664556058880407 Loss (std): 13.711121191127111 Loss ratio: 4.956205030705996 Tokens per Sec: 2670.6466091820575
Epoch Step: 15 / 67 Loss (mean): 0.32291975368207204 Loss (std): 0.659455732476341 Loss ratio: 2.04216597144318 Tokens per Sec: 3395.525311455256
Epoch Step: 20 / 67 Loss (mean): 6.4892965762082895 Loss (std): 15.162954036498547 Loss ratio: 2.3366098094654038 Tokens per Sec: 2914.0815967233334
Epoch Step: 25 / 67 Loss (mean): 0.44935411051119445 Loss (std): 0.8200891359805917 Loss ratio: 1.825039800009043 Tokens per Sec: 2834.058187432241
Epoch Step: 30 / 67 Loss (mean): 1.1522863201098517 Loss (std): 1.6169344940596753 Loss ratio: 1.4032402067443854 Tokens per Sec: 2983.847392207865
Epoch Step: 35 / 67 Loss (mean): 0.40656633682374377 Loss (std): 0.824998427104214 Loss ratio: 2.029185282651354 Tokens per Sec: 2556.6475834250996
Epoch Step: 40 / 67 Loss (mean): 0.8002596194419311 Loss (std): 1.3337392063681859 Loss ratio: 1.6666331450014709 Tokens per Sec: 3263.537172553317
Epoch Step: 45 / 67 Loss (mean): 0.4812367827689741 Loss (std): 1.1362433888393886 Loss ratio: 2.361090069428175 Tokens per Sec: 2578.3485507702876
Epoch Step: 50 / 67 Loss (mean): 0.13849332351015792 Loss (std): 0.19230300583160445 Loss ratio: 1.3885362915527102 Tokens per Sec: 2520.7507769345534
Epoch Step: 55 / 67 Loss (mean): 0.2493400471212226 Loss (std): 0.4744382844516632 Loss ratio: 1.9027761080874575 Tokens per Sec: 2534.0196225275176
Epoch Step: 60 / 67 Loss (mean): 0.38075477592792595 Loss (std): 0.5353024441608937 Loss ratio: 1.4058981738477851 Tokens per Sec: 2870.61665420297
Epoch Step: 65 / 67 Loss (mean): 0.19652837013200042 Loss (std): 0.29191799594957546 Loss ratio: 1.4853733115147985 Tokens per Sec: 2518.0716749392254
Mean loss per sample: 0.7586299860284 Std loss per sample: 4.338870718339266 ratio: 5.7193504056624995
Epoch ended with duration 0:00:11.437487
Train perplexity: 1.108095106202741
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for method_1 fails[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.46360191702843 Loss (std): 44.45332975061946 Loss ratio: 0.45610185624437466 Tokens per Sec: 4415.158172007037
Mean loss per sample: 102.62885076351097 Std loss per sample: 51.30051438527538 ratio: 0.49986445335423113
Epoch ended with duration 0:00:01.040080
b'BLEU = 2.84, 8.5/3.0/2.0/1.6 (BP=0.935, ratio=0.937, hyp_len=2917, ref_len=3113)\n'
Validation perplexity: 1096953.7026197931
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.84
Epoch 514 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5060323390644044 Loss (std): 0.9643132271274197 Loss ratio: 1.9056355744186706 Tokens per Sec: 2489.085009825985
Epoch Step: 10 / 67 Loss (mean): 0.3464525676354242 Loss (std): 0.5167560770494839 Loss ratio: 1.4915637097926546 Tokens per Sec: 2532.8098133573035
Epoch Step: 15 / 67 Loss (mean): 0.19623892888739647 Loss (std): 0.44122562645224334 Loss ratio: 2.248410287162861 Tokens per Sec: 2144.7249146809727
Epoch Step: 20 / 67 Loss (mean): 0.3898878311665612 Loss (std): 0.8190523723893495 Loss ratio: 2.100738486601927 Tokens per Sec: 2912.2751572229568
Epoch Step: 25 / 67 Loss (mean): 0.31579188580599293 Loss (std): 0.8059123107921847 Loss ratio: 2.5520361574055697 Tokens per Sec: 2756.399197195559
Epoch Step: 30 / 67 Loss (mean): 5.380552084094234 Loss (std): 19.311370034795832 Loss ratio: 3.5891056778138637 Tokens per Sec: 2950.6349428305793
Epoch Step: 35 / 67 Loss (mean): 0.3794652292126557 Loss (std): 0.6030804330062255 Loss ratio: 1.5892903659646083 Tokens per Sec: 3152.5649241227547
Epoch Step: 40 / 67 Loss (mean): 0.2595979566249298 Loss (std): 0.546320164563206 Loss ratio: 2.104485611774425 Tokens per Sec: 2425.276072937241
Epoch Step: 45 / 67 Loss (mean): 0.5047592366827303 Loss (std): 0.9262186864910367 Loss ratio: 1.8349712480313016 Tokens per Sec: 2858.8452149299187
Epoch Step: 50 / 67 Loss (mean): 0.3082246296153244 Loss (std): 0.47473920115682977 Loss ratio: 1.540237721266213 Tokens per Sec: 3487.9221121191445
Epoch Step: 55 / 67 Loss (mean): 0.27489352701377356 Loss (std): 0.4939593228010881 Loss ratio: 1.7969114375557422 Tokens per Sec: 2938.773005187839
Epoch Step: 60 / 67 Loss (mean): 2.0345441477693385 Loss (std): 7.342557454073414 Loss ratio: 3.6089447663859975 Tokens per Sec: 2984.042506328194
Epoch Step: 65 / 67 Loss (mean): 0.6344875892918935 Loss (std): 1.5596397531756974 Loss ratio: 2.4581091568966706 Tokens per Sec: 2686.5840171753844
Mean loss per sample: 0.547387730752862 Std loss per sample: 3.2220127357719446 ratio: 5.886161773009558
Epoch ended with duration 0:00:11.418773
Train perplexity: 1.0768729274732647
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.07274973392487 Loss (std): 45.82081403256506 Loss ratio: 0.47202550827249984 Tokens per Sec: 4289.35870680536
Mean loss per sample: 106.02204157928097 Std loss per sample: 52.3650148320724 ratio: 0.49390687117560345
Epoch ended with duration 0:00:01.052688
b'BLEU = 2.48, 8.2/2.7/1.8/1.4 (BP=0.900, ratio=0.905, hyp_len=2816, ref_len=3113)\n'
Validation perplexity: 1737374.5772521393
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.48
Epoch 515 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.25482481250946876 Loss (std): 0.435841545148039 Loss ratio: 1.7103575623423408 Tokens per Sec: 3131.0465189144707
Epoch Step: 10 / 67 Loss (mean): 3.4526294882944057 Loss (std): 10.58724769714769 Loss ratio: 3.0664303056676308 Tokens per Sec: 3252.6330539278742
Epoch Step: 15 / 67 Loss (mean): 0.3018097693402524 Loss (std): 0.5741777047824941 Loss ratio: 1.902449036151581 Tokens per Sec: 2955.1145428861623
Epoch Step: 20 / 67 Loss (mean): 0.3869124095290317 Loss (std): 0.783049223808295 Loss ratio: 2.023841067184844 Tokens per Sec: 3020.666959996581
Epoch Step: 25 / 67 Loss (mean): 0.33306141081266105 Loss (std): 0.6373348695440484 Loss ratio: 1.9135656334036661 Tokens per Sec: 2476.73519613063
Epoch Step: 30 / 67 Loss (mean): 0.3186511523454101 Loss (std): 0.7373401289899068 Loss ratio: 2.3139415111565267 Tokens per Sec: 2584.9210562789435
Epoch Step: 35 / 67 Loss (mean): 0.3379736338974908 Loss (std): 0.6343487330969296 Loss ratio: 1.87691781095957 Tokens per Sec: 2589.3181935759144
Epoch Step: 40 / 67 Loss (mean): 2.145127560253968 Loss (std): 9.806736492223797 Loss ratio: 4.571633255722446 Tokens per Sec: 2629.5542585625217
Epoch Step: 45 / 67 Loss (mean): 0.2520873346420558 Loss (std): 0.5449491217297385 Loss ratio: 2.1617473265903002 Tokens per Sec: 2627.007135870942
Epoch Step: 50 / 67 Loss (mean): 1.007529259128205 Loss (std): 1.2866430634539494 Loss ratio: 1.2770279888122118 Tokens per Sec: 2729.294706053688
Epoch Step: 55 / 67 Loss (mean): 0.13647519503276617 Loss (std): 0.2577663520462877 Loss ratio: 1.8887414081687215 Tokens per Sec: 2841.7444893393163
Epoch Step: 60 / 67 Loss (mean): 3.4638217402689406 Loss (std): 14.260956751527067 Loss ratio: 4.117116243522338 Tokens per Sec: 2495.737996255276
Epoch Step: 65 / 67 Loss (mean): 0.3035043665768171 Loss (std): 0.6110423929308553 Loss ratio: 2.0132902858127415 Tokens per Sec: 2567.6439545174244
Mean loss per sample: 0.8445661517282603 Std loss per sample: 5.036369392117176 ratio: 5.963262181193393
Epoch ended with duration 0:00:11.516494
Train perplexity: 1.121054274712459
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.45684444904327 Loss (std): 44.50153129012509 Loss ratio: 0.45662807514143716 Tokens per Sec: 4297.444469122448
Mean loss per sample: 103.1666321616742 Std loss per sample: 52.322212466378915 ratio: 0.5071621644523966
Epoch ended with duration 0:00:01.037235
b'BLEU = 2.46, 8.3/2.7/1.8/1.4 (BP=0.901, ratio=0.906, hyp_len=2819, ref_len=3113)\n'
Validation perplexity: 1179883.8350983816
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.46
Model saved checkpoint_commit_msg_generator!
Epoch 516 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.43539418039472366 Loss (std): 0.7757882198237827 Loss ratio: 1.7818065898824405 Tokens per Sec: 2524.051739086318
Epoch Step: 10 / 67 Loss (mean): 0.40808634175846237 Loss (std): 0.6866080459098706 Loss ratio: 1.6825068022400498 Tokens per Sec: 3194.0734964421486
Epoch Step: 15 / 67 Loss (mean): 0.302938779037504 Loss (std): 0.5169041636184987 Loss ratio: 1.7062990920502312 Tokens per Sec: 2782.7984723791824
Epoch Step: 20 / 67 Loss (mean): 1.1552812586196524 Loss (std): 1.6065817176034667 Loss ratio: 1.3906412015399912 Tokens per Sec: 3111.5436203393683
Epoch Step: 25 / 67 Loss (mean): 0.35837838239876874 Loss (std): 0.6550834054748452 Loss ratio: 1.82790993443888 Tokens per Sec: 3701.2510040367806
Epoch Step: 30 / 67 Loss (mean): 0.5468531706719659 Loss (std): 1.0052775026662906 Loss ratio: 1.8382950974409071 Tokens per Sec: 3144.4131930598046
Epoch Step: 35 / 67 Loss (mean): 0.39250700292996044 Loss (std): 0.7140371765292669 Loss ratio: 1.8191705401411165 Tokens per Sec: 2451.4155476197816
Epoch Step: 40 / 67 Loss (mean): 0.22834248446997663 Loss (std): 0.3949149590076896 Loss ratio: 1.7294852507379745 Tokens per Sec: 2690.1266639165588
Epoch Step: 45 / 67 Loss (mean): 0.3838499247049185 Loss (std): 1.0132608969970722 Loss ratio: 2.6397319154771446 Tokens per Sec: 2489.5372909205043
Epoch Step: 50 / 67 Loss (mean): 0.32214420374657493 Loss (std): 0.6212634288174642 Loss ratio: 1.928525863858786 Tokens per Sec: 2392.3598130599757
Epoch Step: 55 / 67 Loss (mean): 3.3709690534556103 Loss (std): 12.174450226827565 Loss ratio: 3.6115579923071164 Tokens per Sec: 2383.8284951621563
Epoch Step: 60 / 67 Loss (mean): 0.696123989248008 Loss (std): 0.8611642948732907 Loss ratio: 1.2370846403434084 Tokens per Sec: 2749.042252252703
Epoch Step: 65 / 67 Loss (mean): 0.27874181163861067 Loss (std): 0.6449990487422765 Loss ratio: 2.3139659061214655 Tokens per Sec: 2416.9013959850145
Mean loss per sample: 0.5902519460297494 Std loss per sample: 3.1862588765668396 ratio: 5.398133624122348
Epoch ended with duration 0:00:11.463836
Train perplexity: 1.083136414385726
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to run ( ) and hint[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 96.95348155498505 Loss (std): 44.44123376863729 Loss ratio: 0.45837687369105373 Tokens per Sec: 4412.456983306757
Mean loss per sample: 101.31624535474255 Std loss per sample: 51.98472158824627 ratio: 0.513093644619677
Epoch ended with duration 0:00:01.022490
b'BLEU = 2.79, 8.4/3.0/2.0/1.5 (BP=0.953, ratio=0.954, hyp_len=2969, ref_len=3113)\n'
Validation perplexity: 918195.8498100017
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.79
Epoch 517 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2986551974536269 Loss (std): 0.7693238399482162 Loss ratio: 2.575959991681281 Tokens per Sec: 2389.0260384899584
Epoch Step: 10 / 67 Loss (mean): 0.28886661832075333 Loss (std): 0.546000324475539 Loss ratio: 1.8901468354133883 Tokens per Sec: 2318.5710834904726
Epoch Step: 15 / 67 Loss (mean): 0.28445938139702776 Loss (std): 0.4075626684709907 Loss ratio: 1.4327622680938912 Tokens per Sec: 3282.028489195655
Epoch Step: 20 / 67 Loss (mean): 0.25991752349364106 Loss (std): 0.3624996228170871 Loss ratio: 1.3946717325734896 Tokens per Sec: 2609.1619931595496
Epoch Step: 25 / 67 Loss (mean): 0.23236476704732922 Loss (std): 0.4503875848779055 Loss ratio: 1.938278296666931 Tokens per Sec: 2650.5535736826923
Epoch Step: 30 / 67 Loss (mean): 0.33094243128289236 Loss (std): 0.7424990813088902 Loss ratio: 2.2435898546783677 Tokens per Sec: 3374.0521564457763
Epoch Step: 35 / 67 Loss (mean): 0.2401157636240896 Loss (std): 0.466461975046896 Loss ratio: 1.9426545263273929 Tokens per Sec: 3267.347588180028
Epoch Step: 40 / 67 Loss (mean): 0.39836042823662865 Loss (std): 0.9535864114678179 Loss ratio: 2.3937779555287086 Tokens per Sec: 2680.9972910245683
Epoch Step: 45 / 67 Loss (mean): 0.18969155797094572 Loss (std): 0.27732711850908326 Loss ratio: 1.461989776854278 Tokens per Sec: 2635.8841277080305
Epoch Step: 50 / 67 Loss (mean): 0.19960172276250887 Loss (std): 0.5637834721844579 Loss ratio: 2.824542115076139 Tokens per Sec: 2870.9501280469176
Epoch Step: 55 / 67 Loss (mean): 0.7093026920920238 Loss (std): 1.2219332003213412 Loss ratio: 1.7227246053689158 Tokens per Sec: 2656.2760716406037
Epoch Step: 60 / 67 Loss (mean): 0.18642634167190408 Loss (std): 0.33800537474858267 Loss ratio: 1.8130773350873661 Tokens per Sec: 3291.6016954938177
Epoch Step: 65 / 67 Loss (mean): 0.5058337558166386 Loss (std): 0.9959271827465047 Loss ratio: 1.9688824071035738 Tokens per Sec: 2366.8754498143708
Mean loss per sample: 0.4904819496788443 Std loss per sample: 2.5765624843744663 ratio: 5.253123965237736
Epoch ended with duration 0:00:11.424927
Train perplexity: 1.0686135576767075
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shader ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.7190121114254 Loss (std): 44.98669288281557 Loss ratio: 0.4603678640500264 Tokens per Sec: 4297.601399508694
Mean loss per sample: 104.3032804649995 Std loss per sample: 53.608680742120534 ratio: 0.5139692683022535
Epoch ended with duration 0:00:01.048677
b'BLEU = 2.20, 8.3/2.4/1.5/1.1 (BP=0.930, ratio=0.933, hyp_len=2903, ref_len=3113)\n'
Validation perplexity: 1376373.5709684591
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.2
Epoch 518 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.24574485477296548 Loss (std): 0.38188938218936236 Loss ratio: 1.554007641552356 Tokens per Sec: 2541.509289709557
Epoch Step: 10 / 67 Loss (mean): 0.6244517652521608 Loss (std): 0.9615892821521667 Loss ratio: 1.5398936085381483 Tokens per Sec: 4024.8800074888186
Epoch Step: 15 / 67 Loss (mean): 0.4139527905572322 Loss (std): 0.7130604770890105 Loss ratio: 1.722564730459099 Tokens per Sec: 2630.8662703640734
Epoch Step: 20 / 67 Loss (mean): 0.17493682900385465 Loss (std): 0.2764721800315939 Loss ratio: 1.5804115211525982 Tokens per Sec: 3155.7247307395
Epoch Step: 25 / 67 Loss (mean): 0.7471849716534962 Loss (std): 3.817277661043391 Loss ratio: 5.108879067248742 Tokens per Sec: 2726.2908297869626
Epoch Step: 30 / 67 Loss (mean): 0.22516992039891193 Loss (std): 0.4093458150245892 Loss ratio: 1.8179418205566291 Tokens per Sec: 3385.1093256754616
Epoch Step: 35 / 67 Loss (mean): 1.0527206405040488 Loss (std): 5.003423106048559 Loss ratio: 4.752849819352731 Tokens per Sec: 2546.145093221992
Epoch Step: 40 / 67 Loss (mean): 0.19387531526990642 Loss (std): 0.31119944844040154 Loss ratio: 1.6051525074616155 Tokens per Sec: 2774.060308802688
Epoch Step: 45 / 67 Loss (mean): 0.2817539843163104 Loss (std): 0.5202462049819787 Loss ratio: 1.8464555390206148 Tokens per Sec: 2798.9004496289817
Epoch Step: 50 / 67 Loss (mean): 0.43172778135703993 Loss (std): 1.4874913218179677 Loss ratio: 3.445438042329291 Tokens per Sec: 2498.8406315162347
Epoch Step: 55 / 67 Loss (mean): 0.2911391633351741 Loss (std): 0.45611816908853675 Loss ratio: 1.56666716996583 Tokens per Sec: 2615.5606621774805
Epoch Step: 60 / 67 Loss (mean): 0.5299263692832028 Loss (std): 1.0441390471732737 Loss ratio: 1.9703474061606203 Tokens per Sec: 2662.890507195831
Epoch Step: 65 / 67 Loss (mean): 0.5428396494917251 Loss (std): 1.009533202419783 Loss ratio: 1.8597263544861453 Tokens per Sec: 2404.3943897052745
Mean loss per sample: 0.6291371226925028 Std loss per sample: 3.7227969266679577 ratio: 5.917306088592571
Epoch ended with duration 0:00:11.473979
Train perplexity: 1.0888499778974783
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) to ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.01698350906372 Loss (std): 44.886382750139155 Loss ratio: 0.46266520692169005 Tokens per Sec: 4291.85783869754
Mean loss per sample: 103.54902621405962 Std loss per sample: 51.70299684063398 ratio: 0.49930934873063904
Epoch ended with duration 0:00:01.036165
b'BLEU = 2.50, 8.0/2.7/1.8/1.4 (BP=0.929, ratio=0.932, hyp_len=2900, ref_len=3113)\n'
Validation perplexity: 1242638.861151501
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.5
Epoch 519 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2977075668713951 Loss (std): 0.6589369687963055 Loss ratio: 2.2133699043026196 Tokens per Sec: 2642.520592819365
Epoch Step: 10 / 67 Loss (mean): 0.30143419918567815 Loss (std): 0.5576029319473336 Loss ratio: 1.8498330098366178 Tokens per Sec: 2500.239583959449
Epoch Step: 15 / 67 Loss (mean): 0.3405434526885074 Loss (std): 0.6704486072043315 Loss ratio: 1.9687608201282494 Tokens per Sec: 2740.6932217102976
Epoch Step: 20 / 67 Loss (mean): 0.2938154317380395 Loss (std): 0.7117925810317881 Loss ratio: 2.4225840583703904 Tokens per Sec: 2739.460031049013
Epoch Step: 25 / 67 Loss (mean): 0.1757228834067064 Loss (std): 0.5022882751593419 Loss ratio: 2.8584112975019185 Tokens per Sec: 2542.8536608810855
Epoch Step: 30 / 67 Loss (mean): 0.33083542810527433 Loss (std): 0.8962313349426565 Loss ratio: 2.708994438943428 Tokens per Sec: 2744.602540876334
Epoch Step: 35 / 67 Loss (mean): 0.402302087386488 Loss (std): 0.6815898203744802 Loss ratio: 1.6942239221336255 Tokens per Sec: 2773.2491302765065
Epoch Step: 40 / 67 Loss (mean): 0.3596703222938231 Loss (std): 0.5466089291524363 Loss ratio: 1.51974988001901 Tokens per Sec: 2639.587907321743
Epoch Step: 45 / 67 Loss (mean): 0.546883000228263 Loss (std): 1.4402024883608973 Loss ratio: 2.6334745965037722 Tokens per Sec: 2867.1621373948233
Epoch Step: 50 / 67 Loss (mean): 0.5466058177917148 Loss (std): 1.0191886373452899 Loss ratio: 1.8645770026063895 Tokens per Sec: 3186.8649538810496
Epoch Step: 55 / 67 Loss (mean): 2.253548647997377 Loss (std): 8.940054669043777 Loss ratio: 3.9671008109757846 Tokens per Sec: 2275.1360890549086
Epoch Step: 60 / 67 Loss (mean): 0.49014602224269765 Loss (std): 0.8640864713697072 Loss ratio: 1.762916421143272 Tokens per Sec: 3413.585939451583
Epoch Step: 65 / 67 Loss (mean): 0.32537632628373103 Loss (std): 0.5252854369637512 Loss ratio: 1.6143935330614607 Tokens per Sec: 3082.902699283146
Mean loss per sample: 0.6573022077707956 Std loss per sample: 3.6592668071796974 ratio: 5.567099522744492
Epoch ended with duration 0:00:11.497762
Train perplexity: 1.0930072049650301
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print during logging[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for method_1 oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.19248527288437 Loss (std): 44.2145839509012 Loss ratio: 0.45491772153743437 Tokens per Sec: 4400.893181912169
Mean loss per sample: 101.54503358491375 Std loss per sample: 52.07679425037636 ratio: 0.5128443254374309
Epoch ended with duration 0:00:01.021127
b'BLEU = 2.61, 8.2/2.8/1.8/1.4 (BP=0.950, ratio=0.951, hyp_len=2962, ref_len=3113)\n'
Validation perplexity: 947110.3526416707
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.61
Epoch 520 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.37249149697868233 Loss (std): 0.7911890077753015 Loss ratio: 2.1240458216971896 Tokens per Sec: 2360.0658221032068
Epoch Step: 10 / 67 Loss (mean): 1.0768829690605344 Loss (std): 1.4253662487275325 Loss ratio: 1.3236036688100032 Tokens per Sec: 3189.0100308548936
Epoch Step: 15 / 67 Loss (mean): 0.6716374841407742 Loss (std): 1.3202053049831886 Loss ratio: 1.9656516143855896 Tokens per Sec: 2954.4236695460936
Epoch Step: 20 / 67 Loss (mean): 0.3576729473625164 Loss (std): 0.7665890552432618 Loss ratio: 2.1432682032457206 Tokens per Sec: 2602.8630699640526
Epoch Step: 25 / 67 Loss (mean): 0.22418242279672995 Loss (std): 0.4296394156162396 Loss ratio: 1.916472354328158 Tokens per Sec: 3161.7896587920363
Epoch Step: 30 / 67 Loss (mean): 0.40892242725385586 Loss (std): 0.8270004201586049 Loss ratio: 2.022389492580238 Tokens per Sec: 2519.5213038512275
Epoch Step: 35 / 67 Loss (mean): 0.2648508037200372 Loss (std): 0.7166965466316703 Loss ratio: 2.7060387832134367 Tokens per Sec: 2530.34667548331
Epoch Step: 40 / 67 Loss (mean): 0.5379207439837046 Loss (std): 0.7067843913329864 Loss ratio: 1.3139191957884362 Tokens per Sec: 3270.101500831935
Epoch Step: 45 / 67 Loss (mean): 0.4458028815788566 Loss (std): 0.8935824871402325 Loss ratio: 2.00443407627945 Tokens per Sec: 2665.2408124065523
Epoch Step: 50 / 67 Loss (mean): 0.7980304968896235 Loss (std): 1.2657786917488225 Loss ratio: 1.5861282202651132 Tokens per Sec: 2781.7897195370956
Epoch Step: 55 / 67 Loss (mean): 0.9799813081372122 Loss (std): 3.3253822475371186 Loss ratio: 3.3933119131201988 Tokens per Sec: 2776.786181959508
Epoch Step: 60 / 67 Loss (mean): 0.20018030446044577 Loss (std): 0.2613922637085081 Loss ratio: 1.3057841250319278 Tokens per Sec: 3046.3374285000586
Epoch Step: 65 / 67 Loss (mean): 0.3149286701300298 Loss (std): 0.6109410856934843 Loss ratio: 1.9399347967945724 Tokens per Sec: 2293.34688221359
Mean loss per sample: 0.5122150143571126 Std loss per sample: 2.424138626979671 ratio: 4.732658276372936
Epoch ended with duration 0:00:11.430574
Train perplexity: 1.0717604161087815
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.54804199934006 Loss (std): 44.73459463332683 Loss ratio: 0.45859039009342156 Tokens per Sec: 4440.568429547576
Mean loss per sample: 101.70396606563057 Std loss per sample: 52.337112359617926 ratio: 0.514602472098721
Epoch ended with duration 0:00:01.018260
b'BLEU = 2.38, 7.8/2.5/1.6/1.3 (BP=0.945, ratio=0.946, hyp_len=2946, ref_len=3113)\n'
Validation perplexity: 967730.6679223607
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.38
Model saved checkpoint_commit_msg_generator!
Epoch 521 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.19803737141864985 Loss (std): 0.3189742357330618 Loss ratio: 1.6106769820669458 Tokens per Sec: 3098.951737282105
Epoch Step: 10 / 67 Loss (mean): 0.5102270421921276 Loss (std): 0.8397052948485211 Loss ratio: 1.64574831479106 Tokens per Sec: 2449.2898906106816
Epoch Step: 15 / 67 Loss (mean): 0.3149900863209041 Loss (std): 0.5361103006182274 Loss ratio: 1.7019910273368144 Tokens per Sec: 2374.8320046077624
Epoch Step: 20 / 67 Loss (mean): 0.7050369742973999 Loss (std): 1.2730847862956232 Loss ratio: 1.8056993217473563 Tokens per Sec: 3411.964529343522
Epoch Step: 25 / 67 Loss (mean): 0.2521575911596301 Loss (std): 0.4748357219967283 Loss ratio: 1.8830911249311955 Tokens per Sec: 3134.1254411127684
Epoch Step: 30 / 67 Loss (mean): 0.9340608078273362 Loss (std): 1.3697928280824216 Loss ratio: 1.466492134777195 Tokens per Sec: 2968.0151333545136
Epoch Step: 35 / 67 Loss (mean): 0.5277163180144271 Loss (std): 2.501010211989563 Loss ratio: 4.739308083933817 Tokens per Sec: 2575.404642023824
Epoch Step: 40 / 67 Loss (mean): 0.3956056750721473 Loss (std): 0.6868173040726633 Loss ratio: 1.7361159036644438 Tokens per Sec: 2747.1731321945144
Epoch Step: 45 / 67 Loss (mean): 0.20946602451112994 Loss (std): 0.4403830952861349 Loss ratio: 2.1024082369154584 Tokens per Sec: 2711.870995455134
Epoch Step: 50 / 67 Loss (mean): 0.5568651381900054 Loss (std): 1.1465504395493933 Loss ratio: 2.0589373636785 Tokens per Sec: 2751.9000861118698
Epoch Step: 55 / 67 Loss (mean): 0.25398033745796056 Loss (std): 0.5036274972287589 Loss ratio: 1.9829389246012814 Tokens per Sec: 2777.636080196229
Epoch Step: 60 / 67 Loss (mean): 0.13710477917265962 Loss (std): 0.1478453291137193 Loss ratio: 1.0783382607511722 Tokens per Sec: 2283.5436399922255
Epoch Step: 65 / 67 Loss (mean): 1.2415530208818382 Loss (std): 1.6146301854887466 Loss ratio: 1.300492333659599 Tokens per Sec: 2845.214234719932
Mean loss per sample: 0.5752065472091598 Std loss per sample: 3.134742865274211 ratio: 5.449769096829036
Epoch ended with duration 0:00:11.482943
Train perplexity: 1.080933783202462
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) to ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.18021342158318 Loss (std): 44.62655092350602 Loss ratio: 0.4592143745343403 Tokens per Sec: 4416.87954203765
Mean loss per sample: 100.90518872732999 Std loss per sample: 52.354188453261656 ratio: 0.5188453548680755
Epoch ended with duration 0:00:01.021446
b'BLEU = 2.41, 7.9/2.7/1.7/1.3 (BP=0.913, ratio=0.917, hyp_len=2854, ref_len=3113)\n'
Validation perplexity: 868445.7990150318
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.41
Epoch 522 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1762964614390512 Loss (std): 0.3068062432324092 Loss ratio: 1.740285883948258 Tokens per Sec: 2524.204911809266
Epoch Step: 10 / 67 Loss (mean): 0.41180443658322474 Loss (std): 0.837411758420006 Loss ratio: 2.0335180586398733 Tokens per Sec: 2302.886193932941
Epoch Step: 15 / 67 Loss (mean): 0.5101490355737042 Loss (std): 1.0955862426359764 Loss ratio: 2.14758073864415 Tokens per Sec: 2974.913925720299
Epoch Step: 20 / 67 Loss (mean): 0.47138234195881523 Loss (std): 0.7212649515578798 Loss ratio: 1.5301060038878098 Tokens per Sec: 3134.800614106181
Epoch Step: 25 / 67 Loss (mean): 0.2706677118621883 Loss (std): 0.8178917950121682 Loss ratio: 3.021756046870495 Tokens per Sec: 2965.1294437920205
Epoch Step: 30 / 67 Loss (mean): 0.14008617163381132 Loss (std): 0.30305559560812717 Loss ratio: 2.1633512578266605 Tokens per Sec: 2523.374439616696
Epoch Step: 35 / 67 Loss (mean): 0.45627813585451804 Loss (std): 1.1161983974395595 Loss ratio: 2.446311382747153 Tokens per Sec: 2997.174910035387
Epoch Step: 40 / 67 Loss (mean): 0.2211244690879539 Loss (std): 0.39569691168127036 Loss ratio: 1.789475915141164 Tokens per Sec: 2519.2048275743155
Epoch Step: 45 / 67 Loss (mean): 0.43959516204449756 Loss (std): 0.9601584098715751 Loss ratio: 2.184187845484942 Tokens per Sec: 2640.773804549809
Epoch Step: 50 / 67 Loss (mean): 4.699995236485847 Loss (std): 17.360351899777452 Loss ratio: 3.693695637180616 Tokens per Sec: 2885.2163007655963
Epoch Step: 55 / 67 Loss (mean): 0.266864796376467 Loss (std): 0.5410854842519744 Loss ratio: 2.0275641133597238 Tokens per Sec: 2637.924964118382
Epoch Step: 60 / 67 Loss (mean): 0.5552057635068195 Loss (std): 1.244523002739149 Loss ratio: 2.241552744118555 Tokens per Sec: 2744.156767372126
Epoch Step: 65 / 67 Loss (mean): 0.4168543485357077 Loss (std): 0.8990508481563666 Loss ratio: 2.1567505564341114 Tokens per Sec: 2703.3524277508463
Mean loss per sample: 0.7320238922161055 Std loss per sample: 4.463383040021557 ratio: 6.0973187999496234
Epoch ended with duration 0:00:11.547272
Train perplexity: 1.104113359915184
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use deprecated/removed and sslengine[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for developer[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.89653879404068 Loss (std): 45.134561950893655 Loss ratio: 0.46104349047365056 Tokens per Sec: 4406.24726465458
Mean loss per sample: 101.84211866643096 Std loss per sample: 52.616025779643046 ratio: 0.516643079195742
Epoch ended with duration 0:00:01.018962
b'BLEU = 2.52, 8.2/2.8/1.9/1.5 (BP=0.897, ratio=0.902, hyp_len=2807, ref_len=3113)\n'
Validation perplexity: 986019.3359424473
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.52
Epoch 523 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.31317500487966754 Loss (std): 0.9351489576706433 Loss ratio: 2.986026800031373 Tokens per Sec: 2521.1128873850907
Epoch Step: 10 / 67 Loss (mean): 0.293616648621537 Loss (std): 0.5286266130445721 Loss ratio: 1.8003972714978975 Tokens per Sec: 2473.549318664864
Epoch Step: 15 / 67 Loss (mean): 0.2128520868391206 Loss (std): 0.4618906333461613 Loss ratio: 2.170007540002513 Tokens per Sec: 2802.747345555652
Epoch Step: 20 / 67 Loss (mean): 0.4115454025049985 Loss (std): 1.9201288318946048 Loss ratio: 4.665654919741895 Tokens per Sec: 2770.411869767702
Epoch Step: 25 / 67 Loss (mean): 0.2534578098639031 Loss (std): 0.4990485033803544 Loss ratio: 1.968960844601016 Tokens per Sec: 2607.927577469884
Epoch Step: 30 / 67 Loss (mean): 0.34526602929145156 Loss (std): 0.6452643957858849 Loss ratio: 1.8688904816673808 Tokens per Sec: 3625.39595320184
Epoch Step: 35 / 67 Loss (mean): 0.19416185185309587 Loss (std): 0.37992931418349696 Loss ratio: 1.9567660205000206 Tokens per Sec: 2505.2737007455216
Epoch Step: 40 / 67 Loss (mean): 0.25376035575027345 Loss (std): 0.4747559586112748 Loss ratio: 1.8708830904953648 Tokens per Sec: 2517.95153614778
Epoch Step: 45 / 67 Loss (mean): 0.2790355697943596 Loss (std): 0.5136519252096235 Loss ratio: 1.8408116412834707 Tokens per Sec: 2995.0778439386213
Epoch Step: 50 / 67 Loss (mean): 0.2204868940552842 Loss (std): 0.2911320182296223 Loss ratio: 1.320405094720164 Tokens per Sec: 3216.361941118893
Epoch Step: 55 / 67 Loss (mean): 0.48664367567835143 Loss (std): 0.8469136769994067 Loss ratio: 1.7403157984512199 Tokens per Sec: 2998.6811606194547
Epoch Step: 60 / 67 Loss (mean): 0.32072023662840365 Loss (std): 0.7109182305422763 Loss ratio: 2.216630412897731 Tokens per Sec: 2209.1841863859113
Epoch Step: 65 / 67 Loss (mean): 0.5239783910255937 Loss (std): 1.1534112587951446 Loss ratio: 2.2012573009691274 Tokens per Sec: 3316.827563162234
Mean loss per sample: 0.5391820334535311 Std loss per sample: 2.9154484555966405 ratio: 5.407169146425027
Epoch ended with duration 0:00:11.416263
Train perplexity: 1.075678015890966
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.74818569421768 Loss (std): 46.36007584080522 Loss ratio: 0.4694777480202342 Tokens per Sec: 4278.117432722841
Mean loss per sample: 104.23686732712095 Std loss per sample: 53.49997546875307 ratio: 0.5132538691982845
Epoch ended with duration 0:00:01.038941
b'BLEU = 2.84, 8.7/3.1/2.1/1.8 (BP=0.894, ratio=0.899, hyp_len=2798, ref_len=3113)\n'
Validation perplexity: 1364041.5535538185
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.84
Epoch 524 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.561044737798511 Loss (std): 1.3851610636917793 Loss ratio: 2.4688959192933995 Tokens per Sec: 3262.2705686135723
Epoch Step: 10 / 67 Loss (mean): 0.18008357400321984 Loss (std): 0.2834555482453044 Loss ratio: 1.5740222272589741 Tokens per Sec: 2970.839563613411
Epoch Step: 15 / 67 Loss (mean): 0.2957824869099568 Loss (std): 0.4927227091344652 Loss ratio: 1.6658278665581092 Tokens per Sec: 2108.0747160394017
Epoch Step: 20 / 67 Loss (mean): 0.1693416224984503 Loss (std): 0.4219910046129695 Loss ratio: 2.491950876500143 Tokens per Sec: 2381.9719645522523
Epoch Step: 25 / 67 Loss (mean): 0.4368563021398586 Loss (std): 0.8640358210615198 Loss ratio: 1.977849047453825 Tokens per Sec: 2569.693142461206
Epoch Step: 30 / 67 Loss (mean): 0.575220094911856 Loss (std): 1.131704690426232 Loss ratio: 1.9674289901149038 Tokens per Sec: 2758.812522316088
Epoch Step: 35 / 67 Loss (mean): 0.27159929187837406 Loss (std): 0.46078975611862216 Loss ratio: 1.6965793722502422 Tokens per Sec: 3215.24911719385
Epoch Step: 40 / 67 Loss (mean): 0.23547007552406285 Loss (std): 0.5287586920563593 Loss ratio: 2.245545175451923 Tokens per Sec: 2569.3267155754097
Epoch Step: 45 / 67 Loss (mean): 0.2776519064063905 Loss (std): 0.37494708021104173 Loss ratio: 1.3504214145832059 Tokens per Sec: 2717.918085219472
Epoch Step: 50 / 67 Loss (mean): 0.3178965008883097 Loss (std): 0.8486822603766261 Loss ratio: 2.6696810377123454 Tokens per Sec: 2926.843494492881
Epoch Step: 55 / 67 Loss (mean): 0.23887320756693953 Loss (std): 0.3791714024454102 Loss ratio: 1.5873333234291453 Tokens per Sec: 3494.7971561832405
Epoch Step: 60 / 67 Loss (mean): 1.4016740691440646 Loss (std): 6.909182122156565 Loss ratio: 4.92923588603995 Tokens per Sec: 3120.743598680975
Epoch Step: 65 / 67 Loss (mean): 0.3052543189787684 Loss (std): 0.73771052152183 Loss ratio: 2.416707891275211 Tokens per Sec: 2484.732125175759
Mean loss per sample: 0.526871072106212 Std loss per sample: 3.4107981911857856 ratio: 6.4736865843684095
Epoch ended with duration 0:00:11.446596
Train perplexity: 1.0738877831495977
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow call log[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.04838845133781 Loss (std): 44.397516331543606 Loss ratio: 0.45281230046507537 Tokens per Sec: 4275.387576887965
Mean loss per sample: 103.76403459430229 Std loss per sample: 53.46106800255725 ratio: 0.5152177072873071
Epoch ended with duration 0:00:01.038541
b'BLEU = 2.58, 8.5/2.7/1.8/1.4 (BP=0.943, ratio=0.944, hyp_len=2940, ref_len=3113)\n'
Validation perplexity: 1279378.8911933356
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.58
Epoch 525 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.2357089068231981 Loss (std): 7.320695563161207 Loss ratio: 5.924288093044095 Tokens per Sec: 2327.674180163265
Epoch Step: 10 / 67 Loss (mean): 0.28415665172451554 Loss (std): 0.634737656054237 Loss ratio: 2.233759625903824 Tokens per Sec: 2449.846044189272
Epoch Step: 15 / 67 Loss (mean): 0.4449838747968897 Loss (std): 0.7056276419113426 Loss ratio: 1.5857375556213633 Tokens per Sec: 3093.7596426576183
Epoch Step: 20 / 67 Loss (mean): 0.41584597064502304 Loss (std): 0.723657633283153 Loss ratio: 1.7402059521237636 Tokens per Sec: 2543.7798346129184
Epoch Step: 25 / 67 Loss (mean): 0.24343735935690347 Loss (std): 0.44264900563991466 Loss ratio: 1.8183281596928063 Tokens per Sec: 2872.1885143456643
Epoch Step: 30 / 67 Loss (mean): 0.2895794585092517 Loss (std): 0.7054107033883777 Loss ratio: 2.435983225536147 Tokens per Sec: 3424.0495516590795
Epoch Step: 35 / 67 Loss (mean): 0.6551789934937915 Loss (std): 1.184090748903236 Loss ratio: 1.8072782562654863 Tokens per Sec: 3440.0369574605115
Epoch Step: 40 / 67 Loss (mean): 0.3182967749580712 Loss (std): 0.6083633193469553 Loss ratio: 1.9113084618186729 Tokens per Sec: 2872.9665116931387
Epoch Step: 45 / 67 Loss (mean): 0.32181844772276236 Loss (std): 0.5862242102965788 Loss ratio: 1.8215991483545861 Tokens per Sec: 2786.9817947102574
Epoch Step: 50 / 67 Loss (mean): 0.3519409606451518 Loss (std): 0.8953175087751861 Loss ratio: 2.5439423337765437 Tokens per Sec: 3119.6246308520767
Epoch Step: 55 / 67 Loss (mean): 0.2514496096264338 Loss (std): 0.44212856774956477 Loss ratio: 1.7583187677499807 Tokens per Sec: 2718.3232686643273
Epoch Step: 60 / 67 Loss (mean): 0.1936824330714444 Loss (std): 0.387117597224986 Loss ratio: 1.9987233281099295 Tokens per Sec: 2523.5360709158267
Epoch Step: 65 / 67 Loss (mean): 0.16930890466755955 Loss (std): 0.26474998910330294 Loss ratio: 1.563709774291809 Tokens per Sec: 2430.3944595664093
Mean loss per sample: 0.46686096604793825 Std loss per sample: 2.720903192102338 ratio: 5.828080285090594
Epoch ended with duration 0:00:11.476426
Train perplexity: 1.0652038139412763
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to db[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.61432844400406 Loss (std): 46.09148814494901 Loss ratio: 0.4673913910098879 Tokens per Sec: 4397.495971070838
Mean loss per sample: 102.10097716757875 Std loss per sample: 53.16745903295512 ratio: 0.520734086077268
Epoch ended with duration 0:00:01.022621
b'BLEU = 2.63, 8.7/2.9/1.9/1.5 (BP=0.903, ratio=0.907, hyp_len=2825, ref_len=3113)\n'
Validation perplexity: 1021222.7148362685
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.63
Model saved checkpoint_commit_msg_generator!
Epoch 526 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.24054625671851682 Loss (std): 0.45635271874022043 Loss ratio: 1.897151612191732 Tokens per Sec: 2423.4625678581842
Epoch Step: 10 / 67 Loss (mean): 0.290961417285871 Loss (std): 0.6947238595587557 Loss ratio: 2.3876837899651355 Tokens per Sec: 2399.708762598259
Epoch Step: 15 / 67 Loss (mean): 0.3807569502896513 Loss (std): 0.7358749005682443 Loss ratio: 1.9326630807617458 Tokens per Sec: 2846.4391603667427
Epoch Step: 20 / 67 Loss (mean): 0.7363263504157658 Loss (std): 1.2674928723510726 Loss ratio: 1.7213737789437853 Tokens per Sec: 2697.358976009385
Epoch Step: 25 / 67 Loss (mean): 1.7095165564169292 Loss (std): 7.763822127081165 Loss ratio: 4.541530819305893 Tokens per Sec: 2226.0926070662044
Epoch Step: 30 / 67 Loss (mean): 0.8548018152541772 Loss (std): 3.9463145884844057 Loss ratio: 4.616642732925129 Tokens per Sec: 2921.413760453312
Epoch Step: 35 / 67 Loss (mean): 0.2936374881937809 Loss (std): 0.5581583511920065 Loss ratio: 1.9008415942574055 Tokens per Sec: 3378.3379698522476
Epoch Step: 40 / 67 Loss (mean): 0.4196864046207338 Loss (std): 1.0921427879009487 Loss ratio: 2.6022829805218652 Tokens per Sec: 2776.9829690399465
Epoch Step: 45 / 67 Loss (mean): 0.32789344087359495 Loss (std): 0.721637959328881 Loss ratio: 2.2008307253912927 Tokens per Sec: 3187.144935934045
Epoch Step: 50 / 67 Loss (mean): 0.7914319745759713 Loss (std): 1.3008454963375966 Loss ratio: 1.6436605269006928 Tokens per Sec: 2469.7189906910094
Epoch Step: 55 / 67 Loss (mean): 1.0170371834974503 Loss (std): 2.144740180918469 Loss ratio: 2.108811964517368 Tokens per Sec: 3274.7908671843056
Epoch Step: 60 / 67 Loss (mean): 0.32735668833265663 Loss (std): 0.5285710016606454 Loss ratio: 1.614663822367108 Tokens per Sec: 2727.731406040737
Epoch Step: 65 / 67 Loss (mean): 0.333042517728245 Loss (std): 0.668846198470098 Loss ratio: 2.0082907222550515 Tokens per Sec: 2810.6028327187155
Mean loss per sample: 0.9272048360866563 Std loss per sample: 5.678729968934774 ratio: 6.124568971083367
Epoch ended with duration 0:00:11.550237
Train perplexity: 1.133659107744866
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print warnings[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.58568307757378 Loss (std): 45.80451655020782 Loss ratio: 0.46461631263604247 Tokens per Sec: 4376.473565280163
Mean loss per sample: 101.52487664223939 Std loss per sample: 52.27110279052972 ratio: 0.5148600473037398
Epoch ended with duration 0:00:01.024951
b'BLEU = 2.84, 8.6/3.1/2.1/1.7 (BP=0.915, ratio=0.919, hyp_len=2860, ref_len=3113)\n'
Validation perplexity: 944526.7309929021
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.84
Epoch 527 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3244615870862617 Loss (std): 0.676160893198286 Loss ratio: 2.08394743818633 Tokens per Sec: 2613.6797834182676
Epoch Step: 10 / 67 Loss (mean): 0.42656433926094905 Loss (std): 1.0534045451841565 Loss ratio: 2.4695091648055945 Tokens per Sec: 2886.148713249989
Epoch Step: 15 / 67 Loss (mean): 0.4013345031562494 Loss (std): 1.1809753474465656 Loss ratio: 2.9426210259993093 Tokens per Sec: 2681.0940574337046
Epoch Step: 20 / 67 Loss (mean): 0.19182033756169403 Loss (std): 0.32839635814612017 Loss ratio: 1.7119996884610842 Tokens per Sec: 2640.094817245747
Epoch Step: 25 / 67 Loss (mean): 0.5165077527490212 Loss (std): 1.0442056330935883 Loss ratio: 2.0216649750869924 Tokens per Sec: 2780.9098459549073
Epoch Step: 30 / 67 Loss (mean): 0.3796162170747266 Loss (std): 0.8889358587369045 Loss ratio: 2.341669872764997 Tokens per Sec: 2664.3007289292896
Epoch Step: 35 / 67 Loss (mean): 0.5043661281197274 Loss (std): 0.9438816732881595 Loss ratio: 1.8714216135150519 Tokens per Sec: 3024.703171712271
Epoch Step: 40 / 67 Loss (mean): 0.33000691273628036 Loss (std): 0.8570689724757945 Loss ratio: 2.597124300728534 Tokens per Sec: 2617.426464311424
Epoch Step: 45 / 67 Loss (mean): 3.364079498926003 Loss (std): 11.15971437021914 Loss ratio: 3.3173158879812226 Tokens per Sec: 3085.4645394129266
Epoch Step: 50 / 67 Loss (mean): 0.1891292311927481 Loss (std): 0.4252720666093038 Loss ratio: 2.2485792594159832 Tokens per Sec: 2151.520479409781
Epoch Step: 55 / 67 Loss (mean): 0.17082343163201585 Loss (std): 0.19658308743946765 Loss ratio: 1.1507969694868483 Tokens per Sec: 3078.952732722434
Epoch Step: 60 / 67 Loss (mean): 0.21466029258772323 Loss (std): 0.3488167484861851 Loss ratio: 1.6249709915197166 Tokens per Sec: 2600.784680663807
Epoch Step: 65 / 67 Loss (mean): 0.2967084111096483 Loss (std): 0.4447031320336841 Loss ratio: 1.4987884245362513 Tokens per Sec: 2989.342288831625
Mean loss per sample: 0.5425648926814856 Std loss per sample: 2.57992992243644 ratio: 4.7550624031087025
Epoch ended with duration 0:00:11.455451
Train perplexity: 1.0761704662869376
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run correctly[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.7807714343071 Loss (std): 45.39664818472725 Loss ratio: 0.4595696867473617 Tokens per Sec: 4397.96964062829
Mean loss per sample: 103.1962629941399 Std loss per sample: 53.12323826786878 ratio: 0.5147787015396617
Epoch ended with duration 0:00:01.038525
b'BLEU = 2.42, 8.2/2.6/1.7/1.4 (BP=0.911, ratio=0.915, hyp_len=2847, ref_len=3113)\n'
Validation perplexity: 1184631.1938622212
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.42
Epoch 528 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.262393073306157 Loss (std): 0.5798169853219639 Loss ratio: 2.20972672035988 Tokens per Sec: 3038.041316319953
Epoch Step: 10 / 67 Loss (mean): 0.2768779420584906 Loss (std): 0.6894961816201434 Loss ratio: 2.4902532014431364 Tokens per Sec: 2986.5304296313675
Epoch Step: 15 / 67 Loss (mean): 0.5887977033562493 Loss (std): 1.0612972306708766 Loss ratio: 1.8024819468916027 Tokens per Sec: 3299.3685485724395
Epoch Step: 20 / 67 Loss (mean): 0.3252645893035151 Loss (std): 0.5120554649236968 Loss ratio: 1.574273627572416 Tokens per Sec: 2533.2759291387865
Epoch Step: 25 / 67 Loss (mean): 5.834155147063939 Loss (std): 18.551679311803806 Loss ratio: 3.179839898693817 Tokens per Sec: 2782.291985438602
Epoch Step: 30 / 67 Loss (mean): 0.28027120115439175 Loss (std): 0.4447358170314387 Loss ratio: 1.5868052629012321 Tokens per Sec: 3424.1081321714055
Epoch Step: 35 / 67 Loss (mean): 0.3863685902956604 Loss (std): 1.1201381961093468 Loss ratio: 2.899144040803588 Tokens per Sec: 2915.958526362758
Epoch Step: 40 / 67 Loss (mean): 0.16475609825630227 Loss (std): 0.2708215162145263 Loss ratio: 1.64377233426118 Tokens per Sec: 2468.8043820813314
Epoch Step: 45 / 67 Loss (mean): 0.2968578182262718 Loss (std): 0.4310956292081787 Loss ratio: 1.4521956395960163 Tokens per Sec: 2687.7466369521676
Epoch Step: 50 / 67 Loss (mean): 0.11198707802577701 Loss (std): 0.12251273068286954 Loss ratio: 1.0939898856426074 Tokens per Sec: 2685.359496598194
Epoch Step: 55 / 67 Loss (mean): 0.24927882129122736 Loss (std): 0.42617391137257826 Loss ratio: 1.7096274331090806 Tokens per Sec: 2827.721572209151
Epoch Step: 60 / 67 Loss (mean): 0.5170893131580669 Loss (std): 0.9002837056124245 Loss ratio: 1.741060359793629 Tokens per Sec: 2550.7024947672116
Epoch Step: 65 / 67 Loss (mean): 0.084682998784956 Loss (std): 0.13374859929076705 Loss ratio: 1.5794032002859066 Tokens per Sec: 2098.9816032579647
Mean loss per sample: 0.4772437777244664 Std loss per sample: 2.9566116464919605 ratio: 6.195181130677708
Epoch ended with duration 0:00:11.412106
Train perplexity: 1.0667012547078865
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.92487788200378 Loss (std): 44.366236530106555 Loss ratio: 0.45306399650113827 Tokens per Sec: 4416.485633441162
Mean loss per sample: 101.79225519956013 Std loss per sample: 52.3069522976308 ratio: 0.5138598432177857
Epoch ended with duration 0:00:01.020824
b'BLEU = 2.46, 8.1/2.6/1.8/1.4 (BP=0.907, ratio=0.911, hyp_len=2836, ref_len=3113)\n'
Validation perplexity: 979378.8772449278
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.46
Epoch 529 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.3981544854050298 Loss (std): 1.942948107604736 Loss ratio: 1.3896519504008067 Tokens per Sec: 2823.6480155005975
Epoch Step: 10 / 67 Loss (mean): 0.21103041592868976 Loss (std): 0.3005535904151193 Loss ratio: 1.42421929603115 Tokens per Sec: 3133.300240516139
Epoch Step: 15 / 67 Loss (mean): 0.5092767539608758 Loss (std): 1.0012735082371838 Loss ratio: 1.9660695298770787 Tokens per Sec: 2692.342447615367
Epoch Step: 20 / 67 Loss (mean): 0.24882564986182842 Loss (std): 0.5457828410058159 Loss ratio: 2.1934348058927453 Tokens per Sec: 2602.8103503760094
Epoch Step: 25 / 67 Loss (mean): 0.1691430281562134 Loss (std): 0.3682892772372106 Loss ratio: 2.177383728149138 Tokens per Sec: 2550.98122524732
Epoch Step: 30 / 67 Loss (mean): 0.3145953270013706 Loss (std): 0.46501573641853056 Loss ratio: 1.4781393635147817 Tokens per Sec: 2444.6300502726563
Epoch Step: 35 / 67 Loss (mean): 1.4441375021633576 Loss (std): 8.767429215722458 Loss ratio: 6.071048776580215 Tokens per Sec: 2637.585890492895
Epoch Step: 40 / 67 Loss (mean): 0.15786517244077913 Loss (std): 0.29236796151488775 Loss ratio: 1.8520105289503637 Tokens per Sec: 2771.443060871741
Epoch Step: 45 / 67 Loss (mean): 0.4043198729195865 Loss (std): 1.0493183649841882 Loss ratio: 2.5952678442617207 Tokens per Sec: 2645.893726239511
Epoch Step: 50 / 67 Loss (mean): 0.3198275172344438 Loss (std): 0.7466689803038031 Loss ratio: 2.3345989324504273 Tokens per Sec: 2575.040313482166
Epoch Step: 55 / 67 Loss (mean): 0.5776766716953716 Loss (std): 1.2816244524252924 Loss ratio: 2.2185844006197573 Tokens per Sec: 3098.1600725618364
Epoch Step: 60 / 67 Loss (mean): 0.5031358439591713 Loss (std): 0.9106942719269856 Loss ratio: 1.8100365594324204 Tokens per Sec: 3027.4898104773733
Epoch Step: 65 / 67 Loss (mean): 0.34981951617010054 Loss (std): 0.6628787605062901 Loss ratio: 1.894916463677126 Tokens per Sec: 2997.942188522382
Mean loss per sample: 0.46121153084882177 Std loss per sample: 2.9443218157665125 ratio: 6.383885958678724
Epoch ended with duration 0:00:11.470284
Train perplexity: 1.0643899184267904
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.3008126616478 Loss (std): 43.945359462658665 Loss ratio: 0.4470498083664776 Tokens per Sec: 4423.569149947599
Mean loss per sample: 101.67725005715353 Std loss per sample: 51.68236960654286 ratio: 0.508298263156132
Epoch ended with duration 0:00:01.022918
b'BLEU = 2.50, 8.3/2.6/1.7/1.3 (BP=0.949, ratio=0.950, hyp_len=2958, ref_len=3113)\n'
Validation perplexity: 964233.3361477067
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.5
Epoch 530 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.3201079113659944 Loss (std): 7.531712232253881 Loss ratio: 5.7053761797854605 Tokens per Sec: 2768.583816721603
Epoch Step: 10 / 67 Loss (mean): 0.40426520385517506 Loss (std): 1.069807598107535 Loss ratio: 2.646301457324498 Tokens per Sec: 2338.8499603984746
Epoch Step: 15 / 67 Loss (mean): 0.40442953850651975 Loss (std): 0.9915215458702075 Loss ratio: 2.451654618334025 Tokens per Sec: 2943.053077077459
Epoch Step: 20 / 67 Loss (mean): 0.40722940835985355 Loss (std): 0.7749055879415738 Loss ratio: 1.9028723663709926 Tokens per Sec: 3080.6606542099194
Epoch Step: 25 / 67 Loss (mean): 0.1449798499852477 Loss (std): 0.2516292710585467 Loss ratio: 1.7356154740410548 Tokens per Sec: 2478.045256201416
Epoch Step: 30 / 67 Loss (mean): 0.29838192828265164 Loss (std): 0.5698219466362656 Loss ratio: 1.9097066297409402 Tokens per Sec: 2785.866697470255
Epoch Step: 35 / 67 Loss (mean): 0.4135399662900454 Loss (std): 1.1632000128838988 Loss ratio: 2.812787415250846 Tokens per Sec: 2976.1084206978517
Epoch Step: 40 / 67 Loss (mean): 0.20249668542601285 Loss (std): 0.4241875167092214 Loss ratio: 2.0947874569739993 Tokens per Sec: 2397.843123168295
Epoch Step: 45 / 67 Loss (mean): 0.3116383066808339 Loss (std): 0.9562821321320945 Loss ratio: 3.0685641387195575 Tokens per Sec: 2408.217717857252
Epoch Step: 50 / 67 Loss (mean): 0.2310248983430938 Loss (std): 0.8856045799138501 Loss ratio: 3.833372880002932 Tokens per Sec: 2668.993870208216
Epoch Step: 55 / 67 Loss (mean): 0.31931249371882586 Loss (std): 0.7415588113172169 Loss ratio: 2.322360777934999 Tokens per Sec: 2805.587535235166
Epoch Step: 60 / 67 Loss (mean): 1.1715999246953288 Loss (std): 1.548378328085899 Loss ratio: 1.3215930587299674 Tokens per Sec: 3101.8358218929175
Epoch Step: 65 / 67 Loss (mean): 0.3471272530250644 Loss (std): 0.7245010415410896 Loss ratio: 2.087133854306671 Tokens per Sec: 2819.4504009662596
Mean loss per sample: 0.6693030076992589 Std loss per sample: 4.050989469882843 ratio: 6.0525493286040835
Epoch ended with duration 0:00:11.507994
Train perplexity: 1.0947833676070773
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable print time unit testing[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.72363847494125 Loss (std): 44.348575176764655 Loss ratio: 0.4538162502835659 Tokens per Sec: 4313.430645603614
Mean loss per sample: 103.92304152943439 Std loss per sample: 51.34799239623712 ratio: 0.4940963201283297
Epoch ended with duration 0:00:01.035644
b'BLEU = 2.88, 9.0/3.0/2.0/1.6 (BP=0.953, ratio=0.954, hyp_len=2971, ref_len=3113)\n'
Validation perplexity: 1307246.4869221142
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.88
Model saved checkpoint_commit_msg_generator!
Epoch 531 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2998102453948377 Loss (std): 0.6690646188142808 Loss ratio: 2.2316269343402535 Tokens per Sec: 2329.0566300522573
Epoch Step: 10 / 67 Loss (mean): 0.3018414433167891 Loss (std): 0.5838303870901768 Loss ratio: 1.9342287151649822 Tokens per Sec: 2950.3237232763095
Epoch Step: 15 / 67 Loss (mean): 0.26541741673645447 Loss (std): 0.6027879176053464 Loss ratio: 2.2710940563628617 Tokens per Sec: 2176.2642428773
Epoch Step: 20 / 67 Loss (mean): 0.5325999739798135 Loss (std): 1.3410448582301908 Loss ratio: 2.51792137391471 Tokens per Sec: 2748.352349113243
Epoch Step: 25 / 67 Loss (mean): 0.29893105867995473 Loss (std): 1.0056052310614831 Loss ratio: 3.3640038459105606 Tokens per Sec: 3067.5639637333124
Epoch Step: 30 / 67 Loss (mean): 0.37471594463204383 Loss (std): 0.9762252952794377 Loss ratio: 2.605240874492416 Tokens per Sec: 2879.303356768491
Epoch Step: 35 / 67 Loss (mean): 0.16314492719538976 Loss (std): 0.21698421136675874 Loss ratio: 1.330008938046162 Tokens per Sec: 2578.78873025298
Epoch Step: 40 / 67 Loss (mean): 0.17629590114665916 Loss (std): 0.27728480496151864 Loss ratio: 1.572837503073016 Tokens per Sec: 2422.8932834867187
Epoch Step: 45 / 67 Loss (mean): 0.2742428360725171 Loss (std): 0.4363744097412975 Loss ratio: 1.5911971156318865 Tokens per Sec: 3104.3285799487035
Epoch Step: 50 / 67 Loss (mean): 2.2126639699454245 Loss (std): 7.427349263615187 Loss ratio: 3.356745246680355 Tokens per Sec: 2805.05913663826
Epoch Step: 55 / 67 Loss (mean): 1.3537723181207184 Loss (std): 1.5651709694952176 Loss ratio: 1.156155247485012 Tokens per Sec: 3141.7371728759517
Epoch Step: 60 / 67 Loss (mean): 0.14196154753881274 Loss (std): 0.23978753856335933 Loss ratio: 1.6891020330544133 Tokens per Sec: 2514.697659764187
Epoch Step: 65 / 67 Loss (mean): 0.5646204441472946 Loss (std): 1.0523932011924018 Loss ratio: 1.863894961830075 Tokens per Sec: 3452.3491393193285
Mean loss per sample: 0.6272402838721927 Std loss per sample: 3.9259237439423105 ratio: 6.259042738304515
Epoch ended with duration 0:00:11.485085
Train perplexity: 1.0885705693881074
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) over[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.91771098971367 Loss (std): 45.12454090188984 Loss ratio: 0.46084146009734855 Tokens per Sec: 4421.852335797527
Mean loss per sample: 101.58216247921351 Std loss per sample: 52.20687464136393 ratio: 0.5139374213661467
Epoch ended with duration 0:00:01.020015
b'BLEU = 2.27, 8.1/2.6/1.6/1.2 (BP=0.903, ratio=0.908, hyp_len=2826, ref_len=3113)\n'
Validation perplexity: 951887.8709860115
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.27
Epoch 532 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.38952574860377354 Loss (std): 0.7283673261069782 Loss ratio: 1.8698823600692827 Tokens per Sec: 2421.6506460181217
Epoch Step: 10 / 67 Loss (mean): 3.161540518378388 Loss (std): 11.227679726093797 Loss ratio: 3.551331909499828 Tokens per Sec: 2514.6265547184807
Epoch Step: 15 / 67 Loss (mean): 0.3219797987931088 Loss (std): 0.6561749012380691 Loss ratio: 2.0379381057371884 Tokens per Sec: 2567.0588480548126
Epoch Step: 20 / 67 Loss (mean): 0.5858024860353908 Loss (std): 0.7237156341473042 Loss ratio: 1.2354260205436915 Tokens per Sec: 2449.265098541614
Epoch Step: 25 / 67 Loss (mean): 0.151043130983453 Loss (std): 0.30255460272445406 Loss ratio: 2.003100708747883 Tokens per Sec: 3094.3588049761074
Epoch Step: 30 / 67 Loss (mean): 0.24399348064980586 Loss (std): 0.46903014802184406 Loss ratio: 1.922306066427342 Tokens per Sec: 3129.199375340726
Epoch Step: 35 / 67 Loss (mean): 0.29333994144326425 Loss (std): 0.46224405129618595 Loss ratio: 1.5757964940672422 Tokens per Sec: 3214.740866477645
Epoch Step: 40 / 67 Loss (mean): 0.242920281332772 Loss (std): 0.5298717889520679 Loss ratio: 2.181257925624606 Tokens per Sec: 2686.389761289118
Epoch Step: 45 / 67 Loss (mean): 0.43149910640568123 Loss (std): 0.8108796350122252 Loss ratio: 1.8792150967975885 Tokens per Sec: 2925.5811162036407
Epoch Step: 50 / 67 Loss (mean): 0.6057333510434546 Loss (std): 1.2477433508662514 Loss ratio: 2.059888808692556 Tokens per Sec: 2710.9313434874516
Epoch Step: 55 / 67 Loss (mean): 0.33035166638728697 Loss (std): 0.649167411484412 Loss ratio: 1.9650798755873755 Tokens per Sec: 2489.2141672144103
Epoch Step: 60 / 67 Loss (mean): 0.4350792701698083 Loss (std): 0.9704892067411258 Loss ratio: 2.2306031872360887 Tokens per Sec: 2792.3029134172025
Epoch Step: 65 / 67 Loss (mean): 0.2961596975583234 Loss (std): 0.640420342592393 Loss ratio: 2.1624155746791764 Tokens per Sec: 3097.937008140019
Mean loss per sample: 0.4925978819467409 Std loss per sample: 2.7180842489150585 ratio: 5.517856142972483
Epoch ended with duration 0:00:11.399263
Train perplexity: 1.0689195295386156
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow call log[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for openssl engines[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 116.91680192947388 Loss (std): 46.64589372044818 Loss ratio: 0.3989665552824969 Tokens per Sec: 4318.167511875224
Mean loss per sample: 106.39886465693107 Std loss per sample: 52.09500486180993 ratio: 0.48961993184592073
Epoch ended with duration 0:00:01.047789
b'BLEU = 2.30, 8.4/2.5/1.4/1.1 (BP=0.960, ratio=0.961, hyp_len=2991, ref_len=3113)\n'
Validation perplexity: 1828400.2179121384
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.3
Epoch 533 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.09335581101532582 Loss (std): 0.15056088907064452 Loss ratio: 1.6127639772303792 Tokens per Sec: 2922.6338385999884
Epoch Step: 10 / 67 Loss (mean): 0.26213443092456146 Loss (std): 0.43285636733884014 Loss ratio: 1.651276277641719 Tokens per Sec: 3373.929220391144
Epoch Step: 15 / 67 Loss (mean): 0.39790764552526525 Loss (std): 0.7126795804372996 Loss ratio: 1.7910678230284163 Tokens per Sec: 2743.4104869316116
Epoch Step: 20 / 67 Loss (mean): 0.3225866934953956 Loss (std): 0.7613093479678531 Loss ratio: 2.360014728811868 Tokens per Sec: 2970.866367157391
Epoch Step: 25 / 67 Loss (mean): 0.19485317036242122 Loss (std): 0.3454623708242317 Loss ratio: 1.7729368743740825 Tokens per Sec: 3131.6459606508834
Epoch Step: 30 / 67 Loss (mean): 0.22091974358045263 Loss (std): 0.35930977065570113 Loss ratio: 1.6264267051570735 Tokens per Sec: 2763.072739644549
Epoch Step: 35 / 67 Loss (mean): 0.44620953611592995 Loss (std): 0.7855256011815068 Loss ratio: 1.7604410878780927 Tokens per Sec: 2946.712087712976
Epoch Step: 40 / 67 Loss (mean): 0.4428748821519548 Loss (std): 0.8558252604887909 Loss ratio: 1.9324312463382123 Tokens per Sec: 2717.681677100167
Epoch Step: 45 / 67 Loss (mean): 1.0191878957084555 Loss (std): 6.822245266845235 Loss ratio: 6.6938052301955295 Tokens per Sec: 2637.9705568257946
Epoch Step: 50 / 67 Loss (mean): 2.939518642346229 Loss (std): 11.555511818799545 Loss ratio: 3.931089822780068 Tokens per Sec: 2701.7093455930294
Epoch Step: 55 / 67 Loss (mean): 0.3395305273770646 Loss (std): 0.7133309690935788 Loss ratio: 2.1009332344993865 Tokens per Sec: 2656.1284283363325
Epoch Step: 60 / 67 Loss (mean): 0.42401726790558314 Loss (std): 0.7363931209977577 Loss ratio: 1.7367054993659643 Tokens per Sec: 3130.16825497185
Epoch Step: 65 / 67 Loss (mean): 0.29776642014644494 Loss (std): 0.6237653959646542 Loss ratio: 2.094814437631615 Tokens per Sec: 2126.6642361470927
Mean loss per sample: 0.6301414467459074 Std loss per sample: 3.840791009107912 ratio: 6.095125196004823
Epoch ended with duration 0:00:11.400879
Train perplexity: 1.0889979460660315
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test case for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.12103742361069 Loss (std): 44.03487512549745 Loss ratio: 0.45340202590126283 Tokens per Sec: 4407.67230098002
Mean loss per sample: 101.7280271811197 Std loss per sample: 52.08889566137908 ratio: 0.5120407532197435
Epoch ended with duration 0:00:01.021190
b'BLEU = 2.81, 7.9/3.0/2.0/1.6 (BP=0.954, ratio=0.955, hyp_len=2974, ref_len=3113)\n'
Validation perplexity: 970891.3092143681
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.81
Epoch 534 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.33395304283112637 Loss (std): 0.6646901952628866 Loss ratio: 1.9903702317783871 Tokens per Sec: 3146.4303281982584
Epoch Step: 10 / 67 Loss (mean): 0.3497320263631991 Loss (std): 0.7387689231932868 Loss ratio: 2.112385676758325 Tokens per Sec: 2473.758812545455
Epoch Step: 15 / 67 Loss (mean): 0.7807317021506606 Loss (std): 1.1942152818989753 Loss ratio: 1.5296103368280072 Tokens per Sec: 2929.8240004774198
Epoch Step: 20 / 67 Loss (mean): 0.301670815799298 Loss (std): 0.4836364911355167 Loss ratio: 1.6031928373783453 Tokens per Sec: 3077.121146710411
Epoch Step: 25 / 67 Loss (mean): 0.396851365447219 Loss (std): 1.025517626252944 Loss ratio: 2.5841353099472633 Tokens per Sec: 2945.1296067197322
Epoch Step: 30 / 67 Loss (mean): 0.41616759569842543 Loss (std): 1.2551685882525134 Loss ratio: 3.0160171075935174 Tokens per Sec: 2288.9564411262127
Epoch Step: 35 / 67 Loss (mean): 1.163068433626222 Loss (std): 4.611730657133632 Loss ratio: 3.9651412795678316 Tokens per Sec: 2483.207478353283
Epoch Step: 40 / 67 Loss (mean): 0.3234981654477451 Loss (std): 0.8984413330733443 Loss ratio: 2.7772687113382415 Tokens per Sec: 2706.505664388745
Epoch Step: 45 / 67 Loss (mean): 1.5702366300356516 Loss (std): 2.2937370929670595 Loss ratio: 1.4607588748677842 Tokens per Sec: 2926.2163578877626
Epoch Step: 50 / 67 Loss (mean): 0.1964649910037224 Loss (std): 0.3785912718502848 Loss ratio: 1.9270164618952987 Tokens per Sec: 2625.6567935656835
Epoch Step: 55 / 67 Loss (mean): 0.22519039980033995 Loss (std): 0.4836102432903231 Loss ratio: 2.14756154666942 Tokens per Sec: 2931.333109745042
Epoch Step: 60 / 67 Loss (mean): 0.2753070030321396 Loss (std): 0.6910702332430879 Loss ratio: 2.5101803645816148 Tokens per Sec: 2310.1451126012184
Epoch Step: 65 / 67 Loss (mean): 0.3755582976336882 Loss (std): 0.7406647361689992 Loss ratio: 1.972169809150185 Tokens per Sec: 3462.4162799510714
Mean loss per sample: 0.5630044442317607 Std loss per sample: 3.1130428992286645 ratio: 5.529339832257489
Epoch ended with duration 0:00:11.403004
Train perplexity: 1.0791506975372689
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print change time unit test[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.40230885148048 Loss (std): 44.06370642308792 Loss ratio: 0.452388726126364 Tokens per Sec: 4440.556602429309
Mean loss per sample: 103.12107666954398 Std loss per sample: 51.209435468260565 ratio: 0.4965952366106829
Epoch ended with duration 0:00:01.035069
b'BLEU = 2.51, 8.3/2.7/1.7/1.3 (BP=0.952, ratio=0.953, hyp_len=2966, ref_len=3113)\n'
Validation perplexity: 1172622.1601122508
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.51
Epoch 535 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.27086954076548864 Loss (std): 0.44512601791323725 Loss ratio: 1.6433225258746056 Tokens per Sec: 2311.6193578998227
Epoch Step: 10 / 67 Loss (mean): 0.3943810102791758 Loss (std): 0.8685440049320903 Loss ratio: 2.2022967188944067 Tokens per Sec: 2689.2421135159234
Epoch Step: 15 / 67 Loss (mean): 0.5936960876715602 Loss (std): 1.0581124019235402 Loss ratio: 1.7822458727551875 Tokens per Sec: 3198.9406869643412
Epoch Step: 20 / 67 Loss (mean): 0.8872321421658853 Loss (std): 5.330269414171086 Loss ratio: 6.007750577158969 Tokens per Sec: 2862.740596286716
Epoch Step: 25 / 67 Loss (mean): 0.9801801971334498 Loss (std): 1.3645723591372454 Loss ratio: 1.3921647908496373 Tokens per Sec: 2744.3423644803484
Epoch Step: 30 / 67 Loss (mean): 0.3618035931212944 Loss (std): 0.5570251419298367 Loss ratio: 1.5395788005430182 Tokens per Sec: 3077.323096683264
Epoch Step: 35 / 67 Loss (mean): 0.5423049710079795 Loss (std): 0.7820128927166641 Loss ratio: 1.442016825446281 Tokens per Sec: 2822.5719790295398
Epoch Step: 40 / 67 Loss (mean): 0.6718687756292638 Loss (std): 1.7465179468754393 Loss ratio: 2.599492654260756 Tokens per Sec: 2801.5854618301496
Epoch Step: 45 / 67 Loss (mean): 0.35128686251482577 Loss (std): 0.6565112172202848 Loss ratio: 1.868874948867686 Tokens per Sec: 2780.0293198771014
Epoch Step: 50 / 67 Loss (mean): 0.3292441059893463 Loss (std): 0.5193014045577422 Loss ratio: 1.5772534575745627 Tokens per Sec: 2841.9099507155165
Epoch Step: 55 / 67 Loss (mean): 0.37377886890317313 Loss (std): 0.5732846755033226 Loss ratio: 1.533753572494841 Tokens per Sec: 3038.8615785035445
Epoch Step: 60 / 67 Loss (mean): 0.40265756249391416 Loss (std): 0.736991706232538 Loss ratio: 1.830318799100357 Tokens per Sec: 2453.43387643573
Epoch Step: 65 / 67 Loss (mean): 1.218653128195001 Loss (std): 1.6320123207854065 Loss ratio: 1.339193477640885 Tokens per Sec: 2736.63511945899
Mean loss per sample: 0.7271231994011724 Std loss per sample: 4.902956246828156 ratio: 6.742951195706616
Epoch ended with duration 0:00:11.419421
Train perplexity: 1.1033815065872463
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during command[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.04555800557137 Loss (std): 44.63372585607807 Loss ratio: 0.45523455385446215 Tokens per Sec: 4374.2498164535455
Mean loss per sample: 101.84749178234182 Std loss per sample: 52.33789662207493 ratio: 0.5138849833820768
Epoch ended with duration 0:00:01.028292
b'BLEU = 2.79, 8.4/3.0/2.0/1.6 (BP=0.924, ratio=0.927, hyp_len=2886, ref_len=3113)\n'
Validation perplexity: 986737.5707820811
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.79
Model saved checkpoint_commit_msg_generator!
Epoch 536 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.23437699957935365 Loss (std): 0.5324060223569813 Loss ratio: 2.27157964865372 Tokens per Sec: 2523.054220771623
Epoch Step: 10 / 67 Loss (mean): 0.7197299661929719 Loss (std): 1.3432252632706927 Loss ratio: 1.8662905900329723 Tokens per Sec: 2785.9583426056183
Epoch Step: 15 / 67 Loss (mean): 0.39779549675949966 Loss (std): 0.7886452809332589 Loss ratio: 1.982539489153796 Tokens per Sec: 2647.3579738211383
Epoch Step: 20 / 67 Loss (mean): 0.32575930737129966 Loss (std): 0.6566168545347622 Loss ratio: 2.015650327333094 Tokens per Sec: 2711.886052599885
Epoch Step: 25 / 67 Loss (mean): 0.24369701636169339 Loss (std): 0.5022998563069005 Loss ratio: 2.061165392199101 Tokens per Sec: 2893.8478943747537
Epoch Step: 30 / 67 Loss (mean): 0.2993679977953434 Loss (std): 0.5377329043305346 Loss ratio: 1.796227079349157 Tokens per Sec: 2525.9050713853912
Epoch Step: 35 / 67 Loss (mean): 0.9455166549669229 Loss (std): 1.6982634878633989 Loss ratio: 1.796122235332607 Tokens per Sec: 2785.904278782658
Epoch Step: 40 / 67 Loss (mean): 2.2702236167388037 Loss (std): 9.082053311570666 Loss ratio: 4.0005104539512795 Tokens per Sec: 2534.010145045333
Epoch Step: 45 / 67 Loss (mean): 1.1034056557427903 Loss (std): 2.124668777979964 Loss ratio: 1.9255554536284119 Tokens per Sec: 2697.562617136991
Epoch Step: 50 / 67 Loss (mean): 0.22402997767858324 Loss (std): 0.40889861446276554 Loss ratio: 1.8251959791265708 Tokens per Sec: 2840.9922728582987
Epoch Step: 55 / 67 Loss (mean): 0.38762938026229676 Loss (std): 0.9413409818666679 Loss ratio: 2.428456225969486 Tokens per Sec: 2708.033278253002
Epoch Step: 60 / 67 Loss (mean): 0.3327117787412135 Loss (std): 0.6227453487461151 Loss ratio: 1.8717261862571224 Tokens per Sec: 2926.753295314642
Epoch Step: 65 / 67 Loss (mean): 0.2552892823368893 Loss (std): 0.4332931435861369 Loss ratio: 1.6972633540265394 Tokens per Sec: 3192.8035216527614
Mean loss per sample: 0.7225605674771819 Std loss per sample: 4.479249825208802 ratio: 6.1991340613121055
Epoch ended with duration 0:00:11.380545
Train perplexity: 1.1027005742286589
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) over to avoid[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.37669932842255 Loss (std): 44.45323697249318 Loss ratio: 0.45186753851224154 Tokens per Sec: 4409.129353189974
Mean loss per sample: 102.10892627217243 Std loss per sample: 52.00246325526849 ratio: 0.5092842041709005
Epoch ended with duration 0:00:01.019687
b'BLEU = 2.59, 8.3/2.7/1.7/1.3 (BP=0.977, ratio=0.978, hyp_len=3043, ref_len=3113)\n'
Validation perplexity: 1022323.415732843
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.59
Epoch 537 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.23445009444913012 Loss (std): 0.40255897980108213 Loss ratio: 1.717034837400876 Tokens per Sec: 2983.753457119777
Epoch Step: 10 / 67 Loss (mean): 0.3730772633316519 Loss (std): 0.7249683799821719 Loss ratio: 1.943212442130792 Tokens per Sec: 2377.551933281851
Epoch Step: 15 / 67 Loss (mean): 1.2074381243376138 Loss (std): 5.321830047285787 Loss ratio: 4.407538523106747 Tokens per Sec: 2435.3165363214953
Epoch Step: 20 / 67 Loss (mean): 1.6815849519243784 Loss (std): 6.773561819706006 Loss ratio: 4.028081847399058 Tokens per Sec: 2564.654189695297
Epoch Step: 25 / 67 Loss (mean): 3.6959150376933394 Loss (std): 13.512701578645189 Loss ratio: 3.6561180224203995 Tokens per Sec: 2744.086531022334
Epoch Step: 30 / 67 Loss (mean): 0.2622598581801867 Loss (std): 0.3882423293617268 Loss ratio: 1.4803726809574622 Tokens per Sec: 2851.5232846638783
Epoch Step: 35 / 67 Loss (mean): 0.32539515294729426 Loss (std): 0.6434607876893776 Loss ratio: 1.9774750234020908 Tokens per Sec: 3394.261758346403
Epoch Step: 40 / 67 Loss (mean): 2.1389162256891723 Loss (std): 8.974600937607462 Loss ratio: 4.195863694809174 Tokens per Sec: 2543.690816774218
Epoch Step: 45 / 67 Loss (mean): 0.45786638261779444 Loss (std): 0.7669882398100466 Loss ratio: 1.675135517538733 Tokens per Sec: 2941.743936235238
Epoch Step: 50 / 67 Loss (mean): 0.29812820381266647 Loss (std): 0.44466292769414845 Loss ratio: 1.4915158042999492 Tokens per Sec: 2726.327978068044
Epoch Step: 55 / 67 Loss (mean): 0.3680452345361118 Loss (std): 0.9318921651552 Loss ratio: 2.532004432362144 Tokens per Sec: 2930.8690684460867
Epoch Step: 60 / 67 Loss (mean): 0.26748068518736545 Loss (std): 0.544944571036082 Loss ratio: 2.0373230712130037 Tokens per Sec: 2896.2458141859133
Epoch Step: 65 / 67 Loss (mean): 0.2110995751718292 Loss (std): 0.3970071851961351 Loss ratio: 1.8806631177394946 Tokens per Sec: 2704.1181545487875
Mean loss per sample: 0.8715163152114854 Std loss per sample: 5.033578638825933 ratio: 5.775656233818716
Epoch ended with duration 0:00:11.481409
Train perplexity: 1.1251494920835021
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the daemon print to 0 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 96.75958463549614 Loss (std): 44.20987665746258 Loss ratio: 0.4569043658466082 Tokens per Sec: 4290.144202562915
Mean loss per sample: 103.350228699199 Std loss per sample: 52.3191636604969 ratio: 0.5062317163590601
Epoch ended with duration 0:00:01.038050
b'BLEU = 2.55, 8.4/2.7/1.7/1.3 (BP=0.973, ratio=0.974, hyp_len=3031, ref_len=3113)\n'
Validation perplexity: 1209608.3241518883
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.55
Epoch 538 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.37727027959772386 Loss (std): 0.6020129261733722 Loss ratio: 1.5957072653994562 Tokens per Sec: 3162.1329231178206
Epoch Step: 10 / 67 Loss (mean): 0.3095622981654742 Loss (std): 1.0931347224962138 Loss ratio: 3.5312269258056963 Tokens per Sec: 2476.937537926117
Epoch Step: 15 / 67 Loss (mean): 0.4645547460168018 Loss (std): 0.9261459569062296 Loss ratio: 1.9936206977696729 Tokens per Sec: 2789.7493172411982
Epoch Step: 20 / 67 Loss (mean): 0.530769273515034 Loss (std): 0.91614773416728 Loss ratio: 1.7260753021742699 Tokens per Sec: 3551.301732729328
Epoch Step: 25 / 67 Loss (mean): 0.3622926627522247 Loss (std): 0.8485406295488963 Loss ratio: 2.3421413591509057 Tokens per Sec: 2818.727620158858
Epoch Step: 30 / 67 Loss (mean): 0.23195711373045924 Loss (std): 0.4658844713082096 Loss ratio: 2.008494000531411 Tokens per Sec: 2724.516240518388
Epoch Step: 35 / 67 Loss (mean): 0.3082437735683925 Loss (std): 0.7022080326521241 Loss ratio: 2.2780931615357334 Tokens per Sec: 2402.1909947121903
Epoch Step: 40 / 67 Loss (mean): 0.2692881784605561 Loss (std): 0.4586229794868763 Loss ratio: 1.7030936230052631 Tokens per Sec: 2397.560802016512
Epoch Step: 45 / 67 Loss (mean): 0.26724388522961817 Loss (std): 0.5209533089381113 Loss ratio: 1.9493553930729 Tokens per Sec: 3098.2323494606467
Epoch Step: 50 / 67 Loss (mean): 0.2896668327739462 Loss (std): 0.6037813903773867 Loss ratio: 2.08439946194521 Tokens per Sec: 3373.8323914643897
Epoch Step: 55 / 67 Loss (mean): 0.3967846769173775 Loss (std): 0.7234170176711184 Loss ratio: 1.8231979704744383 Tokens per Sec: 2600.3641367203286
Epoch Step: 60 / 67 Loss (mean): 0.3966950631511281 Loss (std): 1.354553246836239 Loss ratio: 3.4145956747644157 Tokens per Sec: 2378.770360039954
Epoch Step: 65 / 67 Loss (mean): 1.692625628953465 Loss (std): 2.2288911335126 Loss ratio: 1.316824639415807 Tokens per Sec: 2635.375950566334
Mean loss per sample: 0.6252921518144122 Std loss per sample: 4.01558593761412 ratio: 6.421935611956878
Epoch ended with duration 0:00:11.418593
Train perplexity: 1.088283679905587
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during switch ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.21626698970795 Loss (std): 45.341337979280254 Loss ratio: 0.4663966163613383 Tokens per Sec: 4311.779657071922
Mean loss per sample: 102.2243852359777 Std loss per sample: 52.95826480012149 ratio: 0.5180590196543722
Epoch ended with duration 0:00:01.035326
b'BLEU = 2.86, 9.1/3.2/2.2/1.7 (BP=0.886, ratio=0.892, hyp_len=2777, ref_len=3113)\n'
Validation perplexity: 1038445.2608592255
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.86
Epoch 539 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3116954733959574 Loss (std): 1.2635315082224525 Loss ratio: 4.053737112240142 Tokens per Sec: 2428.450367331989
Epoch Step: 10 / 67 Loss (mean): 0.6366806744408677 Loss (std): 0.9350995598063273 Loss ratio: 1.4687104499088663 Tokens per Sec: 3278.0604762274256
Epoch Step: 15 / 67 Loss (mean): 0.41192604958905576 Loss (std): 0.7776526119602976 Loss ratio: 1.8878451914757435 Tokens per Sec: 2268.0603460506345
Epoch Step: 20 / 67 Loss (mean): 0.17100405951532593 Loss (std): 0.28096860050816147 Loss ratio: 1.6430522252191337 Tokens per Sec: 2597.480159405484
Epoch Step: 25 / 67 Loss (mean): 0.27725554589778767 Loss (std): 0.7307406277246506 Loss ratio: 2.635621319524637 Tokens per Sec: 3184.4917700053193
Epoch Step: 30 / 67 Loss (mean): 0.25268387002233794 Loss (std): 0.48469012144809476 Loss ratio: 1.9181680310866176 Tokens per Sec: 2781.8685600466247
Epoch Step: 35 / 67 Loss (mean): 0.3340969342170865 Loss (std): 0.8750557402011441 Loss ratio: 2.619167225379441 Tokens per Sec: 2987.3058314625982
Epoch Step: 40 / 67 Loss (mean): 0.2905908300108422 Loss (std): 0.813025571305508 Loss ratio: 2.79783629536821 Tokens per Sec: 3628.435749717783
Epoch Step: 45 / 67 Loss (mean): 0.3497618830142528 Loss (std): 0.7054008420809632 Loss ratio: 2.016803077573259 Tokens per Sec: 2870.237638943015
Epoch Step: 50 / 67 Loss (mean): 0.31954926122853067 Loss (std): 0.5638954221845354 Loss ratio: 1.7646588197907198 Tokens per Sec: 2336.78858410392
Epoch Step: 55 / 67 Loss (mean): 0.2644934646668844 Loss (std): 0.6710665178216294 Loss ratio: 2.537176178121461 Tokens per Sec: 2701.7947501952794
Epoch Step: 60 / 67 Loss (mean): 0.44611550464469474 Loss (std): 0.9407898412360899 Loss ratio: 2.108848115434532 Tokens per Sec: 2806.6733855949888
Epoch Step: 65 / 67 Loss (mean): 0.8139210895606084 Loss (std): 1.6268310955169039 Loss ratio: 1.9987577621254922 Tokens per Sec: 2701.010601697742
Mean loss per sample: 0.3347917703689126 Std loss per sample: 0.7751437957596032 ratio: 2.315301224117485
Epoch ended with duration 0:00:11.307902
Train perplexity: 1.0463388179920647
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use ( ) and[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.23131948709488 Loss (std): 44.94526754765066 Loss ratio: 0.45754518805537714 Tokens per Sec: 4315.956052679833
Mean loss per sample: 103.22021675861028 Std loss per sample: 53.13641927269005 ratio: 0.514786937494564
Epoch ended with duration 0:00:01.036100
b'BLEU = 2.18, 8.1/2.3/1.4/1.1 (BP=0.935, ratio=0.937, hyp_len=2917, ref_len=3113)\n'
Validation perplexity: 1188482.9494938464
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.18
Epoch 540 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.20806660734160687 Loss (std): 0.4936613871313415 Loss ratio: 2.3726122775714837 Tokens per Sec: 2671.139311109379
Epoch Step: 10 / 67 Loss (mean): 0.27216039653649204 Loss (std): 0.6026819636539159 Loss ratio: 2.21443667529749 Tokens per Sec: 2454.692791802493
Epoch Step: 15 / 67 Loss (mean): 0.15853187572429306 Loss (std): 0.19731602431863518 Loss ratio: 1.2446457434326499 Tokens per Sec: 3037.0329150586585
Epoch Step: 20 / 67 Loss (mean): 0.27989502089258167 Loss (std): 0.603377211698011 Loss ratio: 2.155726849923406 Tokens per Sec: 2413.156794211077
Epoch Step: 25 / 67 Loss (mean): 0.2200279798853444 Loss (std): 0.5743577277560633 Loss ratio: 2.6103849522018 Tokens per Sec: 2596.766874939841
Epoch Step: 30 / 67 Loss (mean): 0.995177709395648 Loss (std): 1.5168747609358677 Loss ratio: 1.5242250169138496 Tokens per Sec: 3578.3519638956586
Epoch Step: 35 / 67 Loss (mean): 0.19958035960735288 Loss (std): 0.4861107534782762 Loss ratio: 2.435664282971695 Tokens per Sec: 3465.7454419396636
Epoch Step: 40 / 67 Loss (mean): 0.23162420417065732 Loss (std): 0.34238301455238385 Loss ratio: 1.4781832312314005 Tokens per Sec: 2468.12620422653
Epoch Step: 45 / 67 Loss (mean): 0.2419349364572554 Loss (std): 0.4951676701968939 Loss ratio: 2.046697667760684 Tokens per Sec: 2910.940591453375
Epoch Step: 50 / 67 Loss (mean): 0.5260653851055395 Loss (std): 0.7133456186137486 Loss ratio: 1.3560018180451787 Tokens per Sec: 2564.9577237876806
Epoch Step: 55 / 67 Loss (mean): 3.282974194657072 Loss (std): 12.600714500000507 Loss ratio: 3.8382008973776696 Tokens per Sec: 2415.2714850235275
Epoch Step: 60 / 67 Loss (mean): 0.3039874461810541 Loss (std): 0.5149616101858553 Loss ratio: 1.6940226205234328 Tokens per Sec: 3201.6874727060936
Epoch Step: 65 / 67 Loss (mean): 0.22950634509470547 Loss (std): 0.4524730910307893 Loss ratio: 1.9715058023518999 Tokens per Sec: 2590.19229568761
Mean loss per sample: 0.43387676119576846 Std loss per sample: 2.3285492945997643 ratio: 5.366844926615245
Epoch ended with duration 0:00:11.393324
Train perplexity: 1.060460663518589
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.07840359210968 Loss (std): 45.460632868733 Loss ratio: 0.4635131813298628 Tokens per Sec: 4287.163787890411
Mean loss per sample: 104.65017775513354 Std loss per sample: 52.92938374079696 ratio: 0.50577442748969
Epoch ended with duration 0:00:01.049314
b'BLEU = 2.40, 8.1/2.5/1.7/1.3 (BP=0.923, ratio=0.926, hyp_len=2882, ref_len=3113)\n'
Validation perplexity: 1442623.0073980107
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.4
Model saved checkpoint_commit_msg_generator!
Epoch 541 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6715771367598791 Loss (std): 0.9951814654275348 Loss ratio: 1.4818572743987855 Tokens per Sec: 2637.851568399038
Epoch Step: 10 / 67 Loss (mean): 0.332566555844096 Loss (std): 0.7806132782152235 Loss ratio: 2.347239265337214 Tokens per Sec: 2199.017908993841
Epoch Step: 15 / 67 Loss (mean): 1.2058823003535508 Loss (std): 8.14745562072431 Loss ratio: 6.756426906950678 Tokens per Sec: 2583.202485109234
Epoch Step: 20 / 67 Loss (mean): 0.23308637423542677 Loss (std): 0.5065560006795286 Loss ratio: 2.173254452737277 Tokens per Sec: 2758.1946665749165
Epoch Step: 25 / 67 Loss (mean): 0.23289210347684275 Loss (std): 0.548452025864102 Loss ratio: 2.3549618800992813 Tokens per Sec: 2737.3636232486697
Epoch Step: 30 / 67 Loss (mean): 1.1813481185363344 Loss (std): 1.4833983719067623 Loss ratio: 1.255682680347146 Tokens per Sec: 3356.29340354938
Epoch Step: 35 / 67 Loss (mean): 0.25918717443528294 Loss (std): 0.5856221913116537 Loss ratio: 2.2594566748436047 Tokens per Sec: 2771.0202890357587
Epoch Step: 40 / 67 Loss (mean): 0.15523214717541123 Loss (std): 0.2267824638019357 Loss ratio: 1.4609246082621863 Tokens per Sec: 2892.950330655255
Epoch Step: 45 / 67 Loss (mean): 0.10254184577570413 Loss (std): 0.11104847542081889 Loss ratio: 1.0829576411538544 Tokens per Sec: 2809.3905877720986
Epoch Step: 50 / 67 Loss (mean): 0.2828030240834778 Loss (std): 0.6355161258951567 Loss ratio: 2.2472041377731697 Tokens per Sec: 2726.571092382658
Epoch Step: 55 / 67 Loss (mean): 0.28585219338856405 Loss (std): 0.8053245938282206 Loss ratio: 2.817276244347471 Tokens per Sec: 2901.848753251507
Epoch Step: 60 / 67 Loss (mean): 0.14965896324792993 Loss (std): 0.18773482937650685 Loss ratio: 1.2544175457469873 Tokens per Sec: 2507.770815369967
Epoch Step: 65 / 67 Loss (mean): 0.46557892968849046 Loss (std): 0.8354504911881887 Loss ratio: 1.794433635016885 Tokens per Sec: 3190.446626727011
Mean loss per sample: 0.5152177337122812 Std loss per sample: 3.2720913951662935 ratio: 6.350890470306607
Epoch ended with duration 0:00:11.431845
Train perplexity: 1.0721959255351248
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.25896495580673 Loss (std): 44.47796779664296 Loss ratio: 0.45266065866506444 Tokens per Sec: 4370.884050321412
Mean loss per sample: 102.97965789293168 Std loss per sample: 52.95361479217216 ratio: 0.514214320339151
Epoch ended with duration 0:00:01.039633
b'BLEU = 2.54, 8.7/2.8/1.7/1.3 (BP=0.943, ratio=0.944, hyp_len=2939, ref_len=3113)\n'
Validation perplexity: 1150363.0938906798
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.54
Epoch 542 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6491441843681969 Loss (std): 1.2849717771561222 Loss ratio: 1.9794859263920968 Tokens per Sec: 3196.8098567492148
Epoch Step: 10 / 67 Loss (mean): 0.2073596364102741 Loss (std): 0.3378060657664384 Loss ratio: 1.6290830347429228 Tokens per Sec: 3005.070712522449
Epoch Step: 15 / 67 Loss (mean): 0.24060292576177744 Loss (std): 0.6275968191852871 Loss ratio: 2.6084338633798447 Tokens per Sec: 2858.022695299135
Epoch Step: 20 / 67 Loss (mean): 1.011761332367314 Loss (std): 1.4403119315355548 Loss ratio: 1.423568864966919 Tokens per Sec: 2606.844891948213
Epoch Step: 25 / 67 Loss (mean): 0.24688280564987508 Loss (std): 0.5840220515882211 Loss ratio: 2.365584148522968 Tokens per Sec: 2382.776765185888
Epoch Step: 30 / 67 Loss (mean): 1.3474329494092672 Loss (std): 1.7695920775035014 Loss ratio: 1.3133062229770427 Tokens per Sec: 3320.932587708765
Epoch Step: 35 / 67 Loss (mean): 0.17995855701201435 Loss (std): 0.3297869467896111 Loss ratio: 1.8325716335211222 Tokens per Sec: 3041.577439642072
Epoch Step: 40 / 67 Loss (mean): 0.13262014653628285 Loss (std): 0.19484760348588256 Loss ratio: 1.4692157155215873 Tokens per Sec: 2295.0476575340344
Epoch Step: 45 / 67 Loss (mean): 0.39263304528867593 Loss (std): 0.603875522823083 Loss ratio: 1.538015024637305 Tokens per Sec: 2921.4930405798223
Epoch Step: 50 / 67 Loss (mean): 0.2975895733843572 Loss (std): 0.7848780102988842 Loss ratio: 2.637451310450184 Tokens per Sec: 2798.484613262548
Epoch Step: 55 / 67 Loss (mean): 0.36227432682971994 Loss (std): 0.6314113500475544 Loss ratio: 1.7429094564140537 Tokens per Sec: 2540.1258691164608
Epoch Step: 60 / 67 Loss (mean): 0.523452499846826 Loss (std): 0.9986673720675466 Loss ratio: 1.9078471730668576 Tokens per Sec: 2921.755902607825
Epoch Step: 65 / 67 Loss (mean): 0.4145957158270903 Loss (std): 0.9841373435194234 Loss ratio: 2.373727720645005 Tokens per Sec: 2635.5823121122426
Mean loss per sample: 0.4140908017388089 Std loss per sample: 2.356331534418249 ratio: 5.69037400619327
Epoch ended with duration 0:00:11.379438
Train perplexity: 1.0576255700744608
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use ( ) and hint[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 116.75237202644348 Loss (std): 45.56569498350775 Loss ratio: 0.3902763960391955 Tokens per Sec: 4330.347729421421
Mean loss per sample: 104.88095753261301 Std loss per sample: 52.947132502482674 ratio: 0.5048307504822181
Epoch ended with duration 0:00:01.027747
b'BLEU = 2.64, 9.1/2.9/1.8/1.4 (BP=0.933, ratio=0.935, hyp_len=2911, ref_len=3113)\n'
Validation perplexity: 1488453.6809150896
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.64
Epoch 543 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.14389638294960605 Loss (std): 0.21486926405759194 Loss ratio: 1.4932221342411456 Tokens per Sec: 2859.9446965997886
Epoch Step: 10 / 67 Loss (mean): 0.39468574974671355 Loss (std): 0.9684748238861747 Loss ratio: 2.4537871572705265 Tokens per Sec: 2040.3826048180317
Epoch Step: 15 / 67 Loss (mean): 0.1775552455947036 Loss (std): 0.28443119071846823 Loss ratio: 1.601930654122858 Tokens per Sec: 2737.79710640107
Epoch Step: 20 / 67 Loss (mean): 0.21523920710751554 Loss (std): 0.4499596088803094 Loss ratio: 2.090509507663941 Tokens per Sec: 2617.741803205187
Epoch Step: 25 / 67 Loss (mean): 0.1607553514340907 Loss (std): 0.2928207043991602 Loss ratio: 1.821530056616597 Tokens per Sec: 2666.451765529787
Epoch Step: 30 / 67 Loss (mean): 0.3981118548945233 Loss (std): 0.7944412431138803 Loss ratio: 1.9955226988263424 Tokens per Sec: 2874.8473582945876
Epoch Step: 35 / 67 Loss (mean): 1.7566719255264616 Loss (std): 7.15141926354768 Loss ratio: 4.071004471369606 Tokens per Sec: 2786.910552958001
Epoch Step: 40 / 67 Loss (mean): 0.4209195026924135 Loss (std): 0.673592954370813 Loss ratio: 1.600289247854216 Tokens per Sec: 3025.9464167151955
Epoch Step: 45 / 67 Loss (mean): 0.37418660357980116 Loss (std): 0.8908713737593209 Loss ratio: 2.380821133724336 Tokens per Sec: 2914.9727278827445
Epoch Step: 50 / 67 Loss (mean): 0.21414630882645724 Loss (std): 0.2920140932917269 Loss ratio: 1.363619550072998 Tokens per Sec: 2951.078004995272
Epoch Step: 55 / 67 Loss (mean): 0.6264856342313578 Loss (std): 1.2823571445107274 Loss ratio: 2.0469059056462893 Tokens per Sec: 2815.6198883904403
Epoch Step: 60 / 67 Loss (mean): 0.38679836513438204 Loss (std): 0.7976554833949145 Loss ratio: 2.0621997280619113 Tokens per Sec: 3114.4680412844978
Epoch Step: 65 / 67 Loss (mean): 0.22899879301621695 Loss (std): 0.4072109323322917 Loss ratio: 1.778223050736579 Tokens per Sec: 2930.6278500381636
Mean loss per sample: 0.4870101025960356 Std loss per sample: 3.0087955413903003 ratio: 6.178096769146555
Epoch ended with duration 0:00:11.391392
Train perplexity: 1.068111705109691
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock to start and exception[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.71048977971077 Loss (std): 45.37609127617659 Loss ratio: 0.4643932435348284 Tokens per Sec: 4287.845553093267
Mean loss per sample: 104.70116855985806 Std loss per sample: 54.259986585320725 ratio: 0.5182366857185561
Epoch ended with duration 0:00:01.035012
b'BLEU = 2.52, 8.7/2.9/1.8/1.4 (BP=0.884, ratio=0.890, hyp_len=2770, ref_len=3113)\n'
Validation perplexity: 1452626.2962284011
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.52
Epoch 544 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.28182334881057614 Loss (std): 0.4454892635479365 Loss ratio: 1.5807393724760763 Tokens per Sec: 2634.9371081916215
Epoch Step: 10 / 67 Loss (mean): 0.36132564050058136 Loss (std): 0.7655036458887682 Loss ratio: 2.1185976307361907 Tokens per Sec: 2661.720191230181
Epoch Step: 15 / 67 Loss (mean): 0.25533873733729706 Loss (std): 0.5683417766166656 Loss ratio: 2.2258345229689853 Tokens per Sec: 2795.3992967807885
Epoch Step: 20 / 67 Loss (mean): 0.3437950094448752 Loss (std): 0.9661385742025421 Loss ratio: 2.8102169829706467 Tokens per Sec: 2869.508477405835
Epoch Step: 25 / 67 Loss (mean): 0.1217267593019642 Loss (std): 0.17322761544123588 Loss ratio: 1.4230857408395712 Tokens per Sec: 2973.785347924201
Epoch Step: 30 / 67 Loss (mean): 0.47318772266226006 Loss (std): 0.9418671397109574 Loss ratio: 1.9904724797418707 Tokens per Sec: 3099.8100960674224
Epoch Step: 35 / 67 Loss (mean): 1.0939172222024354 Loss (std): 1.3449313494172692 Loss ratio: 1.22946354817365 Tokens per Sec: 3683.51646043755
Epoch Step: 40 / 67 Loss (mean): 0.14453210950523498 Loss (std): 0.2659025725429487 Loss ratio: 1.8397473990602595 Tokens per Sec: 2375.5486913258956
Epoch Step: 45 / 67 Loss (mean): 0.2555809257337387 Loss (std): 0.5585172415987109 Loss ratio: 2.1852853063869397 Tokens per Sec: 3093.5263646221506
Epoch Step: 50 / 67 Loss (mean): 0.26354928744694917 Loss (std): 0.5737446611879814 Loss ratio: 2.1769918892437627 Tokens per Sec: 2356.6487610815666
Epoch Step: 55 / 67 Loss (mean): 6.511432645376772 Loss (std): 16.18373721288843 Loss ratio: 2.485434173135333 Tokens per Sec: 2442.2341838086127
Epoch Step: 60 / 67 Loss (mean): 0.4305526176940475 Loss (std): 0.8918189008213151 Loss ratio: 2.0713354516289235 Tokens per Sec: 2897.49330317475
Epoch Step: 65 / 67 Loss (mean): 0.4029366491631663 Loss (std): 0.7655596946133119 Loss ratio: 1.8999505162989132 Tokens per Sec: 2648.5536629643775
Mean loss per sample: 0.4433092811906207 Std loss per sample: 2.569893724113747 ratio: 5.797067269179745
Epoch ended with duration 0:00:11.361283
Train perplexity: 1.0618149056937707
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 115.03104743361473 Loss (std): 45.58402322127634 Loss ratio: 0.39627582499049413 Tokens per Sec: 4310.445659958168
Mean loss per sample: 103.86130352318287 Std loss per sample: 52.34049528762547 ratio: 0.5039460656869433
Epoch ended with duration 0:00:01.029899
b'BLEU = 2.60, 8.3/2.7/1.8/1.4 (BP=0.951, ratio=0.952, hyp_len=2963, ref_len=3113)\n'
Validation perplexity: 1296354.8973922294
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.6
Epoch 545 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.46519910479401005 Loss (std): 0.9191617968344102 Loss ratio: 1.975846013808248 Tokens per Sec: 2797.7376523743806
Epoch Step: 10 / 67 Loss (mean): 0.32741873025679524 Loss (std): 0.5837923832750301 Loss ratio: 1.7830146211157818 Tokens per Sec: 3029.280642983459
Epoch Step: 15 / 67 Loss (mean): 0.45867018231001566 Loss (std): 0.7209238851628867 Loss ratio: 1.5717696788835807 Tokens per Sec: 2733.433232641685
Epoch Step: 20 / 67 Loss (mean): 0.43171041801360843 Loss (std): 0.9272760082587955 Loss ratio: 2.147912048371197 Tokens per Sec: 2731.6606402419
Epoch Step: 25 / 67 Loss (mean): 0.23880631179054035 Loss (std): 0.5121203334497563 Loss ratio: 2.1445008283488867 Tokens per Sec: 2340.7539771765328
Epoch Step: 30 / 67 Loss (mean): 0.3673885838379647 Loss (std): 0.9911537575638396 Loss ratio: 2.697834938717051 Tokens per Sec: 2542.3615986394116
Epoch Step: 35 / 67 Loss (mean): 0.3291068900452956 Loss (std): 0.530481646907025 Loss ratio: 1.6118825310342602 Tokens per Sec: 2483.831099293147
Epoch Step: 40 / 67 Loss (mean): 0.4292626391943486 Loss (std): 0.8581992893824968 Loss ratio: 1.999240583790818 Tokens per Sec: 2852.363786917562
Epoch Step: 45 / 67 Loss (mean): 0.24969234910531668 Loss (std): 0.41066733039981446 Loss ratio: 1.644693287044213 Tokens per Sec: 3153.067501988324
Epoch Step: 50 / 67 Loss (mean): 0.30288378380646463 Loss (std): 0.9990245411066506 Loss ratio: 3.298375794674445 Tokens per Sec: 2613.9724096833547
Epoch Step: 55 / 67 Loss (mean): 0.17406184490027954 Loss (std): 0.42660285499810774 Loss ratio: 2.4508694323130356 Tokens per Sec: 2706.2126030241047
Epoch Step: 60 / 67 Loss (mean): 4.005746825325332 Loss (std): 10.838992785429818 Loss ratio: 2.705860669202307 Tokens per Sec: 3168.5649660272047
Epoch Step: 65 / 67 Loss (mean): 0.17048014512874943 Loss (std): 0.3042643787057766 Loss ratio: 1.7847496462182801 Tokens per Sec: 2663.5158089742877
Mean loss per sample: 0.48690481007105935 Std loss per sample: 2.645557809974544 ratio: 5.433418925535874
Epoch ended with duration 0:00:11.406674
Train perplexity: 1.0680964888468432
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the daemon not active ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 96.99330499768257 Loss (std): 45.41696899962812 Loss ratio: 0.4682484940657837 Tokens per Sec: 4270.977446690781
Mean loss per sample: 103.97918778639593 Std loss per sample: 53.23843150793914 ratio: 0.512010457489884
Epoch ended with duration 0:00:01.037401
b'BLEU = 2.51, 8.7/2.8/1.8/1.4 (BP=0.899, ratio=0.904, hyp_len=2814, ref_len=3113)\n'
Validation perplexity: 1317231.0318520255
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.51
Model saved checkpoint_commit_msg_generator!
Epoch 546 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1886892500660906 Loss (std): 0.28035208937007944 Loss ratio: 1.4857872892699655 Tokens per Sec: 2495.546369242147
Epoch Step: 10 / 67 Loss (mean): 0.6415647001676916 Loss (std): 1.3219424197539675 Loss ratio: 2.0604974360472754 Tokens per Sec: 2835.474893135824
Epoch Step: 15 / 67 Loss (mean): 0.14522229978138057 Loss (std): 0.2761870902741286 Loss ratio: 1.9018228652893117 Tokens per Sec: 2461.1449460146896
Epoch Step: 20 / 67 Loss (mean): 0.22419902793626534 Loss (std): 0.3866483745943859 Loss ratio: 1.7245764986291607 Tokens per Sec: 3922.7521882947003
Epoch Step: 25 / 67 Loss (mean): 0.1842631510226056 Loss (std): 0.3091406866026445 Loss ratio: 1.6777130147129569 Tokens per Sec: 2754.905408683911
Epoch Step: 30 / 67 Loss (mean): 0.24620416525704059 Loss (std): 0.46157491532375117 Loss ratio: 1.874764851528245 Tokens per Sec: 2850.3279563705296
Epoch Step: 35 / 67 Loss (mean): 0.410905454918975 Loss (std): 0.7628027099470964 Loss ratio: 1.8563947030041517 Tokens per Sec: 2619.6624801747657
Epoch Step: 40 / 67 Loss (mean): 0.583827364447643 Loss (std): 0.9215224716594904 Loss ratio: 1.578416031477626 Tokens per Sec: 2810.1516931020733
Epoch Step: 45 / 67 Loss (mean): 0.2167757091447129 Loss (std): 0.3983371317933394 Loss ratio: 1.8375542784058965 Tokens per Sec: 2654.870570665173
Epoch Step: 50 / 67 Loss (mean): 0.24007356357742538 Loss (std): 0.4557540821992598 Loss ratio: 1.898393456605129 Tokens per Sec: 2633.7598017206906
Epoch Step: 55 / 67 Loss (mean): 0.38223321504847263 Loss (std): 0.9005033810282461 Loss ratio: 2.3559003916340693 Tokens per Sec: 2840.6026385755254
Epoch Step: 60 / 67 Loss (mean): 0.24777524973251275 Loss (std): 0.33425650178483446 Loss ratio: 1.34903103577005 Tokens per Sec: 2776.079822414416
Epoch Step: 65 / 67 Loss (mean): 0.26637704875611234 Loss (std): 0.42443044222180987 Loss ratio: 1.5933446376245686 Tokens per Sec: 2833.666164895305
Mean loss per sample: 0.655259448385087 Std loss per sample: 4.311784651743722 ratio: 6.580270856635929
Epoch ended with duration 0:00:11.427559
Train perplexity: 1.092705156171809
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings on stacktracecreator.fillstacktrace ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 96.73280966281891 Loss (std): 44.606801846639506 Loss ratio: 0.4611341488180197 Tokens per Sec: 4314.947024069616
Mean loss per sample: 103.47812625295559 Std loss per sample: 51.736791047178954 ratio: 0.4999780429025813
Epoch ended with duration 0:00:01.033778
b'BLEU = 2.19, 7.4/2.4/1.5/1.1 (BP=0.938, ratio=0.940, hyp_len=2925, ref_len=3113)\n'
Validation perplexity: 1230756.4957902418
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.19
Epoch 547 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.38883251204424596 Loss (std): 0.8226569193732094 Loss ratio: 2.1157102194160085 Tokens per Sec: 2591.7054927619993
Epoch Step: 10 / 67 Loss (mean): 0.3001306350015511 Loss (std): 0.6430046712422408 Loss ratio: 2.1424159890872776 Tokens per Sec: 2985.579237847192
Epoch Step: 15 / 67 Loss (mean): 0.30305733632508236 Loss (std): 0.5861725474025044 Loss ratio: 1.9341968569727381 Tokens per Sec: 2773.414889386294
Epoch Step: 20 / 67 Loss (mean): 0.8106049102934776 Loss (std): 3.298637561152967 Loss ratio: 4.069353046428874 Tokens per Sec: 2701.1738997732964
Epoch Step: 25 / 67 Loss (mean): 0.2233093465492857 Loss (std): 0.4470129896146989 Loss ratio: 2.001765696430626 Tokens per Sec: 2299.4220989018104
Epoch Step: 30 / 67 Loss (mean): 0.3872517007839633 Loss (std): 0.7368264755992515 Loss ratio: 1.9027068805833496 Tokens per Sec: 2902.7167766319935
Epoch Step: 35 / 67 Loss (mean): 0.38918658918191795 Loss (std): 0.5710878825187574 Loss ratio: 1.4673883900244393 Tokens per Sec: 2727.7318829330097
Epoch Step: 40 / 67 Loss (mean): 0.5432588952298829 Loss (std): 0.7874104010504291 Loss ratio: 1.4494201714216428 Tokens per Sec: 2910.295051772045
Epoch Step: 45 / 67 Loss (mean): 0.20686259130889084 Loss (std): 0.5745661917353967 Loss ratio: 2.7775258353862755 Tokens per Sec: 2638.2034637121424
Epoch Step: 50 / 67 Loss (mean): 0.3101879824862408 Loss (std): 0.529432114190802 Loss ratio: 1.7068105280780386 Tokens per Sec: 3255.207205612961
Epoch Step: 55 / 67 Loss (mean): 0.2474150261714385 Loss (std): 0.36495790786822596 Loss ratio: 1.4750838439995952 Tokens per Sec: 2825.833718124177
Epoch Step: 60 / 67 Loss (mean): 0.35470730990709853 Loss (std): 0.8403170590515294 Loss ratio: 2.369043534151064 Tokens per Sec: 2704.1379479079055
Epoch Step: 65 / 67 Loss (mean): 0.2554150963514985 Loss (std): 0.41564696861243194 Loss ratio: 1.6273390827315262 Tokens per Sec: 2699.6020964434083
Mean loss per sample: 0.633148828245652 Std loss per sample: 4.259107576436018 ratio: 6.726866396068809
Epoch ended with duration 0:00:11.441368
Train perplexity: 1.0894411471608494
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: throw exception when scoring ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog extension api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 96.4753007888794 Loss (std): 45.705330078209926 Loss ratio: 0.47375162040933827 Tokens per Sec: 4412.287660574495
Mean loss per sample: 101.90975549725479 Std loss per sample: 52.83519065524127 ratio: 0.518450764575375
Epoch ended with duration 0:00:01.020344
b'BLEU = 2.32, 8.4/2.5/1.5/1.1 (BP=0.941, ratio=0.943, hyp_len=2936, ref_len=3113)\n'
Validation perplexity: 995098.7385574962
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.32
Epoch 548 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2727794627280673 Loss (std): 0.45748558211041845 Loss ratio: 1.6771261939410882 Tokens per Sec: 2839.491899321335
Epoch Step: 10 / 67 Loss (mean): 0.29189900151504844 Loss (std): 0.4752949494919868 Loss ratio: 1.6282856297042991 Tokens per Sec: 2657.959076089989
Epoch Step: 15 / 67 Loss (mean): 0.42335270837065764 Loss (std): 1.766182782284734 Loss ratio: 4.171894374036671 Tokens per Sec: 3026.898678660087
Epoch Step: 20 / 67 Loss (mean): 0.42347551567218034 Loss (std): 0.9032810224508155 Loss ratio: 2.133018295088543 Tokens per Sec: 2618.7165569451154
Epoch Step: 25 / 67 Loss (mean): 0.11882486550348403 Loss (std): 0.25309370109530266 Loss ratio: 2.129972544238914 Tokens per Sec: 2409.886242420506
Epoch Step: 30 / 67 Loss (mean): 0.46834601404043497 Loss (std): 1.7194892745379486 Loss ratio: 3.6714079398346184 Tokens per Sec: 2600.514916988848
Epoch Step: 35 / 67 Loss (mean): 0.21037097269436345 Loss (std): 0.43172424018527583 Loss ratio: 2.0522044208661074 Tokens per Sec: 3099.9431197938784
Epoch Step: 40 / 67 Loss (mean): 0.2203876668754674 Loss (std): 0.4394178635022328 Loss ratio: 1.9938405344185204 Tokens per Sec: 3101.058252909476
Epoch Step: 45 / 67 Loss (mean): 0.2836843504337594 Loss (std): 0.667124453072656 Loss ratio: 2.3516434799896735 Tokens per Sec: 3244.6604327212945
Epoch Step: 50 / 67 Loss (mean): 0.3425827819701226 Loss (std): 0.8393541405581726 Loss ratio: 2.450076841956916 Tokens per Sec: 3015.9110608858005
Epoch Step: 55 / 67 Loss (mean): 0.16277621669723885 Loss (std): 0.32882627145657917 Loss ratio: 2.0201125086239764 Tokens per Sec: 2570.293129609042
Epoch Step: 60 / 67 Loss (mean): 0.9665118893763065 Loss (std): 2.131112594720572 Loss ratio: 2.2049522806137296 Tokens per Sec: 2740.324158535783
Epoch Step: 65 / 67 Loss (mean): 0.3768987856710737 Loss (std): 0.8084411107987743 Loss ratio: 2.1449819992370984 Tokens per Sec: 2671.3015907250324
Mean loss per sample: 0.4306062395523453 Std loss per sample: 2.046240247132504 ratio: 4.7519985991372495
Epoch ended with duration 0:00:11.427502
Train perplexity: 1.0599915127985902
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.17662617564201 Loss (std): 45.36284057450214 Loss ratio: 0.4668081447128141 Tokens per Sec: 4395.793536786164
Mean loss per sample: 102.02013243747051 Std loss per sample: 52.632912830618906 ratio: 0.5159071212035361
Epoch ended with duration 0:00:01.022400
b'BLEU = 2.26, 8.0/2.5/1.5/1.1 (BP=0.940, ratio=0.942, hyp_len=2932, ref_len=3113)\n'
Validation perplexity: 1010095.3581648667
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.26
Epoch 549 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2536912747473252 Loss (std): 0.47926396630912044 Loss ratio: 1.8891621983706932 Tokens per Sec: 2654.5265445430205
Epoch Step: 10 / 67 Loss (mean): 0.26415730978987995 Loss (std): 0.5959510422150256 Loss ratio: 2.2560460003513287 Tokens per Sec: 2223.5630004475197
Epoch Step: 15 / 67 Loss (mean): 0.33626855907823483 Loss (std): 0.7875786304474869 Loss ratio: 2.342112008944173 Tokens per Sec: 3175.384461448617
Epoch Step: 20 / 67 Loss (mean): 0.1890678140698583 Loss (std): 0.33535802825297506 Loss ratio: 1.773744674114994 Tokens per Sec: 3667.192042761213
Epoch Step: 25 / 67 Loss (mean): 0.2978811678631246 Loss (std): 0.8096186399965376 Loss ratio: 2.717924888654105 Tokens per Sec: 1926.3105084287236
Epoch Step: 30 / 67 Loss (mean): 0.47834878551293514 Loss (std): 0.6539457416458403 Loss ratio: 1.3670897919069909 Tokens per Sec: 2495.820951857178
Epoch Step: 35 / 67 Loss (mean): 0.7455643865978345 Loss (std): 1.5226066013194648 Loss ratio: 2.042220133753217 Tokens per Sec: 3579.4278460674172
Epoch Step: 40 / 67 Loss (mean): 0.2863640814612154 Loss (std): 0.7527173089106399 Loss ratio: 2.6285325487393103 Tokens per Sec: 2828.4471273176914
Epoch Step: 45 / 67 Loss (mean): 1.184206087484199 Loss (std): 1.5554671663473414 Loss ratio: 1.3135105306305868 Tokens per Sec: 2648.6425300690585
Epoch Step: 50 / 67 Loss (mean): 0.31332483289952506 Loss (std): 0.7200476197043845 Loss ratio: 2.29808666309984 Tokens per Sec: 3330.1080807371764
Epoch Step: 55 / 67 Loss (mean): 0.334149129733305 Loss (std): 0.7206633239067792 Loss ratio: 2.156711658899017 Tokens per Sec: 2558.2636151749994
Epoch Step: 60 / 67 Loss (mean): 0.7934354611352319 Loss (std): 1.4442833001675037 Loss ratio: 1.8202908376455111 Tokens per Sec: 2729.6087492742795
Epoch Step: 65 / 67 Loss (mean): 0.27436865730851423 Loss (std): 0.47068079847845584 Loss ratio: 1.715504981858034 Tokens per Sec: 3092.1650856372266
Mean loss per sample: 0.50019541377224 Std loss per sample: 2.7106740743491864 ratio: 5.419230164280296
Epoch ended with duration 0:00:11.448252
Train perplexity: 1.0700188837754843
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shader activities by infinite ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.64731073379517 Loss (std): 45.62967089023022 Loss ratio: 0.46729060480349777 Tokens per Sec: 4299.760817191453
Mean loss per sample: 106.32764434243445 Std loss per sample: 54.307793731392195 ratio: 0.5107589288491217
Epoch ended with duration 0:00:01.050636
b'BLEU = 2.55, 8.5/2.7/1.7/1.3 (BP=0.939, ratio=0.941, hyp_len=2929, ref_len=3113)\n'
Validation perplexity: 1810838.0666521632
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.55
Epoch 550 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.302449541212809 Loss (std): 0.6987723842878392 Loss ratio: 2.3103767375073327 Tokens per Sec: 2570.8570234333474
Epoch Step: 10 / 67 Loss (mean): 0.3662634905158484 Loss (std): 0.672181749056447 Loss ratio: 1.8352409302650967 Tokens per Sec: 2507.5982475749147
Epoch Step: 15 / 67 Loss (mean): 0.39616696841858356 Loss (std): 0.6494282905077923 Loss ratio: 1.6392792491008916 Tokens per Sec: 2212.7956727404976
Epoch Step: 20 / 67 Loss (mean): 2.4038814867708425 Loss (std): 17.470332595955885 Loss ratio: 7.267551537835566 Tokens per Sec: 2250.639163279025
Epoch Step: 25 / 67 Loss (mean): 0.3014201039732143 Loss (std): 0.6853806127209987 Loss ratio: 2.273838419158349 Tokens per Sec: 2739.087445676822
Epoch Step: 30 / 67 Loss (mean): 0.9555213502171682 Loss (std): 1.5140277553175496 Loss ratio: 1.5845043702827213 Tokens per Sec: 2940.5573760585553
Epoch Step: 35 / 67 Loss (mean): 0.21484386448628356 Loss (std): 0.43965064990300323 Loss ratio: 2.0463728436195217 Tokens per Sec: 2788.3465921485463
Epoch Step: 40 / 67 Loss (mean): 0.4032654777274729 Loss (std): 0.5480490036502657 Loss ratio: 1.3590278214209983 Tokens per Sec: 2863.0761463139606
Epoch Step: 45 / 67 Loss (mean): 0.6092195388118853 Loss (std): 1.2569320584801034 Loss ratio: 2.0631840878436085 Tokens per Sec: 3089.6250535617137
Epoch Step: 50 / 67 Loss (mean): 0.27914083347059204 Loss (std): 0.44747486708393636 Loss ratio: 1.6030433868109755 Tokens per Sec: 2937.857755460898
Epoch Step: 55 / 67 Loss (mean): 0.3599174562768894 Loss (std): 0.9188279309429204 Loss ratio: 2.5528851544117757 Tokens per Sec: 2895.215375390876
Epoch Step: 60 / 67 Loss (mean): 0.9522032157747162 Loss (std): 1.1797696256972738 Loss ratio: 1.238989331429015 Tokens per Sec: 3382.456911602949
Epoch Step: 65 / 67 Loss (mean): 0.5431596038142743 Loss (std): 1.0619488406331188 Loss ratio: 1.9551322174471522 Tokens per Sec: 3242.729828725332
Mean loss per sample: 0.5199424970208328 Std loss per sample: 3.5681373288100025 ratio: 6.862561435648596
Epoch ended with duration 0:00:11.443241
Train perplexity: 1.072881555690773
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to deprecated ( ) and hint[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 96.92094820737839 Loss (std): 45.20292170856655 Loss ratio: 0.4663895942479579 Tokens per Sec: 4302.1333188831
Mean loss per sample: 104.12211572097951 Std loss per sample: 53.61093505138631 ratio: 0.514885187264633
Epoch ended with duration 0:00:01.037280
b'BLEU = 2.45, 8.4/2.7/1.7/1.3 (BP=0.916, ratio=0.919, hyp_len=2862, ref_len=3113)\n'
Validation perplexity: 1342993.5641860527
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.45
Model saved checkpoint_commit_msg_generator!
Epoch 551 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6925638026732486 Loss (std): 1.6036045107563435 Loss ratio: 2.315461051482247 Tokens per Sec: 2609.096806991086
Epoch Step: 10 / 67 Loss (mean): 0.6270149249467067 Loss (std): 1.510606865217221 Loss ratio: 2.4092039999615884 Tokens per Sec: 3536.5885739138625
Epoch Step: 15 / 67 Loss (mean): 0.2969316172566323 Loss (std): 0.44459900063747204 Loss ratio: 1.4973110803933474 Tokens per Sec: 2724.744170156377
Epoch Step: 20 / 67 Loss (mean): 0.17843475482368376 Loss (std): 0.30489170136665916 Loss ratio: 1.7087013214882434 Tokens per Sec: 2783.552786415724
Epoch Step: 25 / 67 Loss (mean): 1.500249070904374 Loss (std): 8.67830809606849 Loss ratio: 5.784578217293657 Tokens per Sec: 2497.5989708769985
Epoch Step: 30 / 67 Loss (mean): 0.31897064655095164 Loss (std): 0.6912474648271559 Loss ratio: 2.1671193644357416 Tokens per Sec: 2478.6465695844227
Epoch Step: 35 / 67 Loss (mean): 0.17425139128999945 Loss (std): 0.3892446418816092 Loss ratio: 2.2338108120686697 Tokens per Sec: 3343.343161073475
Epoch Step: 40 / 67 Loss (mean): 0.2103375417087534 Loss (std): 0.4678122925937795 Loss ratio: 2.2241026912900876 Tokens per Sec: 2577.540926254704
Epoch Step: 45 / 67 Loss (mean): 0.25503225297143217 Loss (std): 0.5020153979355384 Loss ratio: 1.968438862482905 Tokens per Sec: 2853.3702754940673
Epoch Step: 50 / 67 Loss (mean): 0.5118838901398703 Loss (std): 0.8962045461925163 Loss ratio: 1.7507965447938434 Tokens per Sec: 2810.244474484737
Epoch Step: 55 / 67 Loss (mean): 0.4744329762615962 Loss (std): 0.7944839399794897 Loss ratio: 1.6745967918162197 Tokens per Sec: 2871.4551428067803
Epoch Step: 60 / 67 Loss (mean): 1.4831254120108497 Loss (std): 7.126617335433498 Loss ratio: 4.805134668801268 Tokens per Sec: 2574.4813023296115
Epoch Step: 65 / 67 Loss (mean): 0.3553051472372317 Loss (std): 0.7702319149398131 Loss ratio: 2.167803987442775 Tokens per Sec: 3011.57775810035
Mean loss per sample: 0.524314621657426 Std loss per sample: 3.4200373605594945 ratio: 6.522872373362993
Epoch ended with duration 0:00:11.390546
Train perplexity: 1.073516403540159
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock to start and exception[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.22384947538376 Loss (std): 44.67449154312146 Loss ratio: 0.45950136498588917 Tokens per Sec: 4430.381081999173
Mean loss per sample: 102.19958240697619 Std loss per sample: 52.41170659162683 ratio: 0.5128367979324462
Epoch ended with duration 0:00:01.018329
b'BLEU = 2.17, 8.0/2.2/1.4/1.0 (BP=0.977, ratio=0.977, hyp_len=3041, ref_len=3113)\n'
Validation perplexity: 1034960.6695303452
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.17
Epoch 552 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.4919473689296865 Loss (std): 0.9977904118382832 Loss ratio: 2.0282462614021957 Tokens per Sec: 3615.8483478977614
Epoch Step: 10 / 67 Loss (mean): 0.32770091205702556 Loss (std): 0.6478262130365824 Loss ratio: 1.9768825450319454 Tokens per Sec: 3217.2195341608367
Epoch Step: 15 / 67 Loss (mean): 0.18405124137098028 Loss (std): 0.37576682870968303 Loss ratio: 2.0416424573430283 Tokens per Sec: 3062.340584032522
Epoch Step: 20 / 67 Loss (mean): 0.2810123030048999 Loss (std): 0.6756123315052853 Loss ratio: 2.404209083662451 Tokens per Sec: 2261.8704368480453
Epoch Step: 25 / 67 Loss (mean): 0.2671255831446615 Loss (std): 0.7437472483251633 Loss ratio: 2.784260644636152 Tokens per Sec: 3321.416428057772
Epoch Step: 30 / 67 Loss (mean): 0.2742986291013949 Loss (std): 0.5193532160552825 Loss ratio: 1.8933861162802341 Tokens per Sec: 2803.829334734774
Epoch Step: 35 / 67 Loss (mean): 0.33538741301890695 Loss (std): 0.7298847939947462 Loss ratio: 2.1762438471523677 Tokens per Sec: 2724.1898244499594
Epoch Step: 40 / 67 Loss (mean): 0.1610854251339333 Loss (std): 0.32543047116704077 Loss ratio: 2.0202353558459056 Tokens per Sec: 2668.2191233679237
Epoch Step: 45 / 67 Loss (mean): 0.19657203874157858 Loss (std): 0.3158656947772356 Loss ratio: 1.6068699129304203 Tokens per Sec: 2540.9415745547144
Epoch Step: 50 / 67 Loss (mean): 0.14276196469836577 Loss (std): 0.26065221179878023 Loss ratio: 1.825781904511461 Tokens per Sec: 2579.777534344976
Epoch Step: 55 / 67 Loss (mean): 0.3743340026358055 Loss (std): 0.6686297439948226 Loss ratio: 1.7861849024849106 Tokens per Sec: 2726.80726422937
Epoch Step: 60 / 67 Loss (mean): 0.3621285965091374 Loss (std): 0.7932190549620656 Loss ratio: 2.1904347312213734 Tokens per Sec: 2343.1563967923207
Epoch Step: 65 / 67 Loss (mean): 0.3618886157310044 Loss (std): 0.5708720365374363 Loss ratio: 1.5774799530078933 Tokens per Sec: 2295.8894813875104
Mean loss per sample: 0.6146098179277995 Std loss per sample: 4.279077385504626 ratio: 6.962266564390133
Epoch ended with duration 0:00:11.457050
Train perplexity: 1.086711901433219
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.41841799020767 Loss (std): 46.33118718265722 Loss ratio: 0.47558960757620133 Tokens per Sec: 4402.77977595741
Mean loss per sample: 102.05890425807628 Std loss per sample: 52.82103464980476 ratio: 0.5175543969807499
Epoch ended with duration 0:00:01.022861
b'BLEU = 2.40, 8.5/2.6/1.6/1.2 (BP=0.927, ratio=0.929, hyp_len=2893, ref_len=3113)\n'
Validation perplexity: 1015416.6456402891
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.4
Epoch 553 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.20961877247373195 Loss (std): 0.28557463330741056 Loss ratio: 1.3623523787364842 Tokens per Sec: 2320.3638542839835
Epoch Step: 10 / 67 Loss (mean): 1.0133543198467123 Loss (std): 1.335031785621373 Loss ratio: 1.3174382932746762 Tokens per Sec: 2929.510652511254
Epoch Step: 15 / 67 Loss (mean): 0.40325222034880426 Loss (std): 0.8229619555680886 Loss ratio: 2.0408119634313353 Tokens per Sec: 2737.675716713062
Epoch Step: 20 / 67 Loss (mean): 0.2451469633015222 Loss (std): 0.4677035579066206 Loss ratio: 1.9078496898668966 Tokens per Sec: 3448.918688336634
Epoch Step: 25 / 67 Loss (mean): 0.3505159134801943 Loss (std): 0.7555195197649632 Loss ratio: 2.1554499830366574 Tokens per Sec: 2987.3950910784156
Epoch Step: 30 / 67 Loss (mean): 0.3120813624555012 Loss (std): 0.6664386333769529 Loss ratio: 2.1354643806131755 Tokens per Sec: 2587.7527530849115
Epoch Step: 35 / 67 Loss (mean): 0.8900862489063002 Loss (std): 4.32565795909085 Loss ratio: 4.859818882053322 Tokens per Sec: 2872.404109811375
Epoch Step: 40 / 67 Loss (mean): 0.32913142241886817 Loss (std): 0.6392446533523335 Loss ratio: 1.9422170288523852 Tokens per Sec: 2859.45809037335
Epoch Step: 45 / 67 Loss (mean): 0.16900503335318717 Loss (std): 0.2412877067455004 Loss ratio: 1.4276953884637076 Tokens per Sec: 2845.63573519749
Epoch Step: 50 / 67 Loss (mean): 0.2721149233766482 Loss (std): 0.6357044651854743 Loss ratio: 2.3361617117395768 Tokens per Sec: 2587.712932561007
Epoch Step: 55 / 67 Loss (mean): 0.25306829236797057 Loss (std): 0.4562878617612213 Loss ratio: 1.8030226445664794 Tokens per Sec: 2673.972489003445
Epoch Step: 60 / 67 Loss (mean): 0.7315975555538898 Loss (std): 1.3821989843235574 Loss ratio: 1.889288685877442 Tokens per Sec: 2786.5002693285956
Epoch Step: 65 / 67 Loss (mean): 0.9282151262523257 Loss (std): 1.728047625639976 Loss ratio: 1.8616887150040087 Tokens per Sec: 2453.4623744903547
Mean loss per sample: 0.533410796872859 Std loss per sample: 3.436307086474155 ratio: 6.442140104061703
Epoch ended with duration 0:00:11.396294
Train perplexity: 1.0748384041495347
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to method_4 ( ) and hint[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.05886608362198 Loss (std): 44.33364386515583 Loss ratio: 0.4567706759211442 Tokens per Sec: 4381.848973310947
Mean loss per sample: 101.35347041622049 Std loss per sample: 52.39189388962764 ratio: 0.5169225451725914
Epoch ended with duration 0:00:01.025737
b'BLEU = 2.66, 8.7/2.9/1.8/1.4 (BP=0.933, ratio=0.935, hyp_len=2912, ref_len=3113)\n'
Validation perplexity: 922839.5411476025
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.66
Epoch 554 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.9245706186393363 Loss (std): 3.882980673451933 Loss ratio: 4.19976645933915 Tokens per Sec: 2426.8326757019777
Epoch Step: 10 / 67 Loss (mean): 0.8376345778178802 Loss (std): 2.2235706297519973 Loss ratio: 2.654583142382464 Tokens per Sec: 2912.3993125937386
Epoch Step: 15 / 67 Loss (mean): 0.9240316121031356 Loss (std): 1.6933691506023707 Loss ratio: 1.8325878989661295 Tokens per Sec: 2808.2850962788943
Epoch Step: 20 / 67 Loss (mean): 0.4811257738383574 Loss (std): 0.7860487325231599 Loss ratio: 1.6337697443480685 Tokens per Sec: 2406.3090877436066
Epoch Step: 25 / 67 Loss (mean): 0.48399393531690293 Loss (std): 0.7415623869616951 Loss ratio: 1.5321728907122463 Tokens per Sec: 3102.0973364640095
Epoch Step: 30 / 67 Loss (mean): 0.4104645908300881 Loss (std): 1.1864804486937242 Loss ratio: 2.890579297703338 Tokens per Sec: 2951.925718490276
Epoch Step: 35 / 67 Loss (mean): 0.4428761569142807 Loss (std): 0.8519881623681609 Loss ratio: 1.9237616409615483 Tokens per Sec: 2415.1805308981
Epoch Step: 40 / 67 Loss (mean): 0.5543686026139767 Loss (std): 0.8696825935112251 Loss ratio: 1.568780391621152 Tokens per Sec: 2608.1233381168
Epoch Step: 45 / 67 Loss (mean): 0.8951877599029103 Loss (std): 1.2925613180960998 Loss ratio: 1.4438996778019926 Tokens per Sec: 2854.330613458205
Epoch Step: 50 / 67 Loss (mean): 0.3031748601788422 Loss (std): 0.41558271383973944 Loss ratio: 1.3707690459380044 Tokens per Sec: 2876.3447232397184
Epoch Step: 55 / 67 Loss (mean): 0.4171740591245907 Loss (std): 0.7599266542328972 Loss ratio: 1.8216057245446846 Tokens per Sec: 2885.7459832734744
Epoch Step: 60 / 67 Loss (mean): 3.1703231460705865 Loss (std): 11.886358614638203 Loss ratio: 3.749257746602452 Tokens per Sec: 3143.337865631923
Epoch Step: 65 / 67 Loss (mean): 0.2539242615457624 Loss (std): 0.471375917543661 Loss ratio: 1.8563642350445873 Tokens per Sec: 2517.856956555939
Mean loss per sample: 0.7498995077243635 Std loss per sample: 3.901468152897697 ratio: 5.202654639335673
Epoch ended with duration 0:00:11.443653
Train perplexity: 1.1067869624280493
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.91123604774475 Loss (std): 45.28876932701439 Loss ratio: 0.46254925537790265 Tokens per Sec: 4418.9262671141805
Mean loss per sample: 101.7651914257373 Std loss per sample: 52.739032639876605 ratio: 0.5182423567528263
Epoch ended with duration 0:00:01.019960
b'BLEU = 2.25, 8.6/2.5/1.4/1.1 (BP=0.936, ratio=0.938, hyp_len=2919, ref_len=3113)\n'
Validation perplexity: 975793.4607049845
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.25
Epoch 555 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3705542632851575 Loss (std): 0.7878218248616461 Loss ratio: 2.1260633135811022 Tokens per Sec: 2384.6375166201656
Epoch Step: 10 / 67 Loss (mean): 0.4135098397807724 Loss (std): 0.7539869617640742 Loss ratio: 1.8233833617207518 Tokens per Sec: 2693.6297310293144
Epoch Step: 15 / 67 Loss (mean): 0.26600343343170607 Loss (std): 0.43979578435371836 Loss ratio: 1.6533462695572005 Tokens per Sec: 2682.3911729897013
Epoch Step: 20 / 67 Loss (mean): 1.0466679587368617 Loss (std): 1.2964621225196418 Loss ratio: 1.2386565497660178 Tokens per Sec: 3083.861114266765
Epoch Step: 25 / 67 Loss (mean): 0.3703020342509262 Loss (std): 0.7994529939748029 Loss ratio: 2.158921420974622 Tokens per Sec: 3061.881252416255
Epoch Step: 30 / 67 Loss (mean): 0.35868738109275 Loss (std): 0.5827673077495681 Loss ratio: 1.6247220796398052 Tokens per Sec: 2768.2475785016827
Epoch Step: 35 / 67 Loss (mean): 0.4403743323928211 Loss (std): 1.0531265485964838 Loss ratio: 2.39143490238 Tokens per Sec: 2637.277501581548
Epoch Step: 40 / 67 Loss (mean): 0.3735103927028831 Loss (std): 0.6519006184865986 Loss ratio: 1.7453346177844296 Tokens per Sec: 2382.340483972111
Epoch Step: 45 / 67 Loss (mean): 0.2651768437572173 Loss (std): 0.487634345166875 Loss ratio: 1.838902440566525 Tokens per Sec: 3118.815484612677
Epoch Step: 50 / 67 Loss (mean): 0.5136696004810801 Loss (std): 0.942144039080897 Loss ratio: 1.8341440455080984 Tokens per Sec: 2691.8087997531625
Epoch Step: 55 / 67 Loss (mean): 0.22375906530214706 Loss (std): 0.35851455844267316 Loss ratio: 1.6022347874869902 Tokens per Sec: 2856.2519048879517
Epoch Step: 60 / 67 Loss (mean): 0.3846139131783275 Loss (std): 0.653850129045966 Loss ratio: 1.700016839335727 Tokens per Sec: 3042.6721225920114
Epoch Step: 65 / 67 Loss (mean): 0.8045599892502651 Loss (std): 1.6969010584453241 Loss ratio: 2.10910445599786 Tokens per Sec: 2610.2645232455498
Mean loss per sample: 0.7107133094244249 Std loss per sample: 4.136308823145713 ratio: 5.819940007167624
Epoch ended with duration 0:00:11.481705
Train perplexity: 1.1009344375748202
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd ( ) and hint[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.29448547959328 Loss (std): 45.174089624841635 Loss ratio: 0.4643026724707489 Tokens per Sec: 4122.396272647925
Mean loss per sample: 107.23702521332096 Std loss per sample: 55.16799365144479 ratio: 0.514449123721047
Epoch ended with duration 0:00:01.081614
b'BLEU = 2.63, 8.5/2.8/1.8/1.4 (BP=0.950, ratio=0.951, hyp_len=2962, ref_len=3113)\n'
Validation perplexity: 2048334.7683374288
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.63
Model saved checkpoint_commit_msg_generator!
Epoch 556 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.9527154083989444 Loss (std): 11.023390804631395 Loss ratio: 3.733306221546297 Tokens per Sec: 2468.440464982817
Epoch Step: 10 / 67 Loss (mean): 0.4816829886412961 Loss (std): 1.0700119546092364 Loss ratio: 2.2214028309936067 Tokens per Sec: 2359.58205680243
Epoch Step: 15 / 67 Loss (mean): 0.31963253496451216 Loss (std): 0.9944583893767812 Loss ratio: 3.1112552090080348 Tokens per Sec: 2647.059034346291
Epoch Step: 20 / 67 Loss (mean): 0.2605533464902692 Loss (std): 0.649075496168567 Loss ratio: 2.4911424278820684 Tokens per Sec: 3040.7209424536763
Epoch Step: 25 / 67 Loss (mean): 0.33019712263921974 Loss (std): 0.6453986219839458 Loss ratio: 1.954585845041181 Tokens per Sec: 3082.4116815960765
Epoch Step: 30 / 67 Loss (mean): 0.5250584588884522 Loss (std): 0.9171462600185196 Loss ratio: 1.7467507560207993 Tokens per Sec: 3327.323714832208
Epoch Step: 35 / 67 Loss (mean): 0.21465040540169866 Loss (std): 0.5279139739088375 Loss ratio: 2.4594128900939864 Tokens per Sec: 2394.3018508404725
Epoch Step: 40 / 67 Loss (mean): 0.37730983835308507 Loss (std): 1.0510528967227273 Loss ratio: 2.7856493255263493 Tokens per Sec: 2519.1616958498826
Epoch Step: 45 / 67 Loss (mean): 0.08284435644634955 Loss (std): 0.12367950993283772 Loss ratio: 1.492914125211815 Tokens per Sec: 2548.96642252082
Epoch Step: 50 / 67 Loss (mean): 0.18196194124539034 Loss (std): 0.2891933957746464 Loss ratio: 1.5893070484703493 Tokens per Sec: 2775.2232440010475
Epoch Step: 55 / 67 Loss (mean): 0.2351324159753858 Loss (std): 0.33505668722724485 Loss ratio: 1.4249702059894598 Tokens per Sec: 4197.6041485621845
Epoch Step: 60 / 67 Loss (mean): 0.3567515017930418 Loss (std): 0.8331599743341692 Loss ratio: 2.335407055462098 Tokens per Sec: 2566.53093366557
Epoch Step: 65 / 67 Loss (mean): 0.2132790823416144 Loss (std): 0.444799888434754 Loss ratio: 2.0855298304514784 Tokens per Sec: 2795.153898704674
Mean loss per sample: 0.4814483646979714 Std loss per sample: 2.5024378296052463 ratio: 5.197728381890151
Epoch ended with duration 0:00:11.381132
Train perplexity: 1.067308251733836
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api and gb2312han[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.3829979300499 Loss (std): 44.89784761367787 Loss ratio: 0.4610440073525765 Tokens per Sec: 4297.540472232974
Mean loss per sample: 105.97190758158438 Std loss per sample: 52.223602807128465 ratio: 0.4928061030412535
Epoch ended with duration 0:00:01.050224
b'BLEU = 2.12, 8.6/2.4/1.3/0.9 (BP=0.933, ratio=0.935, hyp_len=2912, ref_len=3113)\n'
Validation perplexity: 1725610.7666244488
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.12
Epoch 557 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.33352015310083516 Loss (std): 0.9226022209706334 Loss ratio: 2.7662562888417046 Tokens per Sec: 2772.3433488893997
Epoch Step: 10 / 67 Loss (mean): 1.2417828788202314 Loss (std): 5.051695957861727 Loss ratio: 4.068099217683805 Tokens per Sec: 2637.440160338058
Epoch Step: 15 / 67 Loss (mean): 1.0849098000689992 Loss (std): 6.918934204501452 Loss ratio: 6.377428062739792 Tokens per Sec: 2689.124966638103
Epoch Step: 20 / 67 Loss (mean): 0.37290204961209383 Loss (std): 0.9904970712219703 Loss ratio: 2.6561856451374326 Tokens per Sec: 2681.8693024929294
Epoch Step: 25 / 67 Loss (mean): 2.181382192116871 Loss (std): 7.933871823401643 Loss ratio: 3.6370847126529458 Tokens per Sec: 3048.3778180715276
Epoch Step: 30 / 67 Loss (mean): 0.29879157999675954 Loss (std): 0.5355936172512233 Loss ratio: 1.7925324979272574 Tokens per Sec: 3158.635546932959
Epoch Step: 35 / 67 Loss (mean): 0.28263494673228706 Loss (std): 0.47324115836536057 Loss ratio: 1.6743901058124155 Tokens per Sec: 2554.4834536972603
Epoch Step: 40 / 67 Loss (mean): 0.5127094024792314 Loss (std): 1.041005573680664 Loss ratio: 2.030400785799579 Tokens per Sec: 3194.652243291427
Epoch Step: 45 / 67 Loss (mean): 0.9421689007094756 Loss (std): 3.966717066569199 Loss ratio: 4.210197411082203 Tokens per Sec: 2392.4370917371707
Epoch Step: 50 / 67 Loss (mean): 0.291228099464206 Loss (std): 0.8118832824034405 Loss ratio: 2.787791713427113 Tokens per Sec: 2987.477648556375
Epoch Step: 55 / 67 Loss (mean): 1.374137629724828 Loss (std): 6.9995294554916265 Loss ratio: 5.093761573863083 Tokens per Sec: 2314.832634500566
Epoch Step: 60 / 67 Loss (mean): 0.1417434976901859 Loss (std): 0.22773519246238524 Loss ratio: 1.6066711783855836 Tokens per Sec: 3352.5674163926515
Epoch Step: 65 / 67 Loss (mean): 0.4180589964853425 Loss (std): 1.100181620177152 Loss ratio: 2.631642015663991 Tokens per Sec: 2438.8179990909757
Mean loss per sample: 0.5550011936125109 Std loss per sample: 3.0723015586187383 ratio: 5.5356665786988355
Epoch ended with duration 0:00:11.475083
Train perplexity: 1.0779827851114008
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use and sslengine[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.49848499894142 Loss (std): 44.75726439349711 Loss ratio: 0.4543954599299484 Tokens per Sec: 4204.323864505597
Mean loss per sample: 107.47341470664642 Std loss per sample: 53.47670385480905 ratio: 0.4975807645153562
Epoch ended with duration 0:00:01.066625
b'BLEU = 2.84, 9.2/3.1/2.0/1.6 (BP=0.920, ratio=0.923, hyp_len=2874, ref_len=3113)\n'
Validation perplexity: 2115015.5514495056
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.84
Epoch 558 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1710707833053675 Loss (std): 0.2995778497017768 Loss ratio: 1.7511923656012 Tokens per Sec: 2487.790911026243
Epoch Step: 10 / 67 Loss (mean): 0.5507658172100491 Loss (std): 0.8279165483798142 Loss ratio: 1.5032097536003515 Tokens per Sec: 2616.775349863659
Epoch Step: 15 / 67 Loss (mean): 0.5087157157395268 Loss (std): 0.8737142616964649 Loss ratio: 1.7174902104731224 Tokens per Sec: 2943.8104945614614
Epoch Step: 20 / 67 Loss (mean): 0.3931978810387591 Loss (std): 1.3294493647718366 Loss ratio: 3.3811203693663536 Tokens per Sec: 2980.7260869813554
Epoch Step: 25 / 67 Loss (mean): 1.1615572567134222 Loss (std): 1.373117116866978 Loss ratio: 1.182134680775148 Tokens per Sec: 2722.067770225865
Epoch Step: 30 / 67 Loss (mean): 0.36693146110155794 Loss (std): 1.1051370501776039 Loss ratio: 3.0118350900189723 Tokens per Sec: 2911.79092436667
Epoch Step: 35 / 67 Loss (mean): 0.34113308834275813 Loss (std): 0.5929687395522819 Loss ratio: 1.7382328475755728 Tokens per Sec: 3331.2004064284406
Epoch Step: 40 / 67 Loss (mean): 0.42411629949856433 Loss (std): 1.3713408697842728 Loss ratio: 3.233407608728122 Tokens per Sec: 2608.248314270193
Epoch Step: 45 / 67 Loss (mean): 2.49527026348278 Loss (std): 9.27622943360304 Loss ratio: 3.717524938823949 Tokens per Sec: 2916.9857774221387
Epoch Step: 50 / 67 Loss (mean): 0.43661730667736265 Loss (std): 1.127284601151691 Loss ratio: 2.581859637517061 Tokens per Sec: 2448.365963002009
Epoch Step: 55 / 67 Loss (mean): 0.23065064215006714 Loss (std): 0.44025398806220606 Loss ratio: 1.9087481567719446 Tokens per Sec: 2376.0241596680016
Epoch Step: 60 / 67 Loss (mean): 0.5444962840010703 Loss (std): 0.9749830253750499 Loss ratio: 1.7906146543566372 Tokens per Sec: 3077.7092253420105
Epoch Step: 65 / 67 Loss (mean): 0.4942774734345221 Loss (std): 1.3320056375418345 Loss ratio: 2.694854022551946 Tokens per Sec: 2487.2460170272416
Mean loss per sample: 0.6133844032330391 Std loss per sample: 3.808422707656724 ratio: 6.208867860974638
Epoch ended with duration 0:00:11.468744
Train perplexity: 1.086531741428082
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.72759392857552 Loss (std): 45.359464943852615 Loss ratio: 0.46414183671608356 Tokens per Sec: 4298.8443236595085
Mean loss per sample: 103.79926638317401 Std loss per sample: 52.8584460744634 ratio: 0.5092371836168567
Epoch ended with duration 0:00:01.037647
b'BLEU = 2.43, 8.2/2.8/1.7/1.3 (BP=0.909, ratio=0.913, hyp_len=2841, ref_len=3113)\n'
Validation perplexity: 1285501.9406410072
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.43
Epoch 559 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2812414706186246 Loss (std): 0.7705577042756284 Loss ratio: 2.7398438167056005 Tokens per Sec: 2858.5640671296032
Epoch Step: 10 / 67 Loss (mean): 0.2458553320793726 Loss (std): 0.5392251600113981 Loss ratio: 2.1932620108369796 Tokens per Sec: 2656.6103384837234
Epoch Step: 15 / 67 Loss (mean): 0.259518152102828 Loss (std): 0.5595809380465266 Loss ratio: 2.156230435182837 Tokens per Sec: 2477.1656982098243
Epoch Step: 20 / 67 Loss (mean): 0.4165006630537391 Loss (std): 1.2323984685087808 Loss ratio: 2.9589351898577174 Tokens per Sec: 2448.742298779424
Epoch Step: 25 / 67 Loss (mean): 0.19055492567713372 Loss (std): 0.3608727001391977 Loss ratio: 1.8937988554052991 Tokens per Sec: 2503.9167544172396
Epoch Step: 30 / 67 Loss (mean): 0.34432843489412335 Loss (std): 0.7208241142847123 Loss ratio: 2.0934202384602845 Tokens per Sec: 2810.7422438028248
Epoch Step: 35 / 67 Loss (mean): 0.276312719458474 Loss (std): 0.5260096361866704 Loss ratio: 1.9036750722788292 Tokens per Sec: 2488.7803526872303
Epoch Step: 40 / 67 Loss (mean): 2.8141537530746064 Loss (std): 10.82000454570022 Loss ratio: 3.844851950210188 Tokens per Sec: 2684.4301063813723
Epoch Step: 45 / 67 Loss (mean): 0.23365870727138827 Loss (std): 0.6554369961678511 Loss ratio: 2.8051040931531763 Tokens per Sec: 2594.4647762314294
Epoch Step: 50 / 67 Loss (mean): 0.14671311663187225 Loss (std): 0.19941992402689354 Loss ratio: 1.3592508195928485 Tokens per Sec: 2910.8385693891637
Epoch Step: 55 / 67 Loss (mean): 0.32511311808411847 Loss (std): 0.6336661115184558 Loss ratio: 1.9490634990449802 Tokens per Sec: 3887.988089380118
Epoch Step: 60 / 67 Loss (mean): 0.9754444104328286 Loss (std): 1.4136074560035632 Loss ratio: 1.449193250670544 Tokens per Sec: 2805.9251130507787
Epoch Step: 65 / 67 Loss (mean): 0.54213553595946 Loss (std): 1.2437149982523041 Loss ratio: 2.294103440482284 Tokens per Sec: 3101.602926157894
Mean loss per sample: 0.677593069591572 Std loss per sample: 4.6856080995509 ratio: 6.915076776648869
Epoch ended with duration 0:00:11.491100
Train perplexity: 1.0960120126380366
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 116.2965696156025 Loss (std): 46.591230204438034 Loss ratio: 0.4006242863262176 Tokens per Sec: 4317.289736687758
Mean loss per sample: 104.25889694727347 Std loss per sample: 53.27860782636835 ratio: 0.511022170638471
Epoch ended with duration 0:00:01.031316
b'BLEU = 2.65, 8.5/2.9/1.9/1.5 (BP=0.909, ratio=0.913, hyp_len=2843, ref_len=3113)\n'
Validation perplexity: 1368119.8589556422
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.65
Epoch 560 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.22166321646909637 Loss (std): 0.3069515359773697 Loss ratio: 1.3847653249232894 Tokens per Sec: 2645.1980354246325
Epoch Step: 10 / 67 Loss (mean): 0.7520075297979929 Loss (std): 4.400558153195667 Loss ratio: 5.851747461063005 Tokens per Sec: 2801.3216109727045
Epoch Step: 15 / 67 Loss (mean): 0.6481499414949212 Loss (std): 1.2837530243913577 Loss ratio: 1.980642043152012 Tokens per Sec: 3289.565604227471
Epoch Step: 20 / 67 Loss (mean): 0.17613575182076602 Loss (std): 0.4221698127992344 Loss ratio: 2.39684339173134 Tokens per Sec: 2939.0571169339096
Epoch Step: 25 / 67 Loss (mean): 0.2858813544444274 Loss (std): 0.521809981207062 Loss ratio: 1.825267626219033 Tokens per Sec: 2524.1458456688542
Epoch Step: 30 / 67 Loss (mean): 0.20784065278257913 Loss (std): 0.36615993065284524 Loss ratio: 1.7617339329466164 Tokens per Sec: 2613.9172015341414
Epoch Step: 35 / 67 Loss (mean): 0.28029013461764407 Loss (std): 0.6146255666861775 Loss ratio: 2.192819121245972 Tokens per Sec: 2998.4196542636573
Epoch Step: 40 / 67 Loss (mean): 0.20566836585931014 Loss (std): 0.37104546968449986 Loss ratio: 1.8040959684500915 Tokens per Sec: 2676.9096808768127
Epoch Step: 45 / 67 Loss (mean): 0.6034349786423263 Loss (std): 0.8043864197489166 Loss ratio: 1.3330125833254027 Tokens per Sec: 2260.7198353246563
Epoch Step: 50 / 67 Loss (mean): 0.2849571964025017 Loss (std): 0.696330528674999 Loss ratio: 2.443632017250173 Tokens per Sec: 3139.598466130214
Epoch Step: 55 / 67 Loss (mean): 0.3022527659049956 Loss (std): 0.6314241237955434 Loss ratio: 2.0890598698243616 Tokens per Sec: 2486.1649944225196
Epoch Step: 60 / 67 Loss (mean): 0.12356338603058248 Loss (std): 0.16830448037857312 Loss ratio: 1.3620902257964753 Tokens per Sec: 3162.3377038573053
Epoch Step: 65 / 67 Loss (mean): 0.4665075627635815 Loss (std): 1.012730106908444 Loss ratio: 2.1708760752109804 Tokens per Sec: 2880.5472357407925
Mean loss per sample: 0.3860040304844867 Std loss per sample: 1.7019781044633908 ratio: 4.409223661025457
Epoch ended with duration 0:00:11.403371
Train perplexity: 1.0536140800838556
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to run[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 115.18874037265778 Loss (std): 44.0617269260309 Loss ratio: 0.3825176556622003 Tokens per Sec: 4194.103527127006
Mean loss per sample: 107.33781312076283 Std loss per sample: 52.756390264546 ratio: 0.49149865020252675
Epoch ended with duration 0:00:01.052299
b'BLEU = 2.59, 8.8/2.8/1.7/1.3 (BP=0.952, ratio=0.953, hyp_len=2966, ref_len=3113)\n'
Validation perplexity: 2076504.0233737903
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.59
Model saved checkpoint_commit_msg_generator!
Epoch 561 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2677522143931128 Loss (std): 0.8008548102126847 Loss ratio: 2.9910296429402172 Tokens per Sec: 2853.174399894995
Epoch Step: 10 / 67 Loss (mean): 0.1400716322077642 Loss (std): 0.1904239685948249 Loss ratio: 1.35947561682136 Tokens per Sec: 2538.0179867480033
Epoch Step: 15 / 67 Loss (mean): 0.19241761975172267 Loss (std): 0.35834126669030825 Loss ratio: 1.8623100480750028 Tokens per Sec: 3349.1660611754037
Epoch Step: 20 / 67 Loss (mean): 0.20704688487603562 Loss (std): 0.4510813800698927 Loss ratio: 2.1786436455683305 Tokens per Sec: 2418.9147252260645
Epoch Step: 25 / 67 Loss (mean): 0.2785170192564692 Loss (std): 0.5816503278409094 Loss ratio: 2.0883834294711567 Tokens per Sec: 2279.729960760427
Epoch Step: 30 / 67 Loss (mean): 3.3412843792016247 Loss (std): 11.151623453616303 Loss ratio: 3.337525989416352 Tokens per Sec: 2831.267074716941
Epoch Step: 35 / 67 Loss (mean): 0.1955852537685132 Loss (std): 0.30517696079185325 Loss ratio: 1.5603270436382097 Tokens per Sec: 2646.112341186402
Epoch Step: 40 / 67 Loss (mean): 0.17627417554012936 Loss (std): 0.3942971118504205 Loss ratio: 2.236839915105191 Tokens per Sec: 3281.9721721669916
Epoch Step: 45 / 67 Loss (mean): 0.20625159806172633 Loss (std): 0.4915120312742132 Loss ratio: 2.3830701720289946 Tokens per Sec: 3356.985715510942
Epoch Step: 50 / 67 Loss (mean): 0.3130294537240843 Loss (std): 0.8315205444908484 Loss ratio: 2.656365190554181 Tokens per Sec: 2679.132353416285
Epoch Step: 55 / 67 Loss (mean): 0.07450364295731388 Loss (std): 0.11158815791520396 Loss ratio: 1.49775438469683 Tokens per Sec: 2343.841584821088
Epoch Step: 60 / 67 Loss (mean): 0.15992721501243068 Loss (std): 0.3458714040033817 Loss ratio: 2.162680091543507 Tokens per Sec: 2577.238888718205
Epoch Step: 65 / 67 Loss (mean): 15.43955604754592 Loss (std): 29.825565133982035 Loss ratio: 1.9317631311505705 Tokens per Sec: 3302.16419928308
Mean loss per sample: 0.6929222977288194 Std loss per sample: 4.929187957256921 ratio: 7.113622946488001
Epoch ended with duration 0:00:11.464349
Train perplexity: 1.0982875445590785
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to method_4 ( ) and hint[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.52538061141968 Loss (std): 44.92912686729753 Loss ratio: 0.4606916331484338 Tokens per Sec: 4328.687514009342
Mean loss per sample: 106.18466346491067 Std loss per sample: 52.23373055656364 ratio: 0.49191407546179755
Epoch ended with duration 0:00:01.052239
b'BLEU = 2.24, 7.9/2.4/1.4/1.1 (BP=0.967, ratio=0.968, hyp_len=3012, ref_len=3113)\n'
Validation perplexity: 1776088.1696891643
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.24
Epoch 562 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5096380364047945 Loss (std): 0.9427758343591083 Loss ratio: 1.849892996625318 Tokens per Sec: 2672.5926639203167
Epoch Step: 10 / 67 Loss (mean): 0.28917059060404426 Loss (std): 0.5334409939506737 Loss ratio: 1.844727684223961 Tokens per Sec: 3261.8574450684864
Epoch Step: 15 / 67 Loss (mean): 0.3976740566577064 Loss (std): 0.7905379941175431 Loss ratio: 1.9879043676162915 Tokens per Sec: 2635.94103500566
Epoch Step: 20 / 67 Loss (mean): 0.3190755725700001 Loss (std): 0.6235706209379013 Loss ratio: 1.9543038532073773 Tokens per Sec: 2590.7802807725398
Epoch Step: 25 / 67 Loss (mean): 0.32074645925422374 Loss (std): 0.9646495695314483 Loss ratio: 3.0075143207328963 Tokens per Sec: 2562.6309061285874
Epoch Step: 30 / 67 Loss (mean): 0.524837314915203 Loss (std): 0.8079502835888853 Loss ratio: 1.5394299540600012 Tokens per Sec: 3068.918226262048
Epoch Step: 35 / 67 Loss (mean): 0.2219027294022453 Loss (std): 0.6800562161300133 Loss ratio: 3.0646590871681822 Tokens per Sec: 2619.4502911367454
Epoch Step: 40 / 67 Loss (mean): 0.17827533371382742 Loss (std): 0.22451382151356342 Loss ratio: 1.2593655938625772 Tokens per Sec: 2733.927247052976
Epoch Step: 45 / 67 Loss (mean): 0.5113836947366508 Loss (std): 1.1534321146707645 Loss ratio: 2.255512106745507 Tokens per Sec: 3378.375067666443
Epoch Step: 50 / 67 Loss (mean): 0.19854167931771372 Loss (std): 0.3087717893468152 Loss ratio: 1.555198839900549 Tokens per Sec: 2792.756820352756
Epoch Step: 55 / 67 Loss (mean): 0.22921230794645453 Loss (std): 0.3819331886057523 Loss ratio: 1.6662856895755107 Tokens per Sec: 2847.3099423447984
Epoch Step: 60 / 67 Loss (mean): 0.2576685464846378 Loss (std): 0.45083594762031803 Loss ratio: 1.7496739659188356 Tokens per Sec: 2749.965556784867
Epoch Step: 65 / 67 Loss (mean): 3.3695850243711902 Loss (std): 12.324404998772566 Loss ratio: 3.6575438546983885 Tokens per Sec: 2385.7412377527326
Mean loss per sample: 0.5623610566096418 Std loss per sample: 3.3083464836360292 ratio: 5.882958012031211
Epoch ended with duration 0:00:11.384010
Train perplexity: 1.0790567613832711
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.55829626321793 Loss (std): 46.08058481371921 Loss ratio: 0.4675464832575088 Tokens per Sec: 4303.332584809087
Mean loss per sample: 105.51012906969571 Std loss per sample: 52.83224352032166 ratio: 0.500731484134787
Epoch ended with duration 0:00:01.031405
b'BLEU = 2.35, 8.9/2.5/1.5/1.1 (BP=0.958, ratio=0.959, hyp_len=2984, ref_len=3113)\n'
Validation perplexity: 1620932.8159284855
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.35
Epoch 563 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.09053413379888298 Loss (std): 0.1394261737759523 Loss ratio: 1.5400398493421334 Tokens per Sec: 2559.982446819825
Epoch Step: 10 / 67 Loss (mean): 0.19801880322302168 Loss (std): 0.48182669560485725 Loss ratio: 2.433237085380183 Tokens per Sec: 2600.2094089072953
Epoch Step: 15 / 67 Loss (mean): 0.22431533559938543 Loss (std): 0.6333696218292132 Loss ratio: 2.8235680816775526 Tokens per Sec: 2277.7918269266243
Epoch Step: 20 / 67 Loss (mean): 0.21057418217606028 Loss (std): 0.5269586746941984 Loss ratio: 2.502484726516047 Tokens per Sec: 2448.694024699259
Epoch Step: 25 / 67 Loss (mean): 0.3180879895535327 Loss (std): 0.9164953485447758 Loss ratio: 2.8812636083216026 Tokens per Sec: 2636.8191280120186
Epoch Step: 30 / 67 Loss (mean): 0.5173292528306774 Loss (std): 1.0472348732758823 Loss ratio: 2.0243101806938486 Tokens per Sec: 3520.724703635627
Epoch Step: 35 / 67 Loss (mean): 0.2772625528550634 Loss (std): 1.1627559798873823 Loss ratio: 4.193700043204908 Tokens per Sec: 2622.6040676415746
Epoch Step: 40 / 67 Loss (mean): 2.094553567489129 Loss (std): 8.524135127647341 Loss ratio: 4.069666806309351 Tokens per Sec: 3540.996857533248
Epoch Step: 45 / 67 Loss (mean): 0.307451054588455 Loss (std): 0.5738926811684256 Loss ratio: 1.8666147752741378 Tokens per Sec: 2921.2528743498888
Epoch Step: 50 / 67 Loss (mean): 0.2559544912583078 Loss (std): 0.5630886969869454 Loss ratio: 2.1999563055866815 Tokens per Sec: 2486.3288016890288
Epoch Step: 55 / 67 Loss (mean): 0.2258723844861379 Loss (std): 0.3774826503400114 Loss ratio: 1.6712209028951834 Tokens per Sec: 2860.0958553266237
Epoch Step: 60 / 67 Loss (mean): 0.3558498495508502 Loss (std): 0.6370470739321114 Loss ratio: 1.7902131326911765 Tokens per Sec: 2586.1335406755343
Epoch Step: 65 / 67 Loss (mean): 3.049491434219817 Loss (std): 11.12226516177851 Loss ratio: 3.647252468713372 Tokens per Sec: 3014.3453535700023
Mean loss per sample: 0.5050684577696968 Std loss per sample: 3.077639742989506 ratio: 6.093510088869698
Epoch ended with duration 0:00:11.398745
Train perplexity: 1.0707246028124653
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print raw print to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 116.89119592308998 Loss (std): 44.81639269993407 Loss ratio: 0.38340263649472434 Tokens per Sec: 4210.588472987352
Mean loss per sample: 106.71264288339336 Std loss per sample: 53.79123545191332 ratio: 0.5040755621683166
Epoch ended with duration 0:00:01.047047
b'BLEU = 2.63, 8.5/2.7/1.8/1.3 (BP=0.964, ratio=0.965, hyp_len=3003, ref_len=3113)\n'
Validation perplexity: 1907825.203945708
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.63
Epoch 564 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2654075886962346 Loss (std): 0.6435105715783332 Loss ratio: 2.424612554371407 Tokens per Sec: 2921.3564987716227
Epoch Step: 10 / 67 Loss (mean): 0.14201318082996295 Loss (std): 0.2990282007793882 Loss ratio: 2.1056369488507163 Tokens per Sec: 2629.3049246802766
Epoch Step: 15 / 67 Loss (mean): 0.28036244505165087 Loss (std): 0.8514030662662198 Loss ratio: 3.0367942686095732 Tokens per Sec: 2881.8890250471
Epoch Step: 20 / 67 Loss (mean): 0.23317839513765648 Loss (std): 0.4321131152822639 Loss ratio: 1.8531438773612223 Tokens per Sec: 3230.9595795651567
Epoch Step: 25 / 67 Loss (mean): 0.2148068608585163 Loss (std): 0.35510077490448616 Loss ratio: 1.6531165414608204 Tokens per Sec: 2949.7869787340164
Epoch Step: 30 / 67 Loss (mean): 0.6661054413946204 Loss (std): 0.9720965743960324 Loss ratio: 1.4593734174588944 Tokens per Sec: 2420.886656827001
Epoch Step: 35 / 67 Loss (mean): 0.23091002494766144 Loss (std): 0.5561511181289411 Loss ratio: 2.4085187217618618 Tokens per Sec: 2348.1767674974844
Epoch Step: 40 / 67 Loss (mean): 0.25299011311290087 Loss (std): 0.5652558760344991 Loss ratio: 2.234300262090656 Tokens per Sec: 3132.9536513391167
Epoch Step: 45 / 67 Loss (mean): 0.24565127596179082 Loss (std): 0.5935735468392511 Loss ratio: 2.416325925909609 Tokens per Sec: 2366.594956276248
Epoch Step: 50 / 67 Loss (mean): 0.5621136033332732 Loss (std): 1.0290487111923574 Loss ratio: 1.8306774735395288 Tokens per Sec: 3129.763442386441
Epoch Step: 55 / 67 Loss (mean): 0.16442939600165118 Loss (std): 0.3362886992432914 Loss ratio: 2.0451860033586358 Tokens per Sec: 2614.6530108900033
Epoch Step: 60 / 67 Loss (mean): 0.37175970833050087 Loss (std): 0.8185341602328008 Loss ratio: 2.2017828771941836 Tokens per Sec: 2558.9832686410327
Epoch Step: 65 / 67 Loss (mean): 0.4165907576607424 Loss (std): 0.9015906448060994 Loss ratio: 2.164211827138817 Tokens per Sec: 2783.262672973678
Mean loss per sample: 0.5424469584102223 Std loss per sample: 3.317032449850366 ratio: 6.114943403078094
Epoch ended with duration 0:00:11.421648
Train perplexity: 1.0761532945386927
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.34906080365181 Loss (std): 45.44055300006011 Loss ratio: 0.46677957265259534 Tokens per Sec: 4307.194020211066
Mean loss per sample: 104.07377268016705 Std loss per sample: 52.61505120214513 ratio: 0.5055553368266795
Epoch ended with duration 0:00:01.033196
b'BLEU = 2.80, 8.8/3.0/1.9/1.5 (BP=0.940, ratio=0.942, hyp_len=2931, ref_len=3113)\n'
Validation perplexity: 1334223.9039855262
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.8
Epoch 565 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.701871961935467 Loss (std): 7.054378539270596 Loss ratio: 4.145070074042438 Tokens per Sec: 2815.2828537281734
Epoch Step: 10 / 67 Loss (mean): 0.13373562832748576 Loss (std): 0.21131001874091415 Loss ratio: 1.5800577705700662 Tokens per Sec: 3031.1540064340597
Epoch Step: 15 / 67 Loss (mean): 6.145542784121062 Loss (std): 16.610127075896948 Loss ratio: 2.7027925212422934 Tokens per Sec: 2895.2389920407954
Epoch Step: 20 / 67 Loss (mean): 0.22142320455077424 Loss (std): 0.4375538048434787 Loss ratio: 1.97609733691278 Tokens per Sec: 2731.3840495402515
Epoch Step: 25 / 67 Loss (mean): 0.36164555299910717 Loss (std): 0.7978907022100247 Loss ratio: 2.206278206916026 Tokens per Sec: 2467.110839534233
Epoch Step: 30 / 67 Loss (mean): 0.4216109936933208 Loss (std): 0.950817883273087 Loss ratio: 2.2552018270299437 Tokens per Sec: 3422.5753976390283
Epoch Step: 35 / 67 Loss (mean): 0.1712155210207129 Loss (std): 0.39570683621904845 Loss ratio: 2.3111621765364223 Tokens per Sec: 3101.5823675972656
Epoch Step: 40 / 67 Loss (mean): 0.4051401076394541 Loss (std): 0.7226966135992072 Loss ratio: 1.7838189800807278 Tokens per Sec: 2559.8090716703077
Epoch Step: 45 / 67 Loss (mean): 0.29799414573062677 Loss (std): 0.544942522874809 Loss ratio: 1.8287021093609417 Tokens per Sec: 2563.733316131509
Epoch Step: 50 / 67 Loss (mean): 0.2618411453427143 Loss (std): 0.6537616535169554 Loss ratio: 2.4967873275274237 Tokens per Sec: 2977.4297231638334
Epoch Step: 55 / 67 Loss (mean): 0.2784765521682857 Loss (std): 0.6532221979487884 Loss ratio: 2.3456991005621215 Tokens per Sec: 2293.2267979109947
Epoch Step: 60 / 67 Loss (mean): 0.1776017086031061 Loss (std): 0.339743709512219 Loss ratio: 1.912952933755037 Tokens per Sec: 2821.838526869632
Epoch Step: 65 / 67 Loss (mean): 0.13003054178261664 Loss (std): 0.2593395092119085 Loss ratio: 1.9944507317786073 Tokens per Sec: 2701.542571403744
Mean loss per sample: 0.6093281082948893 Std loss per sample: 3.8472783837272018 ratio: 6.313968338820307
Epoch ended with duration 0:00:11.486413
Train perplexity: 1.0859355995166966
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.00652888417244 Loss (std): 45.9665283826672 Loss ratio: 0.4642777491618089 Tokens per Sec: 4402.814656367597
Mean loss per sample: 103.12898209132254 Std loss per sample: 53.4893174989259 ratio: 0.5186642630832927
Epoch ended with duration 0:00:01.022465
b'BLEU = 2.22, 8.3/2.5/1.5/1.1 (BP=0.906, ratio=0.910, hyp_len=2834, ref_len=3113)\n'
Validation perplexity: 1173879.0941872748
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.22
Model saved checkpoint_commit_msg_generator!
Epoch 566 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.282275435874908 Loss (std): 0.4771821535444044 Loss ratio: 1.6904841615615127 Tokens per Sec: 3378.3297703422677
Epoch Step: 10 / 67 Loss (mean): 0.2595169675823854 Loss (std): 0.6205161548369352 Loss ratio: 2.391042715308964 Tokens per Sec: 3455.8183959881017
Epoch Step: 15 / 67 Loss (mean): 0.689661181102565 Loss (std): 1.584720343443992 Loss ratio: 2.2978244779711847 Tokens per Sec: 2927.28645812741
Epoch Step: 20 / 67 Loss (mean): 0.5769998940195364 Loss (std): 1.3856773763276755 Loss ratio: 2.4015210239895786 Tokens per Sec: 2780.0162313708943
Epoch Step: 25 / 67 Loss (mean): 0.5265782645838044 Loss (std): 1.3632347769777808 Loss ratio: 2.5888550072518677 Tokens per Sec: 2598.4547702381915
Epoch Step: 30 / 67 Loss (mean): 0.36438990439637564 Loss (std): 1.0621029339424328 Loss ratio: 2.9147430297275734 Tokens per Sec: 2783.3168482293554
Epoch Step: 35 / 67 Loss (mean): 0.4492234714116421 Loss (std): 1.0928194852745 Loss ratio: 2.43268563381254 Tokens per Sec: 3316.958609381927
Epoch Step: 40 / 67 Loss (mean): 0.2344918128928839 Loss (std): 0.39918978360056345 Loss ratio: 1.7023612836449593 Tokens per Sec: 2317.503423474148
Epoch Step: 45 / 67 Loss (mean): 0.3362738320392964 Loss (std): 1.1272783603219572 Loss ratio: 3.35226310499898 Tokens per Sec: 2589.344175682815
Epoch Step: 50 / 67 Loss (mean): 0.1599057343119057 Loss (std): 0.306000323861823 Loss ratio: 1.9136294591221545 Tokens per Sec: 3053.5616898056096
Epoch Step: 55 / 67 Loss (mean): 0.7570117825598572 Loss (std): 3.6741336724179674 Loss ratio: 4.853469598575835 Tokens per Sec: 2477.5307214333384
Epoch Step: 60 / 67 Loss (mean): 0.13287456312355062 Loss (std): 0.1692767553462736 Loss ratio: 1.273959073633041 Tokens per Sec: 2463.4720462750165
Epoch Step: 65 / 67 Loss (mean): 0.301396107810433 Loss (std): 0.48766875836399604 Loss ratio: 1.6180327009090696 Tokens per Sec: 2249.2858899914822
Mean loss per sample: 0.4397507039641521 Std loss per sample: 2.310252849864784 ratio: 5.253551225817055
Epoch ended with duration 0:00:11.414613
Train perplexity: 1.0613037919650223
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use method_5[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 115.41513484716415 Loss (std): 44.343911341764255 Loss ratio: 0.3842122733771932 Tokens per Sec: 4110.464315681081
Mean loss per sample: 110.5631925682919 Std loss per sample: 53.22838269535608 ratio: 0.4814295016171711
Epoch ended with duration 0:00:01.084380
b'BLEU = 2.40, 7.8/2.6/1.6/1.3 (BP=0.937, ratio=0.939, hyp_len=2922, ref_len=3113)\n'
Validation perplexity: 3214855.4925751425
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.4
Epoch 567 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.30097655907229637 Loss (std): 0.5250385503203314 Loss ratio: 1.7444499729103955 Tokens per Sec: 2677.5062614147355
Epoch Step: 10 / 67 Loss (mean): 0.27562188650426833 Loss (std): 0.7323050625646743 Loss ratio: 2.656919128783823 Tokens per Sec: 2647.6100462043123
Epoch Step: 15 / 67 Loss (mean): 0.34483192142579355 Loss (std): 0.5284505059253092 Loss ratio: 1.5324872005477301 Tokens per Sec: 2787.1585564552906
Epoch Step: 20 / 67 Loss (mean): 0.20988365421249 Loss (std): 0.45475414333130265 Loss ratio: 2.1666963301053515 Tokens per Sec: 2505.034906048873
Epoch Step: 25 / 67 Loss (mean): 0.45517484157062427 Loss (std): 0.8739249960695158 Loss ratio: 1.9199764931074708 Tokens per Sec: 2878.782354814098
Epoch Step: 30 / 67 Loss (mean): 0.35104708872404444 Loss (std): 0.9363415444951534 Loss ratio: 2.667281896279176 Tokens per Sec: 2814.338973045228
Epoch Step: 35 / 67 Loss (mean): 0.15783792098955018 Loss (std): 0.2726138117300696 Loss ratio: 1.7271756370138598 Tokens per Sec: 2498.7169948555843
Epoch Step: 40 / 67 Loss (mean): 0.18925604385640327 Loss (std): 0.23560114107481775 Loss ratio: 1.2448804079069649 Tokens per Sec: 2930.1760956861717
Epoch Step: 45 / 67 Loss (mean): 0.3627620203551487 Loss (std): 0.6055380764956507 Loss ratio: 1.669243312469208 Tokens per Sec: 3019.1205054911084
Epoch Step: 50 / 67 Loss (mean): 0.48925510308981757 Loss (std): 0.9312380127219397 Loss ratio: 1.9033792531561655 Tokens per Sec: 3464.2407806961273
Epoch Step: 55 / 67 Loss (mean): 0.3727439601716469 Loss (std): 0.7827196367946387 Loss ratio: 2.0998854989741482 Tokens per Sec: 3076.149872496217
Epoch Step: 60 / 67 Loss (mean): 0.691063338937056 Loss (std): 4.340367376378632 Loss ratio: 6.280708484774599 Tokens per Sec: 2319.232067279973
Epoch Step: 65 / 67 Loss (mean): 0.3016841080843733 Loss (std): 0.5710444818637929 Loss ratio: 1.8928556942882997 Tokens per Sec: 3216.9466760024907
Mean loss per sample: 0.4425516328610283 Std loss per sample: 3.0611994689366546 ratio: 6.917157776927565
Epoch ended with duration 0:00:11.369125
Train perplexity: 1.0617060650483174
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.35118782520294 Loss (std): 45.67651313510956 Loss ratio: 0.46442258751657645 Tokens per Sec: 4423.594579762685
Mean loss per sample: 102.3778668369365 Std loss per sample: 52.66479003519783 ratio: 0.5144157781591627
Epoch ended with duration 0:00:01.018261
b'BLEU = 2.80, 8.8/3.0/2.0/1.6 (BP=0.927, ratio=0.930, hyp_len=2895, ref_len=3113)\n'
Validation perplexity: 1060270.6006500763
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.8
Epoch 568 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3028261645740713 Loss (std): 0.7640208220167563 Loss ratio: 2.5229683276917663 Tokens per Sec: 2401.31475513484
Epoch Step: 10 / 67 Loss (mean): 0.2207217990908248 Loss (std): 0.5076035056609778 Loss ratio: 2.299743422497676 Tokens per Sec: 2464.889309019026
Epoch Step: 15 / 67 Loss (mean): 0.18707749316672562 Loss (std): 0.31935596438785463 Loss ratio: 1.7070784891437525 Tokens per Sec: 3046.8376352671053
Epoch Step: 20 / 67 Loss (mean): 0.18653606634325115 Loss (std): 0.2644621529436784 Loss ratio: 1.417753457162718 Tokens per Sec: 2498.531774253494
Epoch Step: 25 / 67 Loss (mean): 0.9570104797021486 Loss (std): 1.1426059552723704 Loss ratio: 1.1939325425443459 Tokens per Sec: 3407.5490002237157
Epoch Step: 30 / 67 Loss (mean): 0.27314033018592454 Loss (std): 0.6329639625958364 Loss ratio: 2.317358121977017 Tokens per Sec: 2377.6404830948663
Epoch Step: 35 / 67 Loss (mean): 0.16494157418037503 Loss (std): 0.3443516909873558 Loss ratio: 2.0877191981372953 Tokens per Sec: 2470.709905313647
Epoch Step: 40 / 67 Loss (mean): 0.6308114957573707 Loss (std): 1.0873274475681383 Loss ratio: 1.7236963100405474 Tokens per Sec: 3038.4265411902784
Epoch Step: 45 / 67 Loss (mean): 3.1126963541382793 Loss (std): 10.345527101314497 Loss ratio: 3.3236544539785537 Tokens per Sec: 3294.7605944250668
Epoch Step: 50 / 67 Loss (mean): 0.12720109527435852 Loss (std): 0.19205421002390574 Loss ratio: 1.509847140935904 Tokens per Sec: 3287.8689626469873
Epoch Step: 55 / 67 Loss (mean): 5.903134075034359 Loss (std): 19.233447694395718 Loss ratio: 3.2581756487182227 Tokens per Sec: 2872.593387317847
Epoch Step: 60 / 67 Loss (mean): 0.37974769614447723 Loss (std): 0.9091412418505117 Loss ratio: 2.3940665106882535 Tokens per Sec: 2592.353812850579
Epoch Step: 65 / 67 Loss (mean): 0.32530243693327066 Loss (std): 0.6522625980157845 Loss ratio: 2.005095947527695 Tokens per Sec: 2649.7478973861694
Mean loss per sample: 0.465096920596611 Std loss per sample: 3.1743886089438798 ratio: 6.825219579763888
Epoch ended with duration 0:00:11.377809
Train perplexity: 1.0649496069226094
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the time unit test[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.32339504361153 Loss (std): 45.36313213943884 Loss ratio: 0.4613666169614865 Tokens per Sec: 4423.355942231236
Mean loss per sample: 102.83126286771454 Std loss per sample: 53.29063033956423 ratio: 0.5182337438383794
Epoch ended with duration 0:00:01.020810
b'BLEU = 2.23, 8.5/2.5/1.5/1.1 (BP=0.911, ratio=0.915, hyp_len=2848, ref_len=3113)\n'
Validation perplexity: 1127460.1436270692
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.23
Epoch 569 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.4521671011170838 Loss (std): 2.4585133218561674 Loss ratio: 5.437178679701339 Tokens per Sec: 2686.7314414648963
Epoch Step: 10 / 67 Loss (mean): 1.7389004776832735 Loss (std): 9.022633742810513 Loss ratio: 5.18870047976024 Tokens per Sec: 2479.567268012863
Epoch Step: 15 / 67 Loss (mean): 0.2586117894998097 Loss (std): 0.3907386060534998 Loss ratio: 1.5109079396930871 Tokens per Sec: 3100.4006158520665
Epoch Step: 20 / 67 Loss (mean): 0.4189651472879632 Loss (std): 0.6286337226758567 Loss ratio: 1.5004439551717272 Tokens per Sec: 2850.038629974521
Epoch Step: 25 / 67 Loss (mean): 1.2715675728286442 Loss (std): 1.6523924238139374 Loss ratio: 1.2994924211051841 Tokens per Sec: 2484.7693969218644
Epoch Step: 30 / 67 Loss (mean): 0.37960011258837767 Loss (std): 0.6849877141798768 Loss ratio: 1.8044981849693194 Tokens per Sec: 2928.4777665911815
Epoch Step: 35 / 67 Loss (mean): 0.19092554101553105 Loss (std): 0.44840375170700314 Loss ratio: 2.348579186011196 Tokens per Sec: 3005.8675062390284
Epoch Step: 40 / 67 Loss (mean): 0.20793676437824615 Loss (std): 0.43305803456891323 Loss ratio: 2.0826429412990266 Tokens per Sec: 2887.6476292830266
Epoch Step: 45 / 67 Loss (mean): 0.2790196722471592 Loss (std): 0.6375252658608012 Loss ratio: 2.2848756889660207 Tokens per Sec: 2418.9963412707443
Epoch Step: 50 / 67 Loss (mean): 0.3381473237773207 Loss (std): 0.9745725537515457 Loss ratio: 2.8820945346097977 Tokens per Sec: 2564.2381900299333
Epoch Step: 55 / 67 Loss (mean): 0.24290302075587533 Loss (std): 0.6455117852880272 Loss ratio: 2.6574876808007484 Tokens per Sec: 3861.6127784570567
Epoch Step: 60 / 67 Loss (mean): 0.16862976724587497 Loss (std): 0.2772982812426641 Loss ratio: 1.6444207079900799 Tokens per Sec: 2380.5952584881825
Epoch Step: 65 / 67 Loss (mean): 0.30412592761331325 Loss (std): 0.9167311223943848 Loss ratio: 3.0143142664244666 Tokens per Sec: 2332.864287641958
Mean loss per sample: 0.6907907278271781 Std loss per sample: 4.565513860861827 ratio: 6.6091128281675875
Epoch ended with duration 0:00:11.504823
Train perplexity: 1.0979708432240738
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.23161226511002 Loss (std): 45.2640508638187 Loss ratio: 0.45614547451763626 Tokens per Sec: 4427.2947974473855
Mean loss per sample: 104.59694419013428 Std loss per sample: 52.31202022871045 ratio: 0.5001295270502232
Epoch ended with duration 0:00:01.031283
b'BLEU = 2.35, 7.6/2.4/1.6/1.2 (BP=0.962, ratio=0.962, hyp_len=2996, ref_len=3113)\n'
Validation perplexity: 1432253.2278036491
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.35
Epoch 570 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.16203298594700755 Loss (std): 0.18747141132353415 Loss ratio: 1.156995350223603 Tokens per Sec: 2679.493396163395
Epoch Step: 10 / 67 Loss (mean): 0.19376272327281185 Loss (std): 0.48554383314511523 Loss ratio: 2.5058681305871446 Tokens per Sec: 2789.1278058907487
Epoch Step: 15 / 67 Loss (mean): 0.28329514257461597 Loss (std): 0.7465878748680711 Loss ratio: 2.6353712530437416 Tokens per Sec: 2462.61794288174
Epoch Step: 20 / 67 Loss (mean): 0.11996003871627181 Loss (std): 0.2040890280200266 Loss ratio: 1.7013084540822445 Tokens per Sec: 2684.6020399878016
Epoch Step: 25 / 67 Loss (mean): 0.3675361753703328 Loss (std): 0.8934650611731902 Loss ratio: 2.4309581506444276 Tokens per Sec: 3012.1529154709006
Epoch Step: 30 / 67 Loss (mean): 0.22923171406409892 Loss (std): 0.8530730045415301 Loss ratio: 3.721444076900239 Tokens per Sec: 2721.304247892912
Epoch Step: 35 / 67 Loss (mean): 0.6523270940888324 Loss (std): 1.1193779791723348 Loss ratio: 1.7159765236117888 Tokens per Sec: 3053.453760122036
Epoch Step: 40 / 67 Loss (mean): 0.29577775166944775 Loss (std): 0.6596891135168348 Loss ratio: 2.2303540742783228 Tokens per Sec: 2660.3453686162015
Epoch Step: 45 / 67 Loss (mean): 1.008824744811136 Loss (std): 5.464691975300464 Loss ratio: 5.4168893094741835 Tokens per Sec: 2616.5718450510576
Epoch Step: 50 / 67 Loss (mean): 0.38897271815585555 Loss (std): 0.9020643478538197 Loss ratio: 2.319094131152859 Tokens per Sec: 2694.739436481037
Epoch Step: 55 / 67 Loss (mean): 0.23593187610822497 Loss (std): 0.36158778359186466 Loss ratio: 1.5325940248362189 Tokens per Sec: 3433.173910247883
Epoch Step: 60 / 67 Loss (mean): 0.13053328955629695 Loss (std): 0.22867330865481364 Loss ratio: 1.7518390092834553 Tokens per Sec: 2999.6262943434854
Epoch Step: 65 / 67 Loss (mean): 0.18236785821409285 Loss (std): 0.3681902290696312 Loss ratio: 2.0189425520224624 Tokens per Sec: 2500.223969955576
Mean loss per sample: 0.45173172282354696 Std loss per sample: 2.9127223612831137 ratio: 6.447903067504661
Epoch ended with duration 0:00:11.380516
Train perplexity: 1.0630255907519168
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to android-changed[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.03750503063202 Loss (std): 45.19474860855863 Loss ratio: 0.4563397330595114 Tokens per Sec: 4443.57061155085
Mean loss per sample: 104.98839630752985 Std loss per sample: 52.647285301442245 ratio: 0.5014581339753862
Epoch ended with duration 0:00:01.034102
b'BLEU = 1.91, 8.4/2.3/1.2/0.8 (BP=0.920, ratio=0.923, hyp_len=2873, ref_len=3113)\n'
Validation perplexity: 1510283.9227151936
Validation accuracy: 0.0020491803278688526
Validation BLEU: 1.91
Model saved checkpoint_commit_msg_generator!
Epoch 571 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2378585773458326 Loss (std): 0.5730084108314322 Loss ratio: 2.4090298412838447 Tokens per Sec: 2387.91833630957
Epoch Step: 10 / 67 Loss (mean): 0.23792055145895574 Loss (std): 0.5231225447410905 Loss ratio: 2.1987278590825547 Tokens per Sec: 2534.6553396286063
Epoch Step: 15 / 67 Loss (mean): 0.2514911916005076 Loss (std): 0.9151081374666267 Loss ratio: 3.6387283850492507 Tokens per Sec: 3067.279171367524
Epoch Step: 20 / 67 Loss (mean): 0.11947775478074618 Loss (std): 0.20780805311880793 Loss ratio: 1.7393032995987983 Tokens per Sec: 2486.814287790167
Epoch Step: 25 / 67 Loss (mean): 0.1911040011109435 Loss (std): 0.3628067390885785 Loss ratio: 1.8984779857013812 Tokens per Sec: 2791.4347258712787
Epoch Step: 30 / 67 Loss (mean): 0.18272372078354238 Loss (std): 0.33514855126320475 Loss ratio: 1.8341819541876965 Tokens per Sec: 2727.577853970713
Epoch Step: 35 / 67 Loss (mean): 0.24232435620433534 Loss (std): 0.6808522765558781 Loss ratio: 2.8096733123341613 Tokens per Sec: 2735.4126104607913
Epoch Step: 40 / 67 Loss (mean): 0.1788395306593884 Loss (std): 0.4298846281969945 Loss ratio: 2.403745003199197 Tokens per Sec: 2606.587742432081
Epoch Step: 45 / 67 Loss (mean): 0.39449831139472735 Loss (std): 1.102835864289158 Loss ratio: 2.795540139044301 Tokens per Sec: 2928.8129416721395
Epoch Step: 50 / 67 Loss (mean): 0.9038152310658916 Loss (std): 4.0885196424641235 Loss ratio: 4.523623304779265 Tokens per Sec: 2456.4086190679004
Epoch Step: 55 / 67 Loss (mean): 0.2625700872231391 Loss (std): 0.5009677190954587 Loss ratio: 1.9079390359866957 Tokens per Sec: 3244.285230259877
Epoch Step: 60 / 67 Loss (mean): 1.465155951154884 Loss (std): 8.422069464839451 Loss ratio: 5.748240969298115 Tokens per Sec: 3049.3863729828763
Epoch Step: 65 / 67 Loss (mean): 0.3480688546064812 Loss (std): 0.6142783421923635 Loss ratio: 1.7648184664119195 Tokens per Sec: 2916.2598217759887
Mean loss per sample: 0.7233356745470777 Std loss per sample: 4.751630279133828 ratio: 6.569052856558054
Epoch ended with duration 0:00:11.465220
Train perplexity: 1.1028162224484952
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) return[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.83300358057022 Loss (std): 43.76605594643025 Loss ratio: 0.4473547202339217 Tokens per Sec: 4426.460239841092
Mean loss per sample: 101.3420480431714 Std loss per sample: 51.488318561278724 ratio: 0.5080647130729473
Epoch ended with duration 0:00:01.018121
b'BLEU = 2.59, 8.5/2.8/1.7/1.3 (BP=0.966, ratio=0.966, hyp_len=3008, ref_len=3113)\n'
Validation perplexity: 921412.1495090046
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.59
Epoch 572 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.21878895873487636 Loss (std): 0.3917968018483501 Loss ratio: 1.790752166443284 Tokens per Sec: 2819.78640921619
Epoch Step: 10 / 67 Loss (mean): 0.4677724303328432 Loss (std): 0.8853610242905391 Loss ratio: 1.892717413167255 Tokens per Sec: 2975.6238826997264
Epoch Step: 15 / 67 Loss (mean): 0.2628250577545259 Loss (std): 0.43023320292363576 Loss ratio: 1.6369565619023516 Tokens per Sec: 2727.3325193325195
Epoch Step: 20 / 67 Loss (mean): 0.47299822308923467 Loss (std): 1.0184902518339656 Loss ratio: 2.1532644355025825 Tokens per Sec: 3187.379791490445
Epoch Step: 25 / 67 Loss (mean): 0.2849534990655229 Loss (std): 0.5260572395906626 Loss ratio: 1.846116090224601 Tokens per Sec: 2655.9950374773844
Epoch Step: 30 / 67 Loss (mean): 0.3057334653894941 Loss (std): 0.5425219872239354 Loss ratio: 1.774493304266776 Tokens per Sec: 2415.3924687798135
Epoch Step: 35 / 67 Loss (mean): 0.7167626506270608 Loss (std): 1.204648102212574 Loss ratio: 1.6806792334375764 Tokens per Sec: 3069.284478005499
Epoch Step: 40 / 67 Loss (mean): 3.3839714439527597 Loss (std): 12.160110570520306 Loss ratio: 3.5934436126081155 Tokens per Sec: 2420.7041097027604
Epoch Step: 45 / 67 Loss (mean): 0.13056116957886843 Loss (std): 0.1939796860197579 Loss ratio: 1.4857379621019715 Tokens per Sec: 2933.138575428506
Epoch Step: 50 / 67 Loss (mean): 0.5110170097250375 Loss (std): 1.2210466098699853 Loss ratio: 2.3894441606297856 Tokens per Sec: 3210.7402083973348
Epoch Step: 55 / 67 Loss (mean): 0.3442466162046003 Loss (std): 0.8575473008368619 Loss ratio: 2.4910841834598756 Tokens per Sec: 2508.4467767955625
Epoch Step: 60 / 67 Loss (mean): 0.2396508237643502 Loss (std): 0.7447669198445699 Loss ratio: 3.107716919750306 Tokens per Sec: 2472.0531073996526
Epoch Step: 65 / 67 Loss (mean): 0.17205980082189853 Loss (std): 0.23406249433634194 Loss ratio: 1.3603554881399824 Tokens per Sec: 2859.8143727559263
Mean loss per sample: 0.546670628875321 Std loss per sample: 3.33189489755552 ratio: 6.094885515269604
Epoch ended with duration 0:00:11.479253
Train perplexity: 1.076768450368118
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to use ( ) and sslengine[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a unit test for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.42606538534164 Loss (std): 44.2349932701935 Loss ratio: 0.44942356577002124 Tokens per Sec: 4442.187367890042
Mean loss per sample: 102.40596435365619 Std loss per sample: 52.38855585844368 ratio: 0.5115771936634593
Epoch ended with duration 0:00:01.015262
b'BLEU = 2.87, 8.8/3.0/1.9/1.5 (BP=0.961, ratio=0.961, hyp_len=2993, ref_len=3113)\n'
Validation perplexity: 1064315.5068591319
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.87
Epoch 573 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.4401753029978863 Loss (std): 1.1821946741537805 Loss ratio: 2.685736037670104 Tokens per Sec: 2878.073685365683
Epoch Step: 10 / 67 Loss (mean): 1.6738347943610279 Loss (std): 7.109920834574753 Loss ratio: 4.2476837370852385 Tokens per Sec: 2524.3628582076694
Epoch Step: 15 / 67 Loss (mean): 0.20656473057169933 Loss (std): 0.47848147521405093 Loss ratio: 2.316375471697325 Tokens per Sec: 3414.94017504477
Epoch Step: 20 / 67 Loss (mean): 0.33684573939535767 Loss (std): 0.8087157116568242 Loss ratio: 2.4008488666309957 Tokens per Sec: 2920.8884273204117
Epoch Step: 25 / 67 Loss (mean): 0.26703814744905685 Loss (std): 0.4999995016853964 Loss ratio: 1.8723897932252613 Tokens per Sec: 2877.0858021986787
Epoch Step: 30 / 67 Loss (mean): 0.17110841724388592 Loss (std): 0.22990344385255254 Loss ratio: 1.3436127079877334 Tokens per Sec: 2567.311394452107
Epoch Step: 35 / 67 Loss (mean): 1.527124027878017 Loss (std): 11.338861984960404 Loss ratio: 7.42497778698177 Tokens per Sec: 2447.336433596029
Epoch Step: 40 / 67 Loss (mean): 0.21743330246317782 Loss (std): 0.6825467827037656 Loss ratio: 3.139108751840599 Tokens per Sec: 2716.203685006973
Epoch Step: 45 / 67 Loss (mean): 0.17626148825365817 Loss (std): 0.2775503482247252 Loss ratio: 1.5746511105437966 Tokens per Sec: 3306.137509086381
Epoch Step: 50 / 67 Loss (mean): 0.19300986305279366 Loss (std): 0.3867580228181373 Loss ratio: 2.0038251760861985 Tokens per Sec: 2571.7992104263226
Epoch Step: 55 / 67 Loss (mean): 0.24793523176413146 Loss (std): 0.4884040585535411 Loss ratio: 1.9698856636001418 Tokens per Sec: 3110.5180511924136
Epoch Step: 60 / 67 Loss (mean): 0.38322497696026403 Loss (std): 0.7747949787446061 Loss ratio: 2.0217757853109437 Tokens per Sec: 2604.265652972594
Epoch Step: 65 / 67 Loss (mean): 0.13429208506568102 Loss (std): 0.206318525276374 Loss ratio: 1.536341662842345 Tokens per Sec: 2353.3806061405844
Mean loss per sample: 0.4728439456230518 Std loss per sample: 3.1569503873649993 ratio: 6.676516462963661
Epoch ended with duration 0:00:11.464936
Train perplexity: 1.0660664406584
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print change time unit test[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.19715762138367 Loss (std): 45.35243421354098 Loss ratio: 0.4571948965175236 Tokens per Sec: 4416.569479384752
Mean loss per sample: 102.30600789689352 Std loss per sample: 52.91315001843016 ratio: 0.5172047185318512
Epoch ended with duration 0:00:01.018723
b'BLEU = 2.83, 8.9/3.0/2.1/1.6 (BP=0.915, ratio=0.918, hyp_len=2858, ref_len=3113)\n'
Validation perplexity: 1049995.6126013878
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.83
Epoch 574 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.20746594595220813 Loss (std): 0.3660606991096375 Loss ratio: 1.764437519755475 Tokens per Sec: 2872.3396132198627
Epoch Step: 10 / 67 Loss (mean): 0.22031511003478954 Loss (std): 0.725921728167144 Loss ratio: 3.294924837667807 Tokens per Sec: 2216.496036481252
Epoch Step: 15 / 67 Loss (mean): 1.137071030723746 Loss (std): 5.226052699450932 Loss ratio: 4.596065292530184 Tokens per Sec: 2935.8222097941207
Epoch Step: 20 / 67 Loss (mean): 0.27197347619585344 Loss (std): 0.5467981635354532 Loss ratio: 2.01048341619053 Tokens per Sec: 4041.984372220638
Epoch Step: 25 / 67 Loss (mean): 0.08327765369765638 Loss (std): 0.11886758369279041 Loss ratio: 1.4273647060752337 Tokens per Sec: 2679.4910831778966
Epoch Step: 30 / 67 Loss (mean): 0.2707791683196774 Loss (std): 1.01718760334386 Loss ratio: 3.756520893597639 Tokens per Sec: 2287.147665782051
Epoch Step: 35 / 67 Loss (mean): 0.1854024840395141 Loss (std): 0.23948709548072683 Loss ratio: 1.2917145998415311 Tokens per Sec: 3432.7520758300525
Epoch Step: 40 / 67 Loss (mean): 0.37293007796665734 Loss (std): 0.8990359770531884 Loss ratio: 2.410736033829829 Tokens per Sec: 2959.831080172284
Epoch Step: 45 / 67 Loss (mean): 0.25241313511287444 Loss (std): 0.4961303590812617 Loss ratio: 1.9655488960960825 Tokens per Sec: 2441.4507925868047
Epoch Step: 50 / 67 Loss (mean): 0.247392506844335 Loss (std): 0.4390207449263738 Loss ratio: 1.7745919248985809 Tokens per Sec: 2854.9718032081437
Epoch Step: 55 / 67 Loss (mean): 0.1813426992375753 Loss (std): 0.4174339499404862 Loss ratio: 2.3019065652795323 Tokens per Sec: 2664.804683615092
Epoch Step: 60 / 67 Loss (mean): 0.2019383572987863 Loss (std): 0.31771065441391416 Loss ratio: 1.5733051346150755 Tokens per Sec: 2535.403713428329
Epoch Step: 65 / 67 Loss (mean): 0.4190419591686805 Loss (std): 0.8382325408144146 Loss ratio: 2.0003546720651757 Tokens per Sec: 3006.2083609092037
Mean loss per sample: 0.38332742416343835 Std loss per sample: 1.7959729741680797 ratio: 4.685219112844729
Epoch ended with duration 0:00:11.404602
Train perplexity: 1.0532325890729217
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.87804970145226 Loss (std): 43.603190506415174 Loss ratio: 0.4409794756072617 Tokens per Sec: 4190.847648920157
Mean loss per sample: 108.29105154487503 Std loss per sample: 54.663867379425916 ratio: 0.5047865599197142
Epoch ended with duration 0:00:01.063578
b'BLEU = 2.64, 8.5/2.8/1.8/1.4 (BP=0.941, ratio=0.942, hyp_len=2934, ref_len=3113)\n'
Validation perplexity: 2362845.4743902227
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.64
Epoch 575 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.24676759984868113 Loss (std): 0.4786714042669896 Loss ratio: 1.939766016934609 Tokens per Sec: 3190.648719718695
Epoch Step: 10 / 67 Loss (mean): 0.2824530644747938 Loss (std): 0.9705479893058655 Loss ratio: 3.436138995732077 Tokens per Sec: 2583.350415581408
Epoch Step: 15 / 67 Loss (mean): 0.40249935977044515 Loss (std): 1.034347905218903 Loss ratio: 2.5698125477983766 Tokens per Sec: 2562.520583867468
Epoch Step: 20 / 67 Loss (mean): 0.37976933881509467 Loss (std): 0.7350373559783597 Loss ratio: 1.9354836761485923 Tokens per Sec: 2557.521971712521
Epoch Step: 25 / 67 Loss (mean): 0.17709974331410194 Loss (std): 0.42848280205320677 Loss ratio: 2.419443382779245 Tokens per Sec: 2683.2547556918207
Epoch Step: 30 / 67 Loss (mean): 0.20968856944455183 Loss (std): 0.43982862237749143 Loss ratio: 2.097532657800862 Tokens per Sec: 3298.633704532008
Epoch Step: 35 / 67 Loss (mean): 0.2276712390648754 Loss (std): 0.6760758244665829 Loss ratio: 2.9695267054523895 Tokens per Sec: 2499.7867471213203
Epoch Step: 40 / 67 Loss (mean): 0.18282718775662943 Loss (std): 0.5819036151853416 Loss ratio: 3.182806793265032 Tokens per Sec: 2785.4895446821597
Epoch Step: 45 / 67 Loss (mean): 0.2523055491692503 Loss (std): 0.8842863472910699 Loss ratio: 3.504823220110302 Tokens per Sec: 2719.164959983622
Epoch Step: 50 / 67 Loss (mean): 0.3726491768429696 Loss (std): 0.7461962906932265 Loss ratio: 2.002409604161465 Tokens per Sec: 3273.282024944829
Epoch Step: 55 / 67 Loss (mean): 0.3435982465143752 Loss (std): 0.5630767738127261 Loss ratio: 1.638764980685571 Tokens per Sec: 2583.1537479647313
Epoch Step: 60 / 67 Loss (mean): 0.23554601451633062 Loss (std): 0.4545812708652039 Loss ratio: 1.9299043195387513 Tokens per Sec: 3005.379270284239
Epoch Step: 65 / 67 Loss (mean): 0.2895964745985111 Loss (std): 0.6017814105438137 Loss ratio: 2.0779997801358165 Tokens per Sec: 2327.4269231915255
Mean loss per sample: 0.5047303329805628 Std loss per sample: 3.278124163415853 ratio: 6.494803163617459
Epoch ended with duration 0:00:11.438882
Train perplexity: 1.0706756202230645
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 115.6993477344513 Loss (std): 45.731760241071356 Loss ratio: 0.3952637688678517 Tokens per Sec: 4327.210131558514
Mean loss per sample: 105.05277430757758 Std loss per sample: 53.24808965978129 ratio: 0.5068699043004754
Epoch ended with duration 0:00:01.032083
b'BLEU = 2.24, 8.0/2.4/1.5/1.2 (BP=0.920, ratio=0.923, hyp_len=2872, ref_len=3113)\n'
Validation perplexity: 1523517.8465688408
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.24
Model saved checkpoint_commit_msg_generator!
Epoch 576 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.32137146858349297 Loss (std): 0.8191630646903335 Loss ratio: 2.548960143540288 Tokens per Sec: 3136.494101646735
Epoch Step: 10 / 67 Loss (mean): 0.23148688767241765 Loss (std): 0.6980592060657672 Loss ratio: 3.0155453429120644 Tokens per Sec: 2741.9183720407696
Epoch Step: 15 / 67 Loss (mean): 0.2527902405563509 Loss (std): 0.6986590019448903 Loss ratio: 2.7637894580394144 Tokens per Sec: 2909.4145796352113
Epoch Step: 20 / 67 Loss (mean): 0.2855575854937342 Loss (std): 0.6252932881611938 Loss ratio: 2.189727466283378 Tokens per Sec: 3394.0590544060556
Epoch Step: 25 / 67 Loss (mean): 0.48588153155913005 Loss (std): 2.8961048851676403 Loss ratio: 5.960516498485587 Tokens per Sec: 2268.796106300275
Epoch Step: 30 / 67 Loss (mean): 0.48649427285454294 Loss (std): 1.3211031478287818 Loss ratio: 2.715557451636802 Tokens per Sec: 2783.3931476571497
Epoch Step: 35 / 67 Loss (mean): 0.2169686815041132 Loss (std): 0.591169529272375 Loss ratio: 2.7246767836452372 Tokens per Sec: 2566.9129485202216
Epoch Step: 40 / 67 Loss (mean): 0.15666990257068392 Loss (std): 0.2553706111889739 Loss ratio: 1.6299915108057192 Tokens per Sec: 3017.2552733497087
Epoch Step: 45 / 67 Loss (mean): 0.11564705447926826 Loss (std): 0.1840753012780889 Loss ratio: 1.591699002684825 Tokens per Sec: 2868.2024799732676
Epoch Step: 50 / 67 Loss (mean): 0.22812234322736913 Loss (std): 0.6648915398203812 Loss ratio: 2.9146269953824073 Tokens per Sec: 2627.663993277249
Epoch Step: 55 / 67 Loss (mean): 0.14804749015274865 Loss (std): 0.19709983048248117 Loss ratio: 1.3313284154910194 Tokens per Sec: 3316.380518486362
Epoch Step: 60 / 67 Loss (mean): 0.26676057491567917 Loss (std): 0.8259359228195782 Loss ratio: 3.0961693761555646 Tokens per Sec: 2588.7902723776665
Epoch Step: 65 / 67 Loss (mean): 0.3269699138654687 Loss (std): 0.8133360131427755 Loss ratio: 2.487494961011677 Tokens per Sec: 2612.8451872304563
Mean loss per sample: 0.3585178169728025 Std loss per sample: 1.8309457486991698 ratio: 5.106986771700853
Epoch ended with duration 0:00:11.371255
Train perplexity: 1.0497030958224296
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.57591259479523 Loss (std): 44.344962319752305 Loss ratio: 0.4498559653415139 Tokens per Sec: 4422.694933366109
Mean loss per sample: 103.22916590226967 Std loss per sample: 52.75547776439286 ratio: 0.511052058817739
Epoch ended with duration 0:00:01.020273
b'BLEU = 2.67, 8.2/2.9/1.8/1.4 (BP=0.965, ratio=0.966, hyp_len=3007, ref_len=3113)\n'
Validation perplexity: 1189925.1794505066
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.67
Epoch 577 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.37269790091522736 Loss (std): 0.870960587877001 Loss ratio: 2.3369076824371673 Tokens per Sec: 2378.84562550648
Epoch Step: 10 / 67 Loss (mean): 14.439519486688368 Loss (std): 25.5486995420113 Loss ratio: 1.7693594004678868 Tokens per Sec: 3424.68120769181
Epoch Step: 15 / 67 Loss (mean): 0.2699098364055317 Loss (std): 0.5082477805600806 Loss ratio: 1.883028004197865 Tokens per Sec: 2920.035623518527
Epoch Step: 20 / 67 Loss (mean): 0.26801213029284554 Loss (std): 0.49009123618740685 Loss ratio: 1.828615875154251 Tokens per Sec: 2731.853138753895
Epoch Step: 25 / 67 Loss (mean): 0.3772356613571901 Loss (std): 0.6306628404521115 Loss ratio: 1.6718006939830665 Tokens per Sec: 2352.7964749552148
Epoch Step: 30 / 67 Loss (mean): 0.22586290806066245 Loss (std): 0.4235880996341214 Loss ratio: 1.8754212600519329 Tokens per Sec: 2708.820998556727
Epoch Step: 35 / 67 Loss (mean): 0.1894224669340474 Loss (std): 0.3533173444805601 Loss ratio: 1.8652346271235987 Tokens per Sec: 3443.0498756471493
Epoch Step: 40 / 67 Loss (mean): 0.184305501412382 Loss (std): 0.29379619473967467 Loss ratio: 1.594071758510931 Tokens per Sec: 2962.314744001117
Epoch Step: 45 / 67 Loss (mean): 0.5884991322564019 Loss (std): 1.1800879270757496 Loss ratio: 2.0052500715695185 Tokens per Sec: 2826.6137455966787
Epoch Step: 50 / 67 Loss (mean): 0.37487114223404205 Loss (std): 1.0860453961104248 Loss ratio: 2.897116565543415 Tokens per Sec: 2497.467781515389
Epoch Step: 55 / 67 Loss (mean): 2.704709853136592 Loss (std): 11.269137102207322 Loss ratio: 4.166486504694304 Tokens per Sec: 2526.9606028677676
Epoch Step: 60 / 67 Loss (mean): 5.396070878538012 Loss (std): 16.776746448088623 Loss ratio: 3.1090671019195435 Tokens per Sec: 2573.3701028931573
Epoch Step: 65 / 67 Loss (mean): 0.2510383696471763 Loss (std): 0.7575309121777463 Loss ratio: 3.0175901526225797 Tokens per Sec: 2544.430559884705
Mean loss per sample: 0.836027190488803 Std loss per sample: 5.368222306312634 ratio: 6.421109704786009
Epoch ended with duration 0:00:11.498583
Train perplexity: 1.1197598472706185
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.89332151412964 Loss (std): 44.33237456363491 Loss ratio: 0.4528641369803363 Tokens per Sec: 4421.727244277145
Mean loss per sample: 102.5536653165568 Std loss per sample: 52.034845301874505 ratio: 0.5073913754448104
Epoch ended with duration 0:00:01.021078
b'BLEU = 2.47, 8.2/2.6/1.6/1.2 (BP=0.972, ratio=0.973, hyp_len=3028, ref_len=3113)\n'
Validation perplexity: 1085833.6163717671
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.47
Epoch 578 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2942018807848399 Loss (std): 0.5803216124893985 Loss ratio: 1.9725285608007652 Tokens per Sec: 2238.9899556172068
Epoch Step: 10 / 67 Loss (mean): 0.3780187800184649 Loss (std): 1.0107606360400045 Loss ratio: 2.6738370934656537 Tokens per Sec: 2866.3616786299467
Epoch Step: 15 / 67 Loss (mean): 0.11732946589563653 Loss (std): 0.17184196143394678 Loss ratio: 1.4646104465079437 Tokens per Sec: 2892.750770431376
Epoch Step: 20 / 67 Loss (mean): 0.9835704269062262 Loss (std): 2.0486794160412565 Loss ratio: 2.08290058342368 Tokens per Sec: 3459.1065846314964
Epoch Step: 25 / 67 Loss (mean): 0.16818625135783805 Loss (std): 0.29586079498636975 Loss ratio: 1.7591259249656952 Tokens per Sec: 2787.1739479088274
Epoch Step: 30 / 67 Loss (mean): 0.338971135646716 Loss (std): 0.7367151011331583 Loss ratio: 2.1733859425157096 Tokens per Sec: 2839.3250633339485
Epoch Step: 35 / 67 Loss (mean): 0.15677803258779477 Loss (std): 0.27792439410588166 Loss ratio: 1.772725359021492 Tokens per Sec: 3036.5943292937277
Epoch Step: 40 / 67 Loss (mean): 2.1009617865947803 Loss (std): 10.314114353031687 Loss ratio: 4.909234627131752 Tokens per Sec: 3011.5716986592242
Epoch Step: 45 / 67 Loss (mean): 0.34480799951415975 Loss (std): 0.8569660351011982 Loss ratio: 2.485342672758978 Tokens per Sec: 2409.4862945598043
Epoch Step: 50 / 67 Loss (mean): 0.3990304252729402 Loss (std): 0.8723479820877201 Loss ratio: 2.186169090968506 Tokens per Sec: 2665.6746523336665
Epoch Step: 55 / 67 Loss (mean): 0.28134937155846274 Loss (std): 0.898806067102086 Loss ratio: 3.1946261764274793 Tokens per Sec: 2788.935620500877
Epoch Step: 60 / 67 Loss (mean): 0.19721354709326988 Loss (std): 0.40247794295446565 Loss ratio: 2.0408230006842194 Tokens per Sec: 2832.4663997547723
Epoch Step: 65 / 67 Loss (mean): 0.21237202545580658 Loss (std): 0.39317677839488885 Loss ratio: 1.8513586125622121 Tokens per Sec: 2569.9556971911084
Mean loss per sample: 0.7870537126657888 Std loss per sample: 4.994087308460189 ratio: 6.345294136971892
Epoch ended with duration 0:00:11.380469
Train perplexity: 1.1123647366863314
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.18797093629837 Loss (std): 45.43537121167457 Loss ratio: 0.46273867133023633 Tokens per Sec: 4436.334408481504
Mean loss per sample: 103.71264627566714 Std loss per sample: 53.17665685626787 ratio: 0.5127306916354719
Epoch ended with duration 0:00:01.032312
b'BLEU = 2.53, 8.2/2.7/1.8/1.4 (BP=0.930, ratio=0.933, hyp_len=2903, ref_len=3113)\n'
Validation perplexity: 1270500.2001086497
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.53
Epoch 579 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.35452620728301554 Loss (std): 0.8379235020250839 Loss ratio: 2.363502287875085 Tokens per Sec: 2592.657960217257
Epoch Step: 10 / 67 Loss (mean): 0.20293148423661478 Loss (std): 0.4172273100407083 Loss ratio: 2.056000879361963 Tokens per Sec: 2649.0494654964546
Epoch Step: 15 / 67 Loss (mean): 0.18815538919443497 Loss (std): 0.2663298082598294 Loss ratio: 1.4154779695659472 Tokens per Sec: 2840.731889760623
Epoch Step: 20 / 67 Loss (mean): 0.2895153623740043 Loss (std): 0.7509637994007403 Loss ratio: 2.5938651173564446 Tokens per Sec: 2942.3964780708825
Epoch Step: 25 / 67 Loss (mean): 0.3118803305187612 Loss (std): 0.7809251540940133 Loss ratio: 2.503925633255146 Tokens per Sec: 3326.9176983893185
Epoch Step: 30 / 67 Loss (mean): 0.5267380205409609 Loss (std): 1.1118121081924262 Loss ratio: 2.110749679794508 Tokens per Sec: 2653.932706316343
Epoch Step: 35 / 67 Loss (mean): 0.5854724246928527 Loss (std): 1.068653134130058 Loss ratio: 1.8252834617970077 Tokens per Sec: 2401.0578027078423
Epoch Step: 40 / 67 Loss (mean): 0.7621741817565635 Loss (std): 1.4794147631859726 Loss ratio: 1.9410454966821402 Tokens per Sec: 2962.382256153502
Epoch Step: 45 / 67 Loss (mean): 0.15208027837798 Loss (std): 0.24340880085073396 Loss ratio: 1.6005283751898867 Tokens per Sec: 3069.7380247641954
Epoch Step: 50 / 67 Loss (mean): 0.40896757198424893 Loss (std): 0.8366314350628836 Loss ratio: 2.0457158277945466 Tokens per Sec: 2536.6853345564678
Epoch Step: 55 / 67 Loss (mean): 0.32483114554725034 Loss (std): 0.8552299905406203 Loss ratio: 2.6328447941769717 Tokens per Sec: 2527.1898260607595
Epoch Step: 60 / 67 Loss (mean): 1.7963404958363753 Loss (std): 8.639441930516183 Loss ratio: 4.809467887931604 Tokens per Sec: 2761.912455379633
Epoch Step: 65 / 67 Loss (mean): 0.44220482570744934 Loss (std): 0.9099218575917865 Loss ratio: 2.057693188074266 Tokens per Sec: 2793.680444998725
Mean loss per sample: 0.5115199427456242 Std loss per sample: 3.413037578654509 ratio: 6.672345090466575
Epoch ended with duration 0:00:11.417558
Train perplexity: 1.0716596292932312
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to deprecated statement[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.26757645606995 Loss (std): 44.9923487421824 Loss ratio: 0.45785548361718287 Tokens per Sec: 4265.690373107693
Mean loss per sample: 104.41878270487622 Std loss per sample: 53.04759846422249 ratio: 0.5080273595427122
Epoch ended with duration 0:00:01.043157
b'BLEU = 2.54, 8.6/2.7/1.7/1.3 (BP=0.940, ratio=0.942, hyp_len=2931, ref_len=3113)\n'
Validation perplexity: 1398086.9187745845
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.54
Epoch 580 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.7081999923630065 Loss (std): 7.288819408156205 Loss ratio: 4.266959045043287 Tokens per Sec: 2663.660670505203
Epoch Step: 10 / 67 Loss (mean): 0.10235205937351566 Loss (std): 0.14832993454018395 Loss ratio: 1.4492129953035944 Tokens per Sec: 2532.9534115983743
Epoch Step: 15 / 67 Loss (mean): 0.2114389144908273 Loss (std): 0.44313732230164493 Loss ratio: 2.095817240496045 Tokens per Sec: 2327.4850193984753
Epoch Step: 20 / 67 Loss (mean): 0.18348574541596463 Loss (std): 0.25991336200699616 Loss ratio: 1.416531629842793 Tokens per Sec: 2364.5172277576576
Epoch Step: 25 / 67 Loss (mean): 0.2918752100740676 Loss (std): 0.9182424013853862 Loss ratio: 3.146010245790894 Tokens per Sec: 2923.8239034354906
Epoch Step: 30 / 67 Loss (mean): 0.3856590468840295 Loss (std): 0.7439858997347077 Loss ratio: 1.9291286065912767 Tokens per Sec: 2547.3166136811074
Epoch Step: 35 / 67 Loss (mean): 0.33628119001878076 Loss (std): 0.6980414345684673 Loss ratio: 2.075767111831271 Tokens per Sec: 3031.76233763636
Epoch Step: 40 / 67 Loss (mean): 0.22186832293164116 Loss (std): 0.43511171031926854 Loss ratio: 1.9611258811981414 Tokens per Sec: 2888.7338558919027
Epoch Step: 45 / 67 Loss (mean): 0.3077373120381708 Loss (std): 0.854571034626777 Loss ratio: 2.7769496944224255 Tokens per Sec: 3148.6020617919253
Epoch Step: 50 / 67 Loss (mean): 0.5017363016468153 Loss (std): 0.9880658830193488 Loss ratio: 1.9692931920139858 Tokens per Sec: 3127.998188345083
Epoch Step: 55 / 67 Loss (mean): 0.49137967579190445 Loss (std): 1.0605880275317756 Loss ratio: 2.158388064835076 Tokens per Sec: 2798.520730556408
Epoch Step: 60 / 67 Loss (mean): 0.2901836529526918 Loss (std): 0.5447332550022708 Loss ratio: 1.877201728834387 Tokens per Sec: 2650.0247461383756
Epoch Step: 65 / 67 Loss (mean): 1.1271028091905464 Loss (std): 1.8624454317058456 Loss ratio: 1.6524184098550883 Tokens per Sec: 2864.287987754906
Mean loss per sample: 0.4850632031829337 Std loss per sample: 2.703869425698464 ratio: 5.574262091941746
Epoch ended with duration 0:00:11.453692
Train perplexity: 1.0678303855879694
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the command use accounts[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.05853989720345 Loss (std): 45.36288569812538 Loss ratio: 0.45794018108080387 Tokens per Sec: 4323.3370299651915
Mean loss per sample: 105.12838569472804 Std loss per sample: 53.383016925488185 ratio: 0.5077888010237489
Epoch ended with duration 0:00:01.030591
b'BLEU = 2.31, 8.3/2.5/1.6/1.2 (BP=0.923, ratio=0.926, hyp_len=2882, ref_len=3113)\n'
Validation perplexity: 1539209.1273640224
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.31
Model saved checkpoint_commit_msg_generator!
Epoch 581 / 1000
Epoch Step: 5 / 67 Loss (mean): 13.440724911044526 Loss (std): 19.88129863287138 Loss ratio: 1.4791835086613891 Tokens per Sec: 2995.6075594353865
Epoch Step: 10 / 67 Loss (mean): 0.9439745404524729 Loss (std): 1.3157935114809958 Loss ratio: 1.3938866516996316 Tokens per Sec: 3077.4916837890305
Epoch Step: 15 / 67 Loss (mean): 0.21916935643093893 Loss (std): 0.4153981709591344 Loss ratio: 1.895329610506147 Tokens per Sec: 2316.914921434395
Epoch Step: 20 / 67 Loss (mean): 0.20662992941652192 Loss (std): 0.35702279185630115 Loss ratio: 1.7278367798143088 Tokens per Sec: 2853.904876966421
Epoch Step: 25 / 67 Loss (mean): 0.5216465585731385 Loss (std): 1.089990714534149 Loss ratio: 2.0895196117378867 Tokens per Sec: 3033.3330943601836
Epoch Step: 30 / 67 Loss (mean): 0.5021826790180057 Loss (std): 0.877274309564264 Loss ratio: 1.74692267618575 Tokens per Sec: 2735.0758911936405
Epoch Step: 35 / 67 Loss (mean): 0.26448733015604375 Loss (std): 0.4314351067489126 Loss ratio: 1.6312127559924026 Tokens per Sec: 2751.971796327894
Epoch Step: 40 / 67 Loss (mean): 0.15030297741850518 Loss (std): 0.29903608550392197 Loss ratio: 1.989555301165344 Tokens per Sec: 2611.817261487791
Epoch Step: 45 / 67 Loss (mean): 0.10373150938903564 Loss (std): 0.12726630459008403 Loss ratio: 1.2268818350341677 Tokens per Sec: 2630.481942698394
Epoch Step: 50 / 67 Loss (mean): 0.23994473800757987 Loss (std): 0.6402102522272346 Loss ratio: 2.668157082932197 Tokens per Sec: 2876.95994017928
Epoch Step: 55 / 67 Loss (mean): 0.30873765865908354 Loss (std): 0.7670857397350005 Loss ratio: 2.484587539682152 Tokens per Sec: 2857.5985455825426
Epoch Step: 60 / 67 Loss (mean): 0.15585177714092424 Loss (std): 0.25496553894715673 Loss ratio: 1.6359488715782295 Tokens per Sec: 2392.978974928764
Epoch Step: 65 / 67 Loss (mean): 0.3003295052280919 Loss (std): 0.914917604841527 Loss ratio: 3.046379356389485 Tokens per Sec: 2606.3814770959125
Mean loss per sample: 0.7431487181197991 Std loss per sample: 4.903114556357812 ratio: 6.597756864551849
Epoch ended with duration 0:00:11.485771
Train perplexity: 1.105776506990847
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during switch ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for method_1 provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.7709327340126 Loss (std): 44.242346990435244 Loss ratio: 0.45251022725534656 Tokens per Sec: 4407.250906812737
Mean loss per sample: 102.69516719755579 Std loss per sample: 51.98818536438317 ratio: 0.5062378959311
Epoch ended with duration 0:00:01.021370
b'BLEU = 2.24, 7.6/2.4/1.5/1.1 (BP=0.972, ratio=0.972, hyp_len=3027, ref_len=3113)\n'
Validation perplexity: 1106856.5284822606
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.24
Epoch 582 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.21517684871287202 Loss (std): 0.4721855558924309 Loss ratio: 2.194406873773426 Tokens per Sec: 3053.1655179633503
Epoch Step: 10 / 67 Loss (mean): 0.260096361327669 Loss (std): 0.5604247896950306 Loss ratio: 2.1546813912902394 Tokens per Sec: 2882.6746802632624
Epoch Step: 15 / 67 Loss (mean): 0.511269179660303 Loss (std): 1.180890883298619 Loss ratio: 2.309724368840745 Tokens per Sec: 3061.1209176422394
Epoch Step: 20 / 67 Loss (mean): 0.30777768802181527 Loss (std): 0.5868430025918102 Loss ratio: 1.9067106727704537 Tokens per Sec: 2716.5354577139988
Epoch Step: 25 / 67 Loss (mean): 0.16748196125990944 Loss (std): 0.26459855653442155 Loss ratio: 1.5798630165537662 Tokens per Sec: 3257.278439475505
Epoch Step: 30 / 67 Loss (mean): 0.14713901157301734 Loss (std): 0.32912933630210367 Loss ratio: 2.236859774871969 Tokens per Sec: 2560.4415983102103
Epoch Step: 35 / 67 Loss (mean): 1.8104773827653844 Loss (std): 2.3918216003888046 Loss ratio: 1.3210999613458057 Tokens per Sec: 3027.180650820321
Epoch Step: 40 / 67 Loss (mean): 0.24894786364529864 Loss (std): 0.6461235732773504 Loss ratio: 2.5954172243789504 Tokens per Sec: 2884.6737981641136
Epoch Step: 45 / 67 Loss (mean): 0.5858880439227505 Loss (std): 1.1170391140950127 Loss ratio: 1.906574345869899 Tokens per Sec: 2774.490821789134
Epoch Step: 50 / 67 Loss (mean): 0.25900872854617774 Loss (std): 0.8154041778229706 Loss ratio: 3.1481725824448232 Tokens per Sec: 2453.1376194776694
Epoch Step: 55 / 67 Loss (mean): 0.3463887298494228 Loss (std): 1.0356864200139515 Loss ratio: 2.9899541490976635 Tokens per Sec: 2317.423454640984
Epoch Step: 60 / 67 Loss (mean): 0.18094897178343672 Loss (std): 0.43389602449748166 Loss ratio: 2.3978916277942544 Tokens per Sec: 2619.4582515448874
Epoch Step: 65 / 67 Loss (mean): 0.15702686989607173 Loss (std): 0.33029482942283594 Loss ratio: 2.103428729372506 Tokens per Sec: 2755.7157566828614
Mean loss per sample: 0.7026170004534117 Std loss per sample: 4.556068238820552 ratio: 6.4844264170671035
Epoch ended with duration 0:00:11.433016
Train perplexity: 1.0997291031426897
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the daemon to actually ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.55955916643143 Loss (std): 44.60705083902932 Loss ratio: 0.4525897966295096 Tokens per Sec: 4408.466760711231
Mean loss per sample: 102.4182865561948 Std loss per sample: 52.36228879168368 ratio: 0.5112591759964035
Epoch ended with duration 0:00:01.021111
b'BLEU = 2.43, 7.8/2.5/1.7/1.3 (BP=0.940, ratio=0.942, hyp_len=2932, ref_len=3113)\n'
Validation perplexity: 1066094.2698851898
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.43
Epoch 583 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.19281239093106706 Loss (std): 0.5194275598823916 Loss ratio: 2.6939532121049927 Tokens per Sec: 2203.1325922610854
Epoch Step: 10 / 67 Loss (mean): 0.23905269144052 Loss (std): 0.5586960259058694 Loss ratio: 2.3371250185019634 Tokens per Sec: 2502.367849329226
Epoch Step: 15 / 67 Loss (mean): 0.6800828940176871 Loss (std): 1.1484563496579059 Loss ratio: 1.688700538949356 Tokens per Sec: 3164.7686728798653
Epoch Step: 20 / 67 Loss (mean): 0.4813898125466949 Loss (std): 1.0854029787943609 Loss ratio: 2.2547277705198145 Tokens per Sec: 2470.726818384082
Epoch Step: 25 / 67 Loss (mean): 0.2000047663159421 Loss (std): 0.4640920869712302 Loss ratio: 2.3204051359361935 Tokens per Sec: 2335.6039624858995
Epoch Step: 30 / 67 Loss (mean): 0.38103261249125353 Loss (std): 0.7520359437696388 Loss ratio: 1.9736786802911823 Tokens per Sec: 2646.7797777844294
Epoch Step: 35 / 67 Loss (mean): 0.3025518766717141 Loss (std): 0.878001824033485 Loss ratio: 2.90198769775329 Tokens per Sec: 3097.9460529122166
Epoch Step: 40 / 67 Loss (mean): 0.3980653499129403 Loss (std): 0.9714478801379489 Loss ratio: 2.440423112311613 Tokens per Sec: 3163.908319540355
Epoch Step: 45 / 67 Loss (mean): 0.5677347774271766 Loss (std): 2.7791449955703094 Loss ratio: 4.895146653098577 Tokens per Sec: 2764.225071501899
Epoch Step: 50 / 67 Loss (mean): 0.4415522606659579 Loss (std): 0.7489553517873938 Loss ratio: 1.6961873338793567 Tokens per Sec: 2784.3967917889127
Epoch Step: 55 / 67 Loss (mean): 0.3023605926828168 Loss (std): 0.7778745031444537 Loss ratio: 2.5726715781393574 Tokens per Sec: 3490.900024201498
Epoch Step: 60 / 67 Loss (mean): 0.7596657430149207 Loss (std): 1.4652497768432313 Loss ratio: 1.9288085454900552 Tokens per Sec: 3000.7360841054397
Epoch Step: 65 / 67 Loss (mean): 0.27013965197329526 Loss (std): 0.4585649179886058 Loss ratio: 1.6975105825409793 Tokens per Sec: 2366.6336137938843
Mean loss per sample: 0.701568584566473 Std loss per sample: 4.19419898680743 ratio: 5.978316417060196
Epoch ended with duration 0:00:11.507098
Train perplexity: 1.0995731172258363
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during unit[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.38558265566826 Loss (std): 45.463855863883396 Loss ratio: 0.46209876118738524 Tokens per Sec: 4414.2463703012045
Mean loss per sample: 102.71729651453798 Std loss per sample: 52.86206635716957 ratio: 0.5146364648497909
Epoch ended with duration 0:00:01.022292
b'BLEU = 2.60, 8.4/2.8/1.8/1.4 (BP=0.937, ratio=0.939, hyp_len=2924, ref_len=3113)\n'
Validation perplexity: 1110180.8836057447
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.6
Epoch 584 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.31631664427550277 Loss (std): 0.5116980291554524 Loss ratio: 1.6176765858383917 Tokens per Sec: 2876.719958540264
Epoch Step: 10 / 67 Loss (mean): 0.38303128464031033 Loss (std): 1.840385006382272 Loss ratio: 4.804790313957006 Tokens per Sec: 2468.069113003148
Epoch Step: 15 / 67 Loss (mean): 0.8444396787826918 Loss (std): 3.9723635105407085 Loss ratio: 4.704141231576302 Tokens per Sec: 3009.514608980646
Epoch Step: 20 / 67 Loss (mean): 0.19238248614419717 Loss (std): 0.3076485653838923 Loss ratio: 1.599150585637506 Tokens per Sec: 2384.4380484841518
Epoch Step: 25 / 67 Loss (mean): 0.20537315874389606 Loss (std): 0.427567934230933 Loss ratio: 2.0819075717879847 Tokens per Sec: 3079.927397695562
Epoch Step: 30 / 67 Loss (mean): 0.43706565662068897 Loss (std): 0.8870743917117797 Loss ratio: 2.0296135792742795 Tokens per Sec: 2661.6188493372138
Epoch Step: 35 / 67 Loss (mean): 0.7808922728872858 Loss (std): 1.183321572246048 Loss ratio: 1.5153454750817452 Tokens per Sec: 2804.993216837529
Epoch Step: 40 / 67 Loss (mean): 0.1184819816990057 Loss (std): 0.18512742079404748 Loss ratio: 1.5624942977772718 Tokens per Sec: 2463.623743526571
Epoch Step: 45 / 67 Loss (mean): 0.8214294176132171 Loss (std): 4.970573589612609 Loss ratio: 6.05112683212069 Tokens per Sec: 2725.686857052377
Epoch Step: 50 / 67 Loss (mean): 0.2828053870421172 Loss (std): 0.5123645719896301 Loss ratio: 1.8117214008845082 Tokens per Sec: 3024.338746576563
Epoch Step: 55 / 67 Loss (mean): 0.2541453478006588 Loss (std): 0.5453009729538503 Loss ratio: 2.1456264207581013 Tokens per Sec: 2968.2853205576916
Epoch Step: 60 / 67 Loss (mean): 0.5094652787831819 Loss (std): 1.0287079694981696 Loss ratio: 2.0191915177323922 Tokens per Sec: 2534.221832765447
Epoch Step: 65 / 67 Loss (mean): 0.1450611389700498 Loss (std): 0.34121298594983074 Loss ratio: 2.352201205453651 Tokens per Sec: 3182.9874823689784
Mean loss per sample: 0.5258840905903813 Std loss per sample: 3.1049841178940665 ratio: 5.904312705882147
Epoch ended with duration 0:00:11.466870
Train perplexity: 1.0737443875566128
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.60716220736504 Loss (std): 44.589083297930536 Loss ratio: 0.45682183857780495 Tokens per Sec: 4186.620629561597
Mean loss per sample: 106.04454217820627 Std loss per sample: 51.73732961998205 ratio: 0.48788300234290455
Epoch ended with duration 0:00:01.054664
b'BLEU = 2.56, 8.5/2.7/1.8/1.4 (BP=0.930, ratio=0.932, hyp_len=2902, ref_len=3113)\n'
Validation perplexity: 1742680.3243150092
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.56
Epoch 585 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.8857562026678352 Loss (std): 4.499185485953831 Loss ratio: 5.0794851590117025 Tokens per Sec: 2927.743211726398
Epoch Step: 10 / 67 Loss (mean): 0.17538886648981133 Loss (std): 0.26886842456960597 Loss ratio: 1.5329845613958912 Tokens per Sec: 3059.8741218152877
Epoch Step: 15 / 67 Loss (mean): 0.47639771105787077 Loss (std): 1.2033708407355237 Loss ratio: 2.5259794763987506 Tokens per Sec: 3027.552662133449
Epoch Step: 20 / 67 Loss (mean): 0.3417253086990968 Loss (std): 1.2602051926216336 Loss ratio: 3.6877724901882996 Tokens per Sec: 2551.2690797072737
Epoch Step: 25 / 67 Loss (mean): 0.16122768436252954 Loss (std): 0.29603629021578 Loss ratio: 1.8361380763251904 Tokens per Sec: 2373.3239781627844
Epoch Step: 30 / 67 Loss (mean): 0.6775723057144205 Loss (std): 3.6818270788510308 Loss ratio: 5.43385118872144 Tokens per Sec: 2445.86892113624
Epoch Step: 35 / 67 Loss (mean): 0.33791997707885457 Loss (std): 0.9099338394311342 Loss ratio: 2.692749470738744 Tokens per Sec: 2507.4370578626017
Epoch Step: 40 / 67 Loss (mean): 0.587850115945912 Loss (std): 1.4915273744145199 Loss ratio: 2.5372579403416418 Tokens per Sec: 2823.146084459949
Epoch Step: 45 / 67 Loss (mean): 1.608921061716046 Loss (std): 11.341122721495323 Loss ratio: 7.048899409271879 Tokens per Sec: 2996.548136226962
Epoch Step: 50 / 67 Loss (mean): 0.8004281741159502 Loss (std): 1.424480061142806 Loss ratio: 1.779647577643182 Tokens per Sec: 3333.0814801255215
Epoch Step: 55 / 67 Loss (mean): 0.20705528658982075 Loss (std): 0.47834777459624295 Loss ratio: 2.310241783605633 Tokens per Sec: 2390.345429253872
Epoch Step: 60 / 67 Loss (mean): 0.1520918828559843 Loss (std): 0.21403458157082184 Loss ratio: 1.4072715621088803 Tokens per Sec: 2834.3193478063067
Epoch Step: 65 / 67 Loss (mean): 0.18549809419710073 Loss (std): 0.32251430915873625 Loss ratio: 1.7386394752716388 Tokens per Sec: 2703.5610801039716
Mean loss per sample: 0.6353066573048702 Std loss per sample: 3.867857304437596 ratio: 6.0881737346276426
Epoch ended with duration 0:00:11.505807
Train perplexity: 1.0897592599213481
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.6471688747406 Loss (std): 44.58853707391587 Loss ratio: 0.4566290819052108 Tokens per Sec: 4421.660792285598
Mean loss per sample: 103.95711145986665 Std loss per sample: 52.9892331899753 ratio: 0.5097220617796038
Epoch ended with duration 0:00:01.034315
b'BLEU = 2.69, 8.9/3.0/2.0/1.5 (BP=0.901, ratio=0.906, hyp_len=2819, ref_len=3113)\n'
Validation perplexity: 1313296.111215283
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.69
Model saved checkpoint_commit_msg_generator!
Epoch 586 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.0247378284548176 Loss (std): 1.4540389946711136 Loss ratio: 1.4189375607062646 Tokens per Sec: 2789.6933821084135
Epoch Step: 10 / 67 Loss (mean): 0.16180955740878744 Loss (std): 0.3644385582756669 Loss ratio: 2.2522684327908262 Tokens per Sec: 2361.802072529318
Epoch Step: 15 / 67 Loss (mean): 0.19801212293714343 Loss (std): 0.44262173149288114 Loss ratio: 2.2353264281368577 Tokens per Sec: 2401.8321492259615
Epoch Step: 20 / 67 Loss (mean): 0.2443452558836725 Loss (std): 0.4710220317671011 Loss ratio: 1.927690513423942 Tokens per Sec: 3230.211168258195
Epoch Step: 25 / 67 Loss (mean): 0.9807755911242566 Loss (std): 1.8139797845548942 Loss ratio: 1.849536021257973 Tokens per Sec: 3201.062904080022
Epoch Step: 30 / 67 Loss (mean): 0.2199940756745491 Loss (std): 0.5028317912611373 Loss ratio: 2.285660601174586 Tokens per Sec: 3042.201572041911
Epoch Step: 35 / 67 Loss (mean): 0.7946157645783387 Loss (std): 1.8183178253494803 Loss ratio: 2.28829820197988 Tokens per Sec: 2828.7949730755804
Epoch Step: 40 / 67 Loss (mean): 0.23073230726004113 Loss (std): 0.4898536462601022 Loss ratio: 2.1230388239823945 Tokens per Sec: 2918.419398572882
Epoch Step: 45 / 67 Loss (mean): 0.2383110081864288 Loss (std): 0.5384870754018053 Loss ratio: 2.2595979912961095 Tokens per Sec: 3068.698375409343
Epoch Step: 50 / 67 Loss (mean): 0.5900311421391962 Loss (std): 1.098268468984359 Loss ratio: 1.8613737319059387 Tokens per Sec: 2984.17615186419
Epoch Step: 55 / 67 Loss (mean): 0.4435631699507212 Loss (std): 1.0745268973155326 Loss ratio: 2.4224889939237064 Tokens per Sec: 2370.3201505801326
Epoch Step: 60 / 67 Loss (mean): 0.23008192990528187 Loss (std): 0.4144289595517828 Loss ratio: 1.8012234151651603 Tokens per Sec: 2444.6233346228555
Epoch Step: 65 / 67 Loss (mean): 0.3493252893604222 Loss (std): 0.9146112505648429 Loss ratio: 2.618222265669342 Tokens per Sec: 2713.6802317299016
Mean loss per sample: 0.39938361175278053 Std loss per sample: 1.92853824124 ratio: 4.828786621404411
Epoch ended with duration 0:00:11.427916
Train perplexity: 1.0555231160861465
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.86534070968628 Loss (std): 44.594192197377374 Loss ratio: 0.4556689004911791 Tokens per Sec: 4401.869205267415
Mean loss per sample: 102.93495650106247 Std loss per sample: 53.05657688499598 ratio: 0.5154378909602817
Epoch ended with duration 0:00:01.021194
b'BLEU = 2.75, 9.2/3.1/2.0/1.6 (BP=0.892, ratio=0.897, hyp_len=2793, ref_len=3113)\n'
Validation perplexity: 1143415.444278141
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.75
Epoch 587 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2195384811857366 Loss (std): 0.5623519832078115 Loss ratio: 2.561518965470312 Tokens per Sec: 2394.690506870759
Epoch Step: 10 / 67 Loss (mean): 0.2187379042898101 Loss (std): 0.4681791548107001 Loss ratio: 2.140365915686933 Tokens per Sec: 2669.8662944501534
Epoch Step: 15 / 67 Loss (mean): 0.42075180303527304 Loss (std): 1.1683209931945062 Loss ratio: 2.776746254600273 Tokens per Sec: 2391.168028094473
Epoch Step: 20 / 67 Loss (mean): 0.4137403510644617 Loss (std): 0.7435806370671117 Loss ratio: 1.7972156574867413 Tokens per Sec: 3074.6157107773506
Epoch Step: 25 / 67 Loss (mean): 0.5533281906573393 Loss (std): 1.1346753509869432 Loss ratio: 2.050637162800216 Tokens per Sec: 2803.5679723567564
Epoch Step: 30 / 67 Loss (mean): 0.25841446591948625 Loss (std): 0.592035555940242 Loss ratio: 2.2910310142029804 Tokens per Sec: 2739.832989488379
Epoch Step: 35 / 67 Loss (mean): 0.2030318916276883 Loss (std): 0.37189112811016484 Loss ratio: 1.8316882393635172 Tokens per Sec: 3107.537038786096
Epoch Step: 40 / 67 Loss (mean): 0.38563496213100734 Loss (std): 0.973529096372632 Loss ratio: 2.524483493386956 Tokens per Sec: 2670.9667725041554
Epoch Step: 45 / 67 Loss (mean): 0.08877475240400859 Loss (std): 0.11056601852936941 Loss ratio: 1.2454669321542016 Tokens per Sec: 2523.4077591871905
Epoch Step: 50 / 67 Loss (mean): 0.12862189438737914 Loss (std): 0.2361086026628119 Loss ratio: 1.8356797167961767 Tokens per Sec: 3130.3786004247386
Epoch Step: 55 / 67 Loss (mean): 0.1801189853786127 Loss (std): 0.3852296123836104 Loss ratio: 2.138750735097981 Tokens per Sec: 2921.8199207477624
Epoch Step: 60 / 67 Loss (mean): 0.1998297384147918 Loss (std): 0.4697083543256999 Loss ratio: 2.3505428073508963 Tokens per Sec: 3510.8105562028827
Epoch Step: 65 / 67 Loss (mean): 0.09232721277840028 Loss (std): 0.14374472317150522 Loss ratio: 1.5569052595199098 Tokens per Sec: 2548.780052959518
Mean loss per sample: 0.46442939251520604 Std loss per sample: 2.663673358222602 ratio: 5.735367746207815
Epoch ended with duration 0:00:11.459440
Train perplexity: 1.0648534288950187
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.48084235191345 Loss (std): 45.75952055387699 Loss ratio: 0.46465403281542805 Tokens per Sec: 4280.511894262949
Mean loss per sample: 104.57229147961394 Std loss per sample: 54.39754775193934 ratio: 0.5201908362364229
Epoch ended with duration 0:00:01.039210
b'BLEU = 2.26, 8.0/2.5/1.5/1.2 (BP=0.916, ratio=0.919, hyp_len=2862, ref_len=3113)\n'
Validation perplexity: 1427476.2202865581
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.26
Epoch 588 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5326491240157338 Loss (std): 0.9104040727770866 Loss ratio: 1.7092003567252545 Tokens per Sec: 2531.4068507681186
Epoch Step: 10 / 67 Loss (mean): 0.10676286361376697 Loss (std): 0.2438827643852218 Loss ratio: 2.2843407916399627 Tokens per Sec: 2737.0912705487794
Epoch Step: 15 / 67 Loss (mean): 0.2264393103414477 Loss (std): 0.6781006020089316 Loss ratio: 2.9946240384958958 Tokens per Sec: 2894.868612377396
Epoch Step: 20 / 67 Loss (mean): 0.2886466060663224 Loss (std): 0.6014043934264882 Loss ratio: 2.0835318371569675 Tokens per Sec: 2523.727203404334
Epoch Step: 25 / 67 Loss (mean): 0.2302314490189019 Loss (std): 0.5878623247414158 Loss ratio: 2.5533537110004136 Tokens per Sec: 2752.527059263399
Epoch Step: 30 / 67 Loss (mean): 0.22314164177350904 Loss (std): 0.5903761715727027 Loss ratio: 2.6457462931636058 Tokens per Sec: 2405.1645436762105
Epoch Step: 35 / 67 Loss (mean): 0.2338201806142024 Loss (std): 0.5558450943532659 Loss ratio: 2.3772331921614445 Tokens per Sec: 2931.4496490973215
Epoch Step: 40 / 67 Loss (mean): 0.2343595624624868 Loss (std): 0.6595241538312715 Loss ratio: 2.8141550824786146 Tokens per Sec: 3228.3691893443042
Epoch Step: 45 / 67 Loss (mean): 0.3098517607395479 Loss (std): 0.9126240329938854 Loss ratio: 2.945356937187166 Tokens per Sec: 2875.644490814005
Epoch Step: 50 / 67 Loss (mean): 2.116084320954542 Loss (std): 10.250400362519812 Loss ratio: 4.844041544571329 Tokens per Sec: 2880.295490499538
Epoch Step: 55 / 67 Loss (mean): 0.174413803670177 Loss (std): 0.4311355341304436 Loss ratio: 2.471911769929271 Tokens per Sec: 2967.7529364946995
Epoch Step: 60 / 67 Loss (mean): 0.22200472472059118 Loss (std): 0.44139039942505315 Loss ratio: 1.9882027284805515 Tokens per Sec: 2517.4372511219503
Epoch Step: 65 / 67 Loss (mean): 0.3110102861573978 Loss (std): 0.9440862845461485 Loss ratio: 3.035546818115077 Tokens per Sec: 2643.279690529467
Mean loss per sample: 0.3953457023941595 Std loss per sample: 2.3248217535966123 ratio: 5.880478122103793
Epoch ended with duration 0:00:11.453987
Train perplexity: 1.0549466117650204
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during engines[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.14505445957184 Loss (std): 44.89169994285281 Loss ratio: 0.4574015490647541 Tokens per Sec: 4408.713509416001
Mean loss per sample: 105.1425422937533 Std loss per sample: 53.28619501837138 ratio: 0.5067995680520767
Epoch ended with duration 0:00:01.041793
b'BLEU = 2.20, 8.2/2.4/1.5/1.1 (BP=0.930, ratio=0.932, hyp_len=2902, ref_len=3113)\n'
Validation perplexity: 1542164.8924815522
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.2
Epoch 589 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2101841560433968 Loss (std): 0.48553044807854395 Loss ratio: 2.3100240152178566 Tokens per Sec: 3362.223420363048
Epoch Step: 10 / 67 Loss (mean): 0.37185437807784183 Loss (std): 0.8212372186506393 Loss ratio: 2.2084914608124535 Tokens per Sec: 2967.036250513337
Epoch Step: 15 / 67 Loss (mean): 0.690926676907111 Loss (std): 0.9581540776915787 Loss ratio: 1.3867666566019625 Tokens per Sec: 2663.501220492501
Epoch Step: 20 / 67 Loss (mean): 0.2902543176223844 Loss (std): 0.7265852653196085 Loss ratio: 2.503271170163549 Tokens per Sec: 3004.9687442658474
Epoch Step: 25 / 67 Loss (mean): 0.5530834806631901 Loss (std): 1.1135967632191932 Loss ratio: 2.013433418557184 Tokens per Sec: 2769.288988890529
Epoch Step: 30 / 67 Loss (mean): 0.3410103461928884 Loss (std): 0.9902905119727539 Loss ratio: 2.9039896385214305 Tokens per Sec: 2281.751795643345
Epoch Step: 35 / 67 Loss (mean): 0.20656120083731366 Loss (std): 0.5740186043404738 Loss ratio: 2.77892751404252 Tokens per Sec: 2593.6072834427387
Epoch Step: 40 / 67 Loss (mean): 0.21545877651715273 Loss (std): 0.7419438338183432 Loss ratio: 3.4435535456559916 Tokens per Sec: 2530.1862925129153
Epoch Step: 45 / 67 Loss (mean): 0.17916772744138143 Loss (std): 0.346298107392909 Loss ratio: 1.9328152024823102 Tokens per Sec: 2607.4811097349357
Epoch Step: 50 / 67 Loss (mean): 1.5644919684896195 Loss (std): 7.419252797799122 Loss ratio: 4.742276053332357 Tokens per Sec: 2522.1174369812875
Epoch Step: 55 / 67 Loss (mean): 0.272508685302455 Loss (std): 0.9334683338745469 Loss ratio: 3.4254626887891613 Tokens per Sec: 3716.3097780311955
Epoch Step: 60 / 67 Loss (mean): 0.1499785775822602 Loss (std): 0.29448535825811617 Loss ratio: 1.963516143474537 Tokens per Sec: 2652.313346376562
Epoch Step: 65 / 67 Loss (mean): 0.229217578562384 Loss (std): 0.441868395319256 Loss ratio: 1.9277247325034315 Tokens per Sec: 2546.752491751875
Mean loss per sample: 0.39462856657146717 Std loss per sample: 2.181451013960793 ratio: 5.527858849432109
Epoch ended with duration 0:00:11.411540
Train perplexity: 1.0548442570838426
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shader print for cipher ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.62866985797882 Loss (std): 44.99783461325063 Loss ratio: 0.4609079963775941 Tokens per Sec: 4414.789899054984
Mean loss per sample: 104.13388940160635 Std loss per sample: 52.76282463234405 ratio: 0.5066825500856605
Epoch ended with duration 0:00:01.038116
b'BLEU = 2.49, 8.1/2.7/1.7/1.4 (BP=0.925, ratio=0.928, hyp_len=2889, ref_len=3113)\n'
Validation perplexity: 1345138.08071157
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.49
Epoch 590 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.2738680602146815 Loss (std): 6.027615436725763 Loss ratio: 4.731742340497921 Tokens per Sec: 2594.09058403782
Epoch Step: 10 / 67 Loss (mean): 0.3149205643089772 Loss (std): 0.7518797097714991 Loss ratio: 2.3875217911581323 Tokens per Sec: 3028.6095070691317
Epoch Step: 15 / 67 Loss (mean): 0.4152376466226997 Loss (std): 0.9980002649943287 Loss ratio: 2.4034436017819663 Tokens per Sec: 3479.309509531864
Epoch Step: 20 / 67 Loss (mean): 0.2426499987122952 Loss (std): 0.5650015099529498 Loss ratio: 2.328462859885937 Tokens per Sec: 2491.030107966857
Epoch Step: 25 / 67 Loss (mean): 0.6355035540036624 Loss (std): 1.390487613746743 Loss ratio: 2.18800918576567 Tokens per Sec: 3073.4022533635075
Epoch Step: 30 / 67 Loss (mean): 0.17495210688684892 Loss (std): 0.39555638203275206 Loss ratio: 2.2609409459045837 Tokens per Sec: 2528.5014900938336
Epoch Step: 35 / 67 Loss (mean): 0.312179534097595 Loss (std): 0.7572401106545592 Loss ratio: 2.4256558420573056 Tokens per Sec: 2768.2860346430325
Epoch Step: 40 / 67 Loss (mean): 0.0394612559748133 Loss (std): 0.05592375958327408 Loss ratio: 1.417181440422682 Tokens per Sec: 2534.0579100420405
Epoch Step: 45 / 67 Loss (mean): 0.19412957339955028 Loss (std): 0.3587659913459077 Loss ratio: 1.8480748969015084 Tokens per Sec: 2276.8757253379226
Epoch Step: 50 / 67 Loss (mean): 0.5462447051968411 Loss (std): 3.3300684085928167 Loss ratio: 6.096294164339434 Tokens per Sec: 2542.420774620044
Epoch Step: 55 / 67 Loss (mean): 0.22836597825880744 Loss (std): 0.4538879828149034 Loss ratio: 1.9875464212121456 Tokens per Sec: 3203.425370069885
Epoch Step: 60 / 67 Loss (mean): 0.37179706437018467 Loss (std): 0.8927738711247462 Loss ratio: 2.401239699504039 Tokens per Sec: 2692.0732871859905
Epoch Step: 65 / 67 Loss (mean): 1.2659986824246516 Loss (std): 4.795863134781056 Loss ratio: 3.788205470795576 Tokens per Sec: 2975.84942959408
Mean loss per sample: 0.4160115218788804 Std loss per sample: 2.683484094972709 ratio: 6.450504262124719
Epoch ended with duration 0:00:11.438487
Train perplexity: 1.057900454000293
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during command[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.95318886637688 Loss (std): 45.238330879651855 Loss ratio: 0.4571690048386435 Tokens per Sec: 4371.81432600241
Mean loss per sample: 103.48299499326309 Std loss per sample: 53.413398339035 ratio: 0.516156285798573
Epoch ended with duration 0:00:01.029331
b'BLEU = 2.55, 9.1/2.8/1.7/1.3 (BP=0.931, ratio=0.933, hyp_len=2904, ref_len=3113)\n'
Validation perplexity: 1231568.8187522253
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.55
Model saved checkpoint_commit_msg_generator!
Epoch 591 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.3761570430633583 Loss (std): 9.93219869846011 Loss ratio: 4.179942031800832 Tokens per Sec: 2800.5694385010042
Epoch Step: 10 / 67 Loss (mean): 0.19958078141826263 Loss (std): 0.5312889232545982 Loss ratio: 2.6620244668807707 Tokens per Sec: 2736.6761216875802
Epoch Step: 15 / 67 Loss (mean): 0.2524326330603799 Loss (std): 0.6145611582976716 Loss ratio: 2.434555116139336 Tokens per Sec: 2956.3500034853514
Epoch Step: 20 / 67 Loss (mean): 0.5958562054111098 Loss (std): 3.749159369801925 Loss ratio: 6.292053914610489 Tokens per Sec: 2813.9639228247106
Epoch Step: 25 / 67 Loss (mean): 0.26992057564621064 Loss (std): 0.6547734580506842 Loss ratio: 2.425800465500291 Tokens per Sec: 2433.0041179737927
Epoch Step: 30 / 67 Loss (mean): 0.13745547681719472 Loss (std): 0.2227885638769694 Loss ratio: 1.6208052893611593 Tokens per Sec: 2714.7860610296975
Epoch Step: 35 / 67 Loss (mean): 0.2561710514291917 Loss (std): 0.45328931163629615 Loss ratio: 1.7694790613825073 Tokens per Sec: 3022.128791272081
Epoch Step: 40 / 67 Loss (mean): 0.3362295227852883 Loss (std): 0.6998713698472149 Loss ratio: 2.081528605964038 Tokens per Sec: 2733.2953531504777
Epoch Step: 45 / 67 Loss (mean): 0.1743047077097799 Loss (std): 0.37295847232966817 Loss ratio: 2.1396924800829242 Tokens per Sec: 2856.314029542489
Epoch Step: 50 / 67 Loss (mean): 0.24051019276157604 Loss (std): 0.4175594578512084 Loss ratio: 1.7361403816475498 Tokens per Sec: 2950.196820288629
Epoch Step: 55 / 67 Loss (mean): 0.8770615330140572 Loss (std): 1.5188030386352462 Loss ratio: 1.7316949626280138 Tokens per Sec: 3116.307848247633
Epoch Step: 60 / 67 Loss (mean): 0.1599584372343088 Loss (std): 0.47327980706720113 Loss ratio: 2.9587673851422784 Tokens per Sec: 2613.55237185201
Epoch Step: 65 / 67 Loss (mean): 0.32624783169376315 Loss (std): 0.6458154168182692 Loss ratio: 1.9795240123602487 Tokens per Sec: 2463.613159786982
Mean loss per sample: 0.34979871561411513 Std loss per sample: 1.6853100365309723 ratio: 4.817942323122031
Epoch ended with duration 0:00:11.400348
Train perplexity: 1.0484654996912186
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.1443541944027 Loss (std): 46.52537733585599 Loss ratio: 0.46926905433897753 Tokens per Sec: 4416.333548923996
Mean loss per sample: 103.29747901930183 Std loss per sample: 53.74033023028636 ratio: 0.5202482261957682
Epoch ended with duration 0:00:01.018744
b'BLEU = 2.86, 9.0/3.2/2.0/1.6 (BP=0.928, ratio=0.931, hyp_len=2898, ref_len=3113)\n'
Validation perplexity: 1200992.239882336
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.86
Epoch 592 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.8578117558645317 Loss (std): 11.652360530650707 Loss ratio: 4.0773716136966796 Tokens per Sec: 2583.3086157168113
Epoch Step: 10 / 67 Loss (mean): 0.41828495437039237 Loss (std): 1.148161046937368 Loss ratio: 2.7449255225199147 Tokens per Sec: 2289.996362807916
Epoch Step: 15 / 67 Loss (mean): 0.9119776286461274 Loss (std): 4.240426778920639 Loss ratio: 4.649704823588433 Tokens per Sec: 3084.6296926024884
Epoch Step: 20 / 67 Loss (mean): 0.2386515635480464 Loss (std): 0.5345451410180958 Loss ratio: 2.2398560188376004 Tokens per Sec: 2746.974817989781
Epoch Step: 25 / 67 Loss (mean): 0.6805596104313736 Loss (std): 1.0308384198183282 Loss ratio: 1.5146923267528762 Tokens per Sec: 3159.0892974577177
Epoch Step: 30 / 67 Loss (mean): 0.15018681458968786 Loss (std): 0.32561483425602766 Loss ratio: 2.168065386735921 Tokens per Sec: 2849.4158877477266
Epoch Step: 35 / 67 Loss (mean): 0.15948327788112238 Loss (std): 0.46435441087668733 Loss ratio: 2.9116181774418606 Tokens per Sec: 2762.4100309486057
Epoch Step: 40 / 67 Loss (mean): 0.280749865611142 Loss (std): 0.7399537856546627 Loss ratio: 2.635633623702424 Tokens per Sec: 2866.9301720736653
Epoch Step: 45 / 67 Loss (mean): 0.17616311875326573 Loss (std): 0.49530343815870925 Loss ratio: 2.8116182414574062 Tokens per Sec: 2832.35510064746
Epoch Step: 50 / 67 Loss (mean): 0.26327496902740677 Loss (std): 0.8023977934106584 Loss ratio: 3.04775572237226 Tokens per Sec: 2559.7573500181015
Epoch Step: 55 / 67 Loss (mean): 0.30293026603612816 Loss (std): 0.6110036645081784 Loss ratio: 2.0169779418320277 Tokens per Sec: 3347.544249028016
Epoch Step: 60 / 67 Loss (mean): 0.3549259679548413 Loss (std): 1.2881122585926594 Loss ratio: 3.629242081144514 Tokens per Sec: 2311.165235595926
Epoch Step: 65 / 67 Loss (mean): 0.36852948297701005 Loss (std): 0.7817506051656989 Loss ratio: 2.1212701867179153 Tokens per Sec: 3075.746266501617
Mean loss per sample: 0.39003865949453875 Std loss per sample: 2.1757352606650895 ratio: 5.5782554054633495
Epoch ended with duration 0:00:11.447333
Train perplexity: 1.0541893883255185
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.04483157396317 Loss (std): 45.65625685178441 Loss ratio: 0.4609655660597488 Tokens per Sec: 4414.470389236606
Mean loss per sample: 104.38633701803742 Std loss per sample: 53.65123210483896 ratio: 0.5139679544035375
Epoch ended with duration 0:00:01.037807
b'BLEU = 2.20, 8.2/2.4/1.4/1.1 (BP=0.936, ratio=0.938, hyp_len=2921, ref_len=3113)\n'
Validation perplexity: 1391953.0651980452
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.2
Epoch 593 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2181716385348409 Loss (std): 0.47116360063783785 Loss ratio: 2.159600596126959 Tokens per Sec: 2208.6944113868162
Epoch Step: 10 / 67 Loss (mean): 0.3721234037730028 Loss (std): 0.55903237520503 Loss ratio: 1.5022768510040896 Tokens per Sec: 2630.9892396698665
Epoch Step: 15 / 67 Loss (mean): 0.22400212292632204 Loss (std): 0.49752007260151077 Loss ratio: 2.2210507030112088 Tokens per Sec: 2539.5705389125255
Epoch Step: 20 / 67 Loss (mean): 0.238109503371561 Loss (std): 0.5444256753353637 Loss ratio: 2.286450845625459 Tokens per Sec: 3104.715181897327
Epoch Step: 25 / 67 Loss (mean): 0.7452650516697759 Loss (std): 1.0938268743053692 Loss ratio: 1.4677018221297726 Tokens per Sec: 2514.3105727600578
Epoch Step: 30 / 67 Loss (mean): 0.19805740976153174 Loss (std): 0.5266325120399836 Loss ratio: 2.65898919244712 Tokens per Sec: 2362.184259391097
Epoch Step: 35 / 67 Loss (mean): 0.19276859945966862 Loss (std): 0.4962661666755993 Loss ratio: 2.5744139246051274 Tokens per Sec: 2987.9485948203114
Epoch Step: 40 / 67 Loss (mean): 0.42513597136621684 Loss (std): 0.9357910419989112 Loss ratio: 2.20115705333438 Tokens per Sec: 4154.30162933748
Epoch Step: 45 / 67 Loss (mean): 0.21632643385964911 Loss (std): 0.5658929005995743 Loss ratio: 2.615921182183039 Tokens per Sec: 2820.824123041394
Epoch Step: 50 / 67 Loss (mean): 0.32100091308711853 Loss (std): 0.6402642123552936 Loss ratio: 1.994586888235823 Tokens per Sec: 2646.9205593272404
Epoch Step: 55 / 67 Loss (mean): 0.51658582606251 Loss (std): 1.0185484101601683 Loss ratio: 1.971692521886804 Tokens per Sec: 2908.0237693881845
Epoch Step: 60 / 67 Loss (mean): 0.3436707614455372 Loss (std): 0.7595119647957812 Loss ratio: 2.2099987837229613 Tokens per Sec: 3103.430190338846
Epoch Step: 65 / 67 Loss (mean): 3.464478378155036 Loss (std): 15.673255399949449 Loss ratio: 4.523987073718163 Tokens per Sec: 2536.1365955631186
Mean loss per sample: 0.529283204342403 Std loss per sample: 3.3960214053388182 ratio: 6.416265200703157
Epoch ended with duration 0:00:11.476869
Train perplexity: 1.074238315225726
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.37952670454979 Loss (std): 44.8807822105492 Loss ratio: 0.4562004282185023 Tokens per Sec: 4383.967099917697
Mean loss per sample: 103.96225567271964 Std loss per sample: 52.6144579922686 ratio: 0.5060919239565419
Epoch ended with duration 0:00:01.039490
b'BLEU = 2.39, 7.8/2.5/1.6/1.2 (BP=0.959, ratio=0.960, hyp_len=2987, ref_len=3113)\n'
Validation perplexity: 1314211.9724524748
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.39
Epoch 594 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6477883462184764 Loss (std): 0.965342935242202 Loss ratio: 1.4902134946969634 Tokens per Sec: 2727.011300829484
Epoch Step: 10 / 67 Loss (mean): 0.214532399086238 Loss (std): 0.42031205972585417 Loss ratio: 1.9592008550507871 Tokens per Sec: 3019.642398072181
Epoch Step: 15 / 67 Loss (mean): 0.5864927511081532 Loss (std): 1.262545813166916 Loss ratio: 2.1527048898411603 Tokens per Sec: 3033.351268159488
Epoch Step: 20 / 67 Loss (mean): 0.4292351190952104 Loss (std): 0.9133953165633826 Loss ratio: 2.1279603553612736 Tokens per Sec: 2660.5042636765115
Epoch Step: 25 / 67 Loss (mean): 0.6556357616791502 Loss (std): 1.1289386493089266 Loss ratio: 1.7218991325573814 Tokens per Sec: 2866.1682399880488
Epoch Step: 30 / 67 Loss (mean): 0.32682238342022174 Loss (std): 0.7665748152660302 Loss ratio: 2.3455395167361703 Tokens per Sec: 2908.1514919077363
Epoch Step: 35 / 67 Loss (mean): 0.2697002751629043 Loss (std): 0.7189735546826139 Loss ratio: 2.6658243275737843 Tokens per Sec: 2456.931248061206
Epoch Step: 40 / 67 Loss (mean): 0.3433961736445781 Loss (std): 0.5839972949655619 Loss ratio: 1.700651724704454 Tokens per Sec: 2602.0379370595047
Epoch Step: 45 / 67 Loss (mean): 0.2035345777621842 Loss (std): 0.4714020315257346 Loss ratio: 2.3160783622551575 Tokens per Sec: 2332.1628853330903
Epoch Step: 50 / 67 Loss (mean): 15.24211776041011 Loss (std): 22.498137943679414 Loss ratio: 1.4760506576137402 Tokens per Sec: 3090.1892260258805
Epoch Step: 55 / 67 Loss (mean): 0.1335071828616492 Loss (std): 0.24493065070264466 Loss ratio: 1.8345878135745053 Tokens per Sec: 2677.781435575005
Epoch Step: 60 / 67 Loss (mean): 0.42242621247351053 Loss (std): 1.2166185240154668 Loss ratio: 2.880073461567583 Tokens per Sec: 3541.668107515329
Epoch Step: 65 / 67 Loss (mean): 0.15563156752705254 Loss (std): 0.2629481198070875 Loss ratio: 1.6895551717769643 Tokens per Sec: 2641.662614625366
Mean loss per sample: 0.7274276569621776 Std loss per sample: 4.469686359208982 ratio: 6.144509789296315
Epoch ended with duration 0:00:11.425601
Train perplexity: 1.1034269591410848
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.13586074113846 Loss (std): 46.39513508295568 Loss ratio: 0.4776313786583523 Tokens per Sec: 4431.615623023066
Mean loss per sample: 101.82085188991222 Std loss per sample: 53.25210590471368 ratio: 0.5229980393631883
Epoch ended with duration 0:00:01.023320
b'BLEU = 2.65, 8.6/3.0/2.0/1.5 (BP=0.890, ratio=0.896, hyp_len=2789, ref_len=3113)\n'
Validation perplexity: 983181.6905339909
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.65
Epoch 595 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.0916154642454785 Loss (std): 0.15709028901362598 Loss ratio: 1.714670010214775 Tokens per Sec: 2662.5477105554373
Epoch Step: 10 / 67 Loss (mean): 1.9179936675882345 Loss (std): 6.649194456526986 Loss ratio: 3.466744738989655 Tokens per Sec: 2738.266586755141
Epoch Step: 15 / 67 Loss (mean): 0.291449017388004 Loss (std): 0.6612658419302259 Loss ratio: 2.2688902774713675 Tokens per Sec: 2479.2340635322344
Epoch Step: 20 / 67 Loss (mean): 0.22693219414941268 Loss (std): 0.3991243546030361 Loss ratio: 1.758782424411107 Tokens per Sec: 2938.64747046222
Epoch Step: 25 / 67 Loss (mean): 0.19540938487261883 Loss (std): 0.4285749642464239 Loss ratio: 2.193215871007415 Tokens per Sec: 2848.338513869214
Epoch Step: 30 / 67 Loss (mean): 0.32452940379516804 Loss (std): 0.6691799089335851 Loss ratio: 2.062000857573907 Tokens per Sec: 2545.70460797041
Epoch Step: 35 / 67 Loss (mean): 0.41227205167524517 Loss (std): 0.9499793118198163 Loss ratio: 2.304253484949142 Tokens per Sec: 3251.3619215602566
Epoch Step: 40 / 67 Loss (mean): 0.2625310755902319 Loss (std): 0.5279526061335358 Loss ratio: 2.011009953570538 Tokens per Sec: 2685.058616743524
Epoch Step: 45 / 67 Loss (mean): 0.21007081797324645 Loss (std): 0.4067034069359708 Loss ratio: 1.9360300057848419 Tokens per Sec: 2455.1915527185674
Epoch Step: 50 / 67 Loss (mean): 0.25276995409421943 Loss (std): 0.7706143029412389 Loss ratio: 3.0486784147375134 Tokens per Sec: 2906.052631310349
Epoch Step: 55 / 67 Loss (mean): 1.439575174212223 Loss (std): 2.3645932859157144 Loss ratio: 1.642563256350741 Tokens per Sec: 3407.1888153871882
Epoch Step: 60 / 67 Loss (mean): 0.26478806170325697 Loss (std): 0.6201005999790513 Loss ratio: 2.3418752189590273 Tokens per Sec: 2818.2045608945373
Epoch Step: 65 / 67 Loss (mean): 0.1923963118751999 Loss (std): 0.35253489841494273 Loss ratio: 1.8323370909709464 Tokens per Sec: 2463.714637116241
Mean loss per sample: 0.600563409437138 Std loss per sample: 4.077015844402254 ratio: 6.788651756561939
Epoch ended with duration 0:00:11.441201
Train perplexity: 1.0846485938212016
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable libcore.java.io.fileinputstream on android pane[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api help[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.74853777885437 Loss (std): 46.50605303922492 Loss ratio: 0.47095434611269305 Tokens per Sec: 4271.09597761685
Mean loss per sample: 105.5340965617387 Std loss per sample: 52.8431089604431 ratio: 0.5007207213786992
Epoch ended with duration 0:00:01.040330
b'BLEU = 2.49, 8.2/2.8/1.7/1.1 (BP=0.973, ratio=0.974, hyp_len=3031, ref_len=3113)\n'
Validation perplexity: 1626206.2047910725
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.49
Model saved checkpoint_commit_msg_generator!
Epoch 596 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.16369765512354206 Loss (std): 0.28676861097679335 Loss ratio: 1.7518186852485458 Tokens per Sec: 3261.4561208518935
Epoch Step: 10 / 67 Loss (mean): 5.996873342683102 Loss (std): 15.688878718758478 Loss ratio: 2.616176434324859 Tokens per Sec: 3210.4068145787983
Epoch Step: 15 / 67 Loss (mean): 0.19054161916938028 Loss (std): 0.3237147810068593 Loss ratio: 1.698919020516436 Tokens per Sec: 2816.145718400189
Epoch Step: 20 / 67 Loss (mean): 0.3060389702404791 Loss (std): 0.5996345275896752 Loss ratio: 1.9593404301370336 Tokens per Sec: 2879.23129531445
Epoch Step: 25 / 67 Loss (mean): 0.18896510986269277 Loss (std): 0.3837501003970686 Loss ratio: 2.030798704987984 Tokens per Sec: 2937.665590422808
Epoch Step: 30 / 67 Loss (mean): 0.450187681622765 Loss (std): 1.2168810481698973 Loss ratio: 2.703052744098812 Tokens per Sec: 2396.658070287251
Epoch Step: 35 / 67 Loss (mean): 0.4672751326179423 Loss (std): 1.4208539814738201 Loss ratio: 3.0407224401465243 Tokens per Sec: 2576.9645021686206
Epoch Step: 40 / 67 Loss (mean): 0.04906929970075864 Loss (std): 0.0686168966976018 Loss ratio: 1.3983671484217441 Tokens per Sec: 2136.226013542217
Epoch Step: 45 / 67 Loss (mean): 0.2030989938903076 Loss (std): 0.5046265382710946 Loss ratio: 2.4846333731403907 Tokens per Sec: 2818.407495762066
Epoch Step: 50 / 67 Loss (mean): 0.18624697258019296 Loss (std): 0.5508107959430437 Loss ratio: 2.9574214727483925 Tokens per Sec: 3143.668355215548
Epoch Step: 55 / 67 Loss (mean): 0.1304770934930275 Loss (std): 0.17285199924208836 Loss ratio: 1.324768927745354 Tokens per Sec: 2759.7707416655326
Epoch Step: 60 / 67 Loss (mean): 0.3534552416167571 Loss (std): 0.9108019943515956 Loss ratio: 2.5768524189525412 Tokens per Sec: 2942.1123426430354
Epoch Step: 65 / 67 Loss (mean): 0.23638762652080914 Loss (std): 0.48679362043621877 Loss ratio: 2.0593024584278163 Tokens per Sec: 2457.263797079676
Mean loss per sample: 0.6411035555089521 Std loss per sample: 3.951991108969131 ratio: 6.164356873409894
Epoch ended with duration 0:00:11.442981
Train perplexity: 1.0906143137307525
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during command[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.00127243995667 Loss (std): 46.194894413384084 Loss ratio: 0.4666090977911506 Tokens per Sec: 4297.629094296029
Mean loss per sample: 105.40120672544495 Std loss per sample: 52.84605924396449 ratio: 0.5013800210240562
Epoch ended with duration 0:00:01.036488
b'BLEU = 2.33, 8.3/2.7/1.6/1.2 (BP=0.907, ratio=0.911, hyp_len=2836, ref_len=3113)\n'
Validation perplexity: 1597182.0651310864
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.33
Epoch 597 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.0798698895760026 Loss (std): 0.09480915150391737 Loss ratio: 1.1870449803702166 Tokens per Sec: 2634.3473039304317
Epoch Step: 10 / 67 Loss (mean): 0.24751031902769682 Loss (std): 0.44589959528923134 Loss ratio: 1.8015394147640948 Tokens per Sec: 2557.0172977125253
Epoch Step: 15 / 67 Loss (mean): 0.12811392948378852 Loss (std): 0.25833820667936935 Loss ratio: 2.016472429815365 Tokens per Sec: 2961.2393281916097
Epoch Step: 20 / 67 Loss (mean): 0.25072337949313805 Loss (std): 0.5682841027870982 Loss ratio: 2.2665780268913904 Tokens per Sec: 2347.6487503856833
Epoch Step: 25 / 67 Loss (mean): 0.2917956395249348 Loss (std): 0.7713603419105919 Loss ratio: 2.6434950952880047 Tokens per Sec: 3396.561659557563
Epoch Step: 30 / 67 Loss (mean): 0.0953260829305691 Loss (std): 0.25976351539914755 Loss ratio: 2.724999364427328 Tokens per Sec: 2724.287032151272
Epoch Step: 35 / 67 Loss (mean): 0.2265385369910291 Loss (std): 0.6962143001728917 Loss ratio: 3.0732709296187504 Tokens per Sec: 2489.0270202672236
Epoch Step: 40 / 67 Loss (mean): 0.6650136125717836 Loss (std): 1.2406622511741052 Loss ratio: 1.8656193312737404 Tokens per Sec: 3250.6119177157357
Epoch Step: 45 / 67 Loss (mean): 0.1539370744540065 Loss (std): 0.2887477196073804 Loss ratio: 1.8757516383335762 Tokens per Sec: 3036.3523014232806
Epoch Step: 50 / 67 Loss (mean): 0.13870450086237507 Loss (std): 0.5064932938781865 Loss ratio: 3.651599556821431 Tokens per Sec: 2601.122662921903
Epoch Step: 55 / 67 Loss (mean): 0.28289113469509175 Loss (std): 0.664315156083252 Loss ratio: 2.348306732196716 Tokens per Sec: 2495.214217524172
Epoch Step: 60 / 67 Loss (mean): 0.4451130233483127 Loss (std): 1.0886030264206612 Loss ratio: 2.445677770180183 Tokens per Sec: 2831.003803358998
Epoch Step: 65 / 67 Loss (mean): 0.189530576492416 Loss (std): 0.3877360187747969 Loss ratio: 2.0457702706893417 Tokens per Sec: 2834.5250449889445
Mean loss per sample: 0.5215436265165203 Std loss per sample: 3.6089875478472835 ratio: 6.919819099223458
Epoch ended with duration 0:00:11.407797
Train perplexity: 1.0731140017349503
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to method_4 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.79120314121246 Loss (std): 45.67840537424077 Loss ratio: 0.46710137422361225 Tokens per Sec: 4081.9152663336145
Mean loss per sample: 107.49013219471472 Std loss per sample: 53.67467304565548 ratio: 0.4993451208007228
Epoch ended with duration 0:00:01.067668
b'BLEU = 2.61, 9.0/3.1/2.0/1.6 (BP=0.837, ratio=0.849, hyp_len=2642, ref_len=3113)\n'
Validation perplexity: 2119812.5913592703
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.61
Epoch 598 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.24764377012797922 Loss (std): 0.44803009239311364 Loss ratio: 1.8091716668728524 Tokens per Sec: 2604.042684115508
Epoch Step: 10 / 67 Loss (mean): 0.14267495931403573 Loss (std): 0.2664918540280857 Loss ratio: 1.8678249870148684 Tokens per Sec: 2350.146027467158
Epoch Step: 15 / 67 Loss (mean): 0.2221007166670006 Loss (std): 0.42688459965648323 Loss ratio: 1.9220316172888294 Tokens per Sec: 2282.1499115968572
Epoch Step: 20 / 67 Loss (mean): 0.2660717062117328 Loss (std): 0.466763297017277 Loss ratio: 1.7542763327335493 Tokens per Sec: 2584.996107597881
Epoch Step: 25 / 67 Loss (mean): 0.2667163054247794 Loss (std): 0.8779291181771115 Loss ratio: 3.291621473156275 Tokens per Sec: 2907.3978839839474
Epoch Step: 30 / 67 Loss (mean): 0.1915371340692218 Loss (std): 0.34827030087466565 Loss ratio: 1.8182912810463179 Tokens per Sec: 2838.778786910995
Epoch Step: 35 / 67 Loss (mean): 0.5349025029727272 Loss (std): 0.7997386190658915 Loss ratio: 1.495111005503497 Tokens per Sec: 2810.7221451392784
Epoch Step: 40 / 67 Loss (mean): 0.4293959080850982 Loss (std): 1.284916106745426 Loss ratio: 2.9923808833566707 Tokens per Sec: 3503.619917991325
Epoch Step: 45 / 67 Loss (mean): 0.19386424398544477 Loss (std): 0.32421283740078954 Loss ratio: 1.6723704729435886 Tokens per Sec: 2807.8551472524846
Epoch Step: 50 / 67 Loss (mean): 0.25866597665299196 Loss (std): 0.44353818772993203 Loss ratio: 1.714714062781251 Tokens per Sec: 3339.1513975194252
Epoch Step: 55 / 67 Loss (mean): 0.29374621388797095 Loss (std): 0.7033316267376464 Loss ratio: 2.3943512919825523 Tokens per Sec: 2748.818595536804
Epoch Step: 60 / 67 Loss (mean): 0.33381351703428663 Loss (std): 0.749164229898116 Loss ratio: 2.2442597188812097 Tokens per Sec: 2809.3197996326526
Epoch Step: 65 / 67 Loss (mean): 1.0679562566801906 Loss (std): 4.270159272101778 Loss ratio: 3.9984402407789976 Tokens per Sec: 3158.042779885382
Mean loss per sample: 0.4570418365572864 Std loss per sample: 2.4149020430916717 ratio: 5.283765839211053
Epoch ended with duration 0:00:11.417604
Train perplexity: 1.063789603215314
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.82842910289764 Loss (std): 44.70815531537322 Loss ratio: 0.4523815234260602 Tokens per Sec: 4399.573140803369
Mean loss per sample: 104.22245737751487 Std loss per sample: 53.27115169027719 ratio: 0.5111293000635965
Epoch ended with duration 0:00:01.037365
b'BLEU = 2.29, 8.5/2.5/1.5/1.1 (BP=0.941, ratio=0.943, hyp_len=2935, ref_len=3113)\n'
Validation perplexity: 1361380.4438059058
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.29
Epoch 599 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.17951893485451365 Loss (std): 0.35322123758766444 Loss ratio: 1.967598782122472 Tokens per Sec: 2340.144451578207
Epoch Step: 10 / 67 Loss (mean): 0.3955307632495533 Loss (std): 0.6637788146969495 Loss ratio: 1.6781976937610534 Tokens per Sec: 3080.148197818324
Epoch Step: 15 / 67 Loss (mean): 0.5950878204384935 Loss (std): 1.179627087874414 Loss ratio: 1.9822739558090765 Tokens per Sec: 2781.6313617599244
Epoch Step: 20 / 67 Loss (mean): 0.24792652754695155 Loss (std): 0.7100210904975218 Loss ratio: 2.8638367080870775 Tokens per Sec: 2432.3756147964455
Epoch Step: 25 / 67 Loss (mean): 1.532106021931213 Loss (std): 8.471046371955614 Loss ratio: 5.529021001613124 Tokens per Sec: 3005.981725532944
Epoch Step: 30 / 67 Loss (mean): 0.2336818715384652 Loss (std): 0.6448548661705603 Loss ratio: 2.759541687701752 Tokens per Sec: 2489.2348918119196
Epoch Step: 35 / 67 Loss (mean): 0.2954382092484593 Loss (std): 0.6376404891418671 Loss ratio: 2.1582871449292482 Tokens per Sec: 2972.02968427627
Epoch Step: 40 / 67 Loss (mean): 0.271338099222703 Loss (std): 0.8419820625516776 Loss ratio: 3.1030734900984687 Tokens per Sec: 2620.9684978777927
Epoch Step: 45 / 67 Loss (mean): 4.5826374804237275 Loss (std): 14.441052178562146 Loss ratio: 3.151253451806289 Tokens per Sec: 3063.217204707849
Epoch Step: 50 / 67 Loss (mean): 0.21362061402578547 Loss (std): 0.5627727448564125 Loss ratio: 2.6344496172475282 Tokens per Sec: 2673.1680249155906
Epoch Step: 55 / 67 Loss (mean): 0.15194671441349783 Loss (std): 0.33606856551021164 Loss ratio: 2.2117527635092964 Tokens per Sec: 2664.5256161093466
Epoch Step: 60 / 67 Loss (mean): 0.3111069635747299 Loss (std): 0.7838171212535651 Loss ratio: 2.5194457631138403 Tokens per Sec: 2990.7157795636062
Epoch Step: 65 / 67 Loss (mean): 0.7877857149833289 Loss (std): 1.6863605577201426 Loss ratio: 2.140633583024324 Tokens per Sec: 3701.949346997905
Mean loss per sample: 0.47502499360684325 Std loss per sample: 2.900386186161764 ratio: 6.10575490805076
Epoch ended with duration 0:00:11.440288
Train perplexity: 1.066381078137274
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to method_4 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.51491558551788 Loss (std): 46.352080010211814 Loss ratio: 0.47050824471320735 Tokens per Sec: 4292.535571898811
Mean loss per sample: 105.28575088764678 Std loss per sample: 53.24490052721261 ratio: 0.5057180110158653
Epoch ended with duration 0:00:01.038196
b'BLEU = 2.61, 8.3/2.9/1.9/1.5 (BP=0.917, ratio=0.920, hyp_len=2864, ref_len=3113)\n'
Validation perplexity: 1572386.5066702412
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.61
Epoch 600 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.15251142969714238 Loss (std): 0.4171572989105631 Loss ratio: 2.735252693774855 Tokens per Sec: 2947.2228853356532
Epoch Step: 10 / 67 Loss (mean): 2.7022664967516903 Loss (std): 10.746233378378319 Loss ratio: 3.976748182052373 Tokens per Sec: 3003.0170087948627
Epoch Step: 15 / 67 Loss (mean): 0.1313155697093212 Loss (std): 0.32793953498683004 Loss ratio: 2.4973393156101262 Tokens per Sec: 3004.3089582664597
Epoch Step: 20 / 67 Loss (mean): 0.28330935367739585 Loss (std): 0.6747247246528544 Loss ratio: 2.3815829442086227 Tokens per Sec: 3285.0052688423048
Epoch Step: 25 / 67 Loss (mean): 0.2132205927287032 Loss (std): 0.7169674848500648 Loss ratio: 3.3625621037566344 Tokens per Sec: 2538.11680755622
Epoch Step: 30 / 67 Loss (mean): 0.20833368254534435 Loss (std): 0.6631409881736348 Loss ratio: 3.183071407712963 Tokens per Sec: 2401.4241865834897
Epoch Step: 35 / 67 Loss (mean): 0.37962832343691844 Loss (std): 0.9365258633939296 Loss ratio: 2.4669546648026883 Tokens per Sec: 3429.238487460913
Epoch Step: 40 / 67 Loss (mean): 0.18849964936816832 Loss (std): 0.32499743029128986 Loss ratio: 1.724127505704378 Tokens per Sec: 2392.836726600356
Epoch Step: 45 / 67 Loss (mean): 0.2737504400793114 Loss (std): 0.5967279494947768 Loss ratio: 2.17982462173172 Tokens per Sec: 2273.622074078614
Epoch Step: 50 / 67 Loss (mean): 0.127324531749764 Loss (std): 0.1609491411487959 Loss ratio: 1.2640858673261466 Tokens per Sec: 2907.8705394488666
Epoch Step: 55 / 67 Loss (mean): 1.9640979921023245 Loss (std): 8.804743465727263 Loss ratio: 4.48284327010735 Tokens per Sec: 2684.6097845964623
Epoch Step: 60 / 67 Loss (mean): 0.21150692348692246 Loss (std): 0.3899408292885694 Loss ratio: 1.8436315126709293 Tokens per Sec: 2690.780596295988
Epoch Step: 65 / 67 Loss (mean): 0.6299273472322966 Loss (std): 1.0234154829006676 Loss ratio: 1.624656378862157 Tokens per Sec: 3068.71802011273
Mean loss per sample: 0.50495082053174 Std loss per sample: 3.4986896272087473 ratio: 6.928773030855641
Epoch ended with duration 0:00:11.443412
Train perplexity: 1.0707075609904553
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the runtimeexception print error codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api help[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.30553549528122 Loss (std): 45.768065689890435 Loss ratio: 0.46556956797297905 Tokens per Sec: 4257.136478481777
Mean loss per sample: 105.24641381387339 Std loss per sample: 54.47271230118264 ratio: 0.5175730965761624
Epoch ended with duration 0:00:01.052856
b'BLEU = 2.55, 8.7/2.8/1.7/1.4 (BP=0.927, ratio=0.929, hyp_len=2893, ref_len=3113)\n'
Validation perplexity: 1564026.608489944
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.55
Model saved checkpoint_commit_msg_generator!
Epoch 601 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.127864071773729 Loss (std): 1.4703381185478992 Loss ratio: 1.3036483343560898 Tokens per Sec: 3343.5728811483286
Epoch Step: 10 / 67 Loss (mean): 3.7668785734367702 Loss (std): 16.695214598052353 Loss ratio: 4.43210851440327 Tokens per Sec: 2912.65018203374
Epoch Step: 15 / 67 Loss (mean): 0.15429240338198724 Loss (std): 0.3094620849934474 Loss ratio: 2.005685816088437 Tokens per Sec: 2771.639962636882
Epoch Step: 20 / 67 Loss (mean): 0.48798973964585457 Loss (std): 0.8014115333487799 Loss ratio: 1.6422712779378983 Tokens per Sec: 3099.1114894084203
Epoch Step: 25 / 67 Loss (mean): 0.743446238906472 Loss (std): 1.2652750718671497 Loss ratio: 1.7019052698796766 Tokens per Sec: 3220.073980931725
Epoch Step: 30 / 67 Loss (mean): 0.1305154392412078 Loss (std): 0.23282409410526297 Loss ratio: 1.7838816270232738 Tokens per Sec: 2260.666448608096
Epoch Step: 35 / 67 Loss (mean): 0.17498565354071616 Loss (std): 0.3151273853677692 Loss ratio: 1.8008755517459862 Tokens per Sec: 2552.667470150881
Epoch Step: 40 / 67 Loss (mean): 0.16583488510877942 Loss (std): 0.35175114456156664 Loss ratio: 2.121092581520682 Tokens per Sec: 2577.8344926605487
Epoch Step: 45 / 67 Loss (mean): 4.012375371319649 Loss (std): 12.71013761674432 Loss ratio: 3.167733933269564 Tokens per Sec: 2416.373659940686
Epoch Step: 50 / 67 Loss (mean): 0.17622641136267703 Loss (std): 0.44261132384122814 Loss ratio: 2.51160606641604 Tokens per Sec: 2309.5882171879707
Epoch Step: 55 / 67 Loss (mean): 0.12037179158141953 Loss (std): 0.18709842797260448 Loss ratio: 1.5543378188074157 Tokens per Sec: 2624.7874815274495
Epoch Step: 60 / 67 Loss (mean): 0.16736328184015292 Loss (std): 0.40274463147437245 Loss ratio: 2.4064097396167816 Tokens per Sec: 2959.162097260996
Epoch Step: 65 / 67 Loss (mean): 0.5579066527525356 Loss (std): 3.5376516948616445 Loss ratio: 6.340938358429652 Tokens per Sec: 2942.7118333498624
Mean loss per sample: 0.5065524092808107 Std loss per sample: 3.4618461106794998 ratio: 6.834132159384128
Epoch ended with duration 0:00:11.529578
Train perplexity: 1.0709396025708189
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print change time unit test[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.98117873072624 Loss (std): 45.27049712230765 Loss ratio: 0.4573647000654939 Tokens per Sec: 4403.487181202824
Mean loss per sample: 102.99265998669091 Std loss per sample: 52.842824479211494 ratio: 0.5130736936597233
Epoch ended with duration 0:00:01.024779
b'BLEU = 2.36, 8.3/2.6/1.6/1.2 (BP=0.936, ratio=0.938, hyp_len=2921, ref_len=3113)\n'
Validation perplexity: 1152391.8395679696
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.36
Epoch 602 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.14519702506368048 Loss (std): 0.39697561154218813 Loss ratio: 2.7340478316830708 Tokens per Sec: 2533.294533162766
Epoch Step: 10 / 67 Loss (mean): 6.425349199636912 Loss (std): 15.143585081358223 Loss ratio: 2.356850127649711 Tokens per Sec: 2515.5686409010023
Epoch Step: 15 / 67 Loss (mean): 0.22541372532577952 Loss (std): 0.3789114784170577 Loss ratio: 1.6809601006745942 Tokens per Sec: 2812.8591606206205
Epoch Step: 20 / 67 Loss (mean): 1.7507229330731207 Loss (std): 7.4925812333266375 Loss ratio: 4.279707023757655 Tokens per Sec: 3152.455703440455
Epoch Step: 25 / 67 Loss (mean): 0.2862016571434651 Loss (std): 0.8007165637423839 Loss ratio: 2.7977355957132226 Tokens per Sec: 2465.0033934696708
Epoch Step: 30 / 67 Loss (mean): 0.2450203878697721 Loss (std): 0.5193276272456296 Loss ratio: 2.1195282227765118 Tokens per Sec: 3117.6426745359754
Epoch Step: 35 / 67 Loss (mean): 0.28530005119682755 Loss (std): 0.5341909553975054 Loss ratio: 1.8723829636783655 Tokens per Sec: 3246.7322923728316
Epoch Step: 40 / 67 Loss (mean): 0.14881729855369485 Loss (std): 0.3869384927623397 Loss ratio: 2.6000908262874307 Tokens per Sec: 2406.7096020460517
Epoch Step: 45 / 67 Loss (mean): 0.4209649465701659 Loss (std): 1.1829313342423464 Loss ratio: 2.810047116465021 Tokens per Sec: 2484.6656632023096
Epoch Step: 50 / 67 Loss (mean): 0.5157889918627916 Loss (std): 1.0846204826858556 Loss ratio: 2.1028375940492787 Tokens per Sec: 2683.6672542076444
Epoch Step: 55 / 67 Loss (mean): 0.371582216474053 Loss (std): 0.6929039123928126 Loss ratio: 1.8647391658507881 Tokens per Sec: 2628.388337446303
Epoch Step: 60 / 67 Loss (mean): 0.1875974028625933 Loss (std): 0.37076464539268456 Loss ratio: 1.9763847459245107 Tokens per Sec: 2492.8194685814005
Epoch Step: 65 / 67 Loss (mean): 0.2078559355395555 Loss (std): 0.540383062712034 Loss ratio: 2.599796158379118 Tokens per Sec: 3175.412757463025
Mean loss per sample: 0.6560172302353589 Std loss per sample: 4.3074557181268105 ratio: 6.5660710109419345
Epoch ended with duration 0:00:11.501501
Train perplexity: 1.0928171944267375
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the runtimeexception method_1 test 080-oom-throw[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.40504014492035 Loss (std): 44.79715526112861 Loss ratio: 0.455232325449552 Tokens per Sec: 4445.142358187268
Mean loss per sample: 102.7012338750675 Std loss per sample: 52.85619540680202 ratio: 0.5146597894928873
Epoch ended with duration 0:00:01.016163
b'BLEU = 2.88, 8.5/3.2/2.1/1.6 (BP=0.929, ratio=0.932, hyp_len=2900, ref_len=3113)\n'
Validation perplexity: 1107766.8975220819
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.88
Epoch 603 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.4016745979179177 Loss (std): 0.715366636506032 Loss ratio: 1.7809606089459942 Tokens per Sec: 3366.2916136633426
Epoch Step: 10 / 67 Loss (mean): 0.21900488736537227 Loss (std): 0.6336229136160925 Loss ratio: 2.893190746738911 Tokens per Sec: 2937.005686977583
Epoch Step: 15 / 67 Loss (mean): 0.37444037550812936 Loss (std): 1.027611314658267 Loss ratio: 2.7443923836038264 Tokens per Sec: 2549.5153876242666
Epoch Step: 20 / 67 Loss (mean): 0.4625721075972251 Loss (std): 1.2452980891785344 Loss ratio: 2.692116685649476 Tokens per Sec: 2741.8393316221236
Epoch Step: 25 / 67 Loss (mean): 0.2213416976010194 Loss (std): 0.5774827654654008 Loss ratio: 2.609010284661073 Tokens per Sec: 2791.3573678097537
Epoch Step: 30 / 67 Loss (mean): 0.6905472348735202 Loss (std): 1.3757649717911513 Loss ratio: 1.9922822108514195 Tokens per Sec: 2755.948696110882
Epoch Step: 35 / 67 Loss (mean): 0.27346250250411686 Loss (std): 0.5846847736352347 Loss ratio: 2.138080242377774 Tokens per Sec: 2356.681697446992
Epoch Step: 40 / 67 Loss (mean): 0.2720166178769432 Loss (std): 0.6278294295646275 Loss ratio: 2.3080554212634516 Tokens per Sec: 2620.0872673920708
Epoch Step: 45 / 67 Loss (mean): 0.13414886854388897 Loss (std): 0.17606168473890754 Loss ratio: 1.3124351077273986 Tokens per Sec: 2613.538653683859
Epoch Step: 50 / 67 Loss (mean): 0.21893149953075408 Loss (std): 0.5020787224471323 Loss ratio: 2.293314226245472 Tokens per Sec: 2660.157254153225
Epoch Step: 55 / 67 Loss (mean): 0.21960079875680094 Loss (std): 0.3251134344819824 Loss ratio: 1.4804747356225805 Tokens per Sec: 3314.1325312154836
Epoch Step: 60 / 67 Loss (mean): 0.2944390001321153 Loss (std): 0.49147688713405974 Loss ratio: 1.6691976501534551 Tokens per Sec: 2751.3311348366246
Epoch Step: 65 / 67 Loss (mean): 0.22888428986698273 Loss (std): 0.41710474755561405 Loss ratio: 1.8223389110629507 Tokens per Sec: 2800.6637210883137
Mean loss per sample: 0.643212355565968 Std loss per sample: 5.063778668936422 ratio: 7.872638989468354
Epoch ended with duration 0:00:11.483229
Train perplexity: 1.0909255322529972
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print change time unit test[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.12728199362755 Loss (std): 44.362831318654564 Loss ratio: 0.4567494364926754 Tokens per Sec: 4381.532294447077
Mean loss per sample: 101.36799696042034 Std loss per sample: 52.37672987185511 ratio: 0.5166988738300302
Epoch ended with duration 0:00:01.023692
b'BLEU = 2.85, 8.6/3.2/2.1/1.8 (BP=0.898, ratio=0.903, hyp_len=2812, ref_len=3113)\n'
Validation perplexity: 924658.0388336169
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.85
Epoch 604 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.43498054036263056 Loss (std): 1.6572743523865912 Loss ratio: 3.809996536867994 Tokens per Sec: 2840.863648252349
Epoch Step: 10 / 67 Loss (mean): 0.17603013775624277 Loss (std): 0.48946569944773405 Loss ratio: 2.780578971798115 Tokens per Sec: 2272.394017206617
Epoch Step: 15 / 67 Loss (mean): 1.7189067076578795 Loss (std): 2.4711358844350237 Loss ratio: 1.4376207117151254 Tokens per Sec: 2914.0794595233756
Epoch Step: 20 / 67 Loss (mean): 0.153768276349183 Loss (std): 0.3733115354196265 Loss ratio: 2.4277539183173005 Tokens per Sec: 2553.2709569082617
Epoch Step: 25 / 67 Loss (mean): 0.6767172973595734 Loss (std): 4.610703133084874 Loss ratio: 6.81333719571672 Tokens per Sec: 2871.2626819215843
Epoch Step: 30 / 67 Loss (mean): 0.2427624547335654 Loss (std): 0.476094487272322 Loss ratio: 1.961153703915382 Tokens per Sec: 3089.344908555783
Epoch Step: 35 / 67 Loss (mean): 0.239399927231716 Loss (std): 0.7340074408579422 Loss ratio: 3.066030342388091 Tokens per Sec: 2740.5351219804825
Epoch Step: 40 / 67 Loss (mean): 0.26650104458576607 Loss (std): 0.52212010685369 Loss ratio: 1.9591672057617768 Tokens per Sec: 2742.195480999041
Epoch Step: 45 / 67 Loss (mean): 0.24870707666195813 Loss (std): 0.7808269617695865 Loss ratio: 3.139544609061865 Tokens per Sec: 2497.315626223449
Epoch Step: 50 / 67 Loss (mean): 0.20633515341114617 Loss (std): 0.44314350373980527 Loss ratio: 2.1476878583882972 Tokens per Sec: 2548.2581831329544
Epoch Step: 55 / 67 Loss (mean): 0.21618255517387297 Loss (std): 0.43700811941679557 Loss ratio: 2.021477260574126 Tokens per Sec: 3300.3386627438767
Epoch Step: 60 / 67 Loss (mean): 0.2561131225575082 Loss (std): 0.5372189969143977 Loss ratio: 2.0975848154511074 Tokens per Sec: 2881.8573249965834
Epoch Step: 65 / 67 Loss (mean): 0.4087014805511444 Loss (std): 0.9845065612761529 Loss ratio: 2.4088646802759817 Tokens per Sec: 2729.580001886488
Mean loss per sample: 0.48769794779754644 Std loss per sample: 2.8334362492497926 ratio: 5.809817863793864
Epoch ended with duration 0:00:11.444024
Train perplexity: 1.0682111138282984
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print change time unit test[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.96709182858467 Loss (std): 44.30977013707116 Loss ratio: 0.4522923903324701 Tokens per Sec: 4418.803293004905
Mean loss per sample: 103.77160712319319 Std loss per sample: 52.952015048644014 ratio: 0.5102745974222184
Epoch ended with duration 0:00:01.033926
b'BLEU = 2.49, 8.1/2.7/1.7/1.3 (BP=0.955, ratio=0.956, hyp_len=2975, ref_len=3113)\n'
Validation perplexity: 1280692.480725403
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.49
Epoch 605 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.26912789452035213 Loss (std): 0.4907877678444441 Loss ratio: 1.823622812191731 Tokens per Sec: 2668.237992899994
Epoch Step: 10 / 67 Loss (mean): 0.16662832269958017 Loss (std): 0.37216002550201965 Loss ratio: 2.2334739945321274 Tokens per Sec: 2541.437412560825
Epoch Step: 15 / 67 Loss (mean): 0.8352832699737129 Loss (std): 4.999884300652908 Loss ratio: 5.985854715862151 Tokens per Sec: 2989.602239969248
Epoch Step: 20 / 67 Loss (mean): 0.1021240310928988 Loss (std): 0.15968553686551906 Loss ratio: 1.5636431029662203 Tokens per Sec: 2573.0341114605653
Epoch Step: 25 / 67 Loss (mean): 0.19263393925211858 Loss (std): 0.33512121781080023 Loss ratio: 1.7396789948431404 Tokens per Sec: 2344.7126287399346
Epoch Step: 30 / 67 Loss (mean): 0.2845192933600629 Loss (std): 0.6096908091417147 Loss ratio: 2.1428803718071343 Tokens per Sec: 3153.7870901649685
Epoch Step: 35 / 67 Loss (mean): 0.1800647735453822 Loss (std): 0.4275736067820807 Loss ratio: 2.37455443595867 Tokens per Sec: 2798.14725707364
Epoch Step: 40 / 67 Loss (mean): 0.1914711013014312 Loss (std): 0.2844130509856092 Loss ratio: 1.4854098036332928 Tokens per Sec: 2659.345199263247
Epoch Step: 45 / 67 Loss (mean): 0.37016092866906547 Loss (std): 0.9680625334012642 Loss ratio: 2.6152477434125414 Tokens per Sec: 3366.745662968768
Epoch Step: 50 / 67 Loss (mean): 0.2377022843429586 Loss (std): 0.6353801568430514 Loss ratio: 2.6730082068808403 Tokens per Sec: 2507.0403945439602
Epoch Step: 55 / 67 Loss (mean): 0.12340095504987403 Loss (std): 0.1648780072596949 Loss ratio: 1.3361161361600273 Tokens per Sec: 2562.1078340237036
Epoch Step: 60 / 67 Loss (mean): 0.15491741325240582 Loss (std): 0.3157370404296687 Loss ratio: 2.0380990993907226 Tokens per Sec: 2485.0526646585304
Epoch Step: 65 / 67 Loss (mean): 1.2291653379725176 Loss (std): 2.049602264087582 Loss ratio: 1.667474830903024 Tokens per Sec: 3515.49192228834
Mean loss per sample: 0.5927867627233294 Std loss per sample: 3.8341311006231935 ratio: 6.467976921429152
Epoch ended with duration 0:00:11.516129
Train perplexity: 1.0835079505308023
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print change time unit test[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 116.85512468218803 Loss (std): 44.66418524192866 Loss ratio: 0.3822184552316576 Tokens per Sec: 4303.271494923658
Mean loss per sample: 105.47140477145793 Std loss per sample: 53.03283498537958 ratio: 0.5028171863292659
Epoch ended with duration 0:00:01.034282
b'BLEU = 2.30, 8.1/2.6/1.5/1.1 (BP=0.946, ratio=0.947, hyp_len=2949, ref_len=3113)\n'
Validation perplexity: 1612448.7073727865
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.3
Model saved checkpoint_commit_msg_generator!
Epoch 606 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2754019091389637 Loss (std): 0.4708267837431597 Loss ratio: 1.7095988376231175 Tokens per Sec: 3302.3811192534185
Epoch Step: 10 / 67 Loss (mean): 0.2526976025365002 Loss (std): 0.6823402707540711 Loss ratio: 2.7002245526073496 Tokens per Sec: 2461.5558875815004
Epoch Step: 15 / 67 Loss (mean): 0.33379267355576303 Loss (std): 0.8302374680464151 Loss ratio: 2.4872848741771936 Tokens per Sec: 2242.0982042050996
Epoch Step: 20 / 67 Loss (mean): 0.33193410000239965 Loss (std): 0.646708110487375 Loss ratio: 1.948302721783329 Tokens per Sec: 3220.5677798339343
Epoch Step: 25 / 67 Loss (mean): 0.3758344480879714 Loss (std): 0.8574131006686233 Loss ratio: 2.28135846788565 Tokens per Sec: 3473.1396961245837
Epoch Step: 30 / 67 Loss (mean): 0.3144033254845908 Loss (std): 0.6661210971451111 Loss ratio: 2.1186833698988923 Tokens per Sec: 2929.411959442488
Epoch Step: 35 / 67 Loss (mean): 0.19785735278719585 Loss (std): 0.27869787788666034 Loss ratio: 1.408579837750139 Tokens per Sec: 2917.661140102568
Epoch Step: 40 / 67 Loss (mean): 0.17996116395806894 Loss (std): 0.41653926618165543 Loss ratio: 2.3146064240766377 Tokens per Sec: 3062.0073639282596
Epoch Step: 45 / 67 Loss (mean): 0.40031626155177946 Loss (std): 0.8740722843277096 Loss ratio: 2.1834543541635556 Tokens per Sec: 2731.0117770199736
Epoch Step: 50 / 67 Loss (mean): 0.3847756295799627 Loss (std): 1.3360197472918296 Loss ratio: 3.4722046943313045 Tokens per Sec: 2484.8681437559235
Epoch Step: 55 / 67 Loss (mean): 0.2163817798063974 Loss (std): 0.415695046708504 Loss ratio: 1.9211185298523634 Tokens per Sec: 2639.392187958823
Epoch Step: 60 / 67 Loss (mean): 0.38855422171764076 Loss (std): 1.2129531270015452 Loss ratio: 3.121708784013647 Tokens per Sec: 2576.747022225414
Epoch Step: 65 / 67 Loss (mean): 0.3035123029735587 Loss (std): 0.8113371867326533 Loss ratio: 2.673160787170249 Tokens per Sec: 2392.528530094353
Mean loss per sample: 0.4335327568455235 Std loss per sample: 2.3355157888538542 ratio: 5.387172599938154
Epoch ended with duration 0:00:11.432773
Train perplexity: 1.0604113069144185
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to method_4 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.70230773091316 Loss (std): 45.985814132697946 Loss ratio: 0.46590414337693725 Tokens per Sec: 4268.919704708675
Mean loss per sample: 104.94676564755987 Std loss per sample: 54.246069376026966 ratio: 0.5168912928503219
Epoch ended with duration 0:00:01.040323
b'BLEU = 2.73, 9.3/3.1/2.0/1.5 (BP=0.900, ratio=0.904, hyp_len=2815, ref_len=3113)\n'
Validation perplexity: 1501787.3438663566
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.73
Epoch 607 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.19528851481663878 Loss (std): 0.42595100852637435 Loss ratio: 2.1811370163079498 Tokens per Sec: 2571.193204615391
Epoch Step: 10 / 67 Loss (mean): 0.13397035480375052 Loss (std): 0.25464074028599176 Loss ratio: 1.90072453461072 Tokens per Sec: 2558.8016642984408
Epoch Step: 15 / 67 Loss (mean): 0.23731680167111335 Loss (std): 0.5015261491892625 Loss ratio: 2.113319182028692 Tokens per Sec: 2379.8639284100204
Epoch Step: 20 / 67 Loss (mean): 0.22744409268489107 Loss (std): 0.40474974727841495 Loss ratio: 1.7795570880760103 Tokens per Sec: 3113.691288592013
Epoch Step: 25 / 67 Loss (mean): 0.2755878310144908 Loss (std): 0.6625774452599167 Loss ratio: 2.4042333176354127 Tokens per Sec: 2318.019077507497
Epoch Step: 30 / 67 Loss (mean): 0.5109113330599939 Loss (std): 1.3491374055769323 Loss ratio: 2.6406488137512296 Tokens per Sec: 2653.482167542236
Epoch Step: 35 / 67 Loss (mean): 0.30697110640539904 Loss (std): 0.8269686460673705 Loss ratio: 2.6939624896658536 Tokens per Sec: 2942.5756581835776
Epoch Step: 40 / 67 Loss (mean): 0.2671560755024984 Loss (std): 0.6116121635563728 Loss ratio: 2.2893440188697975 Tokens per Sec: 2724.658629100503
Epoch Step: 45 / 67 Loss (mean): 0.46195352351787733 Loss (std): 0.9275226546250843 Loss ratio: 2.007826777814781 Tokens per Sec: 3160.8435916504295
Epoch Step: 50 / 67 Loss (mean): 0.14383916906808736 Loss (std): 0.31154542102297844 Loss ratio: 2.1659289541328346 Tokens per Sec: 3070.830394170902
Epoch Step: 55 / 67 Loss (mean): 0.20067188345637987 Loss (std): 0.4113916438640094 Loss ratio: 2.050071174786346 Tokens per Sec: 2676.333000047864
Epoch Step: 60 / 67 Loss (mean): 0.33522502209780214 Loss (std): 0.6381080585783677 Loss ratio: 1.9035215646647023 Tokens per Sec: 2654.787304341734
Epoch Step: 65 / 67 Loss (mean): 1.101075588929234 Loss (std): 1.4505604450655871 Loss ratio: 1.3174031462056275 Tokens per Sec: 3518.1238761743807
Mean loss per sample: 0.4665444064937244 Std loss per sample: 3.1723214600783884 ratio: 6.7996131041838135
Epoch ended with duration 0:00:11.451789
Train perplexity: 1.065158191794403
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 118.04825985431671 Loss (std): 46.03508869188704 Loss ratio: 0.3899683802937791 Tokens per Sec: 4314.005441553753
Mean loss per sample: 109.61324553326017 Std loss per sample: 53.3715941458561 ratio: 0.48690825535004756
Epoch ended with duration 0:00:01.065897
b'BLEU = 2.65, 8.2/2.9/1.9/1.4 (BP=0.926, ratio=0.928, hyp_len=2890, ref_len=3113)\n'
Validation perplexity: 2826523.6671307697
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.65
Epoch 608 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.656855830897257 Loss (std): 2.9938915483078943 Loss ratio: 4.557912722215277 Tokens per Sec: 2650.805837767381
Epoch Step: 10 / 67 Loss (mean): 0.5002861062584998 Loss (std): 1.2757382462466018 Loss ratio: 2.5500173406523166 Tokens per Sec: 2755.008297407711
Epoch Step: 15 / 67 Loss (mean): 0.05790226027047971 Loss (std): 0.07573351514224888 Loss ratio: 1.3079543836194607 Tokens per Sec: 2633.9931804160215
Epoch Step: 20 / 67 Loss (mean): 0.3122718798331334 Loss (std): 0.9212478715205988 Loss ratio: 2.9501467503666348 Tokens per Sec: 3103.3976559725347
Epoch Step: 25 / 67 Loss (mean): 0.14164148635290985 Loss (std): 0.2932249731770378 Loss ratio: 2.0701913028958683 Tokens per Sec: 2788.0011888051754
Epoch Step: 30 / 67 Loss (mean): 0.23234546353069163 Loss (std): 0.5470312199112005 Loss ratio: 2.3543873489010063 Tokens per Sec: 2573.201943771963
Epoch Step: 35 / 67 Loss (mean): 0.09935487750044558 Loss (std): 0.1290694674291405 Loss ratio: 1.299075301346546 Tokens per Sec: 2493.8172458585564
Epoch Step: 40 / 67 Loss (mean): 0.31174279149854556 Loss (std): 0.9989081491833747 Loss ratio: 3.204270239519027 Tokens per Sec: 2903.09622075672
Epoch Step: 45 / 67 Loss (mean): 0.2979051471220373 Loss (std): 0.6762532959995451 Loss ratio: 2.2700289086395573 Tokens per Sec: 2871.680071379155
Epoch Step: 50 / 67 Loss (mean): 13.141273541603368 Loss (std): 20.044616606298103 Loss ratio: 1.5253176598782265 Tokens per Sec: 2794.778163461427
Epoch Step: 55 / 67 Loss (mean): 4.452752484713983 Loss (std): 15.322259331212148 Loss ratio: 3.441075915136198 Tokens per Sec: 2615.0026559196654
Epoch Step: 60 / 67 Loss (mean): 0.3825619689141604 Loss (std): 0.9500080584054102 Loss ratio: 2.4832788818550178 Tokens per Sec: 3067.6554296355957
Epoch Step: 65 / 67 Loss (mean): 0.413717893869034 Loss (std): 1.1065479304552688 Loss ratio: 2.674643632420589 Tokens per Sec: 2644.017368783515
Mean loss per sample: 0.5948117452628069 Std loss per sample: 3.8547314537774255 ratio: 6.480590681803504
Epoch ended with duration 0:00:11.458178
Train perplexity: 1.0838048502322526
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to method_4 ( ) and hint[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.38789707422256 Loss (std): 45.05777337084405 Loss ratio: 0.46266296659536676 Tokens per Sec: 4431.751091499924
Mean loss per sample: 101.97662457292441 Std loss per sample: 52.202624295086075 ratio: 0.5119077486013033
Epoch ended with duration 0:00:01.019232
b'BLEU = 2.23, 8.7/2.4/1.4/1.1 (BP=0.941, ratio=0.943, hyp_len=2936, ref_len=3113)\n'
Validation perplexity: 1004157.263018199
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.23
Epoch 609 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.30469825230647984 Loss (std): 0.8000017153416287 Loss ratio: 2.6255540006739166 Tokens per Sec: 2442.89616547114
Epoch Step: 10 / 67 Loss (mean): 0.16666459089901764 Loss (std): 0.37592902342458473 Loss ratio: 2.255602233184377 Tokens per Sec: 2682.7622713518067
Epoch Step: 15 / 67 Loss (mean): 0.20798947007278912 Loss (std): 0.4704796954724187 Loss ratio: 2.262036127635534 Tokens per Sec: 2581.964864263895
Epoch Step: 20 / 67 Loss (mean): 0.2499159499398047 Loss (std): 0.7153725238765352 Loss ratio: 2.8624524527099666 Tokens per Sec: 2782.259578251241
Epoch Step: 25 / 67 Loss (mean): 0.7058638340749894 Loss (std): 1.3846939788083892 Loss ratio: 1.961701268663217 Tokens per Sec: 3273.0509024667963
Epoch Step: 30 / 67 Loss (mean): 0.48171585651289206 Loss (std): 1.5437252757253346 Loss ratio: 3.2046386990460634 Tokens per Sec: 2283.137131087027
Epoch Step: 35 / 67 Loss (mean): 0.15145133619716944 Loss (std): 0.2943816677788423 Loss ratio: 1.943737672908984 Tokens per Sec: 2442.217522528305
Epoch Step: 40 / 67 Loss (mean): 1.404061102974083 Loss (std): 2.3120133149385214 Loss ratio: 1.6466614665424557 Tokens per Sec: 2928.401254945479
Epoch Step: 45 / 67 Loss (mean): 0.5397670307620501 Loss (std): 2.650945485969322 Loss ratio: 4.91127715271287 Tokens per Sec: 3134.5579202203385
Epoch Step: 50 / 67 Loss (mean): 0.1263532021011997 Loss (std): 0.3124936526001195 Loss ratio: 2.473175569779663 Tokens per Sec: 3172.553974449352
Epoch Step: 55 / 67 Loss (mean): 0.41957651671327767 Loss (std): 0.7122716708698025 Loss ratio: 1.697596606333765 Tokens per Sec: 2948.0834199314527
Epoch Step: 60 / 67 Loss (mean): 0.9219996890824405 Loss (std): 4.524044329906538 Loss ratio: 4.906774246755761 Tokens per Sec: 2498.880070867181
Epoch Step: 65 / 67 Loss (mean): 0.11759411001003173 Loss (std): 0.16680322263726496 Loss ratio: 1.4184657941034233 Tokens per Sec: 2777.9723192987535
Mean loss per sample: 0.49594744940847685 Std loss per sample: 3.1367637210837174 ratio: 6.324790509206121
Epoch ended with duration 0:00:11.494303
Train perplexity: 1.0694040688694424
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use it[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.40853467583656 Loss (std): 46.4585738133343 Loss ratio: 0.47209903049945356 Tokens per Sec: 4290.028291654927
Mean loss per sample: 103.75277120595584 Std loss per sample: 54.50211793371022 ratio: 0.5253075874524841
Epoch ended with duration 0:00:01.033791
b'BLEU = 2.81, 9.1/3.1/2.1/1.7 (BP=0.878, ratio=0.885, hyp_len=2755, ref_len=3113)\n'
Validation perplexity: 1277427.5485726714
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.81
Epoch 610 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.30093254674284253 Loss (std): 0.7679288103139074 Loss ratio: 2.551830364065372 Tokens per Sec: 2777.1598327842585
Epoch Step: 10 / 67 Loss (mean): 0.1814544350631877 Loss (std): 0.3557017479579896 Loss ratio: 1.9602813666919958 Tokens per Sec: 2891.073793980931
Epoch Step: 15 / 67 Loss (mean): 0.1424986651772997 Loss (std): 0.22591103426416342 Loss ratio: 1.5853554416322453 Tokens per Sec: 2914.477210069066
Epoch Step: 20 / 67 Loss (mean): 0.21448636022432765 Loss (std): 0.5057821692124926 Loss ratio: 2.3581087798939926 Tokens per Sec: 2695.520652025781
Epoch Step: 25 / 67 Loss (mean): 0.23188187530831783 Loss (std): 0.5254647797896145 Loss ratio: 2.2660881929255536 Tokens per Sec: 2848.363131819902
Epoch Step: 30 / 67 Loss (mean): 0.2632244946648825 Loss (std): 0.8784069902042693 Loss ratio: 3.337102009912073 Tokens per Sec: 2592.514876045527
Epoch Step: 35 / 67 Loss (mean): 0.2943796476756688 Loss (std): 0.6701569642549234 Loss ratio: 2.276505762359174 Tokens per Sec: 2995.777381268296
Epoch Step: 40 / 67 Loss (mean): 0.24176632281660204 Loss (std): 0.6832282436578374 Loss ratio: 2.825986000441085 Tokens per Sec: 2810.5948781152897
Epoch Step: 45 / 67 Loss (mean): 0.35178831127268495 Loss (std): 1.3984478698815683 Loss ratio: 3.975253938433379 Tokens per Sec: 2608.90090727364
Epoch Step: 50 / 67 Loss (mean): 3.9142042324428985 Loss (std): 14.73829510558127 Loss ratio: 3.7653362549206935 Tokens per Sec: 2466.475896246602
Epoch Step: 55 / 67 Loss (mean): 0.11612835873120275 Loss (std): 0.23109135628459485 Loss ratio: 1.989964887211503 Tokens per Sec: 2576.3074047783016
Epoch Step: 60 / 67 Loss (mean): 0.08388905377415497 Loss (std): 0.14048840052789055 Loss ratio: 1.6746928735912507 Tokens per Sec: 2654.143903403137
Epoch Step: 65 / 67 Loss (mean): 0.2765412336211739 Loss (std): 0.737365672456565 Loss ratio: 2.666385995321991 Tokens per Sec: 3072.7463514970286
Mean loss per sample: 0.43814838154101204 Std loss per sample: 2.9605591337073047 ratio: 6.75697836266043
Epoch ended with duration 0:00:11.426882
Train perplexity: 1.061073732857174
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.14734518527985 Loss (std): 45.81621285887577 Loss ratio: 0.46210226580709285 Tokens per Sec: 4402.283758830167
Mean loss per sample: 103.36895471423497 Std loss per sample: 53.429288781283034 ratio: 0.516879453110357
Epoch ended with duration 0:00:01.022716
b'BLEU = 2.85, 8.8/3.0/2.0/1.6 (BP=0.948, ratio=0.949, hyp_len=2954, ref_len=3113)\n'
Validation perplexity: 1212681.8580589881
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.85
Model saved checkpoint_commit_msg_generator!
Epoch 611 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.09539304985628405 Loss (std): 0.11173456260703607 Loss ratio: 1.171307163104352 Tokens per Sec: 2987.0436101845985
Epoch Step: 10 / 67 Loss (mean): 0.23104663400317804 Loss (std): 0.5615721223764574 Loss ratio: 2.430557470786322 Tokens per Sec: 2871.1644629875404
Epoch Step: 15 / 67 Loss (mean): 4.943829120251394 Loss (std): 14.309639885789545 Loss ratio: 2.8944446779466966 Tokens per Sec: 2910.243989445062
Epoch Step: 20 / 67 Loss (mean): 0.26674087419814896 Loss (std): 0.9415733425899082 Loss ratio: 3.5299177354066056 Tokens per Sec: 2891.2730179599407
Epoch Step: 25 / 67 Loss (mean): 0.1106873758662914 Loss (std): 0.2580860014397353 Loss ratio: 2.3316660948896204 Tokens per Sec: 2810.103471961157
Epoch Step: 30 / 67 Loss (mean): 0.11587789520126535 Loss (std): 0.2309141701296799 Loss ratio: 1.9927370075941664 Tokens per Sec: 2332.1361995493853
Epoch Step: 35 / 67 Loss (mean): 0.39429675985957147 Loss (std): 0.7564498408747667 Loss ratio: 1.9184784605995135 Tokens per Sec: 2843.0785301100627
Epoch Step: 40 / 67 Loss (mean): 0.24595191837761377 Loss (std): 0.4989776313104573 Loss ratio: 2.0287608838422204 Tokens per Sec: 2767.105354745236
Epoch Step: 45 / 67 Loss (mean): 0.2300398588704411 Loss (std): 0.605504041554567 Loss ratio: 2.632170114030491 Tokens per Sec: 2530.4885262870985
Epoch Step: 50 / 67 Loss (mean): 0.3318580734985517 Loss (std): 0.6360609258633655 Loss ratio: 1.916665516549928 Tokens per Sec: 3245.785991998352
Epoch Step: 55 / 67 Loss (mean): 0.4648468369523471 Loss (std): 1.0316044590426774 Loss ratio: 2.219235191113994 Tokens per Sec: 2422.6908992321814
Epoch Step: 60 / 67 Loss (mean): 0.45373319907048426 Loss (std): 0.8915507255340777 Loss ratio: 1.964922838708969 Tokens per Sec: 2915.886807505138
Epoch Step: 65 / 67 Loss (mean): 0.14129663434687245 Loss (std): 0.31414068209948454 Loss ratio: 2.2232708057878656 Tokens per Sec: 2849.103202946373
Mean loss per sample: 0.467445173016191 Std loss per sample: 3.013740812699748 ratio: 6.447260527376032
Epoch ended with duration 0:00:11.416188
Train perplexity: 1.065288014212418
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print change time not 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.50780141353607 Loss (std): 46.460672577083756 Loss ratio: 0.4669048247182326 Tokens per Sec: 4382.753199412911
Mean loss per sample: 107.02398371702579 Std loss per sample: 54.38888742271439 ratio: 0.508193449110622
Epoch ended with duration 0:00:01.061723
b'BLEU = 2.79, 8.4/2.9/2.0/1.6 (BP=0.930, ratio=0.933, hyp_len=2903, ref_len=3113)\n'
Validation perplexity: 1990042.9396948726
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.79
Epoch 612 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2367150825855333 Loss (std): 0.5135585863394216 Loss ratio: 2.169522029310723 Tokens per Sec: 2762.929391215049
Epoch Step: 10 / 67 Loss (mean): 0.14394739737736018 Loss (std): 0.4068315351249017 Loss ratio: 2.8262514122321156 Tokens per Sec: 2887.922519630824
Epoch Step: 15 / 67 Loss (mean): 0.1644434752338384 Loss (std): 0.7555151630717826 Loss ratio: 4.594376043181045 Tokens per Sec: 2381.907402732909
Epoch Step: 20 / 67 Loss (mean): 0.13466948776385834 Loss (std): 0.34715329871741574 Loss ratio: 2.5778170280572072 Tokens per Sec: 3163.6420723394795
Epoch Step: 25 / 67 Loss (mean): 0.32471271187023376 Loss (std): 0.7394504210598449 Loss ratio: 2.277245066264466 Tokens per Sec: 2423.4461962104747
Epoch Step: 30 / 67 Loss (mean): 0.2575065865785291 Loss (std): 0.6495382912149757 Loss ratio: 2.5224142801368417 Tokens per Sec: 2928.526911324654
Epoch Step: 35 / 67 Loss (mean): 0.1683625155064874 Loss (std): 0.3871961440212002 Loss ratio: 2.2997764250337576 Tokens per Sec: 2742.1657383644488
Epoch Step: 40 / 67 Loss (mean): 0.608467780497449 Loss (std): 1.5136552923516837 Loss ratio: 2.4876506872955613 Tokens per Sec: 2368.7488482296644
Epoch Step: 45 / 67 Loss (mean): 0.6298634366430633 Loss (std): 0.9324841432714954 Loss ratio: 1.4804544747688282 Tokens per Sec: 3034.0960596891614
Epoch Step: 50 / 67 Loss (mean): 0.24006249448939343 Loss (std): 0.4530356357585502 Loss ratio: 1.8871570785021834 Tokens per Sec: 3337.3374153903615
Epoch Step: 55 / 67 Loss (mean): 0.12629709244902187 Loss (std): 0.215258835722409 Loss ratio: 1.7043847292786676 Tokens per Sec: 2777.5290379038593
Epoch Step: 60 / 67 Loss (mean): 0.3131884889135108 Loss (std): 0.859187730859802 Loss ratio: 2.743356672655593 Tokens per Sec: 2756.5842565821563
Epoch Step: 65 / 67 Loss (mean): 0.22031625947420252 Loss (std): 0.4808745348475839 Loss ratio: 2.182655678683084 Tokens per Sec: 2571.1743489354867
Mean loss per sample: 0.5635137811040676 Std loss per sample: 3.8515784888706843 ratio: 6.834932202233737
Epoch ended with duration 0:00:11.495834
Train perplexity: 1.0792250677557995
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the time not 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone for method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.1734327673912 Loss (std): 45.41024143366088 Loss ratio: 0.4625512234175855 Tokens per Sec: 4269.43714311688
Mean loss per sample: 106.78157809914136 Std loss per sample: 52.75188477331451 ratio: 0.4940167181677819
Epoch ended with duration 0:00:01.058161
b'BLEU = 2.76, 8.7/2.9/2.0/1.6 (BP=0.934, ratio=0.936, hyp_len=2914, ref_len=3113)\n'
Validation perplexity: 1925731.5338231137
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.76
Epoch 613 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.08482586489253663 Loss (std): 0.12497606749972844 Loss ratio: 1.473325001260605 Tokens per Sec: 2567.358121805082
Epoch Step: 10 / 67 Loss (mean): 0.10544372123422363 Loss (std): 0.14584045992779776 Loss ratio: 1.3831118460229632 Tokens per Sec: 2625.506958983866
Epoch Step: 15 / 67 Loss (mean): 0.15671558044959966 Loss (std): 0.2997213702073269 Loss ratio: 1.912518010956278 Tokens per Sec: 2319.9332574336377
Epoch Step: 20 / 67 Loss (mean): 0.5598393573945941 Loss (std): 1.3056775800879725 Loss ratio: 2.332236136745359 Tokens per Sec: 2913.121898974473
Epoch Step: 25 / 67 Loss (mean): 0.18920748162054224 Loss (std): 0.3240380330172507 Loss ratio: 1.7126068707320605 Tokens per Sec: 3254.312194251442
Epoch Step: 30 / 67 Loss (mean): 0.39877314080513315 Loss (std): 0.9304147427068075 Loss ratio: 2.333193105303623 Tokens per Sec: 2763.848616635748
Epoch Step: 35 / 67 Loss (mean): 0.2894117723863019 Loss (std): 0.7962707398083092 Loss ratio: 2.7513419141273237 Tokens per Sec: 3124.5580679347986
Epoch Step: 40 / 67 Loss (mean): 0.09414839927558205 Loss (std): 0.14242964123823465 Loss ratio: 1.5128206356576328 Tokens per Sec: 2866.1477757129983
Epoch Step: 45 / 67 Loss (mean): 0.23580149694680586 Loss (std): 0.5753183922578265 Loss ratio: 2.439841984496018 Tokens per Sec: 2456.904682444802
Epoch Step: 50 / 67 Loss (mean): 2.1179419933841928 Loss (std): 8.444789470721611 Loss ratio: 3.9872619255393054 Tokens per Sec: 2499.8664877798456
Epoch Step: 55 / 67 Loss (mean): 0.34068890240632754 Loss (std): 0.8091074229618838 Loss ratio: 2.374915699475559 Tokens per Sec: 3264.0813127579427
Epoch Step: 60 / 67 Loss (mean): 0.17772663966024993 Loss (std): 0.3898738146172176 Loss ratio: 2.193671220940865 Tokens per Sec: 2772.1740521374395
Epoch Step: 65 / 67 Loss (mean): 0.30395037809466885 Loss (std): 1.19983358153651 Loss ratio: 3.9474653364728107 Tokens per Sec: 2624.046864935055
Mean loss per sample: 0.5406060630033815 Std loss per sample: 3.3899743016886417 ratio: 6.270692346392417
Epoch ended with duration 0:00:11.510616
Train perplexity: 1.0758852875927722
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print during method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.20398679375648 Loss (std): 45.50899190417061 Loss ratio: 0.4587415624614269 Tokens per Sec: 4162.702369350332
Mean loss per sample: 108.57100767712491 Std loss per sample: 54.08849592572988 ratio: 0.498185446400033
Epoch ended with duration 0:00:01.071512
b'BLEU = 2.53, 8.5/2.7/1.7/1.3 (BP=0.951, ratio=0.952, hyp_len=2964, ref_len=3113)\n'
Validation perplexity: 2454211.8540313025
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.53
Epoch 614 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.11474055831149599 Loss (std): 0.20392303680308002 Loss ratio: 1.7772533078449273 Tokens per Sec: 3037.7200681364534
Epoch Step: 10 / 67 Loss (mean): 0.37763732121948124 Loss (std): 0.9503659827940474 Loss ratio: 2.5166103279333947 Tokens per Sec: 2509.7547405325513
Epoch Step: 15 / 67 Loss (mean): 0.09926269629659146 Loss (std): 0.2035944764964822 Loss ratio: 2.051067360573736 Tokens per Sec: 3035.286522740037
Epoch Step: 20 / 67 Loss (mean): 0.11967819177516503 Loss (std): 0.22417850280183868 Loss ratio: 1.8731775562167123 Tokens per Sec: 2425.6962374089208
Epoch Step: 25 / 67 Loss (mean): 0.18275242764684663 Loss (std): 0.5592776728184482 Loss ratio: 3.0603022899329373 Tokens per Sec: 2429.151750459432
Epoch Step: 30 / 67 Loss (mean): 0.5217986907482555 Loss (std): 1.0957268026447442 Loss ratio: 2.0999033191775167 Tokens per Sec: 3001.605273086779
Epoch Step: 35 / 67 Loss (mean): 0.1441206905983563 Loss (std): 0.24192131844912917 Loss ratio: 1.6786022703938408 Tokens per Sec: 2327.834441896887
Epoch Step: 40 / 67 Loss (mean): 0.1612904087910465 Loss (std): 0.45101604060778505 Loss ratio: 2.7962979571344584 Tokens per Sec: 3353.1152965394062
Epoch Step: 45 / 67 Loss (mean): 0.1285030273047596 Loss (std): 0.24472082930645042 Loss ratio: 1.9043973861103447 Tokens per Sec: 2487.988170794039
Epoch Step: 50 / 67 Loss (mean): 0.35815765999723226 Loss (std): 0.623311777456636 Loss ratio: 1.74032792558856 Tokens per Sec: 3550.9758825229023
Epoch Step: 55 / 67 Loss (mean): 0.18239886346327694 Loss (std): 0.3473197529415734 Loss ratio: 1.9041771771319214 Tokens per Sec: 2788.1509677076706
Epoch Step: 60 / 67 Loss (mean): 0.16745416040612326 Loss (std): 0.371014572566401 Loss ratio: 2.215618720171459 Tokens per Sec: 2992.5594139493983
Epoch Step: 65 / 67 Loss (mean): 0.3145073838539929 Loss (std): 0.6386592884987201 Loss ratio: 2.030665482865775 Tokens per Sec: 2428.595757193446
Mean loss per sample: 0.3702893193190307 Std loss per sample: 1.9414948923595832 ratio: 5.243183616340947
Epoch ended with duration 0:00:11.434637
Train perplexity: 1.0513762699641103
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the command 0 length broken[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.72326356172562 Loss (std): 46.567239503593065 Loss ratio: 0.4669646563940357 Tokens per Sec: 4422.241337465834
Mean loss per sample: 105.27509085113397 Std loss per sample: 54.04283638709645 ratio: 0.513348750878939
Epoch ended with duration 0:00:01.035915
b'BLEU = 2.34, 8.6/2.6/1.6/1.2 (BP=0.908, ratio=0.912, hyp_len=2838, ref_len=3113)\n'
Validation perplexity: 1570116.6363701539
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.34
Epoch 615 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.14307904618817702 Loss (std): 0.3601942183669927 Loss ratio: 2.5174491161568597 Tokens per Sec: 2550.6320060532503
Epoch Step: 10 / 67 Loss (mean): 0.3092724242658278 Loss (std): 0.991478827812373 Loss ratio: 3.2058429721499215 Tokens per Sec: 3061.3453695215176
Epoch Step: 15 / 67 Loss (mean): 0.11172612861264497 Loss (std): 0.28521612786396133 Loss ratio: 2.552814918100376 Tokens per Sec: 3041.2917664723327
Epoch Step: 20 / 67 Loss (mean): 0.19444588751684933 Loss (std): 0.41158976805330216 Loss ratio: 2.116731669203529 Tokens per Sec: 2395.8539736555717
Epoch Step: 25 / 67 Loss (mean): 0.6391131499731273 Loss (std): 0.9358315066108592 Loss ratio: 1.4642657667898211 Tokens per Sec: 2513.749427120017
Epoch Step: 30 / 67 Loss (mean): 0.2682926361030695 Loss (std): 0.6710689309234822 Loss ratio: 2.5012573608829083 Tokens per Sec: 2745.697172430339
Epoch Step: 35 / 67 Loss (mean): 0.5643206473159808 Loss (std): 1.1802354048456432 Loss ratio: 2.0914269404443613 Tokens per Sec: 2724.1281342866755
Epoch Step: 40 / 67 Loss (mean): 0.23422915698574798 Loss (std): 0.8643880676974849 Loss ratio: 3.6903521270414674 Tokens per Sec: 2876.7652116592176
Epoch Step: 45 / 67 Loss (mean): 0.1306944171719806 Loss (std): 0.4100410770424056 Loss ratio: 3.1374031570364105 Tokens per Sec: 3010.938865595861
Epoch Step: 50 / 67 Loss (mean): 1.8785345386058907 Loss (std): 7.148404364776311 Loss ratio: 3.805308988399717 Tokens per Sec: 3174.0855841596867
Epoch Step: 55 / 67 Loss (mean): 0.1340569967655938 Loss (std): 0.28801824866738424 Loss ratio: 2.148476063289709 Tokens per Sec: 2249.672994321704
Epoch Step: 60 / 67 Loss (mean): 0.3468904307651428 Loss (std): 0.9945911714464685 Loss ratio: 2.86716231765944 Tokens per Sec: 2795.3386670619366
Epoch Step: 65 / 67 Loss (mean): 0.1098118002200863 Loss (std): 0.19519678894093545 Loss ratio: 1.7775574988272609 Tokens per Sec: 3240.7603339283346
Mean loss per sample: 0.38455762341761807 Std loss per sample: 2.25988698702022 ratio: 5.876588707139087
Epoch ended with duration 0:00:11.462749
Train perplexity: 1.053407909601773
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.66626513004303 Loss (std): 45.48812167408334 Loss ratio: 0.46103013643142954 Tokens per Sec: 4391.875801518105
Mean loss per sample: 103.7608102134383 Std loss per sample: 53.80973102317301 ratio: 0.5185939750517097
Epoch ended with duration 0:00:01.024666
b'BLEU = 2.24, 8.3/2.5/1.5/1.1 (BP=0.929, ratio=0.932, hyp_len=2900, ref_len=3113)\n'
Validation perplexity: 1278819.9741730348
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.24
Model saved checkpoint_commit_msg_generator!
Epoch 616 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.23983663985609383 Loss (std): 0.6637571958533783 Loss ratio: 2.7675387557616062 Tokens per Sec: 2783.011060196321
Epoch Step: 10 / 67 Loss (mean): 1.1517881938698338 Loss (std): 5.879206149266037 Loss ratio: 5.104416055449218 Tokens per Sec: 2705.4415172708295
Epoch Step: 15 / 67 Loss (mean): 0.32337601410836214 Loss (std): 0.6597479411481546 Loss ratio: 2.0401882402047153 Tokens per Sec: 2742.7128928546745
Epoch Step: 20 / 67 Loss (mean): 0.2097194595480687 Loss (std): 0.4420514561823701 Loss ratio: 2.1078227892393064 Tokens per Sec: 2881.721883165977
Epoch Step: 25 / 67 Loss (mean): 0.20423031390237156 Loss (std): 0.4982615780910473 Loss ratio: 2.4397043150471376 Tokens per Sec: 3557.096016346428
Epoch Step: 30 / 67 Loss (mean): 3.46799649244349 Loss (std): 14.93210813178026 Loss ratio: 4.305687207099612 Tokens per Sec: 2749.019811867978
Epoch Step: 35 / 67 Loss (mean): 0.13231000767746082 Loss (std): 0.2519975827133809 Loss ratio: 1.9045995623225183 Tokens per Sec: 3233.914599673567
Epoch Step: 40 / 67 Loss (mean): 0.30724322583591857 Loss (std): 0.5987650433929588 Loss ratio: 1.9488307407393441 Tokens per Sec: 2530.9531413690393
Epoch Step: 45 / 67 Loss (mean): 0.4057611157732026 Loss (std): 1.110286906083021 Loss ratio: 2.736306814336562 Tokens per Sec: 2304.9682340370146
Epoch Step: 50 / 67 Loss (mean): 0.47707099424951593 Loss (std): 1.0447330611671477 Loss ratio: 2.1898901290585173 Tokens per Sec: 3442.911865030035
Epoch Step: 55 / 67 Loss (mean): 0.18777024470909964 Loss (std): 0.43212211108139986 Loss ratio: 2.301334334153203 Tokens per Sec: 2365.5248679062656
Epoch Step: 60 / 67 Loss (mean): 0.4715005153702805 Loss (std): 0.944484589439475 Loss ratio: 2.0031464625181776 Tokens per Sec: 2592.445257386141
Epoch Step: 65 / 67 Loss (mean): 0.2197675444649576 Loss (std): 0.6237994125697225 Loss ratio: 2.838451028282698 Tokens per Sec: 2409.3100329827544
Mean loss per sample: 0.4001786428577557 Std loss per sample: 2.607416726556106 ratio: 6.515631888638589
Epoch ended with duration 0:00:11.454775
Train perplexity: 1.055636662156303
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the command use broken[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.75875923037529 Loss (std): 45.49934302684346 Loss ratio: 0.4560937142549131 Tokens per Sec: 4390.349198881194
Mean loss per sample: 103.67861599713319 Std loss per sample: 53.0387414200091 ratio: 0.5115687638179475
Epoch ended with duration 0:00:01.023767
b'BLEU = 2.38, 7.8/2.5/1.6/1.2 (BP=0.965, ratio=0.966, hyp_len=3006, ref_len=3113)\n'
Validation perplexity: 1264654.508417093
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.38
Epoch 617 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.12566202462630827 Loss (std): 0.1842145249461317 Loss ratio: 1.4659522277628896 Tokens per Sec: 2821.660090347316
Epoch Step: 10 / 67 Loss (mean): 0.33050957457817276 Loss (std): 0.7672106073564346 Loss ratio: 2.3212961631614473 Tokens per Sec: 2864.2451509262796
Epoch Step: 15 / 67 Loss (mean): 0.2603775703610154 Loss (std): 0.5409360837805751 Loss ratio: 2.0775064573748168 Tokens per Sec: 2886.29148198408
Epoch Step: 20 / 67 Loss (mean): 0.3116216067901405 Loss (std): 0.6985735651200569 Loss ratio: 2.2417366122834563 Tokens per Sec: 3372.1974634352673
Epoch Step: 25 / 67 Loss (mean): 0.17000138441835588 Loss (std): 0.4811922943316795 Loss ratio: 2.8305198571060743 Tokens per Sec: 2438.993900573536
Epoch Step: 30 / 67 Loss (mean): 0.6841565697486658 Loss (std): 2.2129185462655085 Loss ratio: 3.234520640616598 Tokens per Sec: 2873.425312717351
Epoch Step: 35 / 67 Loss (mean): 0.16075105665549927 Loss (std): 0.609463279597939 Loss ratio: 3.791348512900051 Tokens per Sec: 2215.682682830453
Epoch Step: 40 / 67 Loss (mean): 0.9663385430976632 Loss (std): 1.7155162700928277 Loss ratio: 1.7752745995141876 Tokens per Sec: 3843.834716105853
Epoch Step: 45 / 67 Loss (mean): 0.29111292863672134 Loss (std): 0.7993489663742086 Loss ratio: 2.7458380846139367 Tokens per Sec: 2597.063173187075
Epoch Step: 50 / 67 Loss (mean): 0.30305201622104505 Loss (std): 0.6692067473812373 Loss ratio: 2.208224039311853 Tokens per Sec: 2593.6253510866654
Epoch Step: 55 / 67 Loss (mean): 0.3236394030709562 Loss (std): 0.9030105538720773 Loss ratio: 2.790174945644975 Tokens per Sec: 2463.519867448581
Epoch Step: 60 / 67 Loss (mean): 0.19515744855380035 Loss (std): 0.43635430096571104 Loss ratio: 2.2359090272970974 Tokens per Sec: 2938.4792378209
Epoch Step: 65 / 67 Loss (mean): 0.15219294597045518 Loss (std): 0.3970974007870316 Loss ratio: 2.6091708669869567 Tokens per Sec: 2301.910038757864
Mean loss per sample: 0.6115803804538661 Std loss per sample: 3.9274966194389336 ratio: 6.421881317586185
Epoch ended with duration 0:00:11.485730
Train perplexity: 1.0862665690310402
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the command 0 length broken[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for zoneinfo provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.55631065368652 Loss (std): 45.11553358925854 Loss ratio: 0.45776402637258196 Tokens per Sec: 4411.736965011433
Mean loss per sample: 102.92762944709938 Std loss per sample: 52.84895202765412 ratio: 0.5134573905135582
Epoch ended with duration 0:00:01.021610
b'BLEU = 2.51, 8.5/2.6/1.7/1.3 (BP=0.949, ratio=0.950, hyp_len=2957, ref_len=3113)\n'
Validation perplexity: 1142280.656768808
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.51
Epoch 618 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1732736223111715 Loss (std): 0.4188087510934294 Loss ratio: 2.4170369702395695 Tokens per Sec: 2630.1049273006806
Epoch Step: 10 / 67 Loss (mean): 0.2663897476886632 Loss (std): 0.6873393427198002 Loss ratio: 2.5802019360111115 Tokens per Sec: 2753.826443754677
Epoch Step: 15 / 67 Loss (mean): 0.7126665064324698 Loss (std): 3.6672085301558126 Loss ratio: 5.145756811995355 Tokens per Sec: 2822.4534520084567
Epoch Step: 20 / 67 Loss (mean): 4.787397842247628 Loss (std): 14.104215569883063 Loss ratio: 2.946113115023943 Tokens per Sec: 2832.344462817058
Epoch Step: 25 / 67 Loss (mean): 0.5598452680897026 Loss (std): 0.7678359687880835 Loss ratio: 1.3715146176158357 Tokens per Sec: 3062.0244694658413
Epoch Step: 30 / 67 Loss (mean): 0.4214538256774176 Loss (std): 1.309018562715703 Loss ratio: 3.1059596163628864 Tokens per Sec: 2461.371840627382
Epoch Step: 35 / 67 Loss (mean): 0.4998663532169303 Loss (std): 1.3579980262457167 Loss ratio: 2.7167222148604537 Tokens per Sec: 2116.2884474790108
Epoch Step: 40 / 67 Loss (mean): 0.4034512165844717 Loss (std): 0.7363679974486337 Loss ratio: 1.8251723310752697 Tokens per Sec: 3081.1691029556973
Epoch Step: 45 / 67 Loss (mean): 0.6311349652023637 Loss (std): 1.2802868276218307 Loss ratio: 2.028546821536542 Tokens per Sec: 2461.4962010345757
Epoch Step: 50 / 67 Loss (mean): 1.3540626045069075 Loss (std): 1.9100538785064802 Loss ratio: 1.4106097252438643 Tokens per Sec: 3589.385581715647
Epoch Step: 55 / 67 Loss (mean): 0.4612204073000612 Loss (std): 1.008456095101736 Loss ratio: 2.1864949580291526 Tokens per Sec: 2672.33439290811
Epoch Step: 60 / 67 Loss (mean): 0.4656908720899082 Loss (std): 0.7774718715894289 Loss ratio: 1.6695020628176 Tokens per Sec: 3060.3063178755006
Epoch Step: 65 / 67 Loss (mean): 0.7378930185514037 Loss (std): 1.2002815792189865 Loss ratio: 1.6266336027617148 Tokens per Sec: 2882.3885051457387
Mean loss per sample: 0.9270924868492072 Std loss per sample: 5.531799531881901 ratio: 5.9668259751323545
Epoch ended with duration 0:00:11.553947
Train perplexity: 1.1336418753280761
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the daemon not used command[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.5769815146923 Loss (std): 44.10947533866216 Loss ratio: 0.4520479589955396 Tokens per Sec: 4387.95541955588
Mean loss per sample: 104.15251767061284 Std loss per sample: 51.98952186744359 ratio: 0.49916721199062
Epoch ended with duration 0:00:01.040614
b'BLEU = 2.01, 7.8/2.2/1.2/0.9 (BP=0.964, ratio=0.964, hyp_len=3002, ref_len=3113)\n'
Validation perplexity: 1348538.1233620886
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.01
Epoch 619 / 1000
Epoch Step: 5 / 67 Loss (mean): 4.156125470701227 Loss (std): 11.52079699497042 Loss ratio: 2.7720041361086762 Tokens per Sec: 2763.1847867810893
Epoch Step: 10 / 67 Loss (mean): 0.4244163172079425 Loss (std): 0.8092909919048663 Loss ratio: 1.9068328881152672 Tokens per Sec: 2683.601095294011
Epoch Step: 15 / 67 Loss (mean): 1.099501491553383 Loss (std): 1.5547133673806006 Loss ratio: 1.414016606002136 Tokens per Sec: 2861.2852701616416
Epoch Step: 20 / 67 Loss (mean): 0.2911496016968158 Loss (std): 0.6282979566282607 Loss ratio: 2.1579900950114617 Tokens per Sec: 2463.169262995403
Epoch Step: 25 / 67 Loss (mean): 0.3650862854774459 Loss (std): 0.8205757951513815 Loss ratio: 2.247621528916825 Tokens per Sec: 3290.0560368606157
Epoch Step: 30 / 67 Loss (mean): 0.5456383181299316 Loss (std): 1.1725834429547364 Loss ratio: 2.1490122742360476 Tokens per Sec: 2524.0700687976882
Epoch Step: 35 / 67 Loss (mean): 0.5795460618683137 Loss (std): 1.120409795758331 Loss ratio: 1.933254092256974 Tokens per Sec: 3008.4620357518793
Epoch Step: 40 / 67 Loss (mean): 0.3284780790527293 Loss (std): 0.9374694826851717 Loss ratio: 2.8539788268022703 Tokens per Sec: 2284.943991167257
Epoch Step: 45 / 67 Loss (mean): 0.39831743792819907 Loss (std): 0.7535440810602765 Loss ratio: 1.8918179554973709 Tokens per Sec: 2970.965491970961
Epoch Step: 50 / 67 Loss (mean): 0.4401810438466782 Loss (std): 1.37060171734182 Loss ratio: 3.113722720461405 Tokens per Sec: 2914.6317171427795
Epoch Step: 55 / 67 Loss (mean): 0.3992121029896225 Loss (std): 0.7943712011160166 Loss ratio: 1.989847490011259 Tokens per Sec: 2724.164906143173
Epoch Step: 60 / 67 Loss (mean): 0.40280896287731593 Loss (std): 0.894916331510831 Loss ratio: 2.221689222400438 Tokens per Sec: 2964.3078964144206
Epoch Step: 65 / 67 Loss (mean): 3.416771182546654 Loss (std): 11.146454864699106 Loss ratio: 3.262277240465138 Tokens per Sec: 2434.4577141067375
Mean loss per sample: 0.7791376099249427 Std loss per sample: 4.169409256667255 ratio: 5.351313046059874
Epoch ended with duration 0:00:11.498047
Train perplexity: 1.1111739801853242
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to start[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 96.42280793190002 Loss (std): 44.65086998275302 Loss ratio: 0.46307373681015734 Tokens per Sec: 4265.443004780355
Mean loss per sample: 104.56289477035648 Std loss per sample: 53.60819547328738 ratio: 0.5126885171936276
Epoch ended with duration 0:00:01.039566
b'BLEU = 2.35, 8.1/2.5/1.6/1.2 (BP=0.948, ratio=0.949, hyp_len=2954, ref_len=3113)\n'
Validation perplexity: 1425659.596980185
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.35
Epoch 620 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.4014929707918782 Loss (std): 0.7571609539110602 Loss ratio: 1.885863536832752 Tokens per Sec: 3016.5904078456733
Epoch Step: 10 / 67 Loss (mean): 0.623252630346542 Loss (std): 1.1572884112334123 Loss ratio: 1.8568528312346388 Tokens per Sec: 2678.3036627978677
Epoch Step: 15 / 67 Loss (mean): 0.3184475351808942 Loss (std): 0.4675008032655633 Loss ratio: 1.468062244538961 Tokens per Sec: 2835.060046551928
Epoch Step: 20 / 67 Loss (mean): 8.643649175435712 Loss (std): 20.328226085372478 Loss ratio: 2.351810638398309 Tokens per Sec: 2560.9873196644153
Epoch Step: 25 / 67 Loss (mean): 0.20766558811192226 Loss (std): 0.30515038006125134 Loss ratio: 1.4694316127946496 Tokens per Sec: 2799.8505948734687
Epoch Step: 30 / 67 Loss (mean): 0.28405153908443026 Loss (std): 0.6757484097739427 Loss ratio: 2.378964085010946 Tokens per Sec: 3062.513291538385
Epoch Step: 35 / 67 Loss (mean): 2.1658515886974783 Loss (std): 9.000546148804409 Loss ratio: 4.155661540141469 Tokens per Sec: 2593.5317782445845
Epoch Step: 40 / 67 Loss (mean): 0.3828027950753494 Loss (std): 0.678243342288259 Loss ratio: 1.771782628062463 Tokens per Sec: 2554.746070444027
Epoch Step: 45 / 67 Loss (mean): 0.5140801053494215 Loss (std): 0.8797889900072194 Loss ratio: 1.7113850173393206 Tokens per Sec: 3421.274022979067
Epoch Step: 50 / 67 Loss (mean): 0.48554479022823216 Loss (std): 0.9565862621713294 Loss ratio: 1.9701298035175754 Tokens per Sec: 3007.5244424750917
Epoch Step: 55 / 67 Loss (mean): 0.6503668736495456 Loss (std): 1.2885111049367501 Loss ratio: 1.9812065422493716 Tokens per Sec: 2693.6373863441127
Epoch Step: 60 / 67 Loss (mean): 0.2764743955049198 Loss (std): 0.49788283436691766 Loss ratio: 1.8008280059990507 Tokens per Sec: 2649.8427509459475
Epoch Step: 65 / 67 Loss (mean): 0.2695257329423839 Loss (std): 0.47868074196800847 Loss ratio: 1.7760112800447714 Tokens per Sec: 2451.590581414008
Mean loss per sample: 0.6919979764536521 Std loss per sample: 3.9403715178446106 ratio: 5.694195144960116
Epoch ended with duration 0:00:11.496306
Train perplexity: 1.0981502008625985
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print change time unit test[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 119.11703845858574 Loss (std): 47.04132565681486 Loss ratio: 0.394916850398107 Tokens per Sec: 4298.103653773607
Mean loss per sample: 105.487359514918 Std loss per sample: 53.06261781976206 ratio: 0.5030234718526437
Epoch ended with duration 0:00:01.035077
b'BLEU = 2.56, 8.2/2.8/1.8/1.3 (BP=0.948, ratio=0.949, hyp_len=2954, ref_len=3113)\n'
Validation perplexity: 1615938.8407560475
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.56
Model saved checkpoint_commit_msg_generator!
Epoch 621 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.8482255935741705 Loss (std): 1.378135458394711 Loss ratio: 1.624727512155885 Tokens per Sec: 3053.3699339650598
Epoch Step: 10 / 67 Loss (mean): 0.6264740705464646 Loss (std): 1.8285490763530476 Loss ratio: 2.918794507740807 Tokens per Sec: 2597.1016642285017
Epoch Step: 15 / 67 Loss (mean): 0.4510459592565894 Loss (std): 0.8166040592903253 Loss ratio: 1.8104675200643545 Tokens per Sec: 2347.5802807608775
Epoch Step: 20 / 67 Loss (mean): 0.605130944531993 Loss (std): 1.077933516073477 Loss ratio: 1.7813227464464714 Tokens per Sec: 2965.3467255828127
Epoch Step: 25 / 67 Loss (mean): 0.633278506789793 Loss (std): 1.1255243050702142 Loss ratio: 1.777297497077087 Tokens per Sec: 3173.1941468830614
Epoch Step: 30 / 67 Loss (mean): 0.28542420864141604 Loss (std): 0.5310913901879496 Loss ratio: 1.8607089872154818 Tokens per Sec: 2922.741345995718
Epoch Step: 35 / 67 Loss (mean): 0.28892698220027213 Loss (std): 0.5490479493802332 Loss ratio: 1.900300017669018 Tokens per Sec: 3135.0738812575546
Epoch Step: 40 / 67 Loss (mean): 1.403133897438238 Loss (std): 6.321320525251404 Loss ratio: 4.505144189583412 Tokens per Sec: 2645.8212930952013
Epoch Step: 45 / 67 Loss (mean): 0.7872612380142527 Loss (std): 1.4073565379309008 Loss ratio: 1.787661413993587 Tokens per Sec: 2501.88330818597
Epoch Step: 50 / 67 Loss (mean): 0.22526954469321936 Loss (std): 0.40603773461303294 Loss ratio: 1.8024528578241261 Tokens per Sec: 2671.6222163224015
Epoch Step: 55 / 67 Loss (mean): 0.548711527222622 Loss (std): 1.0309033092143551 Loss ratio: 1.8787710082061015 Tokens per Sec: 2730.349189774953
Epoch Step: 60 / 67 Loss (mean): 0.2640636244977941 Loss (std): 0.45501285363781424 Loss ratio: 1.7231182617567051 Tokens per Sec: 2590.2061196124487
Epoch Step: 65 / 67 Loss (mean): 0.4953760221324046 Loss (std): 0.8534198784559571 Loss ratio: 1.722771874953314 Tokens per Sec: 2445.7823445935583
Mean loss per sample: 0.904238851337562 Std loss per sample: 4.287013828532577 ratio: 4.7410192806813924
Epoch ended with duration 0:00:11.532128
Train perplexity: 1.1301419660186558
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to method_4[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 115.80958461761475 Loss (std): 46.8726175476377 Loss ratio: 0.4047386725580944 Tokens per Sec: 4172.2166176042465
Mean loss per sample: 106.82372914419555 Std loss per sample: 53.50634577413016 ratio: 0.5008844589380029
Epoch ended with duration 0:00:01.050832
b'BLEU = 2.52, 8.4/2.7/1.8/1.4 (BP=0.916, ratio=0.920, hyp_len=2863, ref_len=3113)\n'
Validation perplexity: 1936763.2168014327
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.52
Epoch 622 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2798722163165621 Loss (std): 0.6256660371990218 Loss ratio: 2.23554179630083 Tokens per Sec: 2447.985784333771
Epoch Step: 10 / 67 Loss (mean): 0.2552791872567468 Loss (std): 0.5220058837661556 Loss ratio: 2.0448430965942737 Tokens per Sec: 2358.174719885459
Epoch Step: 15 / 67 Loss (mean): 0.34816797504390706 Loss (std): 0.8276659349053697 Loss ratio: 2.3772029429214268 Tokens per Sec: 2643.2707286959107
Epoch Step: 20 / 67 Loss (mean): 0.33601266630284954 Loss (std): 0.5929685056294715 Loss ratio: 1.7647206938771367 Tokens per Sec: 2778.8044827283766
Epoch Step: 25 / 67 Loss (mean): 0.19259578911442077 Loss (std): 0.3278429076891287 Loss ratio: 1.7022329989486837 Tokens per Sec: 2951.0025401523853
Epoch Step: 30 / 67 Loss (mean): 0.6277598030537774 Loss (std): 1.127684510753083 Loss ratio: 1.796363044061423 Tokens per Sec: 3826.744429156903
Epoch Step: 35 / 67 Loss (mean): 2.2960310675553046 Loss (std): 8.95100408867153 Loss ratio: 3.898468193726184 Tokens per Sec: 2506.578934291792
Epoch Step: 40 / 67 Loss (mean): 0.5175925445728353 Loss (std): 0.8924456125128454 Loss ratio: 1.7242242413854185 Tokens per Sec: 2830.125176479159
Epoch Step: 45 / 67 Loss (mean): 0.2903271177062834 Loss (std): 0.9969751221478419 Loss ratio: 3.433971755805658 Tokens per Sec: 2370.4787023725926
Epoch Step: 50 / 67 Loss (mean): 0.1982317591609899 Loss (std): 0.31519225666340367 Loss ratio: 1.5900189656664787 Tokens per Sec: 3132.962695946186
Epoch Step: 55 / 67 Loss (mean): 0.2673449003286805 Loss (std): 0.6023437874646653 Loss ratio: 2.253058826722069 Tokens per Sec: 2895.0157716975955
Epoch Step: 60 / 67 Loss (mean): 0.1506600829816307 Loss (std): 0.2349387634737862 Loss ratio: 1.5593962171282703 Tokens per Sec: 2581.1973643316082
Epoch Step: 65 / 67 Loss (mean): 0.6737028365259903 Loss (std): 0.9113604903064737 Loss ratio: 1.3527633266411445 Tokens per Sec: 2582.3723870152626
Mean loss per sample: 0.5804340096178034 Std loss per sample: 3.5944783540644996 ratio: 6.192742490108986
Epoch ended with duration 0:00:11.496417
Train perplexity: 1.0816985701738475
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to run[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.02631595730782 Loss (std): 44.50313038928092 Loss ratio: 0.45867072196024194 Tokens per Sec: 4423.815635856759
Mean loss per sample: 101.69195600654014 Std loss per sample: 52.13934531428784 ratio: 0.5127184819902038
Epoch ended with duration 0:00:01.022827
b'BLEU = 2.61, 8.1/2.8/1.8/1.3 (BP=0.961, ratio=0.961, hyp_len=2993, ref_len=3113)\n'
Validation perplexity: 966156.8917234803
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.61
Epoch 623 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.19908603132353164 Loss (std): 0.35750514682699647 Loss ratio: 1.7957319478935232 Tokens per Sec: 2811.1744959183507
Epoch Step: 10 / 67 Loss (mean): 0.2441390277199389 Loss (std): 0.6408097626378461 Loss ratio: 2.6247739602409785 Tokens per Sec: 2437.9921242860464
Epoch Step: 15 / 67 Loss (mean): 0.5912978116175509 Loss (std): 1.131376752618568 Loss ratio: 1.9133788936637197 Tokens per Sec: 2902.491267620531
Epoch Step: 20 / 67 Loss (mean): 0.2447370340487396 Loss (std): 0.4223381772226923 Loss ratio: 1.7256815212469367 Tokens per Sec: 2177.2202165049325
Epoch Step: 25 / 67 Loss (mean): 1.104722472641697 Loss (std): 5.884754851683863 Loss ratio: 5.326907886296353 Tokens per Sec: 2759.8561618229783
Epoch Step: 30 / 67 Loss (mean): 1.557555113631679 Loss (std): 6.20848032304665 Loss ratio: 3.9860421430421322 Tokens per Sec: 3480.279846934785
Epoch Step: 35 / 67 Loss (mean): 0.44945652437854733 Loss (std): 1.003823200496047 Loss ratio: 2.233415572026703 Tokens per Sec: 3240.804486502613
Epoch Step: 40 / 67 Loss (mean): 0.26838387936368235 Loss (std): 0.5924333723267228 Loss ratio: 2.207410421711382 Tokens per Sec: 2838.9172760620495
Epoch Step: 45 / 67 Loss (mean): 0.14827587497552486 Loss (std): 0.2675525378506118 Loss ratio: 1.8044239354161646 Tokens per Sec: 2501.7981296404528
Epoch Step: 50 / 67 Loss (mean): 0.10873581706982804 Loss (std): 0.1527688864611146 Loss ratio: 1.404954600773445 Tokens per Sec: 2891.1569659883307
Epoch Step: 55 / 67 Loss (mean): 0.12224132338633353 Loss (std): 0.18185676532280987 Loss ratio: 1.4876864900101472 Tokens per Sec: 2387.1150090315778
Epoch Step: 60 / 67 Loss (mean): 0.20160790589579847 Loss (std): 0.43637628881935275 Loss ratio: 2.1644800429844993 Tokens per Sec: 2873.2707250343155
Epoch Step: 65 / 67 Loss (mean): 0.1333664390076592 Loss (std): 0.38586208723089205 Loss ratio: 2.893247282464609 Tokens per Sec: 2833.497072434086
Mean loss per sample: 0.42528025398700864 Std loss per sample: 2.295031512960412 ratio: 5.396515571660001
Epoch ended with duration 0:00:11.423514
Train perplexity: 1.059227953473291
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print change time unit test[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.06227964162827 Loss (std): 45.64088872553142 Loss ratio: 0.46542757207284496 Tokens per Sec: 4401.731683716821
Mean loss per sample: 102.78398734288382 Std loss per sample: 52.99518741417214 ratio: 0.5155976994488649
Epoch ended with duration 0:00:01.023388
b'BLEU = 2.41, 8.1/2.6/1.7/1.3 (BP=0.932, ratio=0.934, hyp_len=2908, ref_len=3113)\n'
Validation perplexity: 1120259.956102156
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.41
Epoch 624 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1920655637886739 Loss (std): 0.506194210466063 Loss ratio: 2.6355282044365795 Tokens per Sec: 2432.694934686232
Epoch Step: 10 / 67 Loss (mean): 0.15522788070938986 Loss (std): 0.236131826779105 Loss ratio: 1.521194682939591 Tokens per Sec: 2784.4541185531752
Epoch Step: 15 / 67 Loss (mean): 0.8880956251450698 Loss (std): 1.4269834663401888 Loss ratio: 1.606790334213269 Tokens per Sec: 3537.8249171876537
Epoch Step: 20 / 67 Loss (mean): 0.29574403398692084 Loss (std): 0.8462173793913288 Loss ratio: 2.8613168217917537 Tokens per Sec: 2714.1021240800305
Epoch Step: 25 / 67 Loss (mean): 7.028458501692512 Loss (std): 19.282753477940233 Loss ratio: 2.743525265646341 Tokens per Sec: 3303.0388804872778
Epoch Step: 30 / 67 Loss (mean): 0.13392772558290744 Loss (std): 0.27922906259641417 Loss ratio: 2.0849235016953864 Tokens per Sec: 2472.8898154443546
Epoch Step: 35 / 67 Loss (mean): 0.15457306831922324 Loss (std): 0.25831577515191084 Loss ratio: 1.6711564178724776 Tokens per Sec: 2962.5521697506783
Epoch Step: 40 / 67 Loss (mean): 0.2704944052675273 Loss (std): 0.573662277817634 Loss ratio: 2.1207916564864413 Tokens per Sec: 3025.2596246787703
Epoch Step: 45 / 67 Loss (mean): 2.3672788112489798 Loss (std): 10.469767348813201 Loss ratio: 4.4227014152546476 Tokens per Sec: 2830.697698847857
Epoch Step: 50 / 67 Loss (mean): 0.1358288874871505 Loss (std): 0.1986928892842841 Loss ratio: 1.4628176153108858 Tokens per Sec: 2296.83913141573
Epoch Step: 55 / 67 Loss (mean): 0.35449316762742455 Loss (std): 1.3966021596276696 Loss ratio: 3.939715309535982 Tokens per Sec: 2818.2608199728465
Epoch Step: 60 / 67 Loss (mean): 0.4531708796637304 Loss (std): 0.9983966438882442 Loss ratio: 2.2031350395442257 Tokens per Sec: 2704.8603661306915
Epoch Step: 65 / 67 Loss (mean): 0.28642338962345093 Loss (std): 0.5408808622121395 Loss ratio: 1.8883962756086832 Tokens per Sec: 2446.568266460259
Mean loss per sample: 0.5268276622766038 Std loss per sample: 3.6596601506893216 ratio: 6.946598314284921
Epoch ended with duration 0:00:11.441194
Train perplexity: 1.0738814758626736
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.91980943083763 Loss (std): 45.29676913529134 Loss ratio: 0.4625904543583206 Tokens per Sec: 4247.137680436423
Mean loss per sample: 104.21778141536186 Std loss per sample: 53.84347426524654 ratio: 0.5166438349963756
Epoch ended with duration 0:00:01.043626
b'BLEU = 2.41, 8.1/2.7/1.8/1.4 (BP=0.886, ratio=0.892, hyp_len=2778, ref_len=3113)\n'
Validation perplexity: 1360518.0421101567
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.41
Epoch 625 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1510483559286513 Loss (std): 0.27596979258214155 Loss ratio: 1.8270294362720356 Tokens per Sec: 2608.2402452221404
Epoch Step: 10 / 67 Loss (mean): 0.323145010272583 Loss (std): 0.7977844597483033 Loss ratio: 2.468812559028366 Tokens per Sec: 2992.8491537622585
Epoch Step: 15 / 67 Loss (mean): 0.17801019479884417 Loss (std): 0.4094062087944582 Loss ratio: 2.2999031558675456 Tokens per Sec: 2136.4508913332893
Epoch Step: 20 / 67 Loss (mean): 0.11681413899214022 Loss (std): 0.17441532435044255 Loss ratio: 1.4931011421671996 Tokens per Sec: 2437.921946419206
Epoch Step: 25 / 67 Loss (mean): 0.17169274094703724 Loss (std): 0.4282394949569509 Loss ratio: 2.4942201551144887 Tokens per Sec: 2838.5813433657027
Epoch Step: 30 / 67 Loss (mean): 0.8793182535519009 Loss (std): 1.4752099644422245 Loss ratio: 1.6776746740822113 Tokens per Sec: 3371.4528893482343
Epoch Step: 35 / 67 Loss (mean): 0.191306467873801 Loss (std): 0.41669158282369345 Loss ratio: 2.178136408323487 Tokens per Sec: 2342.2778558219084
Epoch Step: 40 / 67 Loss (mean): 0.41196204831794603 Loss (std): 1.7691504687368267 Loss ratio: 4.2944501221904385 Tokens per Sec: 2721.9871363275265
Epoch Step: 45 / 67 Loss (mean): 0.2513786504014206 Loss (std): 0.5930393908041883 Loss ratio: 2.359147802954538 Tokens per Sec: 3321.789984389889
Epoch Step: 50 / 67 Loss (mean): 0.5447609782531799 Loss (std): 1.3005766427289707 Loss ratio: 2.387426219292312 Tokens per Sec: 2779.9082595414848
Epoch Step: 55 / 67 Loss (mean): 0.15807491039140587 Loss (std): 0.24706793488919065 Loss ratio: 1.5629800724063743 Tokens per Sec: 2695.8707681420424
Epoch Step: 60 / 67 Loss (mean): 0.3507588501452119 Loss (std): 0.770535841762886 Loss ratio: 2.196768068557327 Tokens per Sec: 2552.2336744224936
Epoch Step: 65 / 67 Loss (mean): 0.4129161504897638 Loss (std): 0.9156714697499971 Loss ratio: 2.2175724264209826 Tokens per Sec: 2962.4810885505917
Mean loss per sample: 0.5475776251511291 Std loss per sample: 4.0449732782485786 ratio: 7.387031705563541
Epoch ended with duration 0:00:11.526585
Train perplexity: 1.076900595556404
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to run[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.33243909478188 Loss (std): 45.30570559426222 Loss ratio: 0.4607401790429749 Tokens per Sec: 4400.564065296154
Mean loss per sample: 103.03847140733336 Std loss per sample: 52.84259207698315 ratio: 0.5128433230349949
Epoch ended with duration 0:00:01.022552
b'BLEU = 2.47, 8.1/2.5/1.6/1.2 (BP=0.984, ratio=0.985, hyp_len=3065, ref_len=3113)\n'
Validation perplexity: 1159568.4511285257
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.47
Model saved checkpoint_commit_msg_generator!
Epoch 626 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.17270741521497257 Loss (std): 0.26932091299574057 Loss ratio: 1.5594056147532005 Tokens per Sec: 3270.6177920042787
Epoch Step: 10 / 67 Loss (mean): 0.2056465364403266 Loss (std): 0.5838325763455218 Loss ratio: 2.8390100142286383 Tokens per Sec: 2507.1853750877576
Epoch Step: 15 / 67 Loss (mean): 0.13642348743633192 Loss (std): 0.31078867345333516 Loss ratio: 2.278117055161623 Tokens per Sec: 2798.342213243349
Epoch Step: 20 / 67 Loss (mean): 0.3123891541508783 Loss (std): 1.033891278656614 Loss ratio: 3.3096260382883305 Tokens per Sec: 3013.6566978052647
Epoch Step: 25 / 67 Loss (mean): 0.09962303507063552 Loss (std): 0.15191316343583697 Loss ratio: 1.5248798967841752 Tokens per Sec: 2370.622085830162
Epoch Step: 30 / 67 Loss (mean): 0.1532385889258876 Loss (std): 0.3000707596826004 Loss ratio: 1.958193179576502 Tokens per Sec: 2524.2741565892497
Epoch Step: 35 / 67 Loss (mean): 0.5434283032636813 Loss (std): 0.8571561027117622 Loss ratio: 1.5773122186752473 Tokens per Sec: 2525.981136314143
Epoch Step: 40 / 67 Loss (mean): 0.1290011656783463 Loss (std): 0.2401390394129045 Loss ratio: 1.8615261199396542 Tokens per Sec: 2500.5943980714255
Epoch Step: 45 / 67 Loss (mean): 0.2923356530864112 Loss (std): 0.597265983949769 Loss ratio: 2.043082934441882 Tokens per Sec: 2679.518564894079
Epoch Step: 50 / 67 Loss (mean): 0.3950442739369464 Loss (std): 1.2003133802300883 Loss ratio: 3.038427486286441 Tokens per Sec: 2759.826323438865
Epoch Step: 55 / 67 Loss (mean): 0.3805337915982818 Loss (std): 0.9757480355304612 Loss ratio: 2.564156080415926 Tokens per Sec: 3648.280051781228
Epoch Step: 60 / 67 Loss (mean): 0.13701443078025477 Loss (std): 0.29808506734027734 Loss ratio: 2.1755742489515533 Tokens per Sec: 2898.0359872153076
Epoch Step: 65 / 67 Loss (mean): 0.12363477268445422 Loss (std): 0.3835429743151186 Loss ratio: 3.1022257410867153 Tokens per Sec: 2447.055335872951
Mean loss per sample: 0.6421263130266325 Std loss per sample: 4.047016389163107 ratio: 6.302523829132128
Epoch ended with duration 0:00:11.534230
Train perplexity: 1.0907652420733722
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to start[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 115.23382353782654 Loss (std): 46.71329863822651 Loss ratio: 0.4053783620474283 Tokens per Sec: 4274.021215834457
Mean loss per sample: 104.27825176129576 Std loss per sample: 53.38357630188179 ratio: 0.5119339402053132
Epoch ended with duration 0:00:01.038916
b'BLEU = 2.50, 8.4/2.8/1.9/1.6 (BP=0.868, ratio=0.876, hyp_len=2728, ref_len=3113)\n'
Validation perplexity: 1371713.043602823
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.5
Epoch 627 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3115560497608385 Loss (std): 1.4665641584212086 Loss ratio: 4.707224140076867 Tokens per Sec: 2377.5791270275677
Epoch Step: 10 / 67 Loss (mean): 0.08563744227146908 Loss (std): 0.19804308090537054 Loss ratio: 2.3125758506142406 Tokens per Sec: 2300.3689865504098
Epoch Step: 15 / 67 Loss (mean): 0.2404159413117668 Loss (std): 0.676964073365343 Loss ratio: 2.815803601340516 Tokens per Sec: 3396.289660665653
Epoch Step: 20 / 67 Loss (mean): 0.23157148103291547 Loss (std): 0.7611227527248802 Loss ratio: 3.286772401031086 Tokens per Sec: 2808.2586771821807
Epoch Step: 25 / 67 Loss (mean): 0.1428998315204808 Loss (std): 0.3388743116130398 Loss ratio: 2.371411554564859 Tokens per Sec: 2910.3509717768166
Epoch Step: 30 / 67 Loss (mean): 0.8344401927952276 Loss (std): 5.640711394130916 Loss ratio: 6.759874995037723 Tokens per Sec: 2649.9597832225213
Epoch Step: 35 / 67 Loss (mean): 0.14066521037602797 Loss (std): 0.2703395388735792 Loss ratio: 1.9218649597217692 Tokens per Sec: 2650.5804087760434
Epoch Step: 40 / 67 Loss (mean): 0.2198721903614569 Loss (std): 0.38440855050290496 Loss ratio: 1.748327289008037 Tokens per Sec: 2888.707338529791
Epoch Step: 45 / 67 Loss (mean): 0.1524513041440514 Loss (std): 0.3032846280777185 Loss ratio: 1.9893869047597295 Tokens per Sec: 2991.537998289422
Epoch Step: 50 / 67 Loss (mean): 0.5814283268900908 Loss (std): 1.2834287045992308 Loss ratio: 2.2073721647927917 Tokens per Sec: 2924.128342233394
Epoch Step: 55 / 67 Loss (mean): 0.5058453757774259 Loss (std): 1.2824735695367673 Loss ratio: 2.535307489103273 Tokens per Sec: 2551.2525079604206
Epoch Step: 60 / 67 Loss (mean): 0.3034557665732791 Loss (std): 0.7805429293764296 Loss ratio: 2.5721802494992048 Tokens per Sec: 3016.3938991043105
Epoch Step: 65 / 67 Loss (mean): 0.12440983802389383 Loss (std): 0.20881558281138002 Loss ratio: 1.6784491172737919 Tokens per Sec: 2420.3288626821986
Mean loss per sample: 0.42055287644890854 Std loss per sample: 2.431935158890773 ratio: 5.782709606995686
Epoch ended with duration 0:00:11.531011
Train perplexity: 1.0585506743040678
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print change time unit test[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.6721818447113 Loss (std): 44.68102732447864 Loss ratio: 0.45745908897086857 Tokens per Sec: 4280.702394620481
Mean loss per sample: 103.78167586346142 Std loss per sample: 53.04639331811312 ratio: 0.5111344837782605
Epoch ended with duration 0:00:01.036605
b'BLEU = 2.56, 8.5/2.8/1.8/1.4 (BP=0.931, ratio=0.933, hyp_len=2904, ref_len=3113)\n'
Validation perplexity: 1282441.1715377406
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.56
Epoch 628 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2986607814345916 Loss (std): 0.7472530771465351 Loss ratio: 2.5020127301521433 Tokens per Sec: 3702.3510584163355
Epoch Step: 10 / 67 Loss (mean): 0.2775153206603136 Loss (std): 0.5140926630227537 Loss ratio: 1.8524838981845522 Tokens per Sec: 2698.443778106036
Epoch Step: 15 / 67 Loss (mean): 0.24255136764531926 Loss (std): 0.5571229450217388 Loss ratio: 2.296927658789435 Tokens per Sec: 2262.1197108465685
Epoch Step: 20 / 67 Loss (mean): 0.2665547360193159 Loss (std): 0.5801339702421934 Loss ratio: 2.176415917067607 Tokens per Sec: 3027.463518421966
Epoch Step: 25 / 67 Loss (mean): 0.22988762044201394 Loss (std): 0.4876061766309187 Loss ratio: 2.1210632207744777 Tokens per Sec: 2336.5791261222107
Epoch Step: 30 / 67 Loss (mean): 0.5762777330101017 Loss (std): 1.2394487287821057 Loss ratio: 2.150783654797884 Tokens per Sec: 2820.5352977118255
Epoch Step: 35 / 67 Loss (mean): 0.20378081093758738 Loss (std): 0.5455616354378041 Loss ratio: 2.677198274595615 Tokens per Sec: 2832.242362782404
Epoch Step: 40 / 67 Loss (mean): 0.3067422808935589 Loss (std): 0.605700109702292 Loss ratio: 1.9746221744777106 Tokens per Sec: 3479.582482578986
Epoch Step: 45 / 67 Loss (mean): 0.18342648338148138 Loss (std): 0.32150629850072077 Loss ratio: 1.7527801469762019 Tokens per Sec: 3150.789166495562
Epoch Step: 50 / 67 Loss (mean): 0.12476165579482767 Loss (std): 0.3015050652387926 Loss ratio: 2.416648475190342 Tokens per Sec: 2156.4213499129123
Epoch Step: 55 / 67 Loss (mean): 1.7409249295651534 Loss (std): 6.454287342651334 Loss ratio: 3.707389809314454 Tokens per Sec: 2846.456393886306
Epoch Step: 60 / 67 Loss (mean): 0.5950430397206219 Loss (std): 0.9477338754817359 Loss ratio: 1.5927148327400076 Tokens per Sec: 2708.25073961195
Epoch Step: 65 / 67 Loss (mean): 0.6093294430265814 Loss (std): 4.120362009768071 Loss ratio: 6.7621252459128645 Tokens per Sec: 2706.1323583511066
Mean loss per sample: 0.35610801181849905 Std loss per sample: 1.8990713492505342 ratio: 5.332852073596288
Epoch ended with duration 0:00:11.440586
Train perplexity: 1.0493609001686264
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to run[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.17296195030212 Loss (std): 44.41729116064498 Loss ratio: 0.45243914697338194 Tokens per Sec: 4277.607034090297
Mean loss per sample: 104.3279905087452 Std loss per sample: 53.90952595864638 ratio: 0.5167311830292318
Epoch ended with duration 0:00:01.037682
b'BLEU = 2.81, 8.4/3.0/2.0/1.6 (BP=0.940, ratio=0.942, hyp_len=2931, ref_len=3113)\n'
Validation perplexity: 1380990.2947703614
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.81
Epoch 629 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.40450454886013176 Loss (std): 0.8098224885585381 Loss ratio: 2.0020108323641024 Tokens per Sec: 3550.878414112643
Epoch Step: 10 / 67 Loss (mean): 0.16006046561233234 Loss (std): 0.27749259488124073 Loss ratio: 1.733673545304622 Tokens per Sec: 2517.284515938838
Epoch Step: 15 / 67 Loss (mean): 0.22282558529150265 Loss (std): 0.4615668597713675 Loss ratio: 2.071426668385236 Tokens per Sec: 2508.0859755867027
Epoch Step: 20 / 67 Loss (mean): 0.3001890946216008 Loss (std): 0.7739985015376756 Loss ratio: 2.578369818908074 Tokens per Sec: 2563.644237493435
Epoch Step: 25 / 67 Loss (mean): 0.488768513992909 Loss (std): 1.5130399885509827 Loss ratio: 3.0956167290533236 Tokens per Sec: 2988.5328379988796
Epoch Step: 30 / 67 Loss (mean): 0.16807451546992525 Loss (std): 0.520655013441553 Loss ratio: 3.0977629891470215 Tokens per Sec: 2642.1170323660276
Epoch Step: 35 / 67 Loss (mean): 0.19063974331311329 Loss (std): 0.8791977077727768 Loss ratio: 4.611828008647453 Tokens per Sec: 2622.0058602390686
Epoch Step: 40 / 67 Loss (mean): 0.34998999589515734 Loss (std): 0.9274221638867938 Loss ratio: 2.6498533522787078 Tokens per Sec: 2623.599855926043
Epoch Step: 45 / 67 Loss (mean): 0.15416573892798624 Loss (std): 0.24905218048071748 Loss ratio: 1.6154833247162297 Tokens per Sec: 2741.272526606741
Epoch Step: 50 / 67 Loss (mean): 0.3634034004135174 Loss (std): 0.723107621166152 Loss ratio: 1.989820734597768 Tokens per Sec: 3155.996797743952
Epoch Step: 55 / 67 Loss (mean): 1.9281641168272472 Loss (std): 6.549768453181703 Loss ratio: 3.3968936544463895 Tokens per Sec: 2781.0392986438083
Epoch Step: 60 / 67 Loss (mean): 0.1371661760395 Loss (std): 0.30936127167652366 Loss ratio: 2.2553757829294327 Tokens per Sec: 2428.854774795091
Epoch Step: 65 / 67 Loss (mean): 7.382574605295304 Loss (std): 18.05749580260628 Loss ratio: 2.4459618450254696 Tokens per Sec: 3010.384268467304
Mean loss per sample: 0.5192587021018233 Std loss per sample: 3.7457467067193866 ratio: 7.213642624683196
Epoch ended with duration 0:00:11.445265
Train perplexity: 1.0727823002232633
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to run[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.16997638344765 Loss (std): 43.89091707062829 Loss ratio: 0.44709104236912806 Tokens per Sec: 4404.611744938517
Mean loss per sample: 104.28267934881761 Std loss per sample: 52.35700251342683 ratio: 0.5020680600111611
Epoch ended with duration 0:00:01.040679
b'BLEU = 2.88, 8.8/3.1/2.1/1.6 (BP=0.927, ratio=0.930, hyp_len=2894, ref_len=3113)\n'
Validation perplexity: 1372536.3422891586
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.88
Epoch 630 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.367260312075814 Loss (std): 0.5900271978614423 Loss ratio: 1.6065640050418577 Tokens per Sec: 3334.3956867959755
Epoch Step: 10 / 67 Loss (mean): 0.3072942060607602 Loss (std): 0.6699932522719012 Loss ratio: 2.1802990068072607 Tokens per Sec: 2950.0091551462115
Epoch Step: 15 / 67 Loss (mean): 0.2541092357919297 Loss (std): 0.5217844363309796 Loss ratio: 2.053386350578097 Tokens per Sec: 3150.183480282853
Epoch Step: 20 / 67 Loss (mean): 0.2684093946154462 Loss (std): 0.4642658716370391 Loss ratio: 1.7296930768842838 Tokens per Sec: 2354.703940030109
Epoch Step: 25 / 67 Loss (mean): 0.5346831725619268 Loss (std): 0.9425712070067452 Loss ratio: 1.762859306924564 Tokens per Sec: 2830.611848933798
Epoch Step: 30 / 67 Loss (mean): 0.22746627068499947 Loss (std): 0.5589793281002955 Loss ratio: 2.4574163299770406 Tokens per Sec: 2741.020639618328
Epoch Step: 35 / 67 Loss (mean): 0.26304160716154 Loss (std): 0.608649066461653 Loss ratio: 2.3138889433863112 Tokens per Sec: 2548.354348429294
Epoch Step: 40 / 67 Loss (mean): 0.34710225943490514 Loss (std): 0.7800101308995876 Loss ratio: 2.2472055703972424 Tokens per Sec: 2497.1321119485574
Epoch Step: 45 / 67 Loss (mean): 0.16410453370554023 Loss (std): 0.5083187058782496 Loss ratio: 3.097529936560726 Tokens per Sec: 2558.175937081706
Epoch Step: 50 / 67 Loss (mean): 0.19386565494460228 Loss (std): 0.40778445636767785 Loss ratio: 2.103438365522782 Tokens per Sec: 2667.1879011290607
Epoch Step: 55 / 67 Loss (mean): 0.423107281094417 Loss (std): 1.0031778528024895 Loss ratio: 2.3709775218418634 Tokens per Sec: 2922.0588134804216
Epoch Step: 60 / 67 Loss (mean): 0.48804538611875614 Loss (std): 1.0500484928702254 Loss ratio: 2.1515386124656795 Tokens per Sec: 2302.5159929913398
Epoch Step: 65 / 67 Loss (mean): 0.30591762334734085 Loss (std): 0.637676399397488 Loss ratio: 2.0844709514282087 Tokens per Sec: 3194.608716324033
Mean loss per sample: 0.46372743018101725 Std loss per sample: 3.362653220299997 ratio: 7.251357158206872
Epoch ended with duration 0:00:11.419686
Train perplexity: 1.064752298919985
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.73852616548538 Loss (std): 44.498220030234755 Loss ratio: 0.4506672497385257 Tokens per Sec: 4415.298482626877
Mean loss per sample: 103.87098407452224 Std loss per sample: 53.446869575212396 ratio: 0.5145505268041645
Epoch ended with duration 0:00:01.032329
b'BLEU = 2.34, 8.5/2.6/1.6/1.2 (BP=0.906, ratio=0.910, hyp_len=2834, ref_len=3113)\n'
Validation perplexity: 1298056.685991513
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.34
Model saved checkpoint_commit_msg_generator!
Epoch 631 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1888127403381077 Loss (std): 0.3898689433992075 Loss ratio: 2.064844473424133 Tokens per Sec: 2746.745279858435
Epoch Step: 10 / 67 Loss (mean): 0.07205224341487337 Loss (std): 0.11957148592454456 Loss ratio: 1.6595109361974707 Tokens per Sec: 2994.1141506059744
Epoch Step: 15 / 67 Loss (mean): 0.25800532777793705 Loss (std): 0.533087026079818 Loss ratio: 2.066186115887658 Tokens per Sec: 2604.1707590998526
Epoch Step: 20 / 67 Loss (mean): 0.24247967186238384 Loss (std): 0.4598703831914701 Loss ratio: 1.8965316954588405 Tokens per Sec: 2409.232924203862
Epoch Step: 25 / 67 Loss (mean): 0.14461268513741743 Loss (std): 0.3474269835005179 Loss ratio: 2.402465476457873 Tokens per Sec: 2516.2513255702697
Epoch Step: 30 / 67 Loss (mean): 0.12283856690009998 Loss (std): 0.19643196315272313 Loss ratio: 1.5991066007182737 Tokens per Sec: 2920.1313467485134
Epoch Step: 35 / 67 Loss (mean): 0.19942250763097036 Loss (std): 0.4354569910529331 Loss ratio: 2.1835899880405805 Tokens per Sec: 3122.9595613429537
Epoch Step: 40 / 67 Loss (mean): 0.3049410978801461 Loss (std): 0.5288487521189583 Loss ratio: 1.7342652590790395 Tokens per Sec: 2796.1802489403417
Epoch Step: 45 / 67 Loss (mean): 0.8247825154321617 Loss (std): 1.3763025564243019 Loss ratio: 1.6686854178803243 Tokens per Sec: 2797.6842166631513
Epoch Step: 50 / 67 Loss (mean): 0.20426466562480528 Loss (std): 0.5373948324175031 Loss ratio: 2.630875148052251 Tokens per Sec: 2409.529088519402
Epoch Step: 55 / 67 Loss (mean): 0.2530893991513494 Loss (std): 0.5080604630916932 Loss ratio: 2.0074347831055106 Tokens per Sec: 2666.055766364535
Epoch Step: 60 / 67 Loss (mean): 0.16377407416439382 Loss (std): 0.4375785810192355 Loss ratio: 2.6718428008330615 Tokens per Sec: 3175.7341037466476
Epoch Step: 65 / 67 Loss (mean): 0.2763975633934024 Loss (std): 0.5488050037519558 Loss ratio: 1.9855638270256033 Tokens per Sec: 2967.027466399501
Mean loss per sample: 0.2955711261459533 Std loss per sample: 1.202404922564669 ratio: 4.068073015937694
Epoch ended with duration 0:00:11.424586
Train perplexity: 1.0408010832473507
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to run[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.80021959543228 Loss (std): 44.410997791673076 Loss ratio: 0.44950302715446877 Tokens per Sec: 4405.581657545088
Mean loss per sample: 103.24762352378886 Std loss per sample: 52.98277343325751 ratio: 0.51316215933096
Epoch ended with duration 0:00:01.022698
b'BLEU = 2.50, 8.5/2.7/1.7/1.4 (BP=0.916, ratio=0.920, hyp_len=2863, ref_len=3113)\n'
Validation perplexity: 1192905.3105076463
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.5
Epoch 632 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.5139966731567256 Loss (std): 6.81856805422683 Loss ratio: 4.5036876071926395 Tokens per Sec: 2731.2086483485314
Epoch Step: 10 / 67 Loss (mean): 0.15930703555932269 Loss (std): 0.5238792523922288 Loss ratio: 3.288487859640994 Tokens per Sec: 2599.0351904830595
Epoch Step: 15 / 67 Loss (mean): 0.1923623206512275 Loss (std): 0.6119600689510617 Loss ratio: 3.181288658191059 Tokens per Sec: 2578.492926759914
Epoch Step: 20 / 67 Loss (mean): 0.16832816064743383 Loss (std): 0.48800270600283746 Loss ratio: 2.899115062660058 Tokens per Sec: 2695.1929251386878
Epoch Step: 25 / 67 Loss (mean): 0.12979588495363714 Loss (std): 0.289066568840131 Loss ratio: 2.2270857735080356 Tokens per Sec: 3178.8256853707226
Epoch Step: 30 / 67 Loss (mean): 0.1813614702950872 Loss (std): 0.6205754094230315 Loss ratio: 3.421759916333463 Tokens per Sec: 3000.952985033105
Epoch Step: 35 / 67 Loss (mean): 0.3221825923938013 Loss (std): 0.7032885845233539 Loss ratio: 2.182888216579155 Tokens per Sec: 2814.8368868576645
Epoch Step: 40 / 67 Loss (mean): 0.6221461040440772 Loss (std): 1.3869346289528317 Loss ratio: 2.229274795642812 Tokens per Sec: 3623.730359479878
Epoch Step: 45 / 67 Loss (mean): 0.06665119045464962 Loss (std): 0.1025824211307169 Loss ratio: 1.5390936070454042 Tokens per Sec: 2255.7075391998073
Epoch Step: 50 / 67 Loss (mean): 0.1917606599499777 Loss (std): 0.5841502636188699 Loss ratio: 3.046246627286588 Tokens per Sec: 2887.5533120571376
Epoch Step: 55 / 67 Loss (mean): 0.19386421056969994 Loss (std): 0.5213744842273152 Loss ratio: 2.689379760684944 Tokens per Sec: 2434.4929083529832
Epoch Step: 60 / 67 Loss (mean): 0.1768322599172052 Loss (std): 0.4452153965459064 Loss ratio: 2.5177272334491523 Tokens per Sec: 2611.3428741304315
Epoch Step: 65 / 67 Loss (mean): 0.07149224711611168 Loss (std): 0.21764559257743832 Loss ratio: 3.044324403791039 Tokens per Sec: 2745.6402113208237
Mean loss per sample: 0.32709451288269464 Std loss per sample: 1.6283953622506682 ratio: 4.97836343355187
Epoch ended with duration 0:00:11.391147
Train perplexity: 1.0452496895313586
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command during run[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.13163793087006 Loss (std): 44.587501970709994 Loss ratio: 0.454364187848573 Tokens per Sec: 4389.1991656348255
Mean loss per sample: 103.20605304122704 Std loss per sample: 52.98857305622577 ratio: 0.5134250510971364
Epoch ended with duration 0:00:01.024676
b'BLEU = 2.87, 8.8/3.0/2.1/1.6 (BP=0.927, ratio=0.930, hyp_len=2895, ref_len=3113)\n'
Validation perplexity: 1186203.918797557
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.87
Epoch 633 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.13889068385833525 Loss (std): 0.3423210175022916 Loss ratio: 2.4646794730411856 Tokens per Sec: 2875.7008884712895
Epoch Step: 10 / 67 Loss (mean): 0.1223796084523201 Loss (std): 0.23512012611104394 Loss ratio: 1.9212361363506756 Tokens per Sec: 2737.8075372193643
Epoch Step: 15 / 67 Loss (mean): 0.10397480517349322 Loss (std): 0.21461961746328634 Loss ratio: 2.064150224712326 Tokens per Sec: 2573.92497198456
Epoch Step: 20 / 67 Loss (mean): 0.11876601471476533 Loss (std): 0.2679180802819584 Loss ratio: 2.2558480296354513 Tokens per Sec: 2855.2580806759483
Epoch Step: 25 / 67 Loss (mean): 0.3154010680900683 Loss (std): 0.8376830368298496 Loss ratio: 2.6559296133728836 Tokens per Sec: 2834.891443079707
Epoch Step: 30 / 67 Loss (mean): 0.16702692581384326 Loss (std): 0.46751662144073997 Loss ratio: 2.799049429681786 Tokens per Sec: 2882.667752963497
Epoch Step: 35 / 67 Loss (mean): 0.2410119495834806 Loss (std): 0.5229005655242093 Loss ratio: 2.1696043139267225 Tokens per Sec: 2718.6807421827375
Epoch Step: 40 / 67 Loss (mean): 0.5765653473463317 Loss (std): 1.111624272246983 Loss ratio: 1.9280108965328637 Tokens per Sec: 2589.3167088356563
Epoch Step: 45 / 67 Loss (mean): 1.9592184261746297 Loss (std): 12.965998961676394 Loss ratio: 6.617944578539149 Tokens per Sec: 3219.842216344774
Epoch Step: 50 / 67 Loss (mean): 0.3838774188152456 Loss (std): 1.0762851524691917 Loss ratio: 2.8037209268284453 Tokens per Sec: 2860.507022461598
Epoch Step: 55 / 67 Loss (mean): 0.5698173467226297 Loss (std): 1.1445343403732104 Loss ratio: 2.00859862718489 Tokens per Sec: 2893.0115658806376
Epoch Step: 60 / 67 Loss (mean): 0.26381998775104876 Loss (std): 0.5868762156745284 Loss ratio: 2.224532798585104 Tokens per Sec: 2895.427781490134
Epoch Step: 65 / 67 Loss (mean): 0.29992146922631946 Loss (std): 0.7390382497296226 Loss ratio: 2.4641058595640164 Tokens per Sec: 2399.0392922543506
Mean loss per sample: 0.49961396382660705 Std loss per sample: 4.259924161899138 ratio: 8.526431345657027
Epoch ended with duration 0:00:11.389371
Train perplexity: 1.0699347086884774
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.63105091452599 Loss (std): 44.294112083622146 Loss ratio: 0.4490889194925803 Tokens per Sec: 4422.0810370306845
Mean loss per sample: 103.02578154245971 Std loss per sample: 53.28393248948522 ratio: 0.5171902769553411
Epoch ended with duration 0:00:01.021169
b'BLEU = 2.33, 8.5/2.6/1.6/1.2 (BP=0.898, ratio=0.903, hyp_len=2811, ref_len=3113)\n'
Validation perplexity: 1157576.0503003984
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.33
Epoch 634 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.6687924221214416 Loss (std): 5.733739334944384 Loss ratio: 3.4358613204004156 Tokens per Sec: 3154.8969610155627
Epoch Step: 10 / 67 Loss (mean): 0.24589914035186666 Loss (std): 0.674196147105887 Loss ratio: 2.7417588615444264 Tokens per Sec: 2822.1300852952963
Epoch Step: 15 / 67 Loss (mean): 0.4639978709692514 Loss (std): 0.9308708704737945 Loss ratio: 2.0061964261372274 Tokens per Sec: 2775.698689630647
Epoch Step: 20 / 67 Loss (mean): 0.3080067682317349 Loss (std): 0.7014298745556461 Loss ratio: 2.2773196789880656 Tokens per Sec: 3013.210853673194
Epoch Step: 25 / 67 Loss (mean): 0.29967543665043195 Loss (std): 0.6349989782168305 Loss ratio: 2.118955711934274 Tokens per Sec: 2689.8763612917883
Epoch Step: 30 / 67 Loss (mean): 0.0880182526743738 Loss (std): 0.16419842580468103 Loss ratio: 1.8655042654861385 Tokens per Sec: 2375.0791399441773
Epoch Step: 35 / 67 Loss (mean): 1.0304591801341303 Loss (std): 6.317174009434976 Loss ratio: 6.130445660751644 Tokens per Sec: 2616.7629481175904
Epoch Step: 40 / 67 Loss (mean): 0.5605134585275664 Loss (std): 1.0788195133150031 Loss ratio: 1.9246986792235001 Tokens per Sec: 3120.424464792857
Epoch Step: 45 / 67 Loss (mean): 3.8420516492333263 Loss (std): 17.143452450495083 Loss ratio: 4.4620567383356295 Tokens per Sec: 3226.0994392824427
Epoch Step: 50 / 67 Loss (mean): 0.1358379298053478 Loss (std): 0.21204218495347024 Loss ratio: 1.560993937829597 Tokens per Sec: 2308.4498918265353
Epoch Step: 55 / 67 Loss (mean): 0.2550179716954517 Loss (std): 0.4956550360420858 Loss ratio: 1.9436082592406796 Tokens per Sec: 2584.2733808319067
Epoch Step: 60 / 67 Loss (mean): 2.839476936042047 Loss (std): 11.67000381570721 Loss ratio: 4.109913226474047 Tokens per Sec: 2710.657537174115
Epoch Step: 65 / 67 Loss (mean): 0.06993813940304487 Loss (std): 0.15104418835044608 Loss ratio: 2.159682680146766 Tokens per Sec: 2467.757990825395
Mean loss per sample: 0.9543894722366542 Std loss per sample: 6.36482743397117 ratio: 6.669004236870839
Epoch ended with duration 0:00:11.542720
Train perplexity: 1.1378364668877239
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a unit for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.57632166147232 Loss (std): 42.83211044933644 Loss ratio: 0.43896008498800126 Tokens per Sec: 4365.186881855095
Mean loss per sample: 104.5063346640558 Std loss per sample: 51.81147747177482 ratio: 0.49577355897445907
Epoch ended with duration 0:00:01.043109
b'BLEU = 2.51, 8.2/2.6/1.7/1.3 (BP=0.969, ratio=0.970, hyp_len=3019, ref_len=3113)\n'
Validation perplexity: 1414773.820585961
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.51
Epoch 635 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.322012931777863 Loss (std): 4.036732476242894 Loss ratio: 1.7384625300739156 Tokens per Sec: 3223.404286448166
Epoch Step: 10 / 67 Loss (mean): 0.5893883142825871 Loss (std): 1.1239369161991644 Loss ratio: 1.9069548699268637 Tokens per Sec: 3060.135621737288
Epoch Step: 15 / 67 Loss (mean): 0.31834411015734076 Loss (std): 1.0765879744782905 Loss ratio: 3.3818372639160486 Tokens per Sec: 3035.5259698018235
Epoch Step: 20 / 67 Loss (mean): 0.0876100687419239 Loss (std): 0.1292191465260761 Loss ratio: 1.4749348834175848 Tokens per Sec: 2835.548615294078
Epoch Step: 25 / 67 Loss (mean): 0.16742343856913067 Loss (std): 0.4077630668070708 Loss ratio: 2.4355196040171023 Tokens per Sec: 2749.8587475559757
Epoch Step: 30 / 67 Loss (mean): 0.3009800087147596 Loss (std): 0.7092622880126058 Loss ratio: 2.3565096268064023 Tokens per Sec: 2934.705734198189
Epoch Step: 35 / 67 Loss (mean): 0.24624209590547252 Loss (std): 0.6724660222073131 Loss ratio: 2.7309141425821015 Tokens per Sec: 3004.4832185689634
Epoch Step: 40 / 67 Loss (mean): 0.170003146491581 Loss (std): 0.37568332408165606 Loss ratio: 2.209861004544765 Tokens per Sec: 2594.392864980798
Epoch Step: 45 / 67 Loss (mean): 0.21501309100585786 Loss (std): 0.6288341911620867 Loss ratio: 2.9246321152834116 Tokens per Sec: 2737.500062498689
Epoch Step: 50 / 67 Loss (mean): 0.29810972823361226 Loss (std): 0.6084968111366574 Loss ratio: 2.0411840121494182 Tokens per Sec: 2660.436551455761
Epoch Step: 55 / 67 Loss (mean): 0.06261528921459103 Loss (std): 0.1172857540073995 Loss ratio: 1.8731168613698395 Tokens per Sec: 2379.728434326443
Epoch Step: 60 / 67 Loss (mean): 0.4775851846288788 Loss (std): 1.30531045167151 Loss ratio: 2.7331468682091526 Tokens per Sec: 2349.092990208939
Epoch Step: 65 / 67 Loss (mean): 0.24187240371247754 Loss (std): 0.8124684833780356 Loss ratio: 3.359078881705935 Tokens per Sec: 2562.505803359905
Mean loss per sample: 0.3832769840290076 Std loss per sample: 1.9948383589123224 ratio: 5.204691233850209
Epoch ended with duration 0:00:11.460237
Train perplexity: 1.0532254012739484
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to method_4[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for zoneinfo provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.61644691228867 Loss (std): 44.706412314321355 Loss ratio: 0.45333627112000985 Tokens per Sec: 4405.0112971984445
Mean loss per sample: 104.20283929093695 Std loss per sample: 53.87108393462946 ratio: 0.516982879748795
Epoch ended with duration 0:00:01.038153
b'BLEU = 2.60, 8.7/2.9/1.9/1.5 (BP=0.885, ratio=0.891, hyp_len=2773, ref_len=3113)\n'
Validation perplexity: 1357765.8818359545
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.6
Model saved checkpoint_commit_msg_generator!
Epoch 636 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.10920643203280633 Loss (std): 0.17938679266155497 Loss ratio: 1.6426394427726196 Tokens per Sec: 2796.360787152228
Epoch Step: 10 / 67 Loss (mean): 0.12865220937965205 Loss (std): 0.37007156379674055 Loss ratio: 2.876527077002317 Tokens per Sec: 2694.756728239022
Epoch Step: 15 / 67 Loss (mean): 0.13231932321286877 Loss (std): 0.18565864555204678 Loss ratio: 1.4031106042869366 Tokens per Sec: 2668.2766180732533
Epoch Step: 20 / 67 Loss (mean): 0.10354357958885885 Loss (std): 0.22709986740689606 Loss ratio: 2.1932781183405377 Tokens per Sec: 2690.8984655326813
Epoch Step: 25 / 67 Loss (mean): 0.13906694242541562 Loss (std): 0.47896764939509623 Loss ratio: 3.444151723203206 Tokens per Sec: 2756.581863893568
Epoch Step: 30 / 67 Loss (mean): 0.21522848550011986 Loss (std): 0.46241458571387833 Loss ratio: 2.1484822728709894 Tokens per Sec: 2548.0583901208656
Epoch Step: 35 / 67 Loss (mean): 0.2024127273944032 Loss (std): 0.7282095016089748 Loss ratio: 3.5976468030592335 Tokens per Sec: 2474.1919293672777
Epoch Step: 40 / 67 Loss (mean): 0.14344588537551317 Loss (std): 0.29373194935676444 Loss ratio: 2.0476847320355818 Tokens per Sec: 3114.307216814735
Epoch Step: 45 / 67 Loss (mean): 0.10943561818476155 Loss (std): 0.24972943610540937 Loss ratio: 2.28197583426438 Tokens per Sec: 2773.5781232927634
Epoch Step: 50 / 67 Loss (mean): 0.5056716752005741 Loss (std): 0.9820471416738537 Loss ratio: 1.9420647622478078 Tokens per Sec: 3299.615029167625
Epoch Step: 55 / 67 Loss (mean): 0.21063035033512278 Loss (std): 0.5819526679568231 Loss ratio: 2.7629098419620393 Tokens per Sec: 2871.8716994955416
Epoch Step: 60 / 67 Loss (mean): 0.26696778755376727 Loss (std): 0.5103768018579862 Loss ratio: 1.9117542477112388 Tokens per Sec: 3077.3691003189642
Epoch Step: 65 / 67 Loss (mean): 0.10357588494116499 Loss (std): 0.21929961755395222 Loss ratio: 2.117284517322953 Tokens per Sec: 2352.9530735349836
Mean loss per sample: 0.35042021139841156 Std loss per sample: 2.1669242475029975 ratio: 6.18378785531667
Epoch ended with duration 0:00:11.457863
Train perplexity: 1.0485536669770334
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.09241646528244 Loss (std): 44.87655593372119 Loss ratio: 0.4574926130972033 Tokens per Sec: 4404.220021353175
Mean loss per sample: 102.6158813361506 Std loss per sample: 52.548465628734554 ratio: 0.5120890153113389
Epoch ended with duration 0:00:01.021721
b'BLEU = 2.73, 8.4/2.8/1.9/1.5 (BP=0.939, ratio=0.941, hyp_len=2930, ref_len=3113)\n'
Validation perplexity: 1095027.4013973349
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.73
Epoch 637 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.08548322373553674 Loss (std): 0.15244263316067766 Loss ratio: 1.783304682475432 Tokens per Sec: 2397.265211630838
Epoch Step: 10 / 67 Loss (mean): 0.10765517128857027 Loss (std): 0.20635060180203132 Loss ratio: 1.9167737074971292 Tokens per Sec: 2913.0695805067126
Epoch Step: 15 / 67 Loss (mean): 1.4848020244080544 Loss (std): 6.217348808863845 Loss ratio: 4.187325115846682 Tokens per Sec: 2818.338863228269
Epoch Step: 20 / 67 Loss (mean): 0.27747517586703907 Loss (std): 0.7057288805623565 Loss ratio: 2.543394659926366 Tokens per Sec: 3698.913574807565
Epoch Step: 25 / 67 Loss (mean): 0.271089186961035 Loss (std): 0.8285977465797326 Loss ratio: 3.0565503400134917 Tokens per Sec: 3439.857448474583
Epoch Step: 30 / 67 Loss (mean): 0.24960128404927673 Loss (std): 0.5961186907595657 Loss ratio: 2.388283750342722 Tokens per Sec: 2903.2851134631032
Epoch Step: 35 / 67 Loss (mean): 0.09921822477144815 Loss (std): 0.13703712374726762 Loss ratio: 1.3811688735908783 Tokens per Sec: 3240.5885839995453
Epoch Step: 40 / 67 Loss (mean): 0.3368570913171425 Loss (std): 0.706695900418809 Loss ratio: 2.0979101186665314 Tokens per Sec: 2683.3507392008314
Epoch Step: 45 / 67 Loss (mean): 0.17517856684571598 Loss (std): 0.36408109929383836 Loss ratio: 2.0783427210846717 Tokens per Sec: 2599.8847463999455
Epoch Step: 50 / 67 Loss (mean): 0.4613555226387689 Loss (std): 1.3068630379350616 Loss ratio: 2.8326593566287626 Tokens per Sec: 2736.3499135000784
Epoch Step: 55 / 67 Loss (mean): 0.2886621429006482 Loss (std): 0.8263074304464774 Loss ratio: 2.8625417318088577 Tokens per Sec: 2427.342432999425
Epoch Step: 60 / 67 Loss (mean): 0.26827203826360346 Loss (std): 0.8556142515094861 Loss ratio: 3.1893530799835412 Tokens per Sec: 2758.9646547584803
Epoch Step: 65 / 67 Loss (mean): 0.10056356126525705 Loss (std): 0.25864268247332367 Loss ratio: 2.5719324099024345 Tokens per Sec: 2347.1978246160706
Mean loss per sample: 0.33110722831850536 Std loss per sample: 1.7317313822823561 ratio: 5.23012255297711
Epoch ended with duration 0:00:11.386564
Train perplexity: 1.0458173297895355
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.11482280492783 Loss (std): 45.160702271975794 Loss ratio: 0.4556402462713224 Tokens per Sec: 4389.391759009881
Mean loss per sample: 103.50956049579821 Std loss per sample: 53.49933109789489 ratio: 0.5168540069307569
Epoch ended with duration 0:00:01.025499
b'BLEU = 2.31, 8.5/2.5/1.6/1.2 (BP=0.916, ratio=0.919, hyp_len=2862, ref_len=3113)\n'
Validation perplexity: 1236010.5820153113
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.31
Epoch 638 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.17085604877729565 Loss (std): 0.5442206295265077 Loss ratio: 3.1852581949608267 Tokens per Sec: 2873.1923740759257
Epoch Step: 10 / 67 Loss (mean): 1.4438464228987868 Loss (std): 7.483350019419024 Loss ratio: 5.182926591593326 Tokens per Sec: 2836.121240749677
Epoch Step: 15 / 67 Loss (mean): 0.4464672776093721 Loss (std): 0.9433470272550939 Loss ratio: 2.1129141474965096 Tokens per Sec: 2887.4367924750145
Epoch Step: 20 / 67 Loss (mean): 0.31889371925672094 Loss (std): 0.6695618021902312 Loss ratio: 2.0996393524176304 Tokens per Sec: 2988.4479495249548
Epoch Step: 25 / 67 Loss (mean): 0.246602400793563 Loss (std): 0.5713536390615909 Loss ratio: 2.3169021762277375 Tokens per Sec: 2861.6960341799504
Epoch Step: 30 / 67 Loss (mean): 0.08937323230247785 Loss (std): 0.12958002490777584 Loss ratio: 1.4498751087934332 Tokens per Sec: 2576.390079083101
Epoch Step: 35 / 67 Loss (mean): 0.040742150864042787 Loss (std): 0.04400965594575663 Loss ratio: 1.0801996215815302 Tokens per Sec: 2184.0393626140344
Epoch Step: 40 / 67 Loss (mean): 0.6754587470495608 Loss (std): 1.958874267289401 Loss ratio: 2.900064994118244 Tokens per Sec: 2739.9042690338297
Epoch Step: 45 / 67 Loss (mean): 0.0966392776426801 Loss (std): 0.20207223957365106 Loss ratio: 2.0909949298338626 Tokens per Sec: 2408.93463512532
Epoch Step: 50 / 67 Loss (mean): 0.5908793556427554 Loss (std): 1.1915935108682227 Loss ratio: 2.0166443445498508 Tokens per Sec: 3230.1489325674393
Epoch Step: 55 / 67 Loss (mean): 0.21289603024160897 Loss (std): 0.5943397420228003 Loss ratio: 2.7916901097136613 Tokens per Sec: 2588.9961822698324
Epoch Step: 60 / 67 Loss (mean): 0.3711356965388859 Loss (std): 1.0240278021896296 Loss ratio: 2.759173563037574 Tokens per Sec: 3131.4834580878255
Epoch Step: 65 / 67 Loss (mean): 0.21326674300689774 Loss (std): 0.5704827524566444 Loss ratio: 2.6749728739384047 Tokens per Sec: 2438.4671191423067
Mean loss per sample: 0.3678598648884893 Std loss per sample: 2.18287536399709 ratio: 5.933986206021124
Epoch ended with duration 0:00:11.480462
Train perplexity: 1.0510307346550753
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to start[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.1938665509224 Loss (std): 44.636055073124325 Loss ratio: 0.4499880549591225 Tokens per Sec: 4400.7382973725125
Mean loss per sample: 104.53212456508983 Std loss per sample: 53.256789134894895 ratio: 0.5094777261676441
Epoch ended with duration 0:00:01.042608
b'BLEU = 2.64, 8.9/2.8/1.8/1.4 (BP=0.943, ratio=0.945, hyp_len=2941, ref_len=3113)\n'
Validation perplexity: 1419727.096728555
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.64
Epoch 639 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.08889421897947614 Loss (std): 0.11408853212424491 Loss ratio: 1.2834190280763436 Tokens per Sec: 3049.819359502159
Epoch Step: 10 / 67 Loss (mean): 0.17492288092580566 Loss (std): 0.6663520016739022 Loss ratio: 3.8094044538206435 Tokens per Sec: 2227.4822359014997
Epoch Step: 15 / 67 Loss (mean): 0.22498242935398594 Loss (std): 0.4332326894847489 Loss ratio: 1.9256289956897181 Tokens per Sec: 2686.1078161910036
Epoch Step: 20 / 67 Loss (mean): 0.07967365255353798 Loss (std): 0.17000600344688196 Loss ratio: 2.133779461568474 Tokens per Sec: 2971.099695231396
Epoch Step: 25 / 67 Loss (mean): 0.12619896115575102 Loss (std): 0.22839538577324703 Loss ratio: 1.8098040085398817 Tokens per Sec: 2579.8493116293876
Epoch Step: 30 / 67 Loss (mean): 0.500547020626982 Loss (std): 0.9985163394483642 Loss ratio: 1.9948502304491376 Tokens per Sec: 3303.2845279304556
Epoch Step: 35 / 67 Loss (mean): 0.08855758488789434 Loss (std): 0.22502768848568996 Loss ratio: 2.541032355055234 Tokens per Sec: 3039.8834440204037
Epoch Step: 40 / 67 Loss (mean): 0.20919055198282877 Loss (std): 0.4805122117695233 Loss ratio: 2.297007236775042 Tokens per Sec: 2801.584940065725
Epoch Step: 45 / 67 Loss (mean): 0.4386576830256672 Loss (std): 0.9253356541670859 Loss ratio: 2.1094709838079857 Tokens per Sec: 2846.9482709345525
Epoch Step: 50 / 67 Loss (mean): 0.19348716280910594 Loss (std): 0.42864689069480794 Loss ratio: 2.215376381934496 Tokens per Sec: 2742.2201381590176
Epoch Step: 55 / 67 Loss (mean): 0.27051675790971785 Loss (std): 0.6324398354866918 Loss ratio: 2.3378952208859536 Tokens per Sec: 2520.700293064747
Epoch Step: 60 / 67 Loss (mean): 0.23186179574258858 Loss (std): 0.48244308071595604 Loss ratio: 2.080735548393497 Tokens per Sec: 2478.710348160179
Epoch Step: 65 / 67 Loss (mean): 0.0922942579395567 Loss (std): 0.21653351060550596 Loss ratio: 2.346121150324577 Tokens per Sec: 2729.6053711684085
Mean loss per sample: 0.3454227037222856 Std loss per sample: 2.0199999285673083 ratio: 5.847907235974148
Epoch ended with duration 0:00:11.465338
Train perplexity: 1.0478449151436628
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to method_4[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.85505375266075 Loss (std): 45.37468152557681 Loss ratio: 0.4590021430680323 Tokens per Sec: 4308.112222463873
Mean loss per sample: 105.42925472276622 Std loss per sample: 53.79051424271656 ratio: 0.5102048229797562
Epoch ended with duration 0:00:01.034647
b'BLEU = 2.92, 9.2/3.2/2.2/1.7 (BP=0.901, ratio=0.906, hyp_len=2820, ref_len=3113)\n'
Validation perplexity: 1603264.5161756712
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.92
Model saved best_on_validation_commit_msg_generator!
Epoch 640 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.10810720996323653 Loss (std): 0.15977307686958833 Loss ratio: 1.4779132393105099 Tokens per Sec: 2434.247801984175
Epoch Step: 10 / 67 Loss (mean): 0.14198622590811283 Loss (std): 0.41990727196442146 Loss ratio: 2.957380332344116 Tokens per Sec: 2426.0195840340466
Epoch Step: 15 / 67 Loss (mean): 0.1369929929205682 Loss (std): 0.2230254569053983 Loss ratio: 1.628006310035972 Tokens per Sec: 2433.08037955737
Epoch Step: 20 / 67 Loss (mean): 2.615131430157817 Loss (std): 11.924185138349424 Loss ratio: 4.559688664531032 Tokens per Sec: 3910.106413472697
Epoch Step: 25 / 67 Loss (mean): 0.3041732974511433 Loss (std): 0.6288604638188869 Loss ratio: 2.0674413865007177 Tokens per Sec: 3077.019232399388
Epoch Step: 30 / 67 Loss (mean): 0.13452762993711076 Loss (std): 0.3761331392795887 Loss ratio: 2.795954551904498 Tokens per Sec: 2727.65508152146
Epoch Step: 35 / 67 Loss (mean): 0.2335989669591072 Loss (std): 0.43973703972471506 Loss ratio: 1.8824442823914262 Tokens per Sec: 2655.0851716496622
Epoch Step: 40 / 67 Loss (mean): 0.49265488718810957 Loss (std): 1.2204119505731439 Loss ratio: 2.477214744663958 Tokens per Sec: 2895.077555993952
Epoch Step: 45 / 67 Loss (mean): 11.450310909312975 Loss (std): 19.110008183868484 Loss ratio: 1.6689510298209969 Tokens per Sec: 2500.6887197519804
Epoch Step: 50 / 67 Loss (mean): 0.5443262610242527 Loss (std): 1.0068166244112753 Loss ratio: 1.8496565323097944 Tokens per Sec: 2797.5174881466182
Epoch Step: 55 / 67 Loss (mean): 0.0986624941278933 Loss (std): 0.17447988882075585 Loss ratio: 1.7684520380620288 Tokens per Sec: 3028.453868285185
Epoch Step: 60 / 67 Loss (mean): 0.08360094040108379 Loss (std): 0.12423722444169083 Loss ratio: 1.4860744848760128 Tokens per Sec: 2623.6302875471356
Epoch Step: 65 / 67 Loss (mean): 0.1934769248837256 Loss (std): 0.5146879744921043 Loss ratio: 2.6602034056589328 Tokens per Sec: 2821.5651387401035
Mean loss per sample: 0.6189113220585079 Std loss per sample: 4.1533167621438 ratio: 6.710681504952615
Epoch ended with duration 0:00:11.434700
Train perplexity: 1.0873445434501097
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to method_4 ( ) and hint[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.66191723942757 Loss (std): 45.84657901494685 Loss ratio: 0.46468364185229416 Tokens per Sec: 4432.3696397713675
Mean loss per sample: 104.5884460725623 Std loss per sample: 53.861699347385844 ratio: 0.5149870886313503
Epoch ended with duration 0:00:01.030601
b'BLEU = 2.66, 8.7/2.9/1.9/1.4 (BP=0.933, ratio=0.935, hyp_len=2910, ref_len=3113)\n'
Validation perplexity: 1430604.7268884415
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.66
Model saved checkpoint_commit_msg_generator!
Epoch 641 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2830181873032416 Loss (std): 0.6266886952769665 Loss ratio: 2.214305381743884 Tokens per Sec: 2744.253313248429
Epoch Step: 10 / 67 Loss (mean): 0.15289132355246693 Loss (std): 0.2922074588708184 Loss ratio: 1.9112102118112875 Tokens per Sec: 2543.5986193667836
Epoch Step: 15 / 67 Loss (mean): 0.14435182449960848 Loss (std): 0.18718980801367324 Loss ratio: 1.2967609426660274 Tokens per Sec: 3084.356595056307
Epoch Step: 20 / 67 Loss (mean): 0.22200398239147034 Loss (std): 0.5411371234271515 Loss ratio: 2.4375108842549422 Tokens per Sec: 3421.76251239096
Epoch Step: 25 / 67 Loss (mean): 0.23940597532509855 Loss (std): 0.7576704182032814 Loss ratio: 3.1647932645557892 Tokens per Sec: 2334.142736276088
Epoch Step: 30 / 67 Loss (mean): 0.07658731278729647 Loss (std): 0.12685842834781066 Loss ratio: 1.6563895994122497 Tokens per Sec: 2426.8615705292523
Epoch Step: 35 / 67 Loss (mean): 0.15194368791298984 Loss (std): 0.25164376494144175 Loss ratio: 1.656164651509215 Tokens per Sec: 2730.133437479659
Epoch Step: 40 / 67 Loss (mean): 0.29146018823757913 Loss (std): 0.7386910999020402 Loss ratio: 2.5344494023997126 Tokens per Sec: 3216.8250957792616
Epoch Step: 45 / 67 Loss (mean): 0.22969513785392337 Loss (std): 0.7251073021620297 Loss ratio: 3.1568247762526345 Tokens per Sec: 2365.644946962251
Epoch Step: 50 / 67 Loss (mean): 0.481734405439056 Loss (std): 0.8618384843276923 Loss ratio: 1.7890324514858076 Tokens per Sec: 3344.5511401545905
Epoch Step: 55 / 67 Loss (mean): 0.29625862513057655 Loss (std): 0.6863934541021667 Loss ratio: 2.316872475188317 Tokens per Sec: 3130.642399184202
Epoch Step: 60 / 67 Loss (mean): 0.6794376569141605 Loss (std): 1.3475542933984634 Loss ratio: 1.9833376612045985 Tokens per Sec: 2822.2354367074286
Epoch Step: 65 / 67 Loss (mean): 0.215869403668421 Loss (std): 0.5684033443804264 Loss ratio: 2.633088963610162 Tokens per Sec: 2441.0966109274286
Mean loss per sample: 0.3130282894089299 Std loss per sample: 1.4963561924830486 ratio: 4.78025866386874
Epoch ended with duration 0:00:11.362376
Train perplexity: 1.0432623080397638
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.3015148639679 Loss (std): 45.68032200418095 Loss ratio: 0.46001636598150536 Tokens per Sec: 4430.32025594966
Mean loss per sample: 103.76982963970694 Std loss per sample: 53.53286690720341 ratio: 0.5158808402506943
Epoch ended with duration 0:00:01.018578
b'BLEU = 2.31, 7.9/2.6/1.6/1.2 (BP=0.914, ratio=0.917, hyp_len=2855, ref_len=3113)\n'
Validation perplexity: 1280384.023584102
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.31
Epoch 642 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.05884444660910049 Loss (std): 0.11888995873006016 Loss ratio: 2.020410855757346 Tokens per Sec: 2133.992789009115
Epoch Step: 10 / 67 Loss (mean): 0.05970195020972824 Loss (std): 0.078859558164307 Loss ratio: 1.320887473311669 Tokens per Sec: 2575.4382147437072
Epoch Step: 15 / 67 Loss (mean): 4.080580065975937 Loss (std): 14.706610918404195 Loss ratio: 3.604049101015953 Tokens per Sec: 2816.3883451973447
Epoch Step: 20 / 67 Loss (mean): 0.19045695179556787 Loss (std): 0.52638581446342 Loss ratio: 2.763804678699418 Tokens per Sec: 2611.563567913088
Epoch Step: 25 / 67 Loss (mean): 0.1803367184529634 Loss (std): 0.4551573576140054 Loss ratio: 2.5239305756399384 Tokens per Sec: 2893.136376555711
Epoch Step: 30 / 67 Loss (mean): 0.11416023057245184 Loss (std): 0.1776250925179228 Loss ratio: 1.5559279411685576 Tokens per Sec: 3018.480194308675
Epoch Step: 35 / 67 Loss (mean): 0.3058232699986547 Loss (std): 0.8010529366986062 Loss ratio: 2.61933284770034 Tokens per Sec: 2840.60713065903
Epoch Step: 40 / 67 Loss (mean): 0.08687271823760057 Loss (std): 0.18993665886836325 Loss ratio: 2.1863786781585266 Tokens per Sec: 2495.0563391723267
Epoch Step: 45 / 67 Loss (mean): 1.5524129966133842 Loss (std): 8.112789707722172 Loss ratio: 5.225922306383909 Tokens per Sec: 2638.3574215067797
Epoch Step: 50 / 67 Loss (mean): 0.24807898911603843 Loss (std): 0.3969943472267805 Loss ratio: 1.6002739637135786 Tokens per Sec: 3140.6398488337545
Epoch Step: 55 / 67 Loss (mean): 0.2510935998948298 Loss (std): 0.914379433485283 Loss ratio: 3.6415879730437952 Tokens per Sec: 3014.5984184133445
Epoch Step: 60 / 67 Loss (mean): 0.08678438361857843 Loss (std): 0.10692771206889333 Loss ratio: 1.2321077549947903 Tokens per Sec: 3352.8401134886044
Epoch Step: 65 / 67 Loss (mean): 0.24736366213619476 Loss (std): 0.5080142855178775 Loss ratio: 2.0537142809527635 Tokens per Sec: 2607.4047863963992
Mean loss per sample: 0.4357869282505178 Std loss per sample: 3.0595134453174886 ratio: 7.020663647714296
Epoch ended with duration 0:00:11.445859
Train perplexity: 1.0607347697546745
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.83708488941193 Loss (std): 45.971274722789076 Loss ratio: 0.4651217179687765 Tokens per Sec: 4409.486963835156
Mean loss per sample: 103.18826346404728 Std loss per sample: 52.82256927199597 ratio: 0.5119048184234667
Epoch ended with duration 0:00:01.022476
b'BLEU = 2.61, 8.3/2.8/1.9/1.5 (BP=0.922, ratio=0.925, hyp_len=2880, ref_len=3113)\n'
Validation perplexity: 1183347.655191189
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.61
Epoch 643 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.13322199128924694 Loss (std): 0.33614148686668593 Loss ratio: 2.523168161755421 Tokens per Sec: 2596.2811976843745
Epoch Step: 10 / 67 Loss (mean): 0.09821084454961237 Loss (std): 0.2591367699671153 Loss ratio: 2.6385759246394556 Tokens per Sec: 2343.3088503146405
Epoch Step: 15 / 67 Loss (mean): 0.07001761103811077 Loss (std): 0.14894058065162644 Loss ratio: 2.127187409615528 Tokens per Sec: 2259.6208672991115
Epoch Step: 20 / 67 Loss (mean): 2.124641103778231 Loss (std): 9.707317381277033 Loss ratio: 4.568921011654436 Tokens per Sec: 3332.4763087309652
Epoch Step: 25 / 67 Loss (mean): 0.33353624729079456 Loss (std): 0.7596788230515552 Loss ratio: 2.2776499682483595 Tokens per Sec: 3083.083669132122
Epoch Step: 30 / 67 Loss (mean): 0.31060909175448614 Loss (std): 1.156348821843617 Loss ratio: 3.722842803190148 Tokens per Sec: 2543.6091427790493
Epoch Step: 35 / 67 Loss (mean): 0.08842301220283844 Loss (std): 0.16214004057660358 Loss ratio: 1.8336860115629354 Tokens per Sec: 3069.421097163844
Epoch Step: 40 / 67 Loss (mean): 0.21597422900367746 Loss (std): 0.6812825569455006 Loss ratio: 3.154462271208757 Tokens per Sec: 3080.3616646375526
Epoch Step: 45 / 67 Loss (mean): 0.5597668795471691 Loss (std): 1.4389732908287023 Loss ratio: 2.570665295511551 Tokens per Sec: 2725.8060910117792
Epoch Step: 50 / 67 Loss (mean): 0.06674499081557206 Loss (std): 0.15954891177344374 Loss ratio: 2.3904252562458947 Tokens per Sec: 3037.1338312974444
Epoch Step: 55 / 67 Loss (mean): 0.6070236289842796 Loss (std): 0.918928633824843 Loss ratio: 1.5138267934684317 Tokens per Sec: 2862.721663563075
Epoch Step: 60 / 67 Loss (mean): 0.18562406301407464 Loss (std): 0.4504557878786657 Loss ratio: 2.4267100965488004 Tokens per Sec: 2590.2549743758927
Epoch Step: 65 / 67 Loss (mean): 0.5219022469591437 Loss (std): 1.3153663793576933 Loss ratio: 2.520330937491949 Tokens per Sec: 3158.580462909456
Mean loss per sample: 0.39987071093100635 Std loss per sample: 2.687476230823555 ratio: 6.720862912330811
Epoch ended with duration 0:00:11.400272
Train perplexity: 1.0555926819747736
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to method_4 ( ) and hint[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.51336839795113 Loss (std): 45.31542788995418 Loss ratio: 0.45999267537883365 Tokens per Sec: 4422.039986349402
Mean loss per sample: 103.48717417003068 Std loss per sample: 52.66249890440646 ratio: 0.5088794754206095
Epoch ended with duration 0:00:01.018429
b'BLEU = 2.80, 8.6/2.9/2.0/1.6 (BP=0.937, ratio=0.939, hyp_len=2922, ref_len=3113)\n'
Validation perplexity: 1232266.519380796
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.8
Epoch 644 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2517744195392879 Loss (std): 0.634010606167391 Loss ratio: 2.51816926964837 Tokens per Sec: 2484.3568331765805
Epoch Step: 10 / 67 Loss (mean): 0.1884780906002561 Loss (std): 0.5759750579510658 Loss ratio: 3.0559257901898715 Tokens per Sec: 3136.5486246750697
Epoch Step: 15 / 67 Loss (mean): 0.1804048827616498 Loss (std): 0.4971376141931521 Loss ratio: 2.755677155645329 Tokens per Sec: 2481.43393743115
Epoch Step: 20 / 67 Loss (mean): 0.22313740416393557 Loss (std): 0.7494090216219496 Loss ratio: 3.3585091859873497 Tokens per Sec: 2432.8368396496007
Epoch Step: 25 / 67 Loss (mean): 0.21215687127187266 Loss (std): 0.4235715268908323 Loss ratio: 1.9965015714623642 Tokens per Sec: 2478.5649246814946
Epoch Step: 30 / 67 Loss (mean): 0.3295100175546395 Loss (std): 0.7484270394628457 Loss ratio: 2.271333190465875 Tokens per Sec: 3138.0300615224487
Epoch Step: 35 / 67 Loss (mean): 0.13232267012790544 Loss (std): 0.295468160997823 Loss ratio: 2.232936810542126 Tokens per Sec: 2672.3851855627536
Epoch Step: 40 / 67 Loss (mean): 0.4523891431672382 Loss (std): 0.822781548651851 Loss ratio: 1.8187473352951067 Tokens per Sec: 2861.114854045227
Epoch Step: 45 / 67 Loss (mean): 0.2899883996110475 Loss (std): 0.7564121355083238 Loss ratio: 2.6084220490298096 Tokens per Sec: 2652.0311741661903
Epoch Step: 50 / 67 Loss (mean): 0.991640659452969 Loss (std): 1.730683649123536 Loss ratio: 1.7452729803135083 Tokens per Sec: 3065.1619339998447
Epoch Step: 55 / 67 Loss (mean): 0.3207689829523588 Loss (std): 1.143750296112491 Loss ratio: 3.565651159864054 Tokens per Sec: 2982.868058745961
Epoch Step: 60 / 67 Loss (mean): 0.20169182141398778 Loss (std): 0.4220139587962354 Loss ratio: 2.0923702103419437 Tokens per Sec: 2616.4788603246607
Epoch Step: 65 / 67 Loss (mean): 0.7341515010703006 Loss (std): 1.5500700547319177 Loss ratio: 2.111376265623799 Tokens per Sec: 2855.7256021200074
Mean loss per sample: 0.5088395838922426 Std loss per sample: 3.3470621070205646 ratio: 6.577833590339101
Epoch ended with duration 0:00:11.451509
Train perplexity: 1.0712710604746294
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api help[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.00165206193924 Loss (std): 45.34015584096755 Loss ratio: 0.4579737296969651 Tokens per Sec: 4397.536567320665
Mean loss per sample: 103.90487089508869 Std loss per sample: 53.49534087608467 ratio: 0.5148492117380924
Epoch ended with duration 0:00:01.023629
b'BLEU = 2.59, 8.5/2.7/1.8/1.4 (BP=0.926, ratio=0.928, hyp_len=2890, ref_len=3113)\n'
Validation perplexity: 1304031.4225759385
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.59
Epoch 645 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.204115040400211 Loss (std): 0.4930111071948336 Loss ratio: 2.4153590359053423 Tokens per Sec: 3222.211623945827
Epoch Step: 10 / 67 Loss (mean): 0.23293031103821704 Loss (std): 0.43598807226751213 Loss ratio: 1.871753273862152 Tokens per Sec: 2557.2975979308044
Epoch Step: 15 / 67 Loss (mean): 0.3215945753145206 Loss (std): 0.8321848096619499 Loss ratio: 2.587682982053009 Tokens per Sec: 2407.1855322014426
Epoch Step: 20 / 67 Loss (mean): 0.18373517880354484 Loss (std): 0.4492172653031745 Loss ratio: 2.444917017135249 Tokens per Sec: 2669.0988352810186
Epoch Step: 25 / 67 Loss (mean): 0.33756853827617306 Loss (std): 0.7039489744069437 Loss ratio: 2.0853512534127985 Tokens per Sec: 2826.8846137118644
Epoch Step: 30 / 67 Loss (mean): 0.1702036630913426 Loss (std): 0.393298670435923 Loss ratio: 2.3107532663668513 Tokens per Sec: 2919.804777310631
Epoch Step: 35 / 67 Loss (mean): 0.6178853602577874 Loss (std): 2.0495280869182775 Loss ratio: 3.317003798347311 Tokens per Sec: 2589.981269610489
Epoch Step: 40 / 67 Loss (mean): 0.13833745511510642 Loss (std): 0.34770487745608203 Loss ratio: 2.5134543437044385 Tokens per Sec: 2500.443757216933
Epoch Step: 45 / 67 Loss (mean): 0.2585424676799448 Loss (std): 0.43331928517142887 Loss ratio: 1.676008158581684 Tokens per Sec: 3118.9234190676248
Epoch Step: 50 / 67 Loss (mean): 0.3526768020046802 Loss (std): 1.1825283650069793 Loss ratio: 3.353008642148475 Tokens per Sec: 3077.433256621814
Epoch Step: 55 / 67 Loss (mean): 0.1901507258685342 Loss (std): 0.5493558155220709 Loss ratio: 2.8890545277322937 Tokens per Sec: 2736.544922261861
Epoch Step: 60 / 67 Loss (mean): 0.17152841259667184 Loss (std): 0.539905166266525 Loss ratio: 3.1476136116064115 Tokens per Sec: 3022.525246682643
Epoch Step: 65 / 67 Loss (mean): 1.7863714360628364 Loss (std): 8.344079787265635 Loss ratio: 4.670965745878691 Tokens per Sec: 2751.5741054998866
Mean loss per sample: 0.4021495576305477 Std loss per sample: 2.8430307124501732 ratio: 7.069585577070429
Epoch ended with duration 0:00:11.452253
Train perplexity: 1.055918200205219
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.58482640981674 Loss (std): 44.318034267961586 Loss ratio: 0.45414882516513166 Tokens per Sec: 4412.764522192378
Mean loss per sample: 103.39923224320299 Std loss per sample: 52.99470489956975 ratio: 0.5125251295379264
Epoch ended with duration 0:00:01.022034
b'BLEU = 2.84, 8.7/3.0/2.0/1.6 (BP=0.930, ratio=0.932, hyp_len=2901, ref_len=3113)\n'
Validation perplexity: 1217667.8928121154
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.84
Model saved checkpoint_commit_msg_generator!
Epoch 646 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.4290810562506522 Loss (std): 0.9705350257210033 Loss ratio: 2.2618920401698066 Tokens per Sec: 2522.4760836373475
Epoch Step: 10 / 67 Loss (mean): 4.353382829496695 Loss (std): 13.6863105828842 Loss ratio: 3.1438334552503635 Tokens per Sec: 2997.1056471542192
Epoch Step: 15 / 67 Loss (mean): 0.1327874179569335 Loss (std): 0.40202627027968496 Loss ratio: 3.0275930992955433 Tokens per Sec: 2622.3709529045814
Epoch Step: 20 / 67 Loss (mean): 0.6365742914858856 Loss (std): 1.0741349732387069 Loss ratio: 1.6873678180302747 Tokens per Sec: 2424.0212400763044
Epoch Step: 25 / 67 Loss (mean): 0.1366182823858253 Loss (std): 0.3664664983003331 Loss ratio: 2.6824118404987027 Tokens per Sec: 2986.504746677472
Epoch Step: 30 / 67 Loss (mean): 0.23201158919982845 Loss (std): 0.6321663672231825 Loss ratio: 2.7247189220306844 Tokens per Sec: 2671.163483536419
Epoch Step: 35 / 67 Loss (mean): 0.39660787108005024 Loss (std): 0.8679244192438993 Loss ratio: 2.1883691235888754 Tokens per Sec: 2766.2244403982945
Epoch Step: 40 / 67 Loss (mean): 0.1192436970613926 Loss (std): 0.24507282817272408 Loss ratio: 2.055226684615023 Tokens per Sec: 3067.371705879668
Epoch Step: 45 / 67 Loss (mean): 0.32150641236512456 Loss (std): 1.630948247093471 Loss ratio: 5.0728327161364835 Tokens per Sec: 3299.056695317191
Epoch Step: 50 / 67 Loss (mean): 1.433015476401124 Loss (std): 5.244882455666871 Loss ratio: 3.660031968976966 Tokens per Sec: 2941.724926754
Epoch Step: 55 / 67 Loss (mean): 0.31639581866147637 Loss (std): 0.7819603103858874 Loss ratio: 2.4714622136727282 Tokens per Sec: 2515.853938278574
Epoch Step: 60 / 67 Loss (mean): 0.22340118155170785 Loss (std): 0.545236372682773 Loss ratio: 2.440615438538198 Tokens per Sec: 2509.835024460029
Epoch Step: 65 / 67 Loss (mean): 0.1914175961892397 Loss (std): 0.5237768850608844 Loss ratio: 2.736304788526687 Tokens per Sec: 2761.7868999808297
Mean loss per sample: 0.42739625786274815 Std loss per sample: 2.6978925186815936 ratio: 6.312391531392352
Epoch ended with duration 0:00:11.435625
Train perplexity: 1.059531248257836
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to start[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.68278077244759 Loss (std): 46.34951353673538 Loss ratio: 0.46968187533762984 Tokens per Sec: 4280.775668503777
Mean loss per sample: 105.91432598611858 Std loss per sample: 54.12474994017854 ratio: 0.5110238812006628
Epoch ended with duration 0:00:01.039643
b'BLEU = 2.61, 8.7/2.8/1.9/1.5 (BP=0.911, ratio=0.915, hyp_len=2848, ref_len=3113)\n'
Validation perplexity: 1712197.6449200648
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.61
Epoch 647 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.21790922170293925 Loss (std): 0.6416952382582694 Loss ratio: 2.944782388021415 Tokens per Sec: 3141.3183251126557
Epoch Step: 10 / 67 Loss (mean): 1.051803915615892 Loss (std): 1.6957350944770628 Loss ratio: 1.6122159932102096 Tokens per Sec: 3484.963311158461
Epoch Step: 15 / 67 Loss (mean): 0.19217557337196922 Loss (std): 0.40576050458092355 Loss ratio: 2.1114051981806545 Tokens per Sec: 2746.6344073410073
Epoch Step: 20 / 67 Loss (mean): 0.26120805721802753 Loss (std): 0.6231947522698087 Loss ratio: 2.3858174931779947 Tokens per Sec: 3056.095677918716
Epoch Step: 25 / 67 Loss (mean): 0.1461233515387903 Loss (std): 0.3131541442972011 Loss ratio: 2.1430807670331213 Tokens per Sec: 2406.557031381537
Epoch Step: 30 / 67 Loss (mean): 0.1665156049025427 Loss (std): 0.35313629146372366 Loss ratio: 2.1207399250683157 Tokens per Sec: 2811.1948969070227
Epoch Step: 35 / 67 Loss (mean): 0.15681584372214274 Loss (std): 0.3435151581991039 Loss ratio: 2.19056410401852 Tokens per Sec: 2903.4952931099892
Epoch Step: 40 / 67 Loss (mean): 0.4947409691303619 Loss (std): 0.9951941481763781 Loss ratio: 2.0115458598985545 Tokens per Sec: 2614.1652298858235
Epoch Step: 45 / 67 Loss (mean): 2.8915371862221946 Loss (std): 12.601606617923286 Loss ratio: 4.358099448960343 Tokens per Sec: 2418.2517184713492
Epoch Step: 50 / 67 Loss (mean): 0.17326681804843247 Loss (std): 0.36561196923818845 Loss ratio: 2.1101095602505415 Tokens per Sec: 2765.8486116977965
Epoch Step: 55 / 67 Loss (mean): 0.22979487262807652 Loss (std): 0.5622864250795808 Loss ratio: 2.4469058802266774 Tokens per Sec: 2728.0830503894736
Epoch Step: 60 / 67 Loss (mean): 1.373214913681295 Loss (std): 6.021371963338534 Loss ratio: 4.384872246396251 Tokens per Sec: 2281.7335364231076
Epoch Step: 65 / 67 Loss (mean): 0.22556038494258246 Loss (std): 0.5632846376932507 Loss ratio: 2.4972675846276715 Tokens per Sec: 2716.478362522351
Mean loss per sample: 0.5425592650433596 Std loss per sample: 3.5709636239018465 ratio: 6.581702412945554
Epoch ended with duration 0:00:11.469029
Train perplexity: 1.076169646871866
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint command 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.32913359999657 Loss (std): 45.636268710710816 Loss ratio: 0.45944494889576276 Tokens per Sec: 4417.788529948342
Mean loss per sample: 103.55568393112206 Std loss per sample: 53.50605867697911 ratio: 0.5166887672970956
Epoch ended with duration 0:00:01.021781
b'BLEU = 2.55, 8.1/2.6/1.7/1.3 (BP=0.970, ratio=0.970, hyp_len=3020, ref_len=3113)\n'
Validation perplexity: 1243760.525458456
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.55
Epoch 648 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3177545939142874 Loss (std): 0.6487755522914771 Loss ratio: 2.0417503467046045 Tokens per Sec: 2390.2866466131622
Epoch Step: 10 / 67 Loss (mean): 1.60672906714899 Loss (std): 2.298397582309289 Loss ratio: 1.4304823565478955 Tokens per Sec: 2524.1330110918766
Epoch Step: 15 / 67 Loss (mean): 0.2650751106120879 Loss (std): 0.6440628314148523 Loss ratio: 2.4297371032974002 Tokens per Sec: 3464.4381944420443
Epoch Step: 20 / 67 Loss (mean): 0.463188636029372 Loss (std): 0.9520382469309667 Loss ratio: 2.05540070044075 Tokens per Sec: 2929.002711727147
Epoch Step: 25 / 67 Loss (mean): 0.19089823959507157 Loss (std): 0.406578099641446 Loss ratio: 2.129815866840202 Tokens per Sec: 3176.9610778838824
Epoch Step: 30 / 67 Loss (mean): 0.11803020909519546 Loss (std): 0.25727548606199385 Loss ratio: 2.1797426949781324 Tokens per Sec: 2887.6001420052944
Epoch Step: 35 / 67 Loss (mean): 0.26212549663068785 Loss (std): 0.6996776873748862 Loss ratio: 2.6692469689839884 Tokens per Sec: 2973.1339129582016
Epoch Step: 40 / 67 Loss (mean): 0.247959644497314 Loss (std): 0.8193242745726349 Loss ratio: 3.3042645960944266 Tokens per Sec: 3357.711595997094
Epoch Step: 45 / 67 Loss (mean): 0.3589923991312389 Loss (std): 0.717528571362599 Loss ratio: 1.9987291460738918 Tokens per Sec: 2861.677439231548
Epoch Step: 50 / 67 Loss (mean): 0.29076854226150317 Loss (std): 0.7639596352831083 Loss ratio: 2.627380628390123 Tokens per Sec: 3033.7493383938563
Epoch Step: 55 / 67 Loss (mean): 0.38744069115819 Loss (std): 1.0146015846053194 Loss ratio: 2.6187274794816604 Tokens per Sec: 2677.9972037857024
Epoch Step: 60 / 67 Loss (mean): 0.3935041766962968 Loss (std): 1.9990080468716902 Loss ratio: 5.080017354973357 Tokens per Sec: 2446.5291063456143
Epoch Step: 65 / 67 Loss (mean): 0.06074205514354011 Loss (std): 0.1336621241609003 Loss ratio: 2.2004873533673184 Tokens per Sec: 2300.1116691642105
Mean loss per sample: 0.39738614997793004 Std loss per sample: 1.5613839396058844 ratio: 3.9291352748267654
Epoch ended with duration 0:00:11.379779
Train perplexity: 1.0552378931658055
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to run[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.72387540340424 Loss (std): 45.77307512654662 Loss ratio: 0.45899815807784067 Tokens per Sec: 4307.427707284474
Mean loss per sample: 108.4298192708463 Std loss per sample: 53.408688562358 ratio: 0.49256458160230543
Epoch ended with duration 0:00:01.049599
b'BLEU = 2.39, 7.3/2.6/1.7/1.4 (BP=0.933, ratio=0.935, hyp_len=2912, ref_len=3113)\n'
Validation perplexity: 2407700.432680745
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.39
Epoch 649 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2425852151827712 Loss (std): 0.4135792266198751 Loss ratio: 1.7048822464644917 Tokens per Sec: 2893.95009158119
Epoch Step: 10 / 67 Loss (mean): 2.153679522616585 Loss (std): 7.587642669796688 Loss ratio: 3.5231066600745593 Tokens per Sec: 3071.4197231173357
Epoch Step: 15 / 67 Loss (mean): 0.24047633314330596 Loss (std): 0.6131744349352736 Loss ratio: 2.5498327711520257 Tokens per Sec: 3401.500753029906
Epoch Step: 20 / 67 Loss (mean): 0.2753577628941457 Loss (std): 0.5832136223914762 Loss ratio: 2.118021356149955 Tokens per Sec: 2602.991245049222
Epoch Step: 25 / 67 Loss (mean): 0.13051470696700562 Loss (std): 0.20106603723614966 Loss ratio: 1.5405623006683802 Tokens per Sec: 2480.5615099164597
Epoch Step: 30 / 67 Loss (mean): 0.22015966388835295 Loss (std): 0.34668347440693725 Loss ratio: 1.5746911504313836 Tokens per Sec: 2545.0548527477495
Epoch Step: 35 / 67 Loss (mean): 0.23200084617201355 Loss (std): 0.5765750535619408 Loss ratio: 2.485228235480003 Tokens per Sec: 2814.239555987816
Epoch Step: 40 / 67 Loss (mean): 0.3676568048322224 Loss (std): 0.878156770472362 Loss ratio: 2.3885230979829206 Tokens per Sec: 2984.8587429018994
Epoch Step: 45 / 67 Loss (mean): 1.4190508301544469 Loss (std): 6.039406134487921 Loss ratio: 4.255947712479477 Tokens per Sec: 3074.342269595144
Epoch Step: 50 / 67 Loss (mean): 0.47387727005479974 Loss (std): 0.8230883403518584 Loss ratio: 1.7369230228254575 Tokens per Sec: 2434.8127341458344
Epoch Step: 55 / 67 Loss (mean): 0.16640095189313797 Loss (std): 0.4223186016810542 Loss ratio: 2.537957847454295 Tokens per Sec: 2181.447166562254
Epoch Step: 60 / 67 Loss (mean): 0.10384791743899768 Loss (std): 0.17237062099924233 Loss ratio: 1.6598370506610904 Tokens per Sec: 2867.7035735421914
Epoch Step: 65 / 67 Loss (mean): 0.7856848088488846 Loss (std): 4.136070251758646 Loss ratio: 5.264286906372096 Tokens per Sec: 2981.263928469413
Mean loss per sample: 0.42537280597632454 Std loss per sample: 2.1115703229501763 ratio: 4.964046345425529
Epoch ended with duration 0:00:11.423450
Train perplexity: 1.0592412174817731
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.90411224961281 Loss (std): 46.816185075960966 Loss ratio: 0.4733492269543549 Tokens per Sec: 4277.314387308581
Mean loss per sample: 104.71181759568023 Std loss per sample: 53.73794801332232 ratio: 0.5131985027785366
Epoch ended with duration 0:00:01.040032
b'BLEU = 2.58, 8.5/2.9/1.7/1.3 (BP=0.943, ratio=0.945, hyp_len=2941, ref_len=3113)\n'
Validation perplexity: 1454724.1455940073
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.58
Epoch 650 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3378743813955225 Loss (std): 0.8707032511153141 Loss ratio: 2.577002871656172 Tokens per Sec: 2708.7553654632707
Epoch Step: 10 / 67 Loss (mean): 0.8492411840597924 Loss (std): 1.4241229977769176 Loss ratio: 1.6769358628710234 Tokens per Sec: 3081.688164760097
Epoch Step: 15 / 67 Loss (mean): 0.19713177114863356 Loss (std): 0.35589392798836406 Loss ratio: 1.8053605764036222 Tokens per Sec: 2708.12176601256
Epoch Step: 20 / 67 Loss (mean): 0.3289485892710218 Loss (std): 0.6631405068106344 Loss ratio: 2.0159396587783234 Tokens per Sec: 2861.1204205405243
Epoch Step: 25 / 67 Loss (mean): 0.3422348125504868 Loss (std): 0.9055535076519978 Loss ratio: 2.646000565820316 Tokens per Sec: 2635.0425778828394
Epoch Step: 30 / 67 Loss (mean): 1.2539210546938193 Loss (std): 5.79349417897795 Loss ratio: 4.620302177151493 Tokens per Sec: 2842.382973453641
Epoch Step: 35 / 67 Loss (mean): 0.34369859493745025 Loss (std): 0.7292239287160751 Loss ratio: 2.1216959843806946 Tokens per Sec: 2831.9740137417766
Epoch Step: 40 / 67 Loss (mean): 0.14719361813968135 Loss (std): 0.3309276094748323 Loss ratio: 2.248246993703179 Tokens per Sec: 2847.657479788665
Epoch Step: 45 / 67 Loss (mean): 0.2827695838195723 Loss (std): 0.7936497539052232 Loss ratio: 2.806701283726576 Tokens per Sec: 2787.658743190556
Epoch Step: 50 / 67 Loss (mean): 0.12404912083729869 Loss (std): 0.19511970323720468 Loss ratio: 1.5729229028001037 Tokens per Sec: 2698.226460941727
Epoch Step: 55 / 67 Loss (mean): 0.17517559908537805 Loss (std): 0.3193951229778969 Loss ratio: 1.8232854612486773 Tokens per Sec: 2943.7190359047077
Epoch Step: 60 / 67 Loss (mean): 0.22032147766731214 Loss (std): 0.649740906770673 Loss ratio: 2.949058410691076 Tokens per Sec: 2571.9614312907333
Epoch Step: 65 / 67 Loss (mean): 0.21227907960201264 Loss (std): 0.5444640107411292 Loss ratio: 2.56485006323707 Tokens per Sec: 2394.670591888581
Mean loss per sample: 0.36169869630394624 Std loss per sample: 1.821616935975115 ratio: 5.036282835933575
Epoch ended with duration 0:00:11.475720
Train perplexity: 1.0501549559389998
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.01010110974312 Loss (std): 47.20011760966923 Loss ratio: 0.47195350355536164 Tokens per Sec: 4265.690373107693
Mean loss per sample: 108.14821039799784 Std loss per sample: 54.28404043400777 ratio: 0.5019411808502079
Epoch ended with duration 0:00:01.055253
b'BLEU = 2.50, 8.8/2.9/1.8/1.5 (BP=0.867, ratio=0.875, hyp_len=2724, ref_len=3113)\n'
Validation perplexity: 2317546.466004098
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.5
Model saved checkpoint_commit_msg_generator!
Epoch 651 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2052656500854937 Loss (std): 0.5213152865928171 Loss ratio: 2.5397103040654287 Tokens per Sec: 2779.243008224489
Epoch Step: 10 / 67 Loss (mean): 1.335182576477564 Loss (std): 5.743428858847858 Loss ratio: 4.301605608125885 Tokens per Sec: 2913.634305953494
Epoch Step: 15 / 67 Loss (mean): 0.6349094848937966 Loss (std): 1.387341604494216 Loss ratio: 2.1851014002827207 Tokens per Sec: 2780.9297881808557
Epoch Step: 20 / 67 Loss (mean): 0.17820528185802686 Loss (std): 0.42264947921926865 Loss ratio: 2.3717000686656773 Tokens per Sec: 2953.370768255481
Epoch Step: 25 / 67 Loss (mean): 0.23840049429054488 Loss (std): 0.4333946977223132 Loss ratio: 1.817927009807806 Tokens per Sec: 2545.4428003112794
Epoch Step: 30 / 67 Loss (mean): 12.168519367154659 Loss (std): 25.270866160124136 Loss ratio: 2.076741253199252 Tokens per Sec: 2992.9992018423836
Epoch Step: 35 / 67 Loss (mean): 0.3143052428495139 Loss (std): 0.740528712687189 Loss ratio: 2.356081323917802 Tokens per Sec: 2739.7355348130654
Epoch Step: 40 / 67 Loss (mean): 0.31708552769214293 Loss (std): 0.6885469768185064 Loss ratio: 2.171486607509296 Tokens per Sec: 2473.093913594464
Epoch Step: 45 / 67 Loss (mean): 0.14716186928308161 Loss (std): 0.3942480429369997 Loss ratio: 2.6790094802249445 Tokens per Sec: 2922.864231072004
Epoch Step: 50 / 67 Loss (mean): 0.2249361015269642 Loss (std): 0.40662497630733185 Loss ratio: 1.8077355015357004 Tokens per Sec: 2825.6020635198556
Epoch Step: 55 / 67 Loss (mean): 0.14589769677877484 Loss (std): 0.27611782422445086 Loss ratio: 1.8925440930238209 Tokens per Sec: 2554.215815799794
Epoch Step: 60 / 67 Loss (mean): 0.2686610152377398 Loss (std): 0.7793093341836774 Loss ratio: 2.9007161068533214 Tokens per Sec: 2581.555292223968
Epoch Step: 65 / 67 Loss (mean): 0.1536564459775036 Loss (std): 0.3125128835802998 Loss ratio: 2.0338416757735884 Tokens per Sec: 2583.8284563449865
Mean loss per sample: 0.6269492732932058 Std loss per sample: 4.522152789409735 ratio: 7.212948450607513
Epoch ended with duration 0:00:11.477327
Train perplexity: 1.0885277092371768
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.46861040592194 Loss (std): 45.76578761917282 Loss ratio: 0.4601028146709499 Tokens per Sec: 4379.138532281181
Mean loss per sample: 103.3277159998285 Std loss per sample: 53.03996179998001 ratio: 0.5133178575249651
Epoch ended with duration 0:00:01.027956
b'BLEU = 2.61, 8.3/2.8/1.7/1.4 (BP=0.956, ratio=0.957, hyp_len=2978, ref_len=3113)\n'
Validation perplexity: 1205923.5852543695
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.61
Epoch 652 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1366124958403816 Loss (std): 0.3488509251022236 Loss ratio: 2.5535799119710245 Tokens per Sec: 2639.411328052802
Epoch Step: 10 / 67 Loss (mean): 0.26250919687481655 Loss (std): 0.6911579784688512 Loss ratio: 2.632890529920921 Tokens per Sec: 2687.8583729821885
Epoch Step: 15 / 67 Loss (mean): 0.23120101635504398 Loss (std): 0.512232671426613 Loss ratio: 2.215529496808105 Tokens per Sec: 2682.865730033166
Epoch Step: 20 / 67 Loss (mean): 0.16322091610709322 Loss (std): 0.38401514702658707 Loss ratio: 2.352732457246015 Tokens per Sec: 2564.5222555648875
Epoch Step: 25 / 67 Loss (mean): 0.41024953111309514 Loss (std): 0.7552588443553538 Loss ratio: 1.8409743024109602 Tokens per Sec: 2928.798750278243
Epoch Step: 30 / 67 Loss (mean): 0.2607603490969268 Loss (std): 0.6268220523003954 Loss ratio: 2.403824256529893 Tokens per Sec: 2650.960501969126
Epoch Step: 35 / 67 Loss (mean): 0.44347369565548433 Loss (std): 0.7837421750972082 Loss ratio: 1.7672799599506885 Tokens per Sec: 2544.5640441354676
Epoch Step: 40 / 67 Loss (mean): 0.3809251794282318 Loss (std): 0.8495051671834128 Loss ratio: 2.2301103026544977 Tokens per Sec: 2892.581513781513
Epoch Step: 45 / 67 Loss (mean): 0.7775646914651588 Loss (std): 5.062643590008069 Loss ratio: 6.510896965329754 Tokens per Sec: 3474.576572298874
Epoch Step: 50 / 67 Loss (mean): 0.1440769241758062 Loss (std): 0.28332382913571413 Loss ratio: 1.9664761082072757 Tokens per Sec: 3100.535864397844
Epoch Step: 55 / 67 Loss (mean): 0.2661673785187304 Loss (std): 0.4306681825602446 Loss ratio: 1.6180351813095613 Tokens per Sec: 2400.4237142634165
Epoch Step: 60 / 67 Loss (mean): 0.16130677001456206 Loss (std): 0.35063162496645645 Loss ratio: 2.1736944142815764 Tokens per Sec: 2997.751910626204
Epoch Step: 65 / 67 Loss (mean): 0.4049222185758481 Loss (std): 0.647171498482151 Loss ratio: 1.598261267949973 Tokens per Sec: 2612.3344252534503
Mean loss per sample: 0.5751232626993223 Std loss per sample: 3.942789582392691 ratio: 6.855555735804071
Epoch ended with duration 0:00:11.455386
Train perplexity: 1.0809216029088324
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for zoneinfo provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.15742349624634 Loss (std): 45.25341324333131 Loss ratio: 0.4563794786886975 Tokens per Sec: 4288.726104409406
Mean loss per sample: 105.43846642738971 Std loss per sample: 53.52873777341054 ratio: 0.507677506958745
Epoch ended with duration 0:00:01.038594
b'BLEU = 2.56, 8.1/2.8/1.8/1.3 (BP=0.941, ratio=0.943, hyp_len=2936, ref_len=3113)\n'
Validation perplexity: 1605267.2027633237
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.56
Epoch 653 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.10193317041557748 Loss (std): 0.16910165709760105 Loss ratio: 1.658946311668521 Tokens per Sec: 2390.444268642283
Epoch Step: 10 / 67 Loss (mean): 0.20671231033702497 Loss (std): 0.41686016813476034 Loss ratio: 2.0166199461227494 Tokens per Sec: 2437.603637724031
Epoch Step: 15 / 67 Loss (mean): 0.1923288567668351 Loss (std): 0.39415905569358695 Loss ratio: 2.0494015423355605 Tokens per Sec: 2595.677024644535
Epoch Step: 20 / 67 Loss (mean): 0.13606990944481367 Loss (std): 0.25020364521422517 Loss ratio: 1.838787475019972 Tokens per Sec: 2463.9052693901717
Epoch Step: 25 / 67 Loss (mean): 0.1127948015811171 Loss (std): 0.26014067085547193 Loss ratio: 2.306317908351389 Tokens per Sec: 3612.4071228075427
Epoch Step: 30 / 67 Loss (mean): 0.1713941238776897 Loss (std): 0.5813208446961142 Loss ratio: 3.391719806630923 Tokens per Sec: 3062.5212234442583
Epoch Step: 35 / 67 Loss (mean): 0.44590213403716916 Loss (std): 0.8458101681503788 Loss ratio: 1.8968515815173794 Tokens per Sec: 2916.084773016063
Epoch Step: 40 / 67 Loss (mean): 0.16991708976684095 Loss (std): 0.293232377365174 Loss ratio: 1.725737992379374 Tokens per Sec: 2648.23596655634
Epoch Step: 45 / 67 Loss (mean): 0.14914518786736153 Loss (std): 0.491082164154448 Loss ratio: 3.292645047262131 Tokens per Sec: 2318.7032484168435
Epoch Step: 50 / 67 Loss (mean): 0.27647765978690586 Loss (std): 0.5631990596641094 Loss ratio: 2.0370508781729164 Tokens per Sec: 2745.6654312714995
Epoch Step: 55 / 67 Loss (mean): 0.7391643523442326 Loss (std): 2.9865374560797213 Loss ratio: 4.0404240905395765 Tokens per Sec: 2580.729817830743
Epoch Step: 60 / 67 Loss (mean): 0.24059434805349156 Loss (std): 0.48822625162092714 Loss ratio: 2.0292507100473505 Tokens per Sec: 2906.908014655744
Epoch Step: 65 / 67 Loss (mean): 0.44118916737352265 Loss (std): 0.8777850055526896 Loss ratio: 1.9895887534553474 Tokens per Sec: 3160.9487016118624
Mean loss per sample: 0.5181009547490226 Std loss per sample: 3.3988567556739278 ratio: 6.560220984963046
Epoch ended with duration 0:00:11.490205
Train perplexity: 1.0726142696680556
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable creation print[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.36783701181412 Loss (std): 46.12767369554603 Loss ratio: 0.4642113090381728 Tokens per Sec: 4405.833904795126
Mean loss per sample: 103.34156708309396 Std loss per sample: 52.97498656071346 ratio: 0.5126203139354159
Epoch ended with duration 0:00:01.021682
b'BLEU = 2.48, 8.7/2.7/1.7/1.3 (BP=0.916, ratio=0.920, hyp_len=2863, ref_len=3113)\n'
Validation perplexity: 1208189.313892617
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.48
Epoch 654 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.20104114407331508 Loss (std): 0.40348037178989715 Loss ratio: 2.006954216509816 Tokens per Sec: 2958.249566885604
Epoch Step: 10 / 67 Loss (mean): 0.37305272671619605 Loss (std): 0.6470861910953015 Loss ratio: 1.7345703294847632 Tokens per Sec: 3650.675434062521
Epoch Step: 15 / 67 Loss (mean): 0.3317113599186996 Loss (std): 1.954878126019027 Loss ratio: 5.893310758178905 Tokens per Sec: 3244.5005552704743
Epoch Step: 20 / 67 Loss (mean): 0.1482710450227387 Loss (std): 0.341652197773417 Loss ratio: 2.3042408429846946 Tokens per Sec: 2655.308041353047
Epoch Step: 25 / 67 Loss (mean): 0.19681804844003636 Loss (std): 0.5788416488412931 Loss ratio: 2.940998823172693 Tokens per Sec: 2545.770902489069
Epoch Step: 30 / 67 Loss (mean): 0.4455519895600446 Loss (std): 0.8752644947233105 Loss ratio: 1.964449750493945 Tokens per Sec: 2936.5036670962772
Epoch Step: 35 / 67 Loss (mean): 0.12833693442826188 Loss (std): 0.3293187529067333 Loss ratio: 2.56604814797736 Tokens per Sec: 2301.0052922745
Epoch Step: 40 / 67 Loss (mean): 3.592095537735986 Loss (std): 11.300558956995728 Loss ratio: 3.1459516703495605 Tokens per Sec: 2759.500224454439
Epoch Step: 45 / 67 Loss (mean): 0.12153885572342915 Loss (std): 0.27770085938726385 Loss ratio: 2.2848730781141557 Tokens per Sec: 2510.6831004530563
Epoch Step: 50 / 67 Loss (mean): 0.07506590298544324 Loss (std): 0.13422605397891635 Loss ratio: 1.788109496330783 Tokens per Sec: 2442.967083809929
Epoch Step: 55 / 67 Loss (mean): 0.42428390615623357 Loss (std): 1.1472002665746839 Loss ratio: 2.703850534816778 Tokens per Sec: 2732.1697542840125
Epoch Step: 60 / 67 Loss (mean): 1.5612693166167446 Loss (std): 5.649073295055215 Loss ratio: 3.618256783074878 Tokens per Sec: 2519.3271349172505
Epoch Step: 65 / 67 Loss (mean): 0.12362096968718106 Loss (std): 0.23962437260657055 Loss ratio: 1.9383796552715322 Tokens per Sec: 3050.0351135414476
Mean loss per sample: 0.3793901418657215 Std loss per sample: 2.3342132437688257 ratio: 6.152540580759158
Epoch ended with duration 0:00:11.421138
Train perplexity: 1.05267166761897
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.00275826454163 Loss (std): 45.56530526077035 Loss ratio: 0.4649390085305011 Tokens per Sec: 4400.873820748491
Mean loss per sample: 102.60070041719763 Std loss per sample: 52.96512223241864 ratio: 0.5162257374174882
Epoch ended with duration 0:00:01.022909
b'BLEU = 2.64, 8.7/2.9/1.9/1.5 (BP=0.909, ratio=0.913, hyp_len=2843, ref_len=3113)\n'
Validation perplexity: 1092776.932103237
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.64
Epoch 655 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.153199040580148 Loss (std): 0.2963687109608002 Loss ratio: 1.9345337270944016 Tokens per Sec: 2661.7382389536083
Epoch Step: 10 / 67 Loss (mean): 0.1920994877036719 Loss (std): 0.5368099236045301 Loss ratio: 2.7944370389607713 Tokens per Sec: 2772.429077582167
Epoch Step: 15 / 67 Loss (mean): 0.3202976430175113 Loss (std): 0.6620567229387649 Loss ratio: 2.067004666976488 Tokens per Sec: 2469.6633845942683
Epoch Step: 20 / 67 Loss (mean): 0.10468398476587026 Loss (std): 0.22103872938338903 Loss ratio: 2.1114856286541883 Tokens per Sec: 3220.107442208138
Epoch Step: 25 / 67 Loss (mean): 0.3662705269125581 Loss (std): 1.133400915770187 Loss ratio: 3.094436577586736 Tokens per Sec: 2927.734943478291
Epoch Step: 30 / 67 Loss (mean): 0.3956633419402351 Loss (std): 0.7713218633350688 Loss ratio: 1.9494397928114777 Tokens per Sec: 3352.164042356571
Epoch Step: 35 / 67 Loss (mean): 0.13153476522165874 Loss (std): 0.26678415061966465 Loss ratio: 2.0282405960894625 Tokens per Sec: 2437.012909941248
Epoch Step: 40 / 67 Loss (mean): 0.4569849294521191 Loss (std): 2.8462556758842625 Loss ratio: 6.228335974441539 Tokens per Sec: 3525.751303482545
Epoch Step: 45 / 67 Loss (mean): 0.20484309924722766 Loss (std): 0.475053307266099 Loss ratio: 2.3191081809046024 Tokens per Sec: 2812.9320647922336
Epoch Step: 50 / 67 Loss (mean): 0.22894420147349592 Loss (std): 0.6885893819647455 Loss ratio: 3.007673387371032 Tokens per Sec: 2997.170278588312
Epoch Step: 55 / 67 Loss (mean): 0.18535268051709863 Loss (std): 0.5185758869785804 Loss ratio: 2.7977792688611385 Tokens per Sec: 2380.0258439202908
Epoch Step: 60 / 67 Loss (mean): 0.12425715876088361 Loss (std): 0.22687180709098168 Loss ratio: 1.8258248406240023 Tokens per Sec: 2217.3874447663284
Epoch Step: 65 / 67 Loss (mean): 0.1981421528107603 Loss (std): 0.4747679115760592 Loss ratio: 2.3960974726538677 Tokens per Sec: 2626.6271960083495
Mean loss per sample: 0.34375791023385005 Std loss per sample: 2.4140312845462137 ratio: 7.022474865826382
Epoch ended with duration 0:00:11.444686
Train perplexity: 1.0476089187597437
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to exception[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for zoneinfo objects[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.22123804688454 Loss (std): 46.42330825258879 Loss ratio: 0.46787672847473044 Tokens per Sec: 4404.763023189765
Mean loss per sample: 107.21901055388763 Std loss per sample: 53.887799145063944 ratio: 0.5025955645988756
Epoch ended with duration 0:00:01.054548
b'BLEU = 2.59, 8.6/2.9/1.9/1.4 (BP=0.917, ratio=0.921, hyp_len=2866, ref_len=3113)\n'
Validation perplexity: 2043340.2492416212
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.59
Model saved checkpoint_commit_msg_generator!
Epoch 656 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3427549002453816 Loss (std): 0.7590394115488743 Loss ratio: 2.214525338676327 Tokens per Sec: 3267.442947947243
Epoch Step: 10 / 67 Loss (mean): 0.9292562238551909 Loss (std): 1.5815495942479678 Loss ratio: 1.7019521135802755 Tokens per Sec: 3299.584461784956
Epoch Step: 15 / 67 Loss (mean): 0.2832961828862608 Loss (std): 0.5955839045027158 Loss ratio: 2.1023364961533346 Tokens per Sec: 2373.718879888202
Epoch Step: 20 / 67 Loss (mean): 0.11267018401849782 Loss (std): 0.25030545657858005 Loss ratio: 2.221576708683512 Tokens per Sec: 2628.998511278014
Epoch Step: 25 / 67 Loss (mean): 0.23433552179812978 Loss (std): 0.4274848925791645 Loss ratio: 1.8242428177296348 Tokens per Sec: 2422.760458377278
Epoch Step: 30 / 67 Loss (mean): 0.3296759943041252 Loss (std): 0.7035243162657929 Loss ratio: 2.1339870916315298 Tokens per Sec: 2844.881476624353
Epoch Step: 35 / 67 Loss (mean): 0.12095599563326687 Loss (std): 0.3593821728173539 Loss ratio: 2.971181138527308 Tokens per Sec: 2951.8895767791373
Epoch Step: 40 / 67 Loss (mean): 0.2232619980150048 Loss (std): 0.7332768169476431 Loss ratio: 3.2843781004699317 Tokens per Sec: 2467.5171593506975
Epoch Step: 45 / 67 Loss (mean): 0.11800751378541463 Loss (std): 0.2476061451648437 Loss ratio: 2.098223555621143 Tokens per Sec: 2652.177495873879
Epoch Step: 50 / 67 Loss (mean): 0.37990384671684296 Loss (std): 0.9652371489547171 Loss ratio: 2.54074065660658 Tokens per Sec: 2746.383274074947
Epoch Step: 55 / 67 Loss (mean): 0.04622080999736985 Loss (std): 0.06307215049342957 Loss ratio: 1.364583409443033 Tokens per Sec: 2389.957306469382
Epoch Step: 60 / 67 Loss (mean): 0.13839642802486196 Loss (std): 0.5784253937322305 Loss ratio: 4.179482100710867 Tokens per Sec: 2986.828953238554
Epoch Step: 65 / 67 Loss (mean): 0.17674752850416553 Loss (std): 0.4474942013346945 Loss ratio: 2.5318272064220015 Tokens per Sec: 3159.397669542572
Mean loss per sample: 0.3493203247834057 Std loss per sample: 2.129671236048357 ratio: 6.096614153123924
Epoch ended with duration 0:00:11.410138
Train perplexity: 1.0483976387597327
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 119.32498899102211 Loss (std): 46.35866576336218 Loss ratio: 0.3885076056185529 Tokens per Sec: 4301.365621547989
Mean loss per sample: 107.12607232371315 Std loss per sample: 54.30311966823398 ratio: 0.5069085283379103
Epoch ended with duration 0:00:01.035989
b'BLEU = 2.09, 8.4/2.5/1.3/1.0 (BP=0.915, ratio=0.919, hyp_len=2860, ref_len=3113)\n'
Validation perplexity: 2017766.1860581464
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.09
Epoch 657 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.9302111752508608 Loss (std): 1.3924330933243787 Loss ratio: 1.4968999839728492 Tokens per Sec: 2919.097124433898
Epoch Step: 10 / 67 Loss (mean): 0.09747681928001839 Loss (std): 0.1641359831037034 Loss ratio: 1.6838463166529414 Tokens per Sec: 2899.1789554732354
Epoch Step: 15 / 67 Loss (mean): 1.3755080409755465 Loss (std): 6.540137163859239 Loss ratio: 4.754706602238982 Tokens per Sec: 2951.996130399732
Epoch Step: 20 / 67 Loss (mean): 0.1570303842759131 Loss (std): 0.4331074375522637 Loss ratio: 2.7581123204236984 Tokens per Sec: 2542.7484191236413
Epoch Step: 25 / 67 Loss (mean): 0.1890810385993973 Loss (std): 0.4065583620635835 Loss ratio: 2.1501804997218765 Tokens per Sec: 2977.290093777477
Epoch Step: 30 / 67 Loss (mean): 0.45339985208556755 Loss (std): 1.7099723103697784 Loss ratio: 3.7714443498474393 Tokens per Sec: 2663.5240182148855
Epoch Step: 35 / 67 Loss (mean): 0.2681785476543155 Loss (std): 0.510415638022374 Loss ratio: 1.9032679626571185 Tokens per Sec: 2607.777256482452
Epoch Step: 40 / 67 Loss (mean): 0.20404622153000673 Loss (std): 0.5325050327882183 Loss ratio: 2.609727486229922 Tokens per Sec: 2808.8034554674587
Epoch Step: 45 / 67 Loss (mean): 0.30127805350093695 Loss (std): 0.8267801698418246 Loss ratio: 2.744242935170362 Tokens per Sec: 2677.4163214442087
Epoch Step: 50 / 67 Loss (mean): 0.18127266664396302 Loss (std): 0.41598657705286407 Loss ratio: 2.2948113731338315 Tokens per Sec: 2391.4167130194737
Epoch Step: 55 / 67 Loss (mean): 0.598357837421645 Loss (std): 1.2054883520036601 Loss ratio: 2.0146612555426233 Tokens per Sec: 2971.435471129451
Epoch Step: 60 / 67 Loss (mean): 0.13378338217853525 Loss (std): 0.33452861169770576 Loss ratio: 2.5005244018369486 Tokens per Sec: 2720.1930982546414
Epoch Step: 65 / 67 Loss (mean): 1.2741443693048495 Loss (std): 7.945688803374951 Loss ratio: 6.236097725495563 Tokens per Sec: 2910.629269055584
Mean loss per sample: 0.4239076784556399 Std loss per sample: 2.6426806656720916 ratio: 6.234094827675165
Epoch ended with duration 0:00:11.446870
Train perplexity: 1.059031263491203
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to start[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.09818378090858 Loss (std): 46.25840911447901 Loss ratio: 0.46679371255430374 Tokens per Sec: 4190.4122753920365
Mean loss per sample: 109.0140667989789 Std loss per sample: 55.039209253979834 ratio: 0.5048817172876571
Epoch ended with duration 0:00:01.065012
b'BLEU = 2.62, 8.8/2.9/1.8/1.3 (BP=0.934, ratio=0.936, hyp_len=2914, ref_len=3113)\n'
Validation perplexity: 2606082.457477745
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.62
Epoch 658 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.19123236855830328 Loss (std): 0.5378171161320647 Loss ratio: 2.812374914281805 Tokens per Sec: 2701.226218872245
Epoch Step: 10 / 67 Loss (mean): 0.23096172674740956 Loss (std): 0.5930713130886421 Loss ratio: 2.5678337334966863 Tokens per Sec: 2643.5349842770356
Epoch Step: 15 / 67 Loss (mean): 0.2518990787284565 Loss (std): 0.5953694364159673 Loss ratio: 2.363523675518348 Tokens per Sec: 2730.1204086258804
Epoch Step: 20 / 67 Loss (mean): 0.08879050142149936 Loss (std): 0.1859514188169824 Loss ratio: 2.0942715249939665 Tokens per Sec: 2950.0696971696566
Epoch Step: 25 / 67 Loss (mean): 0.2436356889193121 Loss (std): 0.6433500541214667 Loss ratio: 2.6406232066211492 Tokens per Sec: 2740.662738568447
Epoch Step: 30 / 67 Loss (mean): 2.0687144490620994 Loss (std): 9.818963592105241 Loss ratio: 4.746408377703796 Tokens per Sec: 2708.7773878398766
Epoch Step: 35 / 67 Loss (mean): 0.37110362131352304 Loss (std): 1.2085785559237883 Loss ratio: 3.2567145306909664 Tokens per Sec: 3500.2299293327355
Epoch Step: 40 / 67 Loss (mean): 0.6516252118963166 Loss (std): 1.2173179162605858 Loss ratio: 1.868125870572177 Tokens per Sec: 2889.3538809802053
Epoch Step: 45 / 67 Loss (mean): 0.26911013630160596 Loss (std): 0.4978883232188481 Loss ratio: 1.8501284643579472 Tokens per Sec: 3395.071782295924
Epoch Step: 50 / 67 Loss (mean): 0.1901148728275075 Loss (std): 0.3642712235640161 Loss ratio: 1.9160585289638115 Tokens per Sec: 2187.8360466446284
Epoch Step: 55 / 67 Loss (mean): 0.19686227388046973 Loss (std): 0.5344649975548386 Loss ratio: 2.7149183386927325 Tokens per Sec: 3084.365295509332
Epoch Step: 60 / 67 Loss (mean): 0.2886358377090801 Loss (std): 0.9157127143655686 Loss ratio: 3.1725537675211615 Tokens per Sec: 2073.2372131704014
Epoch Step: 65 / 67 Loss (mean): 0.21365333549601928 Loss (std): 0.4598256910360505 Loss ratio: 2.1522045980162936 Tokens per Sec: 2717.958550001024
Mean loss per sample: 0.481482036205066 Std loss per sample: 3.4445268422903035 ratio: 7.154009045569582
Epoch ended with duration 0:00:11.440068
Train perplexity: 1.0673131141294618
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock to start and exception[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.81054243445396 Loss (std): 44.93576576492794 Loss ratio: 0.45476691715093165 Tokens per Sec: 4418.280241526754
Mean loss per sample: 104.15606298847277 Std loss per sample: 53.62537812253958 ratio: 0.5148560399069082
Epoch ended with duration 0:00:01.019219
b'BLEU = 2.63, 8.6/2.7/1.9/1.4 (BP=0.931, ratio=0.934, hyp_len=2906, ref_len=3113)\n'
Validation perplexity: 1349186.189666174
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.63
Epoch 659 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.08320528647629999 Loss (std): 0.13458155491729318 Loss ratio: 1.6174639931758072 Tokens per Sec: 3105.249834704356
Epoch Step: 10 / 67 Loss (mean): 0.17618045774815982 Loss (std): 0.4604130279771999 Loss ratio: 2.6133036198335615 Tokens per Sec: 2641.4849410792435
Epoch Step: 15 / 67 Loss (mean): 0.17387151519869803 Loss (std): 0.40669267164149797 Loss ratio: 2.3390413960373846 Tokens per Sec: 2587.0348658186504
Epoch Step: 20 / 67 Loss (mean): 0.14066728760371916 Loss (std): 0.21548417905894637 Loss ratio: 1.531871288127753 Tokens per Sec: 2567.5712542291435
Epoch Step: 25 / 67 Loss (mean): 0.7755587162073425 Loss (std): 1.172253412409376 Loss ratio: 1.5114953747692506 Tokens per Sec: 2491.4862229655373
Epoch Step: 30 / 67 Loss (mean): 1.5598346907645464 Loss (std): 6.9250599209345065 Loss ratio: 4.439611429298458 Tokens per Sec: 2593.3932435331735
Epoch Step: 35 / 67 Loss (mean): 0.19432789169513853 Loss (std): 0.46538185064254034 Loss ratio: 2.3948278684185547 Tokens per Sec: 3027.6370816666895
Epoch Step: 40 / 67 Loss (mean): 0.31417001182126114 Loss (std): 0.8966866807136012 Loss ratio: 2.8541447209281956 Tokens per Sec: 2617.05372082435
Epoch Step: 45 / 67 Loss (mean): 0.15742237746735555 Loss (std): 0.3433984077986449 Loss ratio: 2.1813824268398876 Tokens per Sec: 2757.133172128285
Epoch Step: 50 / 67 Loss (mean): 0.2573693171066225 Loss (std): 0.7789539891401859 Loss ratio: 3.0266000543393536 Tokens per Sec: 2983.7777393649103
Epoch Step: 55 / 67 Loss (mean): 0.1563879774371344 Loss (std): 0.3132983845987839 Loss ratio: 2.0033406003011014 Tokens per Sec: 2878.325774130516
Epoch Step: 60 / 67 Loss (mean): 0.11284087865988113 Loss (std): 0.1973393099512733 Loss ratio: 1.7488281932479697 Tokens per Sec: 2598.696643358131
Epoch Step: 65 / 67 Loss (mean): 0.21152174673184732 Loss (std): 0.7926943725928809 Loss ratio: 3.747578605228729 Tokens per Sec: 2906.7015564110593
Mean loss per sample: 0.5571443120876536 Std loss per sample: 4.018046672951535 ratio: 7.211859810424467
Epoch ended with duration 0:00:11.473494
Train perplexity: 1.0782954058985545
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to hexdump[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.04970741271973 Loss (std): 46.20570966004911 Loss ratio: 0.47124780766102486 Tokens per Sec: 4420.531413945728
Mean loss per sample: 103.07892914598838 Std loss per sample: 53.399938361976645 ratio: 0.5180490213120812
Epoch ended with duration 0:00:01.020251
b'BLEU = 2.36, 7.9/2.7/1.7/1.3 (BP=0.908, ratio=0.912, hyp_len=2838, ref_len=3113)\n'
Validation perplexity: 1165943.5335458082
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.36
Epoch 660 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5619403633399997 Loss (std): 1.4031366618865497 Loss ratio: 2.496949415675961 Tokens per Sec: 2898.5674425854127
Epoch Step: 10 / 67 Loss (mean): 0.2596636536316055 Loss (std): 0.6997699567963944 Loss ratio: 2.694909152704075 Tokens per Sec: 2986.3015723551475
Epoch Step: 15 / 67 Loss (mean): 0.18402706493861842 Loss (std): 0.4824946055949456 Loss ratio: 2.6218676353713515 Tokens per Sec: 2994.7558012940613
Epoch Step: 20 / 67 Loss (mean): 1.1466362691548966 Loss (std): 1.5738548771582719 Loss ratio: 1.3725842444511611 Tokens per Sec: 2834.2303215662323
Epoch Step: 25 / 67 Loss (mean): 0.1630087949015433 Loss (std): 0.5353913961131632 Loss ratio: 3.2844325757793476 Tokens per Sec: 3165.5722055045985
Epoch Step: 30 / 67 Loss (mean): 0.22391040518778027 Loss (std): 0.49583856682419775 Loss ratio: 2.2144507594828724 Tokens per Sec: 3097.35020211369
Epoch Step: 35 / 67 Loss (mean): 0.2388507350533473 Loss (std): 0.5209344716443125 Loss ratio: 2.1810042641399523 Tokens per Sec: 2021.2459832131635
Epoch Step: 40 / 67 Loss (mean): 0.13102700473064033 Loss (std): 0.24063651702087518 Loss ratio: 1.836541387140501 Tokens per Sec: 2455.9389270298366
Epoch Step: 45 / 67 Loss (mean): 0.34251067927107215 Loss (std): 0.9793157399201542 Loss ratio: 2.8592268772591978 Tokens per Sec: 3096.286596425586
Epoch Step: 50 / 67 Loss (mean): 0.1684198767156886 Loss (std): 0.3983476569355321 Loss ratio: 2.365205726922524 Tokens per Sec: 2129.1938048995344
Epoch Step: 55 / 67 Loss (mean): 0.3267437127251469 Loss (std): 0.9028527629101966 Loss ratio: 2.763183277132148 Tokens per Sec: 2983.2403390196996
Epoch Step: 60 / 67 Loss (mean): 0.10129918836491925 Loss (std): 0.20386371587890678 Loss ratio: 2.012491108462884 Tokens per Sec: 2745.294961427292
Epoch Step: 65 / 67 Loss (mean): 0.2962991612839687 Loss (std): 0.7878447676742744 Loss ratio: 2.6589503806229664 Tokens per Sec: 2926.1284848966043
Mean loss per sample: 0.49882407192184597 Std loss per sample: 3.549069195945733 ratio: 7.114871546339064
Epoch ended with duration 0:00:11.491311
Train perplexity: 1.0698203685766032
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock to apache-sshd ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.07757446169853 Loss (std): 45.32599524072554 Loss ratio: 0.4621443330903982 Tokens per Sec: 4301.384117057464
Mean loss per sample: 105.68873905286681 Std loss per sample: 53.4800286638525 ratio: 0.5060144452769101
Epoch ended with duration 0:00:01.052460
b'BLEU = 2.61, 8.5/3.1/1.9/1.5 (BP=0.897, ratio=0.902, hyp_len=2808, ref_len=3113)\n'
Validation perplexity: 1660645.940985501
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.61
Model saved checkpoint_commit_msg_generator!
Epoch 661 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.30775677418751 Loss (std): 0.8343932190855946 Loss ratio: 2.7112099198739834 Tokens per Sec: 2921.5590793029455
Epoch Step: 10 / 67 Loss (mean): 0.27137942268655024 Loss (std): 0.4977465303152153 Loss ratio: 1.834135121180962 Tokens per Sec: 3095.2262202361167
Epoch Step: 15 / 67 Loss (mean): 0.09245487690077425 Loss (std): 0.17145788271757884 Loss ratio: 1.8545033908983874 Tokens per Sec: 2243.64362059159
Epoch Step: 20 / 67 Loss (mean): 2.553077224223671 Loss (std): 12.039215115478637 Loss ratio: 4.715570293467904 Tokens per Sec: 2210.6355355149913
Epoch Step: 25 / 67 Loss (mean): 0.10527107025154692 Loss (std): 0.1844045374335634 Loss ratio: 1.751711434042855 Tokens per Sec: 2648.9443185711452
Epoch Step: 30 / 67 Loss (mean): 0.5025863892733469 Loss (std): 1.2150421801472753 Loss ratio: 2.417578760746021 Tokens per Sec: 2877.525596144534
Epoch Step: 35 / 67 Loss (mean): 0.8504226697550621 Loss (std): 1.3549725593099327 Loss ratio: 1.5932930853080276 Tokens per Sec: 2719.5661426317242
Epoch Step: 40 / 67 Loss (mean): 0.16919650179806922 Loss (std): 0.3427075184632209 Loss ratio: 2.0255000240621506 Tokens per Sec: 3014.3081397374895
Epoch Step: 45 / 67 Loss (mean): 0.287650722858416 Loss (std): 0.6947049324027764 Loss ratio: 2.4150988584329607 Tokens per Sec: 3050.3270498694096
Epoch Step: 50 / 67 Loss (mean): 0.5440770427921962 Loss (std): 1.2863724130967282 Loss ratio: 2.364320329516353 Tokens per Sec: 3164.142126136652
Epoch Step: 55 / 67 Loss (mean): 0.6115493133784184 Loss (std): 1.1906740678502423 Loss ratio: 1.9469796495601153 Tokens per Sec: 2449.6608073344028
Epoch Step: 60 / 67 Loss (mean): 0.17134384858036356 Loss (std): 0.38792540610235565 Loss ratio: 2.2640171171386476 Tokens per Sec: 2724.321443432145
Epoch Step: 65 / 67 Loss (mean): 0.13901051807533804 Loss (std): 0.2963012882668714 Loss ratio: 2.1315026543983397 Tokens per Sec: 3007.6891754118906
Mean loss per sample: 0.5372734093286845 Std loss per sample: 3.3496233219980467 ratio: 6.234485578177698
Epoch ended with duration 0:00:11.491471
Train perplexity: 1.075400272644153
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shader activities regarding method_1 ( ) and[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.18638956546783 Loss (std): 44.94698997227028 Loss ratio: 0.45777210233706506 Tokens per Sec: 4398.019913590826
Mean loss per sample: 103.2927768066159 Std loss per sample: 53.017445854613705 ratio: 0.513273507535504
Epoch ended with duration 0:00:01.025000
b'BLEU = 2.36, 8.5/2.7/1.6/1.2 (BP=0.921, ratio=0.924, hyp_len=2875, ref_len=3113)\n'
Validation perplexity: 1200227.1705310806
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.36
Epoch 662 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.32987081152759856 Loss (std): 0.8350120772361888 Loss ratio: 2.531330593844699 Tokens per Sec: 2711.227625325524
Epoch Step: 10 / 67 Loss (mean): 0.5742771131335758 Loss (std): 1.0453955830923862 Loss ratio: 1.8203678314605396 Tokens per Sec: 2748.6821881275328
Epoch Step: 15 / 67 Loss (mean): 0.575932957131954 Loss (std): 1.3968280428578796 Loss ratio: 2.4253309791713265 Tokens per Sec: 2984.403194481583
Epoch Step: 20 / 67 Loss (mean): 0.1510481998684554 Loss (std): 0.3447081588124691 Loss ratio: 2.2821070301577104 Tokens per Sec: 2955.2219926541525
Epoch Step: 25 / 67 Loss (mean): 0.21047559676298988 Loss (std): 0.601990693875459 Loss ratio: 2.8601448487795107 Tokens per Sec: 2415.9257615950687
Epoch Step: 30 / 67 Loss (mean): 0.7408586180536076 Loss (std): 1.2128008126853083 Loss ratio: 1.637020590880879 Tokens per Sec: 3179.0775990645834
Epoch Step: 35 / 67 Loss (mean): 0.382880045370257 Loss (std): 1.371073611104557 Loss ratio: 3.580948204753491 Tokens per Sec: 3615.749587464791
Epoch Step: 40 / 67 Loss (mean): 0.20133730101042602 Loss (std): 0.31551886795378953 Loss ratio: 1.5671158119749045 Tokens per Sec: 3163.7940369309877
Epoch Step: 45 / 67 Loss (mean): 0.5015356156582129 Loss (std): 1.1255401525603195 Loss ratio: 2.244187885008258 Tokens per Sec: 2441.337704167931
Epoch Step: 50 / 67 Loss (mean): 3.4561038488591294 Loss (std): 12.028369012018823 Loss ratio: 3.480326268549316 Tokens per Sec: 2900.849719092695
Epoch Step: 55 / 67 Loss (mean): 0.1631169387983391 Loss (std): 0.36333002640520745 Loss ratio: 2.227420579872401 Tokens per Sec: 2183.7186754469953
Epoch Step: 60 / 67 Loss (mean): 0.8981178440189979 Loss (std): 1.6798900045604974 Loss ratio: 1.8704561052290625 Tokens per Sec: 2647.9184741580484
Epoch Step: 65 / 67 Loss (mean): 0.11819420102983713 Loss (std): 0.23987414636488955 Loss ratio: 2.029491669429157 Tokens per Sec: 2982.259966886752
Mean loss per sample: 0.44841725837084084 Std loss per sample: 2.831997346779043 ratio: 6.315540479124429
Epoch ended with duration 0:00:11.419089
Train perplexity: 1.0625489879508565
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to deprecated statement[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.69925573468208 Loss (std): 45.46307973948509 Loss ratio: 0.4606223157517666 Tokens per Sec: 4397.140302648549
Mean loss per sample: 103.43621488245296 Std loss per sample: 53.27597651397869 ratio: 0.5150611570089123
Epoch ended with duration 0:00:01.021749
b'BLEU = 2.62, 8.6/2.9/1.9/1.5 (BP=0.905, ratio=0.909, hyp_len=2831, ref_len=3113)\n'
Validation perplexity: 1223785.931400095
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.62
Epoch 663 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3735926788140205 Loss (std): 0.8045479059687433 Loss ratio: 2.153543020497086 Tokens per Sec: 2622.8240111262944
Epoch Step: 10 / 67 Loss (mean): 0.18601189848413924 Loss (std): 0.39127561129773974 Loss ratio: 2.1034977573281575 Tokens per Sec: 2834.12950897499
Epoch Step: 15 / 67 Loss (mean): 0.46133055664267886 Loss (std): 0.9944631747605692 Loss ratio: 2.1556412434453707 Tokens per Sec: 2390.3748039893685
Epoch Step: 20 / 67 Loss (mean): 0.22080376093708765 Loss (std): 0.5355873241684104 Loss ratio: 2.42562591278059 Tokens per Sec: 2582.5546982902074
Epoch Step: 25 / 67 Loss (mean): 0.25361125298877596 Loss (std): 0.5418839650525463 Loss ratio: 2.1366716132131898 Tokens per Sec: 3084.414320095385
Epoch Step: 30 / 67 Loss (mean): 0.10156820023985347 Loss (std): 0.18528808241343764 Loss ratio: 1.8242725772030963 Tokens per Sec: 2812.0452107063697
Epoch Step: 35 / 67 Loss (mean): 1.469256473375026 Loss (std): 6.995803499022928 Loss ratio: 4.761458346991579 Tokens per Sec: 2894.611262309669
Epoch Step: 40 / 67 Loss (mean): 0.3903987375069846 Loss (std): 0.6921825884406053 Loss ratio: 1.773014413060753 Tokens per Sec: 4125.752275000533
Epoch Step: 45 / 67 Loss (mean): 0.2752645727341587 Loss (std): 0.5667594625307824 Loss ratio: 2.05896260786941 Tokens per Sec: 2585.2102016755107
Epoch Step: 50 / 67 Loss (mean): 0.293026823332184 Loss (std): 1.0398197979599688 Loss ratio: 3.5485481708996924 Tokens per Sec: 3020.0015680674715
Epoch Step: 55 / 67 Loss (mean): 0.15149330676922546 Loss (std): 0.3282423240010771 Loss ratio: 2.1667117247701184 Tokens per Sec: 2346.633710244026
Epoch Step: 60 / 67 Loss (mean): 0.4334970219169918 Loss (std): 1.785416281642373 Loss ratio: 4.1186356338666 Tokens per Sec: 3004.1193478465743
Epoch Step: 65 / 67 Loss (mean): 0.3894564222819099 Loss (std): 0.7757541860346076 Loss ratio: 1.9918895713397022 Tokens per Sec: 2479.1169799989725
Mean loss per sample: 0.3890827609644804 Std loss per sample: 2.000579374720048 ratio: 5.1417836394521785
Epoch ended with duration 0:00:11.405714
Train perplexity: 1.0540530558783459
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to method_4 ( ) and hint[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.58201482892036 Loss (std): 47.47625995427586 Loss ratio: 0.4720153999204339 Tokens per Sec: 4263.267036591915
Mean loss per sample: 105.40527127591557 Std loss per sample: 54.39571176329205 ratio: 0.516062537526253
Epoch ended with duration 0:00:01.042156
b'BLEU = 2.57, 8.3/2.8/1.9/1.4 (BP=0.911, ratio=0.915, hyp_len=2847, ref_len=3113)\n'
Validation perplexity: 1598062.0663233153
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.57
Epoch 664 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.18208764405608235 Loss (std): 0.3754504355648946 Loss ratio: 2.061921540646971 Tokens per Sec: 2591.1609994722744
Epoch Step: 10 / 67 Loss (mean): 1.7597524587326916 Loss (std): 9.075082224791604 Loss ratio: 5.1570220457752 Tokens per Sec: 2601.391486559113
Epoch Step: 15 / 67 Loss (mean): 0.6867596817392041 Loss (std): 1.0308562564705583 Loss ratio: 1.501043645806255 Tokens per Sec: 3498.191044664612
Epoch Step: 20 / 67 Loss (mean): 0.4800300021197472 Loss (std): 1.0406976367885574 Loss ratio: 2.1679845680332024 Tokens per Sec: 2745.009332859672
Epoch Step: 25 / 67 Loss (mean): 0.23712762813374866 Loss (std): 0.5644343777124419 Loss ratio: 2.3802978259204797 Tokens per Sec: 3686.2001307001183
Epoch Step: 30 / 67 Loss (mean): 0.17964623064563057 Loss (std): 0.33738989419023674 Loss ratio: 1.8780794508055707 Tokens per Sec: 2621.0503547420712
Epoch Step: 35 / 67 Loss (mean): 0.33430287003830017 Loss (std): 0.839094784285308 Loss ratio: 2.5099837886201075 Tokens per Sec: 3092.3489319223772
Epoch Step: 40 / 67 Loss (mean): 1.4484454490102507 Loss (std): 5.776949579514478 Loss ratio: 3.988379116011565 Tokens per Sec: 3100.1917238433202
Epoch Step: 45 / 67 Loss (mean): 0.32680673950744676 Loss (std): 0.8525931344394748 Loss ratio: 2.608860318255607 Tokens per Sec: 2737.8784764389356
Epoch Step: 50 / 67 Loss (mean): 0.4331007970395149 Loss (std): 0.8638844922119566 Loss ratio: 1.9946499709007424 Tokens per Sec: 2747.0096974070852
Epoch Step: 55 / 67 Loss (mean): 0.22078051342123217 Loss (std): 0.49824806937519306 Loss ratio: 2.2567574540628694 Tokens per Sec: 2301.219682916883
Epoch Step: 60 / 67 Loss (mean): 0.32790331385695026 Loss (std): 0.6077121148246463 Loss ratio: 1.8533271520694794 Tokens per Sec: 2100.1263695390976
Epoch Step: 65 / 67 Loss (mean): 0.17510158683580812 Loss (std): 0.5688296095489362 Loss ratio: 3.248569129658002 Tokens per Sec: 2746.7236850452246
Mean loss per sample: 0.4076681771096404 Std loss per sample: 2.2407822137928526 ratio: 5.496583593254583
Epoch ended with duration 0:00:11.411013
Train perplexity: 1.0567069145731924
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.77561867237091 Loss (std): 45.8376984355757 Loss ratio: 0.464058834069315 Tokens per Sec: 4296.054750845175
Mean loss per sample: 107.88589132650465 Std loss per sample: 53.59036175544009 ratio: 0.4967318812174877
Epoch ended with duration 0:00:01.052041
b'BLEU = 2.53, 8.5/2.9/1.8/1.4 (BP=0.903, ratio=0.908, hyp_len=2826, ref_len=3113)\n'
Validation perplexity: 2236607.335914869
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.53
Epoch 665 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.84473001699007 Loss (std): 15.843788789433937 Loss ratio: 5.569522835139839 Tokens per Sec: 2609.3631724179927
Epoch Step: 10 / 67 Loss (mean): 0.31369094846400003 Loss (std): 0.8540587216275359 Loss ratio: 2.7226119395840644 Tokens per Sec: 3137.103983073051
Epoch Step: 15 / 67 Loss (mean): 14.340917577959772 Loss (std): 27.402989665307693 Loss ratio: 1.9108254068360815 Tokens per Sec: 3258.405045094777
Epoch Step: 20 / 67 Loss (mean): 0.34029976199417433 Loss (std): 0.886755450815265 Loss ratio: 2.605806849875039 Tokens per Sec: 2827.8464301269278
Epoch Step: 25 / 67 Loss (mean): 3.3994346355393645 Loss (std): 9.919947978745906 Loss ratio: 2.918116993642967 Tokens per Sec: 2700.886160901126
Epoch Step: 30 / 67 Loss (mean): 0.2181124500189071 Loss (std): 0.4423208815843825 Loss ratio: 2.0279488013913918 Tokens per Sec: 2381.319011973366
Epoch Step: 35 / 67 Loss (mean): 0.3387775786250131 Loss (std): 0.8430690521847253 Loss ratio: 2.48856212859914 Tokens per Sec: 3212.5443501742143
Epoch Step: 40 / 67 Loss (mean): 0.6831724831645261 Loss (std): 0.8775755110882906 Loss ratio: 1.284559218520145 Tokens per Sec: 2958.9541463127484
Epoch Step: 45 / 67 Loss (mean): 3.8655449769175902 Loss (std): 11.736947978691225 Loss ratio: 3.0362983871035802 Tokens per Sec: 2472.339426856239
Epoch Step: 50 / 67 Loss (mean): 0.9231193889954739 Loss (std): 1.76285825360629 Loss ratio: 1.9096752539502053 Tokens per Sec: 2648.3801253115216
Epoch Step: 55 / 67 Loss (mean): 0.22200965446540977 Loss (std): 0.44941555869483785 Loss ratio: 2.0243063743196767 Tokens per Sec: 2438.8429039598554
Epoch Step: 60 / 67 Loss (mean): 0.335897067845508 Loss (std): 1.1777795429542142 Loss ratio: 3.5063704202857773 Tokens per Sec: 2441.956097900389
Epoch Step: 65 / 67 Loss (mean): 0.2888685836078366 Loss (std): 0.6044406053997969 Loss ratio: 2.0924414758109378 Tokens per Sec: 3002.4367081056575
Mean loss per sample: 0.8626689980153127 Std loss per sample: 6.028219125139643 ratio: 6.987870363961589
Epoch ended with duration 0:00:11.504381
Train perplexity: 1.1238034495017197
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint icons use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog class provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.77268707752228 Loss (std): 45.4697884228626 Loss ratio: 0.45573382610747043 Tokens per Sec: 4265.050184634944
Mean loss per sample: 105.17573916570085 Std loss per sample: 53.531496038657174 ratio: 0.5089719022969745
Epoch ended with duration 0:00:01.041509
b'BLEU = 2.77, 9.0/3.0/2.0/1.5 (BP=0.917, ratio=0.920, hyp_len=2865, ref_len=3113)\n'
Validation perplexity: 1549118.3681273954
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.77
Model saved checkpoint_commit_msg_generator!
Epoch 666 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.28657275252953696 Loss (std): 0.6047483632168867 Loss ratio: 2.110278656567517 Tokens per Sec: 2944.149644847158
Epoch Step: 10 / 67 Loss (mean): 0.1979676265100352 Loss (std): 0.44617844560627323 Loss ratio: 2.253794994019671 Tokens per Sec: 3170.9392842802777
Epoch Step: 15 / 67 Loss (mean): 0.16834314144580276 Loss (std): 0.37947165826686685 Loss ratio: 2.2541557381417636 Tokens per Sec: 2403.0339276722757
Epoch Step: 20 / 67 Loss (mean): 0.17053200023838144 Loss (std): 0.33004132540466413 Loss ratio: 1.9353630107153468 Tokens per Sec: 2639.6371976995024
Epoch Step: 25 / 67 Loss (mean): 0.3292723268677946 Loss (std): 0.7040405811545138 Loss ratio: 2.138171123737318 Tokens per Sec: 2997.705555068847
Epoch Step: 30 / 67 Loss (mean): 0.16632528948684921 Loss (std): 0.3966256531795296 Loss ratio: 2.3846382856341846 Tokens per Sec: 2442.7119795391145
Epoch Step: 35 / 67 Loss (mean): 0.2632722447779088 Loss (std): 0.7371796824008482 Loss ratio: 2.8000660799725328 Tokens per Sec: 2511.2496693268386
Epoch Step: 40 / 67 Loss (mean): 0.35138092161651 Loss (std): 0.8339875191209329 Loss ratio: 2.37345703142964 Tokens per Sec: 3342.6196455212316
Epoch Step: 45 / 67 Loss (mean): 0.2414485938834332 Loss (std): 0.5528622739076294 Loss ratio: 2.2897721830367788 Tokens per Sec: 2754.3571069237896
Epoch Step: 50 / 67 Loss (mean): 0.14942680549575016 Loss (std): 0.20603804722540683 Loss ratio: 1.3788559993760072 Tokens per Sec: 2630.717335631268
Epoch Step: 55 / 67 Loss (mean): 0.23392225149109436 Loss (std): 0.5787384862575693 Loss ratio: 2.4740634230754335 Tokens per Sec: 2553.4805862815915
Epoch Step: 60 / 67 Loss (mean): 0.1131926628254405 Loss (std): 0.254267338933747 Loss ratio: 2.246323503546021 Tokens per Sec: 3234.753632494123
Epoch Step: 65 / 67 Loss (mean): 0.2337921033740713 Loss (std): 0.5800700023355124 Loss ratio: 2.481135992037296 Tokens per Sec: 2897.693220879766
Mean loss per sample: 0.5722740074386545 Std loss per sample: 3.7236991045562964 ratio: 6.5068464689189325
Epoch ended with duration 0:00:11.415322
Train perplexity: 1.0805049842395296
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the time unit test[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.6230081319809 Loss (std): 46.86442399725042 Loss ratio: 0.4657426255412807 Tokens per Sec: 4426.515083732137
Mean loss per sample: 104.09105196479159 Std loss per sample: 53.60720268886213 ratio: 0.5150029870674625
Epoch ended with duration 0:00:01.020205
b'BLEU = 2.88, 8.6/3.1/2.1/1.6 (BP=0.932, ratio=0.934, hyp_len=2909, ref_len=3113)\n'
Validation perplexity: 1337351.8536727678
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.88
Epoch 667 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.14943619316909462 Loss (std): 0.32142833924865094 Loss ratio: 2.1509403607795234 Tokens per Sec: 2926.028727509113
Epoch Step: 10 / 67 Loss (mean): 0.1579238051763241 Loss (std): 0.26768623935276387 Loss ratio: 1.6950341277167715 Tokens per Sec: 2754.182754824234
Epoch Step: 15 / 67 Loss (mean): 0.25390736087138066 Loss (std): 0.6535937145078288 Loss ratio: 2.5741424441763754 Tokens per Sec: 2480.920598915318
Epoch Step: 20 / 67 Loss (mean): 0.3158428429705964 Loss (std): 0.7771751444228632 Loss ratio: 2.4606387693110237 Tokens per Sec: 3942.5980036655264
Epoch Step: 25 / 67 Loss (mean): 0.19250454577877463 Loss (std): 0.47157034010586635 Loss ratio: 2.4496582052030758 Tokens per Sec: 2897.9521591722155
Epoch Step: 30 / 67 Loss (mean): 0.152378231538151 Loss (std): 0.29533347616466765 Loss ratio: 1.938160544216087 Tokens per Sec: 2776.274137728526
Epoch Step: 35 / 67 Loss (mean): 0.15716581094056892 Loss (std): 0.2800633775368068 Loss ratio: 1.7819612030170526 Tokens per Sec: 3329.105528048307
Epoch Step: 40 / 67 Loss (mean): 0.6198307301456225 Loss (std): 2.091250960691182 Loss ratio: 3.373906550583359 Tokens per Sec: 2443.964926118892
Epoch Step: 45 / 67 Loss (mean): 0.40393487556866603 Loss (std): 0.6174620244906154 Loss ratio: 1.528617759536961 Tokens per Sec: 2991.3943821240237
Epoch Step: 50 / 67 Loss (mean): 0.13768747378344415 Loss (std): 0.3690333140393243 Loss ratio: 2.6802243072579177 Tokens per Sec: 2442.5585806647414
Epoch Step: 55 / 67 Loss (mean): 2.066277276055189 Loss (std): 9.628265356600831 Loss ratio: 4.659716035295385 Tokens per Sec: 2826.9078289154936
Epoch Step: 60 / 67 Loss (mean): 4.50351114723162 Loss (std): 12.458376468413832 Loss ratio: 2.7663696305208867 Tokens per Sec: 2482.9746584693657
Epoch Step: 65 / 67 Loss (mean): 0.1763300256952789 Loss (std): 0.5335091598162374 Loss ratio: 3.025628549151409 Tokens per Sec: 2499.799533175334
Mean loss per sample: 0.4737579677915278 Std loss per sample: 3.074406373452702 ratio: 6.489402991540951
Epoch ended with duration 0:00:11.427359
Train perplexity: 1.0661982859836332
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print time statement ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.63619869947433 Loss (std): 45.597379483215086 Loss ratio: 0.4622783530227234 Tokens per Sec: 4432.420702263396
Mean loss per sample: 102.9103642518281 Std loss per sample: 53.09349449938086 ratio: 0.515919799578765
Epoch ended with duration 0:00:01.020957
b'BLEU = 2.22, 8.2/2.6/1.6/1.2 (BP=0.879, ratio=0.885, hyp_len=2756, ref_len=3113)\n'
Validation perplexity: 1139611.1375729225
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.22
Epoch 668 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1142754784104909 Loss (std): 0.20617416487125692 Loss ratio: 1.8041855325309177 Tokens per Sec: 2941.4242648732084
Epoch Step: 10 / 67 Loss (mean): 0.33638295777973326 Loss (std): 0.8580684877732446 Loss ratio: 2.5508678960338886 Tokens per Sec: 2688.205575124465
Epoch Step: 15 / 67 Loss (mean): 0.10294333444198855 Loss (std): 0.26292275140291105 Loss ratio: 2.5540531869120224 Tokens per Sec: 2553.4347174533964
Epoch Step: 20 / 67 Loss (mean): 0.14174962275546932 Loss (std): 0.32500405332392623 Loss ratio: 2.2928036562367935 Tokens per Sec: 2878.8532105145387
Epoch Step: 25 / 67 Loss (mean): 0.16550055706102285 Loss (std): 0.570157101725697 Loss ratio: 3.4450464206925324 Tokens per Sec: 2723.428578209939
Epoch Step: 30 / 67 Loss (mean): 0.2633119698493829 Loss (std): 0.6807544627055598 Loss ratio: 2.5853532716152565 Tokens per Sec: 2785.388027046808
Epoch Step: 35 / 67 Loss (mean): 0.10493688572569226 Loss (std): 0.18531509219800438 Loss ratio: 1.765967142215587 Tokens per Sec: 2221.6891763856156
Epoch Step: 40 / 67 Loss (mean): 0.35199405369439773 Loss (std): 0.643056535670419 Loss ratio: 1.8268960197512953 Tokens per Sec: 2390.9776117754095
Epoch Step: 45 / 67 Loss (mean): 0.20862604133708373 Loss (std): 0.5447901039701233 Loss ratio: 2.6113235935387786 Tokens per Sec: 2756.6321606392876
Epoch Step: 50 / 67 Loss (mean): 0.20274637999909828 Loss (std): 0.5792149637937378 Loss ratio: 2.8568449103570375 Tokens per Sec: 3327.327836193502
Epoch Step: 55 / 67 Loss (mean): 0.23745695578691084 Loss (std): 0.5327540321233865 Loss ratio: 2.2435814960984732 Tokens per Sec: 3245.2556341571544
Epoch Step: 60 / 67 Loss (mean): 0.4871000667244516 Loss (std): 1.0360711459204683 Loss ratio: 2.1270191007930306 Tokens per Sec: 2592.198376803203
Epoch Step: 65 / 67 Loss (mean): 0.1859840345896373 Loss (std): 0.5382058397567089 Loss ratio: 2.893828176941252 Tokens per Sec: 2802.454693371755
Mean loss per sample: 0.41441332298733324 Std loss per sample: 2.4805580457389795 ratio: 5.98571017904943
Epoch ended with duration 0:00:11.481052
Train perplexity: 1.057671722723195
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily into run ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 119.3914250433445 Loss (std): 47.73177501719463 Loss ratio: 0.39979232176737844 Tokens per Sec: 4295.405416546437
Mean loss per sample: 105.79808872742731 Std loss per sample: 53.49019132751265 ratio: 0.5055875013519572
Epoch ended with duration 0:00:01.035698
b'BLEU = 2.89, 9.0/3.0/2.0/1.6 (BP=0.939, ratio=0.941, hyp_len=2929, ref_len=3113)\n'
Validation perplexity: 1685438.0280089593
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.89
Epoch 669 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.6074441735727305 Loss (std): 7.145376461267346 Loss ratio: 4.445178612570986 Tokens per Sec: 2802.5350060936585
Epoch Step: 10 / 67 Loss (mean): 0.2125721333813999 Loss (std): 0.590961908900523 Loss ratio: 2.78005352583168 Tokens per Sec: 2375.4359716011795
Epoch Step: 15 / 67 Loss (mean): 0.8063479425900368 Loss (std): 1.4319253601307211 Loss ratio: 1.7758157297844563 Tokens per Sec: 3371.5692953211988
Epoch Step: 20 / 67 Loss (mean): 0.10123408165691217 Loss (std): 0.2599088555066791 Loss ratio: 2.5674046847930563 Tokens per Sec: 2494.7059231501858
Epoch Step: 25 / 67 Loss (mean): 0.20916720309287484 Loss (std): 0.8116860025079295 Loss ratio: 3.8805605778814334 Tokens per Sec: 3157.65058254116
Epoch Step: 30 / 67 Loss (mean): 0.2835029639672939 Loss (std): 0.7511439570953535 Loss ratio: 2.649510067139928 Tokens per Sec: 2406.9210488764916
Epoch Step: 35 / 67 Loss (mean): 0.18015101274068002 Loss (std): 0.3988122510426509 Loss ratio: 2.213766356210968 Tokens per Sec: 2546.665190584921
Epoch Step: 40 / 67 Loss (mean): 2.0564818776729226 Loss (std): 8.5206841720799 Loss ratio: 4.143330541634411 Tokens per Sec: 2466.6901377411314
Epoch Step: 45 / 67 Loss (mean): 0.12556569463959022 Loss (std): 0.28514189943526086 Loss ratio: 2.2708582965570367 Tokens per Sec: 3057.339993266746
Epoch Step: 50 / 67 Loss (mean): 0.1366387743003088 Loss (std): 0.3900850190493129 Loss ratio: 2.85486327762259 Tokens per Sec: 3390.11152826194
Epoch Step: 55 / 67 Loss (mean): 0.1843496374217466 Loss (std): 0.5001817935668141 Loss ratio: 2.7132236361415853 Tokens per Sec: 2561.504950277331
Epoch Step: 60 / 67 Loss (mean): 0.16275647726979514 Loss (std): 0.3831205059732237 Loss ratio: 2.3539493628762904 Tokens per Sec: 3152.0605956883546
Epoch Step: 65 / 67 Loss (mean): 0.04028895495243238 Loss (std): 0.04585083317283814 Loss ratio: 1.1380497018841134 Tokens per Sec: 2282.738992975753
Mean loss per sample: 0.3848606939482252 Std loss per sample: 2.265036376068101 ratio: 5.88534088225911
Epoch ended with duration 0:00:11.501488
Train perplexity: 1.0534511058540492
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the time unit test[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.14813113212585 Loss (std): 45.83801081388371 Loss ratio: 0.46231845512851366 Tokens per Sec: 4391.717694907039
Mean loss per sample: 105.87186558593493 Std loss per sample: 53.50427284138705 ratio: 0.50536818771705
Epoch ended with duration 0:00:01.040136
b'BLEU = 2.17, 7.7/2.4/1.4/1.1 (BP=0.936, ratio=0.938, hyp_len=2921, ref_len=3113)\n'
Validation perplexity: 1702373.7031069389
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.17
Epoch 670 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.13869325504492735 Loss (std): 0.4989072463451084 Loss ratio: 3.597199057614559 Tokens per Sec: 2699.330883909514
Epoch Step: 10 / 67 Loss (mean): 0.19975755266023043 Loss (std): 0.39314302915187893 Loss ratio: 1.968100949957971 Tokens per Sec: 2462.3104231508346
Epoch Step: 15 / 67 Loss (mean): 0.5151742589587229 Loss (std): 1.1844995972825636 Loss ratio: 2.2992212376384837 Tokens per Sec: 2993.9789121597223
Epoch Step: 20 / 67 Loss (mean): 0.5481196599976101 Loss (std): 1.0821904775461992 Loss ratio: 1.974369022908096 Tokens per Sec: 2487.570812802883
Epoch Step: 25 / 67 Loss (mean): 0.09200565751825707 Loss (std): 0.1696172865478201 Loss ratio: 1.8435527892854007 Tokens per Sec: 2468.7623186202554
Epoch Step: 30 / 67 Loss (mean): 0.16724237559901667 Loss (std): 0.505936303131917 Loss ratio: 3.0251681209369985 Tokens per Sec: 3202.9213207558523
Epoch Step: 35 / 67 Loss (mean): 0.07341727409311716 Loss (std): 0.19033029408744506 Loss ratio: 2.5924456667519946 Tokens per Sec: 2496.194328151679
Epoch Step: 40 / 67 Loss (mean): 0.0409499162695803 Loss (std): 0.0505650974153594 Loss ratio: 1.2348034384852151 Tokens per Sec: 2261.9001145587054
Epoch Step: 45 / 67 Loss (mean): 12.393415752521832 Loss (std): 20.80059864715086 Loss ratio: 1.67835882072449 Tokens per Sec: 3199.166558134813
Epoch Step: 50 / 67 Loss (mean): 0.23869513669615117 Loss (std): 0.5359877297646601 Loss ratio: 2.245490784535547 Tokens per Sec: 2888.42023165104
Epoch Step: 55 / 67 Loss (mean): 0.31538998889300274 Loss (std): 0.6913626588541115 Loss ratio: 2.192088154987884 Tokens per Sec: 2712.711798336383
Epoch Step: 60 / 67 Loss (mean): 0.5065226908918703 Loss (std): 1.076609107532693 Loss ratio: 2.1254903815602635 Tokens per Sec: 3150.075868903348
Epoch Step: 65 / 67 Loss (mean): 0.9256879559543449 Loss (std): 1.6590759403752613 Loss ratio: 1.7922626406701214 Tokens per Sec: 3184.5148904904877
Mean loss per sample: 0.5178229514835763 Std loss per sample: 3.510779035650073 ratio: 6.779883019073603
Epoch ended with duration 0:00:11.443563
Train perplexity: 1.0725739253684592
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shader activities regarding method_1 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.94909715652466 Loss (std): 45.31881305607655 Loss ratio: 0.4580012790251947 Tokens per Sec: 4384.470528008079
Mean loss per sample: 105.28424585876284 Std loss per sample: 53.226032363826455 ratio: 0.5055460285599456
Epoch ended with duration 0:00:01.040611
b'BLEU = 2.52, 8.3/2.6/1.6/1.2 (BP=0.992, ratio=0.992, hyp_len=3088, ref_len=3113)\n'
Validation perplexity: 1572065.8379817938
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.52
Model saved checkpoint_commit_msg_generator!
Epoch 671 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.19699987738931668 Loss (std): 0.5714337931278645 Loss ratio: 2.900680958285984 Tokens per Sec: 2781.017318333533
Epoch Step: 10 / 67 Loss (mean): 0.2627605692441648 Loss (std): 0.7106319474871989 Loss ratio: 2.704484731218781 Tokens per Sec: 3273.060865390247
Epoch Step: 15 / 67 Loss (mean): 0.1853857467126545 Loss (std): 0.421731268830723 Loss ratio: 2.2748850777854077 Tokens per Sec: 3010.122375231715
Epoch Step: 20 / 67 Loss (mean): 0.23218416275358322 Loss (std): 0.5403756589369416 Loss ratio: 2.32735795813275 Tokens per Sec: 2787.5487615937413
Epoch Step: 25 / 67 Loss (mean): 0.22493232225860993 Loss (std): 0.5882353562393854 Loss ratio: 2.6151659767380053 Tokens per Sec: 2803.5883735435627
Epoch Step: 30 / 67 Loss (mean): 0.17583856355668104 Loss (std): 0.5566228297531306 Loss ratio: 3.1655333079066295 Tokens per Sec: 3007.258151547847
Epoch Step: 35 / 67 Loss (mean): 0.17425880236078228 Loss (std): 0.5833494272349875 Loss ratio: 3.3476037900641105 Tokens per Sec: 2799.1294159648182
Epoch Step: 40 / 67 Loss (mean): 0.5495186399989507 Loss (std): 0.8251917707036799 Loss ratio: 1.5016629294053712 Tokens per Sec: 2995.898478447628
Epoch Step: 45 / 67 Loss (mean): 0.27571317988986266 Loss (std): 0.7252489380468059 Loss ratio: 2.6304471129617975 Tokens per Sec: 2621.62327749662
Epoch Step: 50 / 67 Loss (mean): 0.27703433197530103 Loss (std): 0.6801113480389555 Loss ratio: 2.4549713502642363 Tokens per Sec: 3207.3908803210616
Epoch Step: 55 / 67 Loss (mean): 0.3230918956633104 Loss (std): 0.7948774736729407 Loss ratio: 2.4602210217654963 Tokens per Sec: 2141.587665780188
Epoch Step: 60 / 67 Loss (mean): 1.8431950731674078 Loss (std): 8.259328858534989 Loss ratio: 4.480984665579581 Tokens per Sec: 2616.5325255823773
Epoch Step: 65 / 67 Loss (mean): 0.1913472146170534 Loss (std): 0.5465450886281371 Loss ratio: 2.856300206522199 Tokens per Sec: 2616.636590761202
Mean loss per sample: 0.3223499338908473 Std loss per sample: 1.638297329402856 ratio: 5.082356647721879
Epoch ended with duration 0:00:11.413584
Train perplexity: 1.0445789170750055
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint checks not method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.65257872641087 Loss (std): 46.59161429900343 Loss ratio: 0.467540478073502 Tokens per Sec: 4280.4972410915825
Mean loss per sample: 105.83780855270194 Std loss per sample: 54.21623190878548 ratio: 0.512257695526533
Epoch ended with duration 0:00:01.040777
b'BLEU = 2.64, 8.7/3.0/1.9/1.6 (BP=0.885, ratio=0.891, hyp_len=2774, ref_len=3113)\n'
Validation perplexity: 1694534.7765898858
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.64
Epoch 672 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3027438037443062 Loss (std): 1.0264868566190175 Loss ratio: 3.3906122732274846 Tokens per Sec: 2798.7415221514866
Epoch Step: 10 / 67 Loss (mean): 0.17811879289001809 Loss (std): 0.43080978117526736 Loss ratio: 2.418665510726186 Tokens per Sec: 2227.3823875678554
Epoch Step: 15 / 67 Loss (mean): 0.20062409927049885 Loss (std): 0.39381795219479027 Loss ratio: 1.9629643379174038 Tokens per Sec: 3217.631045072061
Epoch Step: 20 / 67 Loss (mean): 0.288546433828742 Loss (std): 0.5249942105290677 Loss ratio: 1.8194444601615216 Tokens per Sec: 2932.2028079684546
Epoch Step: 25 / 67 Loss (mean): 0.12437061705168162 Loss (std): 0.41029940218283967 Loss ratio: 3.2990059220526478 Tokens per Sec: 3014.167332385419
Epoch Step: 30 / 67 Loss (mean): 0.5241202834604337 Loss (std): 1.6356374621516072 Loss ratio: 3.12072917947867 Tokens per Sec: 3011.906147742499
Epoch Step: 35 / 67 Loss (mean): 0.49905436662811553 Loss (std): 1.0987224206927084 Loss ratio: 2.201608670647005 Tokens per Sec: 2845.18905312835
Epoch Step: 40 / 67 Loss (mean): 0.1661521127184642 Loss (std): 0.3243835360908718 Loss ratio: 1.9523286871502032 Tokens per Sec: 2502.9585943200923
Epoch Step: 45 / 67 Loss (mean): 0.0774244327294582 Loss (std): 0.1105932241249975 Loss ratio: 1.4284021235446436 Tokens per Sec: 2445.5621395216085
Epoch Step: 50 / 67 Loss (mean): 0.3222879948334594 Loss (std): 0.6586508412641119 Loss ratio: 2.0436716595803275 Tokens per Sec: 2755.9105758593187
Epoch Step: 55 / 67 Loss (mean): 0.12039441653405447 Loss (std): 0.3807743206396183 Loss ratio: 3.162724083071688 Tokens per Sec: 2870.469211559455
Epoch Step: 60 / 67 Loss (mean): 0.0956968513510219 Loss (std): 0.3035973596991662 Loss ratio: 3.1724905826373795 Tokens per Sec: 2543.94292264766
Epoch Step: 65 / 67 Loss (mean): 0.6975225806745584 Loss (std): 3.2635870454166414 Loss ratio: 4.678826371843761 Tokens per Sec: 3059.3281849493537
Mean loss per sample: 0.3811097875341919 Std loss per sample: 2.609562511929638 ratio: 6.847272353758474
Epoch ended with duration 0:00:11.448204
Train perplexity: 1.0529166186708439
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use method_4 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.86250784993172 Loss (std): 45.89881344475323 Loss ratio: 0.45962007597213184 Tokens per Sec: 4415.388130191827
Mean loss per sample: 103.68907465901775 Std loss per sample: 53.39580644663805 ratio: 0.5149607769403916
Epoch ended with duration 0:00:01.021574
b'BLEU = 2.44, 7.8/2.6/1.7/1.3 (BP=0.938, ratio=0.940, hyp_len=2927, ref_len=3113)\n'
Validation perplexity: 1266448.219647288
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.44
Epoch 673 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2732384088794788 Loss (std): 0.6920796218494853 Loss ratio: 2.5328782460988157 Tokens per Sec: 2832.5573275722654
Epoch Step: 10 / 67 Loss (mean): 0.21987776726382435 Loss (std): 0.5861380200530419 Loss ratio: 2.6657448242584416 Tokens per Sec: 3071.3380864990704
Epoch Step: 15 / 67 Loss (mean): 1.3739053594372308 Loss (std): 8.171216674354783 Loss ratio: 5.9474378043781835 Tokens per Sec: 2525.0648282350053
Epoch Step: 20 / 67 Loss (mean): 0.4636040875557228 Loss (std): 1.2770170506867033 Loss ratio: 2.7545422591495434 Tokens per Sec: 2859.418509524861
Epoch Step: 25 / 67 Loss (mean): 0.23952374135842547 Loss (std): 1.0490325175856385 Loss ratio: 4.379659868521579 Tokens per Sec: 2669.6700789405018
Epoch Step: 30 / 67 Loss (mean): 0.2075409789031255 Loss (std): 0.5686397875953466 Loss ratio: 2.7398916136979974 Tokens per Sec: 3095.782870743599
Epoch Step: 35 / 67 Loss (mean): 0.14558758820112416 Loss (std): 0.4155724365188424 Loss ratio: 2.8544496248179043 Tokens per Sec: 2897.306808168789
Epoch Step: 40 / 67 Loss (mean): 0.5258676622506755 Loss (std): 1.1842367944895946 Loss ratio: 2.251967328474139 Tokens per Sec: 2796.223542661593
Epoch Step: 45 / 67 Loss (mean): 0.788125001872686 Loss (std): 1.6707346038970199 Loss ratio: 2.119885297290583 Tokens per Sec: 2817.677467698211
Epoch Step: 50 / 67 Loss (mean): 0.2394507902336045 Loss (std): 0.6773265220641547 Loss ratio: 2.828666889774577 Tokens per Sec: 2757.807813283651
Epoch Step: 55 / 67 Loss (mean): 0.1822369297442492 Loss (std): 0.6998914756719372 Loss ratio: 3.8405578751472764 Tokens per Sec: 2927.177171287781
Epoch Step: 60 / 67 Loss (mean): 0.15445753044423327 Loss (std): 0.41984905417499885 Loss ratio: 2.7182168002264215 Tokens per Sec: 2687.7042882919345
Epoch Step: 65 / 67 Loss (mean): 0.0964629168967284 Loss (std): 0.29246388500673237 Loss ratio: 3.0318789273171096 Tokens per Sec: 2302.365439752645
Mean loss per sample: 0.43157529708164394 Std loss per sample: 3.4700646687930266 ratio: 8.040461750841526
Epoch ended with duration 0:00:11.386559
Train perplexity: 1.0601305007967183
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 120.39424192905426 Loss (std): 50.884379212214434 Loss ratio: 0.4226479472514932 Tokens per Sec: 4303.369609826229
Mean loss per sample: 107.33045567767542 Std loss per sample: 55.6213726764053 ratio: 0.5182254405351833
Epoch ended with duration 0:00:01.034535
b'BLEU = 2.91, 9.0/3.3/2.3/1.8 (BP=0.872, ratio=0.880, hyp_len=2738, ref_len=3113)\n'
Validation perplexity: 2074434.645043982
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.91
Epoch 674 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1758640265024951 Loss (std): 0.34928325661993875 Loss ratio: 1.986098371374337 Tokens per Sec: 2547.756815695152
Epoch Step: 10 / 67 Loss (mean): 0.3576926532914513 Loss (std): 0.9500533772051544 Loss ratio: 2.656060638827385 Tokens per Sec: 3234.629645785392
Epoch Step: 15 / 67 Loss (mean): 0.23756562278504134 Loss (std): 0.7847408492267679 Loss ratio: 3.3032592848538194 Tokens per Sec: 2802.127485342238
Epoch Step: 20 / 67 Loss (mean): 0.27154329930999666 Loss (std): 0.4676362533549942 Loss ratio: 1.7221424890368433 Tokens per Sec: 2779.2358766844604
Epoch Step: 25 / 67 Loss (mean): 0.1485028880815662 Loss (std): 0.5348359994677689 Loss ratio: 3.601519178361075 Tokens per Sec: 2880.164733464409
Epoch Step: 30 / 67 Loss (mean): 0.21371763599563565 Loss (std): 0.5889086705882384 Loss ratio: 2.7555455021047703 Tokens per Sec: 2640.844351488783
Epoch Step: 35 / 67 Loss (mean): 0.27047732932987856 Loss (std): 0.7330687596085959 Loss ratio: 2.7102780163676243 Tokens per Sec: 2944.22797771126
Epoch Step: 40 / 67 Loss (mean): 0.15703749730255367 Loss (std): 0.3456339704962886 Loss ratio: 2.2009645876511814 Tokens per Sec: 2622.176890151567
Epoch Step: 45 / 67 Loss (mean): 0.12703104130923748 Loss (std): 0.2449226025237349 Loss ratio: 1.9280531750307282 Tokens per Sec: 2708.7571825536456
Epoch Step: 50 / 67 Loss (mean): 0.19114880379129318 Loss (std): 0.4483516087007274 Loss ratio: 2.345563246057571 Tokens per Sec: 3021.699492717581
Epoch Step: 55 / 67 Loss (mean): 0.21594231588460389 Loss (std): 0.8427153830677745 Loss ratio: 3.902502293798257 Tokens per Sec: 2964.1618359827803
Epoch Step: 60 / 67 Loss (mean): 0.10591430847352967 Loss (std): 0.22259417826131303 Loss ratio: 2.101644069336904 Tokens per Sec: 2690.327751887648
Epoch Step: 65 / 67 Loss (mean): 0.1666244214047765 Loss (std): 0.4939792284766091 Loss ratio: 2.964626819478027 Tokens per Sec: 2290.906189174594
Mean loss per sample: 0.4691305744444223 Std loss per sample: 3.508360740858171 ratio: 7.4784312342315795
Epoch ended with duration 0:00:11.377449
Train perplexity: 1.065530964152702
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint checks method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.5242075920105 Loss (std): 45.75092284275245 Loss ratio: 0.45512343681870177 Tokens per Sec: 4415.397874711718
Mean loss per sample: 103.9444045873939 Std loss per sample: 53.64904738282097 ratio: 0.5161321342479206
Epoch ended with duration 0:00:01.022186
b'BLEU = 2.25, 7.9/2.5/1.5/1.2 (BP=0.925, ratio=0.928, hyp_len=2888, ref_len=3113)\n'
Validation perplexity: 1311036.5497770763
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.25
Epoch 675 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.16404325841722311 Loss (std): 0.30046657537021254 Loss ratio: 1.8316301338395395 Tokens per Sec: 2647.5031101048744
Epoch Step: 10 / 67 Loss (mean): 0.2655095440829882 Loss (std): 0.8338717594432447 Loss ratio: 3.140647023907389 Tokens per Sec: 2419.9438129762225
Epoch Step: 15 / 67 Loss (mean): 0.24373366398594953 Loss (std): 0.5819290931382191 Loss ratio: 2.3875614210262124 Tokens per Sec: 2813.319325339471
Epoch Step: 20 / 67 Loss (mean): 0.17391717222562875 Loss (std): 0.46746889864446595 Loss ratio: 2.687882356079263 Tokens per Sec: 2813.364226679664
Epoch Step: 25 / 67 Loss (mean): 0.09872518001702701 Loss (std): 0.21292123608025237 Loss ratio: 2.1567064860609024 Tokens per Sec: 2864.6982446458805
Epoch Step: 30 / 67 Loss (mean): 0.1646560228364251 Loss (std): 0.4428217706826152 Loss ratio: 2.6893748740823735 Tokens per Sec: 2667.2140918863543
Epoch Step: 35 / 67 Loss (mean): 0.36554689103286364 Loss (std): 0.710465591715184 Loss ratio: 1.9435689624051848 Tokens per Sec: 2877.1255223013923
Epoch Step: 40 / 67 Loss (mean): 0.11680135636379418 Loss (std): 0.1683658031048162 Loss ratio: 1.441471300901826 Tokens per Sec: 2783.4742050352415
Epoch Step: 45 / 67 Loss (mean): 0.22277052816980358 Loss (std): 0.7366154493376176 Loss ratio: 3.306610867197582 Tokens per Sec: 3195.902455947837
Epoch Step: 50 / 67 Loss (mean): 0.24103766727694165 Loss (std): 0.6144001741506668 Loss ratio: 2.5489799212367426 Tokens per Sec: 2896.052690457043
Epoch Step: 55 / 67 Loss (mean): 0.49456414246742497 Loss (std): 1.1824996615334658 Loss ratio: 2.390993523375691 Tokens per Sec: 2593.483349408193
Epoch Step: 60 / 67 Loss (mean): 0.1417655868735892 Loss (std): 0.3247577418383871 Loss ratio: 2.2908080091959837 Tokens per Sec: 2517.618324005366
Epoch Step: 65 / 67 Loss (mean): 0.08596985449185013 Loss (std): 0.18174963580496578 Loss ratio: 2.1141089150289942 Tokens per Sec: 2870.1061069489624
Mean loss per sample: 0.26286373368039084 Std loss per sample: 1.053007778836706 ratio: 4.005907411012546
Epoch ended with duration 0:00:11.360481
Train perplexity: 1.0362054014510609
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to method_4 ( ) and sslengine[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.43053844571114 Loss (std): 45.776217850120574 Loss ratio: 0.4557997851904919 Tokens per Sec: 4323.3127397809085
Mean loss per sample: 107.96320465756733 Std loss per sample: 54.93887794356102 ratio: 0.5088666839578687
Epoch ended with duration 0:00:01.050377
b'BLEU = 2.85, 8.8/3.1/2.1/1.7 (BP=0.916, ratio=0.919, hyp_len=2861, ref_len=3113)\n'
Validation perplexity: 2260164.225328163
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.85
Model saved checkpoint_commit_msg_generator!
Epoch 676 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.1004980959714885 Loss (std): 7.196049466339495 Loss ratio: 6.538902241341024 Tokens per Sec: 2789.0661527510115
Epoch Step: 10 / 67 Loss (mean): 0.25899459176343953 Loss (std): 0.7893996072258169 Loss ratio: 3.0479385760565947 Tokens per Sec: 3324.109240222624
Epoch Step: 15 / 67 Loss (mean): 0.3041153338199365 Loss (std): 0.949413518036299 Loss ratio: 3.1218863781411192 Tokens per Sec: 2875.326826993614
Epoch Step: 20 / 67 Loss (mean): 0.09745367712821462 Loss (std): 0.18380241888748 Loss ratio: 1.8860490881802328 Tokens per Sec: 2753.2152889811855
Epoch Step: 25 / 67 Loss (mean): 0.26625063471010435 Loss (std): 0.6719957585562987 Loss ratio: 2.5239217149208772 Tokens per Sec: 2438.190483670082
Epoch Step: 30 / 67 Loss (mean): 0.37674904640880413 Loss (std): 0.7065868868094082 Loss ratio: 1.875484207709719 Tokens per Sec: 2821.200748307804
Epoch Step: 35 / 67 Loss (mean): 1.396731483086569 Loss (std): 5.440154296614127 Loss ratio: 3.894917786625812 Tokens per Sec: 2811.9989757963863
Epoch Step: 40 / 67 Loss (mean): 0.2495966402166232 Loss (std): 0.8093947597097386 Loss ratio: 3.242811117198014 Tokens per Sec: 2960.3580250688983
Epoch Step: 45 / 67 Loss (mean): 0.1267978867444981 Loss (std): 0.3162249870792962 Loss ratio: 2.493929474680441 Tokens per Sec: 2933.885362671992
Epoch Step: 50 / 67 Loss (mean): 0.20295776065967175 Loss (std): 0.48530489404147 Loss ratio: 2.391162045068333 Tokens per Sec: 2739.8575204998533
Epoch Step: 55 / 67 Loss (mean): 0.0913456156367829 Loss (std): 0.1376333575966005 Loss ratio: 1.506731950265367 Tokens per Sec: 2300.991579003158
Epoch Step: 60 / 67 Loss (mean): 0.231837041754261 Loss (std): 0.6532732500368952 Loss ratio: 2.8178122231620844 Tokens per Sec: 3011.1908416201795
Epoch Step: 65 / 67 Loss (mean): 0.19415795452914608 Loss (std): 0.425718649279304 Loss ratio: 2.1926407821493457 Tokens per Sec: 2699.904531969929
Mean loss per sample: 0.27766588446446683 Std loss per sample: 1.3572249461772203 ratio: 4.887978761938634
Epoch ended with duration 0:00:11.408504
Train perplexity: 1.0382827172075193
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint icons use method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.38512206077576 Loss (std): 46.50791252505115 Loss ratio: 0.4632948744824362 Tokens per Sec: 4294.424408730847
Mean loss per sample: 109.46632450724357 Std loss per sample: 54.051090214849026 ratio: 0.49376911537093193
Epoch ended with duration 0:00:01.052748
b'BLEU = 2.59, 8.3/2.8/1.8/1.4 (BP=0.926, ratio=0.929, hyp_len=2891, ref_len=3113)\n'
Validation perplexity: 2770802.916551013
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.59
Epoch 677 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.0687270795706354 Loss (std): 0.11616360622323908 Loss ratio: 1.690215951979307 Tokens per Sec: 2538.692119725506
Epoch Step: 10 / 67 Loss (mean): 0.11692638319982507 Loss (std): 0.3855527541486134 Loss ratio: 3.297397418764854 Tokens per Sec: 2704.757522086163
Epoch Step: 15 / 67 Loss (mean): 0.18091434155030583 Loss (std): 0.44687304407035194 Loss ratio: 2.4700808141630524 Tokens per Sec: 3146.018376850184
Epoch Step: 20 / 67 Loss (mean): 0.0956305908334798 Loss (std): 0.22097664282851487 Loss ratio: 2.3107317533287897 Tokens per Sec: 2699.638315171356
Epoch Step: 25 / 67 Loss (mean): 0.158829135920314 Loss (std): 0.28888740081600145 Loss ratio: 1.8188564657364807 Tokens per Sec: 3074.9792818627157
Epoch Step: 30 / 67 Loss (mean): 0.13117177618460119 Loss (std): 0.31798369501943463 Loss ratio: 2.424177702464961 Tokens per Sec: 2603.5217733235395
Epoch Step: 35 / 67 Loss (mean): 0.18190736515589379 Loss (std): 0.48356336520350957 Loss ratio: 2.6582945929050092 Tokens per Sec: 2956.1069905205914
Epoch Step: 40 / 67 Loss (mean): 0.2437605193363197 Loss (std): 0.6048712952179716 Loss ratio: 2.481416173812062 Tokens per Sec: 2950.2762413376
Epoch Step: 45 / 67 Loss (mean): 0.08301948958705907 Loss (std): 0.18402704160954023 Loss ratio: 2.2166727659359884 Tokens per Sec: 2554.8412779030177
Epoch Step: 50 / 67 Loss (mean): 0.15825908511669695 Loss (std): 0.3789718189573142 Loss ratio: 2.3946291530616914 Tokens per Sec: 2448.8402498704904
Epoch Step: 55 / 67 Loss (mean): 0.1959727055473195 Loss (std): 0.6059075449163545 Loss ratio: 3.0917955805332915 Tokens per Sec: 3292.2723622980934
Epoch Step: 60 / 67 Loss (mean): 0.14214378293900154 Loss (std): 0.31222937991034366 Loss ratio: 2.1965742957912644 Tokens per Sec: 2626.2308462902433
Epoch Step: 65 / 67 Loss (mean): 0.23862332488351967 Loss (std): 0.5579621683781227 Loss ratio: 2.3382549407124533 Tokens per Sec: 2540.5115589576612
Mean loss per sample: 0.5066058419104825 Std loss per sample: 3.5111657375025245 ratio: 6.9307644070218775
Epoch ended with duration 0:00:11.433635
Train perplexity: 1.070947344870497
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint icons use ( # method_5 )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog class provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.76284727454185 Loss (std): 47.09416261171033 Loss ratio: 0.46737625906298563 Tokens per Sec: 4283.028231790286
Mean loss per sample: 106.07906845071521 Std loss per sample: 54.41336701842466 ratio: 0.5129510261838822
Epoch ended with duration 0:00:01.037249
b'BLEU = 2.86, 8.9/3.1/2.1/1.7 (BP=0.907, ratio=0.911, hyp_len=2836, ref_len=3113)\n'
Validation perplexity: 1750853.306175275
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.86
Epoch 678 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.2474532538744825 Loss (std): 5.1297138764173305 Loss ratio: 4.112149181129538 Tokens per Sec: 2246.7604479583165
Epoch Step: 10 / 67 Loss (mean): 0.1957634555765253 Loss (std): 0.36881048856397336 Loss ratio: 1.8839598406036655 Tokens per Sec: 3115.639149834718
Epoch Step: 15 / 67 Loss (mean): 0.16189917826886813 Loss (std): 0.4432901424464029 Loss ratio: 2.7380629548979245 Tokens per Sec: 2989.7415797996046
Epoch Step: 20 / 67 Loss (mean): 0.20798323279268516 Loss (std): 0.49944818692919724 Loss ratio: 2.4013867859580795 Tokens per Sec: 3062.861055900146
Epoch Step: 25 / 67 Loss (mean): 0.24792850299127167 Loss (std): 0.6685141997664793 Loss ratio: 2.6963991299944015 Tokens per Sec: 2856.4576890461717
Epoch Step: 30 / 67 Loss (mean): 0.12783351833422785 Loss (std): 0.3305729139006343 Loss ratio: 2.5859642933110316 Tokens per Sec: 2282.5897048262295
Epoch Step: 35 / 67 Loss (mean): 0.1485412613023982 Loss (std): 0.39781384813875476 Loss ratio: 2.6781370014685075 Tokens per Sec: 2817.1187142680915
Epoch Step: 40 / 67 Loss (mean): 0.5786371983165282 Loss (std): 3.9830223326543264 Loss ratio: 6.883453646330424 Tokens per Sec: 2421.890665116214
Epoch Step: 45 / 67 Loss (mean): 0.1292096420966118 Loss (std): 0.2901877827551643 Loss ratio: 2.2458678628502584 Tokens per Sec: 2608.601633066755
Epoch Step: 50 / 67 Loss (mean): 0.49459256244608696 Loss (std): 1.0217021437731995 Loss ratio: 2.0657450624008726 Tokens per Sec: 3283.764464030548
Epoch Step: 55 / 67 Loss (mean): 0.17199118093685684 Loss (std): 0.4112266588532496 Loss ratio: 2.3909752617154445 Tokens per Sec: 2533.24673903657
Epoch Step: 60 / 67 Loss (mean): 0.1661710894825319 Loss (std): 0.425525199105041 Loss ratio: 2.560765536473014 Tokens per Sec: 2699.233100767871
Epoch Step: 65 / 67 Loss (mean): 0.19007127208806196 Loss (std): 0.3926843266135658 Loss ratio: 2.065984629342782 Tokens per Sec: 3767.4459330812
Mean loss per sample: 0.4614814656722976 Std loss per sample: 3.571745472086711 ratio: 7.739737644464885
Epoch ended with duration 0:00:11.413503
Train perplexity: 1.0644287928965739
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.3103441298008 Loss (std): 45.70346254910458 Loss ratio: 0.4556206336005054 Tokens per Sec: 4289.64380666829
Mean loss per sample: 108.4356840280358 Std loss per sample: 53.52704232899502 ratio: 0.4936294063046232
Epoch ended with duration 0:00:01.057356
b'BLEU = 2.56, 8.5/2.7/1.8/1.3 (BP=0.944, ratio=0.945, hyp_len=2942, ref_len=3113)\n'
Validation perplexity: 2409614.7846236713
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.56
Epoch 679 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.18315494470607518 Loss (std): 0.38748999766964815 Loss ratio: 2.115640384656212 Tokens per Sec: 2293.699759538196
Epoch Step: 10 / 67 Loss (mean): 0.2561794936855222 Loss (std): 1.4220794316802867 Loss ratio: 5.551105637775935 Tokens per Sec: 2298.6555568215795
Epoch Step: 15 / 67 Loss (mean): 0.19178482477218495 Loss (std): 0.6181555546386396 Loss ratio: 3.2231724036191434 Tokens per Sec: 2795.9566603276867
Epoch Step: 20 / 67 Loss (mean): 0.12985195544024464 Loss (std): 0.2842693794862991 Loss ratio: 2.189180582783864 Tokens per Sec: 2397.2293857476866
Epoch Step: 25 / 67 Loss (mean): 0.2409531992771008 Loss (std): 0.5292160078616487 Loss ratio: 2.1963435615272333 Tokens per Sec: 2668.3228782699935
Epoch Step: 30 / 67 Loss (mean): 0.10255638512990117 Loss (std): 0.18883679540947015 Loss ratio: 1.8412973036274969 Tokens per Sec: 3429.5600619073834
Epoch Step: 35 / 67 Loss (mean): 0.49601342307505547 Loss (std): 1.4117953148275624 Loss ratio: 2.8462844938249448 Tokens per Sec: 3616.6349390943815
Epoch Step: 40 / 67 Loss (mean): 0.27789027764265484 Loss (std): 0.8179104132090526 Loss ratio: 2.9432854583736874 Tokens per Sec: 2941.463433937085
Epoch Step: 45 / 67 Loss (mean): 0.4281444881708012 Loss (std): 0.8275370854736643 Loss ratio: 1.932845355569618 Tokens per Sec: 3282.781251441255
Epoch Step: 50 / 67 Loss (mean): 0.16338687082316028 Loss (std): 0.3006825959805718 Loss ratio: 1.8403106349102665 Tokens per Sec: 2353.9890950019267
Epoch Step: 55 / 67 Loss (mean): 0.06886298362405796 Loss (std): 0.11883757588624873 Loss ratio: 1.7257105288236692 Tokens per Sec: 2690.531958624069
Epoch Step: 60 / 67 Loss (mean): 0.3843091808103054 Loss (std): 0.8358461969684857 Loss ratio: 2.1749316402125154 Tokens per Sec: 2788.8416740037824
Epoch Step: 65 / 67 Loss (mean): 0.20368292502189433 Loss (std): 0.4753208018847627 Loss ratio: 2.3336310681598342 Tokens per Sec: 2722.782355242348
Mean loss per sample: 0.3583328959138498 Std loss per sample: 2.1494317707126362 ratio: 5.998421566155627
Epoch ended with duration 0:00:11.447657
Train perplexity: 1.0496768328246346
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint icons not method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 123.95720747113228 Loss (std): 49.621325702233456 Loss ratio: 0.4003101289111365 Tokens per Sec: 4310.462376261942
Mean loss per sample: 109.21431084997097 Std loss per sample: 55.55404473844758 ratio: 0.5086700113391078
Epoch ended with duration 0:00:01.048115
b'BLEU = 2.60, 8.5/2.9/1.9/1.6 (BP=0.887, ratio=0.893, hyp_len=2780, ref_len=3113)\n'
Validation perplexity: 2677771.1156265917
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.6
Epoch 680 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.4673751872032881 Loss (std): 1.1938619523045884 Loss ratio: 2.5543973770805035 Tokens per Sec: 2982.2293659431775
Epoch Step: 10 / 67 Loss (mean): 0.14756826512893895 Loss (std): 0.3695428739354561 Loss ratio: 2.5042164290036553 Tokens per Sec: 2230.7351989584404
Epoch Step: 15 / 67 Loss (mean): 0.42601258582726587 Loss (std): 0.7687813334388207 Loss ratio: 1.804597702074784 Tokens per Sec: 2998.4923529158546
Epoch Step: 20 / 67 Loss (mean): 0.16114987789660518 Loss (std): 0.38187872820410335 Loss ratio: 2.3697115578897257 Tokens per Sec: 2374.4697838245206
Epoch Step: 25 / 67 Loss (mean): 0.08790805253011058 Loss (std): 0.18313938135342028 Loss ratio: 2.0833060917905186 Tokens per Sec: 2788.161734375322
Epoch Step: 30 / 67 Loss (mean): 2.9395548225475068 Loss (std): 8.35935624576573 Loss ratio: 2.843749053988134 Tokens per Sec: 2713.201262755667
Epoch Step: 35 / 67 Loss (mean): 0.041458457245469274 Loss (std): 0.05094584538879808 Loss ratio: 1.2288408390875574 Tokens per Sec: 2746.48840274009
Epoch Step: 40 / 67 Loss (mean): 0.36467423012072686 Loss (std): 1.9858030628683414 Loss ratio: 5.445416480925821 Tokens per Sec: 3051.0751521163697
Epoch Step: 45 / 67 Loss (mean): 0.37055523421213366 Loss (std): 0.9887120556087451 Loss ratio: 2.6681907697537257 Tokens per Sec: 2682.1256870440143
Epoch Step: 50 / 67 Loss (mean): 1.0474546208424727 Loss (std): 1.9772223071071582 Loss ratio: 1.8876448370783538 Tokens per Sec: 4146.110426782814
Epoch Step: 55 / 67 Loss (mean): 0.22739549442121643 Loss (std): 0.6712268541857234 Loss ratio: 2.951803666533406 Tokens per Sec: 2370.0751513780465
Epoch Step: 60 / 67 Loss (mean): 0.3137454584580155 Loss (std): 0.8844869189935591 Loss ratio: 2.819122620421671 Tokens per Sec: 2981.6063138237937
Epoch Step: 65 / 67 Loss (mean): 0.27060867954310197 Loss (std): 0.5555960113986353 Loss ratio: 2.053134483109368 Tokens per Sec: 2852.772771677773
Mean loss per sample: 0.5580360473363732 Std loss per sample: 3.6844528377743377 ratio: 6.6025355447215786
Epoch ended with duration 0:00:11.467402
Train perplexity: 1.0784255117318347
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily not ==[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api oauth[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.81893119215965 Loss (std): 46.84234905436052 Loss ratio: 0.4692731979286088 Tokens per Sec: 4179.358194532007
Mean loss per sample: 110.1438332145087 Std loss per sample: 53.780928252598095 ratio: 0.4882790682239829
Epoch ended with duration 0:00:01.070316
b'BLEU = 2.45, 8.4/2.8/1.8/1.4 (BP=0.878, ratio=0.885, hyp_len=2754, ref_len=3113)\n'
Validation perplexity: 3037247.582886707
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.45
Model saved checkpoint_commit_msg_generator!
Epoch 681 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.27957300108801064 Loss (std): 0.5979194888012106 Loss ratio: 2.138688236969575 Tokens per Sec: 2352.8257292445774
Epoch Step: 10 / 67 Loss (mean): 0.2528151725564385 Loss (std): 0.5395013093207023 Loss ratio: 2.133975203566012 Tokens per Sec: 3248.831344529445
Epoch Step: 15 / 67 Loss (mean): 0.19464505970518076 Loss (std): 0.5704811616096481 Loss ratio: 2.9308792243364805 Tokens per Sec: 2655.474271769437
Epoch Step: 20 / 67 Loss (mean): 0.17109404753500712 Loss (std): 0.5942435512806247 Loss ratio: 3.4731982780349973 Tokens per Sec: 2960.28265075174
Epoch Step: 25 / 67 Loss (mean): 0.18827933723514434 Loss (std): 0.3555832727060126 Loss ratio: 1.888594244741367 Tokens per Sec: 2719.2475131225515
Epoch Step: 30 / 67 Loss (mean): 0.3783442421288328 Loss (std): 2.08888558628474 Loss ratio: 5.521124292869345 Tokens per Sec: 2439.1521792917065
Epoch Step: 35 / 67 Loss (mean): 0.14204488968243822 Loss (std): 0.27210524035877903 Loss ratio: 1.9156285098824 Tokens per Sec: 2791.3214450316586
Epoch Step: 40 / 67 Loss (mean): 2.585529829263578 Loss (std): 10.114110814854632 Loss ratio: 3.9118136253471025 Tokens per Sec: 2677.935728339284
Epoch Step: 45 / 67 Loss (mean): 0.11027069607189333 Loss (std): 0.2784294967034809 Loss ratio: 2.5249636269816675 Tokens per Sec: 2578.5081159411134
Epoch Step: 50 / 67 Loss (mean): 0.15985241509952175 Loss (std): 0.46682456492653207 Loss ratio: 2.9203472755534783 Tokens per Sec: 3281.2132022996448
Epoch Step: 55 / 67 Loss (mean): 0.2514650828561571 Loss (std): 0.5357588253067964 Loss ratio: 2.1305495746034087 Tokens per Sec: 3044.96582111585
Epoch Step: 60 / 67 Loss (mean): 0.3521741945642134 Loss (std): 1.05140019084231 Loss ratio: 2.985454945508802 Tokens per Sec: 2231.0392963089334
Epoch Step: 65 / 67 Loss (mean): 0.3099180550179881 Loss (std): 0.7406479035658907 Loss ratio: 2.3898185070982794 Tokens per Sec: 3301.864519787274
Mean loss per sample: 0.4241372624307331 Std loss per sample: 2.529043848796747 ratio: 5.962795709819934
Epoch ended with duration 0:00:11.403477
Train perplexity: 1.059064160315687
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) over[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api help[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.41499048471451 Loss (std): 45.38037073573219 Loss ratio: 0.456474124419995 Tokens per Sec: 4410.431801407858
Mean loss per sample: 104.21434692165158 Std loss per sample: 53.59084793633324 ratio: 0.5142367583670882
Epoch ended with duration 0:00:01.019396
b'BLEU = 2.16, 7.5/2.4/1.4/1.1 (BP=0.934, ratio=0.936, hyp_len=2915, ref_len=3113)\n'
Validation perplexity: 1359884.956171897
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.16
Epoch 682 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.24768379187321443 Loss (std): 0.48949288996483675 Loss ratio: 1.9762814767282015 Tokens per Sec: 2540.8369510871935
Epoch Step: 10 / 67 Loss (mean): 0.09147531401777087 Loss (std): 0.17091632256985367 Loss ratio: 1.8684420425892152 Tokens per Sec: 2568.647518781678
Epoch Step: 15 / 67 Loss (mean): 0.20058237574994564 Loss (std): 0.3974131601142062 Loss ratio: 1.981296505380104 Tokens per Sec: 2518.7586912933502
Epoch Step: 20 / 67 Loss (mean): 0.24368402309301018 Loss (std): 0.6339656476979819 Loss ratio: 2.6015888922516996 Tokens per Sec: 2539.7427193630115
Epoch Step: 25 / 67 Loss (mean): 0.15414945417933268 Loss (std): 0.33325875194397875 Loss ratio: 2.161919766230738 Tokens per Sec: 2854.4683916851773
Epoch Step: 30 / 67 Loss (mean): 0.11672186736905132 Loss (std): 0.1855179801757066 Loss ratio: 1.5894020919759246 Tokens per Sec: 3127.3244599506784
Epoch Step: 35 / 67 Loss (mean): 0.2105876327536862 Loss (std): 0.4937610816705645 Loss ratio: 2.3446822361505535 Tokens per Sec: 2935.621679407668
Epoch Step: 40 / 67 Loss (mean): 0.43432056276287767 Loss (std): 1.018062473624212 Loss ratio: 2.344034708253118 Tokens per Sec: 3256.2354079597303
Epoch Step: 45 / 67 Loss (mean): 0.24476512165892927 Loss (std): 0.551184815855343 Loss ratio: 2.2518928028618297 Tokens per Sec: 2693.322039858424
Epoch Step: 50 / 67 Loss (mean): 0.14337738379708753 Loss (std): 0.23796866789738347 Loss ratio: 1.6597364353792694 Tokens per Sec: 2909.2081377966474
Epoch Step: 55 / 67 Loss (mean): 0.1383307234118547 Loss (std): 0.29914019436841627 Loss ratio: 2.1625000360749973 Tokens per Sec: 2946.1053975022446
Epoch Step: 60 / 67 Loss (mean): 0.21279768654767395 Loss (std): 0.5479551011614389 Loss ratio: 2.57500497327389 Tokens per Sec: 2779.5023541148685
Epoch Step: 65 / 67 Loss (mean): 0.27873279955292674 Loss (std): 0.6178589068070629 Loss ratio: 2.2166709759241727 Tokens per Sec: 2478.806698903292
Mean loss per sample: 0.6698278682075143 Std loss per sample: 4.711494737746837 ratio: 7.033888796467938
Epoch ended with duration 0:00:11.442127
Train perplexity: 1.094861114741032
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to use ( ) and hint[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.20656377077103 Loss (std): 45.49449076244506 Loss ratio: 0.4540070934526469 Tokens per Sec: 4396.033073250262
Mean loss per sample: 105.68473534151667 Std loss per sample: 53.56162471670366 ratio: 0.5068056852640173
Epoch ended with duration 0:00:01.035604
b'BLEU = 2.63, 8.8/2.7/1.8/1.4 (BP=0.953, ratio=0.954, hyp_len=2971, ref_len=3113)\n'
Validation perplexity: 1659745.1610686106
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.63
Epoch 683 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.21028986020610319 Loss (std): 0.3410727761810885 Loss ratio: 1.6219173660908146 Tokens per Sec: 3184.1391475579476
Epoch Step: 10 / 67 Loss (mean): 0.23005933954937063 Loss (std): 0.8633651808332776 Loss ratio: 3.7527934424414005 Tokens per Sec: 2646.3834442909915
Epoch Step: 15 / 67 Loss (mean): 3.772388981862605 Loss (std): 13.240602892846303 Loss ratio: 3.5098721145953506 Tokens per Sec: 3093.690841008921
Epoch Step: 20 / 67 Loss (mean): 0.16589364323772315 Loss (std): 0.2930560395460374 Loss ratio: 1.766529650121026 Tokens per Sec: 2325.816336273491
Epoch Step: 25 / 67 Loss (mean): 0.9925318736477493 Loss (std): 6.577171763611048 Loss ratio: 6.626660501529942 Tokens per Sec: 3119.3370454570554
Epoch Step: 30 / 67 Loss (mean): 0.5862871104372971 Loss (std): 1.569120863150823 Loss ratio: 2.67636936786902 Tokens per Sec: 2622.016066056627
Epoch Step: 35 / 67 Loss (mean): 0.12477368128747912 Loss (std): 0.2204534739314108 Loss ratio: 1.7668267190376872 Tokens per Sec: 2581.9500642984785
Epoch Step: 40 / 67 Loss (mean): 0.39717643107269396 Loss (std): 1.1746219189723657 Loss ratio: 2.957431073641372 Tokens per Sec: 2739.050053773324
Epoch Step: 45 / 67 Loss (mean): 0.2996309381287574 Loss (std): 0.6557073026365905 Loss ratio: 2.1883831714160973 Tokens per Sec: 2521.9460993044995
Epoch Step: 50 / 67 Loss (mean): 0.184214485546363 Loss (std): 0.42542541268589107 Loss ratio: 2.3094026043832487 Tokens per Sec: 2689.0295828986946
Epoch Step: 55 / 67 Loss (mean): 0.1718757917988114 Loss (std): 0.3588341099937482 Loss ratio: 2.087752476589491 Tokens per Sec: 3359.5128199797036
Epoch Step: 60 / 67 Loss (mean): 0.26342411638506746 Loss (std): 0.7579741252549791 Loss ratio: 2.877390785842058 Tokens per Sec: 2516.2875689270486
Epoch Step: 65 / 67 Loss (mean): 0.2898538740937511 Loss (std): 0.6958268541162874 Loss ratio: 2.400612571737535 Tokens per Sec: 2505.678141448182
Mean loss per sample: 0.49605082148768215 Std loss per sample: 3.8925372478751137 ratio: 7.847053324498471
Epoch ended with duration 0:00:11.436628
Train perplexity: 1.069419025886925
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire 0 length ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for developer[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.87479236721992 Loss (std): 46.35937669774894 Loss ratio: 0.4641749494436459 Tokens per Sec: 4275.82616664558
Mean loss per sample: 105.73857026107487 Std loss per sample: 54.24323849282579 ratio: 0.5129938711947398
Epoch ended with duration 0:00:01.038590
b'BLEU = 2.90, 8.8/3.1/2.1/1.6 (BP=0.935, ratio=0.937, hyp_len=2917, ref_len=3113)\n'
Validation perplexity: 1671898.269196555
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.9
Epoch 684 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.22690876973319973 Loss (std): 0.5112721434393614 Loss ratio: 2.253205744495981 Tokens per Sec: 2948.6230189228427
Epoch Step: 10 / 67 Loss (mean): 0.17379869926116953 Loss (std): 0.36196302048862017 Loss ratio: 2.082656671352262 Tokens per Sec: 2994.3326688071907
Epoch Step: 15 / 67 Loss (mean): 0.9599993178853765 Loss (std): 7.13104785179711 Loss ratio: 7.428180123611873 Tokens per Sec: 2843.042703259479
Epoch Step: 20 / 67 Loss (mean): 0.18786544087561197 Loss (std): 0.4566373174610244 Loss ratio: 2.4306616231953466 Tokens per Sec: 3055.7783645090217
Epoch Step: 25 / 67 Loss (mean): 0.04475950345901462 Loss (std): 0.053696135900797706 Loss ratio: 1.1996588824977958 Tokens per Sec: 2297.7164132360904
Epoch Step: 30 / 67 Loss (mean): 4.308407417043782 Loss (std): 15.953076080217455 Loss ratio: 3.702777972461034 Tokens per Sec: 2805.8892700299825
Epoch Step: 35 / 67 Loss (mean): 0.1652656272162858 Loss (std): 0.556990219874045 Loss ratio: 3.37027262871246 Tokens per Sec: 2646.6191842213148
Epoch Step: 40 / 67 Loss (mean): 0.3476433125119911 Loss (std): 0.9015952788866212 Loss ratio: 2.593449223492607 Tokens per Sec: 2485.745365189672
Epoch Step: 45 / 67 Loss (mean): 0.16409310971266677 Loss (std): 0.35969593067107386 Loss ratio: 2.1920233658860813 Tokens per Sec: 3259.4127687639275
Epoch Step: 50 / 67 Loss (mean): 0.3865522923933895 Loss (std): 0.8762078415685978 Loss ratio: 2.2667252498838937 Tokens per Sec: 3003.29368697568
Epoch Step: 55 / 67 Loss (mean): 0.32072201796472655 Loss (std): 0.8130732523211603 Loss ratio: 2.535133875375476 Tokens per Sec: 2535.3324078776823
Epoch Step: 60 / 67 Loss (mean): 0.32390875281089393 Loss (std): 0.8168495740529292 Loss ratio: 2.5218508822755603 Tokens per Sec: 2717.110157043417
Epoch Step: 65 / 67 Loss (mean): 0.1247124397468724 Loss (std): 0.2985457078238385 Loss ratio: 2.3938727237619095 Tokens per Sec: 2716.480927307556
Mean loss per sample: 0.42778683785239396 Std loss per sample: 3.2630511923941383 ratio: 7.627750327185242
Epoch ended with duration 0:00:11.440866
Train perplexity: 1.0595872410487253
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api help[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.57281994819641 Loss (std): 46.59175356798053 Loss ratio: 0.46791638111906725 Tokens per Sec: 4410.672935914518
Mean loss per sample: 103.8940931564716 Std loss per sample: 54.18770926521198 ratio: 0.5215667957523012
Epoch ended with duration 0:00:01.024154
b'BLEU = 2.75, 8.3/3.1/2.1/1.7 (BP=0.888, ratio=0.894, hyp_len=2782, ref_len=3113)\n'
Validation perplexity: 1302128.1750129582
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.75
Epoch 685 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3900055060366867 Loss (std): 0.7734775745892011 Loss ratio: 1.9832478327022445 Tokens per Sec: 2486.47802770214
Epoch Step: 10 / 67 Loss (mean): 0.05029029030447418 Loss (std): 0.059901640214231035 Loss ratio: 1.1911174075863658 Tokens per Sec: 2393.7947961932027
Epoch Step: 15 / 67 Loss (mean): 0.6146692696356695 Loss (std): 2.4523611032955386 Loss ratio: 3.9897245957148906 Tokens per Sec: 2580.835246930219
Epoch Step: 20 / 67 Loss (mean): 0.25040440118573315 Loss (std): 0.717711385847761 Loss ratio: 2.8662091498759676 Tokens per Sec: 3576.0795647701934
Epoch Step: 25 / 67 Loss (mean): 0.18256532422310556 Loss (std): 0.7182747849664013 Loss ratio: 3.934343983573941 Tokens per Sec: 3336.3669255195127
Epoch Step: 30 / 67 Loss (mean): 1.243569190697599 Loss (std): 5.6080154132973785 Loss ratio: 4.509612698069078 Tokens per Sec: 2557.6211810868035
Epoch Step: 35 / 67 Loss (mean): 0.18065723647941923 Loss (std): 0.7244278249616183 Loss ratio: 4.009957414820448 Tokens per Sec: 2376.3599025095928
Epoch Step: 40 / 67 Loss (mean): 0.22457926814058737 Loss (std): 0.676855995240003 Loss ratio: 3.0138845889206873 Tokens per Sec: 2565.393413456228
Epoch Step: 45 / 67 Loss (mean): 0.23583081894321367 Loss (std): 0.8244387100982994 Loss ratio: 3.495890459918295 Tokens per Sec: 2962.50664800194
Epoch Step: 50 / 67 Loss (mean): 0.43298878424684517 Loss (std): 0.860730245200987 Loss ratio: 1.9878811565481291 Tokens per Sec: 3325.719006313802
Epoch Step: 55 / 67 Loss (mean): 0.2741882933460147 Loss (std): 0.5157139026694664 Loss ratio: 1.8808749869515982 Tokens per Sec: 2524.152084803642
Epoch Step: 60 / 67 Loss (mean): 0.423898084765824 Loss (std): 1.3534301741002641 Loss ratio: 3.1928197430944887 Tokens per Sec: 2478.010509877835
Epoch Step: 65 / 67 Loss (mean): 0.4209937938303483 Loss (std): 0.6451055375005629 Loss ratio: 1.5323397801928809 Tokens per Sec: 3098.066119912257
Mean loss per sample: 0.7151992025755328 Std loss per sample: 5.034487990751912 ratio: 7.039280766284433
Epoch ended with duration 0:00:11.521673
Train perplexity: 1.1016028416116648
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint icons use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.2200562953949 Loss (std): 46.33352587968797 Loss ratio: 0.4669774197844156 Tokens per Sec: 4284.257234924991
Mean loss per sample: 104.9507567295652 Std loss per sample: 53.12994977358412 ratio: 0.5062369384385499
Epoch ended with duration 0:00:01.035947
b'BLEU = 2.54, 8.4/2.6/1.7/1.3 (BP=0.971, ratio=0.971, hyp_len=3023, ref_len=3113)\n'
Validation perplexity: 1502599.8249235295
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.54
Model saved checkpoint_commit_msg_generator!
Epoch 686 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6199185046425555 Loss (std): 1.2859432715656818 Loss ratio: 2.074374715281577 Tokens per Sec: 2494.7355810479485
Epoch Step: 10 / 67 Loss (mean): 0.27802962519126595 Loss (std): 0.4827465547286434 Loss ratio: 1.7363133673130904 Tokens per Sec: 2591.9496497911846
Epoch Step: 15 / 67 Loss (mean): 0.21364733455811802 Loss (std): 0.3670385772688174 Loss ratio: 1.7179646918036915 Tokens per Sec: 2544.0377567258192
Epoch Step: 20 / 67 Loss (mean): 0.1733990250959323 Loss (std): 0.35361083211468136 Loss ratio: 2.0392896206829745 Tokens per Sec: 3163.290406662327
Epoch Step: 25 / 67 Loss (mean): 0.14671780513867816 Loss (std): 0.4255183244386188 Loss ratio: 2.900250068738538 Tokens per Sec: 2740.8571091316862
Epoch Step: 30 / 67 Loss (mean): 0.21302401908087631 Loss (std): 0.4613798971344994 Loss ratio: 2.16585856902518 Tokens per Sec: 2148.1634816081537
Epoch Step: 35 / 67 Loss (mean): 0.17317133824008124 Loss (std): 0.3044613430781147 Loss ratio: 1.7581508936312291 Tokens per Sec: 3208.1229780284143
Epoch Step: 40 / 67 Loss (mean): 0.4688907933950759 Loss (std): 1.2343000787166012 Loss ratio: 2.6323828407452012 Tokens per Sec: 3367.3844521855394
Epoch Step: 45 / 67 Loss (mean): 0.779902380517342 Loss (std): 1.288432369354633 Loss ratio: 1.652043129423405 Tokens per Sec: 2647.518111793716
Epoch Step: 50 / 67 Loss (mean): 0.4010050660535853 Loss (std): 1.2449711135215864 Loss ratio: 3.1046268960483006 Tokens per Sec: 3176.9143210163506
Epoch Step: 55 / 67 Loss (mean): 1.3685427308682847 Loss (std): 3.4492463767701946 Loss ratio: 2.520379012631771 Tokens per Sec: 3260.4297564183566
Epoch Step: 60 / 67 Loss (mean): 0.29317392263601505 Loss (std): 0.6582192670343758 Loss ratio: 2.2451494359257063 Tokens per Sec: 2448.431081077703
Epoch Step: 65 / 67 Loss (mean): 0.2418178868592804 Loss (std): 0.6265817575348926 Loss ratio: 2.591130729297604 Tokens per Sec: 2632.046362309074
Mean loss per sample: 0.4469569640392076 Std loss per sample: 2.4832036693839896 ratio: 5.5558003771615025
Epoch ended with duration 0:00:11.417878
Train perplexity: 1.0623390730157214
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint checks error[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.6212899684906 Loss (std): 45.7571714846228 Loss ratio: 0.45931117233169155 Tokens per Sec: 4400.049193350453
Mean loss per sample: 105.76610179123331 Std loss per sample: 53.95951754559375 ratio: 0.5101778039631438
Epoch ended with duration 0:00:01.040116
b'BLEU = 2.61, 9.1/2.9/1.8/1.4 (BP=0.914, ratio=0.918, hyp_len=2857, ref_len=3113)\n'
Validation perplexity: 1678147.7988038985
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.61
Epoch 687 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6862707829168357 Loss (std): 1.9484861036344046 Loss ratio: 2.8392380269385993 Tokens per Sec: 2981.7877439118106
Epoch Step: 10 / 67 Loss (mean): 0.21172773235684872 Loss (std): 0.46046991639160034 Loss ratio: 2.174820989512693 Tokens per Sec: 2782.6834819622536
Epoch Step: 15 / 67 Loss (mean): 0.46535729828428885 Loss (std): 1.0218753563827083 Loss ratio: 2.1958941229679394 Tokens per Sec: 3404.334639431975
Epoch Step: 20 / 67 Loss (mean): 0.3033035343996744 Loss (std): 0.7676544484965798 Loss ratio: 2.530977589878702 Tokens per Sec: 2577.633081584168
Epoch Step: 25 / 67 Loss (mean): 0.2287967813135765 Loss (std): 0.61732425988064 Loss ratio: 2.6981334979296268 Tokens per Sec: 2429.9587732821624
Epoch Step: 30 / 67 Loss (mean): 1.886440288506492 Loss (std): 11.077170495599859 Loss ratio: 5.871996353708991 Tokens per Sec: 2644.20811496405
Epoch Step: 35 / 67 Loss (mean): 0.4091130327251449 Loss (std): 1.035381402342032 Loss ratio: 2.5307954514312287 Tokens per Sec: 2863.288624357672
Epoch Step: 40 / 67 Loss (mean): 0.20748175224571241 Loss (std): 0.35120875358270487 Loss ratio: 1.6927211659885264 Tokens per Sec: 2845.4010797739925
Epoch Step: 45 / 67 Loss (mean): 0.243864897480762 Loss (std): 0.6688518839196753 Loss ratio: 2.7427148836475723 Tokens per Sec: 2758.0668597051204
Epoch Step: 50 / 67 Loss (mean): 0.43846657154153945 Loss (std): 0.8454559311826118 Loss ratio: 1.9282106916616217 Tokens per Sec: 2437.5039285638363
Epoch Step: 55 / 67 Loss (mean): 0.21693161587336363 Loss (std): 0.5312260724972985 Loss ratio: 2.4488181234376087 Tokens per Sec: 2804.7826447511047
Epoch Step: 60 / 67 Loss (mean): 0.319228412299708 Loss (std): 0.8933251396643843 Loss ratio: 2.7983885683260703 Tokens per Sec: 2509.786028142765
Epoch Step: 65 / 67 Loss (mean): 0.15202457482155296 Loss (std): 0.3398547793509448 Loss ratio: 2.235525274449001 Tokens per Sec: 2748.713515089905
Mean loss per sample: 0.6149071966063849 Std loss per sample: 4.351193533170686 ratio: 7.076179230271681
Epoch ended with duration 0:00:11.519182
Train perplexity: 1.086755626438245
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: use method_4 instead of method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.41851606965065 Loss (std): 46.10267498113146 Loss ratio: 0.4591053202693662 Tokens per Sec: 4420.080214742563
Mean loss per sample: 104.55938973290021 Std loss per sample: 54.25674688927472 ratio: 0.5189084120314307
Epoch ended with duration 0:00:01.020020
b'BLEU = 2.12, 8.2/2.4/1.4/1.1 (BP=0.917, ratio=0.920, hyp_len=2864, ref_len=3113)\n'
Validation perplexity: 1424982.5760953277
Validation accuracy: 0.0
Validation BLEU: 2.12
Epoch 688 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.36428493963512665 Loss (std): 1.102193156053863 Loss ratio: 3.025634705507827 Tokens per Sec: 2271.9549691027396
Epoch Step: 10 / 67 Loss (mean): 0.13989192741701117 Loss (std): 0.33679073692126926 Loss ratio: 2.4075065884060067 Tokens per Sec: 3135.715395912989
Epoch Step: 15 / 67 Loss (mean): 0.12008355488160305 Loss (std): 0.23523583711842672 Loss ratio: 1.958934654710702 Tokens per Sec: 2426.4872437671397
Epoch Step: 20 / 67 Loss (mean): 0.2911954613095986 Loss (std): 0.8419355005999363 Loss ratio: 2.8913070856718868 Tokens per Sec: 2698.4896463394457
Epoch Step: 25 / 67 Loss (mean): 0.1231780006964982 Loss (std): 0.187137073561597 Loss ratio: 1.5192410373885625 Tokens per Sec: 3020.150022647288
Epoch Step: 30 / 67 Loss (mean): 0.20272747627086574 Loss (std): 0.7973298622481008 Loss ratio: 3.9330133088757155 Tokens per Sec: 2350.316426949281
Epoch Step: 35 / 67 Loss (mean): 0.0922018030869367 Loss (std): 0.16753095840561863 Loss ratio: 1.8170030606413887 Tokens per Sec: 2970.9377249390523
Epoch Step: 40 / 67 Loss (mean): 2.144759414590226 Loss (std): 8.851545521457606 Loss ratio: 4.127057543723974 Tokens per Sec: 3080.9215852954853
Epoch Step: 45 / 67 Loss (mean): 0.1825011144628661 Loss (std): 0.4140404724375758 Loss ratio: 2.2687010633122546 Tokens per Sec: 2757.8686621160027
Epoch Step: 50 / 67 Loss (mean): 0.3000241764821112 Loss (std): 0.5398753266069547 Loss ratio: 1.7994394083076317 Tokens per Sec: 2560.297740950684
Epoch Step: 55 / 67 Loss (mean): 1.0011075298843934 Loss (std): 2.27959926042991 Loss ratio: 2.277077329238703 Tokens per Sec: 3333.66160441289
Epoch Step: 60 / 67 Loss (mean): 2.7401162539972574 Loss (std): 9.67026429846818 Loss ratio: 3.529143803428516 Tokens per Sec: 2871.1009149851398
Epoch Step: 65 / 67 Loss (mean): 0.2826721450290961 Loss (std): 0.6432993929914461 Loss ratio: 2.275779217387089 Tokens per Sec: 2834.780329410382
Mean loss per sample: 0.5235475706123717 Std loss per sample: 3.507095445022776 ratio: 6.6987140078229634
Epoch ended with duration 0:00:11.514817
Train perplexity: 1.0734049978699858
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings on github ( ) call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 120.65210202336311 Loss (std): 48.32178238814173 Loss ratio: 0.40050510167476966 Tokens per Sec: 4210.331505130011
Mean loss per sample: 108.80927235810239 Std loss per sample: 54.40964994100941 ratio: 0.5000460784439558
Epoch ended with duration 0:00:01.050402
b'BLEU = 2.91, 9.0/3.1/2.0/1.6 (BP=0.945, ratio=0.946, hyp_len=2945, ref_len=3113)\n'
Validation perplexity: 2534749.472249603
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.91
Epoch 689 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.21655294274023618 Loss (std): 0.4530722311374802 Loss ratio: 2.0922007588738163 Tokens per Sec: 2507.8625597669165
Epoch Step: 10 / 67 Loss (mean): 0.08632848509919963 Loss (std): 0.18477288036526598 Loss ratio: 2.140346609267432 Tokens per Sec: 2738.813276044873
Epoch Step: 15 / 67 Loss (mean): 0.1566980083443923 Loss (std): 0.3081027627964284 Loss ratio: 1.9662200308205409 Tokens per Sec: 2542.04202749714
Epoch Step: 20 / 67 Loss (mean): 1.139003885724378 Loss (std): 1.3197074901684176 Loss ratio: 1.1586505601156194 Tokens per Sec: 3500.9190895886204
Epoch Step: 25 / 67 Loss (mean): 0.13897625010213233 Loss (std): 0.3019883471587995 Loss ratio: 2.1729493128277038 Tokens per Sec: 2811.9023546315743
Epoch Step: 30 / 67 Loss (mean): 0.1945777381638436 Loss (std): 0.31957931199193457 Loss ratio: 1.6424248478149837 Tokens per Sec: 2848.2270088905834
Epoch Step: 35 / 67 Loss (mean): 0.29060825156420833 Loss (std): 1.2912794994739714 Loss ratio: 4.443368323244841 Tokens per Sec: 2863.447868404224
Epoch Step: 40 / 67 Loss (mean): 0.17442954707712488 Loss (std): 0.27834713001177036 Loss ratio: 1.5957567664192684 Tokens per Sec: 3198.5304513661677
Epoch Step: 45 / 67 Loss (mean): 0.2529958032355353 Loss (std): 0.6865573498799574 Loss ratio: 2.7137104295788768 Tokens per Sec: 2402.4985180717745
Epoch Step: 50 / 67 Loss (mean): 0.12339865895160074 Loss (std): 0.3258324512724693 Loss ratio: 2.640486161201046 Tokens per Sec: 2618.8015216909193
Epoch Step: 55 / 67 Loss (mean): 0.6586838543835256 Loss (std): 1.2783368753304287 Loss ratio: 1.9407442080493196 Tokens per Sec: 2802.379930566011
Epoch Step: 60 / 67 Loss (mean): 0.2302559079234925 Loss (std): 0.7012691600212746 Loss ratio: 3.0456076734165123 Tokens per Sec: 2497.9621864644737
Epoch Step: 65 / 67 Loss (mean): 1.3171839032311254 Loss (std): 8.248588702685142 Loss ratio: 6.26229084826416 Tokens per Sec: 2365.687036539728
Mean loss per sample: 0.4590585651696475 Std loss per sample: 3.649104719893403 ratio: 7.949104965604676
Epoch ended with duration 0:00:11.523271
Train perplexity: 1.0640799114363642
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily not active[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.13696306943893 Loss (std): 45.292188913113776 Loss ratio: 0.45686480108725513 Tokens per Sec: 4399.12814419289
Mean loss per sample: 103.44211576885131 Std loss per sample: 53.84712917305115 ratio: 0.5205532463525432
Epoch ended with duration 0:00:01.023275
b'BLEU = 2.67, 8.6/3.0/1.9/1.5 (BP=0.911, ratio=0.915, hyp_len=2848, ref_len=3113)\n'
Validation perplexity: 1224764.9547945461
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.67
Epoch 690 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.179050078804721 Loss (std): 6.834837840383697 Loss ratio: 3.136613475231751 Tokens per Sec: 2967.5524687941916
Epoch Step: 10 / 67 Loss (mean): 0.11679531113986741 Loss (std): 0.3237655701225348 Loss ratio: 2.7720767808462075 Tokens per Sec: 2237.219975671125
Epoch Step: 15 / 67 Loss (mean): 0.19525723171318532 Loss (std): 0.8150859691537892 Loss ratio: 4.174421413241557 Tokens per Sec: 2789.4366990971157
Epoch Step: 20 / 67 Loss (mean): 2.237930306895578 Loss (std): 7.81129834299654 Loss ratio: 3.4904117965283077 Tokens per Sec: 2407.7715684495843
Epoch Step: 25 / 67 Loss (mean): 0.45771169647559873 Loss (std): 2.8946832617389058 Loss ratio: 6.324250142672999 Tokens per Sec: 2591.9257868967056
Epoch Step: 30 / 67 Loss (mean): 0.2533369390730513 Loss (std): 0.6149910267926939 Loss ratio: 2.427561606463388 Tokens per Sec: 3469.9261134934923
Epoch Step: 35 / 67 Loss (mean): 0.4430515950098197 Loss (std): 0.9216974188105421 Loss ratio: 2.080338789413711 Tokens per Sec: 3570.6067407110922
Epoch Step: 40 / 67 Loss (mean): 0.10863941194838844 Loss (std): 0.208350974535612 Loss ratio: 1.917821265772257 Tokens per Sec: 3107.277996441193
Epoch Step: 45 / 67 Loss (mean): 0.20459683762146597 Loss (std): 0.38677421401791934 Loss ratio: 1.8904212719724833 Tokens per Sec: 2300.448860832473
Epoch Step: 50 / 67 Loss (mean): 0.13527574541876675 Loss (std): 0.3677238634852407 Loss ratio: 2.7183281256140583 Tokens per Sec: 2736.7184415448833
Epoch Step: 55 / 67 Loss (mean): 0.2370888245295646 Loss (std): 0.6119132824963611 Loss ratio: 2.5809452795193075 Tokens per Sec: 2377.51490426706
Epoch Step: 60 / 67 Loss (mean): 0.15789717526604363 Loss (std): 0.3546452551442816 Loss ratio: 2.246051929344105 Tokens per Sec: 3464.3804078449266
Epoch Step: 65 / 67 Loss (mean): 0.09602587389144901 Loss (std): 0.31482035208667775 Loss ratio: 3.2784950485591167 Tokens per Sec: 2610.2270724653495
Mean loss per sample: 0.3639804072225172 Std loss per sample: 2.232774295361298 ratio: 6.134325505043752
Epoch ended with duration 0:00:11.460745
Train perplexity: 1.0504792044015623
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print in method_1 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.91806510090828 Loss (std): 45.18213323508795 Loss ratio: 0.45219183527481294 Tokens per Sec: 4408.381279413145
Mean loss per sample: 103.39215562278864 Std loss per sample: 52.75854545417866 ratio: 0.5102760952838685
Epoch ended with duration 0:00:01.020098
b'BLEU = 2.66, 8.3/2.9/1.9/1.4 (BP=0.946, ratio=0.947, hyp_len=2949, ref_len=3113)\n'
Validation perplexity: 1216500.6983269665
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.66
Model saved checkpoint_commit_msg_generator!
Epoch 691 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.41521353786083637 Loss (std): 0.7956155054186339 Loss ratio: 1.9161598379417333 Tokens per Sec: 2934.1326386907335
Epoch Step: 10 / 67 Loss (mean): 0.10857136623417318 Loss (std): 0.29400734423420094 Loss ratio: 2.7079639359061614 Tokens per Sec: 3128.9026429307646
Epoch Step: 15 / 67 Loss (mean): 0.13229106127255363 Loss (std): 0.22641364900317237 Loss ratio: 1.7114810843999655 Tokens per Sec: 2650.192856559485
Epoch Step: 20 / 67 Loss (mean): 0.2574398781871423 Loss (std): 0.46683086194030116 Loss ratio: 1.8133587742025927 Tokens per Sec: 2735.711329175855
Epoch Step: 25 / 67 Loss (mean): 9.740346499282168 Loss (std): 23.569692713546974 Loss ratio: 2.4198002314685607 Tokens per Sec: 2974.793090652814
Epoch Step: 30 / 67 Loss (mean): 0.18057414973009145 Loss (std): 0.4596503526101383 Loss ratio: 2.5454936561915913 Tokens per Sec: 2953.4598416296185
Epoch Step: 35 / 67 Loss (mean): 0.15468737676508226 Loss (std): 0.4499039043005981 Loss ratio: 2.908472001460402 Tokens per Sec: 2818.4656489106455
Epoch Step: 40 / 67 Loss (mean): 0.15123842059529125 Loss (std): 0.438064690710349 Loss ratio: 2.8965172274748547 Tokens per Sec: 2895.530822432909
Epoch Step: 45 / 67 Loss (mean): 0.19774376914574532 Loss (std): 0.5100132511304055 Loss ratio: 2.579162182119148 Tokens per Sec: 2489.856825046187
Epoch Step: 50 / 67 Loss (mean): 0.14923238973278785 Loss (std): 0.3252430328449904 Loss ratio: 2.179439955544257 Tokens per Sec: 2818.7389083969883
Epoch Step: 55 / 67 Loss (mean): 0.33208928476778965 Loss (std): 0.7794744427518878 Loss ratio: 2.347183358526392 Tokens per Sec: 2256.7252708576634
Epoch Step: 60 / 67 Loss (mean): 0.1833557175241367 Loss (std): 0.4824811226036913 Loss ratio: 2.6313939326172258 Tokens per Sec: 2963.1492659187675
Epoch Step: 65 / 67 Loss (mean): 0.36079306934334454 Loss (std): 1.1056138451411772 Loss ratio: 3.064398790013986 Tokens per Sec: 2375.874983049156
Mean loss per sample: 0.4547038823836058 Std loss per sample: 3.7608032042114226 ratio: 8.270884304961054
Epoch ended with duration 0:00:11.423988
Train perplexity: 1.0634531536829865
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the daemon print to avoid print[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.83618101477623 Loss (std): 44.34266426743724 Loss ratio: 0.4486480943735363 Tokens per Sec: 4292.979529478409
Mean loss per sample: 104.63384403483789 Std loss per sample: 52.92883850603888 ratio: 0.5058481698179433
Epoch ended with duration 0:00:01.039612
b'BLEU = 2.17, 8.1/2.3/1.5/1.1 (BP=0.924, ratio=0.927, hyp_len=2885, ref_len=3113)\n'
Validation perplexity: 1439433.276099589
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.17
Epoch 692 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.13608338873564207 Loss (std): 0.2568228606038571 Loss ratio: 1.8872462171174 Tokens per Sec: 3137.3601689404218
Epoch Step: 10 / 67 Loss (mean): 0.2114987562828219 Loss (std): 0.41643938327740415 Loss ratio: 1.9689921141688895 Tokens per Sec: 2532.2355652515685
Epoch Step: 15 / 67 Loss (mean): 0.20566420631075744 Loss (std): 0.47634937401121574 Loss ratio: 2.316151082174477 Tokens per Sec: 2370.6449416920073
Epoch Step: 20 / 67 Loss (mean): 0.11041326502163429 Loss (std): 0.19132183773534023 Loss ratio: 1.7327794599485196 Tokens per Sec: 3225.0612939485627
Epoch Step: 25 / 67 Loss (mean): 0.11879039607879349 Loss (std): 0.3139061262905561 Loss ratio: 2.6425210846366958 Tokens per Sec: 2351.507030533556
Epoch Step: 30 / 67 Loss (mean): 0.39199634869146394 Loss (std): 0.6957767599712925 Loss ratio: 1.7749572471628576 Tokens per Sec: 3172.2417522745486
Epoch Step: 35 / 67 Loss (mean): 3.2434933540862403 Loss (std): 13.656128940030083 Loss ratio: 4.210315067495275 Tokens per Sec: 2751.374968580449
Epoch Step: 40 / 67 Loss (mean): 0.6510488539242942 Loss (std): 1.1728846799245438 Loss ratio: 1.80153098013276 Tokens per Sec: 3006.0279492228474
Epoch Step: 45 / 67 Loss (mean): 0.19590385361698281 Loss (std): 0.5245778435788729 Loss ratio: 2.6777311109177564 Tokens per Sec: 2668.082212102718
Epoch Step: 50 / 67 Loss (mean): 0.17502163012500205 Loss (std): 0.34546608897141745 Loss ratio: 1.9738479679607739 Tokens per Sec: 2825.955881790021
Epoch Step: 55 / 67 Loss (mean): 0.34742026111234736 Loss (std): 0.7974916762746227 Loss ratio: 2.2954668035803847 Tokens per Sec: 2444.799114361222
Epoch Step: 60 / 67 Loss (mean): 0.6104419755210984 Loss (std): 1.0699938741308281 Loss ratio: 1.7528183136774587 Tokens per Sec: 2837.296453507922
Epoch Step: 65 / 67 Loss (mean): 0.3058270171532058 Loss (std): 0.7205452934232397 Loss ratio: 2.3560550671109555 Tokens per Sec: 2760.44839765144
Mean loss per sample: 0.5646469148773963 Std loss per sample: 3.938814129890348 ratio: 6.975711769797939
Epoch ended with duration 0:00:11.471979
Train perplexity: 1.0793905393231575
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print in method_1 ( ) , ( ) )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 97.9464721083641 Loss (std): 43.7887384829473 Loss ratio: 0.44706805197129684 Tokens per Sec: 4403.4425982710945
Mean loss per sample: 104.74970078456109 Std loss per sample: 53.26352304881574 ratio: 0.5084837727447349
Epoch ended with duration 0:00:01.039784
b'BLEU = 2.74, 8.1/2.9/1.9/1.5 (BP=0.945, ratio=0.947, hyp_len=2947, ref_len=3113)\n'
Validation perplexity: 1462211.6855983052
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.74
Epoch 693 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.052954436563595664 Loss (std): 0.06903444791013161 Loss ratio: 1.3036574910437324 Tokens per Sec: 3127.5847026099545
Epoch Step: 10 / 67 Loss (mean): 0.6226795036909607 Loss (std): 1.211829255107455 Loss ratio: 1.9461524715753171 Tokens per Sec: 2848.9735945898433
Epoch Step: 15 / 67 Loss (mean): 0.17621987798156624 Loss (std): 0.5275631265921389 Loss ratio: 2.9937776182510207 Tokens per Sec: 3148.2982597076602
Epoch Step: 20 / 67 Loss (mean): 0.3426862730157154 Loss (std): 1.0293623259825466 Loss ratio: 3.003803790924945 Tokens per Sec: 2308.830849207395
Epoch Step: 25 / 67 Loss (mean): 4.376422650735549 Loss (std): 18.23480308599735 Loss ratio: 4.166600107266288 Tokens per Sec: 2810.058675406229
Epoch Step: 30 / 67 Loss (mean): 0.19797584530988388 Loss (std): 0.3640811518469843 Loss ratio: 1.8390180442321247 Tokens per Sec: 2736.357620821176
Epoch Step: 35 / 67 Loss (mean): 1.4040561708716268 Loss (std): 2.5138272462853664 Loss ratio: 1.7904036166336583 Tokens per Sec: 3497.496245696109
Epoch Step: 40 / 67 Loss (mean): 0.7473884187315889 Loss (std): 1.029455325095457 Loss ratio: 1.3774033679068385 Tokens per Sec: 2341.4304982847816
Epoch Step: 45 / 67 Loss (mean): 0.15179921049639233 Loss (std): 0.2868778905269217 Loss ratio: 1.889851005079764 Tokens per Sec: 2788.4734193205686
Epoch Step: 50 / 67 Loss (mean): 0.1473141661133468 Loss (std): 0.37356454123633864 Loss ratio: 2.535835833662526 Tokens per Sec: 3019.740386144174
Epoch Step: 55 / 67 Loss (mean): 0.29442328823597563 Loss (std): 0.5602779086084155 Loss ratio: 1.9029673636392568 Tokens per Sec: 2223.8924882485494
Epoch Step: 60 / 67 Loss (mean): 0.2573828548702295 Loss (std): 0.7763515447058923 Loss ratio: 3.016329681700527 Tokens per Sec: 2333.5308021895253
Epoch Step: 65 / 67 Loss (mean): 0.1335870282691758 Loss (std): 0.24181618442674524 Loss ratio: 1.8101771374050584 Tokens per Sec: 3129.2943334939678
Mean loss per sample: 0.35668776855892875 Std loss per sample: 2.5731747346433482 ratio: 7.214081786542202
Epoch ended with duration 0:00:11.393277
Train perplexity: 1.0494432162330463
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.14307874441147 Loss (std): 47.036051683831225 Loss ratio: 0.46968849244068295 Tokens per Sec: 4406.977140883491
Mean loss per sample: 104.77359612396017 Std loss per sample: 54.91996707426631 ratio: 0.5241775514633398
Epoch ended with duration 0:00:01.040071
b'BLEU = 2.20, 8.1/2.5/1.6/1.2 (BP=0.883, ratio=0.889, hyp_len=2768, ref_len=3113)\n'
Validation perplexity: 1466954.362297127
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.2
Epoch 694 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.17273744909971356 Loss (std): 0.31742161693064563 Loss ratio: 1.837595834516535 Tokens per Sec: 2868.6542795745295
Epoch Step: 10 / 67 Loss (mean): 0.40869416825808 Loss (std): 0.9840459383502637 Loss ratio: 2.4077807191240947 Tokens per Sec: 3124.782478451709
Epoch Step: 15 / 67 Loss (mean): 0.14334587292250944 Loss (std): 0.29278661604073086 Loss ratio: 2.0425186304387486 Tokens per Sec: 2486.2526106340842
Epoch Step: 20 / 67 Loss (mean): 0.09343303113928414 Loss (std): 0.2383364251360737 Loss ratio: 2.5508797288271277 Tokens per Sec: 2626.6565637730723
Epoch Step: 25 / 67 Loss (mean): 0.2146951514578177 Loss (std): 0.5142594071039064 Loss ratio: 2.39530051615975 Tokens per Sec: 2309.5039225884316
Epoch Step: 30 / 67 Loss (mean): 3.924591152015637 Loss (std): 12.964781036415511 Loss ratio: 3.3034730330462345 Tokens per Sec: 3291.06088941608
Epoch Step: 35 / 67 Loss (mean): 0.41289168792718556 Loss (std): 0.9341887794107206 Loss ratio: 2.26255167329856 Tokens per Sec: 2760.300842260487
Epoch Step: 40 / 67 Loss (mean): 0.2031795753107417 Loss (std): 0.7261438954187692 Loss ratio: 3.5739020239027903 Tokens per Sec: 2361.859503514683
Epoch Step: 45 / 67 Loss (mean): 0.2391654298589856 Loss (std): 0.6059373415991957 Loss ratio: 2.533549024858913 Tokens per Sec: 2610.7052286593475
Epoch Step: 50 / 67 Loss (mean): 0.40917545713091386 Loss (std): 0.9507766892223922 Loss ratio: 2.323640562142014 Tokens per Sec: 2937.933463241059
Epoch Step: 55 / 67 Loss (mean): 0.16063493403271423 Loss (std): 0.339968826813079 Loss ratio: 2.116406551664798 Tokens per Sec: 2997.813562899086
Epoch Step: 60 / 67 Loss (mean): 0.12203483837765816 Loss (std): 0.3997952109636177 Loss ratio: 3.2760744085748814 Tokens per Sec: 2888.1363198735216
Epoch Step: 65 / 67 Loss (mean): 0.4140485796251596 Loss (std): 0.8724341391888958 Loss ratio: 2.1070815892635473 Tokens per Sec: 3264.6926121124593
Mean loss per sample: 0.3844261957390246 Std loss per sample: 2.6730186309255752 ratio: 6.953268691242382
Epoch ended with duration 0:00:11.453179
Train perplexity: 1.0533891779346665
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print warnings[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.5441997051239 Loss (std): 45.65036884520564 Loss ratio: 0.4585939610789382 Tokens per Sec: 4407.678127270557
Mean loss per sample: 103.88690848117236 Std loss per sample: 54.058169431952095 ratio: 0.5203559353366375
Epoch ended with duration 0:00:01.021613
b'BLEU = 2.63, 8.5/2.9/2.0/1.6 (BP=0.886, ratio=0.892, hyp_len=2776, ref_len=3113)\n'
Validation perplexity: 1300860.9720677086
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.63
Epoch 695 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.20938264566211728 Loss (std): 0.46752912362062554 Loss ratio: 2.232893381121383 Tokens per Sec: 2761.816388880294
Epoch Step: 10 / 67 Loss (mean): 0.2185966892138822 Loss (std): 0.42795317549277667 Loss ratio: 1.957729447009388 Tokens per Sec: 3033.5480752932376
Epoch Step: 15 / 67 Loss (mean): 0.4226070148283725 Loss (std): 0.8976463396510225 Loss ratio: 2.12406871669078 Tokens per Sec: 2803.5236411679293
Epoch Step: 20 / 67 Loss (mean): 0.3643424421461532 Loss (std): 0.7069616849422853 Loss ratio: 1.94037697276754 Tokens per Sec: 2585.5203829639677
Epoch Step: 25 / 67 Loss (mean): 0.12446711615211825 Loss (std): 0.22172034097180848 Loss ratio: 1.781356777808137 Tokens per Sec: 2577.7701496156005
Epoch Step: 30 / 67 Loss (mean): 0.2097028840071289 Loss (std): 0.639104536592594 Loss ratio: 3.0476668912711165 Tokens per Sec: 2736.5669337122567
Epoch Step: 35 / 67 Loss (mean): 0.20351835131896223 Loss (std): 0.5190183250631262 Loss ratio: 2.550228624099355 Tokens per Sec: 2550.778982536768
Epoch Step: 40 / 67 Loss (mean): 0.2531576199198753 Loss (std): 0.8834732096382937 Loss ratio: 3.489814803591194 Tokens per Sec: 3006.0586142564234
Epoch Step: 45 / 67 Loss (mean): 0.08025396397533768 Loss (std): 0.10573546090867086 Loss ratio: 1.3175107579877765 Tokens per Sec: 2724.813970975646
Epoch Step: 50 / 67 Loss (mean): 0.20091268416581443 Loss (std): 0.4178735034545963 Loss ratio: 2.079876167050373 Tokens per Sec: 2560.0053642277894
Epoch Step: 55 / 67 Loss (mean): 0.20042521052528173 Loss (std): 0.4194635575466934 Loss ratio: 2.0928682397156924 Tokens per Sec: 2729.5949868229914
Epoch Step: 60 / 67 Loss (mean): 0.20134913102492646 Loss (std): 0.8930237447537815 Loss ratio: 4.435200391519086 Tokens per Sec: 2824.4893355422532
Epoch Step: 65 / 67 Loss (mean): 0.23187764777242137 Loss (std): 0.5064345344994922 Loss ratio: 2.1840593061239666 Tokens per Sec: 2564.918206409646
Mean loss per sample: 0.44529534558604916 Std loss per sample: 3.169016404204158 ratio: 7.116661864124011
Epoch ended with duration 0:00:11.469015
Train perplexity: 1.0621002685055494
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print warnings[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.42119976878166 Loss (std): 45.29160057823148 Loss ratio: 0.4555527461302381 Tokens per Sec: 4440.803013743144
Mean loss per sample: 103.44328272171686 Std loss per sample: 53.1316177598847 ratio: 0.513630429757526
Epoch ended with duration 0:00:01.022265
b'BLEU = 2.59, 9.0/2.9/1.9/1.5 (BP=0.891, ratio=0.896, hyp_len=2790, ref_len=3113)\n'
Validation perplexity: 1224958.6581336402
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.59
Model saved checkpoint_commit_msg_generator!
Epoch 696 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.9945689644882805 Loss (std): 2.5960288721154976 Loss ratio: 2.610204988098729 Tokens per Sec: 2850.3445595891617
Epoch Step: 10 / 67 Loss (mean): 1.604234109092431 Loss (std): 7.756802765437485 Loss ratio: 4.835206234223363 Tokens per Sec: 2306.810792582809
Epoch Step: 15 / 67 Loss (mean): 0.2026583864103486 Loss (std): 0.44449266218661587 Loss ratio: 2.1933099836618366 Tokens per Sec: 2824.905406924223
Epoch Step: 20 / 67 Loss (mean): 0.07266835196969623 Loss (std): 0.1327393965996423 Loss ratio: 1.8266465799994551 Tokens per Sec: 2588.4226859721803
Epoch Step: 25 / 67 Loss (mean): 0.29596876023788354 Loss (std): 0.6870664281291732 Loss ratio: 2.321415366868269 Tokens per Sec: 3059.6992265678928
Epoch Step: 30 / 67 Loss (mean): 0.24028214065947395 Loss (std): 0.6862217728293223 Loss ratio: 2.855900030463898 Tokens per Sec: 2526.4112692919957
Epoch Step: 35 / 67 Loss (mean): 0.21578502397642296 Loss (std): 0.48642676553816117 Loss ratio: 2.2542192992564165 Tokens per Sec: 2624.788893236605
Epoch Step: 40 / 67 Loss (mean): 0.24791886519960826 Loss (std): 0.8763800246586596 Loss ratio: 3.534946902701636 Tokens per Sec: 2360.6860091962044
Epoch Step: 45 / 67 Loss (mean): 0.12930503808820504 Loss (std): 0.2623019320112947 Loss ratio: 2.0285515235095963 Tokens per Sec: 2727.2817487702378
Epoch Step: 50 / 67 Loss (mean): 0.24128182873937476 Loss (std): 0.747554341865706 Loss ratio: 3.098262085344153 Tokens per Sec: 2655.0756249669594
Epoch Step: 55 / 67 Loss (mean): 0.9269415441349338 Loss (std): 1.2555954730269745 Loss ratio: 1.3545573407207208 Tokens per Sec: 3176.5738614773636
Epoch Step: 60 / 67 Loss (mean): 0.12286960459459806 Loss (std): 0.3870651790758493 Loss ratio: 3.1502109928077897 Tokens per Sec: 3296.433847167295
Epoch Step: 65 / 67 Loss (mean): 0.3444864879056695 Loss (std): 0.8068508179263687 Loss ratio: 2.342184225662018 Tokens per Sec: 2863.877315575582
Mean loss per sample: 0.44514160095111044 Std loss per sample: 3.2423301897945374 ratio: 7.2838175152958575
Epoch ended with duration 0:00:11.465994
Train perplexity: 1.0620781753448452
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.20506849884987 Loss (std): 44.58818074564276 Loss ratio: 0.4494546641652658 Tokens per Sec: 4035.8678430163786
Mean loss per sample: 109.94259160024221 Std loss per sample: 54.7364128918375 ratio: 0.4978635858508989
Epoch ended with duration 0:00:01.074965
b'BLEU = 2.20, 8.1/2.5/1.5/1.1 (BP=0.920, ratio=0.923, hyp_len=2874, ref_len=3113)\n'
Validation perplexity: 2955535.526317712
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.2
Epoch 697 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.12994691884250642 Loss (std): 0.34078330215822816 Loss ratio: 2.622480819043136 Tokens per Sec: 2209.5707767586555
Epoch Step: 10 / 67 Loss (mean): 0.2833739301291871 Loss (std): 0.9027311343763511 Loss ratio: 3.1856534366616076 Tokens per Sec: 2510.651209837555
Epoch Step: 15 / 67 Loss (mean): 0.5576037118480599 Loss (std): 1.1184365875640323 Loss ratio: 2.0057911448566403 Tokens per Sec: 2884.9703719136814
Epoch Step: 20 / 67 Loss (mean): 0.21646430551845697 Loss (std): 0.47533279046984384 Loss ratio: 2.1958945579104463 Tokens per Sec: 2392.0955855361385
Epoch Step: 25 / 67 Loss (mean): 0.30342168840115846 Loss (std): 0.6712347734153731 Loss ratio: 2.2122175146818224 Tokens per Sec: 3134.210203879277
Epoch Step: 30 / 67 Loss (mean): 0.19967587615155935 Loss (std): 0.4541581434472047 Loss ratio: 2.2744767780685056 Tokens per Sec: 2744.3678301598948
Epoch Step: 35 / 67 Loss (mean): 0.47731831137207337 Loss (std): 0.9348329710007333 Loss ratio: 1.9585105970762215 Tokens per Sec: 3150.1159811592265
Epoch Step: 40 / 67 Loss (mean): 0.24216902808984742 Loss (std): 0.7571141671350651 Loss ratio: 3.126387272174901 Tokens per Sec: 3215.1431466347644
Epoch Step: 45 / 67 Loss (mean): 0.21769889849747415 Loss (std): 0.5196770110123845 Loss ratio: 2.3871366120780535 Tokens per Sec: 3362.0533767054294
Epoch Step: 50 / 67 Loss (mean): 0.3467510413356649 Loss (std): 0.9292247811568316 Loss ratio: 2.6798038661326338 Tokens per Sec: 2568.677860732385
Epoch Step: 55 / 67 Loss (mean): 0.2493104658460652 Loss (std): 0.5346732906078803 Loss ratio: 2.1446082850689874 Tokens per Sec: 2495.9189583550087
Epoch Step: 60 / 67 Loss (mean): 0.18072856525213865 Loss (std): 0.6236573867956932 Loss ratio: 3.450795871286944 Tokens per Sec: 3088.8757552776465
Epoch Step: 65 / 67 Loss (mean): 0.19251943070230482 Loss (std): 0.4993611699867173 Loss ratio: 2.5938221828574055 Tokens per Sec: 2804.435229127223
Mean loss per sample: 0.4428660003710125 Std loss per sample: 2.967326506083418 ratio: 6.700280679929212
Epoch ended with duration 0:00:11.487737
Train perplexity: 1.061751224438629
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope variable[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.73544970154762 Loss (std): 45.280958501011035 Loss ratio: 0.4540106715968254 Tokens per Sec: 4391.596230487116
Mean loss per sample: 104.22515639949773 Std loss per sample: 54.404359287327686 ratio: 0.5219887517251053
Epoch ended with duration 0:00:01.025431
b'BLEU = 2.42, 8.2/2.7/1.8/1.4 (BP=0.875, ratio=0.882, hyp_len=2746, ref_len=3113)\n'
Validation perplexity: 1361878.481320974
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.42
Epoch 698 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2934205418112015 Loss (std): 0.6317480106099007 Loss ratio: 2.1530462956352685 Tokens per Sec: 2868.6544900539993
Epoch Step: 10 / 67 Loss (mean): 0.13518454342556652 Loss (std): 0.2901224953707465 Loss ratio: 2.146121797796283 Tokens per Sec: 2457.6809058891963
Epoch Step: 15 / 67 Loss (mean): 0.1625428188508522 Loss (std): 0.3411252177612566 Loss ratio: 2.0986791060530945 Tokens per Sec: 2754.9337742534767
Epoch Step: 20 / 67 Loss (mean): 0.1392149026014522 Loss (std): 0.26912293389413794 Loss ratio: 1.9331474494838359 Tokens per Sec: 2474.691652914367
Epoch Step: 25 / 67 Loss (mean): 0.29561807550089725 Loss (std): 0.6681518828693203 Loss ratio: 2.2601861599200226 Tokens per Sec: 3277.28779579938
Epoch Step: 30 / 67 Loss (mean): 2.0871722296924418 Loss (std): 11.194967460027542 Loss ratio: 5.3637008488164835 Tokens per Sec: 2638.0217134303944
Epoch Step: 35 / 67 Loss (mean): 0.19734964960275647 Loss (std): 0.5028209725566148 Loss ratio: 2.547868585369871 Tokens per Sec: 2880.1890584668386
Epoch Step: 40 / 67 Loss (mean): 4.4930835022896645 Loss (std): 13.881301112910926 Loss ratio: 3.089482113082708 Tokens per Sec: 2969.4677872302527
Epoch Step: 45 / 67 Loss (mean): 3.1694272287377316 Loss (std): 11.275269219747173 Loss ratio: 3.5575100502426444 Tokens per Sec: 2520.260770307813
Epoch Step: 50 / 67 Loss (mean): 0.5504856833649683 Loss (std): 1.016802519260435 Loss ratio: 1.8471007511857522 Tokens per Sec: 3026.859303183124
Epoch Step: 55 / 67 Loss (mean): 0.2704517450433741 Loss (std): 0.576450725202821 Loss ratio: 2.1314365160053668 Tokens per Sec: 3216.315075446266
Epoch Step: 60 / 67 Loss (mean): 0.1975206278357291 Loss (std): 0.41900326389361153 Loss ratio: 2.1213139533055845 Tokens per Sec: 2190.2173224085604
Epoch Step: 65 / 67 Loss (mean): 0.2839178249705583 Loss (std): 0.50257514762203 Loss ratio: 1.7701429900505405 Tokens per Sec: 2636.508872255486
Mean loss per sample: 0.5493156936194012 Std loss per sample: 3.5288742152121366 ratio: 6.424127794275529
Epoch ended with duration 0:00:11.528828
Train perplexity: 1.0771538694597849
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to apache-sshd ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api help[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.73849764466286 Loss (std): 45.41142746180606 Loss ratio: 0.4599161273977587 Tokens per Sec: 4398.915351546834
Mean loss per sample: 105.09585971702806 Std loss per sample: 53.94191868231654 ratio: 0.513263974694682
Epoch ended with duration 0:00:01.035786
b'BLEU = 2.50, 8.5/2.9/1.8/1.4 (BP=0.890, ratio=0.896, hyp_len=2789, ref_len=3113)\n'
Validation perplexity: 1532439.4512784777
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.5
Epoch 699 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.15155140657998345 Loss (std): 0.37722115263715605 Loss ratio: 2.489064015635329 Tokens per Sec: 2496.2708409619213
Epoch Step: 10 / 67 Loss (mean): 0.06302565887017408 Loss (std): 0.15930632973436745 Loss ratio: 2.5276424331004765 Tokens per Sec: 2370.360019855778
Epoch Step: 15 / 67 Loss (mean): 0.14063399094993656 Loss (std): 0.31960304520077804 Loss ratio: 2.2725874665289956 Tokens per Sec: 2756.892342386403
Epoch Step: 20 / 67 Loss (mean): 0.12071433471828641 Loss (std): 0.19645166206545528 Loss ratio: 1.6274095576463117 Tokens per Sec: 2740.983346183759
Epoch Step: 25 / 67 Loss (mean): 0.20053450296109077 Loss (std): 0.5722527658697995 Loss ratio: 2.853637441038425 Tokens per Sec: 3090.6504594700723
Epoch Step: 30 / 67 Loss (mean): 0.16220883107962436 Loss (std): 0.3081596678778032 Loss ratio: 1.8997712136063365 Tokens per Sec: 3014.3461616147265
Epoch Step: 35 / 67 Loss (mean): 0.0984042823783966 Loss (std): 0.26235231078994253 Loss ratio: 2.6660659927493016 Tokens per Sec: 2705.525938726129
Epoch Step: 40 / 67 Loss (mean): 4.032036426364357 Loss (std): 12.322593927728208 Loss ratio: 3.0561712803868084 Tokens per Sec: 3730.272086107111
Epoch Step: 45 / 67 Loss (mean): 0.2122543865152693 Loss (std): 0.7166915935029986 Loss ratio: 3.376569055977747 Tokens per Sec: 2653.202943182961
Epoch Step: 50 / 67 Loss (mean): 0.2135160262714635 Loss (std): 0.6022656600543213 Loss ratio: 2.8207047057376524 Tokens per Sec: 2463.056497423318
Epoch Step: 55 / 67 Loss (mean): 0.5216704769900389 Loss (std): 2.0121325244830706 Loss ratio: 3.8570948773884544 Tokens per Sec: 2591.546188802195
Epoch Step: 60 / 67 Loss (mean): 0.18102826778022063 Loss (std): 0.3932967140719225 Loss ratio: 2.1725707200016338 Tokens per Sec: 2486.0065220728625
Epoch Step: 65 / 67 Loss (mean): 0.10650110974893323 Loss (std): 0.16014973969214422 Loss ratio: 1.5037377551246442 Tokens per Sec: 3140.1391285235454
Mean loss per sample: 0.49288928591343734 Std loss per sample: 3.318706374211389 ratio: 6.733168013707302
Epoch ended with duration 0:00:11.419645
Train perplexity: 1.0689616745245214
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the time unit test for openjdk[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.01513880491257 Loss (std): 46.2487631467448 Loss ratio: 0.4624176269650204 Tokens per Sec: 4391.565383450328
Mean loss per sample: 106.17378855289006 Std loss per sample: 55.12163345419389 ratio: 0.5191642325802028
Epoch ended with duration 0:00:01.036705
b'BLEU = 2.27, 8.3/2.5/1.6/1.2 (BP=0.896, ratio=0.901, hyp_len=2805, ref_len=3113)\n'
Validation perplexity: 1773472.595796308
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.27
Epoch 700 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.33394637646324554 Loss (std): 0.9337369097485175 Loss ratio: 2.796068397679666 Tokens per Sec: 2233.77529297639
Epoch Step: 10 / 67 Loss (mean): 0.1464133496338036 Loss (std): 0.6237480732164913 Loss ratio: 4.260185801202937 Tokens per Sec: 2493.4469716242597
Epoch Step: 15 / 67 Loss (mean): 0.14519753165950533 Loss (std): 0.33697517729476195 Loss ratio: 2.320805136584441 Tokens per Sec: 2737.5078172962453
Epoch Step: 20 / 67 Loss (mean): 0.19031006524710392 Loss (std): 0.502109338859193 Loss ratio: 2.6383751075238195 Tokens per Sec: 3266.708293300649
Epoch Step: 25 / 67 Loss (mean): 0.17325687605443818 Loss (std): 0.37489488374736785 Loss ratio: 2.16380955425731 Tokens per Sec: 3183.3002820922716
Epoch Step: 30 / 67 Loss (mean): 0.062427833343463135 Loss (std): 0.17934839570710798 Loss ratio: 2.872891562972811 Tokens per Sec: 2389.6696476251363
Epoch Step: 35 / 67 Loss (mean): 0.12200432196914335 Loss (std): 0.33602270185710903 Loss ratio: 2.7541868716920868 Tokens per Sec: 2994.5874367469023
Epoch Step: 40 / 67 Loss (mean): 0.10269287905521196 Loss (std): 0.21403160130538543 Loss ratio: 2.0841912630603447 Tokens per Sec: 2782.5400570263364
Epoch Step: 45 / 67 Loss (mean): 0.18288557844425668 Loss (std): 0.7314136825408553 Loss ratio: 3.9992966573019824 Tokens per Sec: 2503.758013403527
Epoch Step: 50 / 67 Loss (mean): 0.53427261266188 Loss (std): 0.7671938008808336 Loss ratio: 1.4359594384942957 Tokens per Sec: 3821.907603318004
Epoch Step: 55 / 67 Loss (mean): 0.16107166405708995 Loss (std): 0.5136397514568902 Loss ratio: 3.1888895819368743 Tokens per Sec: 2999.4920414958524
Epoch Step: 60 / 67 Loss (mean): 0.5438885735748045 Loss (std): 1.5420839210930881 Loss ratio: 2.8352938377753865 Tokens per Sec: 3246.5340950444493
Epoch Step: 65 / 67 Loss (mean): 0.21079428230177655 Loss (std): 0.5791642733362579 Loss ratio: 2.7475331257188316 Tokens per Sec: 2392.4581642500198
Mean loss per sample: 0.39159250215498237 Std loss per sample: 2.671137010386426 ratio: 6.821215921364239
Epoch ended with duration 0:00:11.353377
Train perplexity: 1.054411038569637
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire 0 length and[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.11541745066643 Loss (std): 46.13151715877025 Loss ratio: 0.4654323045325586 Tokens per Sec: 4301.5653814680445
Mean loss per sample: 106.05778051637968 Std loss per sample: 54.51331931652145 ratio: 0.5139964182835445
Epoch ended with duration 0:00:01.035100
b'BLEU = 2.89, 8.8/3.2/2.2/1.7 (BP=0.903, ratio=0.907, hyp_len=2825, ref_len=3113)\n'
Validation perplexity: 1745809.5546144363
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.89
Model saved checkpoint_commit_msg_generator!
Epoch 701 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.17556294575570064 Loss (std): 0.44461898005498746 Loss ratio: 2.532533150096967 Tokens per Sec: 2622.9943223606515
Epoch Step: 10 / 67 Loss (mean): 0.1607345679547052 Loss (std): 0.5104861777288251 Loss ratio: 3.1759576314205136 Tokens per Sec: 2521.139335743182
Epoch Step: 15 / 67 Loss (mean): 0.8473575704463201 Loss (std): 5.244661773520004 Loss ratio: 6.189431659597419 Tokens per Sec: 2519.225936588317
Epoch Step: 20 / 67 Loss (mean): 0.17858469245220476 Loss (std): 0.3815304699115201 Loss ratio: 2.1364119436699784 Tokens per Sec: 2575.79063616283
Epoch Step: 25 / 67 Loss (mean): 0.3739727733714062 Loss (std): 0.6127567282172747 Loss ratio: 1.6385062545949656 Tokens per Sec: 3077.3353229255017
Epoch Step: 30 / 67 Loss (mean): 0.23427548380959706 Loss (std): 0.45209816900031 Loss ratio: 1.9297715734000755 Tokens per Sec: 2551.7941469925736
Epoch Step: 35 / 67 Loss (mean): 0.18913380208027775 Loss (std): 0.5174026482247582 Loss ratio: 2.7356434573506165 Tokens per Sec: 2998.0868915264377
Epoch Step: 40 / 67 Loss (mean): 0.21419169299235818 Loss (std): 0.5140839029411299 Loss ratio: 2.40011130104598 Tokens per Sec: 2612.7019883008375
Epoch Step: 45 / 67 Loss (mean): 0.1643019835191808 Loss (std): 0.33211604318131493 Loss ratio: 2.02137573794137 Tokens per Sec: 3260.3446735063544
Epoch Step: 50 / 67 Loss (mean): 0.257973580777616 Loss (std): 0.7890685502004435 Loss ratio: 3.058718446369334 Tokens per Sec: 2563.2061120890457
Epoch Step: 55 / 67 Loss (mean): 0.5469179439428444 Loss (std): 0.9237261712792612 Loss ratio: 1.6889666567162314 Tokens per Sec: 2839.2853986874707
Epoch Step: 60 / 67 Loss (mean): 0.13659476137763704 Loss (std): 0.4070703781809593 Loss ratio: 2.980131698137026 Tokens per Sec: 2727.0872769392668
Epoch Step: 65 / 67 Loss (mean): 1.9053339016950304 Loss (std): 8.172406585389485 Loss ratio: 4.289225409845024 Tokens per Sec: 2947.5967678317993
Mean loss per sample: 0.4201704565559025 Std loss per sample: 2.571009317802111 ratio: 6.118967380230469
Epoch ended with duration 0:00:11.414343
Train perplexity: 1.0584959049304916
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire 0 length and[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog zoneinfo objects[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.42237627506256 Loss (std): 45.04949638985415 Loss ratio: 0.45311224774209713 Tokens per Sec: 4451.763382327548
Mean loss per sample: 105.9334584391508 Std loss per sample: 53.62774173736816 ratio: 0.506239884239902
Epoch ended with duration 0:00:01.031517
b'BLEU = 2.63, 8.4/2.9/1.9/1.4 (BP=0.922, ratio=0.925, hyp_len=2878, ref_len=3113)\n'
Validation perplexity: 1716642.7741428479
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.63
Epoch 702 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.22814743759226985 Loss (std): 0.538950524289807 Loss ratio: 2.362290499413735 Tokens per Sec: 2907.39191665198
Epoch Step: 10 / 67 Loss (mean): 0.14612340693565784 Loss (std): 0.25153062766690987 Loss ratio: 1.72135753567302 Tokens per Sec: 2489.406668302952
Epoch Step: 15 / 67 Loss (mean): 0.12405757232409087 Loss (std): 0.2991119135543751 Loss ratio: 2.41107340689344 Tokens per Sec: 2877.460519125045
Epoch Step: 20 / 67 Loss (mean): 0.17626610481511307 Loss (std): 0.6030262967434138 Loss ratio: 3.4211131934635586 Tokens per Sec: 2733.852489593727
Epoch Step: 25 / 67 Loss (mean): 0.456481465822435 Loss (std): 0.999797816384244 Loss ratio: 2.190226528875439 Tokens per Sec: 2394.275955042241
Epoch Step: 30 / 67 Loss (mean): 0.2874748009053292 Loss (std): 0.6624802142046486 Loss ratio: 2.30448099144111 Tokens per Sec: 2872.142894724949
Epoch Step: 35 / 67 Loss (mean): 0.31893223378574476 Loss (std): 0.611677700551037 Loss ratio: 1.91789237886176 Tokens per Sec: 3158.2602659438635
Epoch Step: 40 / 67 Loss (mean): 1.0512344709859462 Loss (std): 1.6191513963061996 Loss ratio: 1.5402381114725125 Tokens per Sec: 3048.625545760901
Epoch Step: 45 / 67 Loss (mean): 0.2419812390194238 Loss (std): 0.662163695736305 Loss ratio: 2.736425759367044 Tokens per Sec: 2561.635494364808
Epoch Step: 50 / 67 Loss (mean): 0.1833369564728855 Loss (std): 0.44111311776593914 Loss ratio: 2.406024002210254 Tokens per Sec: 2162.4961716758057
Epoch Step: 55 / 67 Loss (mean): 0.2950987729591361 Loss (std): 0.7732675159333378 Loss ratio: 2.6203684555490043 Tokens per Sec: 3889.960870909332
Epoch Step: 60 / 67 Loss (mean): 0.16167331515407568 Loss (std): 0.318924729567702 Loss ratio: 1.9726491614510704 Tokens per Sec: 2582.397359431219
Epoch Step: 65 / 67 Loss (mean): 0.11263703610347875 Loss (std): 0.21592129286023315 Loss ratio: 1.9169653280104777 Tokens per Sec: 3369.874589477341
Mean loss per sample: 0.28915628569726676 Std loss per sample: 1.5659436509434248 ratio: 5.415561509124154
Epoch ended with duration 0:00:11.345654
Train perplexity: 1.0398981367434943
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings for low-end ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 120.53102430701256 Loss (std): 44.84376479022027 Loss ratio: 0.3720516360667088 Tokens per Sec: 4107.178432521361
Mean loss per sample: 111.60207819960034 Std loss per sample: 53.973928531439526 ratio: 0.4836283463727901
Epoch ended with duration 0:00:01.060445
b'BLEU = 2.73, 8.2/2.8/1.9/1.5 (BP=0.959, ratio=0.960, hyp_len=2989, ref_len=3113)\n'
Validation perplexity: 3700877.7455509105
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.73
Epoch 703 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.17370064185433876 Loss (std): 0.6454614739803864 Loss ratio: 3.7159417897928964 Tokens per Sec: 2942.7400583210133
Epoch Step: 10 / 67 Loss (mean): 0.06054256906190858 Loss (std): 0.08068813918596957 Loss ratio: 1.3327504999574906 Tokens per Sec: 2254.416334486633
Epoch Step: 15 / 67 Loss (mean): 0.17182432493518718 Loss (std): 0.41359898832245495 Loss ratio: 2.407103816519961 Tokens per Sec: 2232.774506639596
Epoch Step: 20 / 67 Loss (mean): 2.1703201446498497 Loss (std): 8.800398076330108 Loss ratio: 4.054884758833553 Tokens per Sec: 2816.0522036898096
Epoch Step: 25 / 67 Loss (mean): 0.10132862782893426 Loss (std): 0.1726013700059847 Loss ratio: 1.7033820915583207 Tokens per Sec: 2731.316602983049
Epoch Step: 30 / 67 Loss (mean): 0.1439639511254427 Loss (std): 0.4244603914254888 Loss ratio: 2.948379702746809 Tokens per Sec: 2778.7463181058133
Epoch Step: 35 / 67 Loss (mean): 0.3564213116387691 Loss (std): 0.7168502286000432 Loss ratio: 2.011244011487637 Tokens per Sec: 2905.4784296670814
Epoch Step: 40 / 67 Loss (mean): 0.23335590500300896 Loss (std): 0.5213903274293259 Loss ratio: 2.2343138367233646 Tokens per Sec: 2924.3345084657158
Epoch Step: 45 / 67 Loss (mean): 0.1315937887011387 Loss (std): 0.25434689765364893 Loss ratio: 1.932818411599149 Tokens per Sec: 2407.379551754662
Epoch Step: 50 / 67 Loss (mean): 0.2652913589045056 Loss (std): 0.7173122011482695 Loss ratio: 2.7038656822835816 Tokens per Sec: 2995.999586994046
Epoch Step: 55 / 67 Loss (mean): 0.12423665734945644 Loss (std): 0.30337470735849026 Loss ratio: 2.4419097698769305 Tokens per Sec: 2685.052509572458
Epoch Step: 60 / 67 Loss (mean): 0.24011922852605494 Loss (std): 0.8807568853135214 Loss ratio: 3.6679981470869665 Tokens per Sec: 3595.361863836157
Epoch Step: 65 / 67 Loss (mean): 0.35714907326200773 Loss (std): 0.8261245268034331 Loss ratio: 2.313108415088567 Tokens per Sec: 3012.3247311977216
Mean loss per sample: 0.3457657595117469 Std loss per sample: 2.150021577614467 ratio: 6.218144852314167
Epoch ended with duration 0:00:11.382046
Train perplexity: 1.047893552361303
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire 0 length and[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.14185762405396 Loss (std): 45.820849656123286 Loss ratio: 0.4621746127642272 Tokens per Sec: 4432.458017905448
Mean loss per sample: 103.97274711428851 Std loss per sample: 54.11071955029762 ratio: 0.5204317578607233
Epoch ended with duration 0:00:01.015862
b'BLEU = 2.55, 8.0/2.7/1.8/1.4 (BP=0.935, ratio=0.937, hyp_len=2917, ref_len=3113)\n'
Validation perplexity: 1316081.8193923575
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.55
Epoch 704 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5658629697163633 Loss (std): 1.088051529973749 Loss ratio: 1.9228180464240852 Tokens per Sec: 2985.332431792579
Epoch Step: 10 / 67 Loss (mean): 0.13821987123901636 Loss (std): 0.2791584144326541 Loss ratio: 2.0196691830939426 Tokens per Sec: 3278.069913447875
Epoch Step: 15 / 67 Loss (mean): 0.6683371173635351 Loss (std): 1.1189089112627846 Loss ratio: 1.6741684431304233 Tokens per Sec: 2790.5184066720994
Epoch Step: 20 / 67 Loss (mean): 0.10141094331129352 Loss (std): 0.18881439852376874 Loss ratio: 1.8618739985898705 Tokens per Sec: 3064.3879166919187
Epoch Step: 25 / 67 Loss (mean): 0.08158868078680825 Loss (std): 0.1507466551057776 Loss ratio: 1.847641776433174 Tokens per Sec: 2651.6452091955266
Epoch Step: 30 / 67 Loss (mean): 0.19357911026054353 Loss (std): 0.5250247699798352 Loss ratio: 2.7121974539152993 Tokens per Sec: 2830.9980299639483
Epoch Step: 35 / 67 Loss (mean): 0.11319162776635494 Loss (std): 0.18536738288323307 Loss ratio: 1.6376421696652341 Tokens per Sec: 3138.138307047619
Epoch Step: 40 / 67 Loss (mean): 0.16868747498801895 Loss (std): 0.3904707312700437 Loss ratio: 2.3147582907253605 Tokens per Sec: 2407.8503093674867
Epoch Step: 45 / 67 Loss (mean): 0.10659758830661303 Loss (std): 0.27022006929983305 Loss ratio: 2.5349548108216378 Tokens per Sec: 2484.066505864555
Epoch Step: 50 / 67 Loss (mean): 0.141466640740191 Loss (std): 0.5778744955113352 Loss ratio: 4.084881725385875 Tokens per Sec: 2656.633123317174
Epoch Step: 55 / 67 Loss (mean): 0.23665276498195453 Loss (std): 0.641216611698834 Loss ratio: 2.709525121110369 Tokens per Sec: 2726.8411650743947
Epoch Step: 60 / 67 Loss (mean): 0.32271030743686424 Loss (std): 0.7427193718223141 Loss ratio: 2.3015049557027902 Tokens per Sec: 2887.682634260895
Epoch Step: 65 / 67 Loss (mean): 0.19857848906212894 Loss (std): 0.4704772270901716 Loss ratio: 2.369225535515955 Tokens per Sec: 2723.4915783737965
Mean loss per sample: 0.31685807128781274 Std loss per sample: 1.7883275539133756 ratio: 5.643938772476394
Epoch ended with duration 0:00:11.337969
Train perplexity: 1.0438030336768858
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire 0 length and[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 117.80562481284142 Loss (std): 48.03163176722967 Loss ratio: 0.4077193414451801 Tokens per Sec: 4217.077989309141
Mean loss per sample: 108.62216237962978 Std loss per sample: 55.012326723844076 ratio: 0.506455823734924
Epoch ended with duration 0:00:01.046681
b'BLEU = 2.24, 8.2/2.4/1.5/1.2 (BP=0.929, ratio=0.932, hyp_len=2900, ref_len=3113)\n'
Validation perplexity: 2471284.4880234627
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.24
Epoch 705 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.21889571689689546 Loss (std): 0.4935279861382033 Loss ratio: 2.2546260526909507 Tokens per Sec: 2538.0725217413697
Epoch Step: 10 / 67 Loss (mean): 0.10336153597086195 Loss (std): 0.18230291094600617 Loss ratio: 1.7637403433845849 Tokens per Sec: 3428.480295745957
Epoch Step: 15 / 67 Loss (mean): 0.20626600069954293 Loss (std): 0.4095869179758062 Loss ratio: 1.9857219153263674 Tokens per Sec: 3237.264264263303
Epoch Step: 20 / 67 Loss (mean): 0.0815353818334188 Loss (std): 0.10005059092804444 Loss ratio: 1.227081895960863 Tokens per Sec: 2938.7462534841393
Epoch Step: 25 / 67 Loss (mean): 0.16177587480160582 Loss (std): 0.3080340299609866 Loss ratio: 1.9040789013735502 Tokens per Sec: 2802.2862420037586
Epoch Step: 30 / 67 Loss (mean): 0.23791238317335228 Loss (std): 0.7637420335686731 Loss ratio: 3.210181930766423 Tokens per Sec: 2948.4842215143426
Epoch Step: 35 / 67 Loss (mean): 0.3525291536079749 Loss (std): 1.9765438321007447 Loss ratio: 5.606752836954678 Tokens per Sec: 2574.3369150702733
Epoch Step: 40 / 67 Loss (mean): 0.22001598270753675 Loss (std): 0.4627978988153585 Loss ratio: 2.103473998207427 Tokens per Sec: 2344.6588274230458
Epoch Step: 45 / 67 Loss (mean): 0.27890905328786175 Loss (std): 0.4966225108831094 Loss ratio: 1.7805894252222274 Tokens per Sec: 3232.178006244301
Epoch Step: 50 / 67 Loss (mean): 0.13516447571237222 Loss (std): 0.29184403550679927 Loss ratio: 2.159177061640357 Tokens per Sec: 2503.7261656700553
Epoch Step: 55 / 67 Loss (mean): 0.14564588054918204 Loss (std): 0.3484604763526075 Loss ratio: 2.3925185871284467 Tokens per Sec: 2256.430383654103
Epoch Step: 60 / 67 Loss (mean): 0.07190008725547159 Loss (std): 0.09341533047141617 Loss ratio: 1.299238068230679 Tokens per Sec: 2678.9332648113786
Epoch Step: 65 / 67 Loss (mean): 0.1056012699218627 Loss (std): 0.24039618300694 Loss ratio: 2.276451629651952 Tokens per Sec: 2691.7900197515655
Mean loss per sample: 0.37018417977372564 Std loss per sample: 2.2549383023348093 ratio: 6.09139564989821
Epoch ended with duration 0:00:11.391883
Train perplexity: 1.0513613138745739
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire 0 length and[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog updating provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.67799746990204 Loss (std): 45.550727694877644 Loss ratio: 0.45697876011836785 Tokens per Sec: 4446.770564071425
Mean loss per sample: 103.90365396192695 Std loss per sample: 54.32415741642737 ratio: 0.5228320212524304
Epoch ended with duration 0:00:01.014423
b'BLEU = 2.56, 9.0/2.9/1.9/1.5 (BP=0.878, ratio=0.885, hyp_len=2755, ref_len=3113)\n'
Validation perplexity: 1303816.3843480467
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.56
Model saved checkpoint_commit_msg_generator!
Epoch 706 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.0604070665440304 Loss (std): 5.241725198546541 Loss ratio: 4.943125488242767 Tokens per Sec: 2217.431982189258
Epoch Step: 10 / 67 Loss (mean): 0.14615174037135148 Loss (std): 0.32163472780729313 Loss ratio: 2.2006903714595767 Tokens per Sec: 3087.1807465971556
Epoch Step: 15 / 67 Loss (mean): 0.2422951171774912 Loss (std): 0.5363713252258628 Loss ratio: 2.21371083113057 Tokens per Sec: 3010.664980240529
Epoch Step: 20 / 67 Loss (mean): 0.04163442450927895 Loss (std): 0.06869299437686384 Loss ratio: 1.6499085837383058 Tokens per Sec: 2152.609664299846
Epoch Step: 25 / 67 Loss (mean): 0.15940197921008803 Loss (std): 0.27012548781818496 Loss ratio: 1.6946181544092747 Tokens per Sec: 3452.3787935147957
Epoch Step: 30 / 67 Loss (mean): 0.20860860249740654 Loss (std): 0.47537809309196327 Loss ratio: 2.278803881531555 Tokens per Sec: 3275.2244412329887
Epoch Step: 35 / 67 Loss (mean): 0.09159031387753203 Loss (std): 0.1415681333635443 Loss ratio: 1.5456670838887943 Tokens per Sec: 3277.142625687303
Epoch Step: 40 / 67 Loss (mean): 1.2753217386753022 Loss (std): 5.251935764150181 Loss ratio: 4.1181261205548445 Tokens per Sec: 2390.276513229198
Epoch Step: 45 / 67 Loss (mean): 0.33532487973025127 Loss (std): 0.8093061722694449 Loss ratio: 2.4134987326931516 Tokens per Sec: 2426.71779415421
Epoch Step: 50 / 67 Loss (mean): 0.3003522067724589 Loss (std): 0.6395050372739064 Loss ratio: 2.1291837477937468 Tokens per Sec: 2669.9113899560543
Epoch Step: 55 / 67 Loss (mean): 0.15770735649721246 Loss (std): 0.5174048632003759 Loss ratio: 3.280790919918319 Tokens per Sec: 3062.053696688816
Epoch Step: 60 / 67 Loss (mean): 3.879941000551298 Loss (std): 10.790313110898172 Loss ratio: 2.7810508225163693 Tokens per Sec: 2677.735465587245
Epoch Step: 65 / 67 Loss (mean): 0.16176428943617793 Loss (std): 0.4185497368697758 Loss ratio: 2.58740503437818 Tokens per Sec: 2946.1422850187005
Mean loss per sample: 0.48450830429088143 Std loss per sample: 3.6081687183528532 ratio: 7.447073014844835
Epoch ended with duration 0:00:11.529043
Train perplexity: 1.0677502183889447
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire 0 length ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.27148780226707 Loss (std): 45.302966766353514 Loss ratio: 0.456354264142689 Tokens per Sec: 4410.758506109902
Mean loss per sample: 103.30114194769106 Std loss per sample: 53.49855534944514 ratio: 0.5178892928069989
Epoch ended with duration 0:00:01.021290
b'BLEU = 2.84, 8.8/3.0/2.1/1.7 (BP=0.920, ratio=0.923, hyp_len=2874, ref_len=3113)\n'
Validation perplexity: 1201588.5512998435
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.84
Epoch 707 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.17519962580263382 Loss (std): 0.46327038724250297 Loss ratio: 2.644243017758423 Tokens per Sec: 3021.9241120156694
Epoch Step: 10 / 67 Loss (mean): 0.07015579512517434 Loss (std): 0.08735621269955604 Loss ratio: 1.2451745795723952 Tokens per Sec: 2565.132252541291
Epoch Step: 15 / 67 Loss (mean): 0.1406399734405568 Loss (std): 0.43781948776473006 Loss ratio: 3.113051553225583 Tokens per Sec: 3198.387013014592
Epoch Step: 20 / 67 Loss (mean): 0.28972095341759996 Loss (std): 1.0620688330867398 Loss ratio: 3.6658336946582106 Tokens per Sec: 3064.220521179566
Epoch Step: 25 / 67 Loss (mean): 0.21912590465217363 Loss (std): 0.687630839232882 Loss ratio: 3.138062751295348 Tokens per Sec: 2828.4695705038
Epoch Step: 30 / 67 Loss (mean): 0.08259545860484996 Loss (std): 0.17941745765656916 Loss ratio: 2.1722436158981973 Tokens per Sec: 2899.8107253229764
Epoch Step: 35 / 67 Loss (mean): 0.28559342022344936 Loss (std): 0.8158940524680226 Loss ratio: 2.856837709460057 Tokens per Sec: 2482.1618883464394
Epoch Step: 40 / 67 Loss (mean): 0.1760677306301659 Loss (std): 0.5909906633184345 Loss ratio: 3.356609761500381 Tokens per Sec: 2941.3184051887133
Epoch Step: 45 / 67 Loss (mean): 0.5439952070801155 Loss (std): 1.2418358453864555 Loss ratio: 2.2828065931903834 Tokens per Sec: 2426.5192551650175
Epoch Step: 50 / 67 Loss (mean): 0.08786853211950074 Loss (std): 0.18513821186494892 Loss ratio: 2.106991062661226 Tokens per Sec: 2417.2854697772204
Epoch Step: 55 / 67 Loss (mean): 0.21953016935185587 Loss (std): 0.650650756568357 Loss ratio: 2.963832982452243 Tokens per Sec: 2721.652459923467
Epoch Step: 60 / 67 Loss (mean): 0.18356100054006674 Loss (std): 0.5205277507189854 Loss ratio: 2.835720818624364 Tokens per Sec: 2950.2291614470228
Epoch Step: 65 / 67 Loss (mean): 0.2772394758144401 Loss (std): 0.9157465757594744 Loss ratio: 3.303088685582407 Tokens per Sec: 2868.076250689622
Mean loss per sample: 0.5070584611218231 Std loss per sample: 3.148312095952562 ratio: 6.2089726083797
Epoch ended with duration 0:00:11.452942
Train perplexity: 1.0710129308909897
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire ) engines[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog class provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.29391169548035 Loss (std): 44.78021415897081 Loss ratio: 0.4464898556847174 Tokens per Sec: 4422.008710151411
Mean loss per sample: 107.49555227673444 Std loss per sample: 53.418988707201365 ratio: 0.4969413857205977
Epoch ended with duration 0:00:01.049588
b'BLEU = 2.54, 8.6/2.8/1.8/1.4 (BP=0.907, ratio=0.911, hyp_len=2837, ref_len=3113)\n'
Validation perplexity: 2121370.204258292
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.54
Epoch 708 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.8135235805793855 Loss (std): 5.483016462212106 Loss ratio: 6.739837164040337 Tokens per Sec: 3106.4559184173327
Epoch Step: 10 / 67 Loss (mean): 0.16789315952337347 Loss (std): 0.43169334701682643 Loss ratio: 2.571238448560661 Tokens per Sec: 2869.579008713928
Epoch Step: 15 / 67 Loss (mean): 0.3782431235108561 Loss (std): 0.8811798742751398 Loss ratio: 2.3296652853752375 Tokens per Sec: 2880.4120698309343
Epoch Step: 20 / 67 Loss (mean): 0.42231416633876506 Loss (std): 0.7474807152858708 Loss ratio: 1.7699636310240867 Tokens per Sec: 2515.3269346960155
Epoch Step: 25 / 67 Loss (mean): 0.6926885657417188 Loss (std): 1.4599089707523325 Loss ratio: 2.1075979061226273 Tokens per Sec: 3741.703585737741
Epoch Step: 30 / 67 Loss (mean): 0.1731902651663404 Loss (std): 0.6427817314885892 Loss ratio: 3.711419523904708 Tokens per Sec: 2693.53729391379
Epoch Step: 35 / 67 Loss (mean): 0.2813678724019155 Loss (std): 0.7509440052772329 Loss ratio: 2.6689045869620776 Tokens per Sec: 2359.727350032974
Epoch Step: 40 / 67 Loss (mean): 0.11817558041730081 Loss (std): 0.4087801972188207 Loss ratio: 3.4590919357056578 Tokens per Sec: 2472.1934569387363
Epoch Step: 45 / 67 Loss (mean): 0.43543651430900354 Loss (std): 0.9044646829139207 Loss ratio: 2.0771447804491556 Tokens per Sec: 3528.6344782840847
Epoch Step: 50 / 67 Loss (mean): 0.37151804339191585 Loss (std): 1.0151776492422147 Loss ratio: 2.7325123699881777 Tokens per Sec: 2845.4454695723975
Epoch Step: 55 / 67 Loss (mean): 0.09809804368387631 Loss (std): 0.30468301937023906 Loss ratio: 3.105903114154739 Tokens per Sec: 2450.246286831493
Epoch Step: 60 / 67 Loss (mean): 0.09796576466987972 Loss (std): 0.22052541921274826 Loss ratio: 2.2510457602802787 Tokens per Sec: 2312.388797585108
Epoch Step: 65 / 67 Loss (mean): 0.2336842223498934 Loss (std): 0.5750281032288344 Loss ratio: 2.4607057226475892 Tokens per Sec: 2770.0129635444
Mean loss per sample: 0.332250143541659 Std loss per sample: 2.103668961900684 ratio: 6.331581800014833
Epoch ended with duration 0:00:11.387693
Train perplexity: 1.0459790634109474
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print warnings[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog class provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 119.56647992134094 Loss (std): 46.029174848639535 Loss ratio: 0.3849672155517223 Tokens per Sec: 4294.350666856699
Mean loss per sample: 106.29502343994062 Std loss per sample: 53.20187016333648 ratio: 0.5005113921762939
Epoch ended with duration 0:00:01.035638
b'BLEU = 2.31, 7.9/2.5/1.5/1.1 (BP=0.981, ratio=0.981, hyp_len=3054, ref_len=3113)\n'
Validation perplexity: 1802850.533100175
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.31
Epoch 709 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.41043498809222 Loss (std): 1.0300922521848093 Loss ratio: 2.5097574087747105 Tokens per Sec: 2461.1462651400434
Epoch Step: 10 / 67 Loss (mean): 0.7369459966776049 Loss (std): 1.3981215392741362 Loss ratio: 1.8971831661713725 Tokens per Sec: 3059.959200082296
Epoch Step: 15 / 67 Loss (mean): 0.406912635306071 Loss (std): 0.8340544427612967 Loss ratio: 2.0497137970019996 Tokens per Sec: 3195.5249301616864
Epoch Step: 20 / 67 Loss (mean): 0.09723927213417483 Loss (std): 0.17231575541119296 Loss ratio: 1.7720798565154257 Tokens per Sec: 2983.5463271563385
Epoch Step: 25 / 67 Loss (mean): 0.24312302217367687 Loss (std): 0.6922967385384119 Loss ratio: 2.847516176579379 Tokens per Sec: 2593.8853036656315
Epoch Step: 30 / 67 Loss (mean): 0.18229361314115522 Loss (std): 0.45769491127801454 Loss ratio: 2.5107567039313006 Tokens per Sec: 2573.0298376097876
Epoch Step: 35 / 67 Loss (mean): 0.1984255838960962 Loss (std): 0.47864945828890054 Loss ratio: 2.41223661228857 Tokens per Sec: 2434.2034002582386
Epoch Step: 40 / 67 Loss (mean): 0.3546897799715225 Loss (std): 0.88936600679829 Loss ratio: 2.5074475133444665 Tokens per Sec: 2484.594435569621
Epoch Step: 45 / 67 Loss (mean): 0.3187173984133551 Loss (std): 1.0608072420134653 Loss ratio: 3.3283631433188012 Tokens per Sec: 2591.1604472511262
Epoch Step: 50 / 67 Loss (mean): 0.19766712566251954 Loss (std): 0.5077577638065772 Loss ratio: 2.568751693559205 Tokens per Sec: 2898.6921096892506
Epoch Step: 55 / 67 Loss (mean): 0.24053816279774765 Loss (std): 0.5439064005382372 Loss ratio: 2.261206264369665 Tokens per Sec: 2720.40754219193
Epoch Step: 60 / 67 Loss (mean): 0.21276772580313263 Loss (std): 0.7170745158935152 Loss ratio: 3.3702222138568234 Tokens per Sec: 3018.0001289841516
Epoch Step: 65 / 67 Loss (mean): 0.09820016983758251 Loss (std): 0.1839613908692667 Loss ratio: 1.8733306793005384 Tokens per Sec: 2607.4014445314933
Mean loss per sample: 0.31535193597366157 Std loss per sample: 1.8723830921126827 ratio: 5.937439661918123
Epoch ended with duration 0:00:11.446495
Train perplexity: 1.0435903495017864
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire 0 and exception[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.02142679691315 Loss (std): 46.15385130819754 Loss ratio: 0.46143964134714716 Tokens per Sec: 4301.245404613317
Mean loss per sample: 108.30468917143394 Std loss per sample: 54.81868212067511 ratio: 0.5061524347658061
Epoch ended with duration 0:00:01.050418
b'BLEU = 2.30, 8.5/2.6/1.6/1.2 (BP=0.907, ratio=0.911, hyp_len=2835, ref_len=3113)\n'
Validation perplexity: 2367216.3877296587
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.3
Epoch 710 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.09854925030049344 Loss (std): 0.21062458819013746 Loss ratio: 2.1372520597356877 Tokens per Sec: 2757.495984700636
Epoch Step: 10 / 67 Loss (mean): 0.24464745763657447 Loss (std): 0.6961431487996831 Loss ratio: 2.8454951280704033 Tokens per Sec: 2353.7703212596084
Epoch Step: 15 / 67 Loss (mean): 0.14851889152487274 Loss (std): 0.3042329261240879 Loss ratio: 2.0484459788278007 Tokens per Sec: 2706.2102182578155
Epoch Step: 20 / 67 Loss (mean): 0.28460500645905995 Loss (std): 0.5694748772875511 Loss ratio: 2.000930638475853 Tokens per Sec: 3005.4774280008974
Epoch Step: 25 / 67 Loss (mean): 0.1232453034426726 Loss (std): 0.34098453347497854 Loss ratio: 2.7667142191230605 Tokens per Sec: 2338.1827457433474
Epoch Step: 30 / 67 Loss (mean): 0.1046755924998024 Loss (std): 0.3269033238188851 Loss ratio: 3.123013837437817 Tokens per Sec: 2828.201880557324
Epoch Step: 35 / 67 Loss (mean): 0.2283410574178788 Loss (std): 0.5916337792401799 Loss ratio: 2.59100919445009 Tokens per Sec: 3274.0700599801676
Epoch Step: 40 / 67 Loss (mean): 0.19243011879370897 Loss (std): 0.38411695305658444 Loss ratio: 1.9961373794523802 Tokens per Sec: 2859.9296949325458
Epoch Step: 45 / 67 Loss (mean): 0.26101388524057256 Loss (std): 0.697731417823943 Loss ratio: 2.6731582389988735 Tokens per Sec: 2997.090650744712
Epoch Step: 50 / 67 Loss (mean): 0.07448753590688284 Loss (std): 0.1714570161510816 Loss ratio: 2.3018215606624537 Tokens per Sec: 2518.0611675511827
Epoch Step: 55 / 67 Loss (mean): 0.24426438909540593 Loss (std): 0.819138109911792 Loss ratio: 3.3534896877327838 Tokens per Sec: 2568.223554996558
Epoch Step: 60 / 67 Loss (mean): 0.08356502064270899 Loss (std): 0.1538529490507045 Loss ratio: 1.8411166283141236 Tokens per Sec: 2551.1740455432005
Epoch Step: 65 / 67 Loss (mean): 0.899827540073602 Loss (std): 1.1980648137513272 Loss ratio: 1.331438259439504 Tokens per Sec: 3814.527149748121
Mean loss per sample: 0.30170518766382726 Std loss per sample: 1.7505882559347796 ratio: 5.802314071859313
Epoch ended with duration 0:00:11.435214
Train perplexity: 1.0416652408876395
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog class provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.01745268702507 Loss (std): 45.49944386854997 Loss ratio: 0.45491504378667763 Tokens per Sec: 4282.274669788806
Mean loss per sample: 107.12927358997527 Std loss per sample: 54.371745797676105 ratio: 0.5075339725141569
Epoch ended with duration 0:00:01.053795
b'BLEU = 2.75, 8.3/3.0/2.0/1.6 (BP=0.932, ratio=0.934, hyp_len=2909, ref_len=3113)\n'
Validation perplexity: 2018641.7412875113
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.75
Model saved checkpoint_commit_msg_generator!
Epoch 711 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.27427394205733435 Loss (std): 0.5989496699516715 Loss ratio: 2.1837643979553363 Tokens per Sec: 2936.0589574632236
Epoch Step: 10 / 67 Loss (mean): 0.1637348962424312 Loss (std): 0.44834547036323136 Loss ratio: 2.738240171474482 Tokens per Sec: 2503.0498232670952
Epoch Step: 15 / 67 Loss (mean): 0.14603142214292575 Loss (std): 0.27875329346622185 Loss ratio: 1.9088583085453819 Tokens per Sec: 2715.1434637518673
Epoch Step: 20 / 67 Loss (mean): 0.19078247003562865 Loss (std): 0.540094118078982 Loss ratio: 2.830942056563789 Tokens per Sec: 2280.527447347342
Epoch Step: 25 / 67 Loss (mean): 0.26782854282393487 Loss (std): 0.8365236936892101 Loss ratio: 3.1233552812148333 Tokens per Sec: 2434.0652357218933
Epoch Step: 30 / 67 Loss (mean): 0.0652157676177012 Loss (std): 0.10137605108750583 Loss ratio: 1.5544714842854939 Tokens per Sec: 3270.8487947095405
Epoch Step: 35 / 67 Loss (mean): 0.9379997924961572 Loss (std): 4.743203301716241 Loss ratio: 5.05672105650884 Tokens per Sec: 2929.246265118128
Epoch Step: 40 / 67 Loss (mean): 0.2603521600449312 Loss (std): 0.7141898415788607 Loss ratio: 2.7431684893860946 Tokens per Sec: 2913.3700687760565
Epoch Step: 45 / 67 Loss (mean): 0.35290838131822966 Loss (std): 0.9206162837900579 Loss ratio: 2.6086551992651783 Tokens per Sec: 2970.6951447478923
Epoch Step: 50 / 67 Loss (mean): 0.02951607744658499 Loss (std): 0.042717660097329566 Loss ratio: 1.447267516309895 Tokens per Sec: 2714.262971658155
Epoch Step: 55 / 67 Loss (mean): 0.4923707765603922 Loss (std): 0.8541123024388885 Loss ratio: 1.7346933309193393 Tokens per Sec: 2645.5738250530103
Epoch Step: 60 / 67 Loss (mean): 0.49311914967984194 Loss (std): 0.9100192419353388 Loss ratio: 1.8454348052112144 Tokens per Sec: 2384.306359270975
Epoch Step: 65 / 67 Loss (mean): 3.9662001274446084 Loss (std): 15.144023163349496 Loss ratio: 3.8182700511148115 Tokens per Sec: 3295.5775724699433
Mean loss per sample: 0.43416892718628436 Std loss per sample: 3.376784243314025 ratio: 7.777581563005736
Epoch ended with duration 0:00:11.493935
Train perplexity: 1.0605025843307927
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow call log[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog method_1 extension[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.68807569146156 Loss (std): 44.76235857993668 Loss ratio: 0.44902420143486277 Tokens per Sec: 4391.976070145768
Mean loss per sample: 104.7210735536837 Std loss per sample: 53.799104103997756 ratio: 0.5137371331131212
Epoch ended with duration 0:00:01.025424
b'BLEU = 2.60, 8.6/2.7/1.8/1.4 (BP=0.929, ratio=0.931, hyp_len=2899, ref_len=3113)\n'
Validation perplexity: 1456550.0209633338
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.6
Epoch 712 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.4867475430573904 Loss (std): 7.116212154040717 Loss ratio: 4.786429402403272 Tokens per Sec: 2903.80539766666
Epoch Step: 10 / 67 Loss (mean): 0.34761078678457125 Loss (std): 1.1004595758690325 Loss ratio: 3.1657808609691758 Tokens per Sec: 2658.8717342511172
Epoch Step: 15 / 67 Loss (mean): 0.08420758159081743 Loss (std): 0.17236839793105477 Loss ratio: 2.0469463042963225 Tokens per Sec: 2955.85783468882
Epoch Step: 20 / 67 Loss (mean): 0.14919983085565036 Loss (std): 0.4299485113488031 Loss ratio: 2.8816957022208345 Tokens per Sec: 2978.20854226755
Epoch Step: 25 / 67 Loss (mean): 0.2309435545244014 Loss (std): 0.5611643687670016 Loss ratio: 2.429876728634612 Tokens per Sec: 2491.2286247148368
Epoch Step: 30 / 67 Loss (mean): 0.1530152096402162 Loss (std): 0.40120113714720906 Loss ratio: 2.62196900615665 Tokens per Sec: 2660.391843695085
Epoch Step: 35 / 67 Loss (mean): 0.4022948818765144 Loss (std): 0.90634993035794 Loss ratio: 2.252949195202903 Tokens per Sec: 3046.8299454137205
Epoch Step: 40 / 67 Loss (mean): 13.776981965101186 Loss (std): 21.616728613669192 Loss ratio: 1.5690467381337265 Tokens per Sec: 2912.2297197105604
Epoch Step: 45 / 67 Loss (mean): 0.11981910455870093 Loss (std): 0.35869130950324457 Loss ratio: 2.9936069946801935 Tokens per Sec: 2775.5701035047123
Epoch Step: 50 / 67 Loss (mean): 0.1494262765500025 Loss (std): 0.26867704836742234 Loss ratio: 1.7980575744154004 Tokens per Sec: 2487.4367262515293
Epoch Step: 55 / 67 Loss (mean): 0.13334014541396755 Loss (std): 0.29666206593050864 Loss ratio: 2.2248518254535585 Tokens per Sec: 2592.935848577467
Epoch Step: 60 / 67 Loss (mean): 0.11842762333981227 Loss (std): 0.2423159896980438 Loss ratio: 2.046110382564635 Tokens per Sec: 2518.015911329166
Epoch Step: 65 / 67 Loss (mean): 0.11214018399459746 Loss (std): 0.2854731729263781 Loss ratio: 2.5456813316815246 Tokens per Sec: 2654.861785618607
Mean loss per sample: 0.5649217904262727 Std loss per sample: 3.7857402565619527 ratio: 6.701352861084273
Epoch ended with duration 0:00:11.470611
Train perplexity: 1.0794306832334086
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire 0 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.0759128332138 Loss (std): 44.87229997972752 Loss ratio: 0.4529082669696556 Tokens per Sec: 4408.264719348893
Mean loss per sample: 103.48690729704303 Std loss per sample: 53.3958939086054 ratio: 0.5159676262750882
Epoch ended with duration 0:00:01.021956
b'BLEU = 2.88, 8.6/3.1/2.1/1.6 (BP=0.932, ratio=0.934, hyp_len=2909, ref_len=3113)\n'
Validation perplexity: 1232221.9539495155
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.88
Epoch 713 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5475242082420664 Loss (std): 1.0835340298305707 Loss ratio: 1.9789700866551065 Tokens per Sec: 2457.2268132061213
Epoch Step: 10 / 67 Loss (mean): 0.19818249706736424 Loss (std): 0.4692896686928594 Loss ratio: 2.3679672808509578 Tokens per Sec: 2949.853488338508
Epoch Step: 15 / 67 Loss (mean): 0.13203039855761745 Loss (std): 0.423162908351654 Loss ratio: 3.2050415129739056 Tokens per Sec: 2805.7418711876544
Epoch Step: 20 / 67 Loss (mean): 0.4432065827168117 Loss (std): 0.9176208552773125 Loss ratio: 2.07041341681432 Tokens per Sec: 2988.506950415634
Epoch Step: 25 / 67 Loss (mean): 0.14511835857911137 Loss (std): 0.36956774514544355 Loss ratio: 2.5466643143153624 Tokens per Sec: 2885.477212339399
Epoch Step: 30 / 67 Loss (mean): 0.8143457207333995 Loss (std): 1.4846395450491798 Loss ratio: 1.8231071979012967 Tokens per Sec: 3000.402808080874
Epoch Step: 35 / 67 Loss (mean): 0.261637493618764 Loss (std): 0.529654064557606 Loss ratio: 2.024381357701634 Tokens per Sec: 2910.9116504377416
Epoch Step: 40 / 67 Loss (mean): 2.826582689647239 Loss (std): 10.323963031012031 Loss ratio: 3.652453922124767 Tokens per Sec: 2668.2711394924086
Epoch Step: 45 / 67 Loss (mean): 0.24291822332543234 Loss (std): 0.642974593326215 Loss ratio: 2.6468767329359055 Tokens per Sec: 2562.0508129799746
Epoch Step: 50 / 67 Loss (mean): 0.10753367550387338 Loss (std): 0.19192546524883142 Loss ratio: 1.7847940596238452 Tokens per Sec: 3147.513300992805
Epoch Step: 55 / 67 Loss (mean): 0.07513160376765882 Loss (std): 0.14710865366557613 Loss ratio: 1.958012957110608 Tokens per Sec: 2516.73621791543
Epoch Step: 60 / 67 Loss (mean): 0.2927130103594209 Loss (std): 1.3511403007373894 Loss ratio: 4.61592157819815 Tokens per Sec: 2808.9030623721205
Epoch Step: 65 / 67 Loss (mean): 0.1475543724518502 Loss (std): 0.4548246646858676 Loss ratio: 3.0824207858312396 Tokens per Sec: 2629.252716051608
Mean loss per sample: 0.32554428509502287 Std loss per sample: 1.9890317715277386 ratio: 6.1098654241378
Epoch ended with duration 0:00:11.384640
Train perplexity: 1.0450304762312814
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire into unit test[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.38708412647247 Loss (std): 45.55439301803861 Loss ratio: 0.4583532500065053 Tokens per Sec: 4413.625080245402
Mean loss per sample: 104.17166098347697 Std loss per sample: 53.8050127138085 ratio: 0.5165033580710852
Epoch ended with duration 0:00:01.021977
b'BLEU = 2.78, 8.4/2.9/2.0/1.7 (BP=0.926, ratio=0.929, hyp_len=2892, ref_len=3113)\n'
Validation perplexity: 1352041.126165855
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.78
Epoch 714 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2805034416669514 Loss (std): 0.8738118604187147 Loss ratio: 3.1151555760809986 Tokens per Sec: 2560.7764241566647
Epoch Step: 10 / 67 Loss (mean): 0.2597911000120803 Loss (std): 0.7889642779681065 Loss ratio: 3.036918038883625 Tokens per Sec: 3621.9045901664326
Epoch Step: 15 / 67 Loss (mean): 0.07946072074037147 Loss (std): 0.1839937329394394 Loss ratio: 2.315530632305957 Tokens per Sec: 2840.4589283825703
Epoch Step: 20 / 67 Loss (mean): 0.12119853583408258 Loss (std): 0.23128170248408808 Loss ratio: 1.9082879251999074 Tokens per Sec: 2721.542078425199
Epoch Step: 25 / 67 Loss (mean): 0.0708000058266407 Loss (std): 0.12883758285482727 Loss ratio: 1.8197397210714372 Tokens per Sec: 2658.937598539472
Epoch Step: 30 / 67 Loss (mean): 0.13970150933391778 Loss (std): 0.4351394328392268 Loss ratio: 3.1147797537329853 Tokens per Sec: 2466.3698189782494
Epoch Step: 35 / 67 Loss (mean): 0.14487284852930316 Loss (std): 0.27776827374839247 Loss ratio: 1.917324581991696 Tokens per Sec: 3220.125851734012
Epoch Step: 40 / 67 Loss (mean): 1.0075354764449003 Loss (std): 1.8669584821074123 Loss ratio: 1.8529952798237888 Tokens per Sec: 2879.2574027588166
Epoch Step: 45 / 67 Loss (mean): 1.191934993086761 Loss (std): 1.5436012033129656 Loss ratio: 1.295038078641766 Tokens per Sec: 2969.527132674765
Epoch Step: 50 / 67 Loss (mean): 0.18118975801371562 Loss (std): 0.45958845503302675 Loss ratio: 2.536503498162612 Tokens per Sec: 2451.6284464032237
Epoch Step: 55 / 67 Loss (mean): 0.44592508788809937 Loss (std): 0.7808808310016336 Loss ratio: 1.7511480116534466 Tokens per Sec: 2836.033976073402
Epoch Step: 60 / 67 Loss (mean): 0.10600267443987832 Loss (std): 0.16521765611249342 Loss ratio: 1.558617808328979 Tokens per Sec: 2467.1712408641247
Epoch Step: 65 / 67 Loss (mean): 0.5969245184269312 Loss (std): 4.315247072721811 Loss ratio: 7.2291335663238225 Tokens per Sec: 2605.329230667972
Mean loss per sample: 0.4278381982067033 Std loss per sample: 3.0251131722456606 ratio: 7.070694446932306
Epoch ended with duration 0:00:11.465853
Train perplexity: 1.059594604189784
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print warnings[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.29104971885681 Loss (std): 45.161993781896115 Loss ratio: 0.45484455960303133 Tokens per Sec: 4407.114990397972
Mean loss per sample: 105.18462350491251 Std loss per sample: 54.487094776590304 ratio: 0.5180138784643323
Epoch ended with duration 0:00:01.036295
b'BLEU = 2.51, 8.5/2.7/1.7/1.4 (BP=0.924, ratio=0.926, hyp_len=2884, ref_len=3113)\n'
Validation perplexity: 1550984.6098939753
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.51
Epoch 715 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2909974855242581 Loss (std): 0.7497513439571162 Loss ratio: 2.5764873624470392 Tokens per Sec: 2627.339533055582
Epoch Step: 10 / 67 Loss (mean): 0.45250308299728204 Loss (std): 2.5722024911810566 Loss ratio: 5.684386665706997 Tokens per Sec: 2756.0273387194347
Epoch Step: 15 / 67 Loss (mean): 0.39561580315239553 Loss (std): 1.0882938635639237 Loss ratio: 2.750885720165989 Tokens per Sec: 3012.275870927623
Epoch Step: 20 / 67 Loss (mean): 0.15400116459932178 Loss (std): 0.3753617620879559 Loss ratio: 2.4373956071343175 Tokens per Sec: 3272.358651229682
Epoch Step: 25 / 67 Loss (mean): 0.12147817791810667 Loss (std): 0.18513030496841695 Loss ratio: 1.5239799290801082 Tokens per Sec: 2555.9597590774342
Epoch Step: 30 / 67 Loss (mean): 0.28873672054123745 Loss (std): 0.7785392800557808 Loss ratio: 2.696363935270885 Tokens per Sec: 3192.736097570714
Epoch Step: 35 / 67 Loss (mean): 0.264354171197283 Loss (std): 0.6629703036866513 Loss ratio: 2.5078866759847265 Tokens per Sec: 2452.5833704938977
Epoch Step: 40 / 67 Loss (mean): 0.39095349113813427 Loss (std): 0.9942111181652378 Loss ratio: 2.543041923659294 Tokens per Sec: 2324.7233524103876
Epoch Step: 45 / 67 Loss (mean): 0.7017893479514896 Loss (std): 5.041033980923143 Loss ratio: 7.183115554030323 Tokens per Sec: 2717.4891340263403
Epoch Step: 50 / 67 Loss (mean): 0.15734736344620615 Loss (std): 0.3840435538009933 Loss ratio: 2.4407371397251914 Tokens per Sec: 2770.9583906285447
Epoch Step: 55 / 67 Loss (mean): 0.13647318546782117 Loss (std): 0.38631658901444593 Loss ratio: 2.830714236574591 Tokens per Sec: 2790.370321950687
Epoch Step: 60 / 67 Loss (mean): 0.286299780194895 Loss (std): 0.6200515251288856 Loss ratio: 2.165742232518632 Tokens per Sec: 3092.3264479664094
Epoch Step: 65 / 67 Loss (mean): 0.15601674806384835 Loss (std): 0.45178499459420923 Loss ratio: 2.895746772066551 Tokens per Sec: 2577.912009871141
Mean loss per sample: 0.40061199557932553 Std loss per sample: 2.6797305217277603 ratio: 6.689092067382052
Epoch ended with duration 0:00:11.435866
Train perplexity: 1.0556985585869554
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog updating[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.52231460809708 Loss (std): 45.35059590987166 Loss ratio: 0.45568268873624007 Tokens per Sec: 4304.126911186694
Mean loss per sample: 105.581848717829 Std loss per sample: 52.840600451097565 ratio: 0.5004704984122397
Epoch ended with duration 0:00:01.035017
b'BLEU = 2.60, 8.3/2.7/1.8/1.4 (BP=0.941, ratio=0.943, hyp_len=2935, ref_len=3113)\n'
Validation perplexity: 1636763.952424726
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.6
Model saved checkpoint_commit_msg_generator!
Epoch 716 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1939500888523753 Loss (std): 0.5252765205631463 Loss ratio: 2.7083077077781565 Tokens per Sec: 2900.149644424314
Epoch Step: 10 / 67 Loss (mean): 0.20515715783039923 Loss (std): 0.6487235687692897 Loss ratio: 3.162081087639073 Tokens per Sec: 2403.7165252354453
Epoch Step: 15 / 67 Loss (mean): 0.0753596721087888 Loss (std): 0.163185130074138 Loss ratio: 2.165417198718233 Tokens per Sec: 2993.889804592148
Epoch Step: 20 / 67 Loss (mean): 0.1318562209180527 Loss (std): 0.23972015392958076 Loss ratio: 1.818042048077234 Tokens per Sec: 2210.6674290162805
Epoch Step: 25 / 67 Loss (mean): 1.0915069399561617 Loss (std): 1.5718683644417695 Loss ratio: 1.4400901239390203 Tokens per Sec: 2865.647269283761
Epoch Step: 30 / 67 Loss (mean): 0.11334846272939103 Loss (std): 0.30345601029225505 Loss ratio: 2.6771956406389754 Tokens per Sec: 2839.6733221193635
Epoch Step: 35 / 67 Loss (mean): 0.36814270202285115 Loss (std): 0.8472403181422166 Loss ratio: 2.3013910461536926 Tokens per Sec: 2884.2777101322217
Epoch Step: 40 / 67 Loss (mean): 0.11095326658141857 Loss (std): 0.22094788719998 Loss ratio: 1.991359912218955 Tokens per Sec: 3325.0723431469646
Epoch Step: 45 / 67 Loss (mean): 0.8050697575781669 Loss (std): 1.2951913974432825 Loss ratio: 1.6087940023228708 Tokens per Sec: 2691.2516594660838
Epoch Step: 50 / 67 Loss (mean): 0.15510647328756022 Loss (std): 0.3497376161200898 Loss ratio: 2.2548228240074315 Tokens per Sec: 2426.3445794598156
Epoch Step: 55 / 67 Loss (mean): 0.24720169856573193 Loss (std): 0.6853753641894947 Loss ratio: 2.7725350115555565 Tokens per Sec: 3006.8414404588075
Epoch Step: 60 / 67 Loss (mean): 5.52159035168188 Loss (std): 13.942954039213701 Loss ratio: 2.525169951256284 Tokens per Sec: 2916.0535388904677
Epoch Step: 65 / 67 Loss (mean): 0.16693915549330995 Loss (std): 0.43214973684988117 Loss ratio: 2.588666125528588 Tokens per Sec: 2590.3009590001543
Mean loss per sample: 0.4067795338489831 Std loss per sample: 2.622014828614949 ratio: 6.445788468768865
Epoch ended with duration 0:00:11.399096
Train perplexity: 1.0565798709786234
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope variable[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add method_1 for developer provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.32308977842331 Loss (std): 45.98167278712821 Loss ratio: 0.4583358914551452 Tokens per Sec: 4405.925108987397
Mean loss per sample: 104.55686120756093 Std loss per sample: 54.331425418703326 ratio: 0.5196351993662793
Epoch ended with duration 0:00:01.020663
b'BLEU = 2.69, 9.0/3.0/1.9/1.5 (BP=0.915, ratio=0.919, hyp_len=2860, ref_len=3113)\n'
Validation perplexity: 1424494.3745393418
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.69
Epoch 717 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.06920630243394044 Loss (std): 0.1094771853956007 Loss ratio: 1.5818961791825257 Tokens per Sec: 2401.644828080737
Epoch Step: 10 / 67 Loss (mean): 0.18223549158756214 Loss (std): 0.47504636500151054 Loss ratio: 2.6067719348360634 Tokens per Sec: 2780.5915152967214
Epoch Step: 15 / 67 Loss (mean): 0.597872399620428 Loss (std): 1.092377595013255 Loss ratio: 1.8271082520396895 Tokens per Sec: 2938.7326232924424
Epoch Step: 20 / 67 Loss (mean): 0.4975123369731591 Loss (std): 0.9358584643496094 Loss ratio: 1.8810758946066077 Tokens per Sec: 3793.4779132106933
Epoch Step: 25 / 67 Loss (mean): 0.16165465370067977 Loss (std): 0.5376822358932014 Loss ratio: 3.3261166541408413 Tokens per Sec: 3004.4764621734303
Epoch Step: 30 / 67 Loss (mean): 0.34734811420094047 Loss (std): 0.6379733523382194 Loss ratio: 1.8366973254075378 Tokens per Sec: 2468.392866693375
Epoch Step: 35 / 67 Loss (mean): 0.21248562536766258 Loss (std): 0.6678345548247583 Loss ratio: 3.1429634530298616 Tokens per Sec: 2380.3554581629533
Epoch Step: 40 / 67 Loss (mean): 0.21477082215506016 Loss (std): 0.5935547702292512 Loss ratio: 2.7636657730011236 Tokens per Sec: 3162.7852866292283
Epoch Step: 45 / 67 Loss (mean): 0.1220650799205032 Loss (std): 0.42920445470511015 Loss ratio: 3.516193615607644 Tokens per Sec: 2555.665540795155
Epoch Step: 50 / 67 Loss (mean): 0.14421284748459584 Loss (std): 0.43847409383095626 Loss ratio: 3.0404648509404963 Tokens per Sec: 2561.288004342222
Epoch Step: 55 / 67 Loss (mean): 0.14240880283523438 Loss (std): 0.30190196880859754 Loss ratio: 2.119967044157342 Tokens per Sec: 2934.6830217557667
Epoch Step: 60 / 67 Loss (mean): 0.1321966047762544 Loss (std): 0.31066441852232013 Loss ratio: 2.35001813433958 Tokens per Sec: 3022.9663233583074
Epoch Step: 65 / 67 Loss (mean): 0.19385840331415238 Loss (std): 0.6156596962649951 Loss ratio: 3.175821557073815 Tokens per Sec: 2929.2373216069345
Mean loss per sample: 0.28063968862463157 Std loss per sample: 1.0430222918201983 ratio: 3.7165886868385476
Epoch ended with duration 0:00:11.369646
Train perplexity: 1.038700559353404
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire 0 length[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.52706328034401 Loss (std): 45.691479077062176 Loss ratio: 0.4545191870336493 Tokens per Sec: 4308.457345113228
Mean loss per sample: 107.3631098859745 Std loss per sample: 53.85978339666973 ratio: 0.5016600530095651
Epoch ended with duration 0:00:01.034309
b'BLEU = 2.78, 8.3/2.9/2.0/1.6 (BP=0.935, ratio=0.937, hyp_len=2916, ref_len=3113)\n'
Validation perplexity: 2083634.8371801686
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.78
Epoch 718 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.14953050734516182 Loss (std): 0.3689448461741037 Loss ratio: 2.4673550081821563 Tokens per Sec: 2473.5782034364142
Epoch Step: 10 / 67 Loss (mean): 0.10404963353630592 Loss (std): 0.24962650400994366 Loss ratio: 2.3991098817550545 Tokens per Sec: 2785.555300560798
Epoch Step: 15 / 67 Loss (mean): 0.33396343505773984 Loss (std): 0.7202153512772539 Loss ratio: 2.1565694793884664 Tokens per Sec: 2642.1611371906642
Epoch Step: 20 / 67 Loss (mean): 0.2062942800548626 Loss (std): 0.5678775043508225 Loss ratio: 2.752754483545541 Tokens per Sec: 2633.79744695626
Epoch Step: 25 / 67 Loss (mean): 0.11903852136947535 Loss (std): 0.23315791650639753 Loss ratio: 1.9586761816598424 Tokens per Sec: 2955.3252349768372
Epoch Step: 30 / 67 Loss (mean): 0.21329733622860658 Loss (std): 0.6799018702697325 Loss ratio: 3.187577877395671 Tokens per Sec: 2869.107484156353
Epoch Step: 35 / 67 Loss (mean): 0.13559989393070282 Loss (std): 0.5933665807979549 Loss ratio: 4.375863163294139 Tokens per Sec: 2576.098283837118
Epoch Step: 40 / 67 Loss (mean): 0.10412829659890122 Loss (std): 0.20755102803598252 Loss ratio: 1.993224078517891 Tokens per Sec: 2578.508084771171
Epoch Step: 45 / 67 Loss (mean): 0.5697288651326744 Loss (std): 1.2692278555762424 Loss ratio: 2.2277752335414385 Tokens per Sec: 2921.9358649014066
Epoch Step: 50 / 67 Loss (mean): 0.1569762368890224 Loss (std): 0.6758495626763524 Loss ratio: 4.305425942616768 Tokens per Sec: 2686.6439103720495
Epoch Step: 55 / 67 Loss (mean): 0.14299051342413804 Loss (std): 0.3610852793166289 Loss ratio: 2.525239406935891 Tokens per Sec: 3331.8221883855686
Epoch Step: 60 / 67 Loss (mean): 2.298589484747936 Loss (std): 11.274462925040694 Loss ratio: 4.904948447668139 Tokens per Sec: 3343.792223494251
Epoch Step: 65 / 67 Loss (mean): 0.43806025697267614 Loss (std): 0.9696961230122582 Loss ratio: 2.2136135556180863 Tokens per Sec: 2453.86572447814
Mean loss per sample: 0.3647523933917201 Std loss per sample: 2.699738515432034 ratio: 7.401564909082563
Epoch ended with duration 0:00:11.427760
Train perplexity: 1.0505889321683846
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: use method_4 instead of sslengine[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add support for method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 120.77012878656387 Loss (std): 46.92138950925231 Loss ratio: 0.38851817068255445 Tokens per Sec: 4305.062333235785
Mean loss per sample: 107.09384387255203 Std loss per sample: 54.341518973808775 ratio: 0.5074196331815148
Epoch ended with duration 0:00:01.033004
b'BLEU = 2.56, 8.8/2.7/1.7/1.3 (BP=0.950, ratio=0.951, hyp_len=2961, ref_len=3113)\n'
Validation perplexity: 2008972.7436685686
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.56
Epoch 719 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5079214957613658 Loss (std): 0.8029024868149379 Loss ratio: 1.5807609906554567 Tokens per Sec: 2420.091797222155
Epoch Step: 10 / 67 Loss (mean): 0.14204183339370502 Loss (std): 0.4198418356787894 Loss ratio: 2.955761874145141 Tokens per Sec: 2729.6410932072395
Epoch Step: 15 / 67 Loss (mean): 0.1293665954071912 Loss (std): 0.3707289012477894 Loss ratio: 2.8657235670529317 Tokens per Sec: 2800.0364693118504
Epoch Step: 20 / 67 Loss (mean): 0.15343237150091227 Loss (std): 0.512358544094069 Loss ratio: 3.339311900624717 Tokens per Sec: 3089.0643263785214
Epoch Step: 25 / 67 Loss (mean): 0.21075559958990198 Loss (std): 0.45320943264719343 Loss ratio: 2.150402805567536 Tokens per Sec: 2825.338490482796
Epoch Step: 30 / 67 Loss (mean): 0.3665240821119369 Loss (std): 0.8112178016787469 Loss ratio: 2.213272855099873 Tokens per Sec: 2770.36424262762
Epoch Step: 35 / 67 Loss (mean): 0.1418202412948517 Loss (std): 0.29432952601006646 Loss ratio: 2.075370365490635 Tokens per Sec: 2606.3979717586367
Epoch Step: 40 / 67 Loss (mean): 0.09664880810487375 Loss (std): 0.1680185932963399 Loss ratio: 1.7384445456794737 Tokens per Sec: 2475.7267073036523
Epoch Step: 45 / 67 Loss (mean): 0.8961928421122138 Loss (std): 6.5266341724183805 Loss ratio: 7.282622517979417 Tokens per Sec: 2679.441353903433
Epoch Step: 50 / 67 Loss (mean): 1.0206256629935524 Loss (std): 4.599146934238378 Loss ratio: 4.506203499477783 Tokens per Sec: 2621.24373046378
Epoch Step: 55 / 67 Loss (mean): 0.17595291595353046 Loss (std): 0.4123035793601708 Loss ratio: 2.3432608497892757 Tokens per Sec: 2979.089731690156
Epoch Step: 60 / 67 Loss (mean): 0.2592757331458415 Loss (std): 0.983114634809784 Loss ratio: 3.7917726540832346 Tokens per Sec: 2731.9243510601796
Epoch Step: 65 / 67 Loss (mean): 0.1032937054562808 Loss (std): 0.21341980001303568 Loss ratio: 2.0661452609362136 Tokens per Sec: 2864.8771919468745
Mean loss per sample: 0.40340015337406004 Std loss per sample: 2.632762175436822 ratio: 6.526428295617295
Epoch ended with duration 0:00:11.490897
Train perplexity: 1.0560968822217687
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock to apache-sshd 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.39147520065308 Loss (std): 46.00139622771947 Loss ratio: 0.45822014404884664 Tokens per Sec: 4289.366063744805
Mean loss per sample: 108.54909970550264 Std loss per sample: 54.9724326737793 ratio: 0.5064291903196007
Epoch ended with duration 0:00:01.052599
b'BLEU = 2.60, 8.4/2.8/1.8/1.4 (BP=0.934, ratio=0.936, hyp_len=2915, ref_len=3113)\n'
Validation perplexity: 2446936.2947122334
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.6
Epoch 720 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.09834615666841273 Loss (std): 0.21524040643520606 Loss ratio: 2.1886000808442163 Tokens per Sec: 2589.1728560811234
Epoch Step: 10 / 67 Loss (mean): 0.12190960571979303 Loss (std): 0.23523933103339195 Loss ratio: 1.9296209650130867 Tokens per Sec: 2622.502570385087
Epoch Step: 15 / 67 Loss (mean): 0.0766439447168068 Loss (std): 0.1730773465829783 Loss ratio: 2.258199877661375 Tokens per Sec: 2629.9793120871054
Epoch Step: 20 / 67 Loss (mean): 0.10281307164041209 Loss (std): 0.16594858946738714 Loss ratio: 1.6140806496647724 Tokens per Sec: 3575.1678752479893
Epoch Step: 25 / 67 Loss (mean): 0.12047938774412614 Loss (std): 0.25988696711302345 Loss ratio: 2.1571073025783534 Tokens per Sec: 2467.8883663999477
Epoch Step: 30 / 67 Loss (mean): 0.09908742352308764 Loss (std): 0.2243798211628764 Loss ratio: 2.2644631698451145 Tokens per Sec: 2875.890449582076
Epoch Step: 35 / 67 Loss (mean): 0.07406700948195066 Loss (std): 0.12847171312848127 Loss ratio: 1.7345335531575423 Tokens per Sec: 3262.163923584348
Epoch Step: 40 / 67 Loss (mean): 0.20363438672211487 Loss (std): 0.48985486139549284 Loss ratio: 2.405560619110771 Tokens per Sec: 3028.077260715892
Epoch Step: 45 / 67 Loss (mean): 0.3565719327525585 Loss (std): 0.8773646205896116 Loss ratio: 2.460554351030357 Tokens per Sec: 2516.9993088024326
Epoch Step: 50 / 67 Loss (mean): 0.11636952165463299 Loss (std): 0.24995834654194457 Loss ratio: 2.147970903272962 Tokens per Sec: 2387.386344877902
Epoch Step: 55 / 67 Loss (mean): 0.21613252818224282 Loss (std): 0.5622186563188816 Loss ratio: 2.6012681249201837 Tokens per Sec: 2724.1090835770315
Epoch Step: 60 / 67 Loss (mean): 0.4962362033705858 Loss (std): 1.0192764219459922 Loss ratio: 2.054014630578663 Tokens per Sec: 3476.511748327573
Epoch Step: 65 / 67 Loss (mean): 0.2384137969402218 Loss (std): 0.7033623807979108 Loss ratio: 2.950174821360137 Tokens per Sec: 2247.435538909966
Mean loss per sample: 0.3521280662477411 Std loss per sample: 2.8027599829985195 ratio: 7.959490457164032
Epoch ended with duration 0:00:11.448374
Train perplexity: 1.0487959866524754
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings on engines ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.33366006612778 Loss (std): 45.26203468038543 Loss ratio: 0.45111515567710964 Tokens per Sec: 4414.423635581346
Mean loss per sample: 105.44256354086711 Std loss per sample: 54.91068578781392 ratio: 0.5207639490530008
Epoch ended with duration 0:00:01.021275
b'BLEU = 2.43, 8.6/2.6/1.7/1.4 (BP=0.907, ratio=0.911, hyp_len=2837, ref_len=3113)\n'
Validation perplexity: 1606158.7463880896
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.43
Model saved checkpoint_commit_msg_generator!
Epoch 721 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3381587694866539 Loss (std): 0.9212438047659519 Loss ratio: 2.7242936983845114 Tokens per Sec: 3238.064127770218
Epoch Step: 10 / 67 Loss (mean): 0.13378916862438928 Loss (std): 0.35796765070148284 Loss ratio: 2.6756100989495697 Tokens per Sec: 3139.583864603187
Epoch Step: 15 / 67 Loss (mean): 0.2858356728847866 Loss (std): 0.7632901926526525 Loss ratio: 2.6703811492427545 Tokens per Sec: 2618.7682991501224
Epoch Step: 20 / 67 Loss (mean): 0.25620841544696304 Loss (std): 0.7052358015220935 Loss ratio: 2.7525864062341165 Tokens per Sec: 2492.3942862915114
Epoch Step: 25 / 67 Loss (mean): 0.7643607237405377 Loss (std): 1.449609132111862 Loss ratio: 1.8964987172783254 Tokens per Sec: 3306.0021169692677
Epoch Step: 30 / 67 Loss (mean): 0.1331629567107484 Loss (std): 0.37861281063648433 Loss ratio: 2.8432292282221767 Tokens per Sec: 2471.7108835510776
Epoch Step: 35 / 67 Loss (mean): 0.5948463507920678 Loss (std): 3.298881325653556 Loss ratio: 5.545770468728487 Tokens per Sec: 2587.5440074257453
Epoch Step: 40 / 67 Loss (mean): 0.1477594603925354 Loss (std): 0.5271178347290923 Loss ratio: 3.567404979205796 Tokens per Sec: 2215.6527580018014
Epoch Step: 45 / 67 Loss (mean): 0.3987242474286177 Loss (std): 0.7306744191066797 Loss ratio: 1.8325306871072344 Tokens per Sec: 3129.8463439855605
Epoch Step: 50 / 67 Loss (mean): 0.5950729496025815 Loss (std): 4.3099164487005925 Loss ratio: 7.24266907373115 Tokens per Sec: 2761.361111845651
Epoch Step: 55 / 67 Loss (mean): 0.6217503152784047 Loss (std): 2.820807768698057 Loss ratio: 4.536881927329571 Tokens per Sec: 2453.8009746662647
Epoch Step: 60 / 67 Loss (mean): 0.24411984383732488 Loss (std): 0.5559299017410839 Loss ratio: 2.2772827190219784 Tokens per Sec: 2904.8686090541587
Epoch Step: 65 / 67 Loss (mean): 0.2517685526599962 Loss (std): 0.5905170343399436 Loss ratio: 2.345475747868378 Tokens per Sec: 3062.486142384323
Mean loss per sample: 0.3130435675333219 Std loss per sample: 1.8425358832909078 ratio: 5.8858768375580155
Epoch ended with duration 0:00:11.436810
Train perplexity: 1.0432644645964981
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings on new call ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.63764324784279 Loss (std): 45.52952638441796 Loss ratio: 0.4524104988457578 Tokens per Sec: 4341.28517193432
Mean loss per sample: 107.2072454254891 Std loss per sample: 55.25102611468877 ratio: 0.5153665304560893
Epoch ended with duration 0:00:01.048979
b'BLEU = 2.52, 8.3/2.8/1.7/1.4 (BP=0.916, ratio=0.919, hyp_len=2862, ref_len=3113)\n'
Validation perplexity: 2040084.9726809561
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.52
Epoch 722 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1271515311091207 Loss (std): 0.33927741816128565 Loss ratio: 2.668292038655199 Tokens per Sec: 2978.7722870608577
Epoch Step: 10 / 67 Loss (mean): 0.3514396467944607 Loss (std): 0.8973267834027617 Loss ratio: 2.5532884282903994 Tokens per Sec: 2931.8764769703284
Epoch Step: 15 / 67 Loss (mean): 0.11122099487238302 Loss (std): 0.3036196016263689 Loss ratio: 2.729876692568229 Tokens per Sec: 2258.9908928484683
Epoch Step: 20 / 67 Loss (mean): 0.2040811097963342 Loss (std): 0.6512930974342984 Loss ratio: 3.1913443536457935 Tokens per Sec: 2671.0099759368118
Epoch Step: 25 / 67 Loss (mean): 0.04595954166006777 Loss (std): 0.08650075719200556 Loss ratio: 1.8821066108925597 Tokens per Sec: 2980.851920386987
Epoch Step: 30 / 67 Loss (mean): 0.20285987780425785 Loss (std): 0.6317636234687904 Loss ratio: 3.1142857341084835 Tokens per Sec: 2946.0003354311275
Epoch Step: 35 / 67 Loss (mean): 0.2663392647264118 Loss (std): 0.5726012399378309 Loss ratio: 2.1498941980110087 Tokens per Sec: 2561.6314980997367
Epoch Step: 40 / 67 Loss (mean): 0.07927759743142815 Loss (std): 0.2035708867406948 Loss ratio: 2.5678236139380384 Tokens per Sec: 3169.0617859108147
Epoch Step: 45 / 67 Loss (mean): 0.1178932185875965 Loss (std): 0.23465040171092708 Loss ratio: 1.9903638608066179 Tokens per Sec: 2853.206920028315
Epoch Step: 50 / 67 Loss (mean): 0.1760882543912885 Loss (std): 0.839863957104089 Loss ratio: 4.769562626464648 Tokens per Sec: 2294.1690665917677
Epoch Step: 55 / 67 Loss (mean): 0.3970266177711892 Loss (std): 0.7972569965688996 Loss ratio: 2.0080693859885423 Tokens per Sec: 3157.102613191015
Epoch Step: 60 / 67 Loss (mean): 0.29858580118161626 Loss (std): 0.633663735151637 Loss ratio: 2.1222165710626273 Tokens per Sec: 2936.559254300916
Epoch Step: 65 / 67 Loss (mean): 0.2939769595377584 Loss (std): 0.9901691579395332 Loss ratio: 3.368186267034155 Tokens per Sec: 2423.462568657891
Mean loss per sample: 0.35584787275673097 Std loss per sample: 2.496515709200693 ratio: 7.015682543948748
Epoch ended with duration 0:00:11.420565
Train perplexity: 1.049323966734987
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the exception method_1 ( zip , )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.28369575738907 Loss (std): 45.59868268879417 Loss ratio: 0.45469687115549273 Tokens per Sec: 4267.623015966126
Mean loss per sample: 107.73087910788713 Std loss per sample: 54.51284041534808 ratio: 0.5060094270720299
Epoch ended with duration 0:00:01.041843
b'BLEU = 2.30, 8.2/2.5/1.5/1.1 (BP=0.947, ratio=0.949, hyp_len=2953, ref_len=3113)\n'
Validation perplexity: 2190113.1373695824
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.3
Epoch 723 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.14455930457802424 Loss (std): 0.517124661420338 Loss ratio: 3.5772492329694754 Tokens per Sec: 2255.680404954932
Epoch Step: 10 / 67 Loss (mean): 0.1187718140238303 Loss (std): 0.5268080747182178 Loss ratio: 4.4354637423700485 Tokens per Sec: 2903.947267934761
Epoch Step: 15 / 67 Loss (mean): 0.15976739408961294 Loss (std): 0.38324880745718554 Loss ratio: 2.3987923796405086 Tokens per Sec: 2496.2592743020823
Epoch Step: 20 / 67 Loss (mean): 0.14025699590638396 Loss (std): 0.4222647020232461 Loss ratio: 3.01064983813778 Tokens per Sec: 3174.4103486015547
Epoch Step: 25 / 67 Loss (mean): 0.6416787658299654 Loss (std): 1.9643939764761638 Loss ratio: 3.061335486043957 Tokens per Sec: 2627.7748142844357
Epoch Step: 30 / 67 Loss (mean): 0.1522804092392107 Loss (std): 0.4273132140648745 Loss ratio: 2.8060944687482854 Tokens per Sec: 2833.493665654655
Epoch Step: 35 / 67 Loss (mean): 0.10970348650516826 Loss (std): 0.25199144299937065 Loss ratio: 2.2970231031581574 Tokens per Sec: 2758.711010016378
Epoch Step: 40 / 67 Loss (mean): 0.09100102549928124 Loss (std): 0.1757890037668701 Loss ratio: 1.9317255250959622 Tokens per Sec: 3045.991832063434
Epoch Step: 45 / 67 Loss (mean): 0.26170563096366095 Loss (std): 0.7003947586181093 Loss ratio: 2.6762693490357585 Tokens per Sec: 2880.2327048042284
Epoch Step: 50 / 67 Loss (mean): 0.1855161683233746 Loss (std): 0.5737380253931501 Loss ratio: 3.0926578021655944 Tokens per Sec: 3053.6261426706583
Epoch Step: 55 / 67 Loss (mean): 0.1894074433539572 Loss (std): 0.4798083859070722 Loss ratio: 2.533207657580938 Tokens per Sec: 2501.4713561637404
Epoch Step: 60 / 67 Loss (mean): 0.08942192425638495 Loss (std): 0.16882805201625653 Loss ratio: 1.8879939502554572 Tokens per Sec: 2470.563124782775
Epoch Step: 65 / 67 Loss (mean): 0.33323410164302913 Loss (std): 0.8552847063863 Loss ratio: 2.5666181887426034 Tokens per Sec: 2907.1604965778943
Mean loss per sample: 0.30516845107462787 Std loss per sample: 1.8928039796311018 ratio: 6.202489061256936
Epoch ended with duration 0:00:11.452326
Train perplexity: 1.0421534572516824
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the exception method_1 ( zip , )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.25374263525009 Loss (std): 46.022316351838995 Loss ratio: 0.4590583367972653 Tokens per Sec: 4272.47324209307
Mean loss per sample: 106.17815448710176 Std loss per sample: 55.39964317016952 ratio: 0.5217612176231535
Epoch ended with duration 0:00:01.034699
b'BLEU = 2.32, 8.3/2.6/1.6/1.2 (BP=0.896, ratio=0.901, hyp_len=2805, ref_len=3113)\n'
Validation perplexity: 1774522.203124098
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.32
Epoch 724 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.20318006552128054 Loss (std): 0.5937737630796549 Loss ratio: 2.922401671425116 Tokens per Sec: 2638.9338081818983
Epoch Step: 10 / 67 Loss (mean): 0.19882537580269855 Loss (std): 0.4220567753196769 Loss ratio: 2.1227510503412743 Tokens per Sec: 2765.2060683840323
Epoch Step: 15 / 67 Loss (mean): 0.6620521156473842 Loss (std): 1.2221624847988062 Loss ratio: 1.846021568262373 Tokens per Sec: 2918.1907694868205
Epoch Step: 20 / 67 Loss (mean): 0.8565785240298283 Loss (std): 2.6420969134099344 Loss ratio: 3.084477183691252 Tokens per Sec: 2456.855191022367
Epoch Step: 25 / 67 Loss (mean): 0.2505460279867293 Loss (std): 0.5130531856445683 Loss ratio: 2.0477402486370417 Tokens per Sec: 2770.3077264916915
Epoch Step: 30 / 67 Loss (mean): 0.16591004944211818 Loss (std): 0.44422934229347893 Loss ratio: 2.677531251345081 Tokens per Sec: 2376.456954149131
Epoch Step: 35 / 67 Loss (mean): 0.07255118248758663 Loss (std): 0.1684954408140604 Loss ratio: 2.322435486739167 Tokens per Sec: 2703.8750917408356
Epoch Step: 40 / 67 Loss (mean): 0.13969963668341734 Loss (std): 0.32031746502507713 Loss ratio: 2.2929012031074203 Tokens per Sec: 2353.6685303133445
Epoch Step: 45 / 67 Loss (mean): 0.12224091824737116 Loss (std): 0.26699458858633746 Loss ratio: 2.1841670728130294 Tokens per Sec: 3423.7798695816678
Epoch Step: 50 / 67 Loss (mean): 1.9764642384961917 Loss (std): 7.6263127685804255 Loss ratio: 3.8585634994250975 Tokens per Sec: 3075.0299085261545
Epoch Step: 55 / 67 Loss (mean): 0.2589655400342963 Loss (std): 0.5972704195464401 Loss ratio: 2.306370258634953 Tokens per Sec: 2591.9790018167505
Epoch Step: 60 / 67 Loss (mean): 3.949216763518052 Loss (std): 11.93744023942875 Loss ratio: 3.0227361409239553 Tokens per Sec: 3053.7400108789825
Epoch Step: 65 / 67 Loss (mean): 0.1155070237655309 Loss (std): 0.31190860643169677 Loss ratio: 2.7003432022007927 Tokens per Sec: 3307.964184643934
Mean loss per sample: 0.37922032046250187 Std loss per sample: 2.5824731910140737 ratio: 6.809954666628774
Epoch ended with duration 0:00:11.460667
Train perplexity: 1.0526474808837485
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the time unit ( ) , and hint ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog method_1 provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.31925964355469 Loss (std): 45.160183878339 Loss ratio: 0.4546971457541434 Tokens per Sec: 4412.918307711853
Mean loss per sample: 106.21470126518064 Std loss per sample: 54.300539098242005 ratio: 0.5112337412000314
Epoch ended with duration 0:00:01.034207
b'BLEU = 2.27, 7.9/2.6/1.5/1.2 (BP=0.918, ratio=0.922, hyp_len=2869, ref_len=3113)\n'
Validation perplexity: 1783332.7558143523
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.27
Epoch 725 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.9932357605093785 Loss (std): 9.85861542934273 Loss ratio: 4.9460358000115985 Tokens per Sec: 2656.5260001810407
Epoch Step: 10 / 67 Loss (mean): 0.8871982133387064 Loss (std): 1.6264815042271241 Loss ratio: 1.8332786064867568 Tokens per Sec: 2802.7439493165894
Epoch Step: 15 / 67 Loss (mean): 0.39959301679800774 Loss (std): 0.9389564054916482 Loss ratio: 2.3497818180498533 Tokens per Sec: 3004.518571464673
Epoch Step: 20 / 67 Loss (mean): 0.10341281591900042 Loss (std): 0.2471990264342603 Loss ratio: 2.390409972279282 Tokens per Sec: 2702.3691622509878
Epoch Step: 25 / 67 Loss (mean): 0.34556429283111356 Loss (std): 0.8059622872064299 Loss ratio: 2.332307775793042 Tokens per Sec: 2990.925295613951
Epoch Step: 30 / 67 Loss (mean): 0.13635558926944213 Loss (std): 0.4332372954575533 Loss ratio: 3.1772609966245335 Tokens per Sec: 2558.4748830486983
Epoch Step: 35 / 67 Loss (mean): 0.2660505165531504 Loss (std): 1.3535320332590703 Loss ratio: 5.087500113869043 Tokens per Sec: 2226.660829628462
Epoch Step: 40 / 67 Loss (mean): 0.13500972003566858 Loss (std): 0.2808591754286331 Loss ratio: 2.0802885551827837 Tokens per Sec: 2789.8259217027744
Epoch Step: 45 / 67 Loss (mean): 0.19499320458635339 Loss (std): 0.5031872267824955 Loss ratio: 2.5805372441051264 Tokens per Sec: 2778.0817384189772
Epoch Step: 50 / 67 Loss (mean): 0.1751952186041308 Loss (std): 0.41641344894064514 Loss ratio: 2.376853959020243 Tokens per Sec: 2594.0045708547727
Epoch Step: 55 / 67 Loss (mean): 0.12236905800000386 Loss (std): 0.3108620787425165 Loss ratio: 2.5403650548859065 Tokens per Sec: 3073.101413081238
Epoch Step: 60 / 67 Loss (mean): 0.061152268683404794 Loss (std): 0.1796022625247471 Loss ratio: 2.936968102599384 Tokens per Sec: 2863.0044154320435
Epoch Step: 65 / 67 Loss (mean): 0.3641521373829164 Loss (std): 0.8786840177680552 Loss ratio: 2.412958561998206 Tokens per Sec: 2578.39056257778
Mean loss per sample: 0.49809109849748234 Std loss per sample: 3.3367851021333403 ratio: 6.699146224855103
Epoch ended with duration 0:00:11.510550
Train perplexity: 1.0697142785797145
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock to apache-sshd 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.39426872134209 Loss (std): 44.45913332841624 Loss ratio: 0.4473007739818494 Tokens per Sec: 4417.915349841274
Mean loss per sample: 106.25354142871029 Std loss per sample: 53.34178395560835 ratio: 0.50202358658697
Epoch ended with duration 0:00:01.041943
b'BLEU = 2.55, 8.1/2.8/1.8/1.3 (BP=0.940, ratio=0.942, hyp_len=2931, ref_len=3113)\n'
Validation perplexity: 1792744.142141702
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.55
Model saved checkpoint_commit_msg_generator!
Epoch 726 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.24021337584963476 Loss (std): 0.8454113113654658 Loss ratio: 3.5194181355440586 Tokens per Sec: 3254.926245264338
Epoch Step: 10 / 67 Loss (mean): 0.11245282700292591 Loss (std): 0.24914301071501388 Loss ratio: 2.2155335473116335 Tokens per Sec: 2727.654654110532
Epoch Step: 15 / 67 Loss (mean): 0.25518051022481814 Loss (std): 0.7516734896018805 Loss ratio: 2.9456539958308103 Tokens per Sec: 2623.4549454988705
Epoch Step: 20 / 67 Loss (mean): 0.29475741292208113 Loss (std): 1.7885018777451145 Loss ratio: 6.067707882270983 Tokens per Sec: 2546.6182941979046
Epoch Step: 25 / 67 Loss (mean): 0.13828507278412872 Loss (std): 0.37348925873301075 Loss ratio: 2.700864606811538 Tokens per Sec: 2642.9944553773453
Epoch Step: 30 / 67 Loss (mean): 0.7537379310415417 Loss (std): 1.318861258732375 Loss ratio: 1.7497610302163322 Tokens per Sec: 3096.9288690889966
Epoch Step: 35 / 67 Loss (mean): 0.2664381523482007 Loss (std): 0.7078509929470191 Loss ratio: 2.656717841302053 Tokens per Sec: 2469.827227169023
Epoch Step: 40 / 67 Loss (mean): 0.230662386820768 Loss (std): 0.6748288248542629 Loss ratio: 2.925612771789387 Tokens per Sec: 2716.4230158544196
Epoch Step: 45 / 67 Loss (mean): 0.20033612223051023 Loss (std): 0.5234428482060007 Loss ratio: 2.6128231013861707 Tokens per Sec: 2523.5317144381847
Epoch Step: 50 / 67 Loss (mean): 0.12649484589974236 Loss (std): 0.2989930128662929 Loss ratio: 2.363677434757062 Tokens per Sec: 2634.7628035812036
Epoch Step: 55 / 67 Loss (mean): 0.10071579650511489 Loss (std): 0.24278968820318847 Loss ratio: 2.4106415937529553 Tokens per Sec: 2942.4566074310956
Epoch Step: 60 / 67 Loss (mean): 0.41506471138609413 Loss (std): 1.178150787439538 Loss ratio: 2.8384749537129874 Tokens per Sec: 2675.924611099207
Epoch Step: 65 / 67 Loss (mean): 0.14500103805221443 Loss (std): 0.44346691237949765 Loss ratio: 3.0583706043525467 Tokens per Sec: 2546.1058337382
Mean loss per sample: 0.4477369249300135 Std loss per sample: 3.289611279979593 ratio: 7.347196750622696
Epoch ended with duration 0:00:11.533602
Train perplexity: 1.0624511859650516
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to exception[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 121.15123668313026 Loss (std): 50.228162054680666 Loss ratio: 0.41459058470902677 Tokens per Sec: 4262.159000950137
Mean loss per sample: 106.99439915834513 Std loss per sample: 54.486407874479355 ratio: 0.5092454212845555
Epoch ended with duration 0:00:01.041889
b'BLEU = 2.58, 8.2/2.8/1.9/1.5 (BP=0.918, ratio=0.921, hyp_len=2867, ref_len=3113)\n'
Validation perplexity: 1982080.3573023942
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.58
Epoch 727 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.31536112225694524 Loss (std): 0.8160412826070819 Loss ratio: 2.5876407236469685 Tokens per Sec: 2755.4734716085486
Epoch Step: 10 / 67 Loss (mean): 0.47102076501278134 Loss (std): 1.9409915638167103 Loss ratio: 4.120819522179751 Tokens per Sec: 2529.95260020755
Epoch Step: 15 / 67 Loss (mean): 0.12390964602559507 Loss (std): 0.2991871770258513 Loss ratio: 2.4145592100557733 Tokens per Sec: 2973.175028656361
Epoch Step: 20 / 67 Loss (mean): 0.4509337029649032 Loss (std): 1.058426172401113 Loss ratio: 2.347187991143549 Tokens per Sec: 3069.787884392154
Epoch Step: 25 / 67 Loss (mean): 0.2719887804505561 Loss (std): 0.7721757887405217 Loss ratio: 2.8389986802448015 Tokens per Sec: 2208.6525034511214
Epoch Step: 30 / 67 Loss (mean): 0.34560119112211396 Loss (std): 0.6776390026793003 Loss ratio: 1.9607542453170101 Tokens per Sec: 2862.3132030677607
Epoch Step: 35 / 67 Loss (mean): 0.44833766922306495 Loss (std): 1.1902335431687678 Loss ratio: 2.6547703324401715 Tokens per Sec: 2238.0495341846804
Epoch Step: 40 / 67 Loss (mean): 0.1147965402706177 Loss (std): 0.36003890907301106 Loss ratio: 3.136321950332883 Tokens per Sec: 2826.7072467812036
Epoch Step: 45 / 67 Loss (mean): 0.2715999041156465 Loss (std): 0.7777098055569713 Loss ratio: 2.863439175684777 Tokens per Sec: 2933.026479805009
Epoch Step: 50 / 67 Loss (mean): 0.1579374406946954 Loss (std): 0.34599448718001463 Loss ratio: 2.190705925448338 Tokens per Sec: 2806.1907902860416
Epoch Step: 55 / 67 Loss (mean): 0.47393571806969703 Loss (std): 1.7476978039647526 Loss ratio: 3.6876262694084097 Tokens per Sec: 2800.049123774215
Epoch Step: 60 / 67 Loss (mean): 0.22147892090788446 Loss (std): 0.41067948872129945 Loss ratio: 1.8542599315449328 Tokens per Sec: 2743.0386515481323
Epoch Step: 65 / 67 Loss (mean): 0.24876764302916854 Loss (std): 0.47592307310512916 Loss ratio: 1.9131228937572327 Tokens per Sec: 3421.8303505355143
Mean loss per sample: 0.44680881286988144 Std loss per sample: 2.6721335989715467 ratio: 5.980485438074201
Epoch ended with duration 0:00:11.504179
Train perplexity: 1.062317778843288
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire 0 length and[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog zoneinfo provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.04236277937889 Loss (std): 45.55096150845241 Loss ratio: 0.45531673026260777 Tokens per Sec: 4276.14054466272
Mean loss per sample: 105.71699120844791 Std loss per sample: 53.54115313216779 ratio: 0.5064574059490381
Epoch ended with duration 0:00:01.043378
b'BLEU = 2.45, 7.9/2.6/1.8/1.4 (BP=0.904, ratio=0.909, hyp_len=2829, ref_len=3113)\n'
Validation perplexity: 1667016.1985053222
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.45
Epoch 728 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.19398551220365334 Loss (std): 0.4593815514822913 Loss ratio: 2.368122991576892 Tokens per Sec: 2627.2636998141697
Epoch Step: 10 / 67 Loss (mean): 0.08080636120472004 Loss (std): 0.24190944191766695 Loss ratio: 2.993693049793419 Tokens per Sec: 2139.9202999291556
Epoch Step: 15 / 67 Loss (mean): 0.34349701926294074 Loss (std): 0.9670315275461274 Loss ratio: 2.8152544951369207 Tokens per Sec: 2326.5840264714384
Epoch Step: 20 / 67 Loss (mean): 0.12953541190290707 Loss (std): 0.24302661173772935 Loss ratio: 1.8761403400630656 Tokens per Sec: 3590.472648088081
Epoch Step: 25 / 67 Loss (mean): 0.33382761187931465 Loss (std): 0.6275731381032025 Loss ratio: 1.8799317844627026 Tokens per Sec: 3040.4923269667693
Epoch Step: 30 / 67 Loss (mean): 0.3505476976315549 Loss (std): 0.9991064504927611 Loss ratio: 2.8501298318121533 Tokens per Sec: 2618.095159688887
Epoch Step: 35 / 67 Loss (mean): 0.17683028019155245 Loss (std): 0.47987837025508984 Loss ratio: 2.7137793919415767 Tokens per Sec: 2476.238019688619
Epoch Step: 40 / 67 Loss (mean): 0.09288720807762729 Loss (std): 0.19046350382769925 Loss ratio: 2.0504815223698607 Tokens per Sec: 3410.801167388501
Epoch Step: 45 / 67 Loss (mean): 0.08921285051656014 Loss (std): 0.19129081339656245 Loss ratio: 2.144206942037505 Tokens per Sec: 2756.8318416342004
Epoch Step: 50 / 67 Loss (mean): 0.35914854955262854 Loss (std): 0.7547143269912087 Loss ratio: 2.1013987886943006 Tokens per Sec: 2682.616056985902
Epoch Step: 55 / 67 Loss (mean): 0.10487683720566565 Loss (std): 0.22157119474115555 Loss ratio: 2.112679983919136 Tokens per Sec: 3165.4700797605337
Epoch Step: 60 / 67 Loss (mean): 0.33134235763850484 Loss (std): 1.187617248978992 Loss ratio: 3.5842602721946126 Tokens per Sec: 3162.4758192604118
Epoch Step: 65 / 67 Loss (mean): 0.17571324572418234 Loss (std): 0.6413091188988918 Loss ratio: 3.6497482944772233 Tokens per Sec: 2378.729360199576
Mean loss per sample: 0.34915711745453876 Std loss per sample: 2.098908061582176 ratio: 6.011356941207019
Epoch ended with duration 0:00:11.482418
Train perplexity: 1.0483744883982644
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire variable[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.67947977781296 Loss (std): 45.632181676735804 Loss ratio: 0.4532421281619684 Tokens per Sec: 4265.932312531504
Mean loss per sample: 108.41209999893289 Std loss per sample: 54.235970427046915 ratio: 0.5002759878978524
Epoch ended with duration 0:00:01.055786
b'BLEU = 2.83, 8.8/2.9/1.9/1.5 (BP=0.963, ratio=0.963, hyp_len=2999, ref_len=3113)\n'
Validation perplexity: 2401925.808867647
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.83
Epoch 729 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.08617046622657654 Loss (std): 0.22354735268329176 Loss ratio: 2.594245597969687 Tokens per Sec: 2570.1940672957726
Epoch Step: 10 / 67 Loss (mean): 0.1549529807834915 Loss (std): 0.5378945626481793 Loss ratio: 3.4713405313561148 Tokens per Sec: 3085.059801414886
Epoch Step: 15 / 67 Loss (mean): 0.24007521449311753 Loss (std): 0.4177765214175501 Loss ratio: 1.7401901412422853 Tokens per Sec: 2688.1122991740567
Epoch Step: 20 / 67 Loss (mean): 1.641829489488373 Loss (std): 6.708142357790659 Loss ratio: 4.085772853234017 Tokens per Sec: 3014.3377943715545
Epoch Step: 25 / 67 Loss (mean): 0.1767969195520891 Loss (std): 0.7133156385530321 Loss ratio: 4.034661013100233 Tokens per Sec: 3136.2572936263477
Epoch Step: 30 / 67 Loss (mean): 0.3205529580463917 Loss (std): 0.732218563401719 Loss ratio: 2.2842358650009693 Tokens per Sec: 2686.936951510362
Epoch Step: 35 / 67 Loss (mean): 0.056803667618623876 Loss (std): 0.07474425974698728 Loss ratio: 1.3158351015081522 Tokens per Sec: 2244.93961705284
Epoch Step: 40 / 67 Loss (mean): 0.07803722058361018 Loss (std): 0.14418149172040248 Loss ratio: 1.8475990129085185 Tokens per Sec: 2415.601624929295
Epoch Step: 45 / 67 Loss (mean): 1.0085837141543834 Loss (std): 1.5787626789937068 Loss ratio: 1.5653263649189226 Tokens per Sec: 3605.425499651884
Epoch Step: 50 / 67 Loss (mean): 0.1221272635866626 Loss (std): 0.2698902231628484 Loss ratio: 2.2099096895864854 Tokens per Sec: 2635.754170491138
Epoch Step: 55 / 67 Loss (mean): 0.09216249950168276 Loss (std): 0.23020780899846052 Loss ratio: 2.497846849241076 Tokens per Sec: 3150.539972952426
Epoch Step: 60 / 67 Loss (mean): 0.6566664714064245 Loss (std): 1.1568219072217887 Loss ratio: 1.7616582505638658 Tokens per Sec: 2572.8134476435243
Epoch Step: 65 / 67 Loss (mean): 1.3682781185475505 Loss (std): 5.979844175123169 Loss ratio: 4.370342618261608 Tokens per Sec: 2653.9846723791748
Mean loss per sample: 0.3652455301460038 Std loss per sample: 2.3080958073835802 ratio: 6.319299257299435
Epoch ended with duration 0:00:11.480422
Train perplexity: 1.0506590311263986
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire 0 length and[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.64885354042053 Loss (std): 45.895954160155235 Loss ratio: 0.460576840871917 Tokens per Sec: 4309.311111771646
Mean loss per sample: 103.46722103487394 Std loss per sample: 53.675344516703994 ratio: 0.5187666584629016
Epoch ended with duration 0:00:01.038724
b'BLEU = 2.21, 7.8/2.5/1.5/1.1 (BP=0.936, ratio=0.938, hyp_len=2921, ref_len=3113)\n'
Validation perplexity: 1228938.9627261376
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.21
Epoch 730 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1156364415128337 Loss (std): 0.21051220074621882 Loss ratio: 1.82046591880688 Tokens per Sec: 2183.008323050459
Epoch Step: 10 / 67 Loss (mean): 0.4585451294806262 Loss (std): 0.8383123535562199 Loss ratio: 1.8282003224104446 Tokens per Sec: 2914.443166574219
Epoch Step: 15 / 67 Loss (mean): 0.19803770108774188 Loss (std): 0.525020674518562 Loss ratio: 2.651114770747355 Tokens per Sec: 3196.373071038646
Epoch Step: 20 / 67 Loss (mean): 0.43680587008384464 Loss (std): 0.8040687059178234 Loss ratio: 1.8407918963256673 Tokens per Sec: 3039.2272462400715
Epoch Step: 25 / 67 Loss (mean): 0.7606535117051862 Loss (std): 2.5763445664527285 Loss ratio: 3.3870146220415625 Tokens per Sec: 2354.216519210423
Epoch Step: 30 / 67 Loss (mean): 0.35886100951938715 Loss (std): 0.9061810949821149 Loss ratio: 2.5251589639000867 Tokens per Sec: 3034.365081770695
Epoch Step: 35 / 67 Loss (mean): 0.0988504336328333 Loss (std): 0.17351033987115025 Loss ratio: 1.7552815247693416 Tokens per Sec: 2754.4097949699117
Epoch Step: 40 / 67 Loss (mean): 0.12394510934882419 Loss (std): 0.27553890313642565 Loss ratio: 2.223072008117435 Tokens per Sec: 2755.641309665196
Epoch Step: 45 / 67 Loss (mean): 0.07088794162268641 Loss (std): 0.16417175536155235 Loss ratio: 2.315933452199607 Tokens per Sec: 3029.9217341889807
Epoch Step: 50 / 67 Loss (mean): 0.4701274867156826 Loss (std): 1.080922052947189 Loss ratio: 2.299210498195981 Tokens per Sec: 3405.997602166698
Epoch Step: 55 / 67 Loss (mean): 0.18390191972048342 Loss (std): 0.5999855062802136 Loss ratio: 3.2625298702272647 Tokens per Sec: 2363.606851859759
Epoch Step: 60 / 67 Loss (mean): 0.3538534492154213 Loss (std): 0.9183624015061072 Loss ratio: 2.595318495671976 Tokens per Sec: 2420.1530968191123
Epoch Step: 65 / 67 Loss (mean): 0.17105893075085987 Loss (std): 0.40752061867271455 Loss ratio: 2.3823405003405007 Tokens per Sec: 2895.4627359478227
Mean loss per sample: 0.3923015344040737 Std loss per sample: 2.7973962804793615 ratio: 7.130729898185972
Epoch ended with duration 0:00:11.399047
Train perplexity: 1.0545121950347218
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire 0 test[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.26681140065193 Loss (std): 45.994532632330056 Loss ratio: 0.45872140531668487 Tokens per Sec: 4422.958922086111
Mean loss per sample: 104.52038035535666 Std loss per sample: 54.458859659298476 ratio: 0.5210357967904913
Epoch ended with duration 0:00:01.022240
b'BLEU = 2.63, 8.3/2.9/1.9/1.5 (BP=0.921, ratio=0.924, hyp_len=2877, ref_len=3113)\n'
Validation perplexity: 1417469.3261187833
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.63
Model saved checkpoint_commit_msg_generator!
Epoch 731 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5396956785152724 Loss (std): 1.0081193909434323 Loss ratio: 1.867940454362753 Tokens per Sec: 3371.230264147095
Epoch Step: 10 / 67 Loss (mean): 0.22429044061391323 Loss (std): 0.663948019882874 Loss ratio: 2.96021541562609 Tokens per Sec: 2943.7311739340803
Epoch Step: 15 / 67 Loss (mean): 0.13128835135694317 Loss (std): 0.2950548467234815 Loss ratio: 2.2473802410793815 Tokens per Sec: 2656.8211183914223
Epoch Step: 20 / 67 Loss (mean): 0.4053908898822556 Loss (std): 0.8369348723463308 Loss ratio: 2.064513271596744 Tokens per Sec: 2722.106597083452
Epoch Step: 25 / 67 Loss (mean): 0.2682626156902188 Loss (std): 1.4091444454131161 Loss ratio: 5.252854341211493 Tokens per Sec: 2824.88383226222
Epoch Step: 30 / 67 Loss (mean): 0.37809863295024115 Loss (std): 0.9549870180350204 Loss ratio: 2.5257616262280944 Tokens per Sec: 2522.667582185663
Epoch Step: 35 / 67 Loss (mean): 0.15964842198809492 Loss (std): 0.46574170329729164 Loss ratio: 2.9172960026627903 Tokens per Sec: 2624.6144343140045
Epoch Step: 40 / 67 Loss (mean): 0.23147562596386706 Loss (std): 0.7963817011136689 Loss ratio: 3.4404559780215593 Tokens per Sec: 2657.82511743467
Epoch Step: 45 / 67 Loss (mean): 0.6146017942061235 Loss (std): 1.8574809983196845 Loss ratio: 3.0222511808950685 Tokens per Sec: 2987.603741358466
Epoch Step: 50 / 67 Loss (mean): 0.28705862619790423 Loss (std): 0.757180670388976 Loss ratio: 2.637721361722674 Tokens per Sec: 2506.131543402913
Epoch Step: 55 / 67 Loss (mean): 0.3306381556931228 Loss (std): 0.7479663052963553 Loss ratio: 2.2621899270166805 Tokens per Sec: 2602.4481211945067
Epoch Step: 60 / 67 Loss (mean): 2.1436307562162256 Loss (std): 7.074456805943252 Loss ratio: 3.300221731484459 Tokens per Sec: 2368.241130071646
Epoch Step: 65 / 67 Loss (mean): 0.36065622811656795 Loss (std): 0.7006864825308552 Loss ratio: 1.9428098779549867 Tokens per Sec: 3543.6531874905236
Mean loss per sample: 0.4336919974315409 Std loss per sample: 2.7828548952589185 ratio: 6.416661851590188
Epoch ended with duration 0:00:11.476381
Train perplexity: 1.060434153940416
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow exception in method_1 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.07170295715332 Loss (std): 45.19064336571348 Loss ratio: 0.4561407749825154 Tokens per Sec: 4176.82961597142
Mean loss per sample: 106.83152863951247 Std loss per sample: 53.78320138999859 ratio: 0.5034394066519652
Epoch ended with duration 0:00:01.051918
b'BLEU = 2.90, 9.0/3.2/2.2/1.7 (BP=0.906, ratio=0.910, hyp_len=2834, ref_len=3113)\n'
Validation perplexity: 1938811.4022164964
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.9
Epoch 732 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.21429100564637338 Loss (std): 0.6326247334477911 Loss ratio: 2.952175857962789 Tokens per Sec: 2790.193627216669
Epoch Step: 10 / 67 Loss (mean): 0.2135297589043148 Loss (std): 0.585047466411274 Loss ratio: 2.739887261678784 Tokens per Sec: 2862.113493590014
Epoch Step: 15 / 67 Loss (mean): 0.7852733913759948 Loss (std): 1.7420525683777945 Loss ratio: 2.2184026448741423 Tokens per Sec: 2222.017011507785
Epoch Step: 20 / 67 Loss (mean): 0.09594564035160147 Loss (std): 0.24492602472239514 Loss ratio: 2.5527582475330988 Tokens per Sec: 2786.4521017245474
Epoch Step: 25 / 67 Loss (mean): 0.21204139159726765 Loss (std): 0.45328897294780585 Loss ratio: 2.1377381535428808 Tokens per Sec: 2568.2224142756754
Epoch Step: 30 / 67 Loss (mean): 4.54511148183974 Loss (std): 15.182816663935586 Loss ratio: 3.340471784817473 Tokens per Sec: 2829.6827581278867
Epoch Step: 35 / 67 Loss (mean): 0.2132139838090552 Loss (std): 0.46846568170774294 Loss ratio: 2.197162087301364 Tokens per Sec: 3368.4287772210364
Epoch Step: 40 / 67 Loss (mean): 0.1150301767684141 Loss (std): 0.23075840736182981 Loss ratio: 2.006068440861453 Tokens per Sec: 2498.0383683003206
Epoch Step: 45 / 67 Loss (mean): 0.4779313910075871 Loss (std): 0.9870116677933752 Loss ratio: 2.065174387713961 Tokens per Sec: 3027.5637103429744
Epoch Step: 50 / 67 Loss (mean): 1.0573803296117603 Loss (std): 4.148949127886502 Loss ratio: 3.9238001802150766 Tokens per Sec: 2784.8205988758364
Epoch Step: 55 / 67 Loss (mean): 0.2102406532067107 Loss (std): 0.7284836054185666 Loss ratio: 3.4649987731074745 Tokens per Sec: 2625.8983411796603
Epoch Step: 60 / 67 Loss (mean): 0.8484057562600356 Loss (std): 1.4109644223903512 Loss ratio: 1.6630773801090195 Tokens per Sec: 3055.9671073784307
Epoch Step: 65 / 67 Loss (mean): 0.1377036367302935 Loss (std): 0.23950822381134 Loss ratio: 1.739302094689344 Tokens per Sec: 2561.907924515699
Mean loss per sample: 0.5502506097155392 Std loss per sample: 3.898440543216186 ratio: 7.084845476557576
Epoch ended with duration 0:00:11.489209
Train perplexity: 1.0772901314510777
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.15509164333344 Loss (std): 44.11655282744238 Loss ratio: 0.44048237691746833 Tokens per Sec: 4305.684938346424
Mean loss per sample: 105.74814348203725 Std loss per sample: 52.87155880097301 ratio: 0.49997623655637946
Epoch ended with duration 0:00:01.038287
b'BLEU = 2.23, 8.2/2.5/1.4/1.1 (BP=0.937, ratio=0.939, hyp_len=2922, ref_len=3113)\n'
Validation perplexity: 1674068.7021608131
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.23
Epoch 733 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.07120625915013079 Loss (std): 0.15661346986014077 Loss ratio: 2.1994340347235206 Tokens per Sec: 2191.2072086311696
Epoch Step: 10 / 67 Loss (mean): 0.15931184465978276 Loss (std): 0.35147749663688094 Loss ratio: 2.2062232559510946 Tokens per Sec: 2624.84860087358
Epoch Step: 15 / 67 Loss (mean): 0.16303090318342583 Loss (std): 0.4249109969050452 Loss ratio: 2.6063217991682133 Tokens per Sec: 2954.1719530712403
Epoch Step: 20 / 67 Loss (mean): 0.22264864835460685 Loss (std): 0.906590036430337 Loss ratio: 4.071841635375366 Tokens per Sec: 2717.496846777294
Epoch Step: 25 / 67 Loss (mean): 0.18185978222936683 Loss (std): 0.6004851761543597 Loss ratio: 3.3019129836909755 Tokens per Sec: 3372.232108707491
Epoch Step: 30 / 67 Loss (mean): 0.39135632862371494 Loss (std): 0.8676858770118819 Loss ratio: 2.2171249410052414 Tokens per Sec: 2261.60915050628
Epoch Step: 35 / 67 Loss (mean): 0.3557383900797504 Loss (std): 1.3399015953385518 Loss ratio: 3.7665364006346604 Tokens per Sec: 2758.3758925578477
Epoch Step: 40 / 67 Loss (mean): 0.31646363521440435 Loss (std): 0.8166836316398906 Loss ratio: 2.580655534360486 Tokens per Sec: 3234.9203899109243
Epoch Step: 45 / 67 Loss (mean): 0.14380997476473567 Loss (std): 0.40049256664288563 Loss ratio: 2.7848733531736376 Tokens per Sec: 3404.17380498586
Epoch Step: 50 / 67 Loss (mean): 0.1408378048972736 Loss (std): 0.4623728746803442 Loss ratio: 3.2830167654032714 Tokens per Sec: 2268.646831988433
Epoch Step: 55 / 67 Loss (mean): 0.6047887753261421 Loss (std): 0.8479840844808889 Loss ratio: 1.40211610908883 Tokens per Sec: 2752.3075031941394
Epoch Step: 60 / 67 Loss (mean): 0.08647044250756153 Loss (std): 0.2575734166592398 Loss ratio: 2.9787452126975746 Tokens per Sec: 2783.121437531077
Epoch Step: 65 / 67 Loss (mean): 0.2237672257460872 Loss (std): 0.5840747645026461 Loss ratio: 2.6101890594353905 Tokens per Sec: 3378.071687128413
Mean loss per sample: 0.2615554797267862 Std loss per sample: 0.8483587080131997 ratio: 3.243513417877432
Epoch ended with duration 0:00:11.327461
Train perplexity: 1.0360220027091402
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire 0 and exception[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link for sslcontext.tls[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.21358299255371 Loss (std): 45.101771635846156 Loss ratio: 0.4545927107504139 Tokens per Sec: 4422.728174655808
Mean loss per sample: 103.93819369418455 Std loss per sample: 53.80207218726968 ratio: 0.5176352433598234
Epoch ended with duration 0:00:01.020130
b'BLEU = 2.66, 8.9/3.0/1.9/1.5 (BP=0.899, ratio=0.904, hyp_len=2814, ref_len=3113)\n'
Validation perplexity: 1309933.5312562794
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.66
Epoch 734 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.32052757811470656 Loss (std): 1.0336525211420469 Loss ratio: 3.224847382000109 Tokens per Sec: 2785.096998679864
Epoch Step: 10 / 67 Loss (mean): 0.5290146550341888 Loss (std): 2.6516588753802766 Loss ratio: 5.012448804861384 Tokens per Sec: 2804.4733500804523
Epoch Step: 15 / 67 Loss (mean): 1.0715020842781087 Loss (std): 1.543506468905555 Loss ratio: 1.4405072015752958 Tokens per Sec: 2920.0139364855213
Epoch Step: 20 / 67 Loss (mean): 0.46359969188233663 Loss (std): 0.9524983366788292 Loss ratio: 2.05457068535019 Tokens per Sec: 2553.4900756127354
Epoch Step: 25 / 67 Loss (mean): 0.05120305878062936 Loss (std): 0.11916892192031982 Loss ratio: 2.327378964426294 Tokens per Sec: 2661.9292682215632
Epoch Step: 30 / 67 Loss (mean): 1.2925322534399584 Loss (std): 6.96327171172678 Loss ratio: 5.387309827816411 Tokens per Sec: 3032.045299840588
Epoch Step: 35 / 67 Loss (mean): 0.14434538168279687 Loss (std): 0.2892757764037326 Loss ratio: 2.004052869799634 Tokens per Sec: 2419.5965035499553
Epoch Step: 40 / 67 Loss (mean): 1.7794214453724635 Loss (std): 6.141865585947702 Loss ratio: 3.451608162821767 Tokens per Sec: 2798.5481165167
Epoch Step: 45 / 67 Loss (mean): 0.12411018826060172 Loss (std): 0.38838422167374925 Loss ratio: 3.129350032555226 Tokens per Sec: 2540.277774390189
Epoch Step: 50 / 67 Loss (mean): 1.2319354603278043 Loss (std): 6.273481826304627 Loss ratio: 5.09237864184486 Tokens per Sec: 2452.2868128401788
Epoch Step: 55 / 67 Loss (mean): 0.23511633221005468 Loss (std): 1.2501644716471663 Loss ratio: 5.3172166301499635 Tokens per Sec: 2350.071866102676
Epoch Step: 60 / 67 Loss (mean): 0.8476857228670269 Loss (std): 1.8974675765357172 Loss ratio: 2.238409265780881 Tokens per Sec: 2952.853666674786
Epoch Step: 65 / 67 Loss (mean): 0.28511375915360304 Loss (std): 0.9131544444047797 Loss ratio: 3.2027722797931477 Tokens per Sec: 3739.378445899348
Mean loss per sample: 0.4413829520442301 Std loss per sample: 3.0773752532911733 ratio: 6.97212078318511
Epoch ended with duration 0:00:11.504053
Train perplexity: 1.0615381990418333
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock to apache-sshd 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.01324290037155 Loss (std): 43.96887246466101 Loss ratio: 0.4396305048168543 Tokens per Sec: 4168.801770302427
Mean loss per sample: 108.48875326944179 Std loss per sample: 54.268400996387236 ratio: 0.50022144564245
Epoch ended with duration 0:00:01.056278
b'BLEU = 2.29, 8.3/2.5/1.5/1.2 (BP=0.931, ratio=0.933, hyp_len=2905, ref_len=3113)\n'
Validation perplexity: 2427006.796452953
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.29
Epoch 735 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6515264275494701 Loss (std): 1.0752259607773083 Loss ratio: 1.6503182607978966 Tokens per Sec: 2934.0770760470887
Epoch Step: 10 / 67 Loss (mean): 0.17136472572292405 Loss (std): 0.7846810834584791 Loss ratio: 4.579011696533236 Tokens per Sec: 2537.6507668463178
Epoch Step: 15 / 67 Loss (mean): 0.08414315656409599 Loss (std): 0.24907889499011968 Loss ratio: 2.9601800688376128 Tokens per Sec: 2366.4745079955514
Epoch Step: 20 / 67 Loss (mean): 0.19622978629331556 Loss (std): 0.5661352551941229 Loss ratio: 2.885062792393246 Tokens per Sec: 2279.2329266057077
Epoch Step: 25 / 67 Loss (mean): 0.6211480928341189 Loss (std): 1.1862345105780128 Loss ratio: 1.9097450741023259 Tokens per Sec: 2833.8521886457074
Epoch Step: 30 / 67 Loss (mean): 0.08955563089966745 Loss (std): 0.17141511764633274 Loss ratio: 1.9140629787799224 Tokens per Sec: 2688.55313620577
Epoch Step: 35 / 67 Loss (mean): 3.084163819709829 Loss (std): 18.020970276649678 Loss ratio: 5.843065196953502 Tokens per Sec: 2417.8304474504325
Epoch Step: 40 / 67 Loss (mean): 0.16101684041859698 Loss (std): 0.3591486045690774 Loss ratio: 2.2305033662031586 Tokens per Sec: 2592.198446835196
Epoch Step: 45 / 67 Loss (mean): 0.3975307814343978 Loss (std): 1.1682847619156855 Loss ratio: 2.938853584369493 Tokens per Sec: 2987.151429358701
Epoch Step: 50 / 67 Loss (mean): 0.42333558528298454 Loss (std): 0.8401753760559941 Loss ratio: 1.9846556851448414 Tokens per Sec: 3157.6337506814893
Epoch Step: 55 / 67 Loss (mean): 0.6170985795902197 Loss (std): 1.1466651608411234 Loss ratio: 1.8581555666560743 Tokens per Sec: 3066.8428425053266
Epoch Step: 60 / 67 Loss (mean): 0.25189543328497166 Loss (std): 0.7815696120899321 Loss ratio: 3.102754194061689 Tokens per Sec: 3302.534813150003
Epoch Step: 65 / 67 Loss (mean): 0.21145210987998553 Loss (std): 0.570017696210587 Loss ratio: 2.695729527286881 Tokens per Sec: 2977.3623383042263
Mean loss per sample: 0.4290153715485703 Std loss per sample: 3.364385321341646 ratio: 7.84210903492243
Epoch ended with duration 0:00:11.463002
Train perplexity: 1.059763380552319
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire 0 and exception[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.55364549160004 Loss (std): 46.249153215677374 Loss ratio: 0.4599450670293291 Tokens per Sec: 4233.455923397221
Mean loss per sample: 106.24834607382778 Std loss per sample: 54.05120592103061 ratio: 0.5087251511988014
Epoch ended with duration 0:00:01.045731
b'BLEU = 2.25, 8.4/2.5/1.5/1.1 (BP=0.930, ratio=0.933, hyp_len=2903, ref_len=3113)\n'
Validation perplexity: 1791482.3804003252
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.25
Model saved checkpoint_commit_msg_generator!
Epoch 736 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.4958474163504434 Loss (std): 1.0777748006729662 Loss ratio: 2.173601727333075 Tokens per Sec: 2815.984871008069
Epoch Step: 10 / 67 Loss (mean): 0.355285806232132 Loss (std): 0.9228679245775806 Loss ratio: 2.597536710978567 Tokens per Sec: 2993.3683907178934
Epoch Step: 15 / 67 Loss (mean): 0.15174803367972345 Loss (std): 0.3819095345235992 Loss ratio: 2.5167346506093797 Tokens per Sec: 3026.980279843715
Epoch Step: 20 / 67 Loss (mean): 0.38139478692119155 Loss (std): 0.8233421527714375 Loss ratio: 2.1587661420804016 Tokens per Sec: 3116.8283438225217
Epoch Step: 25 / 67 Loss (mean): 0.13306543768885604 Loss (std): 0.3951267575924246 Loss ratio: 2.9694168858208 Tokens per Sec: 2526.8050548804163
Epoch Step: 30 / 67 Loss (mean): 0.3679500191265106 Loss (std): 1.4315247969163833 Loss ratio: 3.890541439064822 Tokens per Sec: 2657.3120457360205
Epoch Step: 35 / 67 Loss (mean): 0.25581236938523944 Loss (std): 0.5055603833442607 Loss ratio: 1.9762937365351336 Tokens per Sec: 2488.843339682728
Epoch Step: 40 / 67 Loss (mean): 0.4759196032409818 Loss (std): 2.527516371627672 Loss ratio: 5.310805342783631 Tokens per Sec: 3170.099533723945
Epoch Step: 45 / 67 Loss (mean): 0.37062831176626787 Loss (std): 1.0039919612740693 Loss ratio: 2.7088917101055796 Tokens per Sec: 2847.820056335574
Epoch Step: 50 / 67 Loss (mean): 0.2640186496591923 Loss (std): 0.6427406459515989 Loss ratio: 2.4344516827931613 Tokens per Sec: 2702.6121662078217
Epoch Step: 55 / 67 Loss (mean): 0.16452338825456536 Loss (std): 0.46173907724400537 Loss ratio: 2.806525456001193 Tokens per Sec: 2770.551155978767
Epoch Step: 60 / 67 Loss (mean): 0.07176466201599396 Loss (std): 0.1664900515455431 Loss ratio: 2.3199447592805216 Tokens per Sec: 2904.797737242504
Epoch Step: 65 / 67 Loss (mean): 0.09186105302705982 Loss (std): 0.2210301536803936 Loss ratio: 2.406135640697304 Tokens per Sec: 2351.2498976885186
Mean loss per sample: 0.49516852698246255 Std loss per sample: 3.724105058557312 ratio: 7.52088401347287
Epoch ended with duration 0:00:11.464065
Train perplexity: 1.0692913724713136
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.65591579675674 Loss (std): 45.00792096478094 Loss ratio: 0.44714630638958586 Tokens per Sec: 4436.375724988935
Mean loss per sample: 104.67242317182607 Std loss per sample: 54.16471727915958 ratio: 0.5174688388578236
Epoch ended with duration 0:00:01.005718
b'BLEU = 2.85, 8.9/3.0/2.0/1.7 (BP=0.925, ratio=0.928, hyp_len=2889, ref_len=3113)\n'
Validation perplexity: 1446978.5762954976
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.85
Epoch 737 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.28939296957651095 Loss (std): 0.6519230556245393 Loss ratio: 2.252725961444551 Tokens per Sec: 2995.0408500834646
Epoch Step: 10 / 67 Loss (mean): 0.11006110918424383 Loss (std): 0.23823847499711837 Loss ratio: 2.16460179951761 Tokens per Sec: 2809.499261851991
Epoch Step: 15 / 67 Loss (mean): 0.6119758069089585 Loss (std): 3.0030878667214265 Loss ratio: 4.90720030566206 Tokens per Sec: 2792.1737016981665
Epoch Step: 20 / 67 Loss (mean): 0.5695233122748959 Loss (std): 0.8364108318157747 Loss ratio: 1.468615619042576 Tokens per Sec: 2818.6712567710724
Epoch Step: 25 / 67 Loss (mean): 0.2725158961738998 Loss (std): 0.5806705093858502 Loss ratio: 2.130776653906855 Tokens per Sec: 2658.672549876141
Epoch Step: 30 / 67 Loss (mean): 0.46953449033753714 Loss (std): 1.0378925847294909 Loss ratio: 2.2104714479725964 Tokens per Sec: 2416.648923906075
Epoch Step: 35 / 67 Loss (mean): 0.12232650756847024 Loss (std): 0.26119162284952696 Loss ratio: 2.1352005222852393 Tokens per Sec: 2500.9800798272026
Epoch Step: 40 / 67 Loss (mean): 0.1381064316742595 Loss (std): 0.371512101164739 Loss ratio: 2.690041996313355 Tokens per Sec: 2278.9452819803673
Epoch Step: 45 / 67 Loss (mean): 0.06295803449756932 Loss (std): 0.11654567693479559 Loss ratio: 1.8511644759064896 Tokens per Sec: 2897.852993194526
Epoch Step: 50 / 67 Loss (mean): 0.22933766703226866 Loss (std): 0.634068479672054 Loss ratio: 2.764781241028489 Tokens per Sec: 3491.5358855885884
Epoch Step: 55 / 67 Loss (mean): 0.1192761577112833 Loss (std): 0.2857895431932654 Loss ratio: 2.3960324399872097 Tokens per Sec: 3321.9842996532648
Epoch Step: 60 / 67 Loss (mean): 0.11985807828841644 Loss (std): 0.2908702223053989 Loss ratio: 2.426788635852088 Tokens per Sec: 2829.4758490976196
Epoch Step: 65 / 67 Loss (mean): 0.4751306417565502 Loss (std): 1.0887339463782846 Loss ratio: 2.2914412388838006 Tokens per Sec: 3176.8018334671565
Mean loss per sample: 0.3899926312747521 Std loss per sample: 2.8229822622408918 ratio: 7.238552823456001
Epoch ended with duration 0:00:11.258653
Train perplexity: 1.0541828232708566
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire 0 length and[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.68585580587387 Loss (std): 44.33860860926749 Loss ratio: 0.4403658116066868 Tokens per Sec: 4446.736960394877
Mean loss per sample: 104.32255259740975 Std loss per sample: 53.29315771227527 ratio: 0.5108498247539861
Epoch ended with duration 0:00:01.013944
b'BLEU = 2.26, 7.7/2.5/1.5/1.1 (BP=0.940, ratio=0.942, hyp_len=2932, ref_len=3113)\n'
Validation perplexity: 1379972.970429143
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.26
Epoch 738 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.152803057753772 Loss (std): 0.4228424328548824 Loss ratio: 2.7672380322143413 Tokens per Sec: 3246.6528483420548
Epoch Step: 10 / 67 Loss (mean): 0.07476705842054798 Loss (std): 0.12043755969304895 Loss ratio: 1.6108372087559553 Tokens per Sec: 2575.163419502232
Epoch Step: 15 / 67 Loss (mean): 0.19726718945366883 Loss (std): 0.5173948217043263 Loss ratio: 2.6228123548434508 Tokens per Sec: 2706.901479758177
Epoch Step: 20 / 67 Loss (mean): 0.9330805213921849 Loss (std): 1.5268780380568032 Loss ratio: 1.636384002292379 Tokens per Sec: 2837.260716268289
Epoch Step: 25 / 67 Loss (mean): 0.48131436303447117 Loss (std): 0.9236761859447897 Loss ratio: 1.9190704805097145 Tokens per Sec: 2975.571296341404
Epoch Step: 30 / 67 Loss (mean): 2.2842312483320484 Loss (std): 10.281056566301096 Loss ratio: 4.500882550227063 Tokens per Sec: 2828.9715875558554
Epoch Step: 35 / 67 Loss (mean): 0.1732141595266512 Loss (std): 0.7327544410368179 Loss ratio: 4.230337999152282 Tokens per Sec: 3069.9547368269796
Epoch Step: 40 / 67 Loss (mean): 0.35147802199207945 Loss (std): 1.0385590178565844 Loss ratio: 2.9548334543659984 Tokens per Sec: 2521.2740198478327
Epoch Step: 45 / 67 Loss (mean): 13.075373426606347 Loss (std): 19.62428237043007 Loss ratio: 1.5008582722767758 Tokens per Sec: 3321.0421075032646
Epoch Step: 50 / 67 Loss (mean): 0.23141290926287184 Loss (std): 0.61739955551802 Loss ratio: 2.6679564138606 Tokens per Sec: 2411.1382528069507
Epoch Step: 55 / 67 Loss (mean): 0.5013791788521758 Loss (std): 0.8475907850657091 Loss ratio: 1.6905185153602253 Tokens per Sec: 3285.791517841246
Epoch Step: 60 / 67 Loss (mean): 0.24845093073236058 Loss (std): 0.5927827217842339 Loss ratio: 2.3859146755332494 Tokens per Sec: 2712.5013996747507
Epoch Step: 65 / 67 Loss (mean): 0.10900458601599894 Loss (std): 0.2631455358499939 Loss ratio: 2.4140776591855615 Tokens per Sec: 2635.495598840765
Mean loss per sample: 0.4549283317565933 Std loss per sample: 3.210391208376874 ratio: 7.056916406988199
Epoch ended with duration 0:00:11.222539
Train perplexity: 1.0634854490507701
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to deprecated ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.1096208691597 Loss (std): 44.284971518544765 Loss ratio: 0.4423647910566349 Tokens per Sec: 4486.099874028474
Mean loss per sample: 104.06120920384333 Std loss per sample: 53.84029576322498 ratio: 0.5173906412884204
Epoch ended with duration 0:00:00.998427
b'BLEU = 2.29, 8.1/2.6/1.5/1.2 (BP=0.917, ratio=0.921, hyp_len=2866, ref_len=3113)\n'
Validation perplexity: 1331954.2189919015
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.29
Epoch 739 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.10422861764163827 Loss (std): 0.2299317285758088 Loss ratio: 2.2060326019708567 Tokens per Sec: 3096.468546240492
Epoch Step: 10 / 67 Loss (mean): 0.5221094343269215 Loss (std): 0.8251541297194803 Loss ratio: 1.5804237109471688 Tokens per Sec: 2962.6582153576105
Epoch Step: 15 / 67 Loss (mean): 0.34034910509944893 Loss (std): 2.084587431872873 Loss ratio: 6.12485063318666 Tokens per Sec: 3134.4408268066454
Epoch Step: 20 / 67 Loss (mean): 1.2116801803745147 Loss (std): 1.5902002227639538 Loss ratio: 1.3123926994270414 Tokens per Sec: 2254.996895384092
Epoch Step: 25 / 67 Loss (mean): 0.22235907055801363 Loss (std): 0.7325626249365152 Loss ratio: 3.294502999576935 Tokens per Sec: 3328.842966124702
Epoch Step: 30 / 67 Loss (mean): 0.3176864833167201 Loss (std): 0.8593975036676726 Loss ratio: 2.7051749092229693 Tokens per Sec: 3353.6393083103612
Epoch Step: 35 / 67 Loss (mean): 0.2716148838062509 Loss (std): 0.7256914265623267 Loss ratio: 2.6717660549117 Tokens per Sec: 2867.4378168252747
Epoch Step: 40 / 67 Loss (mean): 0.2945445629011374 Loss (std): 0.7910198783065628 Loss ratio: 2.6855694449605756 Tokens per Sec: 3024.700916507951
Epoch Step: 45 / 67 Loss (mean): 0.145760548322869 Loss (std): 0.5236522953150701 Loss ratio: 3.592551628957559 Tokens per Sec: 2720.19226031777
Epoch Step: 50 / 67 Loss (mean): 0.09954689971755215 Loss (std): 0.21577216719559567 Loss ratio: 2.1675428145709557 Tokens per Sec: 2631.6767766141174
Epoch Step: 55 / 67 Loss (mean): 0.11188999327896454 Loss (std): 0.22081729017823293 Loss ratio: 1.973521346343193 Tokens per Sec: 2902.6846687078823
Epoch Step: 60 / 67 Loss (mean): 0.16323701122018974 Loss (std): 0.5175748900118483 Loss ratio: 3.1706957027882217 Tokens per Sec: 2546.035861083455
Epoch Step: 65 / 67 Loss (mean): 0.5647186781006894 Loss (std): 2.345479091006719 Loss ratio: 4.153358445474544 Tokens per Sec: 2362.520693862655
Mean loss per sample: 0.31317417433979383 Std loss per sample: 1.6220134826665407 ratio: 5.179269606396908
Epoch ended with duration 0:00:11.275959
Train perplexity: 1.0432829003521291
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire ) to exception[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.92090144753456 Loss (std): 45.290847473261344 Loss ratio: 0.4487756928806919 Tokens per Sec: 4340.281214950635
Mean loss per sample: 107.72002076760667 Std loss per sample: 55.223591069268494 ratio: 0.5126585631505486
Epoch ended with duration 0:00:01.030535
b'BLEU = 2.35, 8.6/2.7/1.6/1.2 (BP=0.908, ratio=0.912, hyp_len=2838, ref_len=3113)\n'
Validation perplexity: 2186892.7567411433
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.35
Epoch 740 / 1000
Epoch Step: 5 / 67 Loss (mean): 9.560550093729034 Loss (std): 18.180969721071726 Loss ratio: 1.901665651330775 Tokens per Sec: 3356.659918938791
Epoch Step: 10 / 67 Loss (mean): 0.10120308247314824 Loss (std): 0.26209264081207323 Loss ratio: 2.589769347011867 Tokens per Sec: 2821.3158466893938
Epoch Step: 15 / 67 Loss (mean): 0.17168418910296168 Loss (std): 0.4653072650031407 Loss ratio: 2.7102511153434676 Tokens per Sec: 3053.5857565577994
Epoch Step: 20 / 67 Loss (mean): 0.2272316197197597 Loss (std): 0.5791310573420493 Loss ratio: 2.5486376326335227 Tokens per Sec: 2892.583847572892
Epoch Step: 25 / 67 Loss (mean): 0.16378518158217048 Loss (std): 0.506568201233145 Loss ratio: 3.0928817634152175 Tokens per Sec: 2473.2383511797293
Epoch Step: 30 / 67 Loss (mean): 0.14332345890034048 Loss (std): 0.3484013060718509 Loss ratio: 2.4308742528612197 Tokens per Sec: 3371.225231457375
Epoch Step: 35 / 67 Loss (mean): 0.1086636916243151 Loss (std): 0.23022641363371474 Loss ratio: 2.1187059835007314 Tokens per Sec: 2826.256244461382
Epoch Step: 40 / 67 Loss (mean): 0.10172482426423812 Loss (std): 0.3661092871111908 Loss ratio: 3.5990161669898146 Tokens per Sec: 2330.0884992388847
Epoch Step: 45 / 67 Loss (mean): 0.27107695093718576 Loss (std): 0.5786169666305581 Loss ratio: 2.1345118595665324 Tokens per Sec: 2643.786047670073
Epoch Step: 50 / 67 Loss (mean): 0.5094668972724321 Loss (std): 1.1060170136048149 Loss ratio: 2.170930083045972 Tokens per Sec: 2866.337874833219
Epoch Step: 55 / 67 Loss (mean): 0.2566854331380455 Loss (std): 0.518138638606991 Loss ratio: 2.018574378267644 Tokens per Sec: 2686.743785940941
Epoch Step: 60 / 67 Loss (mean): 0.23150156925112242 Loss (std): 0.8947992504664652 Loss ratio: 3.8651973434176923 Tokens per Sec: 2611.284924195136
Epoch Step: 65 / 67 Loss (mean): 0.1259950528592526 Loss (std): 0.43009862579992447 Loss ratio: 3.413615185989738 Tokens per Sec: 2789.362226523126
Mean loss per sample: 0.6557519146333993 Std loss per sample: 4.645858632906862 ratio: 7.0847808892851605
Epoch ended with duration 0:00:11.326909
Train perplexity: 1.0927779661351702
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to method_4 ( ) and hint[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.64622610807419 Loss (std): 44.5777486144837 Loss ratio: 0.4429152521488088 Tokens per Sec: 4460.469669797145
Mean loss per sample: 108.23410832113969 Std loss per sample: 53.71285714658325 ratio: 0.49626553015259006
Epoch ended with duration 0:00:01.033063
b'BLEU = 2.82, 8.4/3.0/2.0/1.6 (BP=0.950, ratio=0.951, hyp_len=2960, ref_len=3113)\n'
Validation perplexity: 2344681.977604974
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.82
Model saved checkpoint_commit_msg_generator!
Epoch 741 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.12773546838070615 Loss (std): 0.2991772767837796 Loss ratio: 2.3421629135308275 Tokens per Sec: 2390.0939429630857
Epoch Step: 10 / 67 Loss (mean): 0.19190689432707586 Loss (std): 0.8039438648350667 Loss ratio: 4.1892390977098914 Tokens per Sec: 2858.6366494587055
Epoch Step: 15 / 67 Loss (mean): 0.4608998148023602 Loss (std): 1.0883689702173363 Loss ratio: 2.3614003201195533 Tokens per Sec: 3027.53646059755
Epoch Step: 20 / 67 Loss (mean): 0.3414028311499351 Loss (std): 1.056976089898195 Loss ratio: 3.0959792756785873 Tokens per Sec: 3031.06413283819
Epoch Step: 25 / 67 Loss (mean): 0.522507015482006 Loss (std): 1.587500811104132 Loss ratio: 3.0382382706185926 Tokens per Sec: 2614.826496622135
Epoch Step: 30 / 67 Loss (mean): 0.5736212459269154 Loss (std): 1.1805407305797313 Loss ratio: 2.0580491726245143 Tokens per Sec: 3323.8364387116258
Epoch Step: 35 / 67 Loss (mean): 0.21111776117322734 Loss (std): 0.4587700717695146 Loss ratio: 2.173052940785415 Tokens per Sec: 2855.3344315421564
Epoch Step: 40 / 67 Loss (mean): 0.6025489042040135 Loss (std): 0.9253102764302621 Loss ratio: 1.5356600434824899 Tokens per Sec: 2764.2565621780363
Epoch Step: 45 / 67 Loss (mean): 0.09876152030483354 Loss (std): 0.266597797971729 Loss ratio: 2.6994096197472297 Tokens per Sec: 2948.2066379491407
Epoch Step: 50 / 67 Loss (mean): 0.10599899635326437 Loss (std): 0.2541475081444235 Loss ratio: 2.3976407031008335 Tokens per Sec: 2472.3129657387117
Epoch Step: 55 / 67 Loss (mean): 0.20160638109155116 Loss (std): 0.47319417793258184 Loss ratio: 2.3471190513444133 Tokens per Sec: 2394.1443639959157
Epoch Step: 60 / 67 Loss (mean): 0.1430537982741953 Loss (std): 0.29782531317198996 Loss ratio: 2.081911258316537 Tokens per Sec: 2791.4796115078857
Epoch Step: 65 / 67 Loss (mean): 0.10736852492118487 Loss (std): 0.2998769973378089 Loss ratio: 2.792969332101164 Tokens per Sec: 2845.458991027327
Mean loss per sample: 0.3967583794652725 Std loss per sample: 2.54786347935025 ratio: 6.4217004888065885
Epoch ended with duration 0:00:11.248277
Train perplexity: 1.0551482680505542
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to run[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 123.09590035676956 Loss (std): 49.34517851467975 Loss ratio: 0.40086776547116787 Tokens per Sec: 4351.427951251065
Mean loss per sample: 107.96061930753535 Std loss per sample: 54.91514997098505 ratio: 0.5086590862780659
Epoch ended with duration 0:00:01.016742
b'BLEU = 2.59, 8.4/2.7/1.8/1.4 (BP=0.942, ratio=0.944, hyp_len=2938, ref_len=3113)\n'
Validation perplexity: 2259372.4900983884
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.59
Epoch 742 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.06802872974640195 Loss (std): 0.1864303669806921 Loss ratio: 2.7404652075037816 Tokens per Sec: 3339.31885950283
Epoch Step: 10 / 67 Loss (mean): 0.14514515430710162 Loss (std): 0.30243568055248965 Loss ratio: 2.083677419313558 Tokens per Sec: 2944.9725826495633
Epoch Step: 15 / 67 Loss (mean): 0.21783690615211526 Loss (std): 0.5702564167689095 Loss ratio: 2.617813605793226 Tokens per Sec: 2993.618682370586
Epoch Step: 20 / 67 Loss (mean): 0.5445115319525939 Loss (std): 1.088282095872251 Loss ratio: 1.9986392059865477 Tokens per Sec: 2652.857452759926
Epoch Step: 25 / 67 Loss (mean): 2.064800077399923 Loss (std): 7.702244041154671 Loss ratio: 3.7302614066411883 Tokens per Sec: 2807.764096343119
Epoch Step: 30 / 67 Loss (mean): 0.08598784602327214 Loss (std): 0.36219644325793593 Loss ratio: 4.212181837418156 Tokens per Sec: 2399.8592064685054
Epoch Step: 35 / 67 Loss (mean): 0.22215832941378721 Loss (std): 0.7021291917298689 Loss ratio: 3.160490059421083 Tokens per Sec: 2236.5634959515173
Epoch Step: 40 / 67 Loss (mean): 0.10572395360213704 Loss (std): 0.23639227762127962 Loss ratio: 2.2359386834025976 Tokens per Sec: 2809.1477722202917
Epoch Step: 45 / 67 Loss (mean): 0.29657541528808906 Loss (std): 0.8641983451860777 Loss ratio: 2.9139244206961927 Tokens per Sec: 3435.013585869407
Epoch Step: 50 / 67 Loss (mean): 0.16426830168529705 Loss (std): 0.3135727821091116 Loss ratio: 1.9089062155756016 Tokens per Sec: 2940.2141713849664
Epoch Step: 55 / 67 Loss (mean): 0.26963143987904914 Loss (std): 0.6949593160785704 Loss ratio: 2.5774416974159773 Tokens per Sec: 2416.0232953864124
Epoch Step: 60 / 67 Loss (mean): 0.21085313309049525 Loss (std): 0.6641643891133162 Loss ratio: 3.149891013610246 Tokens per Sec: 3735.5899082558685
Epoch Step: 65 / 67 Loss (mean): 0.21646868497236937 Loss (std): 0.6263812421599992 Loss ratio: 2.8936344406580203 Tokens per Sec: 2750.210576167673
Mean loss per sample: 0.2654484671406272 Std loss per sample: 1.1808368932264792 ratio: 4.448460019175416
Epoch ended with duration 0:00:11.216280
Train perplexity: 1.0365678400464942
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.3882404267788 Loss (std): 44.830112038021014 Loss ratio: 0.44656736533517805 Tokens per Sec: 4438.253486832648
Mean loss per sample: 104.15976048416657 Std loss per sample: 53.470634489325356 ratio: 0.5133521260108262
Epoch ended with duration 0:00:01.006495
b'BLEU = 2.36, 7.4/2.5/1.6/1.3 (BP=0.936, ratio=0.938, hyp_len=2921, ref_len=3113)\n'
Validation perplexity: 1349862.405096565
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.36
Epoch 743 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.08051011822135479 Loss (std): 0.15752448691961793 Loss ratio: 1.9565799976410365 Tokens per Sec: 2181.568041407132
Epoch Step: 10 / 67 Loss (mean): 0.23298522345703532 Loss (std): 0.451196161673321 Loss ratio: 1.9365870289045426 Tokens per Sec: 2615.492000755792
Epoch Step: 15 / 67 Loss (mean): 0.1863679052585212 Loss (std): 0.644930174300774 Loss ratio: 3.460521667645273 Tokens per Sec: 2558.1946211279455
Epoch Step: 20 / 67 Loss (mean): 0.10500444508215878 Loss (std): 0.1906951542029676 Loss ratio: 1.8160674441330718 Tokens per Sec: 3099.3007228036618
Epoch Step: 25 / 67 Loss (mean): 0.40871806462382665 Loss (std): 0.9896238032775716 Loss ratio: 2.421287163287963 Tokens per Sec: 3038.257746540849
Epoch Step: 30 / 67 Loss (mean): 0.20061889184944448 Loss (std): 0.7442457152623153 Loss ratio: 3.7097489094937206 Tokens per Sec: 2886.2067003828292
Epoch Step: 35 / 67 Loss (mean): 0.305850462471426 Loss (std): 0.7120030976536654 Loss ratio: 2.327945139923351 Tokens per Sec: 3150.08837191579
Epoch Step: 40 / 67 Loss (mean): 0.30073410018667346 Loss (std): 0.589532812976337 Loss ratio: 1.9603124907032448 Tokens per Sec: 2775.092157996205
Epoch Step: 45 / 67 Loss (mean): 0.949368930093442 Loss (std): 1.489192004767778 Loss ratio: 1.5686125357201268 Tokens per Sec: 3228.55802908339
Epoch Step: 50 / 67 Loss (mean): 0.107699568156022 Loss (std): 0.33555112277748883 Loss ratio: 3.115621803528342 Tokens per Sec: 2489.1544906670006
Epoch Step: 55 / 67 Loss (mean): 0.1696015756072029 Loss (std): 0.6742228929847497 Loss ratio: 3.9753338998822114 Tokens per Sec: 2512.4181860093136
Epoch Step: 60 / 67 Loss (mean): 0.38561414520518156 Loss (std): 0.8405594134141701 Loss ratio: 2.179794034699937 Tokens per Sec: 2759.9716019295884
Epoch Step: 65 / 67 Loss (mean): 0.37701855826378505 Loss (std): 2.3814081990714135 Loss ratio: 6.3164216903223 Tokens per Sec: 3100.0642393864273
Mean loss per sample: 0.4287006639367469 Std loss per sample: 3.135699650865298 ratio: 7.314426859222122
Epoch ended with duration 0:00:11.318917
Train perplexity: 1.059718256947173
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.73722586035728 Loss (std): 45.0664128471355 Loss ratio: 0.4473660304047573 Tokens per Sec: 4464.8894022750665
Mean loss per sample: 106.49105200937521 Std loss per sample: 53.5200711939344 ratio: 0.5025781057099766
Epoch ended with duration 0:00:01.023362
b'BLEU = 2.89, 8.9/3.1/2.0/1.6 (BP=0.933, ratio=0.935, hyp_len=2911, ref_len=3113)\n'
Validation perplexity: 1851385.7711087188
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.89
Epoch 744 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.443895355572522 Loss (std): 1.4441897531935057 Loss ratio: 3.25344641493452 Tokens per Sec: 3001.578889892328
Epoch Step: 10 / 67 Loss (mean): 0.10416538079243765 Loss (std): 0.27667737077155985 Loss ratio: 2.6561355477869717 Tokens per Sec: 2542.5087151373486
Epoch Step: 15 / 67 Loss (mean): 0.12381611057821829 Loss (std): 0.2820518039933314 Loss ratio: 2.2779895336411085 Tokens per Sec: 3267.1056460904906
Epoch Step: 20 / 67 Loss (mean): 0.1730021457960902 Loss (std): 0.4692138588763492 Loss ratio: 2.7121851969939748 Tokens per Sec: 2400.2577444210315
Epoch Step: 25 / 67 Loss (mean): 0.3158422188421355 Loss (std): 0.9623812399738998 Loss ratio: 3.0470316587248836 Tokens per Sec: 2503.3507020720126
Epoch Step: 30 / 67 Loss (mean): 0.10497709045284864 Loss (std): 0.2094221542886179 Loss ratio: 1.9949319740642046 Tokens per Sec: 2630.3402157698106
Epoch Step: 35 / 67 Loss (mean): 0.0785479933329043 Loss (std): 0.17880634235278758 Loss ratio: 2.2763960575665574 Tokens per Sec: 2759.05352914081
Epoch Step: 40 / 67 Loss (mean): 0.18624920065849437 Loss (std): 0.5118434598199355 Loss ratio: 2.7481645988830263 Tokens per Sec: 2720.769528642272
Epoch Step: 45 / 67 Loss (mean): 0.23289492391495514 Loss (std): 0.6428421390303651 Loss ratio: 2.760223916538035 Tokens per Sec: 3085.165721456196
Epoch Step: 50 / 67 Loss (mean): 0.10548573802680039 Loss (std): 0.3653976311093073 Loss ratio: 3.4639529280865626 Tokens per Sec: 2555.91291257742
Epoch Step: 55 / 67 Loss (mean): 0.3330629439569748 Loss (std): 0.7062934764967483 Loss ratio: 2.1206005931058716 Tokens per Sec: 3060.7895113784516
Epoch Step: 60 / 67 Loss (mean): 0.9314625063179847 Loss (std): 1.4743658854371482 Loss ratio: 1.5828504909609598 Tokens per Sec: 3097.2379986698234
Epoch Step: 65 / 67 Loss (mean): 0.16244170271238545 Loss (std): 0.34322126876312065 Loss ratio: 2.1128888889500144 Tokens per Sec: 3129.6614881071637
Mean loss per sample: 0.3326348795883182 Std loss per sample: 1.9612181221499474 ratio: 5.896008634383823
Epoch ended with duration 0:00:11.229625
Train perplexity: 1.0460335129307123
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire 0 length and[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.66577586531639 Loss (std): 45.14114473478152 Loss ratio: 0.4484259356941444 Tokens per Sec: 4458.3266659535775
Mean loss per sample: 104.59510447930728 Std loss per sample: 54.364424387242735 ratio: 0.5197606968115606
Epoch ended with duration 0:00:01.003506
b'BLEU = 2.86, 9.0/3.0/2.0/1.7 (BP=0.924, ratio=0.927, hyp_len=2886, ref_len=3113)\n'
Validation perplexity: 1431896.1918615405
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.86
Epoch 745 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.30252397166987066 Loss (std): 0.6084513438814845 Loss ratio: 2.011250019371877 Tokens per Sec: 2493.383340415108
Epoch Step: 10 / 67 Loss (mean): 0.23523168862448074 Loss (std): 0.4938280470779397 Loss ratio: 2.099326200332971 Tokens per Sec: 2839.648821939885
Epoch Step: 15 / 67 Loss (mean): 0.10700372182691353 Loss (std): 0.28115276536408046 Loss ratio: 2.6275045443640357 Tokens per Sec: 2751.6278308846236
Epoch Step: 20 / 67 Loss (mean): 0.8845283969812954 Loss (std): 1.2861240269353333 Loss ratio: 1.4540223144045994 Tokens per Sec: 3066.7514824482514
Epoch Step: 25 / 67 Loss (mean): 0.06126645465860747 Loss (std): 0.12785140839859316 Loss ratio: 2.086809316958428 Tokens per Sec: 2866.8540313883955
Epoch Step: 30 / 67 Loss (mean): 0.18922771765483049 Loss (std): 0.5795880722610746 Loss ratio: 3.062913189696125 Tokens per Sec: 3088.8753711387853
Epoch Step: 35 / 67 Loss (mean): 0.5544548484667757 Loss (std): 0.8439032019444155 Loss ratio: 1.5220413425512396 Tokens per Sec: 2446.0350222674474
Epoch Step: 40 / 67 Loss (mean): 0.15961962987785228 Loss (std): 0.7739974907304483 Loss ratio: 4.84901193745872 Tokens per Sec: 2635.69932499445
Epoch Step: 45 / 67 Loss (mean): 2.4745092399125497 Loss (std): 9.109303916766942 Loss ratio: 3.681256780067174 Tokens per Sec: 2619.863755092679
Epoch Step: 50 / 67 Loss (mean): 0.21331496516552306 Loss (std): 0.4944119802683507 Loss ratio: 2.3177557180983936 Tokens per Sec: 3133.975261203068
Epoch Step: 55 / 67 Loss (mean): 0.12279146475430025 Loss (std): 0.323574049786807 Loss ratio: 2.635150988989853 Tokens per Sec: 3273.785408788093
Epoch Step: 60 / 67 Loss (mean): 0.19065299503563438 Loss (std): 0.5633557425393888 Loss ratio: 2.9548748627531065 Tokens per Sec: 2623.038704884404
Epoch Step: 65 / 67 Loss (mean): 0.6826637744816253 Loss (std): 1.5938229375510513 Loss ratio: 2.3347114599149585 Tokens per Sec: 2604.2203481073134
Mean loss per sample: 0.4129544762242959 Std loss per sample: 3.173461053574335 ratio: 7.684772139025494
Epoch ended with duration 0:00:11.318373
Train perplexity: 1.0574629784403276
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope variable[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 120.37629887461662 Loss (std): 45.128703279037175 Loss ratio: 0.3748969165935482 Tokens per Sec: 4196.293940648584
Mean loss per sample: 112.85165623102154 Std loss per sample: 55.24233547111126 ratio: 0.48951284647540527
Epoch ended with duration 0:00:01.069170
b'BLEU = 2.58, 8.9/2.8/1.8/1.4 (BP=0.908, ratio=0.912, hyp_len=2838, ref_len=3113)\n'
Validation perplexity: 4383775.0000906065
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.58
Model saved checkpoint_commit_msg_generator!
Epoch 746 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6708955928743308 Loss (std): 1.6895276879250876 Loss ratio: 2.5183168675868206 Tokens per Sec: 3148.034907104668
Epoch Step: 10 / 67 Loss (mean): 0.2076967586945102 Loss (std): 0.8357763149427163 Loss ratio: 4.024021945243806 Tokens per Sec: 2340.087175040507
Epoch Step: 15 / 67 Loss (mean): 0.13527030730438128 Loss (std): 0.35026065747497787 Loss ratio: 2.58933881688338 Tokens per Sec: 2779.9275517617293
Epoch Step: 20 / 67 Loss (mean): 1.9150691630011352 Loss (std): 7.9758476909200455 Loss ratio: 4.164783102883328 Tokens per Sec: 2478.47246244108
Epoch Step: 25 / 67 Loss (mean): 0.3194339983319878 Loss (std): 0.7783006917546239 Loss ratio: 2.4364992324509425 Tokens per Sec: 3407.1788965621186
Epoch Step: 30 / 67 Loss (mean): 0.09521745777601609 Loss (std): 0.18315178686450623 Loss ratio: 1.9235105740308847 Tokens per Sec: 2831.320877333686
Epoch Step: 35 / 67 Loss (mean): 0.3414810280501115 Loss (std): 0.9382142233194891 Loss ratio: 2.7474856470849343 Tokens per Sec: 2979.6037551986087
Epoch Step: 40 / 67 Loss (mean): 0.4237653135733126 Loss (std): 2.3110289120747356 Loss ratio: 5.453558462790327 Tokens per Sec: 2356.855190137109
Epoch Step: 45 / 67 Loss (mean): 0.32776584185012325 Loss (std): 1.04537114748073 Loss ratio: 3.189384048014205 Tokens per Sec: 2773.6426203541264
Epoch Step: 50 / 67 Loss (mean): 0.18963515044470114 Loss (std): 0.5865152164994754 Loss ratio: 3.0928612924559418 Tokens per Sec: 2988.615477966305
Epoch Step: 55 / 67 Loss (mean): 0.14470098366109596 Loss (std): 0.27668075853036606 Loss ratio: 1.912086231413463 Tokens per Sec: 3577.240418187519
Epoch Step: 60 / 67 Loss (mean): 0.09248298519923992 Loss (std): 0.14407004308170465 Loss ratio: 1.5578005269977888 Tokens per Sec: 2158.2219514974868
Epoch Step: 65 / 67 Loss (mean): 0.4060574509749131 Loss (std): 1.2076473982511768 Loss ratio: 2.974080134108381 Tokens per Sec: 2595.9001732018855
Mean loss per sample: 0.6488567043379253 Std loss per sample: 4.195077220355677 ratio: 6.465336941592078
Epoch ended with duration 0:00:11.350273
Train perplexity: 1.0917589671277979
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.3249039053917 Loss (std): 44.12035962159225 Loss ratio: 0.44420238919755195 Tokens per Sec: 4347.501948102464
Mean loss per sample: 104.48426813671945 Std loss per sample: 53.962183087387956 ratio: 0.5164622775246654
Epoch ended with duration 0:00:01.017671
b'BLEU = 2.55, 8.7/2.7/1.8/1.4 (BP=0.933, ratio=0.935, hyp_len=2912, ref_len=3113)\n'
Validation perplexity: 1410549.3867675152
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.55
Epoch 747 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2828967679706693 Loss (std): 0.569080395929869 Loss ratio: 2.011618584447282 Tokens per Sec: 2691.6658072754385
Epoch Step: 10 / 67 Loss (mean): 0.12484051274805097 Loss (std): 0.383666631305461 Loss ratio: 3.0732542093908606 Tokens per Sec: 2885.207659963019
Epoch Step: 15 / 67 Loss (mean): 0.20095269841112895 Loss (std): 0.4246217336408924 Loss ratio: 2.1130432036904483 Tokens per Sec: 2396.91391972892
Epoch Step: 20 / 67 Loss (mean): 0.1774443622562103 Loss (std): 0.47442992913222953 Loss ratio: 2.6736827425782312 Tokens per Sec: 2450.050579348916
Epoch Step: 25 / 67 Loss (mean): 1.163298755818687 Loss (std): 1.9849044359723855 Loss ratio: 1.706272293376161 Tokens per Sec: 3456.722891500507
Epoch Step: 30 / 67 Loss (mean): 0.21530657739594972 Loss (std): 0.5270142162286312 Loss ratio: 2.447738580969822 Tokens per Sec: 2828.0560001850804
Epoch Step: 35 / 67 Loss (mean): 0.2651995773803719 Loss (std): 0.7884584499875296 Loss ratio: 2.973075816243308 Tokens per Sec: 2796.263488058468
Epoch Step: 40 / 67 Loss (mean): 0.44987401350954315 Loss (std): 0.8179753140862428 Loss ratio: 1.8182319705578884 Tokens per Sec: 2896.2097794606243
Epoch Step: 45 / 67 Loss (mean): 0.2722247804167637 Loss (std): 0.7317858835534822 Loss ratio: 2.68816777970452 Tokens per Sec: 2519.3148793702353
Epoch Step: 50 / 67 Loss (mean): 1.8761842438291296 Loss (std): 8.210610805176836 Loss ratio: 4.376228417961602 Tokens per Sec: 2663.8656404885983
Epoch Step: 55 / 67 Loss (mean): 0.4153888543478388 Loss (std): 0.9802589974140383 Loss ratio: 2.359858689403322 Tokens per Sec: 3290.258285906747
Epoch Step: 60 / 67 Loss (mean): 0.2122648116092023 Loss (std): 0.4133414308439416 Loss ratio: 1.9472913466455222 Tokens per Sec: 2403.3238547339606
Epoch Step: 65 / 67 Loss (mean): 0.3703107572068802 Loss (std): 0.8882336628594752 Loss ratio: 2.3986169604121135 Tokens per Sec: 3609.03602842982
Mean loss per sample: 0.5050161382118984 Std loss per sample: 3.9096510961123774 ratio: 7.741635960298633
Epoch ended with duration 0:00:11.314825
Train perplexity: 1.070717023371236
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) over[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.72793185710907 Loss (std): 44.621406466975024 Loss ratio: 0.45196334641706554 Tokens per Sec: 4320.403629800435
Mean loss per sample: 107.32637668614748 Std loss per sample: 54.598807641701356 ratio: 0.5087175149997248
Epoch ended with duration 0:00:01.035109
b'BLEU = 2.84, 8.7/3.1/2.1/1.8 (BP=0.892, ratio=0.898, hyp_len=2795, ref_len=3113)\n'
Validation perplexity: 2073288.263376066
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.84
Epoch 748 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.0693167077479302 Loss (std): 0.10967345171671704 Loss ratio: 1.5822080315115932 Tokens per Sec: 2438.927208784498
Epoch Step: 10 / 67 Loss (mean): 0.42885226505313767 Loss (std): 0.8251220686179583 Loss ratio: 1.9240240424420287 Tokens per Sec: 3177.8339221010865
Epoch Step: 15 / 67 Loss (mean): 0.047373123156376096 Loss (std): 0.08888388240966902 Loss ratio: 1.876251268388368 Tokens per Sec: 3443.0308334316023
Epoch Step: 20 / 67 Loss (mean): 0.18768108275457962 Loss (std): 0.8349926827470423 Loss ratio: 4.448997578721969 Tokens per Sec: 2479.111586731692
Epoch Step: 25 / 67 Loss (mean): 0.30471274057299524 Loss (std): 0.700375449269656 Loss ratio: 2.2984777333321844 Tokens per Sec: 3439.8808471013454
Epoch Step: 30 / 67 Loss (mean): 1.0698103079630528 Loss (std): 7.345734022018621 Loss ratio: 6.866389272323515 Tokens per Sec: 2852.1122933421434
Epoch Step: 35 / 67 Loss (mean): 0.13598221894790186 Loss (std): 0.37419726592088043 Loss ratio: 2.7518102647247185 Tokens per Sec: 2748.360317578843
Epoch Step: 40 / 67 Loss (mean): 0.4179214047089772 Loss (std): 0.9613609932733249 Loss ratio: 2.300339208380045 Tokens per Sec: 2723.3480337480964
Epoch Step: 45 / 67 Loss (mean): 0.3716647643559554 Loss (std): 1.4637628811541923 Loss ratio: 3.938395622976783 Tokens per Sec: 2828.983246354751
Epoch Step: 50 / 67 Loss (mean): 1.3928488728324737 Loss (std): 2.3745702305670133 Loss ratio: 1.7048297750624788 Tokens per Sec: 2540.6151299589087
Epoch Step: 55 / 67 Loss (mean): 0.24634828217403992 Loss (std): 0.7084539661252828 Loss ratio: 2.8758226356324856 Tokens per Sec: 2677.9819368020244
Epoch Step: 60 / 67 Loss (mean): 0.25878525745702063 Loss (std): 0.7320119486240655 Loss ratio: 2.82864625217547 Tokens per Sec: 2518.266880657897
Epoch Step: 65 / 67 Loss (mean): 0.3028392642190738 Loss (std): 0.7615702729552856 Loss ratio: 2.514767280653429 Tokens per Sec: 2720.5120781064147
Mean loss per sample: 0.33743988015721715 Std loss per sample: 2.123437336308151 ratio: 6.292787133870534
Epoch ended with duration 0:00:11.315007
Train perplexity: 1.0467137763236767
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to method_4 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.72546717524529 Loss (std): 45.00470001567812 Loss ratio: 0.4512859281630878 Tokens per Sec: 4312.400488686831
Mean loss per sample: 107.68855652689446 Std loss per sample: 54.74540968016167 ratio: 0.5083679403436835
Epoch ended with duration 0:00:01.035696
b'BLEU = 2.82, 9.0/3.1/2.0/1.6 (BP=0.911, ratio=0.915, hyp_len=2849, ref_len=3113)\n'
Validation perplexity: 2177587.767768796
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.82
Epoch 749 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1653965368000172 Loss (std): 0.5505853639217673 Loss ratio: 3.328880849467158 Tokens per Sec: 2720.7260338256096
Epoch Step: 10 / 67 Loss (mean): 0.12218488513553893 Loss (std): 0.29030898189561677 Loss ratio: 2.375981133620405 Tokens per Sec: 2405.8607060783534
Epoch Step: 15 / 67 Loss (mean): 0.23962372306050383 Loss (std): 0.5553831999053941 Loss ratio: 2.3177304517765234 Tokens per Sec: 3483.663510215585
Epoch Step: 20 / 67 Loss (mean): 0.28236921145662564 Loss (std): 0.6573335419495361 Loss ratio: 2.3279221504307253 Tokens per Sec: 2629.8601173316342
Epoch Step: 25 / 67 Loss (mean): 0.27741299788431206 Loss (std): 0.7221394843762938 Loss ratio: 2.6031205815289287 Tokens per Sec: 2798.795159498686
Epoch Step: 30 / 67 Loss (mean): 0.4820340616743124 Loss (std): 1.2641903091476627 Loss ratio: 2.6226161378649966 Tokens per Sec: 2947.825045568143
Epoch Step: 35 / 67 Loss (mean): 0.15553307489335566 Loss (std): 0.430147824625463 Loss ratio: 2.7656357010906034 Tokens per Sec: 2749.7998412072325
Epoch Step: 40 / 67 Loss (mean): 0.18725267133231682 Loss (std): 0.4470489611374998 Loss ratio: 2.387410326147621 Tokens per Sec: 3049.168410797435
Epoch Step: 45 / 67 Loss (mean): 5.83359396366086 Loss (std): 16.432400123666874 Loss ratio: 2.816857022622595 Tokens per Sec: 2761.488514417636
Epoch Step: 50 / 67 Loss (mean): 0.2519666984662763 Loss (std): 0.6753414071831882 Loss ratio: 2.680280415205652 Tokens per Sec: 2440.6187515138204
Epoch Step: 55 / 67 Loss (mean): 0.2805171373356643 Loss (std): 0.8829362872435076 Loss ratio: 3.1475306486783157 Tokens per Sec: 2634.634209972964
Epoch Step: 60 / 67 Loss (mean): 0.20047747942135175 Loss (std): 0.4708063533480104 Loss ratio: 2.348425143347385 Tokens per Sec: 2847.8470387556476
Epoch Step: 65 / 67 Loss (mean): 0.6773747915076456 Loss (std): 4.7605060460627335 Loss ratio: 7.0278760085936876 Tokens per Sec: 2980.3289795102473
Mean loss per sample: 0.4793629270997381 Std loss per sample: 3.5445849830379057 ratio: 7.394366111045558
Epoch ended with duration 0:00:11.329352
Train perplexity: 1.0670071434677617
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to method_4 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.06154173612595 Loss (std): 43.541211699295786 Loss ratio: 0.4351443216227777 Tokens per Sec: 4443.817357488785
Mean loss per sample: 104.98489970768817 Std loss per sample: 53.604719587077454 ratio: 0.5105945687077883
Epoch ended with duration 0:00:01.022565
b'BLEU = 2.80, 8.5/3.0/2.0/1.6 (BP=0.935, ratio=0.937, hyp_len=2917, ref_len=3113)\n'
Validation perplexity: 1509568.4413254391
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.8
Epoch 750 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.14524069334220258 Loss (std): 0.37847543830293184 Loss ratio: 2.6058498454782457 Tokens per Sec: 2558.5519313969407
Epoch Step: 10 / 67 Loss (mean): 0.0740538910667965 Loss (std): 0.13223007719926302 Loss ratio: 1.7855925636640984 Tokens per Sec: 2655.0682825195313
Epoch Step: 15 / 67 Loss (mean): 0.2268954308128741 Loss (std): 0.45792511329690666 Loss ratio: 2.0182209560428217 Tokens per Sec: 2483.593836885887
Epoch Step: 20 / 67 Loss (mean): 0.12608058114483356 Loss (std): 0.19892590818493752 Loss ratio: 1.5777680145400326 Tokens per Sec: 2454.8306545205623
Epoch Step: 25 / 67 Loss (mean): 0.19941663902864093 Loss (std): 0.5204953061436759 Loss ratio: 2.610089652894614 Tokens per Sec: 2460.5813480183133
Epoch Step: 30 / 67 Loss (mean): 0.4301243764082301 Loss (std): 1.0682642208974673 Loss ratio: 2.483617017519556 Tokens per Sec: 2866.9518449600137
Epoch Step: 35 / 67 Loss (mean): 0.3485639503469429 Loss (std): 0.8907341069253023 Loss ratio: 2.5554395571851614 Tokens per Sec: 3470.8780166157485
Epoch Step: 40 / 67 Loss (mean): 0.14869407771880105 Loss (std): 0.339400156226638 Loss ratio: 2.282539839068008 Tokens per Sec: 2991.8768001665694
Epoch Step: 45 / 67 Loss (mean): 0.37758607072828454 Loss (std): 0.9762447073414198 Loss ratio: 2.585489198418914 Tokens per Sec: 2833.1229542530027
Epoch Step: 50 / 67 Loss (mean): 0.4100579540427134 Loss (std): 0.6889473136697749 Loss ratio: 1.6801218141911989 Tokens per Sec: 2893.479485420084
Epoch Step: 55 / 67 Loss (mean): 1.248123012832366 Loss (std): 6.541113532513867 Loss ratio: 5.240760297873297 Tokens per Sec: 2951.7317454021218
Epoch Step: 60 / 67 Loss (mean): 0.166411876130951 Loss (std): 0.4241883152118009 Loss ratio: 2.549026698539252 Tokens per Sec: 3066.9322087515734
Epoch Step: 65 / 67 Loss (mean): 0.9144620278511866 Loss (std): 1.2360039600503048 Loss ratio: 1.3516186811547344 Tokens per Sec: 3042.5123498128814
Mean loss per sample: 0.33377601129304557 Std loss per sample: 1.8857604025408727 ratio: 5.649778110881762
Epoch ended with duration 0:00:11.280214
Train perplexity: 1.0461950275275624
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to start[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.74850437045097 Loss (std): 45.16950865283456 Loss ratio: 0.4483392476651251 Tokens per Sec: 4427.810186152414
Mean loss per sample: 104.82289749973255 Std loss per sample: 54.56117303412537 ratio: 0.5205081555226478
Epoch ended with duration 0:00:01.008245
b'BLEU = 2.45, 8.4/2.7/1.8/1.3 (BP=0.907, ratio=0.911, hyp_len=2836, ref_len=3113)\n'
Validation perplexity: 1476788.2208736972
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.45
Model saved checkpoint_commit_msg_generator!
Epoch 751 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1510856288678042 Loss (std): 0.47824117311828873 Loss ratio: 3.1653650760969247 Tokens per Sec: 2371.6650906762225
Epoch Step: 10 / 67 Loss (mean): 0.37156997286024307 Loss (std): 0.841845245507786 Loss ratio: 2.2656439082724953 Tokens per Sec: 2624.976838309972
Epoch Step: 15 / 67 Loss (mean): 0.15961659472213796 Loss (std): 0.2912385731904762 Loss ratio: 1.8246133724220028 Tokens per Sec: 2841.6979124171703
Epoch Step: 20 / 67 Loss (mean): 1.2447568185416458 Loss (std): 6.656845840695704 Loss ratio: 5.3479087172182345 Tokens per Sec: 3271.0783641579314
Epoch Step: 25 / 67 Loss (mean): 0.24100750520665315 Loss (std): 0.5350593137277928 Loss ratio: 2.2200939894755702 Tokens per Sec: 2719.307217078827
Epoch Step: 30 / 67 Loss (mean): 0.21660272404369607 Loss (std): 0.40377288499024444 Loss ratio: 1.864117299414895 Tokens per Sec: 2655.970608873245
Epoch Step: 35 / 67 Loss (mean): 0.17984028481578207 Loss (std): 0.5097008245462213 Loss ratio: 2.8341860393978426 Tokens per Sec: 2734.809513737864
Epoch Step: 40 / 67 Loss (mean): 0.19961674462683732 Loss (std): 0.4367840437438317 Loss ratio: 2.188113249518991 Tokens per Sec: 2896.8038735205178
Epoch Step: 45 / 67 Loss (mean): 0.22120348928456224 Loss (std): 0.48570550674768925 Loss ratio: 2.195740710594598 Tokens per Sec: 2762.3447846666427
Epoch Step: 50 / 67 Loss (mean): 0.7628980802437582 Loss (std): 1.2969269144340176 Loss ratio: 1.7000002333465418 Tokens per Sec: 3099.3468102550437
Epoch Step: 55 / 67 Loss (mean): 0.2281613410832506 Loss (std): 0.5877041535971872 Loss ratio: 2.5758270476800367 Tokens per Sec: 3747.2010828176594
Epoch Step: 60 / 67 Loss (mean): 0.2857340373191164 Loss (std): 1.1750829035156736 Loss ratio: 4.112505862237565 Tokens per Sec: 3017.321819620267
Epoch Step: 65 / 67 Loss (mean): 0.08090981735313107 Loss (std): 0.21143023959575558 Loss ratio: 2.6131592742691265 Tokens per Sec: 2197.2516117828573
Mean loss per sample: 0.5349763676973547 Std loss per sample: 4.65494141440394 ratio: 8.701209428072008
Epoch ended with duration 0:00:11.343178
Train perplexity: 1.075066101916959
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.83876329660416 Loss (std): 45.11737696431977 Loss ratio: 0.44742096679243126 Tokens per Sec: 4454.564498999179
Mean loss per sample: 105.50260376101207 Std loss per sample: 54.13358390401711 ratio: 0.5131018759180793
Epoch ended with duration 0:00:01.022080
b'BLEU = 2.57, 8.5/2.9/1.8/1.4 (BP=0.931, ratio=0.933, hyp_len=2905, ref_len=3113)\n'
Validation perplexity: 1619280.6083745465
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.57
Epoch 752 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.11087755934568122 Loss (std): 0.2086659228062684 Loss ratio: 1.8819490980651363 Tokens per Sec: 2472.714472183702
Epoch Step: 10 / 67 Loss (mean): 1.741611715752697 Loss (std): 6.927446963835335 Loss ratio: 3.977607006876043 Tokens per Sec: 2873.6630674142934
Epoch Step: 15 / 67 Loss (mean): 0.14180077196851926 Loss (std): 0.37689238060398156 Loss ratio: 2.6579007671950774 Tokens per Sec: 2709.7378850104933
Epoch Step: 20 / 67 Loss (mean): 0.1849962302953827 Loss (std): 0.45048726168648706 Loss ratio: 2.435115899211546 Tokens per Sec: 2965.0137464076474
Epoch Step: 25 / 67 Loss (mean): 0.07530307949127746 Loss (std): 0.14801733611350137 Loss ratio: 1.9656212881791453 Tokens per Sec: 2993.0793982615855
Epoch Step: 30 / 67 Loss (mean): 0.14679710984546546 Loss (std): 0.5084668769925315 Loss ratio: 3.463739017258574 Tokens per Sec: 3287.906449126735
Epoch Step: 35 / 67 Loss (mean): 0.10762984881694138 Loss (std): 0.3387564136113436 Loss ratio: 3.147420695419782 Tokens per Sec: 2585.272472418356
Epoch Step: 40 / 67 Loss (mean): 6.022376148686817 Loss (std): 16.032671053880144 Loss ratio: 2.662183606279073 Tokens per Sec: 3088.190312192363
Epoch Step: 45 / 67 Loss (mean): 0.4006747956027539 Loss (std): 0.9761044048986061 Loss ratio: 2.4361512518655095 Tokens per Sec: 2672.361836971904
Epoch Step: 50 / 67 Loss (mean): 0.511658473244097 Loss (std): 1.1828083564925667 Loss ratio: 2.3117145876489453 Tokens per Sec: 2803.4310853060183
Epoch Step: 55 / 67 Loss (mean): 0.10607890686696919 Loss (std): 0.5263052510841065 Loss ratio: 4.96145055250364 Tokens per Sec: 2453.870209020152
Epoch Step: 60 / 67 Loss (mean): 0.8978294374442157 Loss (std): 3.8208025352742627 Loss ratio: 4.255599533638212 Tokens per Sec: 2658.0147092413326
Epoch Step: 65 / 67 Loss (mean): 0.23143833636629552 Loss (std): 0.760361881775828 Loss ratio: 3.2853756802520806 Tokens per Sec: 2748.089221923732
Mean loss per sample: 0.5423738660635864 Std loss per sample: 3.6834358051040557 ratio: 6.791322435642981
Epoch ended with duration 0:00:11.312691
Train perplexity: 1.076142652109297
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.3605109155178 Loss (std): 45.05183461605023 Loss ratio: 0.44890001261526347 Tokens per Sec: 4466.179144259682
Mean loss per sample: 105.58692958801375 Std loss per sample: 53.90476089754777 ratio: 0.5105249400458658
Epoch ended with duration 0:00:01.017760
b'BLEU = 2.90, 8.9/3.1/2.0/1.6 (BP=0.944, ratio=0.945, hyp_len=2943, ref_len=3113)\n'
Validation perplexity: 1637891.3325552118
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.9
Epoch 753 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.560924212955797 Loss (std): 3.7306335563829367 Loss ratio: 6.650869173081899 Tokens per Sec: 2285.367024998187
Epoch Step: 10 / 67 Loss (mean): 3.0780174703422745 Loss (std): 10.851577747020428 Loss ratio: 3.525508822343928 Tokens per Sec: 3058.204148264288
Epoch Step: 15 / 67 Loss (mean): 0.17972711251604778 Loss (std): 0.43940884824531773 Loss ratio: 2.4448667877312227 Tokens per Sec: 2874.078994723051
Epoch Step: 20 / 67 Loss (mean): 0.3471943960566932 Loss (std): 0.6875859730773096 Loss ratio: 1.9804063109504624 Tokens per Sec: 3523.2954553500704
Epoch Step: 25 / 67 Loss (mean): 0.252663127845949 Loss (std): 0.7399661552081973 Loss ratio: 2.9286669626735615 Tokens per Sec: 2356.025111525302
Epoch Step: 30 / 67 Loss (mean): 0.5811473009971451 Loss (std): 1.9952879039133282 Loss ratio: 3.433360011291062 Tokens per Sec: 2537.755302290701
Epoch Step: 35 / 67 Loss (mean): 0.26579919059440726 Loss (std): 0.4880938399477446 Loss ratio: 1.8363255315270877 Tokens per Sec: 2687.3883228177588
Epoch Step: 40 / 67 Loss (mean): 0.15592056294190115 Loss (std): 0.4092490292286598 Loss ratio: 2.624727755640245 Tokens per Sec: 2855.505625021485
Epoch Step: 45 / 67 Loss (mean): 0.7229266753147385 Loss (std): 3.542070537560183 Loss ratio: 4.899626280933791 Tokens per Sec: 2486.793300155723
Epoch Step: 50 / 67 Loss (mean): 0.19797642050070863 Loss (std): 0.38881731015180704 Loss ratio: 1.9639576731836876 Tokens per Sec: 2753.2871234213612
Epoch Step: 55 / 67 Loss (mean): 0.05219981481786817 Loss (std): 0.070044443335829 Loss ratio: 1.341852333772122 Tokens per Sec: 3091.6898380162634
Epoch Step: 60 / 67 Loss (mean): 0.11428293937478884 Loss (std): 0.3277717661957687 Loss ratio: 2.868072592365227 Tokens per Sec: 3182.2672977899765
Epoch Step: 65 / 67 Loss (mean): 0.17836367647123552 Loss (std): 0.3867076566079965 Loss ratio: 2.1680852528870154 Tokens per Sec: 2739.552981245674
Mean loss per sample: 0.47650583793509393 Std loss per sample: 3.047648643189318 ratio: 6.395826452821856
Epoch ended with duration 0:00:11.383704
Train perplexity: 1.0665947573253907
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.48421561717987 Loss (std): 45.08633329621349 Loss ratio: 0.4486907025077583 Tokens per Sec: 4318.424762028103
Mean loss per sample: 107.03235696872972 Std loss per sample: 54.487588785787224 ratio: 0.5090758563945871
Epoch ended with duration 0:00:01.035673
b'BLEU = 2.84, 8.6/3.0/2.1/1.7 (BP=0.912, ratio=0.916, hyp_len=2851, ref_len=3113)\n'
Validation perplexity: 1992302.3740102763
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.84
Epoch 754 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1864802439918094 Loss (std): 0.4580225370271095 Loss ratio: 2.4561450973177985 Tokens per Sec: 3097.0600510571285
Epoch Step: 10 / 67 Loss (mean): 0.09213919267358506 Loss (std): 0.14134186660350634 Loss ratio: 1.5340037447932509 Tokens per Sec: 2593.8890994880585
Epoch Step: 15 / 67 Loss (mean): 0.05160324659976011 Loss (std): 0.0850747603291705 Loss ratio: 1.64863193568069 Tokens per Sec: 2675.3956948251243
Epoch Step: 20 / 67 Loss (mean): 0.12842407376865594 Loss (std): 0.3148306175835603 Loss ratio: 2.4514922190577635 Tokens per Sec: 2678.5606483530664
Epoch Step: 25 / 67 Loss (mean): 0.11849125386197557 Loss (std): 0.39512375591483373 Loss ratio: 3.3346238058641298 Tokens per Sec: 3088.796987777694
Epoch Step: 30 / 67 Loss (mean): 2.1346776735990716 Loss (std): 14.502814258421934 Loss ratio: 6.793912934860163 Tokens per Sec: 2396.419542375842
Epoch Step: 35 / 67 Loss (mean): 2.0613282381236786 Loss (std): 6.485827332755557 Loss ratio: 3.146431127659355 Tokens per Sec: 2753.7692287911127
Epoch Step: 40 / 67 Loss (mean): 0.20467805571661302 Loss (std): 0.5425935182665618 Loss ratio: 2.650960877886243 Tokens per Sec: 2651.339435649943
Epoch Step: 45 / 67 Loss (mean): 0.12402107767593407 Loss (std): 0.2325214903198667 Loss ratio: 1.8748546188853739 Tokens per Sec: 2802.3512556086457
Epoch Step: 50 / 67 Loss (mean): 0.34175929332678834 Loss (std): 0.9727478069181423 Loss ratio: 2.8462951144623485 Tokens per Sec: 3245.823976226875
Epoch Step: 55 / 67 Loss (mean): 0.27078053500463284 Loss (std): 0.6608465396110684 Loss ratio: 2.440524536225478 Tokens per Sec: 3105.8681623454954
Epoch Step: 60 / 67 Loss (mean): 0.6168576991731243 Loss (std): 1.3224603485712079 Loss ratio: 2.1438661628831395 Tokens per Sec: 3079.1876231989263
Epoch Step: 65 / 67 Loss (mean): 0.2108529285271743 Loss (std): 0.5197977216918183 Loss ratio: 2.4652146181826815 Tokens per Sec: 2468.539682776089
Mean loss per sample: 0.5775930389462237 Std loss per sample: 4.303811811221436 ratio: 7.45128753468606
Epoch ended with duration 0:00:11.329566
Train perplexity: 1.0812828640507588
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the command print[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 121.64930135011673 Loss (std): 46.51569025803058 Loss ratio: 0.38237531775176076 Tokens per Sec: 4348.857093172886
Mean loss per sample: 106.53515798149661 Std loss per sample: 53.23891095486282 ratio: 0.4997309053984745
Epoch ended with duration 0:00:01.014760
b'BLEU = 2.57, 8.4/2.8/1.7/1.3 (BP=0.966, ratio=0.967, hyp_len=3010, ref_len=3113)\n'
Validation perplexity: 1862484.9177378053
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.57
Epoch 755 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2397800666076364 Loss (std): 0.5937727967704889 Loss ratio: 2.4763225949974723 Tokens per Sec: 2880.7338717290836
Epoch Step: 10 / 67 Loss (mean): 2.123272860656016 Loss (std): 8.72874215152307 Loss ratio: 4.110984656407372 Tokens per Sec: 2349.176337939393
Epoch Step: 15 / 67 Loss (mean): 0.5581399645634519 Loss (std): 1.0636864427891628 Loss ratio: 1.9057700761871137 Tokens per Sec: 3480.0618468588837
Epoch Step: 20 / 67 Loss (mean): 0.5591528112745436 Loss (std): 1.1624468277449456 Loss ratio: 2.0789430086119784 Tokens per Sec: 3146.1495684285237
Epoch Step: 25 / 67 Loss (mean): 1.2729550544245285 Loss (std): 6.730097807751733 Loss ratio: 5.286987772552774 Tokens per Sec: 3402.483670911576
Epoch Step: 30 / 67 Loss (mean): 0.30902628811509203 Loss (std): 1.0547240429581792 Loss ratio: 3.4130560522584528 Tokens per Sec: 2723.8686941798255
Epoch Step: 35 / 67 Loss (mean): 0.347995981063832 Loss (std): 0.9157575811862665 Loss ratio: 2.631517692781318 Tokens per Sec: 2815.868477387244
Epoch Step: 40 / 67 Loss (mean): 0.3523667667795962 Loss (std): 0.7305309270897051 Loss ratio: 2.073211766723304 Tokens per Sec: 2968.6732051270587
Epoch Step: 45 / 67 Loss (mean): 0.17274014141366933 Loss (std): 0.41920332752563033 Loss ratio: 2.426785830409525 Tokens per Sec: 2361.4107676271874
Epoch Step: 50 / 67 Loss (mean): 0.566059116942597 Loss (std): 0.8110881601409277 Loss ratio: 1.4328682921348983 Tokens per Sec: 2862.819992042108
Epoch Step: 55 / 67 Loss (mean): 0.10395788543337403 Loss (std): 0.3706623358701644 Loss ratio: 3.5655047649821583 Tokens per Sec: 2834.3398858223422
Epoch Step: 60 / 67 Loss (mean): 0.20671158532968548 Loss (std): 0.4099275669158435 Loss ratio: 1.9830894638152365 Tokens per Sec: 2517.03998325817
Epoch Step: 65 / 67 Loss (mean): 1.8651471048308395 Loss (std): 10.07427477365922 Loss ratio: 5.401329872354981 Tokens per Sec: 2532.8393420343473
Mean loss per sample: 0.4686265203943091 Std loss per sample: 3.3937973773421186 ratio: 7.242008784493308
Epoch ended with duration 0:00:11.362935
Train perplexity: 1.0654582991565644
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.07102462649345 Loss (std): 44.994150742407584 Loss ratio: 0.44962216496078067 Tokens per Sec: 4299.361651010156
Mean loss per sample: 105.52372223401412 Std loss per sample: 55.319093227253205 ratio: 0.5242337178419002
Epoch ended with duration 0:00:01.020947
b'BLEU = 2.88, 9.0/3.1/2.1/1.7 (BP=0.923, ratio=0.925, hyp_len=2881, ref_len=3113)\n'
Validation perplexity: 1623921.5161392952
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.88
Model saved checkpoint_commit_msg_generator!
Epoch 756 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.16635585872131742 Loss (std): 0.4291220869558574 Loss ratio: 2.579542976449847 Tokens per Sec: 2624.8644217472447
Epoch Step: 10 / 67 Loss (mean): 0.09535610499369795 Loss (std): 0.17590238792363327 Loss ratio: 1.8446893141792924 Tokens per Sec: 2727.588506832684
Epoch Step: 15 / 67 Loss (mean): 1.4653582522932993 Loss (std): 5.991088790384276 Loss ratio: 4.08848060261589 Tokens per Sec: 2889.584709190618
Epoch Step: 20 / 67 Loss (mean): 0.254308542025683 Loss (std): 0.5391119222495234 Loss ratio: 2.1199127561947084 Tokens per Sec: 2614.179775316538
Epoch Step: 25 / 67 Loss (mean): 0.1681456877522578 Loss (std): 0.37297605993152694 Loss ratio: 2.218172020450871 Tokens per Sec: 2744.9417070766804
Epoch Step: 30 / 67 Loss (mean): 0.543389252511588 Loss (std): 1.1216460771156174 Loss ratio: 2.0641668415988734 Tokens per Sec: 3367.7162705747673
Epoch Step: 35 / 67 Loss (mean): 0.12616444345894706 Loss (std): 0.4027084832280693 Loss ratio: 3.1919332593822882 Tokens per Sec: 2206.7709703862697
Epoch Step: 40 / 67 Loss (mean): 0.2767294056020546 Loss (std): 0.4738551966993606 Loss ratio: 1.712341323714542 Tokens per Sec: 3057.999038641734
Epoch Step: 45 / 67 Loss (mean): 0.42375716497463145 Loss (std): 1.297401237575839 Loss ratio: 3.0616620668903827 Tokens per Sec: 2748.579045812587
Epoch Step: 50 / 67 Loss (mean): 0.10997975658210635 Loss (std): 0.22200655862725097 Loss ratio: 2.0186129295668156 Tokens per Sec: 3480.4363115744263
Epoch Step: 55 / 67 Loss (mean): 2.486749835896262 Loss (std): 10.875858125969305 Loss ratio: 4.37352321048791 Tokens per Sec: 2890.613959750723
Epoch Step: 60 / 67 Loss (mean): 0.08566743514711561 Loss (std): 0.1367928633279789 Loss ratio: 1.5967895279351627 Tokens per Sec: 2528.9440450068278
Epoch Step: 65 / 67 Loss (mean): 0.22075114193103218 Loss (std): 0.5875126314730726 Loss ratio: 2.661425106723232 Tokens per Sec: 2728.8387586418094
Mean loss per sample: 0.3232457616110191 Std loss per sample: 2.004615745978069 ratio: 6.201522135935513
Epoch ended with duration 0:00:11.292566
Train perplexity: 1.0447055331810626
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 121.25985760986805 Loss (std): 47.707557183138235 Loss ratio: 0.39343240313400984 Tokens per Sec: 4224.202854670732
Mean loss per sample: 109.70000137095569 Std loss per sample: 54.482539396515925 ratio: 0.4966503073439413
Epoch ended with duration 0:00:01.047599
b'BLEU = 2.84, 8.7/3.0/2.1/1.7 (BP=0.920, ratio=0.923, hyp_len=2872, ref_len=3113)\n'
Validation perplexity: 2859951.138796907
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.84
Epoch 757 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.3342239052950617 Loss (std): 5.73000774668855 Loss ratio: 4.294637297344306 Tokens per Sec: 2851.6709669231946
Epoch Step: 10 / 67 Loss (mean): 0.14400000933528645 Loss (std): 0.59951626534246 Loss ratio: 4.16330712831108 Tokens per Sec: 2505.5644104972516
Epoch Step: 15 / 67 Loss (mean): 0.1280331586444845 Loss (std): 0.33146153055111083 Loss ratio: 2.58887255505033 Tokens per Sec: 2380.230330162876
Epoch Step: 20 / 67 Loss (mean): 0.3296593149025284 Loss (std): 0.8006792093224276 Loss ratio: 2.4288080849745364 Tokens per Sec: 3739.248073931514
Epoch Step: 25 / 67 Loss (mean): 0.33723287198699836 Loss (std): 0.911873493370498 Loss ratio: 2.7039875679902705 Tokens per Sec: 3003.6368457510957
Epoch Step: 30 / 67 Loss (mean): 0.19334938367001087 Loss (std): 0.46399385564530266 Loss ratio: 2.399768992474268 Tokens per Sec: 2445.891344284789
Epoch Step: 35 / 67 Loss (mean): 0.08487079626229388 Loss (std): 0.27852136160604996 Loss ratio: 3.2817102451269275 Tokens per Sec: 2914.3034072794594
Epoch Step: 40 / 67 Loss (mean): 0.1099085535879567 Loss (std): 0.32173041487795057 Loss ratio: 2.9272554717088406 Tokens per Sec: 2916.949375274381
Epoch Step: 45 / 67 Loss (mean): 0.37121002121421043 Loss (std): 0.7875246506636633 Loss ratio: 2.121506978954144 Tokens per Sec: 2633.7030747395133
Epoch Step: 50 / 67 Loss (mean): 0.16587910662747163 Loss (std): 0.627246582422745 Loss ratio: 3.781347724710167 Tokens per Sec: 2782.22381087389
Epoch Step: 55 / 67 Loss (mean): 0.453095606534589 Loss (std): 1.9787690911381264 Loss ratio: 4.367221978320084 Tokens per Sec: 2890.7651314804652
Epoch Step: 60 / 67 Loss (mean): 0.32885309630273696 Loss (std): 0.9364069342472809 Loss ratio: 2.847493135309389 Tokens per Sec: 2618.1320598287193
Epoch Step: 65 / 67 Loss (mean): 0.32278638416119065 Loss (std): 0.974041027790387 Loss ratio: 3.01760258668153 Tokens per Sec: 3121.4194294022336
Mean loss per sample: 0.47294709176124433 Std loss per sample: 3.1636170821622636 ratio: 6.689156434773761
Epoch ended with duration 0:00:11.313827
Train perplexity: 1.066081318404933
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.60361951589584 Loss (std): 44.180210110932435 Loss ratio: 0.443560287524307 Tokens per Sec: 4318.795778177754
Mean loss per sample: 105.88358848996948 Std loss per sample: 53.865542534113466 ratio: 0.5087241875941543
Epoch ended with duration 0:00:01.022354
b'BLEU = 2.52, 8.5/2.7/1.7/1.4 (BP=0.922, ratio=0.925, hyp_len=2879, ref_len=3113)\n'
Validation perplexity: 1705080.3514350895
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.52
Epoch 758 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.20563901234572768 Loss (std): 0.613964890541997 Loss ratio: 2.985644034847713 Tokens per Sec: 2724.40623556198
Epoch Step: 10 / 67 Loss (mean): 0.5149821057984809 Loss (std): 0.8256943858585465 Loss ratio: 1.6033457795165629 Tokens per Sec: 2809.314400601297
Epoch Step: 15 / 67 Loss (mean): 0.5026634489513526 Loss (std): 0.9742122390916196 Loss ratio: 1.9381004151465628 Tokens per Sec: 3128.938693717463
Epoch Step: 20 / 67 Loss (mean): 0.12322593326416609 Loss (std): 0.2640579089468378 Loss ratio: 2.1428761134294887 Tokens per Sec: 2500.3801941132997
Epoch Step: 25 / 67 Loss (mean): 0.08212102004915778 Loss (std): 0.2206311579196465 Loss ratio: 2.686658760297623 Tokens per Sec: 2785.450181362618
Epoch Step: 30 / 67 Loss (mean): 0.3378028885808817 Loss (std): 0.8221079026179299 Loss ratio: 2.4336911566139223 Tokens per Sec: 2914.3278963345156
Epoch Step: 35 / 67 Loss (mean): 0.07206498040613951 Loss (std): 0.1332336329058494 Loss ratio: 1.8487985725518725 Tokens per Sec: 2429.673912904506
Epoch Step: 40 / 67 Loss (mean): 0.2065054770396273 Loss (std): 1.2251421876243722 Loss ratio: 5.932734594682319 Tokens per Sec: 2289.2220451759517
Epoch Step: 45 / 67 Loss (mean): 0.0840479054259049 Loss (std): 0.1970305943934399 Loss ratio: 2.344265373360654 Tokens per Sec: 3019.164400130458
Epoch Step: 50 / 67 Loss (mean): 0.17585181091908453 Loss (std): 0.4392408796961051 Loss ratio: 2.4977899141352315 Tokens per Sec: 3394.8503647891193
Epoch Step: 55 / 67 Loss (mean): 0.2188476554438239 Loss (std): 1.174256169525627 Loss ratio: 5.36563285151139 Tokens per Sec: 2729.9094849060066
Epoch Step: 60 / 67 Loss (mean): 0.18916319261370518 Loss (std): 0.6151391721656339 Loss ratio: 3.251896754681154 Tokens per Sec: 2744.5573549156793
Epoch Step: 65 / 67 Loss (mean): 0.23925282984964724 Loss (std): 0.8481097276392849 Loss ratio: 3.544826316881014 Tokens per Sec: 2944.26623907289
Mean loss per sample: 0.4873404328151761 Std loss per sample: 3.7361220720782056 ratio: 7.666349476681181
Epoch ended with duration 0:00:11.315084
Train perplexity: 1.0681594439170898
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the exception declaration and exception ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.32113337516785 Loss (std): 46.27662013204818 Loss ratio: 0.4612848616750464 Tokens per Sec: 4455.637905246683
Mean loss per sample: 103.93963900260383 Std loss per sample: 53.81383231368998 ratio: 0.5177411893102868
Epoch ended with duration 0:00:01.005211
b'BLEU = 2.61, 8.6/2.9/1.9/1.5 (BP=0.907, ratio=0.911, hyp_len=2835, ref_len=3113)\n'
Validation perplexity: 1310190.1267497444
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.61
Epoch 759 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.14427402545379664 Loss (std): 0.3078477811836938 Loss ratio: 2.1337713439088954 Tokens per Sec: 3073.9607600282206
Epoch Step: 10 / 67 Loss (mean): 0.10631691419439449 Loss (std): 0.26978875580524014 Loss ratio: 2.5375901647403594 Tokens per Sec: 2633.333844804852
Epoch Step: 15 / 67 Loss (mean): 0.24653475733725827 Loss (std): 0.513176457286941 Loss ratio: 2.0815582469165523 Tokens per Sec: 2677.2225802623175
Epoch Step: 20 / 67 Loss (mean): 0.21494406310102931 Loss (std): 0.5778659053160821 Loss ratio: 2.6884478546610056 Tokens per Sec: 2674.326283648073
Epoch Step: 25 / 67 Loss (mean): 0.09241050737364276 Loss (std): 0.34889843988538205 Loss ratio: 3.7755278030742048 Tokens per Sec: 2682.1690752701265
Epoch Step: 30 / 67 Loss (mean): 0.14784962928433742 Loss (std): 0.4824731217146216 Loss ratio: 3.2632690663481614 Tokens per Sec: 2529.4019473868243
Epoch Step: 35 / 67 Loss (mean): 0.17249605989127303 Loss (std): 0.4464960444701368 Loss ratio: 2.5884419896406343 Tokens per Sec: 3400.070752869027
Epoch Step: 40 / 67 Loss (mean): 0.10641928677750911 Loss (std): 0.3371855860995169 Loss ratio: 3.168463126467583 Tokens per Sec: 2338.1719301344247
Epoch Step: 45 / 67 Loss (mean): 0.24925784268725693 Loss (std): 0.46559265534430255 Loss ratio: 1.8679157707726786 Tokens per Sec: 3439.8273646523917
Epoch Step: 50 / 67 Loss (mean): 0.3138075924198347 Loss (std): 1.1753005602257218 Loss ratio: 3.7452903900850143 Tokens per Sec: 2773.9941210202387
Epoch Step: 55 / 67 Loss (mean): 0.17815889941266505 Loss (std): 0.5309977452491386 Loss ratio: 2.98047275213124 Tokens per Sec: 2315.5093013646706
Epoch Step: 60 / 67 Loss (mean): 0.40370678266390314 Loss (std): 1.009164147045279 Loss ratio: 2.499745335924751 Tokens per Sec: 2749.7690576861123
Epoch Step: 65 / 67 Loss (mean): 0.2864211219757635 Loss (std): 0.6422415211554373 Loss ratio: 2.2422980425646917 Tokens per Sec: 3350.059357771359
Mean loss per sample: 0.3477121657651857 Std loss per sample: 2.307310300565065 ratio: 6.635690458191273
Epoch ended with duration 0:00:11.283053
Train perplexity: 1.048169549593209
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope change and exception[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add support for developer provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.9150881767273 Loss (std): 45.25842363640022 Loss ratio: 0.4484802466519329 Tokens per Sec: 4347.005084259654
Mean loss per sample: 107.33409032424088 Std loss per sample: 53.84489113139326 ratio: 0.5016569383383749
Epoch ended with duration 0:00:01.016214
b'BLEU = 2.62, 8.6/2.7/1.7/1.3 (BP=0.973, ratio=0.974, hyp_len=3031, ref_len=3113)\n'
Validation perplexity: 2075456.6796617776
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.62
Epoch 760 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.12832964345443543 Loss (std): 0.344198776485931 Loss ratio: 2.68214550606261 Tokens per Sec: 2890.995186619031
Epoch Step: 10 / 67 Loss (mean): 0.17820390763199612 Loss (std): 0.41191626716835555 Loss ratio: 2.3114884103382978 Tokens per Sec: 2997.7824362472847
Epoch Step: 15 / 67 Loss (mean): 0.19206500334121301 Loss (std): 0.5069902284822088 Loss ratio: 2.63968041893356 Tokens per Sec: 3295.2285621489305
Epoch Step: 20 / 67 Loss (mean): 0.1822906010065708 Loss (std): 0.6431174831120966 Loss ratio: 3.527979388739384 Tokens per Sec: 2540.869987765246
Epoch Step: 25 / 67 Loss (mean): 0.48992653088362204 Loss (std): 1.5391345704160195 Loss ratio: 3.1415619963264003 Tokens per Sec: 2693.826518929884
Epoch Step: 30 / 67 Loss (mean): 0.34298169425164815 Loss (std): 0.8493154708463466 Loss ratio: 2.476270556361523 Tokens per Sec: 2867.093353987724
Epoch Step: 35 / 67 Loss (mean): 0.22869755446208728 Loss (std): 0.5737705845366876 Loss ratio: 2.5088619154071687 Tokens per Sec: 2796.823109946128
Epoch Step: 40 / 67 Loss (mean): 0.16290483401280653 Loss (std): 0.3862757075545776 Loss ratio: 2.3711740041072757 Tokens per Sec: 2874.0741149053724
Epoch Step: 45 / 67 Loss (mean): 0.5772369974547473 Loss (std): 1.5786784052361498 Loss ratio: 2.7348877708759662 Tokens per Sec: 2699.421339339126
Epoch Step: 50 / 67 Loss (mean): 0.4605504236096749 Loss (std): 0.9856831361586009 Loss ratio: 2.14022848667269 Tokens per Sec: 2781.3317818104592
Epoch Step: 55 / 67 Loss (mean): 0.18624920792353805 Loss (std): 0.4573463941175822 Loss ratio: 2.4555615522689322 Tokens per Sec: 2581.158445540729
Epoch Step: 60 / 67 Loss (mean): 0.07465013444561919 Loss (std): 0.13040693048265545 Loss ratio: 1.7469081797522246 Tokens per Sec: 2669.7986164488857
Epoch Step: 65 / 67 Loss (mean): 0.1005437003032057 Loss (std): 0.17739826542102285 Loss ratio: 1.7643896622667543 Tokens per Sec: 3001.709078389499
Mean loss per sample: 0.25689513927253776 Std loss per sample: 1.0208293507775255 ratio: 3.97371999201019
Epoch ended with duration 0:00:11.228896
Train perplexity: 1.0353689524735727
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add support for developer provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 121.28303161263466 Loss (std): 47.019066491161084 Loss ratio: 0.3876805012702442 Tokens per Sec: 4339.403839321619
Mean loss per sample: 106.8684644142746 Std loss per sample: 54.08455125677241 ratio: 0.5060852287267286
Epoch ended with duration 0:00:01.018619
b'BLEU = 2.25, 8.0/2.5/1.5/1.2 (BP=0.923, ratio=0.926, hyp_len=2883, ref_len=3113)\n'
Validation perplexity: 1948540.3719871128
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.25
Model saved checkpoint_commit_msg_generator!
Epoch 761 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5387585401558681 Loss (std): 0.821789388458854 Loss ratio: 1.5253389546662264 Tokens per Sec: 2536.275458047437
Epoch Step: 10 / 67 Loss (mean): 0.12521552089992838 Loss (std): 0.29655379602065196 Loss ratio: 2.3683469420508683 Tokens per Sec: 2926.726263224499
Epoch Step: 15 / 67 Loss (mean): 0.19960431243816856 Loss (std): 0.5749753768073149 Loss ratio: 2.8805759243574713 Tokens per Sec: 3009.4191980442156
Epoch Step: 20 / 67 Loss (mean): 0.031589868326028364 Loss (std): 0.04024993015551719 Loss ratio: 1.2741404851742735 Tokens per Sec: 3029.3517891654
Epoch Step: 25 / 67 Loss (mean): 0.16675452396520996 Loss (std): 0.5477303637952733 Loss ratio: 3.2846506995489158 Tokens per Sec: 3140.317950561832
Epoch Step: 30 / 67 Loss (mean): 0.14088465849272325 Loss (std): 0.34977654292212534 Loss ratio: 2.482715624712193 Tokens per Sec: 2324.4929944361224
Epoch Step: 35 / 67 Loss (mean): 0.05167315948892792 Loss (std): 0.07831556313830781 Loss ratio: 1.5155946319692062 Tokens per Sec: 2563.5586558160926
Epoch Step: 40 / 67 Loss (mean): 0.4693204324321414 Loss (std): 0.9653198016855327 Loss ratio: 2.056845888177066 Tokens per Sec: 3083.1703457523063
Epoch Step: 45 / 67 Loss (mean): 0.25029244257166283 Loss (std): 0.9382302222695136 Loss ratio: 3.7485359630899877 Tokens per Sec: 2577.3954182542307
Epoch Step: 50 / 67 Loss (mean): 0.1790613803177621 Loss (std): 0.6265797727405654 Loss ratio: 3.499245742597526 Tokens per Sec: 2976.4017790960643
Epoch Step: 55 / 67 Loss (mean): 0.11887329284945736 Loss (std): 0.37124262674567343 Loss ratio: 3.1230112151080043 Tokens per Sec: 2871.40792385219
Epoch Step: 60 / 67 Loss (mean): 0.1928583183621413 Loss (std): 0.4581149849836584 Loss ratio: 2.3753965547051448 Tokens per Sec: 3015.7490238379196
Epoch Step: 65 / 67 Loss (mean): 0.1468833575490862 Loss (std): 0.5407993751707977 Loss ratio: 3.6818287939126844 Tokens per Sec: 2857.4007328516186
Mean loss per sample: 0.32505197459216156 Std loss per sample: 2.3118931971506935 ratio: 7.112380104909055
Epoch ended with duration 0:00:11.249889
Train perplexity: 1.0449608696228474
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add support for method_1 provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.33118888735771 Loss (std): 45.17158773549063 Loss ratio: 0.44578168115351435 Tokens per Sec: 4424.4632813090875
Mean loss per sample: 104.81702552647253 Std loss per sample: 54.23589258474255 ratio: 0.5174339980773902
Epoch ended with duration 0:00:01.007771
b'BLEU = 2.32, 8.7/2.6/1.6/1.2 (BP=0.904, ratio=0.908, hyp_len=2828, ref_len=3113)\n'
Validation perplexity: 1475613.5229410813
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.32
Epoch 762 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.17386770303892263 Loss (std): 0.4962103022751797 Loss ratio: 2.853953285183139 Tokens per Sec: 2535.058180341766
Epoch Step: 10 / 67 Loss (mean): 0.1278895868606469 Loss (std): 0.35306117177251867 Loss ratio: 2.7606717672583216 Tokens per Sec: 2780.03266394343
Epoch Step: 15 / 67 Loss (mean): 0.07865522998690722 Loss (std): 0.13560927707776999 Loss ratio: 1.7240973944179327 Tokens per Sec: 3090.4144810240473
Epoch Step: 20 / 67 Loss (mean): 0.2418742857489633 Loss (std): 0.47896043189264714 Loss ratio: 1.9802040155262763 Tokens per Sec: 2552.809975845378
Epoch Step: 25 / 67 Loss (mean): 0.1374729290500909 Loss (std): 0.37036550590146167 Loss ratio: 2.694097728626353 Tokens per Sec: 2995.9940066999516
Epoch Step: 30 / 67 Loss (mean): 2.1952754496751368 Loss (std): 11.942680327138964 Loss ratio: 5.440173955804169 Tokens per Sec: 2533.0780123933027
Epoch Step: 35 / 67 Loss (mean): 0.13981417137529206 Loss (std): 0.309575076818862 Loss ratio: 2.214189547266237 Tokens per Sec: 2509.754299029094
Epoch Step: 40 / 67 Loss (mean): 0.11856110576627543 Loss (std): 0.3882397644065634 Loss ratio: 3.2745963517910925 Tokens per Sec: 2636.77446734768
Epoch Step: 45 / 67 Loss (mean): 0.1575727032386567 Loss (std): 0.44212115460017165 Loss ratio: 2.8058232518264483 Tokens per Sec: 2686.2871471966682
Epoch Step: 50 / 67 Loss (mean): 0.20272714104248735 Loss (std): 0.6694985452946386 Loss ratio: 3.302461337203615 Tokens per Sec: 3027.849236624664
Epoch Step: 55 / 67 Loss (mean): 0.5458562457388325 Loss (std): 0.8154097634457069 Loss ratio: 1.493817776770193 Tokens per Sec: 2914.37777841862
Epoch Step: 60 / 67 Loss (mean): 0.35596329238615 Loss (std): 0.9719919863022096 Loss ratio: 2.730596123512056 Tokens per Sec: 2478.4944853392435
Epoch Step: 65 / 67 Loss (mean): 0.3680974002672883 Loss (std): 1.2312199735714264 Loss ratio: 3.3448211605879172 Tokens per Sec: 3757.447989178744
Mean loss per sample: 0.325937473877083 Std loss per sample: 2.5786884045734393 ratio: 7.9116045599160225
Epoch ended with duration 0:00:11.266476
Train perplexity: 1.045086071586172
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to start[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.06041967868805 Loss (std): 45.029095803579814 Loss ratio: 0.45001905796693953 Tokens per Sec: 4335.948624413113
Mean loss per sample: 105.86778780784397 Std loss per sample: 53.74146591127195 ratio: 0.5076281182791479
Epoch ended with duration 0:00:01.017081
b'BLEU = 2.87, 8.7/3.1/2.1/1.7 (BP=0.919, ratio=0.922, hyp_len=2871, ref_len=3113)\n'
Validation perplexity: 1701433.210906659
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.87
Epoch 763 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.15797692037131128 Loss (std): 0.4895339044816053 Loss ratio: 3.0987684994174947 Tokens per Sec: 2458.9148211959077
Epoch Step: 10 / 67 Loss (mean): 0.07774606177508758 Loss (std): 0.20552384556460365 Loss ratio: 2.643527413120497 Tokens per Sec: 2600.917635998671
Epoch Step: 15 / 67 Loss (mean): 0.06991835616918252 Loss (std): 0.13670019483206086 Loss ratio: 1.9551402853534672 Tokens per Sec: 2890.7856103632525
Epoch Step: 20 / 67 Loss (mean): 0.49398557561653433 Loss (std): 1.309787315711316 Loss ratio: 2.6514687480026002 Tokens per Sec: 3581.3826042369487
Epoch Step: 25 / 67 Loss (mean): 0.20113012204296865 Loss (std): 0.44687616178010825 Loss ratio: 2.2218261354439957 Tokens per Sec: 3229.2429142906044
Epoch Step: 30 / 67 Loss (mean): 0.05853288145840452 Loss (std): 0.09311105489105378 Loss ratio: 1.5907478424280497 Tokens per Sec: 2827.409240957915
Epoch Step: 35 / 67 Loss (mean): 0.20268567770654045 Loss (std): 0.7309681904332209 Loss ratio: 3.6064126420000786 Tokens per Sec: 3199.619857327678
Epoch Step: 40 / 67 Loss (mean): 0.3085699208495498 Loss (std): 0.8520113926315884 Loss ratio: 2.7611615230863857 Tokens per Sec: 2484.5815564603854
Epoch Step: 45 / 67 Loss (mean): 0.09386029605593649 Loss (std): 0.21129497071428574 Loss ratio: 2.2511645455322613 Tokens per Sec: 2735.945773992125
Epoch Step: 50 / 67 Loss (mean): 0.09170346179689659 Loss (std): 0.29088029471613486 Loss ratio: 3.171966346923435 Tokens per Sec: 2593.948372976877
Epoch Step: 55 / 67 Loss (mean): 0.23509790359912586 Loss (std): 0.6418364030684074 Loss ratio: 2.7300813543740756 Tokens per Sec: 2928.5040809817424
Epoch Step: 60 / 67 Loss (mean): 0.13641841022581502 Loss (std): 0.4576437398505874 Loss ratio: 3.3547065905037616 Tokens per Sec: 2462.799664087498
Epoch Step: 65 / 67 Loss (mean): 0.2792508578475008 Loss (std): 0.5282838995878143 Loss ratio: 1.8917897107278026 Tokens per Sec: 2720.0711383081143
Mean loss per sample: 0.6494159193714892 Std loss per sample: 5.665907588141785 ratio: 8.724620723226653
Epoch ended with duration 0:00:11.313328
Train perplexity: 1.0918415745207064
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the time unit test[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.44030511379242 Loss (std): 44.8287380164831 Loss ratio: 0.4463222006911968 Tokens per Sec: 4463.403236111954
Mean loss per sample: 105.08172817114496 Std loss per sample: 54.23378029948123 ratio: 0.5161104717572929
Epoch ended with duration 0:00:01.016584
b'BLEU = 2.80, 8.4/2.9/2.0/1.6 (BP=0.943, ratio=0.945, hyp_len=2941, ref_len=3113)\n'
Validation perplexity: 1529507.5191666428
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.8
Epoch 764 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.23354184148774948 Loss (std): 1.0296435844144811 Loss ratio: 4.408818470622925 Tokens per Sec: 2595.4493326691636
Epoch Step: 10 / 67 Loss (mean): 0.157178417223804 Loss (std): 0.47907870842359196 Loss ratio: 3.047992955301484 Tokens per Sec: 2463.2741576665394
Epoch Step: 15 / 67 Loss (mean): 0.315709460358903 Loss (std): 0.5503636605427483 Loss ratio: 1.7432599578013501 Tokens per Sec: 2596.058105109282
Epoch Step: 20 / 67 Loss (mean): 0.09446601472427574 Loss (std): 0.13368050870924666 Loss ratio: 1.4151174800739599 Tokens per Sec: 2536.512045256048
Epoch Step: 25 / 67 Loss (mean): 4.956202951565501 Loss (std): 18.435555366240248 Loss ratio: 3.7196933915745043 Tokens per Sec: 2818.3900088010187
Epoch Step: 30 / 67 Loss (mean): 0.13660716123922612 Loss (std): 0.21384833468158054 Loss ratio: 1.5654255072842769 Tokens per Sec: 2800.4122954454056
Epoch Step: 35 / 67 Loss (mean): 0.3102127962229133 Loss (std): 0.6857711504699948 Loss ratio: 2.2106475258912663 Tokens per Sec: 2500.4064083587105
Epoch Step: 40 / 67 Loss (mean): 0.15076257874898147 Loss (std): 0.41917842207756967 Loss ratio: 2.780387716606377 Tokens per Sec: 2297.8663182425857
Epoch Step: 45 / 67 Loss (mean): 0.9626440157080651 Loss (std): 4.255887186208769 Loss ratio: 4.421039467095617 Tokens per Sec: 3145.5929291227794
Epoch Step: 50 / 67 Loss (mean): 0.47226447869979893 Loss (std): 0.9746048268663194 Loss ratio: 2.0636843777654508 Tokens per Sec: 2887.180041865284
Epoch Step: 55 / 67 Loss (mean): 0.45397901259366336 Loss (std): 1.246597892145868 Loss ratio: 2.7459372736722587 Tokens per Sec: 3431.9030368674175
Epoch Step: 60 / 67 Loss (mean): 0.13862779066994335 Loss (std): 0.274824469829612 Loss ratio: 1.9824630292488548 Tokens per Sec: 3221.6305513646807
Epoch Step: 65 / 67 Loss (mean): 0.2401288865657989 Loss (std): 0.7870272643373054 Loss ratio: 3.277520150086767 Tokens per Sec: 2900.9868403213404
Mean loss per sample: 0.6776451983784955 Std loss per sample: 4.685568405726689 ratio: 6.914486248760501
Epoch ended with duration 0:00:11.402423
Train perplexity: 1.0960197428489726
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.26020389795303 Loss (std): 45.46080344996187 Loss ratio: 0.44895034475514084 Tokens per Sec: 4458.261096277598
Mean loss per sample: 104.12350764284369 Std loss per sample: 53.29214892858301 ratio: 0.511816688997662
Epoch ended with duration 0:00:01.004887
b'BLEU = 2.29, 8.5/2.5/1.5/1.2 (BP=0.918, ratio=0.921, hyp_len=2867, ref_len=3113)\n'
Validation perplexity: 1343246.9174187207
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.29
Epoch 765 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.3999898938925526 Loss (std): 5.993070949316115 Loss ratio: 4.2807958653564935 Tokens per Sec: 2436.9893220675435
Epoch Step: 10 / 67 Loss (mean): 0.3717621382056677 Loss (std): 1.9190554338615833 Loss ratio: 5.1620518515522305 Tokens per Sec: 2520.735012342028
Epoch Step: 15 / 67 Loss (mean): 0.13235332170643233 Loss (std): 0.31831346148573875 Loss ratio: 2.405028127603607 Tokens per Sec: 3190.9566995893792
Epoch Step: 20 / 67 Loss (mean): 0.3172399670602317 Loss (std): 0.6680114340346806 Loss ratio: 2.1056975898243326 Tokens per Sec: 4067.417718930824
Epoch Step: 25 / 67 Loss (mean): 0.398415947380272 Loss (std): 0.9176801993111723 Loss ratio: 2.303321956225019 Tokens per Sec: 2594.9843106605977
Epoch Step: 30 / 67 Loss (mean): 0.7146878317871597 Loss (std): 1.759709733832338 Loss ratio: 2.4622074919506884 Tokens per Sec: 2983.143693494736
Epoch Step: 35 / 67 Loss (mean): 0.4335127804079093 Loss (std): 1.0377858797945936 Loss ratio: 2.3938991575244906 Tokens per Sec: 3201.583062769799
Epoch Step: 40 / 67 Loss (mean): 0.14699279072374338 Loss (std): 0.2917582332396124 Loss ratio: 1.9848472282422314 Tokens per Sec: 2785.028866187552
Epoch Step: 45 / 67 Loss (mean): 3.9897808868454376 Loss (std): 15.331711283602111 Loss ratio: 3.8427451828624832 Tokens per Sec: 2480.141241064686
Epoch Step: 50 / 67 Loss (mean): 0.3295822845884686 Loss (std): 0.5707824022056512 Loss ratio: 1.7318358082211731 Tokens per Sec: 2459.936102242736
Epoch Step: 55 / 67 Loss (mean): 0.3434842837104952 Loss (std): 0.8291173372316952 Loss ratio: 2.413843592129282 Tokens per Sec: 2690.437930249797
Epoch Step: 60 / 67 Loss (mean): 2.0551692350854864 Loss (std): 9.23745924319584 Loss ratio: 4.494743832038533 Tokens per Sec: 2649.5160652534028
Epoch Step: 65 / 67 Loss (mean): 0.7213221781388484 Loss (std): 4.076474652978135 Loss ratio: 5.651392368797301 Tokens per Sec: 2886.3376315898795
Mean loss per sample: 0.44553820350719586 Std loss per sample: 3.1974099709987085 ratio: 7.176511342527482
Epoch ended with duration 0:00:11.323701
Train perplexity: 1.0621351682146762
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the exception declaration for openjdk ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.31384456157684 Loss (std): 44.97303887394973 Loss ratio: 0.4483233502863445 Tokens per Sec: 4321.697121349845
Mean loss per sample: 105.6455219614579 Std loss per sample: 54.55983078914589 ratio: 0.5164424367087767
Epoch ended with duration 0:00:01.019387
b'BLEU = 2.31, 8.5/2.7/1.6/1.3 (BP=0.889, ratio=0.894, hyp_len=2784, ref_len=3113)\n'
Validation perplexity: 1650948.4777844087
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.31
Model saved checkpoint_commit_msg_generator!
Epoch 766 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.20110296701750485 Loss (std): 0.6791059697309528 Loss ratio: 3.376906764741271 Tokens per Sec: 3042.3086536132882
Epoch Step: 10 / 67 Loss (mean): 0.1577935991654158 Loss (std): 0.3903050951929623 Loss ratio: 2.4735166524961736 Tokens per Sec: 2743.6214594882344
Epoch Step: 15 / 67 Loss (mean): 6.289173414595098 Loss (std): 16.0964153539561 Loss ratio: 2.559384881422037 Tokens per Sec: 2550.0989472959795
Epoch Step: 20 / 67 Loss (mean): 0.15519830477114738 Loss (std): 0.35921001910652844 Loss ratio: 2.314522827012918 Tokens per Sec: 2513.4701232838233
Epoch Step: 25 / 67 Loss (mean): 2.074935181480214 Loss (std): 11.273561182426356 Loss ratio: 5.43321125548801 Tokens per Sec: 3065.7062834655244
Epoch Step: 30 / 67 Loss (mean): 0.6559433326119688 Loss (std): 1.2634797791892787 Loss ratio: 1.9262026403379962 Tokens per Sec: 2736.8942070544877
Epoch Step: 35 / 67 Loss (mean): 0.2654012877155765 Loss (std): 0.5871653598888505 Loss ratio: 2.212368164988333 Tokens per Sec: 2810.8353730578033
Epoch Step: 40 / 67 Loss (mean): 0.12425635649560718 Loss (std): 0.2714624783668987 Loss ratio: 2.184696912278252 Tokens per Sec: 2863.2756385185116
Epoch Step: 45 / 67 Loss (mean): 0.2010998674613802 Loss (std): 0.45876547382719723 Loss ratio: 2.2812818308560043 Tokens per Sec: 2773.2156336030607
Epoch Step: 50 / 67 Loss (mean): 0.11674072485266151 Loss (std): 0.5122353970870761 Loss ratio: 4.387803808256018 Tokens per Sec: 2650.631963163904
Epoch Step: 55 / 67 Loss (mean): 0.10138041825393884 Loss (std): 0.2260406236188465 Loss ratio: 2.2296280436785865 Tokens per Sec: 3010.8340227006092
Epoch Step: 60 / 67 Loss (mean): 0.36749545821976426 Loss (std): 1.0938378455370916 Loss ratio: 2.976466296579292 Tokens per Sec: 2631.281634329441
Epoch Step: 65 / 67 Loss (mean): 0.23213217060583702 Loss (std): 0.6447756015434041 Loss ratio: 2.7776227649128398 Tokens per Sec: 3050.706217370958
Mean loss per sample: 0.5175054580281806 Std loss per sample: 3.6308724783616775 ratio: 7.016104703892726
Epoch ended with duration 0:00:11.294595
Train perplexity: 1.0725278520424557
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow exception for method_1 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a unit for method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.86395570635796 Loss (std): 45.999651124572026 Loss ratio: 0.4560563860740239 Tokens per Sec: 4433.324310166486
Mean loss per sample: 104.85914386491307 Std loss per sample: 54.32335610376912 ratio: 0.5180602673406556
Epoch ended with duration 0:00:01.005586
b'BLEU = 2.46, 8.7/2.8/1.7/1.2 (BP=0.921, ratio=0.924, hyp_len=2876, ref_len=3113)\n'
Validation perplexity: 1484060.0966728753
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.46
Epoch 767 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3028600335810552 Loss (std): 0.6427772408796365 Loss ratio: 2.122357424581109 Tokens per Sec: 2482.050379923027
Epoch Step: 10 / 67 Loss (mean): 0.21925342421536698 Loss (std): 0.6379360499251421 Loss ratio: 2.909583064474806 Tokens per Sec: 2864.154768755245
Epoch Step: 15 / 67 Loss (mean): 0.2112646348468843 Loss (std): 0.5123240780452427 Loss ratio: 2.42503473625178 Tokens per Sec: 2294.910671604933
Epoch Step: 20 / 67 Loss (mean): 2.8213374494935124 Loss (std): 9.208483181486391 Loss ratio: 3.263871602150782 Tokens per Sec: 3451.458211342789
Epoch Step: 25 / 67 Loss (mean): 0.06689442650531419 Loss (std): 0.10588976031678807 Loss ratio: 1.582938457636318 Tokens per Sec: 2226.218710533576
Epoch Step: 30 / 67 Loss (mean): 0.2182966330765339 Loss (std): 0.6007683376072924 Loss ratio: 2.7520733102496617 Tokens per Sec: 3067.6417079136645
Epoch Step: 35 / 67 Loss (mean): 0.2969440240030963 Loss (std): 0.8175105248948598 Loss ratio: 2.7530795665594385 Tokens per Sec: 2531.937704866482
Epoch Step: 40 / 67 Loss (mean): 0.06500504917694627 Loss (std): 0.10436566670864028 Loss ratio: 1.6055009269288125 Tokens per Sec: 2643.440823246494
Epoch Step: 45 / 67 Loss (mean): 1.8058601695920515 Loss (std): 6.786492489460309 Loss ratio: 3.7580387472599246 Tokens per Sec: 2632.941187557331
Epoch Step: 50 / 67 Loss (mean): 7.122240733373474 Loss (std): 20.013061391210343 Loss ratio: 2.809938913947814 Tokens per Sec: 2887.63886863321
Epoch Step: 55 / 67 Loss (mean): 0.7748498441342235 Loss (std): 1.6191378361351598 Loss ratio: 2.0896149730071887 Tokens per Sec: 3064.449658801163
Epoch Step: 60 / 67 Loss (mean): 0.6492140049011823 Loss (std): 1.0098310537722843 Loss ratio: 1.5554671435746246 Tokens per Sec: 3528.6094790528955
Epoch Step: 65 / 67 Loss (mean): 0.20176202745915361 Loss (std): 0.7773515241394342 Loss ratio: 3.8528138021254157 Tokens per Sec: 3049.360756155937
Mean loss per sample: 0.5367558947871296 Std loss per sample: 3.768817775767164 ratio: 7.0214744027391225
Epoch ended with duration 0:00:11.316274
Train perplexity: 1.075324976215894
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to start ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.05364993214607 Loss (std): 44.67770007901219 Loss ratio: 0.4510454699005781 Tokens per Sec: 4316.296846036748
Mean loss per sample: 107.0860477497221 Std loss per sample: 53.083611476386984 ratio: 0.4957098762338509
Epoch ended with duration 0:00:01.038724
b'BLEU = 2.61, 8.4/2.8/1.8/1.4 (BP=0.937, ratio=0.939, hyp_len=2923, ref_len=3113)\n'
Validation perplexity: 2006851.356101769
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.61
Epoch 768 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.7681862139661462 Loss (std): 1.2030438182495908 Loss ratio: 1.56608358283114 Tokens per Sec: 2773.0364104847245
Epoch Step: 10 / 67 Loss (mean): 2.3160978064079245 Loss (std): 7.869525843841068 Loss ratio: 3.3977519524730475 Tokens per Sec: 2606.5988184193716
Epoch Step: 15 / 67 Loss (mean): 0.32062088730026517 Loss (std): 0.9194269083908452 Loss ratio: 2.867645074944201 Tokens per Sec: 2640.217166584365
Epoch Step: 20 / 67 Loss (mean): 0.6532790223127449 Loss (std): 1.1563288554645823 Loss ratio: 1.77003824701264 Tokens per Sec: 3144.3170531715828
Epoch Step: 25 / 67 Loss (mean): 0.33893345793717344 Loss (std): 1.1472526587069065 Loss ratio: 3.3848905495767476 Tokens per Sec: 2972.3161021106052
Epoch Step: 30 / 67 Loss (mean): 0.6447188876682048 Loss (std): 1.4736584687926748 Loss ratio: 2.285738012302614 Tokens per Sec: 3025.206469965127
Epoch Step: 35 / 67 Loss (mean): 0.079164385326294 Loss (std): 0.19486242884976687 Loss ratio: 2.4614910865106463 Tokens per Sec: 2461.4973599690848
Epoch Step: 40 / 67 Loss (mean): 0.25380869236141734 Loss (std): 0.776100293224446 Loss ratio: 3.0578160503632326 Tokens per Sec: 2864.927051517126
Epoch Step: 45 / 67 Loss (mean): 0.16832279842242315 Loss (std): 0.47971819894771384 Loss ratio: 2.8499894455403023 Tokens per Sec: 3049.42647782795
Epoch Step: 50 / 67 Loss (mean): 0.6430410212524293 Loss (std): 1.693289497247207 Loss ratio: 2.6332526872846214 Tokens per Sec: 3059.5009611469372
Epoch Step: 55 / 67 Loss (mean): 0.39166429813121795 Loss (std): 2.4600871988216975 Loss ratio: 6.281111683040109 Tokens per Sec: 2486.4209320939367
Epoch Step: 60 / 67 Loss (mean): 0.11542725914523544 Loss (std): 0.5489302980554929 Loss ratio: 4.755638331191817 Tokens per Sec: 2474.4270239063458
Epoch Step: 65 / 67 Loss (mean): 0.27527062373428635 Loss (std): 1.1517706384716324 Loss ratio: 4.18413931296721 Tokens per Sec: 3070.353100125731
Mean loss per sample: 0.4181531912727411 Std loss per sample: 2.647545502619665 ratio: 6.331520499846668
Epoch ended with duration 0:00:11.323254
Train perplexity: 1.0582070433313617
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print change time unit test[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.3731078505516 Loss (std): 45.34109654363359 Loss ratio: 0.4517255419762756 Tokens per Sec: 4355.954664766958
Mean loss per sample: 105.97189341977116 Std loss per sample: 53.90829522784851 ratio: 0.5087037089571417
Epoch ended with duration 0:00:01.018375
b'BLEU = 2.58, 9.1/2.9/1.8/1.5 (BP=0.887, ratio=0.893, hyp_len=2780, ref_len=3113)\n'
Validation perplexity: 1725607.4548710734
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.58
Epoch 769 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.05273711459767583 Loss (std): 0.10395720502646143 Loss ratio: 1.9712342212791998 Tokens per Sec: 2609.948195163359
Epoch Step: 10 / 67 Loss (mean): 0.1348529025872267 Loss (std): 0.23667235825393834 Loss ratio: 1.7550408905796588 Tokens per Sec: 2371.1964421440102
Epoch Step: 15 / 67 Loss (mean): 0.3577755453170539 Loss (std): 1.0107018819628675 Loss ratio: 2.824960775525344 Tokens per Sec: 2718.285078867044
Epoch Step: 20 / 67 Loss (mean): 0.11828277865424752 Loss (std): 0.31921914293461146 Loss ratio: 2.6987795397309795 Tokens per Sec: 2952.3784549383317
Epoch Step: 25 / 67 Loss (mean): 0.11786578965984518 Loss (std): 0.22990820075434204 Loss ratio: 1.9505931400268535 Tokens per Sec: 3386.6824106935555
Epoch Step: 30 / 67 Loss (mean): 0.5401311566674849 Loss (std): 1.1724384160591457 Loss ratio: 2.17065503736701 Tokens per Sec: 3081.0722158937733
Epoch Step: 35 / 67 Loss (mean): 0.2794655116740614 Loss (std): 0.6654161925633337 Loss ratio: 2.381031521840891 Tokens per Sec: 3150.1221680959898
Epoch Step: 40 / 67 Loss (mean): 0.22656836888745602 Loss (std): 0.5918297478740097 Loss ratio: 2.612146394398024 Tokens per Sec: 3045.1520311017953
Epoch Step: 45 / 67 Loss (mean): 0.1507910340883427 Loss (std): 0.5227044777264526 Loss ratio: 3.4664161625167975 Tokens per Sec: 2200.3855539649862
Epoch Step: 50 / 67 Loss (mean): 0.3635959041645265 Loss (std): 2.4121267421443613 Loss ratio: 6.634086672914991 Tokens per Sec: 3045.1775609283886
Epoch Step: 55 / 67 Loss (mean): 0.16599247068666045 Loss (std): 0.3978943699921963 Loss ratio: 2.3970627604145425 Tokens per Sec: 2944.3458373194626
Epoch Step: 60 / 67 Loss (mean): 0.37846279297536967 Loss (std): 0.8228667995533558 Loss ratio: 2.174234336443498 Tokens per Sec: 2990.5226766945616
Epoch Step: 65 / 67 Loss (mean): 0.058711470218895556 Loss (std): 0.14698487515874104 Loss ratio: 2.503512083937489 Tokens per Sec: 2457.7025718483883
Mean loss per sample: 0.3023947916433458 Std loss per sample: 1.7245636425304922 ratio: 5.703020323724683
Epoch ended with duration 0:00:11.321819
Train perplexity: 1.0417624361446738
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire ) to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.17170596122742 Loss (std): 45.818105607368445 Loss ratio: 0.4528746962607072 Tokens per Sec: 4414.76457036939
Mean loss per sample: 106.65481889260109 Std loss per sample: 54.0585724429428 ratio: 0.5068554145441709
Epoch ended with duration 0:00:01.028711
b'BLEU = 2.87, 9.3/3.3/2.1/1.7 (BP=0.887, ratio=0.893, hyp_len=2781, ref_len=3113)\n'
Validation perplexity: 1892933.5529603017
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.87
Epoch 770 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2245588838504773 Loss (std): 0.7772943189069811 Loss ratio: 3.4614276023234205 Tokens per Sec: 2900.0631432047935
Epoch Step: 10 / 67 Loss (mean): 0.44544887173083225 Loss (std): 1.1780216689712493 Loss ratio: 2.644572124279805 Tokens per Sec: 2960.3749214830386
Epoch Step: 15 / 67 Loss (mean): 0.1365259041376703 Loss (std): 0.5772955537924851 Loss ratio: 4.228469003291496 Tokens per Sec: 2623.334691897954
Epoch Step: 20 / 67 Loss (mean): 0.16617026791573153 Loss (std): 0.498293540403727 Loss ratio: 2.9986925257677397 Tokens per Sec: 3018.461186936662
Epoch Step: 25 / 67 Loss (mean): 0.20574630044563946 Loss (std): 0.5448141022145006 Loss ratio: 2.6479897866180426 Tokens per Sec: 2781.194547500656
Epoch Step: 30 / 67 Loss (mean): 0.10358129567339347 Loss (std): 0.25930117335258807 Loss ratio: 2.503359044379996 Tokens per Sec: 2650.382664486709
Epoch Step: 35 / 67 Loss (mean): 0.3203138003427739 Loss (std): 0.8883852661083418 Loss ratio: 2.773484205668516 Tokens per Sec: 2544.2651036361226
Epoch Step: 40 / 67 Loss (mean): 0.10403915102688188 Loss (std): 0.3171956842972478 Loss ratio: 3.0488107713921084 Tokens per Sec: 2482.0017734751364
Epoch Step: 45 / 67 Loss (mean): 0.05505123079819896 Loss (std): 0.09208960237492164 Loss ratio: 1.672798247009119 Tokens per Sec: 2625.784380843523
Epoch Step: 50 / 67 Loss (mean): 0.1603385472685659 Loss (std): 0.4222173133366868 Loss ratio: 2.6332863839004097 Tokens per Sec: 2488.4708827748077
Epoch Step: 55 / 67 Loss (mean): 0.36987762760509213 Loss (std): 0.6499843298701303 Loss ratio: 1.7572956063298324 Tokens per Sec: 3074.469168424801
Epoch Step: 60 / 67 Loss (mean): 1.1036639045069023 Loss (std): 6.0428466224543005 Loss ratio: 5.475259812138314 Tokens per Sec: 3209.6709458011865
Epoch Step: 65 / 67 Loss (mean): 0.06263345356319405 Loss (std): 0.1198158465756943 Loss ratio: 1.9129688650300283 Tokens per Sec: 3225.871917126747
Mean loss per sample: 0.35737398939489284 Std loss per sample: 2.727435416971477 ratio: 7.631880041380691
Epoch ended with duration 0:00:11.280940
Train perplexity: 1.0495406568189682
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire ) test[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.37829047441483 Loss (std): 45.71988969597714 Loss ratio: 0.455475875110969 Tokens per Sec: 4205.386118135211
Mean loss per sample: 108.05919761677868 Std loss per sample: 55.39851535668088 ratio: 0.5126682094489196
Epoch ended with duration 0:00:01.035882
b'BLEU = 2.52, 8.8/3.0/1.9/1.5 (BP=0.861, ratio=0.870, hyp_len=2709, ref_len=3113)\n'
Validation perplexity: 2289758.2449168153
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.52
Model saved checkpoint_commit_msg_generator!
Epoch 771 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.19139066671414184 Loss (std): 0.5310806973471396 Loss ratio: 2.7748515978595423 Tokens per Sec: 2599.5837348169084
Epoch Step: 10 / 67 Loss (mean): 0.139815925068433 Loss (std): 0.4045993952603646 Loss ratio: 2.893800509937142 Tokens per Sec: 3155.0772362220405
Epoch Step: 15 / 67 Loss (mean): 0.17920958820104715 Loss (std): 0.4229294536520245 Loss ratio: 2.359971125973232 Tokens per Sec: 2434.229060415149
Epoch Step: 20 / 67 Loss (mean): 0.12030783921454713 Loss (std): 0.32067398811814035 Loss ratio: 2.6654454955863405 Tokens per Sec: 3635.524239672354
Epoch Step: 25 / 67 Loss (mean): 0.34221145810715825 Loss (std): 0.9514932171566668 Loss ratio: 2.7804247771818362 Tokens per Sec: 4011.2196396941117
Epoch Step: 30 / 67 Loss (mean): 0.11458019068595604 Loss (std): 0.377788410567957 Loss ratio: 3.2971529223878493 Tokens per Sec: 2962.375898324754
Epoch Step: 35 / 67 Loss (mean): 0.12852119305352971 Loss (std): 0.3958651342251757 Loss ratio: 3.0801545240892367 Tokens per Sec: 2475.9720738892656
Epoch Step: 40 / 67 Loss (mean): 0.048268411317881794 Loss (std): 0.09609585517735408 Loss ratio: 1.9908642640938516 Tokens per Sec: 2327.349709591046
Epoch Step: 45 / 67 Loss (mean): 4.077909292542245 Loss (std): 13.456677399383903 Loss ratio: 3.299896205144563 Tokens per Sec: 2502.639996811001
Epoch Step: 50 / 67 Loss (mean): 0.14786856818727756 Loss (std): 0.47747441273044766 Loss ratio: 3.2290460277245656 Tokens per Sec: 2592.798042640138
Epoch Step: 55 / 67 Loss (mean): 0.3311010836650894 Loss (std): 0.7174299026751892 Loss ratio: 2.1668002252776484 Tokens per Sec: 2750.665652960114
Epoch Step: 60 / 67 Loss (mean): 0.17148724415710603 Loss (std): 0.5545165132409221 Loss ratio: 3.2335729457108093 Tokens per Sec: 2901.0757491438417
Epoch Step: 65 / 67 Loss (mean): 0.10106268085928605 Loss (std): 0.2798140772014699 Loss ratio: 2.7687181343533442 Tokens per Sec: 2535.8442456614
Mean loss per sample: 0.5262186438472688 Std loss per sample: 3.667719400706653 ratio: 6.969953352263175
Epoch ended with duration 0:00:11.350468
Train perplexity: 1.0737929916535618
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print change time unit test[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add method_1 for method_1 fails[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.17283776402473 Loss (std): 44.34944950126065 Loss ratio: 0.44719351085614045 Tokens per Sec: 4424.203026360133
Mean loss per sample: 102.73620805339735 Std loss per sample: 52.84903445387386 ratio: 0.5144148830800284
Epoch ended with duration 0:00:01.006347
b'BLEU = 2.69, 8.8/3.0/1.8/1.4 (BP=0.935, ratio=0.937, hyp_len=2917, ref_len=3113)\n'
Validation perplexity: 1113029.762252823
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.69
Epoch 772 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1699100625801293 Loss (std): 0.5267402759752691 Loss ratio: 3.1001123063377087 Tokens per Sec: 2782.2527604648913
Epoch Step: 10 / 67 Loss (mean): 0.5897469351871223 Loss (std): 0.9230761649360801 Loss ratio: 1.5652072267966852 Tokens per Sec: 3308.4460052677787
Epoch Step: 15 / 67 Loss (mean): 0.3410894876669772 Loss (std): 0.9530420363992457 Loss ratio: 2.794111430750831 Tokens per Sec: 2814.8702178496137
Epoch Step: 20 / 67 Loss (mean): 0.11214451369050948 Loss (std): 0.2212122122728489 Loss ratio: 1.9725638374369228 Tokens per Sec: 2959.4198677712575
Epoch Step: 25 / 67 Loss (mean): 0.3716942811777244 Loss (std): 1.023255803172473 Loss ratio: 2.7529500855656335 Tokens per Sec: 2829.9222137895863
Epoch Step: 30 / 67 Loss (mean): 0.34261861952836625 Loss (std): 0.8446157761819182 Loss ratio: 2.4651776874957325 Tokens per Sec: 2459.3251162820934
Epoch Step: 35 / 67 Loss (mean): 0.1666807074816461 Loss (std): 0.5697717888095798 Loss ratio: 3.4183427549485277 Tokens per Sec: 2758.5423650628313
Epoch Step: 40 / 67 Loss (mean): 0.13045872778820922 Loss (std): 0.4055431413790118 Loss ratio: 3.108593409230414 Tokens per Sec: 2292.9384776429656
Epoch Step: 45 / 67 Loss (mean): 0.0849803773394342 Loss (std): 0.17985459712631918 Loss ratio: 2.116425023719678 Tokens per Sec: 2695.087284734491
Epoch Step: 50 / 67 Loss (mean): 0.11515658973530662 Loss (std): 0.23326272910075146 Loss ratio: 2.0256133811961425 Tokens per Sec: 2386.224482892597
Epoch Step: 55 / 67 Loss (mean): 0.28213630577556614 Loss (std): 0.7547431298039065 Loss ratio: 2.675101057019899 Tokens per Sec: 3011.422242043142
Epoch Step: 60 / 67 Loss (mean): 1.3214679514367162 Loss (std): 5.81275568833585 Loss ratio: 4.398711056152478 Tokens per Sec: 2967.4461866413317
Epoch Step: 65 / 67 Loss (mean): 1.8883655077215735 Loss (std): 10.322403989982499 Loss ratio: 5.46631674205758 Tokens per Sec: 2958.949237189166
Mean loss per sample: 0.5744573268673522 Std loss per sample: 3.7433478523958037 ratio: 6.516320146544461
Epoch ended with duration 0:00:11.415873
Train perplexity: 1.0808242152567622
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire ) switch to exception[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add method_1 for extension api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.10478013753891 Loss (std): 45.241501331801366 Loss ratio: 0.45194146842580174 Tokens per Sec: 4447.247000244515
Mean loss per sample: 104.18719779138193 Std loss per sample: 53.843676713864404 ratio: 0.5167974362999731
Epoch ended with duration 0:00:01.004362
b'BLEU = 2.34, 9.0/2.6/1.5/1.2 (BP=0.916, ratio=0.919, hyp_len=2862, ref_len=3113)\n'
Validation perplexity: 1354890.869103915
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.34
Epoch 773 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.061563932889839634 Loss (std): 0.1372270083058562 Loss ratio: 2.2290162740480772 Tokens per Sec: 2836.3118108529807
Epoch Step: 10 / 67 Loss (mean): 0.15226885604351992 Loss (std): 0.3663835656865811 Loss ratio: 2.406162200245762 Tokens per Sec: 2820.7159468944833
Epoch Step: 15 / 67 Loss (mean): 0.18779702044957958 Loss (std): 0.5317842780396451 Loss ratio: 2.831697099168943 Tokens per Sec: 2600.907249995664
Epoch Step: 20 / 67 Loss (mean): 0.1778387848407874 Loss (std): 0.4349192663327503 Loss ratio: 2.4455816357613873 Tokens per Sec: 3192.0380620398273
Epoch Step: 25 / 67 Loss (mean): 0.44819160152337645 Loss (std): 1.0512580510762293 Loss ratio: 2.345554998137105 Tokens per Sec: 2917.7043665487977
Epoch Step: 30 / 67 Loss (mean): 0.09910540148075597 Loss (std): 0.29549033620506193 Loss ratio: 2.981576501281209 Tokens per Sec: 2811.589175205422
Epoch Step: 35 / 67 Loss (mean): 0.2885704287527915 Loss (std): 0.6600058765434417 Loss ratio: 2.287157001484883 Tokens per Sec: 2507.0702992181264
Epoch Step: 40 / 67 Loss (mean): 0.17890912610164378 Loss (std): 0.5936906320110041 Loss ratio: 3.3183921074753346 Tokens per Sec: 3577.3071860912896
Epoch Step: 45 / 67 Loss (mean): 0.1817209406613074 Loss (std): 0.53243455054188 Loss ratio: 2.929957046250574 Tokens per Sec: 2758.188359014655
Epoch Step: 50 / 67 Loss (mean): 0.517315279943432 Loss (std): 1.0694987200079202 Loss ratio: 2.0674021461822454 Tokens per Sec: 2987.252542368274
Epoch Step: 55 / 67 Loss (mean): 0.12494513328874746 Loss (std): 0.2587410895658274 Loss ratio: 2.070837676949596 Tokens per Sec: 2508.9397351455627
Epoch Step: 60 / 67 Loss (mean): 0.24693500412377034 Loss (std): 0.8447938185646736 Loss ratio: 3.421118126052476 Tokens per Sec: 2406.3357351040922
Epoch Step: 65 / 67 Loss (mean): 0.22298943728674203 Loss (std): 0.648818962408021 Loss ratio: 2.9096398928246314 Tokens per Sec: 2820.5903033506593
Mean loss per sample: 0.41583833454404756 Std loss per sample: 3.266148595993634 ratio: 7.854371097303604
Epoch ended with duration 0:00:11.322979
Train perplexity: 1.0578756653589096
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the exception declaration in method_1 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.46906286478043 Loss (std): 45.03744524845946 Loss ratio: 0.4482717760498531 Tokens per Sec: 4427.27716269469
Mean loss per sample: 104.12909584453513 Std loss per sample: 53.50414668928791 ratio: 0.5138251346114603
Epoch ended with duration 0:00:01.007791
b'BLEU = 2.25, 8.1/2.5/1.6/1.2 (BP=0.908, ratio=0.912, hyp_len=2838, ref_len=3113)\n'
Validation perplexity: 1344264.545498131
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.25
Epoch 774 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3446814080357399 Loss (std): 1.1195367275824293 Loss ratio: 3.248033405579987 Tokens per Sec: 2327.762112448116
Epoch Step: 10 / 67 Loss (mean): 0.07545492222971006 Loss (std): 0.12355529861748595 Loss ratio: 1.637471684634996 Tokens per Sec: 2710.844965066045
Epoch Step: 15 / 67 Loss (mean): 0.17180322534477455 Loss (std): 0.457963077366171 Loss ratio: 2.6656256100380604 Tokens per Sec: 3200.4423390290535
Epoch Step: 20 / 67 Loss (mean): 0.3985719606725979 Loss (std): 0.7655805651106465 Loss ratio: 1.9208088893627 Tokens per Sec: 2650.5392685827774
Epoch Step: 25 / 67 Loss (mean): 0.30245158884827106 Loss (std): 1.087510600430572 Loss ratio: 3.5956518019025396 Tokens per Sec: 2967.290122880508
Epoch Step: 30 / 67 Loss (mean): 0.31508576592659665 Loss (std): 1.082462893123114 Loss ratio: 3.4354547560719952 Tokens per Sec: 2995.5110596595764
Epoch Step: 35 / 67 Loss (mean): 0.09107457937761865 Loss (std): 0.28957915277270413 Loss ratio: 3.1795826535968335 Tokens per Sec: 2879.073143183984
Epoch Step: 40 / 67 Loss (mean): 0.1627068983616482 Loss (std): 0.388346009701471 Loss ratio: 2.386782697057474 Tokens per Sec: 2953.677431975118
Epoch Step: 45 / 67 Loss (mean): 0.20797023254363012 Loss (std): 0.5140291248263337 Loss ratio: 2.4716475936934645 Tokens per Sec: 2577.948740932825
Epoch Step: 50 / 67 Loss (mean): 3.811168405653916 Loss (std): 13.20351233104905 Loss ratio: 3.4644263715718973 Tokens per Sec: 3148.0036331348
Epoch Step: 55 / 67 Loss (mean): 0.05569743220292453 Loss (std): 0.12651931194481555 Loss ratio: 2.2715465855564587 Tokens per Sec: 2127.5635562152756
Epoch Step: 60 / 67 Loss (mean): 0.12419735887442584 Loss (std): 0.24077883236228467 Loss ratio: 1.9386791679340998 Tokens per Sec: 3254.484063728106
Epoch Step: 65 / 67 Loss (mean): 0.2185523300731802 Loss (std): 0.6635099329308017 Loss ratio: 3.035931635726014 Tokens per Sec: 2917.3492389698613
Mean loss per sample: 0.6246232671727643 Std loss per sample: 4.422384722743861 ratio: 7.080083236029496
Epoch ended with duration 0:00:11.374663
Train perplexity: 1.0881851947967147
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog class[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.22323167324066 Loss (std): 45.207174901779055 Loss ratio: 0.44660869006546455 Tokens per Sec: 4431.992599326922
Mean loss per sample: 105.19486321258496 Std loss per sample: 54.22855026917531 ratio: 0.5155056873793025
Epoch ended with duration 0:00:01.022320
b'BLEU = 2.63, 8.7/3.0/1.9/1.5 (BP=0.891, ratio=0.896, hyp_len=2790, ref_len=3113)\n'
Validation perplexity: 1553138.349078981
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.63
Epoch 775 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2841667454240451 Loss (std): 0.6980840340962606 Loss ratio: 2.4566000256453355 Tokens per Sec: 2953.3314416968256
Epoch Step: 10 / 67 Loss (mean): 0.08764298741084531 Loss (std): 0.1515041730850844 Loss ratio: 1.7286514022494017 Tokens per Sec: 2248.7882716209933
Epoch Step: 15 / 67 Loss (mean): 0.3564095199581061 Loss (std): 0.6416638006678277 Loss ratio: 1.8003553910211254 Tokens per Sec: 3577.032592977122
Epoch Step: 20 / 67 Loss (mean): 0.12835485115147094 Loss (std): 0.29854619344738553 Loss ratio: 2.325943980840059 Tokens per Sec: 2432.0680357574292
Epoch Step: 25 / 67 Loss (mean): 0.13398168932315002 Loss (std): 0.41505790696456496 Loss ratio: 3.09787038110475 Tokens per Sec: 2894.3482195686584
Epoch Step: 30 / 67 Loss (mean): 0.14606307948542963 Loss (std): 0.36868204624446665 Loss ratio: 2.524128941710038 Tokens per Sec: 2723.070909287903
Epoch Step: 35 / 67 Loss (mean): 0.2430045874634743 Loss (std): 0.6524285433090793 Loss ratio: 2.6848404391013605 Tokens per Sec: 2776.202627922725
Epoch Step: 40 / 67 Loss (mean): 0.17322588499268932 Loss (std): 0.4928397928117076 Loss ratio: 2.8450701396763365 Tokens per Sec: 2557.113979215731
Epoch Step: 45 / 67 Loss (mean): 0.28421921250628657 Loss (std): 0.8404853276524034 Loss ratio: 2.9571728112286317 Tokens per Sec: 3496.26925264816
Epoch Step: 50 / 67 Loss (mean): 0.5641652607271226 Loss (std): 0.8523579240891597 Loss ratio: 1.5108302184196896 Tokens per Sec: 2788.670871833339
Epoch Step: 55 / 67 Loss (mean): 0.10170849570567952 Loss (std): 0.2947067565408465 Loss ratio: 2.897562828907219 Tokens per Sec: 2633.183972975706
Epoch Step: 60 / 67 Loss (mean): 0.2591399484936119 Loss (std): 0.7402765855955349 Loss ratio: 2.8566671788691185 Tokens per Sec: 2684.1480379555505
Epoch Step: 65 / 67 Loss (mean): 0.4668548768895562 Loss (std): 1.0579976655615817 Loss ratio: 2.2662238694185732 Tokens per Sec: 2934.1240137465024
Mean loss per sample: 0.30722639234560345 Std loss per sample: 1.8298935934153837 ratio: 5.956173164175653
Epoch ended with duration 0:00:11.344167
Train perplexity: 1.0424436736809712
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire ) switch to exception[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.48148742318153 Loss (std): 44.62772016194982 Loss ratio: 0.4441387294954991 Tokens per Sec: 4428.339417270117
Mean loss per sample: 104.40881327912211 Std loss per sample: 53.91909192900082 ratio: 0.5164228022097693
Epoch ended with duration 0:00:01.009205
b'BLEU = 2.56, 8.9/2.8/1.7/1.4 (BP=0.930, ratio=0.932, hyp_len=2902, ref_len=3113)\n'
Validation perplexity: 1396199.3287411255
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.56
Model saved checkpoint_commit_msg_generator!
Epoch 776 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.07688405426415557 Loss (std): 0.11864596917975428 Loss ratio: 1.543180446391583 Tokens per Sec: 2460.918344642888
Epoch Step: 10 / 67 Loss (mean): 0.126341827075521 Loss (std): 0.29830442134651547 Loss ratio: 2.3610899751212524 Tokens per Sec: 2841.446211332535
Epoch Step: 15 / 67 Loss (mean): 0.10172373932925893 Loss (std): 0.4065366184359217 Loss ratio: 3.996477332789014 Tokens per Sec: 2931.81804495107
Epoch Step: 20 / 67 Loss (mean): 1.7474393848206091 Loss (std): 8.016847713086799 Loss ratio: 4.587768699004002 Tokens per Sec: 2635.892509929286
Epoch Step: 25 / 67 Loss (mean): 0.0759161107307591 Loss (std): 0.1570426024889428 Loss ratio: 2.0686334030717606 Tokens per Sec: 3051.15741418247
Epoch Step: 30 / 67 Loss (mean): 0.09526851450937102 Loss (std): 0.2670234413735627 Loss ratio: 2.8028508972636197 Tokens per Sec: 3294.249561663021
Epoch Step: 35 / 67 Loss (mean): 0.45511763794183935 Loss (std): 0.798036355699004 Loss ratio: 1.753472705008605 Tokens per Sec: 3950.0186274685334
Epoch Step: 40 / 67 Loss (mean): 0.23154923941729066 Loss (std): 0.5125091037634558 Loss ratio: 2.2133914369713312 Tokens per Sec: 2526.144557300312
Epoch Step: 45 / 67 Loss (mean): 0.08733512435355806 Loss (std): 0.250068509519698 Loss ratio: 2.863321159392271 Tokens per Sec: 2507.491286243596
Epoch Step: 50 / 67 Loss (mean): 0.10101173490829751 Loss (std): 0.2877194254805626 Loss ratio: 2.848376238085266 Tokens per Sec: 2425.5223840818494
Epoch Step: 55 / 67 Loss (mean): 0.10787571086621028 Loss (std): 0.27769220345540346 Loss ratio: 2.5741865451047006 Tokens per Sec: 2526.734171003907
Epoch Step: 60 / 67 Loss (mean): 0.5331107824422361 Loss (std): 3.5303251352522564 Loss ratio: 6.622122927395069 Tokens per Sec: 2879.760432225111
Epoch Step: 65 / 67 Loss (mean): 0.4056296028174984 Loss (std): 0.8103340477828384 Loss ratio: 1.997719205290412 Tokens per Sec: 2810.2415854857372
Mean loss per sample: 0.4803589437596062 Std loss per sample: 3.751232929051639 ratio: 7.809228864756871
Epoch ended with duration 0:00:11.298892
Train perplexity: 1.0671509438608786
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire ) to exception[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.18997970223427 Loss (std): 43.97592869638604 Loss ratio: 0.4389254177621653 Tokens per Sec: 4452.387529915393
Mean loss per sample: 104.23495920805536 Std loss per sample: 53.85196337374901 ratio: 0.516640134777232
Epoch ended with duration 0:00:01.004331
b'BLEU = 2.67, 8.7/3.0/1.9/1.5 (BP=0.907, ratio=0.911, hyp_len=2837, ref_len=3113)\n'
Validation perplexity: 1363688.8794084443
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.67
Epoch 777 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.10112960447986552 Loss (std): 0.2693870724966934 Loss ratio: 2.6637805406460107 Tokens per Sec: 2803.6970973082844
Epoch Step: 10 / 67 Loss (mean): 0.09992577692651139 Loss (std): 0.3411934686034336 Loss ratio: 3.4144690098767825 Tokens per Sec: 2284.3863713971637
Epoch Step: 15 / 67 Loss (mean): 0.3935820935241736 Loss (std): 1.309278564747756 Loss ratio: 3.3265704570661336 Tokens per Sec: 2678.7683344471866
Epoch Step: 20 / 67 Loss (mean): 0.26694866860043476 Loss (std): 0.598628200319107 Loss ratio: 2.2424843077795074 Tokens per Sec: 2742.8050415327007
Epoch Step: 25 / 67 Loss (mean): 0.192291586950887 Loss (std): 0.6779125109582042 Loss ratio: 3.5254403050475065 Tokens per Sec: 2760.8327244308475
Epoch Step: 30 / 67 Loss (mean): 0.2675139583661803 Loss (std): 0.9274087581859196 Loss ratio: 3.4667677299905884 Tokens per Sec: 3235.4942263990224
Epoch Step: 35 / 67 Loss (mean): 0.5024020718740303 Loss (std): 3.2759580896302847 Loss ratio: 6.520590326012194 Tokens per Sec: 2747.5272070022766
Epoch Step: 40 / 67 Loss (mean): 0.4444013133379485 Loss (std): 1.0121704518222676 Loss ratio: 2.2776045467096866 Tokens per Sec: 2939.802426603343
Epoch Step: 45 / 67 Loss (mean): 2.143755781033178 Loss (std): 8.663220576654886 Loss ratio: 4.041141557868904 Tokens per Sec: 3074.949411069198
Epoch Step: 50 / 67 Loss (mean): 0.5241411905572022 Loss (std): 1.0698373100228493 Loss ratio: 2.0411242796726783 Tokens per Sec: 2893.5732779644186
Epoch Step: 55 / 67 Loss (mean): 0.21754015428405182 Loss (std): 0.7569699092587098 Loss ratio: 3.479679012594156 Tokens per Sec: 2607.9870420638745
Epoch Step: 60 / 67 Loss (mean): 3.3208994359738426 Loss (std): 11.716843014509013 Loss ratio: 3.52821373859913 Tokens per Sec: 2788.7158651039563
Epoch Step: 65 / 67 Loss (mean): 0.13548418690152175 Loss (std): 0.4088970532766256 Loss ratio: 3.0180426411964754 Tokens per Sec: 3047.610656127653
Mean loss per sample: 0.37695404977642405 Std loss per sample: 2.4988583305632694 ratio: 6.629079411788711
Epoch ended with duration 0:00:11.329258
Train perplexity: 1.05232476151165
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to start[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.65100568532944 Loss (std): 44.2559786034748 Loss ratio: 0.44410970365139163 Tokens per Sec: 4439.129925807524
Mean loss per sample: 105.8857185229598 Std loss per sample: 53.91679421465525 ratio: 0.5091979821902437
Epoch ended with duration 0:00:01.016828
b'BLEU = 2.28, 8.7/2.5/1.5/1.1 (BP=0.926, ratio=0.929, hyp_len=2891, ref_len=3113)\n'
Validation perplexity: 1705572.6069190458
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.28
Epoch 778 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.16400889793931128 Loss (std): 0.4551830918491248 Loss ratio: 2.775356078653474 Tokens per Sec: 2690.5708697949112
Epoch Step: 10 / 67 Loss (mean): 0.18330876082563918 Loss (std): 0.5292473345990985 Loss ratio: 2.8871906187970544 Tokens per Sec: 2819.8000421182155
Epoch Step: 15 / 67 Loss (mean): 0.0657046539199655 Loss (std): 0.14828370884190778 Loss ratio: 2.256822005676058 Tokens per Sec: 2495.4586259277607
Epoch Step: 20 / 67 Loss (mean): 0.09696957639880566 Loss (std): 0.20866881321212538 Loss ratio: 2.151899811894976 Tokens per Sec: 2922.870371202769
Epoch Step: 25 / 67 Loss (mean): 1.3356042425220949 Loss (std): 5.179725029198071 Loss ratio: 3.8781885114537458 Tokens per Sec: 2619.6792188699096
Epoch Step: 30 / 67 Loss (mean): 0.3072084478708348 Loss (std): 0.8049633816835615 Loss ratio: 2.6202514522712828 Tokens per Sec: 2667.0620960809074
Epoch Step: 35 / 67 Loss (mean): 0.5420302160955544 Loss (std): 2.8344846376898203 Loss ratio: 5.229384918995235 Tokens per Sec: 2659.543627149517
Epoch Step: 40 / 67 Loss (mean): 0.15193212269332435 Loss (std): 0.5790404379418489 Loss ratio: 3.8111784899539947 Tokens per Sec: 2410.2916384540445
Epoch Step: 45 / 67 Loss (mean): 0.15135416001339763 Loss (std): 0.41186478835594703 Loss ratio: 2.721198996575247 Tokens per Sec: 3080.736528121388
Epoch Step: 50 / 67 Loss (mean): 0.14347181974517298 Loss (std): 0.4941348637747362 Loss ratio: 3.4441248786862277 Tokens per Sec: 3270.5478559561698
Epoch Step: 55 / 67 Loss (mean): 0.328100037951117 Loss (std): 1.047883420012867 Loss ratio: 3.193792437686305 Tokens per Sec: 2858.4664284472424
Epoch Step: 60 / 67 Loss (mean): 0.15336625507916324 Loss (std): 0.321766817985427 Loss ratio: 2.0980287861846807 Tokens per Sec: 3149.894378150692
Epoch Step: 65 / 67 Loss (mean): 0.3010649984707925 Loss (std): 0.7784906996369014 Loss ratio: 2.585789459389534 Tokens per Sec: 2547.5112140076762
Mean loss per sample: 0.582439427282079 Std loss per sample: 3.7938330377462153 ratio: 6.513695433446058
Epoch ended with duration 0:00:11.385254
Train perplexity: 1.0819921099052066
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.65932309627533 Loss (std): 44.59708044500315 Loss ratio: 0.44749531764248884 Tokens per Sec: 4457.379073600516
Mean loss per sample: 103.10940230216403 Std loss per sample: 53.06206593473771 ratio: 0.5146190817714017
Epoch ended with duration 0:00:01.001375
b'BLEU = 2.26, 8.5/2.4/1.5/1.0 (BP=0.955, ratio=0.956, hyp_len=2976, ref_len=3113)\n'
Validation perplexity: 1170768.437901725
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.26
Epoch 779 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.37890695372698247 Loss (std): 0.7398169140341057 Loss ratio: 1.9525028684672099 Tokens per Sec: 2513.1087536185687
Epoch Step: 10 / 67 Loss (mean): 0.24836006174064096 Loss (std): 0.6590324655972571 Loss ratio: 2.6535364058874964 Tokens per Sec: 2576.909452506675
Epoch Step: 15 / 67 Loss (mean): 0.9616735594981947 Loss (std): 4.972940894066773 Loss ratio: 5.171131976074786 Tokens per Sec: 2709.937494206325
Epoch Step: 20 / 67 Loss (mean): 0.36713882361436845 Loss (std): 0.7457858593621984 Loss ratio: 2.0313456692489416 Tokens per Sec: 3841.9780221117885
Epoch Step: 25 / 67 Loss (mean): 0.06727204574599455 Loss (std): 0.12318751739102404 Loss ratio: 1.8311843504232777 Tokens per Sec: 2134.369505925693
Epoch Step: 30 / 67 Loss (mean): 0.20344271116493928 Loss (std): 0.5396319321140151 Loss ratio: 2.6525006918361087 Tokens per Sec: 3308.4821829142948
Epoch Step: 35 / 67 Loss (mean): 0.044402571239515964 Loss (std): 0.10356743315767125 Loss ratio: 2.3324647709928485 Tokens per Sec: 2520.1997318378067
Epoch Step: 40 / 67 Loss (mean): 0.31096423472627066 Loss (std): 0.7111686769152421 Loss ratio: 2.2869790075416723 Tokens per Sec: 3452.6975576938335
Epoch Step: 45 / 67 Loss (mean): 0.22895361246264656 Loss (std): 0.5416458518560261 Loss ratio: 2.365744947328118 Tokens per Sec: 2809.6469876458705
Epoch Step: 50 / 67 Loss (mean): 2.6938495021822746 Loss (std): 10.843337920839 Loss ratio: 4.025220381485626 Tokens per Sec: 2618.3645502588556
Epoch Step: 55 / 67 Loss (mean): 0.24600702037241717 Loss (std): 0.47532728168336236 Loss ratio: 1.9321695818427833 Tokens per Sec: 2892.825600724147
Epoch Step: 60 / 67 Loss (mean): 0.11747751042548771 Loss (std): 0.31967640592777585 Loss ratio: 2.7211710970887193 Tokens per Sec: 3010.841528500997
Epoch Step: 65 / 67 Loss (mean): 0.15203919505006525 Loss (std): 0.36156290444333106 Loss ratio: 2.3780900992291585 Tokens per Sec: 2635.0586927630784
Mean loss per sample: 0.4482326942753464 Std loss per sample: 3.061051371858504 ratio: 6.829156844096964
Epoch ended with duration 0:00:11.306756
Train perplexity: 1.062522454872564
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the exception use ( zip , call[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.70418918132782 Loss (std): 44.184045657738885 Loss ratio: 0.44315134620254737 Tokens per Sec: 4460.41398129941
Mean loss per sample: 103.66694957730894 Std loss per sample: 52.6379334093027 ratio: 0.5077600298255937
Epoch ended with duration 0:00:01.002141
b'BLEU = 2.13, 8.6/2.4/1.3/0.9 (BP=0.968, ratio=0.969, hyp_len=3015, ref_len=3113)\n'
Validation perplexity: 1262656.6581708163
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.13
Epoch 780 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.096586561886852 Loss (std): 0.23091397530022756 Loss ratio: 2.3907464018725064 Tokens per Sec: 2647.1628195363623
Epoch Step: 10 / 67 Loss (mean): 0.23132433395767293 Loss (std): 0.502231624042094 Loss ratio: 2.171114536242395 Tokens per Sec: 2987.2756770659435
Epoch Step: 15 / 67 Loss (mean): 0.13087016466351997 Loss (std): 0.34906669350095615 Loss ratio: 2.667274809338254 Tokens per Sec: 3341.0235906662497
Epoch Step: 20 / 67 Loss (mean): 0.2877597882716145 Loss (std): 1.0577206350272779 Loss ratio: 3.6757068851777945 Tokens per Sec: 2933.1426389514554
Epoch Step: 25 / 67 Loss (mean): 0.34679500771017047 Loss (std): 1.1866108624074339 Loss ratio: 3.4216492049364473 Tokens per Sec: 2442.4598958394217
Epoch Step: 30 / 67 Loss (mean): 0.06997238225345168 Loss (std): 0.14376692982892653 Loss ratio: 2.0546239130201207 Tokens per Sec: 2346.1871984502122
Epoch Step: 35 / 67 Loss (mean): 0.25576299128215396 Loss (std): 0.6770738978439149 Loss ratio: 2.6472707972709664 Tokens per Sec: 2628.551836190783
Epoch Step: 40 / 67 Loss (mean): 0.34790518539648474 Loss (std): 0.7602142369206549 Loss ratio: 2.185119017568791 Tokens per Sec: 2636.958911769801
Epoch Step: 45 / 67 Loss (mean): 0.7502376552847636 Loss (std): 1.1095789101063198 Loss ratio: 1.4789699001247318 Tokens per Sec: 3499.55230822659
Epoch Step: 50 / 67 Loss (mean): 1.0159112134388124 Loss (std): 1.7290050661185306 Loss ratio: 1.7019253683261635 Tokens per Sec: 3248.8323034689292
Epoch Step: 55 / 67 Loss (mean): 0.13931151079395931 Loss (std): 0.39177973351685313 Loss ratio: 2.812256727990643 Tokens per Sec: 2568.133509021344
Epoch Step: 60 / 67 Loss (mean): 0.7646786540117319 Loss (std): 5.484533773850109 Loss ratio: 7.172338007706391 Tokens per Sec: 2881.6609835411186
Epoch Step: 65 / 67 Loss (mean): 0.07740001521096929 Loss (std): 0.167459347837284 Loss ratio: 2.163557040406774 Tokens per Sec: 2553.7852191651773
Mean loss per sample: 0.3658942207006138 Std loss per sample: 2.508292010111109 ratio: 6.855238121302475
Epoch ended with duration 0:00:11.245106
Train perplexity: 1.050751249044044
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.37535002827644 Loss (std): 44.98968902540904 Loss ratio: 0.44821451693802444 Tokens per Sec: 4457.742567692221
Mean loss per sample: 104.13296689487017 Std loss per sample: 53.971965971293116 ratio: 0.5182985521365367
Epoch ended with duration 0:00:01.003379
b'BLEU = 2.47, 8.4/2.7/1.8/1.3 (BP=0.914, ratio=0.917, hyp_len=2855, ref_len=3113)\n'
Validation perplexity: 1344969.9271896982
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.47
Model saved checkpoint_commit_msg_generator!
Epoch 781 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.29051016016103404 Loss (std): 0.7162041296068605 Loss ratio: 2.4653324662031033 Tokens per Sec: 2690.9361149348433
Epoch Step: 10 / 67 Loss (mean): 0.09532814051453897 Loss (std): 0.25179788234385037 Loss ratio: 2.641380404408994 Tokens per Sec: 3090.8848899836103
Epoch Step: 15 / 67 Loss (mean): 0.062213687547704295 Loss (std): 0.20771509815050576 Loss ratio: 3.3387363189367885 Tokens per Sec: 2639.496818241564
Epoch Step: 20 / 67 Loss (mean): 0.050310704466028255 Loss (std): 0.08031923725592825 Loss ratio: 1.596464174143356 Tokens per Sec: 2660.1548518752156
Epoch Step: 25 / 67 Loss (mean): 0.16055981446424994 Loss (std): 0.5170890268915929 Loss ratio: 3.2205382686632795 Tokens per Sec: 3378.3467155179646
Epoch Step: 30 / 67 Loss (mean): 0.21313328998530778 Loss (std): 0.5380221597426547 Loss ratio: 2.5243459610638155 Tokens per Sec: 2627.49115035719
Epoch Step: 35 / 67 Loss (mean): 0.03826256795082372 Loss (std): 0.0499076182928139 Loss ratio: 1.3043457605082014 Tokens per Sec: 2637.1924756223166
Epoch Step: 40 / 67 Loss (mean): 0.16196428147782171 Loss (std): 0.49181368230295286 Loss ratio: 3.0365564420467512 Tokens per Sec: 2515.8625207159757
Epoch Step: 45 / 67 Loss (mean): 10.04092611787928 Loss (std): 21.924715111987425 Loss ratio: 2.183535149506517 Tokens per Sec: 3228.9830779010354
Epoch Step: 50 / 67 Loss (mean): 0.3347134013183677 Loss (std): 0.808105408871791 Loss ratio: 2.4143204475495423 Tokens per Sec: 2968.900843007062
Epoch Step: 55 / 67 Loss (mean): 0.16159528159460024 Loss (std): 0.4487895640111 Loss ratio: 2.7772442337579766 Tokens per Sec: 2563.7880408322203
Epoch Step: 60 / 67 Loss (mean): 0.32638967856564705 Loss (std): 0.9984160570312808 Loss ratio: 3.058969454606906 Tokens per Sec: 2518.3268995867274
Epoch Step: 65 / 67 Loss (mean): 1.3173155170561586 Loss (std): 2.096372765137864 Loss ratio: 1.5913976097561549 Tokens per Sec: 3465.070338705492
Mean loss per sample: 0.45378128346389524 Std loss per sample: 3.4027506255898268 ratio: 7.4986579429086655
Epoch ended with duration 0:00:11.288492
Train perplexity: 1.0633204139071262
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow exception when method_1 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 120.26867878437042 Loss (std): 49.271083599244946 Loss ratio: 0.4096751049172413 Tokens per Sec: 4247.428015812022
Mean loss per sample: 108.1425686721064 Std loss per sample: 55.83738884917848 ratio: 0.516331260990112
Epoch ended with duration 0:00:01.028930
b'BLEU = 2.29, 8.7/2.6/1.6/1.1 (BP=0.907, ratio=0.911, hyp_len=2837, ref_len=3113)\n'
Validation perplexity: 2315775.2516533067
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.29
Epoch 782 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3833497350960897 Loss (std): 1.0869186015498926 Loss ratio: 2.835318514769412 Tokens per Sec: 3020.149350034592
Epoch Step: 10 / 67 Loss (mean): 0.07099599150978975 Loss (std): 0.20755118990807148 Loss ratio: 2.923421245260754 Tokens per Sec: 2629.6604817630305
Epoch Step: 15 / 67 Loss (mean): 0.1784532269768988 Loss (std): 0.5044109021614015 Loss ratio: 2.826572041909327 Tokens per Sec: 3349.6470530515458
Epoch Step: 20 / 67 Loss (mean): 0.08952931521707796 Loss (std): 0.3440480791004031 Loss ratio: 3.8428539106571313 Tokens per Sec: 3074.5053005178297
Epoch Step: 25 / 67 Loss (mean): 0.21475550816830946 Loss (std): 0.5880879246770911 Loss ratio: 2.7384067104634697 Tokens per Sec: 3276.2822807191214
Epoch Step: 30 / 67 Loss (mean): 0.12770941836788552 Loss (std): 0.32603683167873826 Loss ratio: 2.552958394497905 Tokens per Sec: 2352.890113197909
Epoch Step: 35 / 67 Loss (mean): 0.2962833620586025 Loss (std): 0.7888231784218915 Loss ratio: 2.6623944488177793 Tokens per Sec: 2608.6243270193067
Epoch Step: 40 / 67 Loss (mean): 0.16518606780800837 Loss (std): 0.3565144218010368 Loss ratio: 2.1582596312868505 Tokens per Sec: 2604.793382116337
Epoch Step: 45 / 67 Loss (mean): 0.16097408443249606 Loss (std): 0.5787001072243794 Loss ratio: 3.594989275848656 Tokens per Sec: 2971.214953364398
Epoch Step: 50 / 67 Loss (mean): 0.08790495914581697 Loss (std): 0.21561528300786253 Loss ratio: 2.4528227429148717 Tokens per Sec: 2414.3754179892467
Epoch Step: 55 / 67 Loss (mean): 0.20327337350045127 Loss (std): 0.6523380425433798 Loss ratio: 3.2091662144915976 Tokens per Sec: 3141.7315326826906
Epoch Step: 60 / 67 Loss (mean): 0.4600203129220972 Loss (std): 3.0008627815147144 Loss ratio: 6.523326681930456 Tokens per Sec: 2550.6384136636016
Epoch Step: 65 / 67 Loss (mean): 0.22862599779546144 Loss (std): 0.4822951686351379 Loss ratio: 2.109537730991642 Tokens per Sec: 3036.574273632353
Mean loss per sample: 0.3651321601897973 Std loss per sample: 2.5730640530473394 ratio: 7.046938981517951
Epoch ended with duration 0:00:11.233594
Train perplexity: 1.0506429152723216
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the exception over error codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.71913549304008 Loss (std): 44.84122510440297 Loss ratio: 0.44521058371774447 Tokens per Sec: 4345.611449035994
Mean loss per sample: 105.60535521228172 Std loss per sample: 53.73846058760437 ratio: 0.5088611318960337
Epoch ended with duration 0:00:01.018349
b'BLEU = 2.21, 8.3/2.4/1.5/1.1 (BP=0.914, ratio=0.917, hyp_len=2856, ref_len=3113)\n'
Validation perplexity: 1641986.261083819
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.21
Epoch 783 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.08547366709035487 Loss (std): 0.1682013358853853 Loss ratio: 1.967873166218297 Tokens per Sec: 3010.8840437506637
Epoch Step: 10 / 67 Loss (mean): 0.6654410466398986 Loss (std): 1.4224746865610691 Loss ratio: 2.1376419349899782 Tokens per Sec: 2761.148124576636
Epoch Step: 15 / 67 Loss (mean): 0.11992765941431571 Loss (std): 0.27872934566848406 Loss ratio: 2.3241456310387414 Tokens per Sec: 3271.4573548573417
Epoch Step: 20 / 67 Loss (mean): 0.11963099182321457 Loss (std): 0.4181356503701301 Loss ratio: 3.495211767432578 Tokens per Sec: 2272.14264029252
Epoch Step: 25 / 67 Loss (mean): 1.325703426506152 Loss (std): 7.233026541983921 Loss ratio: 5.455991436219128 Tokens per Sec: 2595.3881790331016
Epoch Step: 30 / 67 Loss (mean): 0.16054570825508563 Loss (std): 0.4704708678651963 Loss ratio: 2.930448113366451 Tokens per Sec: 2710.3636999170076
Epoch Step: 35 / 67 Loss (mean): 1.000453171153822 Loss (std): 1.3108846203955267 Loss ratio: 1.3102908343862654 Tokens per Sec: 2900.762909957668
Epoch Step: 40 / 67 Loss (mean): 0.4925998032776988 Loss (std): 0.9415460240709046 Loss ratio: 1.911381242554245 Tokens per Sec: 2673.629885419614
Epoch Step: 45 / 67 Loss (mean): 0.9940284127624182 Loss (std): 5.605620567501331 Loss ratio: 5.639296116217883 Tokens per Sec: 2615.182164973374
Epoch Step: 50 / 67 Loss (mean): 0.18572700543518295 Loss (std): 0.6533316194696541 Loss ratio: 3.5176985594464933 Tokens per Sec: 3042.8095381171293
Epoch Step: 55 / 67 Loss (mean): 0.7590987118474004 Loss (std): 5.119548084570024 Loss ratio: 6.744245517306573 Tokens per Sec: 2712.605075831017
Epoch Step: 60 / 67 Loss (mean): 0.9959417298487097 Loss (std): 1.6131852786990861 Loss ratio: 1.619758697071705 Tokens per Sec: 3085.8387694962335
Epoch Step: 65 / 67 Loss (mean): 0.06646755588926248 Loss (std): 0.11468916307587722 Loss ratio: 1.7254909036666521 Tokens per Sec: 2713.08395271849
Mean loss per sample: 0.43910082924415295 Std loss per sample: 2.9647362729595064 ratio: 6.751834830425761
Epoch ended with duration 0:00:11.359050
Train perplexity: 1.0612104778919325
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.64952075481415 Loss (std): 46.32917276315406 Loss ratio: 0.46030197079639945 Tokens per Sec: 4334.1282472659905
Mean loss per sample: 107.51050143372115 Std loss per sample: 55.37175048730792 ratio: 0.5150357383594187
Epoch ended with duration 0:00:01.034223
b'BLEU = 2.66, 9.0/2.9/1.9/1.5 (BP=0.904, ratio=0.908, hyp_len=2828, ref_len=3113)\n'
Validation perplexity: 2125672.198810687
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.66
Epoch 784 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.0970807317667095 Loss (std): 0.1715458448164755 Loss ratio: 1.767043178338518 Tokens per Sec: 3026.9480335190706
Epoch Step: 10 / 67 Loss (mean): 0.23867897859872755 Loss (std): 0.6008962445214805 Loss ratio: 2.5175918216564885 Tokens per Sec: 2670.7678280647465
Epoch Step: 15 / 67 Loss (mean): 1.770455788486288 Loss (std): 6.562563733616248 Loss ratio: 3.7067086206242617 Tokens per Sec: 2865.8148614212732
Epoch Step: 20 / 67 Loss (mean): 0.05662234132250887 Loss (std): 0.08959021680026327 Loss ratio: 1.5822414740848734 Tokens per Sec: 2574.592274847002
Epoch Step: 25 / 67 Loss (mean): 0.2227166263764957 Loss (std): 0.6759588782248075 Loss ratio: 3.035062488249618 Tokens per Sec: 3302.0519017338443
Epoch Step: 30 / 67 Loss (mean): 0.745347031829624 Loss (std): 4.034670735334979 Loss ratio: 5.413143895442853 Tokens per Sec: 2732.6108632021933
Epoch Step: 35 / 67 Loss (mean): 0.09727890869453404 Loss (std): 0.23089419560363197 Loss ratio: 2.3735278150443064 Tokens per Sec: 2748.956841878127
Epoch Step: 40 / 67 Loss (mean): 0.17260963024000375 Loss (std): 0.44950453303793186 Loss ratio: 2.6041683329772605 Tokens per Sec: 2883.1768022162064
Epoch Step: 45 / 67 Loss (mean): 0.2538336395118108 Loss (std): 0.7415184843878816 Loss ratio: 2.921277439089703 Tokens per Sec: 2557.6225618733106
Epoch Step: 50 / 67 Loss (mean): 0.10932960949958215 Loss (std): 0.36061605740161184 Loss ratio: 3.2984299409117535 Tokens per Sec: 2600.910888867882
Epoch Step: 55 / 67 Loss (mean): 0.12255532847302675 Loss (std): 0.41030222681576 Loss ratio: 3.347893820104799 Tokens per Sec: 2493.0511462962013
Epoch Step: 60 / 67 Loss (mean): 0.16658959554479225 Loss (std): 0.3680136004357328 Loss ratio: 2.2091031509634833 Tokens per Sec: 2800.0326094375387
Epoch Step: 65 / 67 Loss (mean): 0.5310466084592917 Loss (std): 1.1423408304272946 Loss ratio: 2.1511121853155806 Tokens per Sec: 3151.0492270994596
Mean loss per sample: 0.33317477746306795 Std loss per sample: 2.1746880595546587 ratio: 6.527168941519651
Epoch ended with duration 0:00:11.260200
Train perplexity: 1.0461099264073064
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire into android_icu4j[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 121.77601590752602 Loss (std): 49.4476336726036 Loss ratio: 0.4060539614808307 Tokens per Sec: 4349.310886956522
Mean loss per sample: 108.78870614931239 Std loss per sample: 54.900029291858125 ratio: 0.5046482418543327
Epoch ended with duration 0:00:01.030885
b'BLEU = 2.54, 8.7/2.7/1.7/1.3 (BP=0.952, ratio=0.953, hyp_len=2967, ref_len=3113)\n'
Validation perplexity: 2527694.7338489494
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.54
Epoch 785 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.06115313113264165 Loss (std): 0.0975376471509602 Loss ratio: 1.5949738851376265 Tokens per Sec: 2675.481595017901
Epoch Step: 10 / 67 Loss (mean): 0.029192434341114546 Loss (std): 0.03844710289091498 Loss ratio: 1.317022843715578 Tokens per Sec: 2732.761760862896
Epoch Step: 15 / 67 Loss (mean): 0.15452790677954908 Loss (std): 0.5115536250530346 Loss ratio: 3.3104287485290382 Tokens per Sec: 3080.2038996022793
Epoch Step: 20 / 67 Loss (mean): 1.0350951573118436 Loss (std): 1.3448645708111115 Loss ratio: 1.299266604921371 Tokens per Sec: 3171.9091499463575
Epoch Step: 25 / 67 Loss (mean): 0.2293136680009411 Loss (std): 0.6516756553546782 Loss ratio: 2.8418526511555506 Tokens per Sec: 2699.736382842123
Epoch Step: 30 / 67 Loss (mean): 0.15690766523403 Loss (std): 0.4004663793512483 Loss ratio: 2.5522422932872466 Tokens per Sec: 2929.4245340203947
Epoch Step: 35 / 67 Loss (mean): 0.07595449437758361 Loss (std): 0.1405522661311462 Loss ratio: 1.8504799127808724 Tokens per Sec: 2937.992172369905
Epoch Step: 40 / 67 Loss (mean): 0.3944480399695749 Loss (std): 0.7628686771583585 Loss ratio: 1.9340156366785373 Tokens per Sec: 2740.333775847191
Epoch Step: 45 / 67 Loss (mean): 0.4037746903086372 Loss (std): 0.8814894725114002 Loss ratio: 2.1831221561648837 Tokens per Sec: 2989.5867429822683
Epoch Step: 50 / 67 Loss (mean): 0.2045742940076707 Loss (std): 0.42856600193046107 Loss ratio: 2.094916196628261 Tokens per Sec: 2686.5398751740945
Epoch Step: 55 / 67 Loss (mean): 0.17663067183093517 Loss (std): 0.4213621090989787 Loss ratio: 2.3855545853456985 Tokens per Sec: 2864.3502809350516
Epoch Step: 60 / 67 Loss (mean): 0.1150407568366063 Loss (std): 0.25495652293839344 Loss ratio: 2.2162277956890626 Tokens per Sec: 2554.976634560861
Epoch Step: 65 / 67 Loss (mean): 0.19329344401194248 Loss (std): 0.5361097484723326 Loss ratio: 2.7735537085221034 Tokens per Sec: 2947.4232362473185
Mean loss per sample: 0.3308187754864217 Std loss per sample: 2.083919990587019 ratio: 6.29927968121795
Epoch ended with duration 0:00:11.274058
Train perplexity: 1.045776514860379
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: throw exception when method_1 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.00271326303482 Loss (std): 44.37477878791146 Loss ratio: 0.44373574816108746 Tokens per Sec: 4430.9364421982345
Mean loss per sample: 105.81948084011674 Std loss per sample: 53.16702055782131 ratio: 0.5024313116613345
Epoch ended with duration 0:00:01.027526
b'BLEU = 2.44, 8.1/2.7/1.6/1.3 (BP=0.938, ratio=0.940, hyp_len=2927, ref_len=3113)\n'
Validation perplexity: 1690331.2264866075
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.44
Model saved checkpoint_commit_msg_generator!
Epoch 786 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.15912787741626744 Loss (std): 0.40267079565589614 Loss ratio: 2.5304855578670065 Tokens per Sec: 2322.1411972712817
Epoch Step: 10 / 67 Loss (mean): 2.560482276037874 Loss (std): 7.792639012964769 Loss ratio: 3.043426266173265 Tokens per Sec: 2981.649072253356
Epoch Step: 15 / 67 Loss (mean): 0.21679636162116367 Loss (std): 0.7869546387884305 Loss ratio: 3.6299254881573066 Tokens per Sec: 3005.546681437347
Epoch Step: 20 / 67 Loss (mean): 0.6603903787381569 Loss (std): 1.5951573691238663 Loss ratio: 2.4154763916636983 Tokens per Sec: 2698.7630758421274
Epoch Step: 25 / 67 Loss (mean): 0.10877260549568746 Loss (std): 0.1825724922586851 Loss ratio: 1.678478615334112 Tokens per Sec: 2887.049674113005
Epoch Step: 30 / 67 Loss (mean): 0.13279103376316925 Loss (std): 0.4448036599558141 Loss ratio: 3.3496513081531885 Tokens per Sec: 2439.0208937317275
Epoch Step: 35 / 67 Loss (mean): 0.12718877852285004 Loss (std): 0.25053373440085114 Loss ratio: 1.9697786024090294 Tokens per Sec: 2663.003991063519
Epoch Step: 40 / 67 Loss (mean): 1.3051622830757879 Loss (std): 5.352411653039522 Loss ratio: 4.100954894609623 Tokens per Sec: 2889.7316468324952
Epoch Step: 45 / 67 Loss (mean): 0.18418872404618014 Loss (std): 0.5346116826478109 Loss ratio: 2.9025212342193765 Tokens per Sec: 3094.363494156464
Epoch Step: 50 / 67 Loss (mean): 0.18271883434726988 Loss (std): 0.4563751431872219 Loss ratio: 2.497690754308607 Tokens per Sec: 2347.3857597795263
Epoch Step: 55 / 67 Loss (mean): 0.26096817204097533 Loss (std): 0.8153366148757956 Loss ratio: 3.1242760697568026 Tokens per Sec: 2744.84199582736
Epoch Step: 60 / 67 Loss (mean): 0.3280907892403775 Loss (std): 1.0469546023263339 Loss ratio: 3.191051491418971 Tokens per Sec: 3060.8689064445816
Epoch Step: 65 / 67 Loss (mean): 0.3565297761788315 Loss (std): 0.7778204268717793 Loss ratio: 2.181642260593777 Tokens per Sec: 3485.538347522496
Mean loss per sample: 0.6324714093966332 Std loss per sample: 3.934991276007891 ratio: 6.221611313247827
Epoch ended with duration 0:00:11.319522
Train perplexity: 1.0893412994692588
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link to appear before scrolling[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.62238028645515 Loss (std): 45.51676060686501 Loss ratio: 0.4523522548093811 Tokens per Sec: 4432.357856286438
Mean loss per sample: 105.48240081208651 Std loss per sample: 53.81459934048358 ratio: 0.5101760950279521
Epoch ended with duration 0:00:01.019864
b'BLEU = 2.62, 9.1/2.8/1.7/1.3 (BP=0.957, ratio=0.958, hyp_len=2981, ref_len=3113)\n'
Validation perplexity: 1614853.3058587292
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.62
Epoch 787 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.153057166772669 Loss (std): 0.2991779577591475 Loss ratio: 1.9546811434416993 Tokens per Sec: 2703.5862011802014
Epoch Step: 10 / 67 Loss (mean): 0.02004636448587657 Loss (std): 0.021970963110674372 Loss ratio: 1.0960073646348074 Tokens per Sec: 2898.493528289876
Epoch Step: 15 / 67 Loss (mean): 0.34384409376343683 Loss (std): 0.8036804046682737 Loss ratio: 2.337339565358951 Tokens per Sec: 2812.3083000194533
Epoch Step: 20 / 67 Loss (mean): 0.13509035656352353 Loss (std): 0.3541944723661136 Loss ratio: 2.621907894658349 Tokens per Sec: 2602.0071373004475
Epoch Step: 25 / 67 Loss (mean): 0.10008211970307457 Loss (std): 0.36698768763799244 Loss ratio: 3.6668656571900966 Tokens per Sec: 2812.485196253499
Epoch Step: 30 / 67 Loss (mean): 0.15604307535340922 Loss (std): 0.3135771549994719 Loss ratio: 2.009555081436819 Tokens per Sec: 2969.6195402697317
Epoch Step: 35 / 67 Loss (mean): 0.3284169112166637 Loss (std): 0.7469446591191095 Loss ratio: 2.274379404982388 Tokens per Sec: 3258.8459951927002
Epoch Step: 40 / 67 Loss (mean): 0.22478171610146092 Loss (std): 0.6690108854930887 Loss ratio: 2.976269142776336 Tokens per Sec: 2457.648281415952
Epoch Step: 45 / 67 Loss (mean): 0.09629266043157259 Loss (std): 0.22536933708222412 Loss ratio: 2.340462254050774 Tokens per Sec: 2728.884817006144
Epoch Step: 50 / 67 Loss (mean): 0.07397336823441947 Loss (std): 0.1365499210890783 Loss ratio: 1.845933534570922 Tokens per Sec: 2756.0695729606578
Epoch Step: 55 / 67 Loss (mean): 0.2276357335413195 Loss (std): 0.6384033391601804 Loss ratio: 2.804495275098363 Tokens per Sec: 2721.976972000552
Epoch Step: 60 / 67 Loss (mean): 0.10949391324260205 Loss (std): 0.33928235531792833 Loss ratio: 3.0986412419674108 Tokens per Sec: 3678.688037867784
Epoch Step: 65 / 67 Loss (mean): 0.15017158271712105 Loss (std): 0.4151961149605477 Loss ratio: 2.7648114739701097 Tokens per Sec: 2312.4629513215727
Mean loss per sample: 0.37601631706324307 Std loss per sample: 2.8832445956659307 ratio: 7.667870953538942
Epoch ended with duration 0:00:11.313021
Train perplexity: 1.0521912563101739
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.78922715783119 Loss (std): 43.9973498814129 Loss ratio: 0.44090280218148886 Tokens per Sec: 4441.418175715335
Mean loss per sample: 103.26958432880643 Std loss per sample: 52.893113061512175 ratio: 0.5121848161323329
Epoch ended with duration 0:00:01.006704
b'BLEU = 2.48, 8.2/2.7/1.7/1.4 (BP=0.930, ratio=0.932, hyp_len=2901, ref_len=3113)\n'
Validation perplexity: 1196460.7831144426
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.48
Epoch 788 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.1543326740211342 Loss (std): 4.329352558094253 Loss ratio: 3.7505241387761226 Tokens per Sec: 2425.222693660907
Epoch Step: 10 / 67 Loss (mean): 0.044465223589213565 Loss (std): 0.06478389305496123 Loss ratio: 1.456956421797384 Tokens per Sec: 2367.4911073480853
Epoch Step: 15 / 67 Loss (mean): 0.22559596185874398 Loss (std): 0.812335251876781 Loss ratio: 3.6008412791777786 Tokens per Sec: 2693.2347579946627
Epoch Step: 20 / 67 Loss (mean): 2.124095377723279 Loss (std): 7.641377524070258 Loss ratio: 3.597473825427134 Tokens per Sec: 2819.169891564709
Epoch Step: 25 / 67 Loss (mean): 4.7100017528791795 Loss (std): 14.323478476013149 Loss ratio: 3.0410771009283257 Tokens per Sec: 2275.748454985461
Epoch Step: 30 / 67 Loss (mean): 3.143761554376397 Loss (std): 11.940810603106092 Loss ratio: 3.798255814434596 Tokens per Sec: 2819.685754437698
Epoch Step: 35 / 67 Loss (mean): 0.08811182762053704 Loss (std): 0.20811631676699854 Loss ratio: 2.3619566451767815 Tokens per Sec: 2607.8321446625027
Epoch Step: 40 / 67 Loss (mean): 0.10259740386391059 Loss (std): 0.22233968792661665 Loss ratio: 2.1671083239254 Tokens per Sec: 2915.909865162293
Epoch Step: 45 / 67 Loss (mean): 1.373297177020504 Loss (std): 1.9089734196536703 Loss ratio: 1.3900657859032126 Tokens per Sec: 3298.867900384732
Epoch Step: 50 / 67 Loss (mean): 0.21651692529121647 Loss (std): 0.5011821979138475 Loss ratio: 2.3147483608487174 Tokens per Sec: 3324.522991327115
Epoch Step: 55 / 67 Loss (mean): 0.049360000145497906 Loss (std): 0.07567182439853365 Loss ratio: 1.5330596469910187 Tokens per Sec: 2791.6550811168377
Epoch Step: 60 / 67 Loss (mean): 0.21134372587675898 Loss (std): 0.6862542285492819 Loss ratio: 3.2471000769119485 Tokens per Sec: 2637.4876643618495
Epoch Step: 65 / 67 Loss (mean): 0.1857794105908397 Loss (std): 0.5607909912414258 Loss ratio: 3.0185852644161475 Tokens per Sec: 3644.0994782508533
Mean loss per sample: 0.4493944663067166 Std loss per sample: 2.983704732858908 ratio: 6.639389125949979
Epoch ended with duration 0:00:11.357463
Train perplexity: 1.0626894831674567
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily nested ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.94127833843231 Loss (std): 44.445441062549094 Loss ratio: 0.44471555498863025 Tokens per Sec: 4441.173667858567
Mean loss per sample: 103.21849078425497 Std loss per sample: 53.194551583288074 ratio: 0.5153587422090308
Epoch ended with duration 0:00:01.005677
b'BLEU = 2.46, 8.2/2.7/1.7/1.3 (BP=0.941, ratio=0.943, hyp_len=2935, ref_len=3113)\n'
Validation perplexity: 1188204.9953167806
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.46
Epoch 789 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.15257954731623613 Loss (std): 0.44424598289297007 Loss ratio: 2.9115696743563313 Tokens per Sec: 2260.2088030522145
Epoch Step: 10 / 67 Loss (mean): 0.13131468383153333 Loss (std): 0.45649931687635137 Loss ratio: 3.476376773385107 Tokens per Sec: 2380.303582204526
Epoch Step: 15 / 67 Loss (mean): 0.5084306290773384 Loss (std): 1.1630846894667217 Loss ratio: 2.28759760515884 Tokens per Sec: 3415.6199061022803
Epoch Step: 20 / 67 Loss (mean): 0.07057819720102998 Loss (std): 0.12156362462310664 Loss ratio: 1.7223962844623724 Tokens per Sec: 2793.795559680455
Epoch Step: 25 / 67 Loss (mean): 0.15219904705099907 Loss (std): 0.3816869382201429 Loss ratio: 2.5078142446729426 Tokens per Sec: 2936.7045838806216
Epoch Step: 30 / 67 Loss (mean): 0.13975567571264946 Loss (std): 0.2560924773090976 Loss ratio: 1.8324298888271797 Tokens per Sec: 2637.0735794431175
Epoch Step: 35 / 67 Loss (mean): 0.49741032337806246 Loss (std): 1.035197464325496 Loss ratio: 2.081174064291951 Tokens per Sec: 3048.471726655676
Epoch Step: 40 / 67 Loss (mean): 0.10245432607371185 Loss (std): 0.2810545757142782 Loss ratio: 2.74321823670062 Tokens per Sec: 2537.4503920240054
Epoch Step: 45 / 67 Loss (mean): 0.84218854984465 Loss (std): 1.3469616983120312 Loss ratio: 1.5993588354537611 Tokens per Sec: 3559.835129386717
Epoch Step: 50 / 67 Loss (mean): 0.1837905086695173 Loss (std): 0.5359021344956796 Loss ratio: 2.9158313907238345 Tokens per Sec: 2376.230877277097
Epoch Step: 55 / 67 Loss (mean): 0.19076888206654985 Loss (std): 0.5252009559526469 Loss ratio: 2.7530745594526795 Tokens per Sec: 2766.6229750706093
Epoch Step: 60 / 67 Loss (mean): 0.14996190758211014 Loss (std): 0.46860740534499434 Loss ratio: 3.1248429211159046 Tokens per Sec: 3048.3171533734812
Epoch Step: 65 / 67 Loss (mean): 1.1336175793185248 Loss (std): 1.4914656526979637 Loss ratio: 1.3156691285561746 Tokens per Sec: 3110.1488676458907
Mean loss per sample: 0.43441441456398716 Std loss per sample: 3.5655214439225795 ratio: 8.207649940670638
Epoch ended with duration 0:00:11.291739
Train perplexity: 1.060537808843251
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the exception over error codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.09988197684288 Loss (std): 46.06988911535648 Loss ratio: 0.460239195147246 Tokens per Sec: 4321.008282704805
Mean loss per sample: 106.1557612607683 Std loss per sample: 54.739633745139585 ratio: 0.5156539135984658
Epoch ended with duration 0:00:01.018653
b'BLEU = 2.65, 8.6/3.0/2.0/1.6 (BP=0.883, ratio=0.889, hyp_len=2768, ref_len=3113)\n'
Validation perplexity: 1769145.253080934
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.65
Epoch 790 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.316010859221592 Loss (std): 0.9592455344846731 Loss ratio: 3.035482821215439 Tokens per Sec: 3145.7212370857924
Epoch Step: 10 / 67 Loss (mean): 0.05964046230474196 Loss (std): 0.12173788663923936 Loss ratio: 2.041196227105035 Tokens per Sec: 2517.066426654368
Epoch Step: 15 / 67 Loss (mean): 0.06825402119102364 Loss (std): 0.13505170499998623 Loss ratio: 1.9786629804860116 Tokens per Sec: 3051.021375319407
Epoch Step: 20 / 67 Loss (mean): 0.21967615765424853 Loss (std): 0.7523820412483757 Loss ratio: 3.4249599468712515 Tokens per Sec: 3231.614953372133
Epoch Step: 25 / 67 Loss (mean): 0.09675532967662548 Loss (std): 0.2017465988166527 Loss ratio: 2.0851213002004934 Tokens per Sec: 2816.1615876126966
Epoch Step: 30 / 67 Loss (mean): 0.19433653941496232 Loss (std): 0.8314118953507685 Loss ratio: 4.27820675336548 Tokens per Sec: 2417.7052551037436
Epoch Step: 35 / 67 Loss (mean): 0.1501411488134181 Loss (std): 0.41833293022832163 Loss ratio: 2.786264348810785 Tokens per Sec: 3198.555509749307
Epoch Step: 40 / 67 Loss (mean): 0.28862952988583856 Loss (std): 0.7656457162586299 Loss ratio: 2.652693633120163 Tokens per Sec: 3018.641169793148
Epoch Step: 45 / 67 Loss (mean): 0.23240308583308433 Loss (std): 0.4630456273687994 Loss ratio: 1.9924246087737676 Tokens per Sec: 3127.5595620329477
Epoch Step: 50 / 67 Loss (mean): 0.19672252198324713 Loss (std): 1.0436704458861354 Loss ratio: 5.30529212092459 Tokens per Sec: 2375.0932536614323
Epoch Step: 55 / 67 Loss (mean): 0.09003633747624917 Loss (std): 0.33618337272970084 Loss ratio: 3.733863261801194 Tokens per Sec: 2471.6927426583457
Epoch Step: 60 / 67 Loss (mean): 0.1018960096016599 Loss (std): 0.2610422326920987 Loss ratio: 2.5618494160133065 Tokens per Sec: 2635.876663988485
Epoch Step: 65 / 67 Loss (mean): 0.5984586879003473 Loss (std): 0.9161307865599745 Loss ratio: 1.53081708910294 Tokens per Sec: 2732.554592352284
Mean loss per sample: 0.5669475389554453 Std loss per sample: 4.086001027382329 ratio: 7.2070178396231395
Epoch ended with duration 0:00:11.319885
Train perplexity: 1.0797265775948162
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 118.0831089913845 Loss (std): 47.01361331008206 Loss ratio: 0.398140036383292 Tokens per Sec: 4353.393613053633
Mean loss per sample: 104.57448088786886 Std loss per sample: 52.98785681032861 ratio: 0.5066996877292217
Epoch ended with duration 0:00:01.015767
b'BLEU = 2.49, 8.1/2.7/1.7/1.3 (BP=0.941, ratio=0.943, hyp_len=2936, ref_len=3113)\n'
Validation perplexity: 1427899.8210792611
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.49
Model saved checkpoint_commit_msg_generator!
Epoch 791 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.0656902105856716 Loss (std): 0.0954206784958143 Loss ratio: 1.4525859735427236 Tokens per Sec: 2854.1507886009163
Epoch Step: 10 / 67 Loss (mean): 0.3128691767642522 Loss (std): 1.0051946826951574 Loss ratio: 3.2128274606372442 Tokens per Sec: 2439.2539782474855
Epoch Step: 15 / 67 Loss (mean): 0.19096226108331393 Loss (std): 0.39765889163043433 Loss ratio: 2.0823951778458563 Tokens per Sec: 3180.6716689149093
Epoch Step: 20 / 67 Loss (mean): 0.12371194724255474 Loss (std): 0.20977770282901387 Loss ratio: 1.695694777301622 Tokens per Sec: 3065.348358548447
Epoch Step: 25 / 67 Loss (mean): 1.3409491038910346 Loss (std): 2.6868606918665168 Loss ratio: 2.00370072515806 Tokens per Sec: 2748.221454284437
Epoch Step: 30 / 67 Loss (mean): 0.24715522044971294 Loss (std): 0.8592652738543042 Loss ratio: 3.476621987958912 Tokens per Sec: 2785.2777099675186
Epoch Step: 35 / 67 Loss (mean): 2.0129782106573657 Loss (std): 8.903442864585024 Loss ratio: 4.423019989708425 Tokens per Sec: 2625.3028272785327
Epoch Step: 40 / 67 Loss (mean): 0.14797907239653796 Loss (std): 0.2976509644140735 Loss ratio: 2.0114395880010747 Tokens per Sec: 3078.0735947092126
Epoch Step: 45 / 67 Loss (mean): 3.112006470884012 Loss (std): 10.898333532492135 Loss ratio: 3.502027914934348 Tokens per Sec: 2760.770375331009
Epoch Step: 50 / 67 Loss (mean): 0.40923849946102564 Loss (std): 1.1551634618838031 Loss ratio: 2.8227145378677077 Tokens per Sec: 2807.170345067276
Epoch Step: 55 / 67 Loss (mean): 0.08083118357353669 Loss (std): 0.14509190432898114 Loss ratio: 1.7949991317024678 Tokens per Sec: 2313.0063407892585
Epoch Step: 60 / 67 Loss (mean): 0.182960032822848 Loss (std): 0.43752987859911224 Loss ratio: 2.3913959341205016 Tokens per Sec: 2895.1866728301484
Epoch Step: 65 / 67 Loss (mean): 1.5715616951297307 Loss (std): 2.3498187524456453 Loss ratio: 1.4952125390480902 Tokens per Sec: 2723.9238341426617
Mean loss per sample: 0.3869501244033971 Std loss per sample: 2.5703085785159185 ratio: 6.642480300216576
Epoch ended with duration 0:00:11.289474
Train perplexity: 1.053748957890096
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the print error codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a unit tests for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.11570501327515 Loss (std): 44.747168760014354 Loss ratio: 0.4469545387917007 Tokens per Sec: 4421.979389117599
Mean loss per sample: 103.52099601921365 Std loss per sample: 53.54675372507316 ratio: 0.5172550089755203
Epoch ended with duration 0:00:01.008327
b'BLEU = 2.58, 9.0/2.8/1.8/1.4 (BP=0.910, ratio=0.914, hyp_len=2844, ref_len=3113)\n'
Validation perplexity: 1237927.5351593534
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.58
Epoch 792 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.210080412716934 Loss (std): 0.6794905788832009 Loss ratio: 3.2344309024123934 Tokens per Sec: 2856.9573173102112
Epoch Step: 10 / 67 Loss (mean): 0.1559323892242901 Loss (std): 0.38694358761677133 Loss ratio: 2.481483093677217 Tokens per Sec: 2609.913729909431
Epoch Step: 15 / 67 Loss (mean): 0.09533784227096476 Loss (std): 0.26830846018987226 Loss ratio: 2.8142913013208175 Tokens per Sec: 2263.0253775208616
Epoch Step: 20 / 67 Loss (mean): 0.16283777520766307 Loss (std): 0.4422621034225203 Loss ratio: 2.7159674888613172 Tokens per Sec: 2511.9080477943435
Epoch Step: 25 / 67 Loss (mean): 0.0604759612633643 Loss (std): 0.07979312076305893 Loss ratio: 1.3194188086663248 Tokens per Sec: 2516.9471939049868
Epoch Step: 30 / 67 Loss (mean): 0.1338523412844097 Loss (std): 0.37845907614960705 Loss ratio: 2.8274371035875756 Tokens per Sec: 2788.998687623898
Epoch Step: 35 / 67 Loss (mean): 0.24404987181014803 Loss (std): 0.722573274529881 Loss ratio: 2.9607607214478984 Tokens per Sec: 3045.489031108565
Epoch Step: 40 / 67 Loss (mean): 0.5972132310216693 Loss (std): 3.849241364419617 Loss ratio: 6.445338389162297 Tokens per Sec: 3084.063675545919
Epoch Step: 45 / 67 Loss (mean): 0.27423288304044036 Loss (std): 0.6858567984007422 Loss ratio: 2.501001305155665 Tokens per Sec: 2530.543359970858
Epoch Step: 50 / 67 Loss (mean): 0.16313121868370217 Loss (std): 0.49306706811819406 Loss ratio: 3.022518142736431 Tokens per Sec: 3377.4923479935537
Epoch Step: 55 / 67 Loss (mean): 0.4979099639592732 Loss (std): 1.0683379970498994 Loss ratio: 2.1456449446295567 Tokens per Sec: 3372.097325801205
Epoch Step: 60 / 67 Loss (mean): 0.08091587033777614 Loss (std): 0.17797814917962568 Loss ratio: 2.1995456322310027 Tokens per Sec: 2928.0110693652814
Epoch Step: 65 / 67 Loss (mean): 0.3914334786904874 Loss (std): 0.890172903395844 Loss ratio: 2.2741358413538197 Tokens per Sec: 3238.0550168792734
Mean loss per sample: 0.360850317037161 Std loss per sample: 2.196059585081544 ratio: 6.085790926034825
Epoch ended with duration 0:00:11.257736
Train perplexity: 1.0500344203240461
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.72044032812119 Loss (std): 45.3537183864968 Loss ratio: 0.4548086454217856 Tokens per Sec: 4452.201258029585
Mean loss per sample: 104.02994755615832 Std loss per sample: 53.8737836949751 ratio: 0.5178680270495427
Epoch ended with duration 0:00:01.002166
b'BLEU = 2.65, 8.8/2.9/1.8/1.5 (BP=0.922, ratio=0.925, hyp_len=2878, ref_len=3113)\n'
Validation perplexity: 1326323.3134724135
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.65
Epoch 793 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.26279701164821745 Loss (std): 0.8226002563217316 Loss ratio: 3.130173555484992 Tokens per Sec: 3273.070688381442
Epoch Step: 10 / 67 Loss (mean): 0.4059971118495014 Loss (std): 0.9028287780961477 Loss ratio: 2.2237320211056484 Tokens per Sec: 2859.2614040641497
Epoch Step: 15 / 67 Loss (mean): 0.793420970594525 Loss (std): 3.9187806688472535 Loss ratio: 4.939093890990604 Tokens per Sec: 3235.8811774408623
Epoch Step: 20 / 67 Loss (mean): 0.27625776327249696 Loss (std): 0.944986680093809 Loss ratio: 3.420670133934614 Tokens per Sec: 2840.452448406332
Epoch Step: 25 / 67 Loss (mean): 0.08540286614970682 Loss (std): 0.2466242670428913 Loss ratio: 2.8877750614431568 Tokens per Sec: 2860.3293011896526
Epoch Step: 30 / 67 Loss (mean): 0.14750161339361512 Loss (std): 0.4314270905044106 Loss ratio: 2.9248974338546843 Tokens per Sec: 2889.4885322209016
Epoch Step: 35 / 67 Loss (mean): 0.18842146013412275 Loss (std): 0.5716946952499936 Loss ratio: 3.0341272954951526 Tokens per Sec: 2309.2431786381144
Epoch Step: 40 / 67 Loss (mean): 0.12246780969553583 Loss (std): 0.2602644743619115 Loss ratio: 2.125166400941999 Tokens per Sec: 2823.1467239059307
Epoch Step: 45 / 67 Loss (mean): 1.0779082395924888 Loss (std): 1.497852054697626 Loss ratio: 1.3895914324431735 Tokens per Sec: 2712.970484523819
Epoch Step: 50 / 67 Loss (mean): 0.25815579101708863 Loss (std): 0.63736905650298 Loss ratio: 2.4689318569684513 Tokens per Sec: 2679.389708368027
Epoch Step: 55 / 67 Loss (mean): 0.1793560251717281 Loss (std): 0.5659012966426851 Loss ratio: 3.1551841991416305 Tokens per Sec: 2854.1527013300774
Epoch Step: 60 / 67 Loss (mean): 0.13736501065986453 Loss (std): 0.49937726978085273 Loss ratio: 3.6354037129395524 Tokens per Sec: 2504.059437736969
Epoch Step: 65 / 67 Loss (mean): 0.06842109625722514 Loss (std): 0.1261454198375617 Loss ratio: 1.8436626528655038 Tokens per Sec: 2800.1705545809805
Mean loss per sample: 0.31104300131438456 Std loss per sample: 1.833795912137919 ratio: 5.895634701275347
Epoch ended with duration 0:00:11.275819
Train perplexity: 1.0429821161184505
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily into one ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.06279337406158 Loss (std): 43.93258326737148 Loss ratio: 0.43470580814805637 Tokens per Sec: 4438.820670743071
Mean loss per sample: 103.65004629028014 Std loss per sample: 53.10909978933522 ratio: 0.5123885776239693
Epoch ended with duration 0:00:01.003198
b'BLEU = 2.52, 8.6/2.7/1.7/1.4 (BP=0.917, ratio=0.921, hyp_len=2866, ref_len=3113)\n'
Validation perplexity: 1259767.6031285152
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.52
Epoch 794 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.07411029593481544 Loss (std): 0.12896858863221386 Loss ratio: 1.7402249850095006 Tokens per Sec: 3338.832899884603
Epoch Step: 10 / 67 Loss (mean): 0.14445218820037553 Loss (std): 0.36942452546427734 Loss ratio: 2.5574173023383593 Tokens per Sec: 2659.859965691139
Epoch Step: 15 / 67 Loss (mean): 0.0976949026926377 Loss (std): 0.1421928629789184 Loss ratio: 1.4554788331820927 Tokens per Sec: 3318.127162233235
Epoch Step: 20 / 67 Loss (mean): 0.1707338483993226 Loss (std): 0.5938838868124569 Loss ratio: 3.4784191440671184 Tokens per Sec: 2455.395259673085
Epoch Step: 25 / 67 Loss (mean): 0.20993842222742387 Loss (std): 0.5926163526940027 Loss ratio: 2.8228103574677164 Tokens per Sec: 2991.116883661679
Epoch Step: 30 / 67 Loss (mean): 0.13507616472270456 Loss (std): 0.2729259875172291 Loss ratio: 2.020534030393252 Tokens per Sec: 2516.1860923365857
Epoch Step: 35 / 67 Loss (mean): 0.06867200184115063 Loss (std): 0.11317807879753786 Loss ratio: 1.6480963968305005 Tokens per Sec: 2523.701492066395
Epoch Step: 40 / 67 Loss (mean): 11.521266703308356 Loss (std): 23.43997306693533 Loss ratio: 2.0344961774215755 Tokens per Sec: 3158.089837695905
Epoch Step: 45 / 67 Loss (mean): 0.3329784563356952 Loss (std): 1.2751747990992592 Loss ratio: 3.829601509755575 Tokens per Sec: 2887.6397216410824
Epoch Step: 50 / 67 Loss (mean): 0.20332983824482653 Loss (std): 0.4035118021182969 Loss ratio: 1.9845183845198073 Tokens per Sec: 2544.151621178596
Epoch Step: 55 / 67 Loss (mean): 0.20203141114416212 Loss (std): 0.5454611190639022 Loss ratio: 2.699882735931005 Tokens per Sec: 2692.7096405085713
Epoch Step: 60 / 67 Loss (mean): 0.19576598386811384 Loss (std): 0.41940717262873495 Loss ratio: 2.142390441596261 Tokens per Sec: 3142.8170567596176
Epoch Step: 65 / 67 Loss (mean): 0.16827960100158634 Loss (std): 0.4649154249445586 Loss ratio: 2.762755688612406 Tokens per Sec: 2789.197765703972
Mean loss per sample: 0.5143972982104351 Std loss per sample: 4.122231514263788 ratio: 8.013711441729662
Epoch ended with duration 0:00:11.265742
Train perplexity: 1.0720769133652124
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use gwt_binary ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.74531650543213 Loss (std): 45.08729058416986 Loss ratio: 0.44753733620697667 Tokens per Sec: 4339.098911995377
Mean loss per sample: 105.27133042747002 Std loss per sample: 53.392727632043176 ratio: 0.507191534629932
Epoch ended with duration 0:00:01.020654
b'BLEU = 2.68, 9.1/3.0/1.9/1.5 (BP=0.903, ratio=0.907, hyp_len=2824, ref_len=3113)\n'
Validation perplexity: 1569316.7012980208
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.68
Epoch 795 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.8509829751847064 Loss (std): 7.718787554466386 Loss ratio: 4.170101863684695 Tokens per Sec: 2730.3167206718917
Epoch Step: 10 / 67 Loss (mean): 0.045911063676612685 Loss (std): 0.0691921791653569 Loss ratio: 1.507091616363568 Tokens per Sec: 2420.580630426195
Epoch Step: 15 / 67 Loss (mean): 1.442600277983729 Loss (std): 9.239668470509088 Loss ratio: 6.4048708512818555 Tokens per Sec: 3073.091355041549
Epoch Step: 20 / 67 Loss (mean): 0.36305962028563954 Loss (std): 0.684380169566844 Loss ratio: 1.8850352155064873 Tokens per Sec: 2762.348201405275
Epoch Step: 25 / 67 Loss (mean): 0.09732462385227336 Loss (std): 0.28193803862855477 Loss ratio: 2.8968829004312573 Tokens per Sec: 2457.8784956624463
Epoch Step: 30 / 67 Loss (mean): 0.4556393325292447 Loss (std): 1.0086685667603164 Loss ratio: 2.213743403496835 Tokens per Sec: 3809.872073690682
Epoch Step: 35 / 67 Loss (mean): 0.3518220975465738 Loss (std): 0.7809825010989901 Loss ratio: 2.2198221957778097 Tokens per Sec: 3154.8878704716826
Epoch Step: 40 / 67 Loss (mean): 0.20109954529380047 Loss (std): 0.7042885515555922 Loss ratio: 3.5021886823595128 Tokens per Sec: 2421.1947119175497
Epoch Step: 45 / 67 Loss (mean): 0.21763575397562818 Loss (std): 0.7059000201936287 Loss ratio: 3.243492887996145 Tokens per Sec: 2807.1987889015186
Epoch Step: 50 / 67 Loss (mean): 0.2510364746472078 Loss (std): 0.5829104761099339 Loss ratio: 2.322015065456614 Tokens per Sec: 3015.0742466875104
Epoch Step: 55 / 67 Loss (mean): 0.08667416070238687 Loss (std): 0.22161586143887443 Loss ratio: 2.5568850005924717 Tokens per Sec: 2845.6599456539957
Epoch Step: 60 / 67 Loss (mean): 0.1435374026905265 Loss (std): 0.5950907087957652 Loss ratio: 4.145892970341738 Tokens per Sec: 2716.282720994935
Epoch Step: 65 / 67 Loss (mean): 0.05276855493127641 Loss (std): 0.12722354035661967 Loss ratio: 2.4109726052250315 Tokens per Sec: 2545.3067257573225
Mean loss per sample: 0.2944471616752866 Std loss per sample: 1.7427512984249198 ratio: 5.918723374711313
Epoch ended with duration 0:00:11.287256
Train perplexity: 1.0406428185041539
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print change time unit test[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.38197931647301 Loss (std): 45.28586412712913 Loss ratio: 0.4511353973640722 Tokens per Sec: 4464.747914893465
Mean loss per sample: 104.23655338353309 Std loss per sample: 53.88060419593318 ratio: 0.5169070009220493
Epoch ended with duration 0:00:01.002525
b'BLEU = 2.60, 8.9/2.9/1.8/1.4 (BP=0.910, ratio=0.914, hyp_len=2844, ref_len=3113)\n'
Validation perplexity: 1363983.5216684928
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.6
Model saved checkpoint_commit_msg_generator!
Epoch 796 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1914698862201476 Loss (std): 0.5579151132380302 Loss ratio: 2.9138530567493652 Tokens per Sec: 2808.928687383616
Epoch Step: 10 / 67 Loss (mean): 0.42410293699299473 Loss (std): 2.8205844257887347 Loss ratio: 6.6507071273484835 Tokens per Sec: 2607.4009533074086
Epoch Step: 15 / 67 Loss (mean): 0.047972249630674924 Loss (std): 0.09703938671644328 Loss ratio: 2.022823350239413 Tokens per Sec: 2732.2952851394994
Epoch Step: 20 / 67 Loss (mean): 0.14466395506769913 Loss (std): 0.3649473516621449 Loss ratio: 2.522724831429907 Tokens per Sec: 2896.933913793134
Epoch Step: 25 / 67 Loss (mean): 0.18382499721337808 Loss (std): 0.6436642951642653 Loss ratio: 3.5015058067272573 Tokens per Sec: 2662.3381389601473
Epoch Step: 30 / 67 Loss (mean): 0.06709226553448389 Loss (std): 0.13700797665274855 Loss ratio: 2.0420830264306638 Tokens per Sec: 3016.181096675798
Epoch Step: 35 / 67 Loss (mean): 0.24036723291646922 Loss (std): 0.5715216118656335 Loss ratio: 2.3777018395192195 Tokens per Sec: 2889.240906317143
Epoch Step: 40 / 67 Loss (mean): 0.23401543838190264 Loss (std): 0.7350069249854242 Loss ratio: 3.1408480144199977 Tokens per Sec: 3018.5424435294653
Epoch Step: 45 / 67 Loss (mean): 0.2537759407368867 Loss (std): 0.8917777547835598 Loss ratio: 3.514035854597223 Tokens per Sec: 2675.6578923189404
Epoch Step: 50 / 67 Loss (mean): 0.16320118793646543 Loss (std): 0.4952103322908552 Loss ratio: 3.0343549489581023 Tokens per Sec: 2333.236495109281
Epoch Step: 55 / 67 Loss (mean): 0.0572646373320822 Loss (std): 0.08456277222836682 Loss ratio: 1.4767014368392932 Tokens per Sec: 2665.3218443601
Epoch Step: 60 / 67 Loss (mean): 0.23806602899776408 Loss (std): 0.6711020808616629 Loss ratio: 2.818974566371105 Tokens per Sec: 3139.2782467671746
Epoch Step: 65 / 67 Loss (mean): 0.24287680224233554 Loss (std): 0.558188031376336 Loss ratio: 2.298235262581364 Tokens per Sec: 2815.273849792093
Mean loss per sample: 0.28991277956657746 Std loss per sample: 1.7945063683566218 ratio: 6.189814643698795
Epoch ended with duration 0:00:11.292154
Train perplexity: 1.040004579305495
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 98.81879442930222 Loss (std): 44.36310858373833 Loss ratio: 0.4489339182889644 Tokens per Sec: 4196.272817309254
Mean loss per sample: 108.65158207035151 Std loss per sample: 54.823611932763896 ratio: 0.5045818099295214
Epoch ended with duration 0:00:01.049564
b'BLEU = 2.57, 8.8/2.8/1.8/1.4 (BP=0.920, ratio=0.923, hyp_len=2874, ref_len=3113)\n'
Validation perplexity: 2481156.9069859777
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.57
Epoch 797 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.21063723663155542 Loss (std): 0.8665004009157748 Loss ratio: 4.113709497772461 Tokens per Sec: 2859.063223460001
Epoch Step: 10 / 67 Loss (mean): 0.059201111133006634 Loss (std): 0.12693026382070288 Loss ratio: 2.1440520522584405 Tokens per Sec: 2186.7515483508478
Epoch Step: 15 / 67 Loss (mean): 0.06713234687777003 Loss (std): 0.20453429338426501 Loss ratio: 3.046732356261386 Tokens per Sec: 2803.272144260837
Epoch Step: 20 / 67 Loss (mean): 0.274931430369179 Loss (std): 0.6760732890464795 Loss ratio: 2.4590614763057306 Tokens per Sec: 2900.489541691267
Epoch Step: 25 / 67 Loss (mean): 0.13266078422611827 Loss (std): 0.32480547756886063 Loss ratio: 2.448391055907183 Tokens per Sec: 2809.3726085463777
Epoch Step: 30 / 67 Loss (mean): 0.0248360353517845 Loss (std): 0.034115725179254326 Loss ratio: 1.3736381308864205 Tokens per Sec: 2371.669630928181
Epoch Step: 35 / 67 Loss (mean): 0.25097885224249694 Loss (std): 0.8251831064646785 Loss ratio: 3.287859112796415 Tokens per Sec: 2693.251069887057
Epoch Step: 40 / 67 Loss (mean): 0.07730566269401606 Loss (std): 0.19903348010755642 Loss ratio: 2.5746300228400067 Tokens per Sec: 2235.770747116563
Epoch Step: 45 / 67 Loss (mean): 1.6408747552395653 Loss (std): 6.427651360982134 Loss ratio: 3.9172102200107934 Tokens per Sec: 2842.4539251692427
Epoch Step: 50 / 67 Loss (mean): 0.2107578578434186 Loss (std): 0.6897437074019681 Loss ratio: 3.2726832321213353 Tokens per Sec: 2988.831522273308
Epoch Step: 55 / 67 Loss (mean): 0.850489457083313 Loss (std): 1.429534721725394 Loss ratio: 1.6808376750816774 Tokens per Sec: 3044.000368084676
Epoch Step: 60 / 67 Loss (mean): 0.30576627803384326 Loss (std): 0.73694121369213 Loss ratio: 2.4101454824608317 Tokens per Sec: 3072.606157717199
Epoch Step: 65 / 67 Loss (mean): 0.1586141831430723 Loss (std): 0.3529621611996306 Loss ratio: 2.2252875134202443 Tokens per Sec: 3784.499123584274
Mean loss per sample: 0.4109958890464001 Std loss per sample: 2.9775622977040337 ratio: 7.244749587672582
Epoch ended with duration 0:00:11.402892
Train perplexity: 1.0571827918041956
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add method_5 for method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.2136464715004 Loss (std): 45.95643464693881 Loss ratio: 0.454053739283854 Tokens per Sec: 4439.358447678054
Mean loss per sample: 104.34108175833511 Std loss per sample: 54.05050764538583 ratio: 0.518017512704847
Epoch ended with duration 0:00:01.005407
b'BLEU = 2.89, 9.2/3.1/2.1/1.7 (BP=0.916, ratio=0.919, hyp_len=2862, ref_len=3113)\n'
Validation perplexity: 1383442.4825717604
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.89
Epoch 798 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.21756631607058807 Loss (std): 0.6735940093416625 Loss ratio: 3.0960399638477076 Tokens per Sec: 2583.6483405662193
Epoch Step: 10 / 67 Loss (mean): 0.3352273846248863 Loss (std): 0.81677743911355 Loss ratio: 2.4364878186413974 Tokens per Sec: 2659.9727877138553
Epoch Step: 15 / 67 Loss (mean): 0.1393034741929 Loss (std): 0.41989706177148944 Loss ratio: 3.014261232207593 Tokens per Sec: 3163.157691063381
Epoch Step: 20 / 67 Loss (mean): 0.10127837165759956 Loss (std): 0.2745093289116145 Loss ratio: 2.710443744491387 Tokens per Sec: 2597.684323713652
Epoch Step: 25 / 67 Loss (mean): 0.20007084186909196 Loss (std): 0.5850219883163639 Loss ratio: 2.9240742071708214 Tokens per Sec: 3228.4738663109842
Epoch Step: 30 / 67 Loss (mean): 0.18090565076545317 Loss (std): 0.6284924549711675 Loss ratio: 3.4741449607122394 Tokens per Sec: 2814.9952152738147
Epoch Step: 35 / 67 Loss (mean): 0.07851462847975199 Loss (std): 0.20495519455189806 Loss ratio: 2.6104077484714026 Tokens per Sec: 2811.587718070179
Epoch Step: 40 / 67 Loss (mean): 0.21535231917277997 Loss (std): 0.6646337919093638 Loss ratio: 3.0862625230245113 Tokens per Sec: 3497.768141219704
Epoch Step: 45 / 67 Loss (mean): 0.353364702896215 Loss (std): 0.878735344164962 Loss ratio: 2.4867660435882613 Tokens per Sec: 2722.1870508404545
Epoch Step: 50 / 67 Loss (mean): 0.12408241143282339 Loss (std): 0.3031074612334055 Loss ratio: 2.4427915103624813 Tokens per Sec: 2289.6965331876977
Epoch Step: 55 / 67 Loss (mean): 0.48254710936453193 Loss (std): 0.9711722830820516 Loss ratio: 2.012595794762903 Tokens per Sec: 2804.236215338755
Epoch Step: 60 / 67 Loss (mean): 0.27803834723818 Loss (std): 0.66225027141239 Loss ratio: 2.3818666669208657 Tokens per Sec: 3528.9394060605614
Epoch Step: 65 / 67 Loss (mean): 0.3441017999957694 Loss (std): 0.7724165192601936 Loss ratio: 2.2447325741094355 Tokens per Sec: 2615.6391403268967
Mean loss per sample: 0.35825563405077915 Std loss per sample: 2.453459871080946 ratio: 6.8483497198349506
Epoch ended with duration 0:00:11.243584
Train perplexity: 1.0496658600767965
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire can start and hint[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.0729985833168 Loss (std): 45.64373607512398 Loss ratio: 0.45610441099276966 Tokens per Sec: 4340.3772582866395
Mean loss per sample: 105.75772736868898 Std loss per sample: 53.8273210748153 ratio: 0.5089682088871326
Epoch ended with duration 0:00:01.021597
b'BLEU = 2.42, 8.1/2.6/1.7/1.3 (BP=0.921, ratio=0.924, hyp_len=2875, ref_len=3113)\n'
Validation perplexity: 1676244.3755765818
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.42
Epoch 799 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.7158047570264898 Loss (std): 1.6097316001052233 Loss ratio: 2.248841718784012 Tokens per Sec: 2900.513107291739
Epoch Step: 10 / 67 Loss (mean): 0.24565269167032966 Loss (std): 0.5540319205940306 Loss ratio: 2.255346427620469 Tokens per Sec: 2834.9162446586492
Epoch Step: 15 / 67 Loss (mean): 0.2752800544399179 Loss (std): 0.6395824745735957 Loss ratio: 2.323388361263165 Tokens per Sec: 2553.028567348542
Epoch Step: 20 / 67 Loss (mean): 0.45309810332150846 Loss (std): 0.8392603575350347 Loss ratio: 1.8522707364756148 Tokens per Sec: 2413.4074492705877
Epoch Step: 25 / 67 Loss (mean): 0.207710372649899 Loss (std): 0.6504203765540166 Loss ratio: 3.1313812991434777 Tokens per Sec: 2772.8642917017132
Epoch Step: 30 / 67 Loss (mean): 0.169226353285012 Loss (std): 0.4886697346171316 Loss ratio: 2.8876692378645727 Tokens per Sec: 3220.818080593174
Epoch Step: 35 / 67 Loss (mean): 1.5665623724562465 Loss (std): 8.091130268013316 Loss ratio: 5.1648950659571 Tokens per Sec: 2486.05757881107
Epoch Step: 40 / 67 Loss (mean): 0.24105483156745322 Loss (std): 0.7972951828252065 Loss ratio: 3.307526248865513 Tokens per Sec: 3045.555380193666
Epoch Step: 45 / 67 Loss (mean): 0.9983382853970397 Loss (std): 1.2812504311211534 Loss ratio: 1.2833830474723298 Tokens per Sec: 2741.0101587367394
Epoch Step: 50 / 67 Loss (mean): 0.21470925330140744 Loss (std): 0.4398602836979194 Loss ratio: 2.0486321708754973 Tokens per Sec: 2415.912279733283
Epoch Step: 55 / 67 Loss (mean): 0.31549490183624584 Loss (std): 0.7407154305166089 Loss ratio: 2.3477889062723083 Tokens per Sec: 2919.0235784067477
Epoch Step: 60 / 67 Loss (mean): 0.41406759996607434 Loss (std): 0.749605619210435 Loss ratio: 1.810345990055373 Tokens per Sec: 3252.008303714614
Epoch Step: 65 / 67 Loss (mean): 0.43680773437790776 Loss (std): 1.1064709301389313 Loss ratio: 2.533084565718012 Tokens per Sec: 2962.147856753837
Mean loss per sample: 0.5201007631452815 Std loss per sample: 3.7961994566377015 ratio: 7.298969210659082
Epoch ended with duration 0:00:11.355958
Train perplexity: 1.0729045299373081
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.97059106826782 Loss (std): 45.36219001679969 Loss ratio: 0.4537553447675707 Tokens per Sec: 4344.239459587395
Mean loss per sample: 105.76971189413587 Std loss per sample: 54.37481792009407 ratio: 0.514086849121017
Epoch ended with duration 0:00:01.016883
b'BLEU = 2.42, 8.1/2.6/1.7/1.3 (BP=0.920, ratio=0.923, hyp_len=2873, ref_len=3113)\n'
Validation perplexity: 1678969.0059681756
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.42
Epoch 800 / 1000
Epoch Step: 5 / 67 Loss (mean): 3.8485452995220157 Loss (std): 10.708421556433153 Loss ratio: 2.7824595328949684 Tokens per Sec: 3135.9455005359596
Epoch Step: 10 / 67 Loss (mean): 0.13960479580964602 Loss (std): 0.2661259702378044 Loss ratio: 1.9062810034167634 Tokens per Sec: 2557.698429764006
Epoch Step: 15 / 67 Loss (mean): 0.30338276914790185 Loss (std): 0.8148833617228961 Loss ratio: 2.685990915079403 Tokens per Sec: 2685.8612726200345
Epoch Step: 20 / 67 Loss (mean): 0.25184393817880846 Loss (std): 0.7192277134740321 Loss ratio: 2.8558468338570155 Tokens per Sec: 2741.7599531905603
Epoch Step: 25 / 67 Loss (mean): 0.29552452508414717 Loss (std): 0.6270610064646719 Loss ratio: 2.1218577587972556 Tokens per Sec: 3360.855216338062
Epoch Step: 30 / 67 Loss (mean): 0.16855693097113544 Loss (std): 0.6019878396681067 Loss ratio: 3.5714214550524424 Tokens per Sec: 2524.6630139197096
Epoch Step: 35 / 67 Loss (mean): 0.5005365223378249 Loss (std): 0.8254786747154946 Loss ratio: 1.6491876973531974 Tokens per Sec: 2834.132060867354
Epoch Step: 40 / 67 Loss (mean): 0.27887767958873155 Loss (std): 0.7624778159467743 Loss ratio: 2.734094091256141 Tokens per Sec: 2517.8917036859166
Epoch Step: 45 / 67 Loss (mean): 0.09662909105736617 Loss (std): 0.22116203276510538 Loss ratio: 2.2887727737582386 Tokens per Sec: 2771.356641915399
Epoch Step: 50 / 67 Loss (mean): 0.34175579698421643 Loss (std): 0.9837760521279492 Loss ratio: 2.878593606338691 Tokens per Sec: 2614.3856613312205
Epoch Step: 55 / 67 Loss (mean): 0.342110658506499 Loss (std): 1.0382514371710376 Loss ratio: 3.034840953811774 Tokens per Sec: 2785.4012874731206
Epoch Step: 60 / 67 Loss (mean): 0.14647867496114486 Loss (std): 0.359020362250714 Loss ratio: 2.451007713893836 Tokens per Sec: 2910.566485071006
Epoch Step: 65 / 67 Loss (mean): 0.9080974525941201 Loss (std): 4.479054784622557 Loss ratio: 4.932350346130195 Tokens per Sec: 3137.0571527255734
Mean loss per sample: 0.6125680025364364 Std loss per sample: 3.875457247280065 ratio: 6.3265747333081555
Epoch ended with duration 0:00:11.279900
Train perplexity: 1.0864117310843926
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.0216791331768 Loss (std): 44.46676222024166 Loss ratio: 0.4445712430105786 Tokens per Sec: 4349.250375646948
Mean loss per sample: 106.06893383186372 Std loss per sample: 53.60061189489246 ratio: 0.505337519276455
Epoch ended with duration 0:00:01.017634
b'BLEU = 2.76, 8.4/3.0/2.1/1.7 (BP=0.902, ratio=0.906, hyp_len=2821, ref_len=3113)\n'
Validation perplexity: 1748450.2956080092
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.76
Model saved checkpoint_commit_msg_generator!
Epoch 801 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.27112901191571837 Loss (std): 0.6623525131711171 Loss ratio: 2.4429422306787747 Tokens per Sec: 2886.8131692812763
Epoch Step: 10 / 67 Loss (mean): 0.12432234468360548 Loss (std): 0.343737805224877 Loss ratio: 2.76489158967902 Tokens per Sec: 2929.397520291598
Epoch Step: 15 / 67 Loss (mean): 0.05819764671878147 Loss (std): 0.08178259360762002 Loss ratio: 1.405256023543427 Tokens per Sec: 2397.5403506735875
Epoch Step: 20 / 67 Loss (mean): 0.19330444362640264 Loss (std): 0.4515785193504144 Loss ratio: 2.3361000444623774 Tokens per Sec: 2890.7448475128895
Epoch Step: 25 / 67 Loss (mean): 0.15978865123952346 Loss (std): 0.4465590646216393 Loss ratio: 2.794685737426036 Tokens per Sec: 2844.2070171031664
Epoch Step: 30 / 67 Loss (mean): 0.7127183000611694 Loss (std): 1.265972585401851 Loss ratio: 1.7762594075291716 Tokens per Sec: 3379.8372527675656
Epoch Step: 35 / 67 Loss (mean): 0.13587269992416395 Loss (std): 0.39093943279087723 Loss ratio: 2.8772478430845663 Tokens per Sec: 3132.12520020535
Epoch Step: 40 / 67 Loss (mean): 0.08300299521579291 Loss (std): 0.14844596895351223 Loss ratio: 1.7884411106801545 Tokens per Sec: 2365.755810908421
Epoch Step: 45 / 67 Loss (mean): 0.7623704343559439 Loss (std): 5.3545807978175235 Loss ratio: 7.023594510641159 Tokens per Sec: 2774.731198729027
Epoch Step: 50 / 67 Loss (mean): 0.35015998985545593 Loss (std): 1.1032033599183821 Loss ratio: 3.150569430772997 Tokens per Sec: 2893.6921246165184
Epoch Step: 55 / 67 Loss (mean): 1.36836553424655 Loss (std): 1.7936490801024774 Loss ratio: 1.3107967390380797 Tokens per Sec: 2667.583915365255
Epoch Step: 60 / 67 Loss (mean): 0.32198083586536086 Loss (std): 0.6873564931269704 Loss ratio: 2.134774547309998 Tokens per Sec: 2356.198358560403
Epoch Step: 65 / 67 Loss (mean): 0.5451901684227778 Loss (std): 1.1108519737796065 Loss ratio: 2.037549534308872 Tokens per Sec: 3030.7042878813872
Mean loss per sample: 0.4544590547622393 Std loss per sample: 3.29477299602952 ratio: 7.249878644740077
Epoch ended with duration 0:00:11.288369
Train perplexity: 1.063417927266619
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print log level not use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add support for developer options provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.76190906763077 Loss (std): 45.6019344130829 Loss ratio: 0.45710767605868846 Tokens per Sec: 4438.088085494536
Mean loss per sample: 103.28748573820855 Std loss per sample: 53.11632304610916 ratio: 0.5142571015886404
Epoch ended with duration 0:00:01.006381
b'BLEU = 2.59, 8.3/2.9/1.8/1.3 (BP=0.937, ratio=0.939, hyp_len=2922, ref_len=3113)\n'
Validation perplexity: 1199366.8746603334
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.59
Epoch 802 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.4469507455951316 Loss (std): 1.407846326113988 Loss ratio: 3.1498914365594985 Tokens per Sec: 2717.334217087651
Epoch Step: 10 / 67 Loss (mean): 0.19279537018337578 Loss (std): 0.43487904812572387 Loss ratio: 2.2556508888781517 Tokens per Sec: 2757.920024154742
Epoch Step: 15 / 67 Loss (mean): 0.24965083998313276 Loss (std): 0.8689586321221329 Loss ratio: 3.480695807716259 Tokens per Sec: 2976.892695025903
Epoch Step: 20 / 67 Loss (mean): 0.0780551203788491 Loss (std): 0.15765758116498693 Loss ratio: 2.0198236886930485 Tokens per Sec: 2969.4033358762535
Epoch Step: 25 / 67 Loss (mean): 0.1100700811639399 Loss (std): 0.22597588013120246 Loss ratio: 2.0530182020546603 Tokens per Sec: 2565.4410335512957
Epoch Step: 30 / 67 Loss (mean): 0.7722089087310451 Loss (std): 2.1220869062558445 Loss ratio: 2.7480735876811186 Tokens per Sec: 3193.3996250916794
Epoch Step: 35 / 67 Loss (mean): 0.1504299946118408 Loss (std): 0.43731768930536546 Loss ratio: 2.9071176292586456 Tokens per Sec: 3669.908194562074
Epoch Step: 40 / 67 Loss (mean): 0.19746662693398775 Loss (std): 0.46693978680745823 Loss ratio: 2.364651658143501 Tokens per Sec: 2679.3351210340134
Epoch Step: 45 / 67 Loss (mean): 0.20281505696038948 Loss (std): 0.4485099148873748 Loss ratio: 2.2114231635916974 Tokens per Sec: 2420.0567095285196
Epoch Step: 50 / 67 Loss (mean): 0.07321275885442446 Loss (std): 0.1483988046258538 Loss ratio: 2.026952773640569 Tokens per Sec: 2755.8963468374823
Epoch Step: 55 / 67 Loss (mean): 0.9950297754979829 Loss (std): 4.729585888785021 Loss ratio: 4.753210411636178 Tokens per Sec: 2574.0759358638147
Epoch Step: 60 / 67 Loss (mean): 0.21177439470056925 Loss (std): 0.4897667347921041 Loss ratio: 2.3126815471936166 Tokens per Sec: 2284.4617555727955
Epoch Step: 65 / 67 Loss (mean): 0.18887161774546257 Loss (std): 0.3646665209083575 Loss ratio: 1.9307640039373688 Tokens per Sec: 2828.6699477057814
Mean loss per sample: 0.45661316341083985 Std loss per sample: 3.3924081197335534 ratio: 7.429501362581653
Epoch ended with duration 0:00:11.325357
Train perplexity: 1.06372790589438
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.11683657765388 Loss (std): 46.590157559792665 Loss ratio: 0.46075568754579455 Tokens per Sec: 4348.813609574209
Mean loss per sample: 105.71846506622482 Std loss per sample: 53.900401715188394 ratio: 0.5098485083133185
Epoch ended with duration 0:00:01.016364
b'BLEU = 2.28, 8.3/2.5/1.6/1.2 (BP=0.901, ratio=0.905, hyp_len=2818, ref_len=3113)\n'
Validation perplexity: 1667349.1917861437
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.28
Epoch 803 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.10259220875923347 Loss (std): 0.21102943633738863 Loss ratio: 2.056973320777594 Tokens per Sec: 2328.2842889329104
Epoch Step: 10 / 67 Loss (mean): 0.13801875464559998 Loss (std): 0.33677399031069755 Loss ratio: 2.440059622153922 Tokens per Sec: 2901.1265469755263
Epoch Step: 15 / 67 Loss (mean): 0.08684782635373267 Loss (std): 0.20301327592244403 Loss ratio: 2.3375746342293877 Tokens per Sec: 2394.648075532795
Epoch Step: 20 / 67 Loss (mean): 0.16554068264395028 Loss (std): 0.4008376727184064 Loss ratio: 2.4213846790794005 Tokens per Sec: 3135.944458632939
Epoch Step: 25 / 67 Loss (mean): 0.3238123775499844 Loss (std): 0.8208465435483838 Loss ratio: 2.5349449263151658 Tokens per Sec: 3666.914985787809
Epoch Step: 30 / 67 Loss (mean): 0.12100037333038927 Loss (std): 0.25424968322687047 Loss ratio: 2.1012305683772268 Tokens per Sec: 2402.1821842845166
Epoch Step: 35 / 67 Loss (mean): 0.21060137740414575 Loss (std): 0.8848772583509947 Loss ratio: 4.2016689029194145 Tokens per Sec: 3010.31255134811
Epoch Step: 40 / 67 Loss (mean): 0.14022772602311306 Loss (std): 0.37493924360431125 Loss ratio: 2.6737882317403607 Tokens per Sec: 2375.1360861639323
Epoch Step: 45 / 67 Loss (mean): 0.10012400013511069 Loss (std): 0.2670763799887892 Loss ratio: 2.667456150657059 Tokens per Sec: 2555.7018745439914
Epoch Step: 50 / 67 Loss (mean): 0.4339636214335769 Loss (std): 0.9529211120935281 Loss ratio: 2.1958548252169185 Tokens per Sec: 3009.8603855074975
Epoch Step: 55 / 67 Loss (mean): 3.272037973854367 Loss (std): 14.66040677036737 Loss ratio: 4.480512416883057 Tokens per Sec: 3190.821551010576
Epoch Step: 60 / 67 Loss (mean): 0.5426710010397073 Loss (std): 1.1825560510494446 Loss ratio: 2.1791399370590594 Tokens per Sec: 2916.2086145281537
Epoch Step: 65 / 67 Loss (mean): 0.2706491900066794 Loss (std): 0.6928903073952304 Loss ratio: 2.5601048626014005 Tokens per Sec: 2750.531202583312
Mean loss per sample: 0.38584118138749307 Std loss per sample: 3.1471294325426675 ratio: 8.156541044233597
Epoch ended with duration 0:00:11.298622
Train perplexity: 1.0535908656008444
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope variable[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add support for developer provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.03910592198372 Loss (std): 44.83693958223898 Loss ratio: 0.44375827728384054 Tokens per Sec: 4447.59302410884
Mean loss per sample: 103.59700008087837 Std loss per sample: 52.59001520838124 ratio: 0.5076403290377531
Epoch ended with duration 0:00:01.003604
b'BLEU = 2.49, 8.3/2.6/1.7/1.3 (BP=0.944, ratio=0.945, hyp_len=2943, ref_len=3113)\n'
Validation perplexity: 1250743.9702525223
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.49
Epoch 804 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.755402607705264 Loss (std): 1.6294520546948805 Loss ratio: 2.1570643761010753 Tokens per Sec: 2415.0684008361704
Epoch Step: 10 / 67 Loss (mean): 2.804213676247855 Loss (std): 10.803772175475068 Loss ratio: 3.8526922063695688 Tokens per Sec: 2845.8063409721685
Epoch Step: 15 / 67 Loss (mean): 0.09116999810021298 Loss (std): 0.23278397087515176 Loss ratio: 2.5532957741128652 Tokens per Sec: 2981.8584747480545
Epoch Step: 20 / 67 Loss (mean): 0.10425209602271934 Loss (std): 0.3400450897964969 Loss ratio: 3.261757823290113 Tokens per Sec: 3190.7501329541287
Epoch Step: 25 / 67 Loss (mean): 0.07109459210187197 Loss (std): 0.15691126034240394 Loss ratio: 2.2070772994599173 Tokens per Sec: 2438.0198480855984
Epoch Step: 30 / 67 Loss (mean): 0.4457906316165463 Loss (std): 0.8684958021746044 Loss ratio: 1.9482145666121904 Tokens per Sec: 2929.715686858519
Epoch Step: 35 / 67 Loss (mean): 0.6845395537061449 Loss (std): 4.768697794457057 Loss ratio: 6.96628524770993 Tokens per Sec: 2788.865066508921
Epoch Step: 40 / 67 Loss (mean): 0.19332855540892524 Loss (std): 0.3343647437492717 Loss ratio: 1.7295155547095935 Tokens per Sec: 3094.1808102909667
Epoch Step: 45 / 67 Loss (mean): 1.6185610587590418 Loss (std): 6.891247198160823 Loss ratio: 4.257638079742493 Tokens per Sec: 2414.718094112702
Epoch Step: 50 / 67 Loss (mean): 0.18026924988816972 Loss (std): 0.5235789444626014 Loss ratio: 2.904427376202011 Tokens per Sec: 3027.1865531856997
Epoch Step: 55 / 67 Loss (mean): 0.13762189722183393 Loss (std): 0.25668500203628614 Loss ratio: 1.865146515329122 Tokens per Sec: 2456.3551924577614
Epoch Step: 60 / 67 Loss (mean): 0.18733960700774333 Loss (std): 0.45257623014777393 Loss ratio: 2.4158064457190176 Tokens per Sec: 2754.496041658011
Epoch Step: 65 / 67 Loss (mean): 0.145605375744708 Loss (std): 0.4406572928185866 Loss ratio: 3.026380657752619 Tokens per Sec: 2707.230484571806
Mean loss per sample: 0.4934499537170122 Std loss per sample: 3.3657898237733535 ratio: 6.820934521160366
Epoch ended with duration 0:00:11.364669
Train perplexity: 1.0690427671021059
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add support for developer provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.57964199781418 Loss (std): 44.43209715418449 Loss ratio: 0.44176034306375933 Tokens per Sec: 4438.862033573852
Mean loss per sample: 103.75923648580421 Std loss per sample: 53.31769613869645 ratio: 0.5138597578827702
Epoch ended with duration 0:00:01.005532
b'BLEU = 2.68, 9.1/2.9/1.9/1.5 (BP=0.916, ratio=0.920, hyp_len=2863, ref_len=3113)\n'
Validation perplexity: 1278547.271513906
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.68
Epoch 805 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.18633669328073665 Loss (std): 0.4604151727000995 Loss ratio: 2.4708776601849083 Tokens per Sec: 2370.9511061989974
Epoch Step: 10 / 67 Loss (mean): 0.2362273916733102 Loss (std): 0.44951795264511535 Loss ratio: 1.9029035941216104 Tokens per Sec: 3245.6273632647194
Epoch Step: 15 / 67 Loss (mean): 0.28214060522532236 Loss (std): 0.5463553354473213 Loss ratio: 1.9364647460474271 Tokens per Sec: 2583.373003429317
Epoch Step: 20 / 67 Loss (mean): 0.19178991804005818 Loss (std): 0.4073257153790073 Loss ratio: 2.1238119268288713 Tokens per Sec: 2610.2266874108846
Epoch Step: 25 / 67 Loss (mean): 1.2731443099049784 Loss (std): 1.7727620767762395 Loss ratio: 1.392428229057985 Tokens per Sec: 2589.489516696535
Epoch Step: 30 / 67 Loss (mean): 0.4405148692540024 Loss (std): 0.9306154434900632 Loss ratio: 2.11256306754419 Tokens per Sec: 2763.8353176989376
Epoch Step: 35 / 67 Loss (mean): 0.05491356438960793 Loss (std): 0.1032836920128909 Loss ratio: 1.8808411575708375 Tokens per Sec: 2886.4975745111283
Epoch Step: 40 / 67 Loss (mean): 0.17078606642462546 Loss (std): 0.4966364244636374 Loss ratio: 2.9079446283916988 Tokens per Sec: 2533.1337089685617
Epoch Step: 45 / 67 Loss (mean): 0.3439770781487823 Loss (std): 1.0645380205537762 Loss ratio: 3.0947934853185934 Tokens per Sec: 3155.8694978083154
Epoch Step: 50 / 67 Loss (mean): 0.0963372929545585 Loss (std): 0.2639377900668695 Loss ratio: 2.7397260393372975 Tokens per Sec: 3241.109949300198
Epoch Step: 55 / 67 Loss (mean): 0.3004614479759766 Loss (std): 0.7279496139966121 Loss ratio: 2.4227721023790556 Tokens per Sec: 2639.4712030663004
Epoch Step: 60 / 67 Loss (mean): 0.15856474880911264 Loss (std): 0.4429346662555037 Loss ratio: 2.7933993499950502 Tokens per Sec: 3169.3182246966912
Epoch Step: 65 / 67 Loss (mean): 0.24508288547713164 Loss (std): 0.7290606437518888 Loss ratio: 2.974751347212764 Tokens per Sec: 2787.476172550103
Mean loss per sample: 0.27962476592614877 Std loss per sample: 1.3121606995398853 ratio: 4.692576836654154
Epoch ended with duration 0:00:11.246881
Train perplexity: 1.038557936082161
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.59733268618584 Loss (std): 45.16803508454561 Loss ratio: 0.4489983370180166 Tokens per Sec: 4459.6682872026695
Mean loss per sample: 106.59335199364874 Std loss per sample: 53.51235963506855 ratio: 0.502023424859151
Epoch ended with duration 0:00:01.019485
b'BLEU = 2.37, 8.7/2.6/1.5/1.1 (BP=0.956, ratio=0.957, hyp_len=2980, ref_len=3113)\n'
Validation perplexity: 1877231.1607303105
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.37
Model saved checkpoint_commit_msg_generator!
Epoch 806 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.13096645690893638 Loss (std): 0.592273843153888 Loss ratio: 4.522332337093825 Tokens per Sec: 3015.175336720611
Epoch Step: 10 / 67 Loss (mean): 0.05425543164346891 Loss (std): 0.10326305702714157 Loss ratio: 1.903275928311079 Tokens per Sec: 2454.2627274507895
Epoch Step: 15 / 67 Loss (mean): 0.5770440640098968 Loss (std): 1.055978864273461 Loss ratio: 1.8299795979798001 Tokens per Sec: 3292.287394062627
Epoch Step: 20 / 67 Loss (mean): 0.05067946463941553 Loss (std): 0.13581723247594646 Loss ratio: 2.6799263457553524 Tokens per Sec: 2702.686410132158
Epoch Step: 25 / 67 Loss (mean): 0.16549819872852822 Loss (std): 0.5000759152619391 Loss ratio: 3.0216396257111473 Tokens per Sec: 2701.145884193748
Epoch Step: 30 / 67 Loss (mean): 0.5282305116547832 Loss (std): 1.0058036486354691 Loss ratio: 1.9040998701203318 Tokens per Sec: 2839.162857555802
Epoch Step: 35 / 67 Loss (mean): 0.18634157938731732 Loss (std): 0.6599258685896137 Loss ratio: 3.5414847870208037 Tokens per Sec: 2653.4634897511205
Epoch Step: 40 / 67 Loss (mean): 0.2543148512941116 Loss (std): 0.7605794916949565 Loss ratio: 2.990700259244227 Tokens per Sec: 3058.5840998559597
Epoch Step: 45 / 67 Loss (mean): 1.1509964682300051 Loss (std): 5.968819985468663 Loss ratio: 5.185784796236148 Tokens per Sec: 3301.866372047695
Epoch Step: 50 / 67 Loss (mean): 0.14652775164904597 Loss (std): 0.4251226965972038 Loss ratio: 2.9013118116725827 Tokens per Sec: 2306.1641076848223
Epoch Step: 55 / 67 Loss (mean): 0.16289044321820256 Loss (std): 0.4861968554451486 Loss ratio: 2.98480896631766 Tokens per Sec: 2608.853579952175
Epoch Step: 60 / 67 Loss (mean): 0.2771111569882123 Loss (std): 0.7227229139851448 Loss ratio: 2.608061406982209 Tokens per Sec: 2923.744706510898
Epoch Step: 65 / 67 Loss (mean): 0.27178600858496793 Loss (std): 0.6976546579117447 Loss ratio: 2.5669263165680523 Tokens per Sec: 2926.8634473490933
Mean loss per sample: 0.2511365055676479 Std loss per sample: 1.1226091233719322 ratio: 4.470115250009076
Epoch ended with duration 0:00:11.284503
Train perplexity: 1.0345625677431958
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily nested ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.11508160829544 Loss (std): 45.223836027277066 Loss ratio: 0.4472511450118527 Tokens per Sec: 4423.103640386483
Mean loss per sample: 105.72451790367238 Std loss per sample: 54.54868819316747 ratio: 0.5159511651107062
Epoch ended with duration 0:00:01.023488
b'BLEU = 2.34, 8.8/2.5/1.6/1.2 (BP=0.918, ratio=0.921, hyp_len=2868, ref_len=3113)\n'
Validation perplexity: 1668717.4258732763
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.34
Epoch 807 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.0305838922377006 Loss (std): 1.4364102200595945 Loss ratio: 1.3937829136264934 Tokens per Sec: 2743.753472057347
Epoch Step: 10 / 67 Loss (mean): 0.05217879097472178 Loss (std): 0.10948089599532211 Loss ratio: 2.0981876726189492 Tokens per Sec: 2644.5182142562344
Epoch Step: 15 / 67 Loss (mean): 0.09607640353760871 Loss (std): 0.2666144927260129 Loss ratio: 2.7750257389854083 Tokens per Sec: 2548.469597390333
Epoch Step: 20 / 67 Loss (mean): 0.23639558143895556 Loss (std): 0.8400251261497217 Loss ratio: 3.553472197053909 Tokens per Sec: 2378.1243784450908
Epoch Step: 25 / 67 Loss (mean): 0.19569403052582857 Loss (std): 0.521129900411763 Loss ratio: 2.6629831222316307 Tokens per Sec: 2545.906444818893
Epoch Step: 30 / 67 Loss (mean): 0.14873281940526795 Loss (std): 0.447857809265612 Loss ratio: 3.0111565897590276 Tokens per Sec: 2924.870419260488
Epoch Step: 35 / 67 Loss (mean): 0.1254863122539973 Loss (std): 0.3272757534291401 Loss ratio: 2.6080593775574505 Tokens per Sec: 2624.368933562023
Epoch Step: 40 / 67 Loss (mean): 0.04813041760462511 Loss (std): 0.07789492888915313 Loss ratio: 1.6184137343048481 Tokens per Sec: 3086.7759835744005
Epoch Step: 45 / 67 Loss (mean): 0.08117600853302065 Loss (std): 0.12370307310419583 Loss ratio: 1.5238871107326752 Tokens per Sec: 3090.2735155699397
Epoch Step: 50 / 67 Loss (mean): 0.2195316778634151 Loss (std): 0.3610995918785738 Loss ratio: 1.6448632625275943 Tokens per Sec: 2675.9418783330652
Epoch Step: 55 / 67 Loss (mean): 0.17689459363737114 Loss (std): 0.5697582677664511 Loss ratio: 3.220891357112017 Tokens per Sec: 2815.557014141655
Epoch Step: 60 / 67 Loss (mean): 0.07166325173420773 Loss (std): 0.115154429584766 Loss ratio: 1.6068825625142291 Tokens per Sec: 3712.609685533355
Epoch Step: 65 / 67 Loss (mean): 0.3392681729492324 Loss (std): 1.2384745173065146 Loss ratio: 3.6504294126400065 Tokens per Sec: 2581.7158470119034
Mean loss per sample: 0.31806337713411786 Std loss per sample: 2.5235958262648888 ratio: 7.934254641334464
Epoch ended with duration 0:00:11.292764
Train perplexity: 1.04397326838504
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.0772574543953 Loss (std): 44.86939667382201 Loss ratio: 0.44834758480735515 Tokens per Sec: 4451.868385391286
Mean loss per sample: 105.07678454699087 Std loss per sample: 54.47214767506184 ratio: 0.5184032601483121
Epoch ended with duration 0:00:01.016873
b'BLEU = 2.48, 8.6/2.9/1.8/1.3 (BP=0.902, ratio=0.907, hyp_len=2822, ref_len=3113)\n'
Validation perplexity: 1528483.1693527182
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.48
Epoch 808 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.15404551888423157 Loss (std): 0.5411026082301528 Loss ratio: 3.512615051378435 Tokens per Sec: 2833.71420555514
Epoch Step: 10 / 67 Loss (mean): 0.11668832165651111 Loss (std): 0.5284764916700685 Loss ratio: 4.528957861144967 Tokens per Sec: 3096.590040341415
Epoch Step: 15 / 67 Loss (mean): 0.07591050165410707 Loss (std): 0.2776511846996288 Loss ratio: 3.6576123019812337 Tokens per Sec: 3455.4576616215318
Epoch Step: 20 / 67 Loss (mean): 0.4251048807254847 Loss (std): 1.0308831408898536 Loss ratio: 2.4250089510394393 Tokens per Sec: 2738.2296199516522
Epoch Step: 25 / 67 Loss (mean): 0.07672410143413799 Loss (std): 0.29243539211410796 Loss ratio: 3.8115192833524714 Tokens per Sec: 2654.9216028230294
Epoch Step: 30 / 67 Loss (mean): 0.3429255501687294 Loss (std): 0.9702531717642074 Loss ratio: 2.8293405705314596 Tokens per Sec: 3476.583634279267
Epoch Step: 35 / 67 Loss (mean): 0.17520179484199616 Loss (std): 0.42526560880231956 Loss ratio: 2.4272902522821798 Tokens per Sec: 2594.35665334686
Epoch Step: 40 / 67 Loss (mean): 0.030932329177934054 Loss (std): 0.06279707090992276 Loss ratio: 2.0301436257415686 Tokens per Sec: 2686.2861037169796
Epoch Step: 45 / 67 Loss (mean): 0.2536036225628777 Loss (std): 0.9384947956286857 Loss ratio: 3.700636395270726 Tokens per Sec: 2394.709973633283
Epoch Step: 50 / 67 Loss (mean): 0.16612584910421901 Loss (std): 0.5753368500304973 Loss ratio: 3.4632590480820347 Tokens per Sec: 3179.2494406607852
Epoch Step: 55 / 67 Loss (mean): 0.24253652721790786 Loss (std): 0.6249615366057643 Loss ratio: 2.5767728423202216 Tokens per Sec: 2597.1609900908184
Epoch Step: 60 / 67 Loss (mean): 0.16854583621625352 Loss (std): 0.5772094368149802 Loss ratio: 3.4246437038906667 Tokens per Sec: 2839.600422312771
Epoch Step: 65 / 67 Loss (mean): 0.34863657058451736 Loss (std): 0.9045255521551685 Loss ratio: 2.594465493504191 Tokens per Sec: 2382.9370889547613
Mean loss per sample: 0.4056289804785905 Std loss per sample: 3.4499030011743543 ratio: 8.505070315991498
Epoch ended with duration 0:00:11.329240
Train perplexity: 1.0564154064747797
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.88436159491539 Loss (std): 45.547918465962546 Loss ratio: 0.45600650330713194 Tokens per Sec: 4460.145502698581
Mean loss per sample: 103.92108314362217 Std loss per sample: 53.808188236304076 ratio: 0.5177793245470651
Epoch ended with duration 0:00:01.003989
b'BLEU = 2.80, 9.0/3.1/2.1/1.7 (BP=0.896, ratio=0.901, hyp_len=2806, ref_len=3113)\n'
Validation perplexity: 1306899.5945027007
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.8
Epoch 809 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.16575471548821952 Loss (std): 0.5242112047839919 Loss ratio: 3.1625718957072353 Tokens per Sec: 3085.6134387859206
Epoch Step: 10 / 67 Loss (mean): 0.07831669454753865 Loss (std): 0.182154252357823 Loss ratio: 2.325867471937984 Tokens per Sec: 2368.038193832088
Epoch Step: 15 / 67 Loss (mean): 0.1337181549321258 Loss (std): 0.47768662800920947 Loss ratio: 3.5723393599895177 Tokens per Sec: 2599.621270093772
Epoch Step: 20 / 67 Loss (mean): 0.23163603734974458 Loss (std): 0.6846864973000601 Loss ratio: 2.9558720876676885 Tokens per Sec: 2911.0777856063446
Epoch Step: 25 / 67 Loss (mean): 0.11097834574002263 Loss (std): 0.28424604591221697 Loss ratio: 2.5612748506640246 Tokens per Sec: 2862.5099067283422
Epoch Step: 30 / 67 Loss (mean): 0.10321275382921158 Loss (std): 0.1911684291039594 Loss ratio: 1.8521783598593835 Tokens per Sec: 2753.5950119469226
Epoch Step: 35 / 67 Loss (mean): 0.36896780037022836 Loss (std): 0.9336848898423818 Loss ratio: 2.5305321735541884 Tokens per Sec: 2933.6450186223205
Epoch Step: 40 / 67 Loss (mean): 0.6086852946136787 Loss (std): 1.1393689465112793 Loss ratio: 1.8718522635484658 Tokens per Sec: 3088.4824493536626
Epoch Step: 45 / 67 Loss (mean): 0.14790976982294524 Loss (std): 0.36631242416175336 Loss ratio: 2.4765938355542443 Tokens per Sec: 3204.2141191069663
Epoch Step: 50 / 67 Loss (mean): 0.17269183506869012 Loss (std): 0.5502226132268092 Loss ratio: 3.1861530280684778 Tokens per Sec: 2586.381146660526
Epoch Step: 55 / 67 Loss (mean): 0.18422192666275805 Loss (std): 0.5299803912801709 Loss ratio: 2.8768583679529542 Tokens per Sec: 2873.8053024500377
Epoch Step: 60 / 67 Loss (mean): 0.11391667639372827 Loss (std): 0.3243682843973702 Loss ratio: 2.8474170302885384 Tokens per Sec: 2984.185965220749
Epoch Step: 65 / 67 Loss (mean): 0.031094436528898466 Loss (std): 0.04473375047300304 Loss ratio: 1.4386416178157306 Tokens per Sec: 2668.440519620127
Mean loss per sample: 0.30731143154376933 Std loss per sample: 2.425633121571501 ratio: 7.893078071929863
Epoch ended with duration 0:00:11.294014
Train perplexity: 1.0424556678767498
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print warnings[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.86702087521553 Loss (std): 45.369394661671926 Loss ratio: 0.45429806821173996 Tokens per Sec: 4422.331267188707
Mean loss per sample: 104.1871860852984 Std loss per sample: 53.99614670658639 ratio: 0.5182609180209509
Epoch ended with duration 0:00:01.006229
b'BLEU = 2.53, 8.4/2.8/1.8/1.4 (BP=0.905, ratio=0.909, hyp_len=2830, ref_len=3113)\n'
Validation perplexity: 1354888.7197284328
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.53
Epoch 810 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.14078800846618833 Loss (std): 0.31925724387398396 Loss ratio: 2.267645145010037 Tokens per Sec: 3205.5597112218447
Epoch Step: 10 / 67 Loss (mean): 0.18843022416922395 Loss (std): 0.5770116175745106 Loss ratio: 3.062203105252969 Tokens per Sec: 2668.690131861052
Epoch Step: 15 / 67 Loss (mean): 0.07858089371461574 Loss (std): 0.18164016397280844 Loss ratio: 2.3115054485442186 Tokens per Sec: 3160.3071953892904
Epoch Step: 20 / 67 Loss (mean): 0.1144640820098175 Loss (std): 0.36615850997782906 Loss ratio: 3.1988943915736283 Tokens per Sec: 2627.54857402328
Epoch Step: 25 / 67 Loss (mean): 0.17131930802224815 Loss (std): 0.39036434158119676 Loss ratio: 2.2785776226139243 Tokens per Sec: 3189.4269477358544
Epoch Step: 30 / 67 Loss (mean): 0.07946725650981534 Loss (std): 0.24570019847310567 Loss ratio: 3.0918419644040207 Tokens per Sec: 2367.8291794501474
Epoch Step: 35 / 67 Loss (mean): 0.18673310734629922 Loss (std): 0.4455115005226609 Loss ratio: 2.3858195627648047 Tokens per Sec: 2513.713435520105
Epoch Step: 40 / 67 Loss (mean): 0.14656258193645044 Loss (std): 0.37036903944833105 Loss ratio: 2.527036809497005 Tokens per Sec: 3196.031186136615
Epoch Step: 45 / 67 Loss (mean): 0.14389159119855321 Loss (std): 0.4346350583951551 Loss ratio: 3.020573021500684 Tokens per Sec: 2885.9534159962427
Epoch Step: 50 / 67 Loss (mean): 0.04801479507932527 Loss (std): 0.07335796583355149 Loss ratio: 1.5278200336449788 Tokens per Sec: 2196.5893463262933
Epoch Step: 55 / 67 Loss (mean): 0.3043678784513304 Loss (std): 1.0102344222003798 Loss ratio: 3.3191229880781266 Tokens per Sec: 3108.5450191934933
Epoch Step: 60 / 67 Loss (mean): 0.06041193809401842 Loss (std): 0.1001972539748524 Loss ratio: 1.6585671166337443 Tokens per Sec: 2666.9337191112936
Epoch Step: 65 / 67 Loss (mean): 0.11162799524777256 Loss (std): 0.5614442187951195 Loss ratio: 5.029600482826217 Tokens per Sec: 2734.752271913254
Mean loss per sample: 0.36405247722915934 Std loss per sample: 2.703221195034982 ratio: 7.425361353422109
Epoch ended with duration 0:00:11.295068
Train perplexity: 1.0504894477281437
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use gwt_binary ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.10458180308342 Loss (std): 45.819305070765324 Loss ratio: 0.45771436477200284 Tokens per Sec: 4453.572901246797
Mean loss per sample: 104.24645934034078 Std loss per sample: 54.14231251972078 ratio: 0.5193683590054464
Epoch ended with duration 0:00:01.005351
b'BLEU = 2.84, 9.0/3.1/2.1/1.6 (BP=0.915, ratio=0.918, hyp_len=2859, ref_len=3113)\n'
Validation perplexity: 1365815.8099027425
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.84
Model saved checkpoint_commit_msg_generator!
Epoch 811 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.05682955785505328 Loss (std): 0.07871399617535609 Loss ratio: 1.3850890125895434 Tokens per Sec: 2748.722556260009
Epoch Step: 10 / 67 Loss (mean): 0.12249814351434907 Loss (std): 0.39066989012318726 Loss ratio: 3.189190292320025 Tokens per Sec: 2555.0997095409994
Epoch Step: 15 / 67 Loss (mean): 0.12476046839356059 Loss (std): 0.3574264777999362 Loss ratio: 2.8649016984484525 Tokens per Sec: 2542.5056983269264
Epoch Step: 20 / 67 Loss (mean): 0.34133468430445646 Loss (std): 0.7119490102772369 Loss ratio: 2.085779860690066 Tokens per Sec: 3396.093348252435
Epoch Step: 25 / 67 Loss (mean): 0.07068854851331707 Loss (std): 0.19528827389439785 Loss ratio: 2.7626578562100104 Tokens per Sec: 2696.234754225088
Epoch Step: 30 / 67 Loss (mean): 0.09673429445211923 Loss (std): 0.23313692885770873 Loss ratio: 2.4100752497151356 Tokens per Sec: 2348.9438349269053
Epoch Step: 35 / 67 Loss (mean): 0.28508604299349827 Loss (std): 0.8580897743971259 Loss ratio: 3.009932599249328 Tokens per Sec: 3563.9390237197417
Epoch Step: 40 / 67 Loss (mean): 0.1050077336412869 Loss (std): 0.36312611607579853 Loss ratio: 3.458089261465831 Tokens per Sec: 2394.6057874137164
Epoch Step: 45 / 67 Loss (mean): 0.38587752214152715 Loss (std): 1.2984256465645314 Loss ratio: 3.3648646838991354 Tokens per Sec: 2938.2261963633996
Epoch Step: 50 / 67 Loss (mean): 0.49508117586083245 Loss (std): 1.210727582222475 Loss ratio: 2.4455132637941603 Tokens per Sec: 3298.516557764308
Epoch Step: 55 / 67 Loss (mean): 2.5037811642696397 Loss (std): 8.728579454700691 Loss ratio: 3.4861590858108573 Tokens per Sec: 3347.4751028748337
Epoch Step: 60 / 67 Loss (mean): 0.16018686196548515 Loss (std): 0.5175078227091396 Loss ratio: 3.230650855877588 Tokens per Sec: 2638.0974824286895
Epoch Step: 65 / 67 Loss (mean): 0.17885646933609678 Loss (std): 0.4719479988016426 Loss ratio: 2.6386968307799092 Tokens per Sec: 2410.515408369731
Mean loss per sample: 0.39141316196697706 Std loss per sample: 3.0265362886781353 ratio: 7.732331415399566
Epoch ended with duration 0:00:11.325045
Train perplexity: 1.0543854539375588
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement to apache-sshd ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.98054075241089 Loss (std): 45.03367319456759 Loss ratio: 0.4504243811412039 Tokens per Sec: 4336.721196769206
Mean loss per sample: 105.62390065455779 Std loss per sample: 53.86501119849971 ratio: 0.5099699108316861
Epoch ended with duration 0:00:01.020280
b'BLEU = 2.67, 8.6/2.9/1.9/1.4 (BP=0.931, ratio=0.933, hyp_len=2905, ref_len=3113)\n'
Validation perplexity: 1646118.1560381688
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.67
Epoch 812 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.06146540905137954 Loss (std): 0.09908107496916033 Loss ratio: 1.611981055659086 Tokens per Sec: 3165.483139408363
Epoch Step: 10 / 67 Loss (mean): 0.13298572433450317 Loss (std): 0.4984934431504065 Loss ratio: 3.7484733466317803 Tokens per Sec: 2580.5136327460395
Epoch Step: 15 / 67 Loss (mean): 0.3031027479246404 Loss (std): 1.881319603072175 Loss ratio: 6.206870825004603 Tokens per Sec: 2431.5009188748813
Epoch Step: 20 / 67 Loss (mean): 0.08999561278869805 Loss (std): 0.18936743163380962 Loss ratio: 2.1041851459851495 Tokens per Sec: 2720.5223924885318
Epoch Step: 25 / 67 Loss (mean): 0.9720053019009356 Loss (std): 1.3155880779095015 Loss ratio: 1.353478294137518 Tokens per Sec: 2561.5578695259596
Epoch Step: 30 / 67 Loss (mean): 0.1354860414610357 Loss (std): 0.4385011680035552 Loss ratio: 3.2365043902302166 Tokens per Sec: 2407.7645365323215
Epoch Step: 35 / 67 Loss (mean): 0.9881485472330951 Loss (std): 5.2878481124559436 Loss ratio: 5.351268417347163 Tokens per Sec: 3398.699874177987
Epoch Step: 40 / 67 Loss (mean): 0.21807389261402932 Loss (std): 0.5266361191052537 Loss ratio: 2.414943452389099 Tokens per Sec: 2479.255121271557
Epoch Step: 45 / 67 Loss (mean): 0.08061058729799697 Loss (std): 0.2127331320938387 Loss ratio: 2.6390222329905386 Tokens per Sec: 2696.1730984409446
Epoch Step: 50 / 67 Loss (mean): 0.0975435269983791 Loss (std): 0.18387496191125516 Loss ratio: 1.8850554984987435 Tokens per Sec: 2902.8385868129712
Epoch Step: 55 / 67 Loss (mean): 0.21477446332301042 Loss (std): 0.6214503046748707 Loss ratio: 2.893501839370165 Tokens per Sec: 3214.8623152240416
Epoch Step: 60 / 67 Loss (mean): 5.820348933250898 Loss (std): 15.303561169217373 Loss ratio: 2.6293202254232755 Tokens per Sec: 3013.3321463981047
Epoch Step: 65 / 67 Loss (mean): 0.18416884421731083 Loss (std): 0.5960962190705688 Loss ratio: 3.2366832816043654 Tokens per Sec: 2611.597541764475
Mean loss per sample: 0.4938990062334106 Std loss per sample: 3.8490801283064497 ratio: 7.793253437905121
Epoch ended with duration 0:00:11.381576
Train perplexity: 1.0691077205616744
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire assertion[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.80788776278496 Loss (std): 45.02077624053449 Loss ratio: 0.4465997377752291 Tokens per Sec: 4312.854143367241
Mean loss per sample: 105.27028767407307 Std loss per sample: 54.451668174228395 ratio: 0.517255812417042
Epoch ended with duration 0:00:01.020909
b'BLEU = 2.70, 9.0/3.0/2.0/1.5 (BP=0.901, ratio=0.906, hyp_len=2820, ref_len=3113)\n'
Validation perplexity: 1569094.954056741
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.7
Epoch 813 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.42467903711803956 Loss (std): 1.2431260335830636 Loss ratio: 2.9272130831302055 Tokens per Sec: 2816.2875042657406
Epoch Step: 10 / 67 Loss (mean): 0.6336688192950533 Loss (std): 1.1216441522504375 Loss ratio: 1.7700794454400475 Tokens per Sec: 2344.234179168632
Epoch Step: 15 / 67 Loss (mean): 0.351696951473059 Loss (std): 0.9984272005633363 Loss ratio: 2.838885001366919 Tokens per Sec: 2685.099084094807
Epoch Step: 20 / 67 Loss (mean): 0.9635021758067523 Loss (std): 4.955778487470849 Loss ratio: 5.143505237361103 Tokens per Sec: 2217.2075566714084
Epoch Step: 25 / 67 Loss (mean): 0.0752129810630322 Loss (std): 0.1960444574210811 Loss ratio: 2.6065242282683374 Tokens per Sec: 2825.098878964371
Epoch Step: 30 / 67 Loss (mean): 0.2583600000880324 Loss (std): 0.6857731113931408 Loss ratio: 2.6543315960654654 Tokens per Sec: 3227.423886990795
Epoch Step: 35 / 67 Loss (mean): 0.14572538150423497 Loss (std): 0.41187441080772874 Loss ratio: 2.826373872253401 Tokens per Sec: 3056.053055197618
Epoch Step: 40 / 67 Loss (mean): 0.2089602417236165 Loss (std): 0.5501326179486099 Loss ratio: 2.6327143068500503 Tokens per Sec: 2478.647403001051
Epoch Step: 45 / 67 Loss (mean): 0.24776727472089988 Loss (std): 0.7456537611977476 Loss ratio: 3.009492524941792 Tokens per Sec: 2687.7496895865315
Epoch Step: 50 / 67 Loss (mean): 0.08985274747738003 Loss (std): 0.2516498250948274 Loss ratio: 2.800691488684628 Tokens per Sec: 3012.184952609531
Epoch Step: 55 / 67 Loss (mean): 0.20600111758085404 Loss (std): 0.5391530433318328 Loss ratio: 2.617233584280041 Tokens per Sec: 3089.977279677879
Epoch Step: 60 / 67 Loss (mean): 0.12005736788660215 Loss (std): 0.4036863846888747 Loss ratio: 3.362445735693363 Tokens per Sec: 3226.363858561507
Epoch Step: 65 / 67 Loss (mean): 0.1452078348811483 Loss (std): 0.5476536973400727 Loss ratio: 3.771516170517409 Tokens per Sec: 3044.052132309297
Mean loss per sample: 0.30983082037667226 Std loss per sample: 2.049414673241025 ratio: 6.6146249451538734
Epoch ended with duration 0:00:11.317836
Train perplexity: 1.0428110730106614
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the daemon not use[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.76914700865746 Loss (std): 45.49772460552717 Loss ratio: 0.4515045126026351 Tokens per Sec: 4308.696736845733
Mean loss per sample: 107.06574726428408 Std loss per sample: 53.868152931233375 ratio: 0.5031315271938813
Epoch ended with duration 0:00:01.024180
b'BLEU = 2.34, 8.8/2.5/1.5/1.1 (BP=0.947, ratio=0.948, hyp_len=2952, ref_len=3113)\n'
Validation perplexity: 2001337.936096839
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.34
Epoch 814 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.28210375783692143 Loss (std): 0.7929530535666328 Loss ratio: 2.81085604689117 Tokens per Sec: 3021.574995947554
Epoch Step: 10 / 67 Loss (mean): 0.11261612503130891 Loss (std): 0.38018795392621 Loss ratio: 3.3759637336172976 Tokens per Sec: 2409.325879422285
Epoch Step: 15 / 67 Loss (mean): 0.21359587806637137 Loss (std): 0.6393495597867951 Loss ratio: 2.993267311966235 Tokens per Sec: 2384.8116170592075
Epoch Step: 20 / 67 Loss (mean): 0.253224300021202 Loss (std): 0.7109169575245784 Loss ratio: 2.807459463665433 Tokens per Sec: 2659.5824116536282
Epoch Step: 25 / 67 Loss (mean): 0.1800599307723587 Loss (std): 0.36876754414388185 Loss ratio: 2.048026690680545 Tokens per Sec: 3327.968683003572
Epoch Step: 30 / 67 Loss (mean): 0.1287859357180423 Loss (std): 0.33454886731886585 Loss ratio: 2.5977127506477955 Tokens per Sec: 2421.483825793824
Epoch Step: 35 / 67 Loss (mean): 0.6689893265829596 Loss (std): 3.410390315294017 Loss ratio: 5.097824703293085 Tokens per Sec: 3101.864574610134
Epoch Step: 40 / 67 Loss (mean): 0.15164269508204598 Loss (std): 0.41642716005016295 Loss ratio: 2.74610761715133 Tokens per Sec: 3351.471823557447
Epoch Step: 45 / 67 Loss (mean): 0.1608576365333647 Loss (std): 0.41844904336569105 Loss ratio: 2.601362623395858 Tokens per Sec: 2496.128882817967
Epoch Step: 50 / 67 Loss (mean): 0.11072381428311928 Loss (std): 0.19915726493536903 Loss ratio: 1.798685009406618 Tokens per Sec: 3058.2850779105343
Epoch Step: 55 / 67 Loss (mean): 0.1117949943795793 Loss (std): 0.248882601539846 Loss ratio: 2.226241013035083 Tokens per Sec: 2784.3860798509586
Epoch Step: 60 / 67 Loss (mean): 0.2002453336463077 Loss (std): 0.620852312100822 Loss ratio: 3.1004583267714505 Tokens per Sec: 2848.754821555121
Epoch Step: 65 / 67 Loss (mean): 0.10348984511983872 Loss (std): 0.24783755941816696 Loss ratio: 2.394800756839254 Tokens per Sec: 2732.3357617768497
Mean loss per sample: 0.45236234935191083 Std loss per sample: 3.4480919180954968 ratio: 7.622411376710504
Epoch ended with duration 0:00:11.371577
Train perplexity: 1.0631162957804008
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily not active ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.68864235281944 Loss (std): 45.25813027556975 Loss ratio: 0.4494859521194294 Tokens per Sec: 4457.406879797596
Mean loss per sample: 103.7839278756473 Std loss per sample: 53.63356690599113 ratio: 0.5167810469676408
Epoch ended with duration 0:00:01.003094
b'BLEU = 2.26, 8.4/2.5/1.6/1.3 (BP=0.881, ratio=0.888, hyp_len=2763, ref_len=3113)\n'
Validation perplexity: 1282832.61690847
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.26
Epoch 815 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.22179288823758725 Loss (std): 0.3848417994758834 Loss ratio: 1.7351403939680705 Tokens per Sec: 2473.2194434971643
Epoch Step: 10 / 67 Loss (mean): 0.1727647714892555 Loss (std): 0.46062016970797165 Loss ratio: 2.6661695306130064 Tokens per Sec: 2762.0104428111968
Epoch Step: 15 / 67 Loss (mean): 0.316623579276893 Loss (std): 0.7230795835966966 Loss ratio: 2.2837199467205522 Tokens per Sec: 2458.294130200971
Epoch Step: 20 / 67 Loss (mean): 0.09103847151118316 Loss (std): 0.1933837422823097 Loss ratio: 2.124198034877535 Tokens per Sec: 3115.85555286194
Epoch Step: 25 / 67 Loss (mean): 0.327631537875277 Loss (std): 0.562867571528626 Loss ratio: 1.7179895903150166 Tokens per Sec: 3156.336916136681
Epoch Step: 30 / 67 Loss (mean): 0.217860499009646 Loss (std): 0.6968540428594283 Loss ratio: 3.198625019345863 Tokens per Sec: 2824.548817592133
Epoch Step: 35 / 67 Loss (mean): 0.15490769585267117 Loss (std): 0.35427615994031075 Loss ratio: 2.2870145862685476 Tokens per Sec: 2994.4590367309547
Epoch Step: 40 / 67 Loss (mean): 0.22801099045227602 Loss (std): 0.7077239780027956 Loss ratio: 3.103902915376907 Tokens per Sec: 3079.0842339047517
Epoch Step: 45 / 67 Loss (mean): 0.18716108211083338 Loss (std): 0.521691748605919 Loss ratio: 2.7873943809375 Tokens per Sec: 3252.50835105232
Epoch Step: 50 / 67 Loss (mean): 0.32282572067651927 Loss (std): 1.4369383342662243 Loss ratio: 4.451127163148435 Tokens per Sec: 2504.1374414725697
Epoch Step: 55 / 67 Loss (mean): 0.16868737404706735 Loss (std): 0.450073681526472 Loss ratio: 2.668093472134387 Tokens per Sec: 2583.2527266663797
Epoch Step: 60 / 67 Loss (mean): 0.14083803026005626 Loss (std): 0.3256063951046926 Loss ratio: 2.3119209669679637 Tokens per Sec: 3127.906140026558
Epoch Step: 65 / 67 Loss (mean): 0.11268266758452228 Loss (std): 0.2747127197326412 Loss ratio: 2.437932342403783 Tokens per Sec: 2469.274427026177
Mean loss per sample: 0.7154396490047001 Std loss per sample: 4.577783014115001 ratio: 6.398559292154811
Epoch ended with duration 0:00:11.336716
Train perplexity: 1.1016386799053466
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 102.96344843506813 Loss (std): 46.799957457952715 Loss ratio: 0.4545298178068131 Tokens per Sec: 4206.788548993617
Mean loss per sample: 109.18318738620422 Std loss per sample: 55.12988705553232 ratio: 0.5049301854554415
Epoch ended with duration 0:00:01.035411
b'BLEU = 2.50, 8.4/2.7/1.7/1.4 (BP=0.925, ratio=0.928, hyp_len=2889, ref_len=3113)\n'
Validation perplexity: 2666500.6328784702
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.5
Model saved checkpoint_commit_msg_generator!
Epoch 816 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5173657292798453 Loss (std): 1.4727828356430874 Loss ratio: 2.8466957749465718 Tokens per Sec: 2753.2511738812154
Epoch Step: 10 / 67 Loss (mean): 0.25614843838593515 Loss (std): 0.7491231593673376 Loss ratio: 2.9245665680719264 Tokens per Sec: 2990.0838998381414
Epoch Step: 15 / 67 Loss (mean): 0.21956507353502275 Loss (std): 0.5136304734206212 Loss ratio: 2.339308639352844 Tokens per Sec: 2853.505069384759
Epoch Step: 20 / 67 Loss (mean): 0.5918297385833284 Loss (std): 1.4588195598193134 Loss ratio: 2.4649311528537097 Tokens per Sec: 3211.696227230353
Epoch Step: 25 / 67 Loss (mean): 2.3087639925288386 Loss (std): 10.11629450026256 Loss ratio: 4.381692772842479 Tokens per Sec: 2711.5127847393364
Epoch Step: 30 / 67 Loss (mean): 0.07728259087525657 Loss (std): 0.12145619228602009 Loss ratio: 1.5715854102519031 Tokens per Sec: 3458.100988213709
Epoch Step: 35 / 67 Loss (mean): 0.1492738611104869 Loss (std): 0.31010622477781496 Loss ratio: 2.0774315239845373 Tokens per Sec: 3120.191897646663
Epoch Step: 40 / 67 Loss (mean): 0.3070819154850142 Loss (std): 0.9108133482127622 Loss ratio: 2.9660273115536513 Tokens per Sec: 2395.40637365538
Epoch Step: 45 / 67 Loss (mean): 0.17301079088952065 Loss (std): 0.4099873989362377 Loss ratio: 2.369721546432575 Tokens per Sec: 2487.098544526952
Epoch Step: 50 / 67 Loss (mean): 0.18241694800644837 Loss (std): 0.4597510075588619 Loss ratio: 2.5203305536205436 Tokens per Sec: 2222.191233831211
Epoch Step: 55 / 67 Loss (mean): 0.42319620658281565 Loss (std): 1.0387201822213892 Loss ratio: 2.4544647755913216 Tokens per Sec: 2849.005168615584
Epoch Step: 60 / 67 Loss (mean): 0.19628634811465417 Loss (std): 0.552637534878138 Loss ratio: 2.8154659770598673 Tokens per Sec: 2548.6882344173396
Epoch Step: 65 / 67 Loss (mean): 0.10504736814982607 Loss (std): 0.2956949717236511 Loss ratio: 2.8148727277194587 Tokens per Sec: 3015.3662026405527
Mean loss per sample: 0.35686184985960245 Std loss per sample: 2.3018855812056263 ratio: 6.450354898152437
Epoch ended with duration 0:00:11.229408
Train perplexity: 1.049467934217932
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use gwt_binary ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.95081529021263 Loss (std): 45.31543978217044 Loss ratio: 0.4533773901753037 Tokens per Sec: 4450.313657798736
Mean loss per sample: 103.59259904927161 Std loss per sample: 53.31507336752902 ratio: 0.5146610265292295
Epoch ended with duration 0:00:01.005695
b'BLEU = 2.66, 8.6/3.0/2.0/1.5 (BP=0.902, ratio=0.906, hyp_len=2821, ref_len=3113)\n'
Validation perplexity: 1249998.2256791017
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.66
Epoch 817 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.12207981981100602 Loss (std): 0.35943278058963385 Loss ratio: 2.9442440294069754 Tokens per Sec: 2556.877622723099
Epoch Step: 10 / 67 Loss (mean): 0.13315290528407786 Loss (std): 0.2616821718917288 Loss ratio: 1.9652757206719411 Tokens per Sec: 3369.838064206437
Epoch Step: 15 / 67 Loss (mean): 0.21540141406239854 Loss (std): 0.584226445004198 Loss ratio: 2.7122683829501524 Tokens per Sec: 2394.9775717732637
Epoch Step: 20 / 67 Loss (mean): 0.090418516907107 Loss (std): 0.2930358697292943 Loss ratio: 3.2408833915109407 Tokens per Sec: 2847.1655066694148
Epoch Step: 25 / 67 Loss (mean): 0.14342833839327795 Loss (std): 0.4173730249914185 Loss ratio: 2.9099760177587015 Tokens per Sec: 2806.0739435717824
Epoch Step: 30 / 67 Loss (mean): 0.23504020138079795 Loss (std): 0.6122483236338339 Loss ratio: 2.6048664017348506 Tokens per Sec: 3147.9317533302965
Epoch Step: 35 / 67 Loss (mean): 0.49185926925201784 Loss (std): 1.0071914921582394 Loss ratio: 2.0477229059643416 Tokens per Sec: 2882.6956012405135
Epoch Step: 40 / 67 Loss (mean): 0.1223390711029424 Loss (std): 0.33987964799620535 Loss ratio: 2.778177445128818 Tokens per Sec: 2774.7428179630606
Epoch Step: 45 / 67 Loss (mean): 0.14379686942083936 Loss (std): 0.41218277115816837 Loss ratio: 2.8664238158889566 Tokens per Sec: 2735.949621485759
Epoch Step: 50 / 67 Loss (mean): 0.30172225409910425 Loss (std): 0.7625530648951433 Loss ratio: 2.5273345089244685 Tokens per Sec: 2917.27227662068
Epoch Step: 55 / 67 Loss (mean): 0.12805039822251274 Loss (std): 0.3121113668859168 Loss ratio: 2.4374103573154215 Tokens per Sec: 2762.3298018977534
Epoch Step: 60 / 67 Loss (mean): 0.30532490738096385 Loss (std): 0.6587441329025258 Loss ratio: 2.157518489248534 Tokens per Sec: 3240.2313136995444
Epoch Step: 65 / 67 Loss (mean): 0.13151373174696346 Loss (std): 0.5396888249544729 Loss ratio: 4.1036690069205175 Tokens per Sec: 2343.0343349429304
Mean loss per sample: 0.28612754576896177 Std loss per sample: 1.764306797272827 ratio: 6.166155001019876
Epoch ended with duration 0:00:11.261477
Train perplexity: 1.0394720866331173
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use gwt_binary ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.03648468852043 Loss (std): 45.535110551489986 Loss ratio: 0.45067987758944267 Tokens per Sec: 4472.293114170407
Mean loss per sample: 104.39932164145236 Std loss per sample: 53.97225479787376 ratio: 0.5169789798370085
Epoch ended with duration 0:00:01.002175
b'BLEU = 2.29, 8.4/2.5/1.5/1.2 (BP=0.917, ratio=0.921, hyp_len=2866, ref_len=3113)\n'
Validation perplexity: 1394404.5703476656
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.29
Epoch 818 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.10127267484131153 Loss (std): 0.36680703075058013 Loss ratio: 3.6219743511795826 Tokens per Sec: 2490.5643586824317
Epoch Step: 10 / 67 Loss (mean): 0.21549195427451195 Loss (std): 0.47672846389098333 Loss ratio: 2.212279644017178 Tokens per Sec: 3000.513736790191
Epoch Step: 15 / 67 Loss (mean): 0.08382779374471738 Loss (std): 0.26431948937141697 Loss ratio: 3.1531247282536734 Tokens per Sec: 2734.457931400838
Epoch Step: 20 / 67 Loss (mean): 0.05459237141030826 Loss (std): 0.09799871185560852 Loss ratio: 1.7950990096961454 Tokens per Sec: 3001.579245622461
Epoch Step: 25 / 67 Loss (mean): 0.2285432978405879 Loss (std): 0.5816479068730851 Loss ratio: 2.545022813483651 Tokens per Sec: 2678.564179512175
Epoch Step: 30 / 67 Loss (mean): 0.17547770249620953 Loss (std): 0.41445522985382155 Loss ratio: 2.361868339726947 Tokens per Sec: 2994.987993232919
Epoch Step: 35 / 67 Loss (mean): 0.13918236951576546 Loss (std): 0.47656654268418275 Loss ratio: 3.424043895374271 Tokens per Sec: 2763.011950436212
Epoch Step: 40 / 67 Loss (mean): 0.20258802924672636 Loss (std): 0.7285857902744762 Loss ratio: 3.5963911243104683 Tokens per Sec: 2536.031360711585
Epoch Step: 45 / 67 Loss (mean): 1.2004450963650015 Loss (std): 1.6966322772767493 Loss ratio: 1.4133360054651591 Tokens per Sec: 3629.7064990637623
Epoch Step: 50 / 67 Loss (mean): 0.06406401080084834 Loss (std): 0.1546047058342365 Loss ratio: 2.413284836549591 Tokens per Sec: 2485.924074816182
Epoch Step: 55 / 67 Loss (mean): 0.11890105306702026 Loss (std): 0.34206323988628745 Loss ratio: 2.876873089538397 Tokens per Sec: 3280.5817020275776
Epoch Step: 60 / 67 Loss (mean): 0.07745830337626103 Loss (std): 0.29477887658532936 Loss ratio: 3.805645924794055 Tokens per Sec: 3184.456067357903
Epoch Step: 65 / 67 Loss (mean): 0.1530923937971238 Loss (std): 0.43464569723363433 Loss ratio: 2.8391070676549846 Tokens per Sec: 2373.716617376697
Mean loss per sample: 0.2271095063741255 Std loss per sample: 0.9143499302139316 ratio: 4.026031075545076
Epoch ended with duration 0:00:11.269317
Train perplexity: 1.0312048247309529
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 123.1074686050415 Loss (std): 48.49882865971145 Loss ratio: 0.39395521010433093 Tokens per Sec: 4128.827887479972
Mean loss per sample: 112.55313830926526 Std loss per sample: 55.09580087833636 ratio: 0.48950923720090467
Epoch ended with duration 0:00:01.061106
b'BLEU = 2.60, 8.9/2.9/1.8/1.4 (BP=0.917, ratio=0.920, hyp_len=2864, ref_len=3113)\n'
Validation perplexity: 4209970.750299407
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.6
Epoch 819 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.24237021144290338 Loss (std): 0.6404779798719996 Loss ratio: 2.642560635067486 Tokens per Sec: 3335.3471660884047
Epoch Step: 10 / 67 Loss (mean): 0.09071746219797205 Loss (std): 0.2124945333563934 Loss ratio: 2.3423774013063565 Tokens per Sec: 2887.0457138048373
Epoch Step: 15 / 67 Loss (mean): 0.08596694575498987 Loss (std): 0.1810983639066461 Loss ratio: 2.1066046061795145 Tokens per Sec: 3107.483123658463
Epoch Step: 20 / 67 Loss (mean): 0.042049826289030534 Loss (std): 0.10822084503017855 Loss ratio: 2.5736335814164812 Tokens per Sec: 2480.577110174208
Epoch Step: 25 / 67 Loss (mean): 0.349730827332678 Loss (std): 1.0810832884943093 Loss ratio: 3.0911867184814668 Tokens per Sec: 2918.053739201053
Epoch Step: 30 / 67 Loss (mean): 0.17988456913599293 Loss (std): 0.4088809252213385 Loss ratio: 2.2730183427363584 Tokens per Sec: 2483.9043124385707
Epoch Step: 35 / 67 Loss (mean): 0.0627420279446369 Loss (std): 0.14024222024352032 Loss ratio: 2.235219753611869 Tokens per Sec: 2829.0411632949563
Epoch Step: 40 / 67 Loss (mean): 0.07518938939665532 Loss (std): 0.1480716660737764 Loss ratio: 1.9693159801130549 Tokens per Sec: 2602.489355833416
Epoch Step: 45 / 67 Loss (mean): 0.06032611343152894 Loss (std): 0.12294579627480605 Loss ratio: 2.0380195123021045 Tokens per Sec: 2695.6134333893287
Epoch Step: 50 / 67 Loss (mean): 0.12851549313381838 Loss (std): 0.3441226794413785 Loss ratio: 2.6776746604633606 Tokens per Sec: 2523.4292228520353
Epoch Step: 55 / 67 Loss (mean): 0.07665513899883081 Loss (std): 0.24872023049555103 Loss ratio: 3.244664790175968 Tokens per Sec: 2761.157450640124
Epoch Step: 60 / 67 Loss (mean): 0.34487868181986414 Loss (std): 1.0404710338085288 Loss ratio: 3.0169189592066004 Tokens per Sec: 2791.031722116192
Epoch Step: 65 / 67 Loss (mean): 0.2088134153127612 Loss (std): 0.46107854577475293 Loss ratio: 2.2080887144350783 Tokens per Sec: 3486.075665075796
Mean loss per sample: 0.39666542161179436 Std loss per sample: 3.516457214614044 ratio: 8.865046013654059
Epoch ended with duration 0:00:11.302312
Train perplexity: 1.055134997353767
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily not active ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.2384505867958 Loss (std): 44.39171009588139 Loss ratio: 0.4473236919096754 Tokens per Sec: 4332.018598801913
Mean loss per sample: 107.16040797433892 Std loss per sample: 53.70700375307405 ratio: 0.5011832706528604
Epoch ended with duration 0:00:01.033011
b'BLEU = 2.89, 8.6/3.2/2.1/1.6 (BP=0.936, ratio=0.938, hyp_len=2919, ref_len=3113)\n'
Validation perplexity: 2027176.9227097107
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.89
Epoch 820 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.11915056013276626 Loss (std): 0.4210829435925057 Loss ratio: 3.534040822999945 Tokens per Sec: 2432.442188727102
Epoch Step: 10 / 67 Loss (mean): 1.1632010247449216 Loss (std): 5.163306840624049 Loss ratio: 4.4388774861647935 Tokens per Sec: 2728.5963800758163
Epoch Step: 15 / 67 Loss (mean): 0.2952567506190462 Loss (std): 1.0416917810977722 Loss ratio: 3.5280879401189735 Tokens per Sec: 2751.633093634318
Epoch Step: 20 / 67 Loss (mean): 0.3953168388670747 Loss (std): 1.0442541784285995 Loss ratio: 2.6415626043689224 Tokens per Sec: 2917.5854741013036
Epoch Step: 25 / 67 Loss (mean): 0.18387766414002726 Loss (std): 0.7072434196932927 Loss ratio: 3.8462715033986394 Tokens per Sec: 2650.792659212575
Epoch Step: 30 / 67 Loss (mean): 0.28135382078471594 Loss (std): 0.7007281184182161 Loss ratio: 2.4905583882381097 Tokens per Sec: 3327.692092722693
Epoch Step: 35 / 67 Loss (mean): 4.069420963409357 Loss (std): 11.950041620503074 Loss ratio: 2.9365459430108554 Tokens per Sec: 2842.1047031681305
Epoch Step: 40 / 67 Loss (mean): 0.13791484881585347 Loss (std): 0.4120724685425304 Loss ratio: 2.987876012486062 Tokens per Sec: 2756.7673409558465
Epoch Step: 45 / 67 Loss (mean): 0.16141164820669474 Loss (std): 0.44907672386989933 Loss ratio: 2.782182877501113 Tokens per Sec: 2885.195394802405
Epoch Step: 50 / 67 Loss (mean): 2.49887525455415 Loss (std): 8.87923860776724 Loss ratio: 3.553294063633231 Tokens per Sec: 2728.658583401401
Epoch Step: 55 / 67 Loss (mean): 0.10750031202235277 Loss (std): 0.4877315787058536 Loss ratio: 4.537024772583344 Tokens per Sec: 2382.2554920194843
Epoch Step: 60 / 67 Loss (mean): 0.5491687211761018 Loss (std): 0.8491455381172331 Loss ratio: 1.5462379872959622 Tokens per Sec: 2942.451077211008
Epoch Step: 65 / 67 Loss (mean): 0.05500412434048485 Loss (std): 0.11274325713011651 Loss ratio: 2.0497236976670448 Tokens per Sec: 3069.278630125723
Mean loss per sample: 0.4423534790065814 Std loss per sample: 3.52701059577597 ratio: 7.973285535578426
Epoch ended with duration 0:00:11.370442
Train perplexity: 1.0616776009204643
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire can start ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.0245206952095 Loss (std): 44.967030907850905 Loss ratio: 0.44956007382302327 Tokens per Sec: 4435.207354965027
Mean loss per sample: 102.85116086362815 Std loss per sample: 52.78667888589988 ratio: 0.5132336712843767
Epoch ended with duration 0:00:01.006347
b'BLEU = 2.41, 8.2/2.7/1.7/1.2 (BP=0.920, ratio=0.923, hyp_len=2874, ref_len=3113)\n'
Validation perplexity: 1130504.4819372771
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.41
Model saved checkpoint_commit_msg_generator!
Epoch 821 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.17095005251712792 Loss (std): 0.5018815193006273 Loss ratio: 2.935837175307931 Tokens per Sec: 2329.926983901489
Epoch Step: 10 / 67 Loss (mean): 0.08881392263629095 Loss (std): 0.1689882228022531 Loss ratio: 1.9027222060024347 Tokens per Sec: 3401.3178281665355
Epoch Step: 15 / 67 Loss (mean): 0.10052329031577756 Loss (std): 0.2962517700653194 Loss ratio: 2.947095833559493 Tokens per Sec: 2635.1627184020717
Epoch Step: 20 / 67 Loss (mean): 0.10001653266863286 Loss (std): 0.3880235060069723 Loss ratio: 3.879593659705662 Tokens per Sec: 2620.556082273836
Epoch Step: 25 / 67 Loss (mean): 0.15781912791771902 Loss (std): 0.3943772594893918 Loss ratio: 2.4989192672196574 Tokens per Sec: 2345.6610199212837
Epoch Step: 30 / 67 Loss (mean): 0.108238782315766 Loss (std): 0.2670431873107752 Loss ratio: 2.4671673276194817 Tokens per Sec: 3065.510684464927
Epoch Step: 35 / 67 Loss (mean): 0.1788236450029217 Loss (std): 0.7208435738170065 Loss ratio: 4.031030537405884 Tokens per Sec: 2698.565979466723
Epoch Step: 40 / 67 Loss (mean): 0.22451464594337267 Loss (std): 1.2120200386399027 Loss ratio: 5.398400774912473 Tokens per Sec: 2542.462009692036
Epoch Step: 45 / 67 Loss (mean): 0.45606240200504544 Loss (std): 1.0469637921145054 Loss ratio: 2.295659075406358 Tokens per Sec: 2753.115238580997
Epoch Step: 50 / 67 Loss (mean): 0.216529973948127 Loss (std): 0.6569396253969607 Loss ratio: 3.0339431230631395 Tokens per Sec: 3263.2989595861836
Epoch Step: 55 / 67 Loss (mean): 0.0779853018684662 Loss (std): 0.14817227577185463 Loss ratio: 1.9000025930754132 Tokens per Sec: 2773.8583557032744
Epoch Step: 60 / 67 Loss (mean): 0.13210697589602205 Loss (std): 0.46912547206965893 Loss ratio: 3.551102951890257 Tokens per Sec: 3169.3008372309846
Epoch Step: 65 / 67 Loss (mean): 0.39904901500949563 Loss (std): 1.0116621748457792 Loss ratio: 2.5351827389467583 Tokens per Sec: 3071.2658873147548
Mean loss per sample: 0.27996524182480537 Std loss per sample: 1.4372974749704037 ratio: 5.133842564177397
Epoch ended with duration 0:00:11.248033
Train perplexity: 1.0386057796971824
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily not active[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.78246930241585 Loss (std): 45.77051586169008 Loss ratio: 0.4541515620573599 Tokens per Sec: 4451.933767159683
Mean loss per sample: 104.16133458234492 Std loss per sample: 53.67419918928003 ratio: 0.5152986893312873
Epoch ended with duration 0:00:01.002265
b'BLEU = 2.49, 9.1/2.8/1.7/1.3 (BP=0.897, ratio=0.902, hyp_len=2808, ref_len=3113)\n'
Validation perplexity: 1350150.3864320093
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.49
Epoch 822 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1445864592600401 Loss (std): 0.4759889544269177 Loss ratio: 3.292071448895827 Tokens per Sec: 2276.0314310893486
Epoch Step: 10 / 67 Loss (mean): 0.17945669422624633 Loss (std): 0.5130778036221803 Loss ratio: 2.859061935997372 Tokens per Sec: 2802.636262523416
Epoch Step: 15 / 67 Loss (mean): 0.23377009352043387 Loss (std): 0.7476880104613385 Loss ratio: 3.1983903466932695 Tokens per Sec: 3114.719429293252
Epoch Step: 20 / 67 Loss (mean): 0.11457057852203434 Loss (std): 0.30820467218735464 Loss ratio: 2.690085676123913 Tokens per Sec: 2305.4188516960953
Epoch Step: 25 / 67 Loss (mean): 0.4049256253238127 Loss (std): 0.8952304870873043 Loss ratio: 2.2108516505257043 Tokens per Sec: 2683.4134452252138
Epoch Step: 30 / 67 Loss (mean): 0.5933917963884596 Loss (std): 4.158007108696657 Loss ratio: 7.007186708686224 Tokens per Sec: 2667.6004799098837
Epoch Step: 35 / 67 Loss (mean): 0.3471812526368012 Loss (std): 0.8564034311535252 Loss ratio: 2.466732937476436 Tokens per Sec: 2767.1731870494164
Epoch Step: 40 / 67 Loss (mean): 0.7566295201795583 Loss (std): 1.2352434997496304 Loss ratio: 1.632560542253877 Tokens per Sec: 3715.36280980697
Epoch Step: 45 / 67 Loss (mean): 2.492986723364993 Loss (std): 11.180844359184738 Loss ratio: 4.4849193356685895 Tokens per Sec: 3227.5755422170296
Epoch Step: 50 / 67 Loss (mean): 0.26073096846630506 Loss (std): 0.5789443636672897 Loss ratio: 2.220466433553359 Tokens per Sec: 2740.716670227879
Epoch Step: 55 / 67 Loss (mean): 0.10992507145329 Loss (std): 0.2953951387775016 Loss ratio: 2.6872408166049966 Tokens per Sec: 2591.5583632646935
Epoch Step: 60 / 67 Loss (mean): 0.44880671486589563 Loss (std): 1.1734584638656615 Loss ratio: 2.614618776852065 Tokens per Sec: 2879.3051544863565
Epoch Step: 65 / 67 Loss (mean): 0.10310359207505826 Loss (std): 0.24742438853867976 Loss ratio: 2.399764969959122 Tokens per Sec: 3187.3229029605395
Mean loss per sample: 0.30174184993294795 Std loss per sample: 2.2308277267770795 ratio: 7.393166467537753
Epoch ended with duration 0:00:11.270518
Train perplexity: 1.0416704079710355
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for non-admin[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.44730776548386 Loss (std): 43.95532991139147 Loss ratio: 0.4419961776647259 Tokens per Sec: 4442.556280185191
Mean loss per sample: 105.50285521763392 Std loss per sample: 53.5616922680114 ratio: 0.5076800258867213
Epoch ended with duration 0:00:01.015320
b'BLEU = 2.59, 8.8/2.9/1.8/1.4 (BP=0.910, ratio=0.914, hyp_len=2846, ref_len=3113)\n'
Validation perplexity: 1619335.7893396826
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.59
Epoch 823 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.14271276102272168 Loss (std): 0.41277213742221924 Loss ratio: 2.8923281594734243 Tokens per Sec: 2767.4065429676357
Epoch Step: 10 / 67 Loss (mean): 0.3479015665707266 Loss (std): 0.8694563678437045 Loss ratio: 2.4991447334197288 Tokens per Sec: 3558.21614824581
Epoch Step: 15 / 67 Loss (mean): 0.10816903220802487 Loss (std): 0.2781721846825777 Loss ratio: 2.571643463977859 Tokens per Sec: 2786.0274712404575
Epoch Step: 20 / 67 Loss (mean): 2.2272460732624495 Loss (std): 8.769884612681103 Loss ratio: 3.937546334893772 Tokens per Sec: 2348.8324406092133
Epoch Step: 25 / 67 Loss (mean): 0.21492855834549118 Loss (std): 0.6309641869176305 Loss ratio: 2.935692640265025 Tokens per Sec: 2333.9354292263697
Epoch Step: 30 / 67 Loss (mean): 0.18149917990058384 Loss (std): 0.4021193834531386 Loss ratio: 2.2155438039631883 Tokens per Sec: 3178.6687730266167
Epoch Step: 35 / 67 Loss (mean): 0.15649301393523274 Loss (std): 0.4214330004133443 Loss ratio: 2.692982835564541 Tokens per Sec: 3345.0132004556663
Epoch Step: 40 / 67 Loss (mean): 0.0647893721861692 Loss (std): 0.13353026337764068 Loss ratio: 2.060990234539513 Tokens per Sec: 3448.2530585747336
Epoch Step: 45 / 67 Loss (mean): 0.13625381618521715 Loss (std): 0.5525019760768721 Loss ratio: 4.054946801092356 Tokens per Sec: 2505.0232825363883
Epoch Step: 50 / 67 Loss (mean): 1.316301629562986 Loss (std): 7.731867037884129 Loss ratio: 5.873932588270912 Tokens per Sec: 2731.537385183183
Epoch Step: 55 / 67 Loss (mean): 2.0420136415214074 Loss (std): 8.378703831482019 Loss ratio: 4.103157619083996 Tokens per Sec: 2569.8766381761234
Epoch Step: 60 / 67 Loss (mean): 0.5336858045939152 Loss (std): 0.812456636954596 Loss ratio: 1.5223500980559137 Tokens per Sec: 2299.5406192109263
Epoch Step: 65 / 67 Loss (mean): 0.19124944394297927 Loss (std): 0.6812842400408933 Loss ratio: 3.5622808934493797 Tokens per Sec: 3025.027962867343
Mean loss per sample: 0.4174621233218738 Std loss per sample: 3.0316188028451236 ratio: 7.2620212313433505
Epoch ended with duration 0:00:11.334108
Train perplexity: 1.0581081042263925
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire into ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for non-admin[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.00547420978546 Loss (std): 44.16032354613776 Loss ratio: 0.44157906249712786 Tokens per Sec: 4192.908121992092
Mean loss per sample: 106.22416403822479 Std loss per sample: 54.15487825349216 ratio: 0.5098169399008357
Epoch ended with duration 0:00:01.037380
b'BLEU = 2.17, 7.9/2.4/1.5/1.2 (BP=0.900, ratio=0.905, hyp_len=2817, ref_len=3113)\n'
Validation perplexity: 1785621.124548316
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.17
Epoch 824 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.43963531058216176 Loss (std): 0.9007578586632705 Loss ratio: 2.048875140330502 Tokens per Sec: 2831.990264964237
Epoch Step: 10 / 67 Loss (mean): 0.19312698322301003 Loss (std): 0.7323445204344613 Loss ratio: 3.792036245855915 Tokens per Sec: 2303.49395236013
Epoch Step: 15 / 67 Loss (mean): 0.14206465558481796 Loss (std): 0.4602811298976332 Loss ratio: 3.2399411944009398 Tokens per Sec: 2783.3459159719055
Epoch Step: 20 / 67 Loss (mean): 0.11708085218651831 Loss (std): 0.616025623897357 Loss ratio: 5.261540315029339 Tokens per Sec: 2369.644993903579
Epoch Step: 25 / 67 Loss (mean): 0.04740496289105067 Loss (std): 0.08086578864692719 Loss ratio: 1.705850689784917 Tokens per Sec: 2427.2770624813884
Epoch Step: 30 / 67 Loss (mean): 1.0677800900484726 Loss (std): 1.461022466028858 Loss ratio: 1.3682803038241085 Tokens per Sec: 2951.767975096616
Epoch Step: 35 / 67 Loss (mean): 0.5264950492201024 Loss (std): 1.0644426754651013 Loss ratio: 2.0217524875910255 Tokens per Sec: 2588.0942373099224
Epoch Step: 40 / 67 Loss (mean): 0.14404237650160212 Loss (std): 0.6274228920671163 Loss ratio: 4.355821580464814 Tokens per Sec: 3184.8715161231394
Epoch Step: 45 / 67 Loss (mean): 0.06400761829763724 Loss (std): 0.13254269529087254 Loss ratio: 2.0707331223378014 Tokens per Sec: 3171.188681123571
Epoch Step: 50 / 67 Loss (mean): 4.237136761905276 Loss (std): 13.47897945880068 Loss ratio: 3.1811527963850064 Tokens per Sec: 3229.061711122601
Epoch Step: 55 / 67 Loss (mean): 0.4881966135899347 Loss (std): 0.730598793953376 Loss ratio: 1.4965257308545143 Tokens per Sec: 3403.9369644560697
Epoch Step: 60 / 67 Loss (mean): 0.1243155202989783 Loss (std): 0.35796651990088957 Loss ratio: 2.8794998326836554 Tokens per Sec: 3140.1903359149733
Epoch Step: 65 / 67 Loss (mean): 0.16695642967079038 Loss (std): 0.6120821734537766 Loss ratio: 3.666119206434267 Tokens per Sec: 2465.691927581533
Mean loss per sample: 0.34032240647870454 Std loss per sample: 2.2048785425434625 ratio: 6.478793345866374
Epoch ended with duration 0:00:11.276119
Train perplexity: 1.0471220795329454
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow call ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.69068348407745 Loss (std): 44.828428559195 Loss ratio: 0.4452092984976496 Tokens per Sec: 4463.287731130531
Mean loss per sample: 104.27536250348585 Std loss per sample: 53.446571541655985 ratio: 0.512552248762207
Epoch ended with duration 0:00:01.001803
b'BLEU = 2.27, 8.3/2.5/1.6/1.2 (BP=0.900, ratio=0.905, hyp_len=2816, ref_len=3113)\n'
Validation perplexity: 1371176.059727903
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.27
Epoch 825 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.17870427512389142 Loss (std): 0.41291716241030474 Loss ratio: 2.3106171473740016 Tokens per Sec: 2383.242972454431
Epoch Step: 10 / 67 Loss (mean): 0.3534094125052434 Loss (std): 0.6586757341885048 Loss ratio: 1.8637753010574734 Tokens per Sec: 2680.5662960441114
Epoch Step: 15 / 67 Loss (mean): 0.4409216201893287 Loss (std): 0.916288940956058 Loss ratio: 2.0781220493624466 Tokens per Sec: 2729.8925448344926
Epoch Step: 20 / 67 Loss (mean): 0.061269414462003624 Loss (std): 0.14376614641449206 Loss ratio: 2.3464586315517835 Tokens per Sec: 2650.685186072538
Epoch Step: 25 / 67 Loss (mean): 0.12127531765690946 Loss (std): 0.4448762605804376 Loss ratio: 3.6683165971084266 Tokens per Sec: 2260.4665274375284
Epoch Step: 30 / 67 Loss (mean): 0.18884912462317516 Loss (std): 0.7373030736741919 Loss ratio: 3.904191111001378 Tokens per Sec: 3042.2404728090596
Epoch Step: 35 / 67 Loss (mean): 0.060416233613977965 Loss (std): 0.1495460600117629 Loss ratio: 2.47526287334078 Tokens per Sec: 3156.6171364442325
Epoch Step: 40 / 67 Loss (mean): 0.2504907365910185 Loss (std): 0.7042799414372495 Loss ratio: 2.8116007442907645 Tokens per Sec: 2580.1079659524758
Epoch Step: 45 / 67 Loss (mean): 0.255185123784031 Loss (std): 1.0489793862230568 Loss ratio: 4.11066041259847 Tokens per Sec: 3001.3232552372515
Epoch Step: 50 / 67 Loss (mean): 0.3693551427550119 Loss (std): 1.5120038912543101 Loss ratio: 4.0936316196284865 Tokens per Sec: 3097.7370885926175
Epoch Step: 55 / 67 Loss (mean): 0.15894636770667603 Loss (std): 0.4499133025136571 Loss ratio: 2.8305982011739923 Tokens per Sec: 3290.5209057362663
Epoch Step: 60 / 67 Loss (mean): 0.11797366194605274 Loss (std): 0.3902516633412965 Loss ratio: 3.307955834411173 Tokens per Sec: 3131.8756325682566
Epoch Step: 65 / 67 Loss (mean): 0.060458787897005095 Loss (std): 0.10003470848942006 Loss ratio: 1.6545933514220421 Tokens per Sec: 3010.7334874449352
Mean loss per sample: 0.30312392602238286 Std loss per sample: 2.256919771181296 ratio: 7.445534903155892
Epoch ended with duration 0:00:11.253331
Train perplexity: 1.041865212821703
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to deprecated ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.71734371781349 Loss (std): 45.45879231955873 Loss ratio: 0.45135019095542933 Tokens per Sec: 4455.385876170977
Mean loss per sample: 104.03123366731967 Std loss per sample: 53.61485837440356 ratio: 0.5153727057189182
Epoch ended with duration 0:00:01.003846
b'BLEU = 2.60, 8.6/2.9/1.9/1.5 (BP=0.897, ratio=0.902, hyp_len=2808, ref_len=3113)\n'
Validation perplexity: 1326554.499966359
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.6
Model saved checkpoint_commit_msg_generator!
Epoch 826 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.115276494961563 Loss (std): 0.546577752703394 Loss ratio: 4.741450135915749 Tokens per Sec: 2666.024888402652
Epoch Step: 10 / 67 Loss (mean): 0.3672184848737743 Loss (std): 1.1315312710385104 Loss ratio: 3.0813570603001015 Tokens per Sec: 2698.101806526552
Epoch Step: 15 / 67 Loss (mean): 0.14886536661032324 Loss (std): 0.5020599763555559 Loss ratio: 3.3725774354875364 Tokens per Sec: 2744.628923397853
Epoch Step: 20 / 67 Loss (mean): 0.4499168083245877 Loss (std): 1.1608020157768204 Loss ratio: 2.5800370075068906 Tokens per Sec: 3537.1490274977664
Epoch Step: 25 / 67 Loss (mean): 0.21215637451359726 Loss (std): 1.3194116918206757 Loss ratio: 6.219052785218639 Tokens per Sec: 3009.4446981150604
Epoch Step: 30 / 67 Loss (mean): 0.03770958127552149 Loss (std): 0.05144910908256063 Loss ratio: 1.3643511103094088 Tokens per Sec: 2480.0986600184465
Epoch Step: 35 / 67 Loss (mean): 0.2947511575275712 Loss (std): 0.5532250818615652 Loss ratio: 1.8769225081323597 Tokens per Sec: 2824.432855381405
Epoch Step: 40 / 67 Loss (mean): 2.145393132137542 Loss (std): 8.056016245575886 Loss ratio: 3.755030313511515 Tokens per Sec: 2603.032661759922
Epoch Step: 45 / 67 Loss (mean): 0.1905581034949364 Loss (std): 0.5090965199799143 Loss ratio: 2.6716078227208127 Tokens per Sec: 2915.273376376402
Epoch Step: 50 / 67 Loss (mean): 0.14742122462848783 Loss (std): 0.4672179509010358 Loss ratio: 3.1692719422081783 Tokens per Sec: 2945.328489840083
Epoch Step: 55 / 67 Loss (mean): 0.13161860991817775 Loss (std): 0.5525763259730652 Loss ratio: 4.198314556859252 Tokens per Sec: 2383.0632585946883
Epoch Step: 60 / 67 Loss (mean): 0.08296095064360998 Loss (std): 0.18244528493909337 Loss ratio: 2.199170616099324 Tokens per Sec: 2459.277365292707
Epoch Step: 65 / 67 Loss (mean): 0.14094798623773386 Loss (std): 0.3311719657405739 Loss ratio: 2.3496040956696853 Tokens per Sec: 3642.883642309571
Mean loss per sample: 0.4360094579556405 Std loss per sample: 3.1440085987205926 ratio: 7.210872473872948
Epoch ended with duration 0:00:11.319372
Train perplexity: 1.060766707055977
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use gwt_binary ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.96572434902191 Loss (std): 45.89273497973371 Loss ratio: 0.45453776789725264 Tokens per Sec: 4453.130790988872
Mean loss per sample: 104.25904824810682 Std loss per sample: 53.66176974502236 ratio: 0.5146965241551279
Epoch ended with duration 0:00:01.005684
b'BLEU = 2.53, 8.8/2.8/1.7/1.3 (BP=0.935, ratio=0.937, hyp_len=2918, ref_len=3113)\n'
Validation perplexity: 1368147.9111358458
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.53
Epoch 827 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.275088328069387 Loss (std): 0.581738725042078 Loss ratio: 2.1147343077941967 Tokens per Sec: 2628.72427756223
Epoch Step: 10 / 67 Loss (mean): 0.6837687799925334 Loss (std): 1.1779127830096325 Loss ratio: 1.7226770473821502 Tokens per Sec: 2927.604604013932
Epoch Step: 15 / 67 Loss (mean): 0.19972481346940185 Loss (std): 0.6436273549070108 Loss ratio: 3.222570814945913 Tokens per Sec: 2836.1995879936526
Epoch Step: 20 / 67 Loss (mean): 0.1014469134133833 Loss (std): 0.2185347439566908 Loss ratio: 2.154178344157101 Tokens per Sec: 2907.4002083332116
Epoch Step: 25 / 67 Loss (mean): 2.453920874583673 Loss (std): 8.774207690378045 Loss ratio: 3.575587045717869 Tokens per Sec: 2685.749986827283
Epoch Step: 30 / 67 Loss (mean): 0.4147100051159214 Loss (std): 0.9154786118347901 Loss ratio: 2.207515132360725 Tokens per Sec: 3409.3229743592224
Epoch Step: 35 / 67 Loss (mean): 0.04285195118518459 Loss (std): 0.07665721495992169 Loss ratio: 1.7888850528333644 Tokens per Sec: 2376.5587694210703
Epoch Step: 40 / 67 Loss (mean): 0.18064101814911737 Loss (std): 0.46817992470918096 Loss ratio: 2.5917697403737123 Tokens per Sec: 2539.743800809069
Epoch Step: 45 / 67 Loss (mean): 0.305039580517132 Loss (std): 0.7161086530624206 Loss ratio: 2.347592570932616 Tokens per Sec: 3082.4633418099856
Epoch Step: 50 / 67 Loss (mean): 0.2063747667843927 Loss (std): 0.39788433143800006 Loss ratio: 1.9279698658784405 Tokens per Sec: 3089.4504264359507
Epoch Step: 55 / 67 Loss (mean): 0.2004181793981843 Loss (std): 0.4591380401291565 Loss ratio: 2.290900164385567 Tokens per Sec: 2769.573618612775
Epoch Step: 60 / 67 Loss (mean): 0.388193871558542 Loss (std): 1.0769686159216005 Loss ratio: 2.774306074430614 Tokens per Sec: 2679.4131096569167
Epoch Step: 65 / 67 Loss (mean): 11.259330771867553 Loss (std): 17.04142802189551 Loss ratio: 1.5135382703628393 Tokens per Sec: 3017.103489229672
Mean loss per sample: 0.4385809684987671 Std loss per sample: 2.9521591594981564 ratio: 6.731161111717175
Epoch ended with duration 0:00:11.242349
Train perplexity: 1.0611358381444473
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.94881674647331 Loss (std): 45.39748879903448 Loss ratio: 0.44970798333424206 Tokens per Sec: 4452.833456783089
Mean loss per sample: 103.90246869764123 Std loss per sample: 54.09597847918683 ratio: 0.5206418977070456
Epoch ended with duration 0:00:01.004221
b'BLEU = 2.60, 9.4/3.0/1.8/1.4 (BP=0.882, ratio=0.889, hyp_len=2766, ref_len=3113)\n'
Validation perplexity: 1303606.9762585096
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.6
Epoch 828 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.11567675721062187 Loss (std): 0.19459603205116865 Loss ratio: 1.6822396887980893 Tokens per Sec: 2689.4783536931964
Epoch Step: 10 / 67 Loss (mean): 0.12132583142579279 Loss (std): 0.4641653415685694 Loss ratio: 3.8257750729074504 Tokens per Sec: 2244.754371189439
Epoch Step: 15 / 67 Loss (mean): 0.18284873805532698 Loss (std): 0.469497294917632 Loss ratio: 2.5676813518700357 Tokens per Sec: 2948.935866042929
Epoch Step: 20 / 67 Loss (mean): 0.11538017037491954 Loss (std): 0.39973272054448294 Loss ratio: 3.4644837084707043 Tokens per Sec: 2954.838002076069
Epoch Step: 25 / 67 Loss (mean): 1.1881312697200883 Loss (std): 5.225279210601011 Loss ratio: 4.397897222107481 Tokens per Sec: 2812.63090694498
Epoch Step: 30 / 67 Loss (mean): 0.11140557317776256 Loss (std): 0.4033180084964921 Loss ratio: 3.620267792643946 Tokens per Sec: 3268.233539363916
Epoch Step: 35 / 67 Loss (mean): 0.07634378061084135 Loss (std): 0.17299709917024883 Loss ratio: 2.266027406372406 Tokens per Sec: 2487.296768201951
Epoch Step: 40 / 67 Loss (mean): 0.4026488052586501 Loss (std): 0.883870281371972 Loss ratio: 2.195139461060114 Tokens per Sec: 3175.1526275744054
Epoch Step: 45 / 67 Loss (mean): 0.19631766365819203 Loss (std): 0.359636643477623 Loss ratio: 1.8319117942631236 Tokens per Sec: 2553.9974782240497
Epoch Step: 50 / 67 Loss (mean): 0.18853062370476437 Loss (std): 0.5257774788564633 Loss ratio: 2.788817373668808 Tokens per Sec: 2775.6995609000073
Epoch Step: 55 / 67 Loss (mean): 0.1072352430137471 Loss (std): 0.2585121906799865 Loss ratio: 2.4107017750390733 Tokens per Sec: 2982.00524404747
Epoch Step: 60 / 67 Loss (mean): 0.089731019159899 Loss (std): 0.2619613601674698 Loss ratio: 2.919406941100931 Tokens per Sec: 2559.3010495026338
Epoch Step: 65 / 67 Loss (mean): 0.1971460957479394 Loss (std): 0.545850334635577 Loss ratio: 2.7687605608658488 Tokens per Sec: 2940.747145696366
Mean loss per sample: 0.3622563018621515 Std loss per sample: 2.146322441205843 ratio: 5.924872611388214
Epoch ended with duration 0:00:11.342465
Train perplexity: 1.0502341866846796
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print change time unit test[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.24934428930283 Loss (std): 44.73989876413785 Loss ratio: 0.44187840502256664 Tokens per Sec: 4470.814004781244
Mean loss per sample: 103.95889784988077 Std loss per sample: 53.061530238173134 ratio: 0.5104087416816914
Epoch ended with duration 0:00:01.001518
b'BLEU = 2.49, 8.5/2.7/1.7/1.3 (BP=0.928, ratio=0.931, hyp_len=2898, ref_len=3113)\n'
Validation perplexity: 1313614.0827265806
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.49
Epoch 829 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.12031739151279908 Loss (std): 0.2957134259282262 Loss ratio: 2.45777790068503 Tokens per Sec: 2482.802406295239
Epoch Step: 10 / 67 Loss (mean): 0.7260093942268213 Loss (std): 1.2746809350535924 Loss ratio: 1.7557361450000109 Tokens per Sec: 3143.006964933333
Epoch Step: 15 / 67 Loss (mean): 0.20003152567323923 Loss (std): 0.5680715167107497 Loss ratio: 2.8399099331908357 Tokens per Sec: 2607.531316996362
Epoch Step: 20 / 67 Loss (mean): 0.13591431405893672 Loss (std): 0.5459712575378143 Loss ratio: 4.017025442228726 Tokens per Sec: 2854.65315158887
Epoch Step: 25 / 67 Loss (mean): 0.1480182671939474 Loss (std): 0.3232229976567215 Loss ratio: 2.1836696495926713 Tokens per Sec: 2849.7504342447814
Epoch Step: 30 / 67 Loss (mean): 0.10620409616785764 Loss (std): 0.28787394762446156 Loss ratio: 2.710572925261481 Tokens per Sec: 2999.0802813244295
Epoch Step: 35 / 67 Loss (mean): 0.3461705608287957 Loss (std): 0.8776248314136881 Loss ratio: 2.535238205445586 Tokens per Sec: 2203.962889887964
Epoch Step: 40 / 67 Loss (mean): 0.11502888932409405 Loss (std): 0.2911018594400981 Loss ratio: 2.5306847797158 Tokens per Sec: 2327.717289389216
Epoch Step: 45 / 67 Loss (mean): 0.21988061761737754 Loss (std): 0.904682666094692 Loss ratio: 4.114426618852617 Tokens per Sec: 3107.275782920849
Epoch Step: 50 / 67 Loss (mean): 0.06645280945338072 Loss (std): 0.10578658737739367 Loss ratio: 1.5919054175069476 Tokens per Sec: 2998.2592696192696
Epoch Step: 55 / 67 Loss (mean): 1.420558985451862 Loss (std): 6.463341512069314 Loss ratio: 4.549857892745936 Tokens per Sec: 2726.3931798099625
Epoch Step: 60 / 67 Loss (mean): 0.40681817840049916 Loss (std): 0.8376908523973023 Loss ratio: 2.0591283695602787 Tokens per Sec: 3276.804565320672
Epoch Step: 65 / 67 Loss (mean): 0.04797494446984274 Loss (std): 0.08049355612767148 Loss ratio: 1.6778248941647047 Tokens per Sec: 3060.2638387025077
Mean loss per sample: 0.30371991171765256 Std loss per sample: 1.7841732689450946 ratio: 5.874403356878746
Epoch ended with duration 0:00:11.310884
Train perplexity: 1.0419492287758667
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock to apache-sshd 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.5794675052166 Loss (std): 45.55460011840357 Loss ratio: 0.45292146845021686 Tokens per Sec: 4357.303697521671
Mean loss per sample: 106.59824934705604 Std loss per sample: 54.74601104998477 ratio: 0.5135732658399114
Epoch ended with duration 0:00:01.017161
b'BLEU = 2.73, 8.3/3.0/2.1/1.7 (BP=0.898, ratio=0.903, hyp_len=2811, ref_len=3113)\n'
Validation perplexity: 1878477.4533533328
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.73
Epoch 830 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.7452479192224928 Loss (std): 3.5464116939876846 Loss ratio: 4.758700564622319 Tokens per Sec: 2343.879358889917
Epoch Step: 10 / 67 Loss (mean): 0.08462821366583739 Loss (std): 0.18450196017693776 Loss ratio: 2.1801471658785263 Tokens per Sec: 3109.9967578199294
Epoch Step: 15 / 67 Loss (mean): 0.11210091194971028 Loss (std): 0.3654371440558717 Loss ratio: 3.259894479893356 Tokens per Sec: 3292.8144829204953
Epoch Step: 20 / 67 Loss (mean): 0.15722706659335017 Loss (std): 0.5070612944448978 Loss ratio: 3.2250254706866333 Tokens per Sec: 2617.7222573523645
Epoch Step: 25 / 67 Loss (mean): 0.2863690221845445 Loss (std): 1.0670384544527938 Loss ratio: 3.7260959523937727 Tokens per Sec: 2538.9487365342798
Epoch Step: 30 / 67 Loss (mean): 0.07024460820866807 Loss (std): 0.1147334671806666 Loss ratio: 1.633341976082211 Tokens per Sec: 2857.408037667423
Epoch Step: 35 / 67 Loss (mean): 0.12362197458787705 Loss (std): 0.2524551173202408 Loss ratio: 2.0421540600840533 Tokens per Sec: 3042.3774396159747
Epoch Step: 40 / 67 Loss (mean): 0.12105382500340056 Loss (std): 0.4000830519757461 Loss ratio: 3.3050013245306973 Tokens per Sec: 2635.1730360749707
Epoch Step: 45 / 67 Loss (mean): 0.05981708038234501 Loss (std): 0.23524820802420315 Loss ratio: 3.9327932175980385 Tokens per Sec: 2730.5054597327935
Epoch Step: 50 / 67 Loss (mean): 0.07317512412726046 Loss (std): 0.21775689815640248 Loss ratio: 2.9758323030337017 Tokens per Sec: 2941.3583155497085
Epoch Step: 55 / 67 Loss (mean): 0.3878219043122044 Loss (std): 1.0033673654398796 Loss ratio: 2.5871859074575343 Tokens per Sec: 2720.478224299744
Epoch Step: 60 / 67 Loss (mean): 0.29824501817165583 Loss (std): 0.6445869147219332 Loss ratio: 2.1612663261685707 Tokens per Sec: 2509.1950253161112
Epoch Step: 65 / 67 Loss (mean): 0.12051341041842534 Loss (std): 0.32435909861363643 Loss ratio: 2.691477218074355 Tokens per Sec: 2909.526876540236
Mean loss per sample: 0.3673628352999903 Std loss per sample: 2.6091106558064423 ratio: 7.102271664676776
Epoch ended with duration 0:00:11.309320
Train perplexity: 1.0509600573572266
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.62089452147484 Loss (std): 44.700583796216485 Loss ratio: 0.4442475293903926 Tokens per Sec: 4448.975679526933
Mean loss per sample: 104.04022718758368 Std loss per sample: 53.92636729552077 ratio: 0.5183222754626629
Epoch ended with duration 0:00:01.002777
b'BLEU = 2.85, 9.1/3.2/2.2/1.7 (BP=0.881, ratio=0.887, hyp_len=2762, ref_len=3113)\n'
Validation perplexity: 1328172.2678059402
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.85
Model saved checkpoint_commit_msg_generator!
Epoch 831 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2003950677544708 Loss (std): 0.35279851268733486 Loss ratio: 1.760514949996637 Tokens per Sec: 2737.8455380876603
Epoch Step: 10 / 67 Loss (mean): 0.048857980566026527 Loss (std): 0.09523808610345746 Loss ratio: 1.9492841292274248 Tokens per Sec: 2602.2182756297516
Epoch Step: 15 / 67 Loss (mean): 0.061316749421166605 Loss (std): 0.12296153171607475 Loss ratio: 2.0053498086059385 Tokens per Sec: 2448.4543647956925
Epoch Step: 20 / 67 Loss (mean): 0.4506618961731874 Loss (std): 1.01855087301059 Loss ratio: 2.2601220153282395 Tokens per Sec: 3212.0913640404415
Epoch Step: 25 / 67 Loss (mean): 0.14221890309181617 Loss (std): 0.5044743947871149 Loss ratio: 3.547168370869992 Tokens per Sec: 3322.782815557341
Epoch Step: 30 / 67 Loss (mean): 0.9927415872443817 Loss (std): 1.2466743177181265 Loss ratio: 1.2557893551922235 Tokens per Sec: 3002.932536159036
Epoch Step: 35 / 67 Loss (mean): 0.21683762355723957 Loss (std): 0.4631856596240874 Loss ratio: 2.1360945209852766 Tokens per Sec: 3037.233614232487
Epoch Step: 40 / 67 Loss (mean): 0.2282657608284353 Loss (std): 0.6351186333857813 Loss ratio: 2.7823648675157067 Tokens per Sec: 2394.3417065673857
Epoch Step: 45 / 67 Loss (mean): 0.15413023974906537 Loss (std): 0.4626646451344999 Loss ratio: 3.0017772364965483 Tokens per Sec: 2497.5056230559717
Epoch Step: 50 / 67 Loss (mean): 0.3989399733945902 Loss (std): 0.9496541556084416 Loss ratio: 2.380443723219337 Tokens per Sec: 2911.3300148017806
Epoch Step: 55 / 67 Loss (mean): 0.08859169960305735 Loss (std): 0.222766382327784 Loss ratio: 2.514528825227507 Tokens per Sec: 3006.641589985957
Epoch Step: 60 / 67 Loss (mean): 0.1907541806322115 Loss (std): 0.6077870609029006 Loss ratio: 3.1862319289072887 Tokens per Sec: 2762.611570180163
Epoch Step: 65 / 67 Loss (mean): 0.3094035596127469 Loss (std): 0.8193626404526093 Loss ratio: 2.6482004327233115 Tokens per Sec: 2570.351898379363
Mean loss per sample: 0.5523730975765142 Std loss per sample: 3.815291854945271 ratio: 6.907092093522495
Epoch ended with duration 0:00:11.346751
Train perplexity: 1.0775995434396868
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the print error codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.78553980588913 Loss (std): 45.129632356573815 Loss ratio: 0.4477788425154299 Tokens per Sec: 4305.855444961545
Mean loss per sample: 106.3057159577481 Std loss per sample: 54.44019872881145 ratio: 0.5121097980323942
Epoch ended with duration 0:00:01.022556
b'BLEU = 2.58, 8.5/2.7/1.8/1.3 (BP=0.950, ratio=0.951, hyp_len=2962, ref_len=3113)\n'
Validation perplexity: 1805464.8070529758
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.58
Epoch 832 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.32800602894894837 Loss (std): 0.9180782660921227 Loss ratio: 2.7989676562774846 Tokens per Sec: 2484.896293773354
Epoch Step: 10 / 67 Loss (mean): 0.06619008515554015 Loss (std): 0.10579227169199802 Loss ratio: 1.5983099499478912 Tokens per Sec: 3156.4263744484506
Epoch Step: 15 / 67 Loss (mean): 0.1408044560093913 Loss (std): 0.28403531178372055 Loss ratio: 2.0172324075082972 Tokens per Sec: 2673.956167168005
Epoch Step: 20 / 67 Loss (mean): 0.10280054992836085 Loss (std): 0.2889381352471243 Loss ratio: 2.8106672138279234 Tokens per Sec: 2989.120637971343
Epoch Step: 25 / 67 Loss (mean): 0.267899560167848 Loss (std): 1.5520486272218663 Loss ratio: 5.793397444361074 Tokens per Sec: 2515.68673635689
Epoch Step: 30 / 67 Loss (mean): 0.14744776175894003 Loss (std): 0.27922715437744383 Loss ratio: 1.8937361343873622 Tokens per Sec: 2448.6291574608726
Epoch Step: 35 / 67 Loss (mean): 0.5152486715187479 Loss (std): 1.7178176436036705 Loss ratio: 3.3339584137892646 Tokens per Sec: 2563.0831303207565
Epoch Step: 40 / 67 Loss (mean): 0.24779057778232527 Loss (std): 0.5335090473238275 Loss ratio: 2.1530643017124533 Tokens per Sec: 2817.132664497889
Epoch Step: 45 / 67 Loss (mean): 0.46029680900301173 Loss (std): 1.1092524770108485 Loss ratio: 2.409863495281347 Tokens per Sec: 3006.390945502034
Epoch Step: 50 / 67 Loss (mean): 0.3479198190580064 Loss (std): 1.2097094278533915 Loss ratio: 3.4769776298708197 Tokens per Sec: 2994.3158762119715
Epoch Step: 55 / 67 Loss (mean): 0.12780834726163448 Loss (std): 0.30857861158140837 Loss ratio: 2.4143854309431125 Tokens per Sec: 3101.618413264437
Epoch Step: 60 / 67 Loss (mean): 0.1343161156030419 Loss (std): 0.2917096785190074 Loss ratio: 2.1718144335049616 Tokens per Sec: 2809.3111764919126
Epoch Step: 65 / 67 Loss (mean): 0.1531752339724335 Loss (std): 0.4535353354887631 Loss ratio: 2.960892069343172 Tokens per Sec: 3269.1325868363783
Mean loss per sample: 0.5573362235329449 Std loss per sample: 3.738554834059252 ratio: 6.707898529115184
Epoch ended with duration 0:00:11.297720
Train perplexity: 1.0783234048101795
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings on method_1 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.32490506768227 Loss (std): 45.59150494728667 Loss ratio: 0.45443855557629725 Tokens per Sec: 4325.470024564606
Mean loss per sample: 105.85484344206873 Std loss per sample: 54.477745004564156 ratio: 0.5146457472621764
Epoch ended with duration 0:00:01.020477
b'BLEU = 2.43, 8.3/2.7/1.8/1.4 (BP=0.891, ratio=0.896, hyp_len=2790, ref_len=3113)\n'
Validation perplexity: 1698451.1842573218
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.43
Epoch 833 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.27935516092111357 Loss (std): 0.7234699607637376 Loss ratio: 2.5897855560579264 Tokens per Sec: 3158.421953147354
Epoch Step: 10 / 67 Loss (mean): 8.612127051570496 Loss (std): 15.029153689457686 Loss ratio: 1.7451151846066866 Tokens per Sec: 3054.7230963125585
Epoch Step: 15 / 67 Loss (mean): 0.11736730074972002 Loss (std): 0.40868425259454266 Loss ratio: 3.4820963759407033 Tokens per Sec: 2476.497772419289
Epoch Step: 20 / 67 Loss (mean): 0.10110005906972219 Loss (std): 0.26165586839660804 Loss ratio: 2.5880881851528974 Tokens per Sec: 2836.3106932552305
Epoch Step: 25 / 67 Loss (mean): 0.3671502159411375 Loss (std): 2.1183602210679626 Loss ratio: 5.769737096947762 Tokens per Sec: 2404.2701563598334
Epoch Step: 30 / 67 Loss (mean): 0.601721229042596 Loss (std): 1.2208456675670512 Loss ratio: 2.0289223790717 Tokens per Sec: 3070.9337524990638
Epoch Step: 35 / 67 Loss (mean): 0.15582477250836746 Loss (std): 0.34917249644697174 Loss ratio: 2.2408022217919292 Tokens per Sec: 2514.4081071387395
Epoch Step: 40 / 67 Loss (mean): 0.185532305171364 Loss (std): 0.5487187169013527 Loss ratio: 2.957537321570695 Tokens per Sec: 2663.0052019353807
Epoch Step: 45 / 67 Loss (mean): 0.2712612757622992 Loss (std): 0.7736353219393675 Loss ratio: 2.851993229646566 Tokens per Sec: 2845.0762241292277
Epoch Step: 50 / 67 Loss (mean): 0.261476964294161 Loss (std): 0.7411222010108715 Loss ratio: 2.834368996945791 Tokens per Sec: 2898.5689491050957
Epoch Step: 55 / 67 Loss (mean): 0.133501119000357 Loss (std): 0.30809549551337584 Loss ratio: 2.3078120829275743 Tokens per Sec: 2630.873585131618
Epoch Step: 60 / 67 Loss (mean): 0.6673246941390971 Loss (std): 1.3205512897002278 Loss ratio: 1.9788737046571399 Tokens per Sec: 3166.9796081037894
Epoch Step: 65 / 67 Loss (mean): 0.18706325248194844 Loss (std): 0.6361623790369101 Loss ratio: 3.4007875443002873 Tokens per Sec: 2637.74746207594
Mean loss per sample: 0.5734027307247422 Std loss per sample: 4.020726742683049 ratio: 7.012046729531829
Epoch ended with duration 0:00:11.287685
Train perplexity: 1.080670007172663
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.12556552886963 Loss (std): 45.125603354484355 Loss ratio: 0.45069012210945364 Tokens per Sec: 4438.576448789215
Mean loss per sample: 103.49934505292627 Std loss per sample: 52.940704575041366 ratio: 0.5115076288450827
Epoch ended with duration 0:00:01.004519
b'BLEU = 2.75, 8.5/2.9/1.9/1.5 (BP=0.952, ratio=0.953, hyp_len=2968, ref_len=3113)\n'
Validation perplexity: 1234300.6631243455
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.75
Epoch 834 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.4516389439268096 Loss (std): 0.9343815858822594 Loss ratio: 2.0688685031414846 Tokens per Sec: 2662.0972538174706
Epoch Step: 10 / 67 Loss (mean): 0.060051856586824215 Loss (std): 0.1859081320557729 Loss ratio: 3.095793246408345 Tokens per Sec: 2534.223804736314
Epoch Step: 15 / 67 Loss (mean): 0.31257494516466977 Loss (std): 0.8383393419965569 Loss ratio: 2.682042674773263 Tokens per Sec: 3001.562565936448
Epoch Step: 20 / 67 Loss (mean): 0.18465240246143821 Loss (std): 0.7898751749666991 Loss ratio: 4.277632808658703 Tokens per Sec: 2148.4771737401434
Epoch Step: 25 / 67 Loss (mean): 0.15667895161266188 Loss (std): 0.6435761638148583 Loss ratio: 4.107610864067387 Tokens per Sec: 2676.4821183116464
Epoch Step: 30 / 67 Loss (mean): 0.10048345605810027 Loss (std): 0.23768065306736688 Loss ratio: 2.3653710012714746 Tokens per Sec: 2853.8491468128223
Epoch Step: 35 / 67 Loss (mean): 0.5270741541098687 Loss (std): 1.077727472756334 Loss ratio: 2.0447359529066977 Tokens per Sec: 2980.925409503181
Epoch Step: 40 / 67 Loss (mean): 0.36559795923494676 Loss (std): 0.8303331795539995 Loss ratio: 2.2711647004035838 Tokens per Sec: 3312.357885516861
Epoch Step: 45 / 67 Loss (mean): 0.12164713493984891 Loss (std): 0.4797948840614176 Loss ratio: 3.94415276856839 Tokens per Sec: 3226.444474096402
Epoch Step: 50 / 67 Loss (mean): 0.18181952277950586 Loss (std): 0.5419617797927119 Loss ratio: 2.980767804841033 Tokens per Sec: 2564.257695262406
Epoch Step: 55 / 67 Loss (mean): 0.4441399173783793 Loss (std): 1.0576018721602842 Loss ratio: 2.381235801553216 Tokens per Sec: 3393.2631849142394
Epoch Step: 60 / 67 Loss (mean): 0.6324218828244739 Loss (std): 3.914948244481128 Loss ratio: 6.190406041923294 Tokens per Sec: 2625.7794531820537
Epoch Step: 65 / 67 Loss (mean): 0.16535547911189497 Loss (std): 0.5192209783803403 Loss ratio: 3.1400288709452857 Tokens per Sec: 3006.774561870999
Mean loss per sample: 0.33473746725268066 Std loss per sample: 2.354015622630472 ratio: 7.032423474882525
Epoch ended with duration 0:00:11.335408
Train perplexity: 1.0463311303637963
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: use method_3 instead of method_4[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.50082898139954 Loss (std): 45.26401507309906 Loss ratio: 0.45038449465403335 Tokens per Sec: 4311.827978865463
Mean loss per sample: 106.01287111697994 Std loss per sample: 55.679990209972686 ratio: 0.5252191514418337
Epoch ended with duration 0:00:01.021032
b'BLEU = 2.87, 9.0/3.0/2.0/1.7 (BP=0.927, ratio=0.929, hyp_len=2893, ref_len=3113)\n'
Validation perplexity: 1735216.7754156913
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.87
Epoch 835 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.07982227535740094 Loss (std): 0.12208869218132523 Loss ratio: 1.5295065398058143 Tokens per Sec: 2317.7151338497397
Epoch Step: 10 / 67 Loss (mean): 0.3451157385807164 Loss (std): 0.6614781671889762 Loss ratio: 1.9166850225645917 Tokens per Sec: 3464.4691950979045
Epoch Step: 15 / 67 Loss (mean): 0.2299251740478212 Loss (std): 0.4543957582452822 Loss ratio: 1.9762766740399391 Tokens per Sec: 2865.515100929624
Epoch Step: 20 / 67 Loss (mean): 0.1304149118445821 Loss (std): 0.33143573432059426 Loss ratio: 2.5413944589064514 Tokens per Sec: 2471.055175786747
Epoch Step: 25 / 67 Loss (mean): 0.0718185742841797 Loss (std): 0.2099535797523708 Loss ratio: 2.9233882995449503 Tokens per Sec: 2706.1519982743976
Epoch Step: 30 / 67 Loss (mean): 0.10239040196029237 Loss (std): 0.30979147093001347 Loss ratio: 3.0255909245297476 Tokens per Sec: 2698.192072583744
Epoch Step: 35 / 67 Loss (mean): 0.11661331739423986 Loss (std): 0.3593756246810254 Loss ratio: 3.0817717282329613 Tokens per Sec: 2599.103775132298
Epoch Step: 40 / 67 Loss (mean): 0.15907108346732457 Loss (std): 0.3245389118584316 Loss ratio: 2.040213122236616 Tokens per Sec: 3220.5486637070953
Epoch Step: 45 / 67 Loss (mean): 0.054922366041864734 Loss (std): 0.07567755248804628 Loss ratio: 1.3779004427879316 Tokens per Sec: 3437.2411629740805
Epoch Step: 50 / 67 Loss (mean): 0.42218307407983957 Loss (std): 1.3729070567198634 Loss ratio: 3.2519234924615454 Tokens per Sec: 3234.0984159916443
Epoch Step: 55 / 67 Loss (mean): 0.17013054520566584 Loss (std): 0.4921013500118964 Loss ratio: 2.8924926409717284 Tokens per Sec: 2881.7326617044755
Epoch Step: 60 / 67 Loss (mean): 0.09373562152813975 Loss (std): 0.3181592291314635 Loss ratio: 3.3942190166835458 Tokens per Sec: 2698.413541898048
Epoch Step: 65 / 67 Loss (mean): 0.1741067808554817 Loss (std): 0.7081312248338937 Loss ratio: 4.06722369659848 Tokens per Sec: 2579.963208535027
Mean loss per sample: 0.40782982612252533 Std loss per sample: 3.1457737673797403 ratio: 7.71344704552003
Epoch ended with duration 0:00:11.216894
Train perplexity: 1.0567300261318622
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily not immutable[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 119.88034753501415 Loss (std): 46.607113882598604 Loss ratio: 0.3887802700020184 Tokens per Sec: 4361.241727368959
Mean loss per sample: 105.6847882193101 Std loss per sample: 53.79435105101424 ratio: 0.5090075114630854
Epoch ended with duration 0:00:01.016617
b'BLEU = 2.34, 8.5/2.7/1.6/1.2 (BP=0.897, ratio=0.902, hyp_len=2809, ref_len=3113)\n'
Validation perplexity: 1659757.0546593908
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.34
Model saved checkpoint_commit_msg_generator!
Epoch 836 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.20015691744083597 Loss (std): 0.5888014327181266 Loss ratio: 2.941699144083638 Tokens per Sec: 3328.1291660184193
Epoch Step: 10 / 67 Loss (mean): 0.1259395826527907 Loss (std): 0.42855189225911366 Loss ratio: 3.4028371639170056 Tokens per Sec: 2963.1985867987337
Epoch Step: 15 / 67 Loss (mean): 0.3058613122366296 Loss (std): 0.7470626953852579 Loss ratio: 2.442488361546337 Tokens per Sec: 2567.8295711422497
Epoch Step: 20 / 67 Loss (mean): 0.31387046541385644 Loss (std): 0.9875196573145755 Loss ratio: 3.146264991873235 Tokens per Sec: 2697.1555906974
Epoch Step: 25 / 67 Loss (mean): 0.18237509359846626 Loss (std): 0.5649648319461251 Loss ratio: 3.0978179136127193 Tokens per Sec: 2892.381435636284
Epoch Step: 30 / 67 Loss (mean): 0.10655515615781042 Loss (std): 0.18475867834380988 Loss ratio: 1.7339252740634945 Tokens per Sec: 3161.839999848347
Epoch Step: 35 / 67 Loss (mean): 0.1674666824369524 Loss (std): 0.37933598381611716 Loss ratio: 2.2651430021546464 Tokens per Sec: 3412.2056402475837
Epoch Step: 40 / 67 Loss (mean): 1.5518043112981559 Loss (std): 6.635877064690896 Loss ratio: 4.276233167015549 Tokens per Sec: 2501.5710949040963
Epoch Step: 45 / 67 Loss (mean): 0.2309134177598935 Loss (std): 0.5148743344202138 Loss ratio: 2.229728958217518 Tokens per Sec: 2958.985398442086
Epoch Step: 50 / 67 Loss (mean): 0.26791297932959424 Loss (std): 0.698157060816168 Loss ratio: 2.6059098090849684 Tokens per Sec: 2572.84677436629
Epoch Step: 55 / 67 Loss (mean): 0.3672935661888914 Loss (std): 1.0201140918791736 Loss ratio: 2.7773807814388727 Tokens per Sec: 2564.7866223780534
Epoch Step: 60 / 67 Loss (mean): 0.1968996404389145 Loss (std): 0.6616252275345705 Loss ratio: 3.3602155192346883 Tokens per Sec: 2734.778723648134
Epoch Step: 65 / 67 Loss (mean): 0.23052643592291133 Loss (std): 0.47146921089204313 Loss ratio: 2.0451850088451624 Tokens per Sec: 2532.5208302719807
Mean loss per sample: 0.34557826119496643 Std loss per sample: 2.021011136880788 ratio: 5.848201012101815
Epoch ended with duration 0:00:11.238682
Train perplexity: 1.0478669692436646
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.02808293700218 Loss (std): 44.53630642534097 Loss ratio: 0.44523802833840165 Tokens per Sec: 4192.147285233132
Mean loss per sample: 110.18055946593645 Std loss per sample: 53.69496771680716 ratio: 0.48733613240916207
Epoch ended with duration 0:00:01.051836
b'BLEU = 2.37, 8.5/2.7/1.6/1.2 (BP=0.930, ratio=0.932, hyp_len=2901, ref_len=3113)\n'
Validation perplexity: 3052401.8417998813
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.37
Epoch 837 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.12704272395728822 Loss (std): 0.7475594367842104 Loss ratio: 5.884315240560648 Tokens per Sec: 2929.7182593447174
Epoch Step: 10 / 67 Loss (mean): 0.23396588423929643 Loss (std): 0.648375768124829 Loss ratio: 2.771240645758768 Tokens per Sec: 3149.16625248731
Epoch Step: 15 / 67 Loss (mean): 0.08652311608636865 Loss (std): 0.21128707524882792 Loss ratio: 2.4419725595402513 Tokens per Sec: 3219.198613386941
Epoch Step: 20 / 67 Loss (mean): 0.08826462481920316 Loss (std): 0.17368111559092209 Loss ratio: 1.9677318738586584 Tokens per Sec: 2681.7902360448074
Epoch Step: 25 / 67 Loss (mean): 0.4321688883087518 Loss (std): 1.2913440796791493 Loss ratio: 2.9880542413237814 Tokens per Sec: 3490.9510364542375
Epoch Step: 30 / 67 Loss (mean): 0.20319641916557885 Loss (std): 0.7829356875577634 Loss ratio: 3.8530978585787574 Tokens per Sec: 2307.997751520326
Epoch Step: 35 / 67 Loss (mean): 0.27225359425574425 Loss (std): 0.5607721605882668 Loss ratio: 2.059741992098366 Tokens per Sec: 2911.3250549096842
Epoch Step: 40 / 67 Loss (mean): 0.10101517342991428 Loss (std): 0.28943822169162303 Loss ratio: 2.86529450837838 Tokens per Sec: 2467.006983004313
Epoch Step: 45 / 67 Loss (mean): 0.10623141634664535 Loss (std): 0.2554913925626052 Loss ratio: 2.4050455255995775 Tokens per Sec: 2259.169711758536
Epoch Step: 50 / 67 Loss (mean): 0.3905707869660091 Loss (std): 1.1800939705291924 Loss ratio: 3.021459898975738 Tokens per Sec: 2873.8429444673457
Epoch Step: 55 / 67 Loss (mean): 2.025073136373976 Loss (std): 8.240544325076085 Loss ratio: 4.069257636705068 Tokens per Sec: 2682.9705850317746
Epoch Step: 60 / 67 Loss (mean): 0.1707933506363588 Loss (std): 0.4492738661902723 Loss ratio: 2.630511460290012 Tokens per Sec: 3561.005185758811
Epoch Step: 65 / 67 Loss (mean): 0.8270543851995171 Loss (std): 6.047056867581694 Loss ratio: 7.311558920182635 Tokens per Sec: 2306.410962783961
Mean loss per sample: 0.3365025155959665 Std loss per sample: 2.3288008550984554 ratio: 6.920604593323788
Epoch ended with duration 0:00:11.268766
Train perplexity: 1.046581035101701
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint method_1 0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.57010585069656 Loss (std): 44.66071742313733 Loss ratio: 0.44407547397274616 Tokens per Sec: 4429.0668264128435
Mean loss per sample: 104.37452640289777 Std loss per sample: 53.84297055566647 ratio: 0.5158631364498495
Epoch ended with duration 0:00:01.006974
b'BLEU = 2.61, 8.7/2.7/1.8/1.4 (BP=0.926, ratio=0.929, hyp_len=2892, ref_len=3113)\n'
Validation perplexity: 1389726.9568334008
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.61
Epoch 838 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.16209227623460265 Loss (std): 0.5036958570715879 Loss ratio: 3.107463654483874 Tokens per Sec: 2913.125408176544
Epoch Step: 10 / 67 Loss (mean): 1.844046330821584 Loss (std): 6.188283996603978 Loss ratio: 3.3558180687612613 Tokens per Sec: 2523.3831953453036
Epoch Step: 15 / 67 Loss (mean): 0.1214712035134653 Loss (std): 0.3790932864597309 Loss ratio: 3.120849020135935 Tokens per Sec: 2752.500743539792
Epoch Step: 20 / 67 Loss (mean): 0.3644544621647583 Loss (std): 1.1355817242493285 Loss ratio: 3.115839815773659 Tokens per Sec: 3062.242277398175
Epoch Step: 25 / 67 Loss (mean): 0.08723685610493703 Loss (std): 0.17915802946365705 Loss ratio: 2.053696539088344 Tokens per Sec: 3047.2629060022186
Epoch Step: 30 / 67 Loss (mean): 0.26028256351855816 Loss (std): 0.7060763625585507 Loss ratio: 2.7127301691425343 Tokens per Sec: 2683.681710750497
Epoch Step: 35 / 67 Loss (mean): 0.17461509664644836 Loss (std): 0.422064167288631 Loss ratio: 2.417111552176985 Tokens per Sec: 2290.6758121545126
Epoch Step: 40 / 67 Loss (mean): 0.16065603844526777 Loss (std): 0.5703194671370493 Loss ratio: 3.5499410582774047 Tokens per Sec: 2880.917509755038
Epoch Step: 45 / 67 Loss (mean): 0.8733734277175245 Loss (std): 6.380284588043595 Loss ratio: 7.30533399065946 Tokens per Sec: 2387.76173820283
Epoch Step: 50 / 67 Loss (mean): 0.15031310774611484 Loss (std): 0.46769618465566365 Loss ratio: 3.1114797083806036 Tokens per Sec: 2728.2056548472915
Epoch Step: 55 / 67 Loss (mean): 0.5604771161088138 Loss (std): 1.02813340484935 Loss ratio: 1.8343896214484217 Tokens per Sec: 3212.8777330601015
Epoch Step: 60 / 67 Loss (mean): 0.20679904160715523 Loss (std): 0.6190865258910185 Loss ratio: 2.993662451623268 Tokens per Sec: 2919.273363117842
Epoch Step: 65 / 67 Loss (mean): 0.12318267787622972 Loss (std): 0.26399895789462324 Loss ratio: 2.1431500146463898 Tokens per Sec: 2931.1592866366996
Mean loss per sample: 0.5269884291232748 Std loss per sample: 4.0311617298024665 ratio: 7.649431196257791
Epoch ended with duration 0:00:11.318454
Train perplexity: 1.0739048348735107
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use gwt_binary ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for email[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.58669555187225 Loss (std): 45.10940843054239 Loss ratio: 0.4484629719969238 Tokens per Sec: 4339.488548962652
Mean loss per sample: 106.27102400985409 Std loss per sample: 54.51664494647193 ratio: 0.5129963266507794
Epoch ended with duration 0:00:01.018472
b'BLEU = 2.88, 9.0/3.3/2.2/1.7 (BP=0.891, ratio=0.897, hyp_len=2791, ref_len=3113)\n'
Validation perplexity: 1796996.5521618985
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.88
Epoch 839 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1740790941371415 Loss (std): 0.791930761450207 Loss ratio: 4.549258286157641 Tokens per Sec: 3034.0520151383193
Epoch Step: 10 / 67 Loss (mean): 0.07515722705807093 Loss (std): 0.15836392933022733 Loss ratio: 2.1071018121499607 Tokens per Sec: 3027.3570065659997
Epoch Step: 15 / 67 Loss (mean): 0.19011284716179944 Loss (std): 0.404890706599545 Loss ratio: 2.129738798004295 Tokens per Sec: 2900.5340338933743
Epoch Step: 20 / 67 Loss (mean): 0.19093844255257864 Loss (std): 0.5416460096214695 Loss ratio: 2.8367572416556013 Tokens per Sec: 2472.605879906987
Epoch Step: 25 / 67 Loss (mean): 0.2798386489666882 Loss (std): 0.721609262942193 Loss ratio: 2.578661902516878 Tokens per Sec: 2652.711320554568
Epoch Step: 30 / 67 Loss (mean): 0.24826942423078435 Loss (std): 0.698801148656656 Loss ratio: 2.814688723034496 Tokens per Sec: 2850.7480944014496
Epoch Step: 35 / 67 Loss (mean): 0.1050193688897707 Loss (std): 0.22353393590120532 Loss ratio: 2.12850199219754 Tokens per Sec: 3096.4088365138905
Epoch Step: 40 / 67 Loss (mean): 0.19205789615170943 Loss (std): 0.5466370612065854 Loss ratio: 2.8462097740297465 Tokens per Sec: 2407.286016510835
Epoch Step: 45 / 67 Loss (mean): 0.056762390388030326 Loss (std): 0.13660021071530565 Loss ratio: 2.406526747402643 Tokens per Sec: 2753.867097848988
Epoch Step: 50 / 67 Loss (mean): 0.08690661043056025 Loss (std): 0.1828909450877962 Loss ratio: 2.1044537829942054 Tokens per Sec: 2664.7580437138267
Epoch Step: 55 / 67 Loss (mean): 0.20432192575526642 Loss (std): 0.6261054359503643 Loss ratio: 3.064308608270967 Tokens per Sec: 2922.329680499758
Epoch Step: 60 / 67 Loss (mean): 0.12478824630125018 Loss (std): 0.2820193736946531 Loss ratio: 2.259983468425645 Tokens per Sec: 3196.4701781593462
Epoch Step: 65 / 67 Loss (mean): 1.3231653748025565 Loss (std): 1.8235274588924313 Loss ratio: 1.3781553641127733 Tokens per Sec: 2526.405613217136
Mean loss per sample: 0.3875131368852768 Std loss per sample: 2.918888247932527 ratio: 7.532359474039363
Epoch ended with duration 0:00:11.309578
Train perplexity: 1.0538292307254333
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 120.58006143569946 Loss (std): 46.36226879297743 Loss ratio: 0.3844936570852602 Tokens per Sec: 4324.753806645742
Mean loss per sample: 106.90503546464272 Std loss per sample: 54.27195556180697 ratio: 0.5076651003942337
Epoch ended with duration 0:00:01.019083
b'BLEU = 2.79, 8.9/3.1/2.1/1.7 (BP=0.895, ratio=0.900, hyp_len=2801, ref_len=3113)\n'
Validation perplexity: 1958221.3710098935
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.79
Epoch 840 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5768463651124875 Loss (std): 2.8889971190818384 Loss ratio: 5.008260940533917 Tokens per Sec: 2556.903434785119
Epoch Step: 10 / 67 Loss (mean): 0.9000144920719322 Loss (std): 5.454162387287869 Loss ratio: 6.060082849034784 Tokens per Sec: 2916.435696147437
Epoch Step: 15 / 67 Loss (mean): 0.3144487407626002 Loss (std): 1.6516574498472363 Loss ratio: 5.252549098595979 Tokens per Sec: 3151.105369620213
Epoch Step: 20 / 67 Loss (mean): 0.2630915119752899 Loss (std): 0.4876845202976556 Loss ratio: 1.8536687734093829 Tokens per Sec: 2500.7629072835784
Epoch Step: 25 / 67 Loss (mean): 0.06401919819290924 Loss (std): 0.10782570206264791 Loss ratio: 1.684271360877348 Tokens per Sec: 2735.857909748991
Epoch Step: 30 / 67 Loss (mean): 0.16844295045666513 Loss (std): 0.3892020557694056 Loss ratio: 2.3105867874805157 Tokens per Sec: 2400.958131395653
Epoch Step: 35 / 67 Loss (mean): 0.12167706479704066 Loss (std): 0.2707983006592887 Loss ratio: 2.2255492529424896 Tokens per Sec: 3296.5306645290666
Epoch Step: 40 / 67 Loss (mean): 0.8559972038419801 Loss (std): 1.4778689926374005 Loss ratio: 1.7264881076763656 Tokens per Sec: 3045.993718047167
Epoch Step: 45 / 67 Loss (mean): 0.22235244483454153 Loss (std): 0.6862632033165007 Loss ratio: 3.0863757932914466 Tokens per Sec: 2767.7492807330186
Epoch Step: 50 / 67 Loss (mean): 0.13341306129677832 Loss (std): 0.5037778370016167 Loss ratio: 3.776075836240346 Tokens per Sec: 2518.87015732846
Epoch Step: 55 / 67 Loss (mean): 1.9427276314263509 Loss (std): 9.155416806271536 Loss ratio: 4.7126610329568575 Tokens per Sec: 2877.5745392201297
Epoch Step: 60 / 67 Loss (mean): 0.055299296523116936 Loss (std): 0.13711026148251587 Loss ratio: 2.4794214411968016 Tokens per Sec: 3170.8491641526175
Epoch Step: 65 / 67 Loss (mean): 0.1255509991863164 Loss (std): 0.3598833415061455 Loss ratio: 2.866431520565458 Tokens per Sec: 2471.452191970553
Mean loss per sample: 0.31162221813709823 Std loss per sample: 2.0531594285980006 ratio: 6.5886169505882695
Epoch ended with duration 0:00:11.260707
Train perplexity: 1.0430638556089855
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use gwt_binary ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.39631220698357 Loss (std): 45.529770644725815 Loss ratio: 0.45350042888884884 Tokens per Sec: 4341.300244244967
Mean loss per sample: 106.75770934054353 Std loss per sample: 53.72599452082229 ratio: 0.5032516607249711
Epoch ended with duration 0:00:01.014974
b'BLEU = 2.39, 8.0/2.6/1.7/1.4 (BP=0.906, ratio=0.910, hyp_len=2833, ref_len=3113)\n'
Validation perplexity: 1919512.5407933437
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.39
Model saved checkpoint_commit_msg_generator!
Epoch 841 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.16673783928558805 Loss (std): 0.5764517089037202 Loss ratio: 3.457233891080809 Tokens per Sec: 2804.034061389605
Epoch Step: 10 / 67 Loss (mean): 0.15441008540256007 Loss (std): 0.6113148088093574 Loss ratio: 3.9590341991950093 Tokens per Sec: 2721.717744080063
Epoch Step: 15 / 67 Loss (mean): 0.0722430128596443 Loss (std): 0.21976004617564615 Loss ratio: 3.0419557196846427 Tokens per Sec: 2583.8299570402824
Epoch Step: 20 / 67 Loss (mean): 0.0599224069956108 Loss (std): 0.09368350851709485 Loss ratio: 1.5634136413104531 Tokens per Sec: 2840.4313439564476
Epoch Step: 25 / 67 Loss (mean): 0.41601190140681865 Loss (std): 0.8820002908504976 Loss ratio: 2.1201323516655552 Tokens per Sec: 2708.6763362938905
Epoch Step: 30 / 67 Loss (mean): 0.25819362718380034 Loss (std): 0.6863162103924993 Loss ratio: 2.6581454309247197 Tokens per Sec: 2483.57422588805
Epoch Step: 35 / 67 Loss (mean): 0.049819463040876144 Loss (std): 0.1563339800379508 Loss ratio: 3.1380101369153865 Tokens per Sec: 2684.8520823937256
Epoch Step: 40 / 67 Loss (mean): 0.5001126966917582 Loss (std): 2.551908394442672 Loss ratio: 5.102666681577027 Tokens per Sec: 3183.159523002337
Epoch Step: 45 / 67 Loss (mean): 0.08280171121805324 Loss (std): 0.20734485937624553 Loss ratio: 2.5041132160930286 Tokens per Sec: 3115.139976612623
Epoch Step: 50 / 67 Loss (mean): 0.11860626049929124 Loss (std): 0.5312786369839262 Loss ratio: 4.4793473358609175 Tokens per Sec: 2787.3826762069752
Epoch Step: 55 / 67 Loss (mean): 0.11206223811723248 Loss (std): 0.20430052638064844 Loss ratio: 1.823098751311053 Tokens per Sec: 2534.744512560905
Epoch Step: 60 / 67 Loss (mean): 0.08259506469585176 Loss (std): 0.19135333670146182 Loss ratio: 2.3167647777273586 Tokens per Sec: 3103.137568583315
Epoch Step: 65 / 67 Loss (mean): 0.16725912661945586 Loss (std): 0.828646134988616 Loss ratio: 4.954265586199865 Tokens per Sec: 3104.8594319774024
Mean loss per sample: 0.24401083439541696 Std loss per sample: 1.0550406378943262 ratio: 4.3237450521752
Epoch ended with duration 0:00:11.285910
Train perplexity: 1.03356562530587
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily 0 during method_3[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.67147931456566 Loss (std): 45.0120670627956 Loss ratio: 0.44711836330672683 Tokens per Sec: 4425.16005426933
Mean loss per sample: 108.71418180921283 Std loss per sample: 54.59641531362031 ratio: 0.5022014092828652
Epoch ended with duration 0:00:01.038021
b'BLEU = 2.47, 8.7/2.7/1.7/1.4 (BP=0.900, ratio=0.905, hyp_len=2817, ref_len=3113)\n'
Validation perplexity: 2502295.0532175666
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.47
Epoch 842 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.074391048599864 Loss (std): 1.2883629602071445 Loss ratio: 1.1991564541477953 Tokens per Sec: 2992.470382897963
Epoch Step: 10 / 67 Loss (mean): 0.06140780665100465 Loss (std): 0.08972549100766183 Loss ratio: 1.4611414395175095 Tokens per Sec: 2380.1899252954636
Epoch Step: 15 / 67 Loss (mean): 0.054911828427975706 Loss (std): 0.10059231896602613 Loss ratio: 1.831887989269317 Tokens per Sec: 2967.1799245151874
Epoch Step: 20 / 67 Loss (mean): 0.06714099721648381 Loss (std): 0.14822567036271447 Loss ratio: 2.2076775220479377 Tokens per Sec: 2816.4093585883934
Epoch Step: 25 / 67 Loss (mean): 0.3365507513576631 Loss (std): 0.8595367081408287 Loss ratio: 2.553958666481692 Tokens per Sec: 2947.980896774822
Epoch Step: 30 / 67 Loss (mean): 0.11734117984997283 Loss (std): 0.28433936864805964 Loss ratio: 2.423184844498779 Tokens per Sec: 2813.126872907685
Epoch Step: 35 / 67 Loss (mean): 0.18722534316702877 Loss (std): 0.6688788361812366 Loss ratio: 3.572587048669537 Tokens per Sec: 2809.116866945652
Epoch Step: 40 / 67 Loss (mean): 0.06501440455213015 Loss (std): 0.1420990623567421 Loss ratio: 2.185655061145774 Tokens per Sec: 2937.20583152375
Epoch Step: 45 / 67 Loss (mean): 0.5752767155390757 Loss (std): 1.1614618965637853 Loss ratio: 2.0189621189090055 Tokens per Sec: 2965.210034368408
Epoch Step: 50 / 67 Loss (mean): 0.20532499114790426 Loss (std): 0.4659794432231741 Loss ratio: 2.269472608366068 Tokens per Sec: 2653.7895733246983
Epoch Step: 55 / 67 Loss (mean): 0.25305592155928025 Loss (std): 0.5902480331261087 Loss ratio: 2.3324806212362774 Tokens per Sec: 2784.5185135538027
Epoch Step: 60 / 67 Loss (mean): 0.9534208393029076 Loss (std): 5.042302768077739 Loss ratio: 5.288643335889755 Tokens per Sec: 2630.3494467449436
Epoch Step: 65 / 67 Loss (mean): 0.22092949191437583 Loss (std): 0.4586176227357616 Loss ratio: 2.0758551461907357 Tokens per Sec: 2802.3059404337196
Mean loss per sample: 0.27635737459288867 Std loss per sample: 1.950442802834933 ratio: 7.057683210763583
Epoch ended with duration 0:00:11.337964
Train perplexity: 1.0380989148551552
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print warnings[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.25912874937057 Loss (std): 44.6814896152483 Loss ratio: 0.4412588787509792 Tokens per Sec: 4444.5538102814535
Mean loss per sample: 104.19667037408493 Std loss per sample: 53.70441022968267 ratio: 0.5154138806631162
Epoch ended with duration 0:00:01.006178
b'BLEU = 2.44, 8.4/2.8/1.8/1.4 (BP=0.881, ratio=0.888, hyp_len=2764, ref_len=3113)\n'
Validation perplexity: 1356631.2656191527
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.44
Epoch 843 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.24360022774953904 Loss (std): 0.8402628845173756 Loss ratio: 3.4493518018435663 Tokens per Sec: 2488.437552062989
Epoch Step: 10 / 67 Loss (mean): 0.1052743873815416 Loss (std): 0.3249084553191248 Loss ratio: 3.0863010785479337 Tokens per Sec: 3098.516248010121
Epoch Step: 15 / 67 Loss (mean): 0.12991990400132636 Loss (std): 0.32603730241037987 Loss ratio: 2.509525425811978 Tokens per Sec: 2396.7463124295778
Epoch Step: 20 / 67 Loss (mean): 0.27292728158909085 Loss (std): 0.6873375060099072 Loss ratio: 2.518390620417115 Tokens per Sec: 2892.4919581288723
Epoch Step: 25 / 67 Loss (mean): 0.24066937831366886 Loss (std): 0.7441430402048167 Loss ratio: 3.091972254297185 Tokens per Sec: 2716.572149062017
Epoch Step: 30 / 67 Loss (mean): 0.12984862923258333 Loss (std): 0.35178763305219074 Loss ratio: 2.7092132980631844 Tokens per Sec: 2303.8762054490116
Epoch Step: 35 / 67 Loss (mean): 0.08046815035368127 Loss (std): 0.253819253357476 Loss ratio: 3.1542821879447396 Tokens per Sec: 2439.6880009122265
Epoch Step: 40 / 67 Loss (mean): 0.10113376019216958 Loss (std): 0.22551726574276384 Loss ratio: 2.2298910404818986 Tokens per Sec: 3112.114684234772
Epoch Step: 45 / 67 Loss (mean): 2.551993621800648 Loss (std): 8.889647189855747 Loss ratio: 3.4834127773341956 Tokens per Sec: 3114.2651899963917
Epoch Step: 50 / 67 Loss (mean): 0.2679599169887297 Loss (std): 0.7047339748070472 Loss ratio: 2.629997735208614 Tokens per Sec: 3533.6043408038563
Epoch Step: 55 / 67 Loss (mean): 0.11356525746668922 Loss (std): 0.5014213544767423 Loss ratio: 4.415270705689356 Tokens per Sec: 2766.0431229019932
Epoch Step: 60 / 67 Loss (mean): 0.12777744235336286 Loss (std): 0.3493626914875596 Loss ratio: 2.7341499802556117 Tokens per Sec: 3145.423892015678
Epoch Step: 65 / 67 Loss (mean): 0.19749194249061475 Loss (std): 0.4077221366648871 Loss ratio: 2.064500108323472 Tokens per Sec: 2767.7494966816716
Mean loss per sample: 0.3883933505108637 Std loss per sample: 2.6571037928610863 ratio: 6.841270040710351
Epoch ended with duration 0:00:11.319889
Train perplexity: 1.053954741517141
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print in method_1 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.8150720000267 Loss (std): 45.80736645182847 Loss ratio: 0.45437022007796946 Tokens per Sec: 4443.189689633668
Mean loss per sample: 105.50590713786298 Std loss per sample: 53.34432996509122 ratio: 0.505605149628134
Epoch ended with duration 0:00:01.023720
b'BLEU = 2.80, 8.7/3.2/2.1/1.7 (BP=0.892, ratio=0.898, hyp_len=2795, ref_len=3113)\n'
Validation perplexity: 1620005.668713864
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.8
Epoch 844 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.18117954974059103 Loss (std): 0.5812145451712085 Loss ratio: 3.207947839606506 Tokens per Sec: 2398.1603232795737
Epoch Step: 10 / 67 Loss (mean): 0.08799328253371641 Loss (std): 0.2066449462986268 Loss ratio: 2.3484172921887145 Tokens per Sec: 2647.4827141185788
Epoch Step: 15 / 67 Loss (mean): 0.21490429945697542 Loss (std): 0.8158094576114312 Loss ratio: 3.796152332330415 Tokens per Sec: 3245.425752836854
Epoch Step: 20 / 67 Loss (mean): 0.3104551194483065 Loss (std): 0.5571929654612278 Loss ratio: 1.7947617241789606 Tokens per Sec: 3165.541735820456
Epoch Step: 25 / 67 Loss (mean): 0.0552945734189052 Loss (std): 0.10863570650933281 Loss ratio: 1.964672115043215 Tokens per Sec: 2352.9787635370258
Epoch Step: 30 / 67 Loss (mean): 1.9262178759504422 Loss (std): 10.13908364185742 Loss ratio: 5.263726273360718 Tokens per Sec: 2862.924752687655
Epoch Step: 35 / 67 Loss (mean): 0.5397762278767004 Loss (std): 0.8775236495247039 Loss ratio: 1.6257174810691257 Tokens per Sec: 2706.7658111122655
Epoch Step: 40 / 67 Loss (mean): 0.14364614799524134 Loss (std): 0.4206645530470743 Loss ratio: 2.928477783205227 Tokens per Sec: 2641.223955755174
Epoch Step: 45 / 67 Loss (mean): 0.4429101183959574 Loss (std): 1.46332457994295 Loss ratio: 3.3038860914772594 Tokens per Sec: 3153.735677047103
Epoch Step: 50 / 67 Loss (mean): 0.023020690257475336 Loss (std): 0.032932176277308114 Loss ratio: 1.4305468649713617 Tokens per Sec: 2684.6760383732053
Epoch Step: 55 / 67 Loss (mean): 0.13573529519271688 Loss (std): 0.3716555928560701 Loss ratio: 2.738091019939904 Tokens per Sec: 2846.5856239704785
Epoch Step: 60 / 67 Loss (mean): 0.21871850472848564 Loss (std): 0.4755177835018604 Loss ratio: 2.1741086063667185 Tokens per Sec: 2987.103908676144
Epoch Step: 65 / 67 Loss (mean): 0.7941344148025564 Loss (std): 5.957571847971571 Loss ratio: 7.5019691086587486 Tokens per Sec: 2687.6800917368573
Mean loss per sample: 0.3084990695113501 Std loss per sample: 2.1005305708444726 ratio: 6.808871657770726
Epoch ended with duration 0:00:11.321808
Train perplexity: 1.0426231904909766
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire 0 length and hint[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.35106664896011 Loss (std): 45.41072847627807 Loss ratio: 0.44805377957750375 Tokens per Sec: 4440.530977222526
Mean loss per sample: 104.69336298147796 Std loss per sample: 53.9102414090371 ratio: 0.5149346613173057
Epoch ended with duration 0:00:01.004059
b'BLEU = 2.51, 8.9/2.7/1.7/1.3 (BP=0.920, ratio=0.923, hyp_len=2873, ref_len=3113)\n'
Validation perplexity: 1451090.5268135858
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.51
Epoch 845 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1087939617846132 Loss (std): 0.40162879702512416 Loss ratio: 3.6916460292185698 Tokens per Sec: 3137.600405652179
Epoch Step: 10 / 67 Loss (mean): 0.10900092311612752 Loss (std): 0.45014103295540364 Loss ratio: 4.129699273058741 Tokens per Sec: 2641.3563386405103
Epoch Step: 15 / 67 Loss (mean): 0.13412123995385627 Loss (std): 0.39292907839613717 Loss ratio: 2.9296558735314586 Tokens per Sec: 2782.8583107837417
Epoch Step: 20 / 67 Loss (mean): 0.1352114221344891 Loss (std): 0.37078173449596924 Loss ratio: 2.7422367773572285 Tokens per Sec: 2528.5795046657354
Epoch Step: 25 / 67 Loss (mean): 0.08646049363414932 Loss (std): 0.30471246976400235 Loss ratio: 3.524297132206634 Tokens per Sec: 2286.966267312909
Epoch Step: 30 / 67 Loss (mean): 0.4163388292276977 Loss (std): 0.7358766303221733 Loss ratio: 1.767494594936565 Tokens per Sec: 2949.043870709542
Epoch Step: 35 / 67 Loss (mean): 0.18467538243112358 Loss (std): 0.4455938364912045 Loss ratio: 2.41284913357303 Tokens per Sec: 2924.6300216330415
Epoch Step: 40 / 67 Loss (mean): 1.1601905989100487 Loss (std): 5.283782555730836 Loss ratio: 4.554236657920459 Tokens per Sec: 2787.4473144211997
Epoch Step: 45 / 67 Loss (mean): 0.10577684159329692 Loss (std): 0.2827276338438329 Loss ratio: 2.672868934117895 Tokens per Sec: 2750.8136678225287
Epoch Step: 50 / 67 Loss (mean): 0.3034608708171618 Loss (std): 0.7429882537450381 Loss ratio: 2.4483823952139647 Tokens per Sec: 3001.4990733044665
Epoch Step: 55 / 67 Loss (mean): 0.10833117851689167 Loss (std): 0.37661778923003525 Loss ratio: 3.476541051118637 Tokens per Sec: 2796.7599835175665
Epoch Step: 60 / 67 Loss (mean): 0.21433703392301595 Loss (std): 0.45784876667329777 Loss ratio: 2.1361159958840554 Tokens per Sec: 3034.7201714699495
Epoch Step: 65 / 67 Loss (mean): 0.18628122528889435 Loss (std): 0.7625454531587079 Loss ratio: 4.0935174866716375 Tokens per Sec: 2903.953523036067
Mean loss per sample: 0.2454150186038697 Std loss per sample: 1.4566027685366572 ratio: 5.935263362540151
Epoch ended with duration 0:00:11.265419
Train perplexity: 1.033762006672275
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire 0 length and hint[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.97935491800308 Loss (std): 45.39441889685697 Loss ratio: 0.4540379254705802 Tokens per Sec: 4332.412594181564
Mean loss per sample: 106.55386325698652 Std loss per sample: 54.31039096104286 ratio: 0.5096989381798115
Epoch ended with duration 0:00:01.021431
b'BLEU = 2.22, 8.6/2.4/1.5/1.1 (BP=0.916, ratio=0.920, hyp_len=2863, ref_len=3113)\n'
Validation perplexity: 1867212.119477618
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.22
Model saved checkpoint_commit_msg_generator!
Epoch 846 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.6170279792831934 Loss (std): 3.3086041437856872 Loss ratio: 5.3621622598529814 Tokens per Sec: 3166.345997668002
Epoch Step: 10 / 67 Loss (mean): 0.1474985153081434 Loss (std): 0.3529750431436037 Loss ratio: 2.3930752279519107 Tokens per Sec: 2744.4409581100294
Epoch Step: 15 / 67 Loss (mean): 0.5582393136810424 Loss (std): 1.193438807329247 Loss ratio: 2.1378623434091106 Tokens per Sec: 3072.6613630676925
Epoch Step: 20 / 67 Loss (mean): 0.12746970234184118 Loss (std): 0.4427967512743061 Loss ratio: 3.4737411568345733 Tokens per Sec: 2465.9660008120136
Epoch Step: 25 / 67 Loss (mean): 0.11248274138961278 Loss (std): 0.5141751672111314 Loss ratio: 4.571147189862256 Tokens per Sec: 2736.8141870091617
Epoch Step: 30 / 67 Loss (mean): 0.22466169962899585 Loss (std): 0.5784624868347715 Loss ratio: 2.574815768731559 Tokens per Sec: 3429.259718720146
Epoch Step: 35 / 67 Loss (mean): 0.1421847995443386 Loss (std): 0.4833491935839224 Loss ratio: 3.399443506851067 Tokens per Sec: 2378.7000511473707
Epoch Step: 40 / 67 Loss (mean): 1.8374099949220408 Loss (std): 7.365945600988995 Loss ratio: 4.008874242191942 Tokens per Sec: 2511.3978350766547
Epoch Step: 45 / 67 Loss (mean): 0.05664933453681442 Loss (std): 0.0969191112105839 Loss ratio: 1.7108605423705296 Tokens per Sec: 3030.462116665519
Epoch Step: 50 / 67 Loss (mean): 0.12122138619179168 Loss (std): 0.44074055347254987 Loss ratio: 3.6358316574208085 Tokens per Sec: 2915.4606024199775
Epoch Step: 55 / 67 Loss (mean): 0.08710520868226013 Loss (std): 0.27387143469847336 Loss ratio: 3.144145325424725 Tokens per Sec: 2296.8523021247684
Epoch Step: 60 / 67 Loss (mean): 0.12235682695200012 Loss (std): 0.36701968394164547 Loss ratio: 2.999584846096288 Tokens per Sec: 3375.986652164722
Epoch Step: 65 / 67 Loss (mean): 0.3874782433613291 Loss (std): 0.8389118009448664 Loss ratio: 2.165055239404936 Tokens per Sec: 2680.0752112702835
Mean loss per sample: 0.23876708335743782 Std loss per sample: 1.1841000891263074 ratio: 4.959226675955547
Epoch ended with duration 0:00:11.241179
Train perplexity: 1.0328325932796867
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily not ==[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.21637085080147 Loss (std): 45.38834052403759 Loss ratio: 0.45290345418325034 Tokens per Sec: 4425.432168455848
Mean loss per sample: 104.39800537344007 Std loss per sample: 54.18629232763303 ratio: 0.5190357050769725
Epoch ended with duration 0:00:01.006151
b'BLEU = 2.56, 8.4/2.8/1.8/1.4 (BP=0.921, ratio=0.924, hyp_len=2876, ref_len=3113)\n'
Validation perplexity: 1394155.861582192
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.56
Epoch 847 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.8520586391705365 Loss (std): 4.445382724421597 Loss ratio: 5.217226280046988 Tokens per Sec: 2864.675737359399
Epoch Step: 10 / 67 Loss (mean): 0.33409679571741435 Loss (std): 0.6986558776713537 Loss ratio: 2.091178025730874 Tokens per Sec: 3665.967764871046
Epoch Step: 15 / 67 Loss (mean): 0.22869941459885013 Loss (std): 0.5548133883190189 Loss ratio: 2.4259501900876685 Tokens per Sec: 2857.83704693986
Epoch Step: 20 / 67 Loss (mean): 0.7294200883598023 Loss (std): 3.539153284788182 Loss ratio: 4.852009618690976 Tokens per Sec: 2483.3695214356317
Epoch Step: 25 / 67 Loss (mean): 0.07558566425905155 Loss (std): 0.2317024000851452 Loss ratio: 3.0654278474161627 Tokens per Sec: 2916.7251816434064
Epoch Step: 30 / 67 Loss (mean): 0.1358118676171216 Loss (std): 0.35543645911770716 Loss ratio: 2.6171237120436874 Tokens per Sec: 2701.3959971885715
Epoch Step: 35 / 67 Loss (mean): 0.7006036879174644 Loss (std): 1.3279835789252494 Loss ratio: 1.8954847110106767 Tokens per Sec: 3237.0121435652877
Epoch Step: 40 / 67 Loss (mean): 0.10848204156250826 Loss (std): 0.33902520581515094 Loss ratio: 3.1251735396203966 Tokens per Sec: 2293.379770952771
Epoch Step: 45 / 67 Loss (mean): 0.3844936226266782 Loss (std): 1.039681500464275 Loss ratio: 2.7040279455395484 Tokens per Sec: 2421.834591746794
Epoch Step: 50 / 67 Loss (mean): 0.12493068840558408 Loss (std): 0.2507385913453761 Loss ratio: 2.0070216097053764 Tokens per Sec: 2741.211539756113
Epoch Step: 55 / 67 Loss (mean): 0.05849811094731194 Loss (std): 0.14524359702110567 Loss ratio: 2.482876706085836 Tokens per Sec: 2940.8589387285374
Epoch Step: 60 / 67 Loss (mean): 0.11417105975579034 Loss (std): 0.2909508043865277 Loss ratio: 2.5483761384791013 Tokens per Sec: 3379.9955333458656
Epoch Step: 65 / 67 Loss (mean): 0.11143278350027686 Loss (std): 0.3736961219904018 Loss ratio: 3.3535563794785164 Tokens per Sec: 2377.4695843042196
Mean loss per sample: 0.3365116227658042 Std loss per sample: 2.33917461690076 ratio: 6.951244648475968
Epoch ended with duration 0:00:11.380345
Train perplexity: 1.0465823246970092
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily not active[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.10295686125755 Loss (std): 46.0686212631794 Loss ratio: 0.45566047416792027 Tokens per Sec: 4338.428975322333
Mean loss per sample: 109.45753511229194 Std loss per sample: 55.567966650505845 ratio: 0.507666891945803
Epoch ended with duration 0:00:01.049644
b'BLEU = 2.24, 8.9/2.5/1.6/1.2 (BP=0.875, ratio=0.882, hyp_len=2746, ref_len=3113)\n'
Validation perplexity: 2767504.5213202885
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.24
Epoch 848 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.13932090735852398 Loss (std): 0.3817366365067483 Loss ratio: 2.7399809816368723 Tokens per Sec: 2827.311320371309
Epoch Step: 10 / 67 Loss (mean): 0.45852189857396297 Loss (std): 0.9679871740350745 Loss ratio: 2.1111034762910696 Tokens per Sec: 2873.7665258088396
Epoch Step: 15 / 67 Loss (mean): 0.16543254803923446 Loss (std): 0.7343891886837928 Loss ratio: 4.439206174286954 Tokens per Sec: 2486.9375270944024
Epoch Step: 20 / 67 Loss (mean): 1.0304283094665152 Loss (std): 7.311505684713087 Loss ratio: 7.095598614229146 Tokens per Sec: 2689.3938102435895
Epoch Step: 25 / 67 Loss (mean): 0.1582969096098168 Loss (std): 0.5221830139950084 Loss ratio: 3.2987568442247417 Tokens per Sec: 3543.2638072298128
Epoch Step: 30 / 67 Loss (mean): 0.13264081780039305 Loss (std): 0.4625051500727738 Loss ratio: 3.486899114032779 Tokens per Sec: 3406.457327700044
Epoch Step: 35 / 67 Loss (mean): 0.739943013750235 Loss (std): 5.308493827130177 Loss ratio: 7.174192780367327 Tokens per Sec: 2437.2159296264444
Epoch Step: 40 / 67 Loss (mean): 0.24525214661298378 Loss (std): 0.7808326093835442 Loss ratio: 3.183795209000656 Tokens per Sec: 2970.001068835373
Epoch Step: 45 / 67 Loss (mean): 0.0854446777711928 Loss (std): 0.24037811625114622 Loss ratio: 2.8132602582321207 Tokens per Sec: 2309.737094186795
Epoch Step: 50 / 67 Loss (mean): 0.40614521496718226 Loss (std): 0.9150757501734459 Loss ratio: 2.253075295365444 Tokens per Sec: 2709.5048711305617
Epoch Step: 55 / 67 Loss (mean): 0.18319271637665224 Loss (std): 0.7504072479812408 Loss ratio: 4.096272290861012 Tokens per Sec: 2758.510773782817
Epoch Step: 60 / 67 Loss (mean): 0.22014909450604137 Loss (std): 0.6728342939074253 Loss ratio: 3.0562664607687555 Tokens per Sec: 2733.831567030872
Epoch Step: 65 / 67 Loss (mean): 0.2831248030529423 Loss (std): 0.5915941392404579 Loss ratio: 2.0895171770939265 Tokens per Sec: 2980.0809677305047
Mean loss per sample: 0.4065607177873065 Std loss per sample: 3.2464371872793305 ratio: 7.985122628049162
Epoch ended with duration 0:00:11.311056
Train perplexity: 1.0565485906014258
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use gwt_binary ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 122.55272591114044 Loss (std): 47.66537039405085 Loss ratio: 0.3889376596046642 Tokens per Sec: 4343.82256158089
Mean loss per sample: 107.5116736964002 Std loss per sample: 54.60829510400693 ratio: 0.5079289832117586
Epoch ended with duration 0:00:01.018249
b'BLEU = 2.21, 8.3/2.5/1.5/1.2 (BP=0.901, ratio=0.905, hyp_len=2818, ref_len=3113)\n'
Validation perplexity: 2126009.915426704
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.21
Epoch 849 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.12323960085268482 Loss (std): 0.2717303003249515 Loss ratio: 2.204894355749869 Tokens per Sec: 2468.8095062417665
Epoch Step: 10 / 67 Loss (mean): 0.19622832428217407 Loss (std): 0.5047983072204012 Loss ratio: 2.5725048056492956 Tokens per Sec: 2624.8348410549297
Epoch Step: 15 / 67 Loss (mean): 0.2860704802847067 Loss (std): 0.5463710612475685 Loss ratio: 1.909917656319527 Tokens per Sec: 2950.170576097595
Epoch Step: 20 / 67 Loss (mean): 0.07928030277798825 Loss (std): 0.18561415155278793 Loss ratio: 2.341239186138965 Tokens per Sec: 3037.3602923993353
Epoch Step: 25 / 67 Loss (mean): 0.20653514424429886 Loss (std): 0.6218180015848717 Loss ratio: 3.010712795926673 Tokens per Sec: 2917.3826888342246
Epoch Step: 30 / 67 Loss (mean): 0.14892971571930502 Loss (std): 0.43542558846900864 Loss ratio: 2.9236985135302085 Tokens per Sec: 2879.884722401029
Epoch Step: 35 / 67 Loss (mean): 0.16543019762684708 Loss (std): 0.41772941008473224 Loss ratio: 2.5251097809058076 Tokens per Sec: 3080.9286828536533
Epoch Step: 40 / 67 Loss (mean): 0.3185749080885216 Loss (std): 0.8217561602964879 Loss ratio: 2.5794754685078605 Tokens per Sec: 2518.389483637284
Epoch Step: 45 / 67 Loss (mean): 0.3539974438632498 Loss (std): 0.8698297760038578 Loss ratio: 2.45716400240414 Tokens per Sec: 2778.8682779946243
Epoch Step: 50 / 67 Loss (mean): 0.09450077636392962 Loss (std): 0.1685773580654044 Loss ratio: 1.7838727315445564 Tokens per Sec: 2808.1772367405865
Epoch Step: 55 / 67 Loss (mean): 0.23212107199105958 Loss (std): 0.9007346191183105 Loss ratio: 3.8804517461172305 Tokens per Sec: 2667.8964817346387
Epoch Step: 60 / 67 Loss (mean): 0.8055294363261964 Loss (std): 1.2939372105679692 Loss ratio: 1.606318965163172 Tokens per Sec: 3010.6353333406137
Epoch Step: 65 / 67 Loss (mean): 0.08059444355421874 Loss (std): 0.17188174585217517 Loss ratio: 2.1326748876495962 Tokens per Sec: 2638.171243314719
Mean loss per sample: 0.27829602824676386 Std loss per sample: 1.9094834579179731 ratio: 6.861339236307184
Epoch ended with duration 0:00:11.288901
Train perplexity: 1.0383712431735146
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily not active[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.69102489948273 Loss (std): 46.4077953904234 Loss ratio: 0.4608930680440597 Tokens per Sec: 4326.809595836608
Mean loss per sample: 106.17805916860272 Std loss per sample: 53.95745704981996 ratio: 0.5081789728717833
Epoch ended with duration 0:00:01.024050
b'BLEU = 2.23, 7.9/2.4/1.5/1.1 (BP=0.940, ratio=0.942, hyp_len=2932, ref_len=3113)\n'
Validation perplexity: 1774499.2811230342
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.23
Epoch 850 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.22971792150747206 Loss (std): 0.46387168031878884 Loss ratio: 2.0193099313920984 Tokens per Sec: 3190.871900717102
Epoch Step: 10 / 67 Loss (mean): 0.09170980154704012 Loss (std): 0.3116573746602491 Loss ratio: 3.3982995209120883 Tokens per Sec: 2921.063082038951
Epoch Step: 15 / 67 Loss (mean): 0.0658452126344855 Loss (std): 0.12400304903631904 Loss ratio: 1.8832507949313566 Tokens per Sec: 2784.1571254788637
Epoch Step: 20 / 67 Loss (mean): 4.501186957418213 Loss (std): 12.608783405432241 Loss ratio: 2.8012129966413073 Tokens per Sec: 3183.9719354813114
Epoch Step: 25 / 67 Loss (mean): 0.09609175608784426 Loss (std): 0.23485223135836186 Loss ratio: 2.44404141333068 Tokens per Sec: 2415.3967455541906
Epoch Step: 30 / 67 Loss (mean): 0.2571762955867598 Loss (std): 0.6864243096795983 Loss ratio: 2.669080787999878 Tokens per Sec: 3103.0320356230545
Epoch Step: 35 / 67 Loss (mean): 2.602706458816101 Loss (std): 10.0871631068488 Loss ratio: 3.87564378329363 Tokens per Sec: 2964.403125693582
Epoch Step: 40 / 67 Loss (mean): 0.07058922859555139 Loss (std): 0.1299421217315209 Loss ratio: 1.8408208209221029 Tokens per Sec: 2373.4723207641687
Epoch Step: 45 / 67 Loss (mean): 0.2372662645636865 Loss (std): 0.6341409503003625 Loss ratio: 2.6726974922730653 Tokens per Sec: 2973.0456390946947
Epoch Step: 50 / 67 Loss (mean): 0.35573047125035373 Loss (std): 2.3563755832607383 Loss ratio: 6.624047625097551 Tokens per Sec: 2254.4128994701605
Epoch Step: 55 / 67 Loss (mean): 0.5001429065450793 Loss (std): 1.2229080885437196 Loss ratio: 2.445117330547395 Tokens per Sec: 2795.0595223000378
Epoch Step: 60 / 67 Loss (mean): 0.15770806918180824 Loss (std): 0.4110266048095915 Loss ratio: 2.606249679816661 Tokens per Sec: 2826.084277877722
Epoch Step: 65 / 67 Loss (mean): 0.2298749623372487 Loss (std): 0.7342731573044586 Loss ratio: 3.19422850509143 Tokens per Sec: 2692.9946170176904
Mean loss per sample: 0.5156774986375748 Std loss per sample: 3.7444882253868204 ratio: 7.261298457426969
Epoch ended with duration 0:00:11.352427
Train perplexity: 1.0722626246971085
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use gwt_binary ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.70423921942711 Loss (std): 45.8382288610194 Loss ratio: 0.45517675538108465 Tokens per Sec: 4464.951181268247
Mean loss per sample: 104.23738278393618 Std loss per sample: 54.11055223588127 ratio: 0.51910889155805
Epoch ended with duration 0:00:01.000344
b'BLEU = 2.45, 8.5/2.7/1.7/1.4 (BP=0.900, ratio=0.904, hyp_len=2815, ref_len=3113)\n'
Validation perplexity: 1364136.8401374158
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.45
Model saved checkpoint_commit_msg_generator!
Epoch 851 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.20815142592664415 Loss (std): 0.7289917096471557 Loss ratio: 3.5022181875615104 Tokens per Sec: 2707.7656812704527
Epoch Step: 10 / 67 Loss (mean): 0.18610067941267516 Loss (std): 0.6304449473410704 Loss ratio: 3.3876552698825413 Tokens per Sec: 3371.9964338607388
Epoch Step: 15 / 67 Loss (mean): 0.42937399786751484 Loss (std): 0.8230558607014745 Loss ratio: 1.916874018429574 Tokens per Sec: 3391.910070257611
Epoch Step: 20 / 67 Loss (mean): 0.21277306165529808 Loss (std): 0.4700678443326484 Loss ratio: 2.209245102155739 Tokens per Sec: 3400.020557877533
Epoch Step: 25 / 67 Loss (mean): 0.15035255484178833 Loss (std): 0.4539802560036132 Loss ratio: 3.0194382561794413 Tokens per Sec: 2427.6925870271975
Epoch Step: 30 / 67 Loss (mean): 1.0405693214652274 Loss (std): 1.265605177180521 Loss ratio: 1.2162622432481676 Tokens per Sec: 2980.58630091662
Epoch Step: 35 / 67 Loss (mean): 0.19163677967389958 Loss (std): 0.8044347204859918 Loss ratio: 4.197705272729302 Tokens per Sec: 3197.2070137159285
Epoch Step: 40 / 67 Loss (mean): 0.10214759679274721 Loss (std): 0.4588108396795343 Loss ratio: 4.49164595238046 Tokens per Sec: 2305.2793739078415
Epoch Step: 45 / 67 Loss (mean): 0.1221206443178744 Loss (std): 0.233397764400353 Loss ratio: 1.9112064606605694 Tokens per Sec: 2476.474957594291
Epoch Step: 50 / 67 Loss (mean): 0.15136117613747047 Loss (std): 0.3081233619248675 Loss ratio: 2.035682926016783 Tokens per Sec: 2349.892117314204
Epoch Step: 55 / 67 Loss (mean): 0.09863149821103434 Loss (std): 0.2581890835276432 Loss ratio: 2.617714302333881 Tokens per Sec: 2971.991526873797
Epoch Step: 60 / 67 Loss (mean): 0.1700648445112165 Loss (std): 0.4750408187701662 Loss ratio: 2.7932922888059633 Tokens per Sec: 2819.3541632938163
Epoch Step: 65 / 67 Loss (mean): 1.6369068559133666 Loss (std): 6.026965948201994 Loss ratio: 3.6819235782594655 Tokens per Sec: 2552.7353524535297
Mean loss per sample: 0.26621204764654655 Std loss per sample: 1.1403136365745785 ratio: 4.283478702994648
Epoch ended with duration 0:00:11.314146
Train perplexity: 1.0366749357079372
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily not immutable ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.20012718439102 Loss (std): 45.61548286538748 Loss ratio: 0.455243762130607 Tokens per Sec: 4440.775414316079
Mean loss per sample: 104.09621479447748 Std loss per sample: 53.69363055818348 ratio: 0.5158077137021129
Epoch ended with duration 0:00:01.003590
b'BLEU = 2.07, 8.3/2.4/1.3/1.0 (BP=0.911, ratio=0.915, hyp_len=2848, ref_len=3113)\n'
Validation perplexity: 1338287.8671896625
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.07
Epoch 852 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.24118222167999193 Loss (std): 0.8324205592699336 Loss ratio: 3.4514175774299614 Tokens per Sec: 2344.793853046498
Epoch Step: 10 / 67 Loss (mean): 0.10024281396999868 Loss (std): 0.27192965077629017 Loss ratio: 2.712709669719318 Tokens per Sec: 3082.0300329840315
Epoch Step: 15 / 67 Loss (mean): 0.08326026723557334 Loss (std): 0.2083739774165098 Loss ratio: 2.502682063545924 Tokens per Sec: 2876.581822908521
Epoch Step: 20 / 67 Loss (mean): 0.5420478496780561 Loss (std): 0.8296415273849242 Loss ratio: 1.5305688010342289 Tokens per Sec: 2982.1901063613445
Epoch Step: 25 / 67 Loss (mean): 0.23484704527072608 Loss (std): 0.553109911747077 Loss ratio: 2.3551921256214445 Tokens per Sec: 2885.9731462586674
Epoch Step: 30 / 67 Loss (mean): 0.34805953441718884 Loss (std): 1.3459064874238211 Loss ratio: 3.866885846633925 Tokens per Sec: 2697.9319828630278
Epoch Step: 35 / 67 Loss (mean): 0.11049642210514321 Loss (std): 0.3453082990214568 Loss ratio: 3.1250631689492865 Tokens per Sec: 2984.6889847085413
Epoch Step: 40 / 67 Loss (mean): 0.26168599798006653 Loss (std): 0.6699693346556629 Loss ratio: 2.5602032199930567 Tokens per Sec: 2989.0564898067923
Epoch Step: 45 / 67 Loss (mean): 0.10664010614891595 Loss (std): 0.32091231317560576 Loss ratio: 3.0093022668926515 Tokens per Sec: 2316.020529219709
Epoch Step: 50 / 67 Loss (mean): 0.20941977733309614 Loss (std): 0.8481368185041765 Loss ratio: 4.049936588153077 Tokens per Sec: 3333.591622710147
Epoch Step: 55 / 67 Loss (mean): 0.044953384527616436 Loss (std): 0.06308984253626837 Loss ratio: 1.40345033414581 Tokens per Sec: 3052.835458582769
Epoch Step: 60 / 67 Loss (mean): 0.42665314708028745 Loss (std): 0.9235390538680617 Loss ratio: 2.1646132465870935 Tokens per Sec: 2945.847369224514
Epoch Step: 65 / 67 Loss (mean): 0.16493614946421076 Loss (std): 0.43983765219379245 Loss ratio: 2.6667146870021488 Tokens per Sec: 2401.162213798459
Mean loss per sample: 0.2761799615827179 Std loss per sample: 1.7199468095482178 ratio: 6.227630707498238
Epoch ended with duration 0:00:11.261922
Train perplexity: 1.038073996700917
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily into db ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.70075678825378 Loss (std): 45.83677476841185 Loss ratio: 0.45974349889600935 Tokens per Sec: 4320.916827421889
Mean loss per sample: 106.16301159804962 Std loss per sample: 54.809311126454055 ratio: 0.5162750217935697
Epoch ended with duration 0:00:01.022786
b'BLEU = 2.85, 8.8/3.1/2.1/1.7 (BP=0.898, ratio=0.903, hyp_len=2810, ref_len=3113)\n'
Validation perplexity: 1770884.382004338
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.85
Epoch 853 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2493458076103252 Loss (std): 0.5881683390350174 Loss ratio: 2.358845912317083 Tokens per Sec: 2443.1514292787756
Epoch Step: 10 / 67 Loss (mean): 3.10634002558254 Loss (std): 10.869731560133298 Loss ratio: 3.499208544658555 Tokens per Sec: 3372.682499248065
Epoch Step: 15 / 67 Loss (mean): 0.504992732959181 Loss (std): 1.0538797262566424 Loss ratio: 2.0869205782052873 Tokens per Sec: 3051.107075295607
Epoch Step: 20 / 67 Loss (mean): 0.1811009447756078 Loss (std): 0.4356050967916617 Loss ratio: 2.4053165339992897 Tokens per Sec: 2618.6827282691743
Epoch Step: 25 / 67 Loss (mean): 0.13604296468656685 Loss (std): 0.41040490365161014 Loss ratio: 3.0167300793330503 Tokens per Sec: 2862.2681269412374
Epoch Step: 30 / 67 Loss (mean): 0.14190260454938652 Loss (std): 0.42138801979847534 Loss ratio: 2.9695580369126993 Tokens per Sec: 3170.5492226861634
Epoch Step: 35 / 67 Loss (mean): 0.17979513925547508 Loss (std): 0.6156274672487251 Loss ratio: 3.4240495588368813 Tokens per Sec: 2768.373832862853
Epoch Step: 40 / 67 Loss (mean): 0.04406356284061985 Loss (std): 0.07952515339362846 Loss ratio: 1.8047826427761866 Tokens per Sec: 2310.0186739136366
Epoch Step: 45 / 67 Loss (mean): 0.09229073489632356 Loss (std): 0.18953873980256936 Loss ratio: 2.053713625918041 Tokens per Sec: 2766.846085684717
Epoch Step: 50 / 67 Loss (mean): 1.773070107178114 Loss (std): 9.547011286786153 Loss ratio: 5.384452226754002 Tokens per Sec: 2961.3716085512933
Epoch Step: 55 / 67 Loss (mean): 0.024553131064749323 Loss (std): 0.033828446550528225 Loss ratio: 1.3777650785685487 Tokens per Sec: 3308.5669454319136
Epoch Step: 60 / 67 Loss (mean): 0.1543559361982716 Loss (std): 0.589956255157406 Loss ratio: 3.8220509666670797 Tokens per Sec: 2715.2166652023056
Epoch Step: 65 / 67 Loss (mean): 0.41015393115321785 Loss (std): 1.021768955908834 Loss ratio: 2.49118410991687 Tokens per Sec: 2701.4234335377027
Mean loss per sample: 0.39224703120143845 Std loss per sample: 2.977897262383902 ratio: 7.591892418567735
Epoch ended with duration 0:00:11.291735
Train perplexity: 1.0545044188081125
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the daemon print to 0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.06292271614075 Loss (std): 45.145115899845685 Loss ratio: 0.45116727229638987 Tokens per Sec: 4209.853096825971
Mean loss per sample: 107.26718108746849 Std loss per sample: 55.88615857187418 ratio: 0.5209996012322085
Epoch ended with duration 0:00:01.036931
b'BLEU = 2.44, 8.9/2.7/1.7/1.3 (BP=0.900, ratio=0.905, hyp_len=2816, ref_len=3113)\n'
Validation perplexity: 2056722.7460711496
Validation accuracy: 0.0
Validation BLEU: 2.44
Epoch 854 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.0881346563205625 Loss (std): 0.2707028784859489 Loss ratio: 3.0714691562573417 Tokens per Sec: 2637.632770402761
Epoch Step: 10 / 67 Loss (mean): 0.9494149674245591 Loss (std): 1.3452176682308539 Loss ratio: 1.4168911533804585 Tokens per Sec: 3145.174139440824
Epoch Step: 15 / 67 Loss (mean): 0.1634592548607543 Loss (std): 0.36517567745637664 Loss ratio: 2.234047119372091 Tokens per Sec: 2784.0143075395968
Epoch Step: 20 / 67 Loss (mean): 0.199233239410205 Loss (std): 0.3958842808763006 Loss ratio: 1.9870393215923532 Tokens per Sec: 2843.3099689766286
Epoch Step: 25 / 67 Loss (mean): 0.03979456233147565 Loss (std): 0.08959382308253672 Loss ratio: 2.251408680820499 Tokens per Sec: 2342.265908465289
Epoch Step: 30 / 67 Loss (mean): 0.10173809535945111 Loss (std): 0.2735497897202713 Loss ratio: 2.688764604387293 Tokens per Sec: 2572.4586089715185
Epoch Step: 35 / 67 Loss (mean): 0.3993169725815733 Loss (std): 2.2697669359397223 Loss ratio: 5.6841233701281 Tokens per Sec: 2372.574304521471
Epoch Step: 40 / 67 Loss (mean): 0.2642789217243262 Loss (std): 0.5604200294319691 Loss ratio: 2.1205627212924405 Tokens per Sec: 2792.936596810579
Epoch Step: 45 / 67 Loss (mean): 0.1383078320113782 Loss (std): 0.3911412928113975 Loss ratio: 2.828048759951782 Tokens per Sec: 2874.358234864808
Epoch Step: 50 / 67 Loss (mean): 0.4891177504287043 Loss (std): 0.917743412374831 Loss ratio: 1.8763240785484534 Tokens per Sec: 2941.247198829989
Epoch Step: 55 / 67 Loss (mean): 0.1848384705481294 Loss (std): 0.6024018355899168 Loss ratio: 3.25907173871069 Tokens per Sec: 3133.168772631739
Epoch Step: 60 / 67 Loss (mean): 12.546001072068975 Loss (std): 25.914024574551824 Loss ratio: 2.0655206727380198 Tokens per Sec: 3177.0397169715
Epoch Step: 65 / 67 Loss (mean): 0.3256181347860547 Loss (std): 0.9007226961816143 Loss ratio: 2.766193279663088 Tokens per Sec: 2773.891353266182
Mean loss per sample: 0.4545072982751493 Std loss per sample: 3.7501123731197925 ratio: 8.250939836062988
Epoch ended with duration 0:00:11.262263
Train perplexity: 1.0634248685727619
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.6011651456356 Loss (std): 45.08310905080121 Loss ratio: 0.45263636208352825 Tokens per Sec: 4460.423925572021
Mean loss per sample: 102.92040271953236 Std loss per sample: 53.21410905058689 ratio: 0.5170413994162097
Epoch ended with duration 0:00:01.003186
b'BLEU = 2.28, 8.3/2.6/1.6/1.2 (BP=0.905, ratio=0.909, hyp_len=2830, ref_len=3113)\n'
Validation perplexity: 1141162.510651206
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.28
Epoch 855 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.09667178515928754 Loss (std): 0.2590193756513811 Loss ratio: 2.6793689102212297 Tokens per Sec: 2508.368246836682
Epoch Step: 10 / 67 Loss (mean): 0.11970621796081105 Loss (std): 0.4195852778852357 Loss ratio: 3.505125172550334 Tokens per Sec: 2291.964598243969
Epoch Step: 15 / 67 Loss (mean): 0.19350741318066866 Loss (std): 0.40529596931880596 Loss ratio: 2.0944725716549186 Tokens per Sec: 2467.9228927926238
Epoch Step: 20 / 67 Loss (mean): 0.31773759241968946 Loss (std): 0.7018416375211407 Loss ratio: 2.208871893868008 Tokens per Sec: 2502.002903471092
Epoch Step: 25 / 67 Loss (mean): 2.3328549203879447 Loss (std): 8.872782011339659 Loss ratio: 3.8034006889138867 Tokens per Sec: 2939.0156019295537
Epoch Step: 30 / 67 Loss (mean): 0.5275781037726119 Loss (std): 0.8002670246642453 Loss ratio: 1.5168692918483273 Tokens per Sec: 2230.033076248584
Epoch Step: 35 / 67 Loss (mean): 0.5385383600732894 Loss (std): 1.140457435259577 Loss ratio: 2.1176902516366205 Tokens per Sec: 3819.890918821612
Epoch Step: 40 / 67 Loss (mean): 0.030245279659062534 Loss (std): 0.04595170461155219 Loss ratio: 1.5193016936705184 Tokens per Sec: 2888.760573403376
Epoch Step: 45 / 67 Loss (mean): 0.4921796732260191 Loss (std): 1.102115023527428 Loss ratio: 2.239253434225663 Tokens per Sec: 2817.978573116689
Epoch Step: 50 / 67 Loss (mean): 0.3313580597205146 Loss (std): 0.9281285245749487 Loss ratio: 2.8009837013102468 Tokens per Sec: 2915.010438036595
Epoch Step: 55 / 67 Loss (mean): 0.11049312816430756 Loss (std): 0.24915189415485162 Loss ratio: 2.2549085024034534 Tokens per Sec: 2986.325849805471
Epoch Step: 60 / 67 Loss (mean): 0.09768352477749431 Loss (std): 0.3172050839354899 Loss ratio: 3.2472731165058453 Tokens per Sec: 3331.7908730631566
Epoch Step: 65 / 67 Loss (mean): 0.1970225169106925 Loss (std): 0.5262627110769729 Loss ratio: 2.671079018422652 Tokens per Sec: 3186.2058950812057
Mean loss per sample: 0.6016349302718603 Std loss per sample: 3.8252074365995883 ratio: 6.358020859711544
Epoch ended with duration 0:00:11.321034
Train perplexity: 1.0848058537372367
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the daemon method_1 and exception[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.87895396351814 Loss (std): 44.238739200013725 Loss ratio: 0.4429235333819415 Tokens per Sec: 4337.674603346674
Mean loss per sample: 106.10194689001827 Std loss per sample: 55.074879050389114 ratio: 0.5190751033765468
Epoch ended with duration 0:00:01.034681
b'BLEU = 2.83, 8.7/3.1/2.0/1.6 (BP=0.931, ratio=0.933, hyp_len=2905, ref_len=3113)\n'
Validation perplexity: 1756290.142786414
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.83
Model saved checkpoint_commit_msg_generator!
Epoch 856 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.25506510171271657 Loss (std): 0.7944745865478897 Loss ratio: 3.114791405069274 Tokens per Sec: 2566.706511444932
Epoch Step: 10 / 67 Loss (mean): 1.9979938645319635 Loss (std): 8.422079554849931 Loss ratio: 4.215267976722656 Tokens per Sec: 2710.2147592924416
Epoch Step: 15 / 67 Loss (mean): 0.06483053462397947 Loss (std): 0.10409840662871968 Loss ratio: 1.6057002650447962 Tokens per Sec: 2434.437268869992
Epoch Step: 20 / 67 Loss (mean): 0.15887092977482098 Loss (std): 0.4223128775693392 Loss ratio: 2.6582136717391482 Tokens per Sec: 2659.3481586502753
Epoch Step: 25 / 67 Loss (mean): 0.434962137623188 Loss (std): 1.7718712069755258 Loss ratio: 4.073621710288989 Tokens per Sec: 2743.8834186284
Epoch Step: 30 / 67 Loss (mean): 0.33177456449084275 Loss (std): 0.7434894247121305 Loss ratio: 2.2409476321764608 Tokens per Sec: 3188.311309308239
Epoch Step: 35 / 67 Loss (mean): 0.09792437655414687 Loss (std): 0.2562160269618778 Loss ratio: 2.616468299087962 Tokens per Sec: 2981.325951874159
Epoch Step: 40 / 67 Loss (mean): 0.16409295722723982 Loss (std): 0.5193919623585342 Loss ratio: 3.1652300691934507 Tokens per Sec: 3073.492222470107
Epoch Step: 45 / 67 Loss (mean): 0.6017554012378241 Loss (std): 1.304786193443996 Loss ratio: 2.168299928442723 Tokens per Sec: 2952.072251653192
Epoch Step: 50 / 67 Loss (mean): 0.05712578226541609 Loss (std): 0.10808639346068018 Loss ratio: 1.8920772578394187 Tokens per Sec: 2779.031804642888
Epoch Step: 55 / 67 Loss (mean): 0.1505241299564659 Loss (std): 0.3933159083936712 Loss ratio: 2.6129757966873797 Tokens per Sec: 2712.453450330958
Epoch Step: 60 / 67 Loss (mean): 0.048870534057641635 Loss (std): 0.08613209044081271 Loss ratio: 1.7624544544412377 Tokens per Sec: 2762.505719719424
Epoch Step: 65 / 67 Loss (mean): 0.28455342334109446 Loss (std): 0.5030330316790748 Loss ratio: 1.767798207354858 Tokens per Sec: 3023.141497799469
Mean loss per sample: 0.27647826507031315 Std loss per sample: 1.3704809242992344 ratio: 4.956921022166779
Epoch ended with duration 0:00:11.260251
Train perplexity: 1.0381158946039921
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily 0 during ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.7486070394516 Loss (std): 46.00324871384433 Loss ratio: 0.4521265701063329 Tokens per Sec: 4334.141392084227
Mean loss per sample: 107.07811635109734 Std loss per sample: 56.33511930523978 ratio: 0.5261123488624243
Epoch ended with duration 0:00:01.019366
b'BLEU = 2.89, 9.2/3.3/2.2/1.7 (BP=0.889, ratio=0.894, hyp_len=2784, ref_len=3113)\n'
Validation perplexity: 2004695.457625876
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.89
Epoch 857 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.21167195042676212 Loss (std): 0.48834234504193275 Loss ratio: 2.3070715985625965 Tokens per Sec: 2392.4844691812923
Epoch Step: 10 / 67 Loss (mean): 0.1725070335530745 Loss (std): 0.40978711070766866 Loss ratio: 2.375480595007688 Tokens per Sec: 2729.7265278107875
Epoch Step: 15 / 67 Loss (mean): 0.2224770491320669 Loss (std): 0.8295876831492095 Loss ratio: 3.7288686018877812 Tokens per Sec: 2685.8321822842813
Epoch Step: 20 / 67 Loss (mean): 0.12412644280902896 Loss (std): 0.383503244227259 Loss ratio: 3.0896176152996384 Tokens per Sec: 2910.7732827113514
Epoch Step: 25 / 67 Loss (mean): 0.08126270139109693 Loss (std): 0.2519967569314397 Loss ratio: 3.101013781447441 Tokens per Sec: 2569.0790563372125
Epoch Step: 30 / 67 Loss (mean): 9.6706051257828 Loss (std): 15.831546481515717 Loss ratio: 1.6370791977957235 Tokens per Sec: 2586.2792220348633
Epoch Step: 35 / 67 Loss (mean): 0.19531008923763693 Loss (std): 0.5967346416347358 Loss ratio: 3.0553190772888295 Tokens per Sec: 2927.338418128507
Epoch Step: 40 / 67 Loss (mean): 0.451618053326456 Loss (std): 0.8513684355252275 Loss ratio: 1.8851514664977498 Tokens per Sec: 3102.2115689405855
Epoch Step: 45 / 67 Loss (mean): 2.140036033601973 Loss (std): 9.16695550298475 Loss ratio: 4.283551939803328 Tokens per Sec: 3443.65949864617
Epoch Step: 50 / 67 Loss (mean): 0.2006487746575658 Loss (std): 0.6660069245449902 Loss ratio: 3.3192673400653496 Tokens per Sec: 2647.3243257699755
Epoch Step: 55 / 67 Loss (mean): 0.3062344794670935 Loss (std): 0.829875701438448 Loss ratio: 2.709935546391087 Tokens per Sec: 2608.6732855089567
Epoch Step: 60 / 67 Loss (mean): 0.08391051024932494 Loss (std): 0.1688070582613568 Loss ratio: 2.011751063839048 Tokens per Sec: 2835.8156196904183
Epoch Step: 65 / 67 Loss (mean): 0.1578191079233875 Loss (std): 0.5193348205827357 Loss ratio: 3.2906967186435008 Tokens per Sec: 2930.550444140952
Mean loss per sample: 0.49653148969887506 Std loss per sample: 3.379347460208928 ratio: 6.805907641947052
Epoch ended with duration 0:00:11.305613
Train perplexity: 1.0694885770360716
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.99977907538414 Loss (std): 45.44815835263476 Loss ratio: 0.4544825875902584 Tokens per Sec: 4316.747595313613
Mean loss per sample: 105.45319189180117 Std loss per sample: 53.51091263345024 ratio: 0.5074375812953523
Epoch ended with duration 0:00:01.022651
b'BLEU = 2.85, 8.6/3.2/2.1/1.7 (BP=0.913, ratio=0.916, hyp_len=2852, ref_len=3113)\n'
Validation perplexity: 1608473.8149377457
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.85
Epoch 858 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.18424207675866455 Loss (std): 0.5736500612996493 Loss ratio: 3.113567060205598 Tokens per Sec: 3046.6414856342867
Epoch Step: 10 / 67 Loss (mean): 0.19239747769552196 Loss (std): 0.521834418549332 Loss ratio: 2.7122726597027405 Tokens per Sec: 3533.3368766793983
Epoch Step: 15 / 67 Loss (mean): 0.2043838638987836 Loss (std): 0.5857284400658438 Loss ratio: 2.865825260823488 Tokens per Sec: 2751.942922719008
Epoch Step: 20 / 67 Loss (mean): 0.06303048427707836 Loss (std): 0.09884738178308779 Loss ratio: 1.5682472206394675 Tokens per Sec: 2436.328343925667
Epoch Step: 25 / 67 Loss (mean): 0.1536456051244386 Loss (std): 0.4372809907836388 Loss ratio: 2.846036438396543 Tokens per Sec: 2902.7019353713413
Epoch Step: 30 / 67 Loss (mean): 1.3463412967112163 Loss (std): 5.573068382943498 Loss ratio: 4.139417246248887 Tokens per Sec: 2498.5557667029007
Epoch Step: 35 / 67 Loss (mean): 0.134205292986735 Loss (std): 0.31300438305434464 Loss ratio: 2.3322804644171695 Tokens per Sec: 2790.474358448862
Epoch Step: 40 / 67 Loss (mean): 0.29658138830473035 Loss (std): 0.7593102326199902 Loss ratio: 2.560208639389795 Tokens per Sec: 3247.8325290950947
Epoch Step: 45 / 67 Loss (mean): 0.40125080314828665 Loss (std): 0.9937494332294151 Loss ratio: 2.4766291442466324 Tokens per Sec: 2807.5588049806715
Epoch Step: 50 / 67 Loss (mean): 0.2158192041165421 Loss (std): 0.6339941823738727 Loss ratio: 2.9376170900505993 Tokens per Sec: 2868.850562036055
Epoch Step: 55 / 67 Loss (mean): 0.11596076923524379 Loss (std): 0.36845849446784235 Loss ratio: 3.17744093021985 Tokens per Sec: 2545.059488558795
Epoch Step: 60 / 67 Loss (mean): 0.03599270166125193 Loss (std): 0.046064399136278265 Loss ratio: 1.2798261039089782 Tokens per Sec: 2551.093757687996
Epoch Step: 65 / 67 Loss (mean): 0.07805384602943377 Loss (std): 0.17098732693718252 Loss ratio: 2.190632949370668 Tokens per Sec: 2445.2994306299743
Mean loss per sample: 0.4099735285183431 Std loss per sample: 2.724772228866098 ratio: 6.646215034208447
Epoch ended with duration 0:00:11.312864
Train perplexity: 1.0570365670153994
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.47934621572495 Loss (std): 44.89684217531708 Loss ratio: 0.44682657547278865 Tokens per Sec: 4334.629684676682
Mean loss per sample: 106.57557628694616 Std loss per sample: 53.4007828484307 ratio: 0.5010602307666946
Epoch ended with duration 0:00:01.018797
b'BLEU = 2.51, 8.2/2.8/1.7/1.2 (BP=0.962, ratio=0.963, hyp_len=2997, ref_len=3113)\n'
Validation perplexity: 1872714.4909041438
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.51
Epoch 859 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.218443803613809 Loss (std): 0.5795279313501056 Loss ratio: 2.6529840707895023 Tokens per Sec: 2832.598620560558
Epoch Step: 10 / 67 Loss (mean): 0.17979077671952837 Loss (std): 0.5651568641511774 Loss ratio: 3.1434141086826486 Tokens per Sec: 2879.474290796123
Epoch Step: 15 / 67 Loss (mean): 0.09304443031783194 Loss (std): 0.18738892432088258 Loss ratio: 2.013972504112044 Tokens per Sec: 2683.157100189133
Epoch Step: 20 / 67 Loss (mean): 0.34968950426809897 Loss (std): 0.6617290416381117 Loss ratio: 1.8923331514427701 Tokens per Sec: 2569.8538005491496
Epoch Step: 25 / 67 Loss (mean): 0.12257796316214353 Loss (std): 0.3248771991164716 Loss ratio: 2.6503719815178437 Tokens per Sec: 2515.414475360012
Epoch Step: 30 / 67 Loss (mean): 0.14550911223886942 Loss (std): 0.3636247584161974 Loss ratio: 2.4989827291315394 Tokens per Sec: 2891.5699006500054
Epoch Step: 35 / 67 Loss (mean): 0.06184185828601585 Loss (std): 0.14221561592712353 Loss ratio: 2.299665952296948 Tokens per Sec: 2849.730356906318
Epoch Step: 40 / 67 Loss (mean): 0.14895233578135958 Loss (std): 0.41982288001504603 Loss ratio: 2.8185048446053584 Tokens per Sec: 2760.624529723342
Epoch Step: 45 / 67 Loss (mean): 0.10837938169470362 Loss (std): 0.4124642606534863 Loss ratio: 3.8057447293376 Tokens per Sec: 3113.7820599774172
Epoch Step: 50 / 67 Loss (mean): 0.1404644898107108 Loss (std): 0.29814025950389583 Loss ratio: 2.1225311814086822 Tokens per Sec: 3035.229240625935
Epoch Step: 55 / 67 Loss (mean): 0.5527901749046578 Loss (std): 3.247833993066069 Loss ratio: 5.8753468142342395 Tokens per Sec: 2934.7320439870196
Epoch Step: 60 / 67 Loss (mean): 0.13087669385640766 Loss (std): 0.3395707587995048 Loss ratio: 2.594585397855996 Tokens per Sec: 2983.2582378999264
Epoch Step: 65 / 67 Loss (mean): 0.19443564292123483 Loss (std): 0.41507808911607474 Loss ratio: 2.134783946399279 Tokens per Sec: 2663.1061897808117
Mean loss per sample: 0.2957794983377454 Std loss per sample: 1.699408001454624 ratio: 5.745523307075529
Epoch ended with duration 0:00:11.285704
Train perplexity: 1.0408304266516757
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.518315076828 Loss (std): 46.692734644774056 Loss ratio: 0.4599439481382003 Tokens per Sec: 4331.986707073192
Mean loss per sample: 107.41444963625953 Std loss per sample: 55.522088731085496 ratio: 0.5168959010552253
Epoch ended with duration 0:00:01.019138
b'BLEU = 2.62, 8.8/3.1/1.9/1.5 (BP=0.888, ratio=0.894, hyp_len=2782, ref_len=3113)\n'
Validation perplexity: 2098182.1819212493
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.62
Epoch 860 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1748865197324676 Loss (std): 0.44349837297687134 Loss ratio: 2.5359208568808635 Tokens per Sec: 2425.3722547752213
Epoch Step: 10 / 67 Loss (mean): 0.4070929124154645 Loss (std): 0.9601460419230453 Loss ratio: 2.3585427617151793 Tokens per Sec: 3399.096883416699
Epoch Step: 15 / 67 Loss (mean): 0.31411694805717616 Loss (std): 0.9141925930840166 Loss ratio: 2.910357428143653 Tokens per Sec: 2687.7845616960826
Epoch Step: 20 / 67 Loss (mean): 0.10342146733546542 Loss (std): 0.40541307023105955 Loss ratio: 3.920008878969316 Tokens per Sec: 2838.8823651504335
Epoch Step: 25 / 67 Loss (mean): 1.3207443509105588 Loss (std): 6.898580510486994 Loss ratio: 5.22325195313606 Tokens per Sec: 2619.3120252370927
Epoch Step: 30 / 67 Loss (mean): 0.5161209887471614 Loss (std): 0.8601535187640471 Loss ratio: 1.6665734149893703 Tokens per Sec: 2397.9430561579243
Epoch Step: 35 / 67 Loss (mean): 0.2636426191024839 Loss (std): 0.6839467809997926 Loss ratio: 2.5942193387705914 Tokens per Sec: 2682.2653325095002
Epoch Step: 40 / 67 Loss (mean): 0.09809297640185832 Loss (std): 0.3814934464486331 Loss ratio: 3.8891005293362255 Tokens per Sec: 2735.4712458277504
Epoch Step: 45 / 67 Loss (mean): 6.753927793422918 Loss (std): 17.16616536491348 Loss ratio: 2.5416566315130233 Tokens per Sec: 3263.2705182195405
Epoch Step: 50 / 67 Loss (mean): 0.532975954570702 Loss (std): 1.3108588841740068 Loss ratio: 2.459508488014002 Tokens per Sec: 2893.636292104772
Epoch Step: 55 / 67 Loss (mean): 0.0681074837465303 Loss (std): 0.1414817975416583 Loss ratio: 2.077331150100902 Tokens per Sec: 2898.843558236427
Epoch Step: 60 / 67 Loss (mean): 0.07954523085754772 Loss (std): 0.16703656910185768 Loss ratio: 2.0998942023437257 Tokens per Sec: 2491.1597842730407
Epoch Step: 65 / 67 Loss (mean): 0.7326510100810992 Loss (std): 5.040473426380535 Loss ratio: 6.879774076640651 Tokens per Sec: 2725.051693119127
Mean loss per sample: 0.5469797481542557 Std loss per sample: 4.345195933699241 ratio: 7.943979550178588
Epoch ended with duration 0:00:11.404230
Train perplexity: 1.0768134858045828
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.52651572227478 Loss (std): 46.8593134636425 Loss ratio: 0.4661388403543301 Tokens per Sec: 4341.347345890299
Mean loss per sample: 105.91371894322458 Std loss per sample: 54.535961546151654 ratio: 0.51490932515915
Epoch ended with duration 0:00:01.018282
b'BLEU = 2.69, 8.8/3.1/2.0/1.6 (BP=0.883, ratio=0.889, hyp_len=2769, ref_len=3113)\n'
Validation perplexity: 1712056.7964570706
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.69
Model saved checkpoint_commit_msg_generator!
Epoch 861 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.16786212332590367 Loss (std): 0.5966786265048176 Loss ratio: 3.5545757117963315 Tokens per Sec: 2741.328586242352
Epoch Step: 10 / 67 Loss (mean): 0.17001825225634093 Loss (std): 0.4624161475549321 Loss ratio: 2.719802970670086 Tokens per Sec: 2747.819173673634
Epoch Step: 15 / 67 Loss (mean): 0.11905566226778319 Loss (std): 0.41381570243650073 Loss ratio: 3.475817063666702 Tokens per Sec: 2760.665388106065
Epoch Step: 20 / 67 Loss (mean): 0.15229513721078547 Loss (std): 0.37937535967793545 Loss ratio: 2.4910536647854853 Tokens per Sec: 2553.5021326403908
Epoch Step: 25 / 67 Loss (mean): 0.37109892279750056 Loss (std): 0.8197155450413145 Loss ratio: 2.208886888870364 Tokens per Sec: 3160.9080005818273
Epoch Step: 30 / 67 Loss (mean): 1.0094797946594554 Loss (std): 1.2551151296119851 Loss ratio: 1.243328629510008 Tokens per Sec: 2942.936779321115
Epoch Step: 35 / 67 Loss (mean): 0.1305025419615049 Loss (std): 0.2652212728874216 Loss ratio: 2.0323073321104768 Tokens per Sec: 2238.481990306384
Epoch Step: 40 / 67 Loss (mean): 0.22570895720036788 Loss (std): 0.8777536695327272 Loss ratio: 3.8888738861768863 Tokens per Sec: 2578.520709637412
Epoch Step: 45 / 67 Loss (mean): 0.0943755427083488 Loss (std): 0.2799017028218529 Loss ratio: 2.9658288025621258 Tokens per Sec: 2950.2171921540953
Epoch Step: 50 / 67 Loss (mean): 0.07829662189760711 Loss (std): 0.2033220352260399 Loss ratio: 2.5968174654065606 Tokens per Sec: 2909.5218557738604
Epoch Step: 55 / 67 Loss (mean): 0.6574366644708789 Loss (std): 2.08568981889538 Loss ratio: 3.172457411656519 Tokens per Sec: 3728.8255684408678
Epoch Step: 60 / 67 Loss (mean): 0.7922467700855123 Loss (std): 3.8876942180969127 Loss ratio: 4.907175850874456 Tokens per Sec: 2569.4828149831415
Epoch Step: 65 / 67 Loss (mean): 0.11918863685355063 Loss (std): 0.2805596073132475 Loss ratio: 2.3539123755394273 Tokens per Sec: 2855.6045667926755
Mean loss per sample: 0.28412226491487386 Std loss per sample: 1.329535844700017 ratio: 4.679449690781398
Epoch ended with duration 0:00:11.295488
Train perplexity: 1.039190101634072
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.57191523909569 Loss (std): 45.376438066486976 Loss ratio: 0.4511839906658915 Tokens per Sec: 4429.029567847721
Mean loss per sample: 105.61219516952262 Std loss per sample: 55.10085152626216 ratio: 0.5217281151842118
Epoch ended with duration 0:00:01.019680
b'BLEU = 2.66, 8.7/2.9/1.8/1.4 (BP=0.946, ratio=0.947, hyp_len=2949, ref_len=3113)\n'
Validation perplexity: 1643508.9840700575
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.66
Epoch 862 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.7186325385137025 Loss (std): 3.9489454273003415 Loss ratio: 5.495082974488839 Tokens per Sec: 2592.755738004345
Epoch Step: 10 / 67 Loss (mean): 0.1704038302787012 Loss (std): 0.4162769509682296 Loss ratio: 2.4428849415379608 Tokens per Sec: 2526.2396654158315
Epoch Step: 15 / 67 Loss (mean): 1.877336768378484 Loss (std): 7.836750149066486 Loss ratio: 4.174397625970613 Tokens per Sec: 3062.0527161110826
Epoch Step: 20 / 67 Loss (mean): 0.3389175017728121 Loss (std): 0.8477711170938048 Loss ratio: 2.5014084922120503 Tokens per Sec: 2610.359567461038
Epoch Step: 25 / 67 Loss (mean): 0.6982407950449669 Loss (std): 1.1495892605162696 Loss ratio: 1.6464080424321752 Tokens per Sec: 3019.2910436713096
Epoch Step: 30 / 67 Loss (mean): 0.15880172305332962 Loss (std): 0.5057278878998512 Loss ratio: 3.184649877696951 Tokens per Sec: 3050.310397570848
Epoch Step: 35 / 67 Loss (mean): 0.0952408476441633 Loss (std): 0.19645905864640506 Loss ratio: 2.0627605014647807 Tokens per Sec: 3244.6209864549933
Epoch Step: 40 / 67 Loss (mean): 0.15542565862369884 Loss (std): 0.5136357449359162 Loss ratio: 3.304703673024028 Tokens per Sec: 2590.2591041232677
Epoch Step: 45 / 67 Loss (mean): 5.171766881900112 Loss (std): 12.161838365784757 Loss ratio: 2.351582862009528 Tokens per Sec: 3431.1254931999238
Epoch Step: 50 / 67 Loss (mean): 0.15263693856422833 Loss (std): 0.7142849627222911 Loss ratio: 4.679633707549278 Tokens per Sec: 2870.7676595315183
Epoch Step: 55 / 67 Loss (mean): 0.2887475809729949 Loss (std): 0.8947056633759615 Loss ratio: 3.0985737105088984 Tokens per Sec: 2873.5348851860017
Epoch Step: 60 / 67 Loss (mean): 0.10623246309296519 Loss (std): 0.16974817951708393 Loss ratio: 1.5978936623971096 Tokens per Sec: 2371.1226364741738
Epoch Step: 65 / 67 Loss (mean): 0.11651791829353897 Loss (std): 0.21119543602339286 Loss ratio: 1.8125575801254583 Tokens per Sec: 2290.871726826643
Mean loss per sample: 0.46243068650313557 Std loss per sample: 3.407021577285269 ratio: 7.367637305925561
Epoch ended with duration 0:00:11.333604
Train perplexity: 1.0645655055280572
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.56102642416954 Loss (std): 44.18076444148195 Loss ratio: 0.44375561430287325 Tokens per Sec: 4439.918031586334
Mean loss per sample: 102.45553985555641 Std loss per sample: 52.621944308031985 ratio: 0.51360760367101
Epoch ended with duration 0:00:01.005233
b'BLEU = 2.24, 8.1/2.5/1.5/1.1 (BP=0.938, ratio=0.940, hyp_len=2925, ref_len=3113)\n'
Validation perplexity: 1071490.0442291046
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.24
Epoch 863 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.16436734081798932 Loss (std): 0.4096950461989087 Loss ratio: 2.492557488367356 Tokens per Sec: 2636.1382231978323
Epoch Step: 10 / 67 Loss (mean): 0.15447205927011964 Loss (std): 0.44837302931276085 Loss ratio: 2.9026157314877725 Tokens per Sec: 2734.425011413497
Epoch Step: 15 / 67 Loss (mean): 0.24329959818533098 Loss (std): 0.4202185013505002 Loss ratio: 1.7271647979887048 Tokens per Sec: 2800.0447074855983
Epoch Step: 20 / 67 Loss (mean): 0.28225415666202025 Loss (std): 0.7866536900633244 Loss ratio: 2.787040231280943 Tokens per Sec: 2996.8181402550117
Epoch Step: 25 / 67 Loss (mean): 0.2098318269071342 Loss (std): 0.542055312207658 Loss ratio: 2.5832845293176465 Tokens per Sec: 2927.455496590735
Epoch Step: 30 / 67 Loss (mean): 0.972078927820121 Loss (std): 1.2640073639665033 Loss ratio: 1.30031351137405 Tokens per Sec: 2875.297595989999
Epoch Step: 35 / 67 Loss (mean): 0.2000782365057603 Loss (std): 0.5953475419864225 Loss ratio: 2.9755737174806733 Tokens per Sec: 2476.992805237269
Epoch Step: 40 / 67 Loss (mean): 0.36481237383577536 Loss (std): 0.7908888921644309 Loss ratio: 2.1679332963647195 Tokens per Sec: 2631.304619023891
Epoch Step: 45 / 67 Loss (mean): 0.35287019277393483 Loss (std): 0.8210801517259575 Loss ratio: 2.3268617427598364 Tokens per Sec: 2756.060303401594
Epoch Step: 50 / 67 Loss (mean): 0.25067691448975893 Loss (std): 0.8890962905997095 Loss ratio: 3.5467816907249845 Tokens per Sec: 2802.1914347273623
Epoch Step: 55 / 67 Loss (mean): 0.8845181699243767 Loss (std): 4.258254472195273 Loss ratio: 4.814208025324499 Tokens per Sec: 2742.297133458558
Epoch Step: 60 / 67 Loss (mean): 0.28969257184326125 Loss (std): 0.593079948122401 Loss ratio: 2.0472735781547344 Tokens per Sec: 3141.5557609896496
Epoch Step: 65 / 67 Loss (mean): 0.23432750590040996 Loss (std): 0.8723962106761703 Loss ratio: 3.7229782620864915 Tokens per Sec: 2529.4068183338522
Mean loss per sample: 0.4052129791683841 Std loss per sample: 2.877288306680317 ratio: 7.100681504786339
Epoch ended with duration 0:00:11.342894
Train perplexity: 1.056355947956404
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.71802788972855 Loss (std): 45.04164520458229 Loss ratio: 0.4472053926025664 Tokens per Sec: 4450.858184002403
Mean loss per sample: 104.18771501679402 Std loss per sample: 54.22783350256674 ratio: 0.5204820308596436
Epoch ended with duration 0:00:01.003943
b'BLEU = 2.51, 8.2/2.8/1.7/1.4 (BP=0.924, ratio=0.927, hyp_len=2885, ref_len=3113)\n'
Validation perplexity: 1354985.8412149434
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.51
Epoch 864 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.7099930746298924 Loss (std): 6.660955895501063 Loss ratio: 3.895311621038435 Tokens per Sec: 2821.0997439916337
Epoch Step: 10 / 67 Loss (mean): 0.2610200522431114 Loss (std): 0.4677201573118044 Loss ratio: 1.7918935855402196 Tokens per Sec: 3259.338641508739
Epoch Step: 15 / 67 Loss (mean): 0.04679075875606031 Loss (std): 0.09823888783462925 Loss ratio: 2.0995361145304234 Tokens per Sec: 2599.6522434020476
Epoch Step: 20 / 67 Loss (mean): 0.3048514398342377 Loss (std): 0.6665814577930403 Loss ratio: 2.1865780202825764 Tokens per Sec: 3094.0235119864556
Epoch Step: 25 / 67 Loss (mean): 0.14106363014582257 Loss (std): 0.8062010620379909 Loss ratio: 5.715158905272689 Tokens per Sec: 3081.964700672057
Epoch Step: 30 / 67 Loss (mean): 0.12956840384686075 Loss (std): 0.4381891768275292 Loss ratio: 3.3819138294350912 Tokens per Sec: 2645.390269390502
Epoch Step: 35 / 67 Loss (mean): 1.8221484619311923 Loss (std): 10.053273944881099 Loss ratio: 5.517263908466712 Tokens per Sec: 2233.0059843344447
Epoch Step: 40 / 67 Loss (mean): 0.15304167526164747 Loss (std): 0.43694358889636004 Loss ratio: 2.8550627673758804 Tokens per Sec: 2910.3324676603097
Epoch Step: 45 / 67 Loss (mean): 0.1805544118005855 Loss (std): 0.6357601149087613 Loss ratio: 3.5211552493712013 Tokens per Sec: 2245.3574846723163
Epoch Step: 50 / 67 Loss (mean): 0.6254886844053544 Loss (std): 1.4158988536697477 Loss ratio: 2.263668214902765 Tokens per Sec: 2872.876191866807
Epoch Step: 55 / 67 Loss (mean): 0.47275173758953315 Loss (std): 0.9916618396038335 Loss ratio: 2.0976376409743502 Tokens per Sec: 3093.618745201269
Epoch Step: 60 / 67 Loss (mean): 0.5219465248756023 Loss (std): 1.9435752824179133 Loss ratio: 3.723705762541735 Tokens per Sec: 2882.167129036965
Epoch Step: 65 / 67 Loss (mean): 0.12762735260184854 Loss (std): 0.31993738881628314 Loss ratio: 2.5068089425499 Tokens per Sec: 3244.0846251524904
Mean loss per sample: 0.4118130282122225 Std loss per sample: 3.289637362047606 ratio: 7.9881818609010455
Epoch ended with duration 0:00:11.301489
Train perplexity: 1.057299679016304
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily not active ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.05487674474716 Loss (std): 45.87544023330314 Loss ratio: 0.4539656245307107 Tokens per Sec: 4443.061414569776
Mean loss per sample: 105.26954431575341 Std loss per sample: 54.65481893625458 ratio: 0.5191892801617797
Epoch ended with duration 0:00:01.019997
b'BLEU = 2.50, 8.1/2.7/1.8/1.4 (BP=0.924, ratio=0.926, hyp_len=2884, ref_len=3113)\n'
Validation perplexity: 1568936.8939547075
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.5
Epoch 865 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.20790342259306271 Loss (std): 0.7565211520415008 Loss ratio: 3.6388104755844664 Tokens per Sec: 2322.2215362821225
Epoch Step: 10 / 67 Loss (mean): 0.1724386012283503 Loss (std): 0.638964660746912 Loss ratio: 3.705461864079776 Tokens per Sec: 2687.1683876817847
Epoch Step: 15 / 67 Loss (mean): 0.47706690892118786 Loss (std): 0.9506958649888609 Loss ratio: 1.9927935625187478 Tokens per Sec: 3939.277742108821
Epoch Step: 20 / 67 Loss (mean): 0.1587394055495679 Loss (std): 0.41153887211260026 Loss ratio: 2.592543865764278 Tokens per Sec: 2391.1366685653275
Epoch Step: 25 / 67 Loss (mean): 0.07557397665129884 Loss (std): 0.20360559564419264 Loss ratio: 2.6941230919161034 Tokens per Sec: 2609.93449308419
Epoch Step: 30 / 67 Loss (mean): 0.18588479960999393 Loss (std): 0.4234950926483451 Loss ratio: 2.278266396912942 Tokens per Sec: 3077.658591535193
Epoch Step: 35 / 67 Loss (mean): 0.08715351391924742 Loss (std): 0.25333667234108137 Loss ratio: 2.906786668129204 Tokens per Sec: 2341.47374437837
Epoch Step: 40 / 67 Loss (mean): 0.1631227138450413 Loss (std): 0.4706033964510179 Loss ratio: 2.8849654677647676 Tokens per Sec: 2773.2516445634997
Epoch Step: 45 / 67 Loss (mean): 0.23177569986273738 Loss (std): 0.4921202909303545 Loss ratio: 2.1232609424620392 Tokens per Sec: 2736.8774775243046
Epoch Step: 50 / 67 Loss (mean): 0.1589164341183391 Loss (std): 0.43676940451715485 Loss ratio: 2.748421879337596 Tokens per Sec: 3225.716759661074
Epoch Step: 55 / 67 Loss (mean): 0.08288629380695056 Loss (std): 0.25251303079763526 Loss ratio: 3.0464992364812478 Tokens per Sec: 3166.7629347257694
Epoch Step: 60 / 67 Loss (mean): 0.15137178716531707 Loss (std): 0.5253270369241784 Loss ratio: 3.4704421924440583 Tokens per Sec: 3007.342292615206
Epoch Step: 65 / 67 Loss (mean): 0.07471747422187036 Loss (std): 0.12936246130386417 Loss ratio: 1.7313548490641941 Tokens per Sec: 2577.8040780218203
Mean loss per sample: 0.24549150520261215 Std loss per sample: 1.1178462853561724 ratio: 4.553502918292742
Epoch ended with duration 0:00:11.238431
Train perplexity: 1.0337727047326153
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 102.14091578125954 Loss (std): 45.598878818738 Loss ratio: 0.44643107485339706 Tokens per Sec: 4445.819973760839
Mean loss per sample: 105.2151182616954 Std loss per sample: 54.40484155542871 ratio: 0.5170819788474764
Epoch ended with duration 0:00:01.005917
b'BLEU = 2.48, 7.9/2.7/1.7/1.4 (BP=0.918, ratio=0.922, hyp_len=2869, ref_len=3113)\n'
Validation perplexity: 1557407.4491278166
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.48
Model saved checkpoint_commit_msg_generator!
Epoch 866 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.17143604159400638 Loss (std): 0.5036367785525975 Loss ratio: 2.937753192793068 Tokens per Sec: 2991.6681825475616
Epoch Step: 10 / 67 Loss (mean): 0.21385654247796992 Loss (std): 0.4455895820924518 Loss ratio: 2.0835910696459217 Tokens per Sec: 2778.921949453191
Epoch Step: 15 / 67 Loss (mean): 0.054003504656975565 Loss (std): 0.10480027867970994 Loss ratio: 1.9406199531935937 Tokens per Sec: 2991.853901932507
Epoch Step: 20 / 67 Loss (mean): 0.12720429790442722 Loss (std): 0.273362893980227 Loss ratio: 2.1490067433540143 Tokens per Sec: 2956.6173428098627
Epoch Step: 25 / 67 Loss (mean): 0.16392146285943454 Loss (std): 0.3699109195760719 Loss ratio: 2.256635056345714 Tokens per Sec: 2902.88903782853
Epoch Step: 30 / 67 Loss (mean): 0.3927996212250946 Loss (std): 0.7755392270899041 Loss ratio: 1.9743889382354567 Tokens per Sec: 2718.3356284753454
Epoch Step: 35 / 67 Loss (mean): 0.28640636596320235 Loss (std): 0.8962819912373895 Loss ratio: 3.1294066674221352 Tokens per Sec: 2857.1503777106113
Epoch Step: 40 / 67 Loss (mean): 0.2629921026600641 Loss (std): 0.8599666538444286 Loss ratio: 3.2699333749804507 Tokens per Sec: 2824.335732470991
Epoch Step: 45 / 67 Loss (mean): 0.1801269637196583 Loss (std): 0.673174604871363 Loss ratio: 3.737222850872357 Tokens per Sec: 2597.345183516587
Epoch Step: 50 / 67 Loss (mean): 0.1751405478835295 Loss (std): 0.5765516356770051 Loss ratio: 3.2919369194871915 Tokens per Sec: 2422.0935243189874
Epoch Step: 55 / 67 Loss (mean): 0.8954347880280693 Loss (std): 1.5748605630783448 Loss ratio: 1.7587663380227947 Tokens per Sec: 2675.8347786539543
Epoch Step: 60 / 67 Loss (mean): 0.2185035320417228 Loss (std): 0.764458539764913 Loss ratio: 3.4986095310301035 Tokens per Sec: 2678.9540496562095
Epoch Step: 65 / 67 Loss (mean): 0.12145935159060173 Loss (std): 0.5000076094531297 Loss ratio: 4.11666621717598 Tokens per Sec: 2790.039642834378
Mean loss per sample: 0.3134929804612169 Std loss per sample: 2.835820845639393 ratio: 9.045883073577212
Epoch ended with duration 0:00:11.290660
Train perplexity: 1.043327902680875
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily 0 during ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.64710861444473 Loss (std): 45.131190317096554 Loss ratio: 0.44841020212496585 Tokens per Sec: 4466.504189043655
Mean loss per sample: 104.33206720491413 Std loss per sample: 54.210804331234925 ratio: 0.5195986793280135
Epoch ended with duration 0:00:01.003278
b'BLEU = 2.85, 9.0/3.1/2.1/1.6 (BP=0.915, ratio=0.918, hyp_len=2859, ref_len=3113)\n'
Validation perplexity: 1381753.4548492022
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.85
Epoch 867 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2886622937908214 Loss (std): 0.6887066257654393 Loss ratio: 2.3858558619523382 Tokens per Sec: 2640.271962265688
Epoch Step: 10 / 67 Loss (mean): 0.5087803961241661 Loss (std): 0.8569392234326165 Loss ratio: 1.6843007905978424 Tokens per Sec: 2966.717665353782
Epoch Step: 15 / 67 Loss (mean): 0.17483781942428323 Loss (std): 0.6379687558674256 Loss ratio: 3.648917367925135 Tokens per Sec: 2517.934721598519
Epoch Step: 20 / 67 Loss (mean): 0.13691569002139659 Loss (std): 0.3012968215265788 Loss ratio: 2.200601125258131 Tokens per Sec: 2442.7408288859924
Epoch Step: 25 / 67 Loss (mean): 0.16284844294295908 Loss (std): 0.48177089027800507 Loss ratio: 2.958400348026385 Tokens per Sec: 2841.6702278214557
Epoch Step: 30 / 67 Loss (mean): 0.931395405954845 Loss (std): 6.761858313432104 Loss ratio: 7.259922338246884 Tokens per Sec: 2596.692157063106
Epoch Step: 35 / 67 Loss (mean): 0.12424029491228339 Loss (std): 0.37028969278677126 Loss ratio: 2.980431534295734 Tokens per Sec: 2560.257530016154
Epoch Step: 40 / 67 Loss (mean): 0.1545067189999827 Loss (std): 0.3855312834800376 Loss ratio: 2.4952395984803792 Tokens per Sec: 3274.751931150265
Epoch Step: 45 / 67 Loss (mean): 0.1601863526489069 Loss (std): 0.3487488208811945 Loss ratio: 2.177144401593155 Tokens per Sec: 2702.940433748506
Epoch Step: 50 / 67 Loss (mean): 0.45718281104564085 Loss (std): 0.9729279335260199 Loss ratio: 2.1280938609673403 Tokens per Sec: 3304.9368425430957
Epoch Step: 55 / 67 Loss (mean): 0.13249137797527055 Loss (std): 0.3343090709602736 Loss ratio: 2.523251520734219 Tokens per Sec: 2627.5508333846037
Epoch Step: 60 / 67 Loss (mean): 0.38664563728889334 Loss (std): 0.8943120616127436 Loss ratio: 2.313001817073479 Tokens per Sec: 3163.7974681248143
Epoch Step: 65 / 67 Loss (mean): 0.14276392536976346 Loss (std): 0.34088053110609773 Loss ratio: 2.387721759703689 Tokens per Sec: 3099.0713539197845
Mean loss per sample: 0.32349607532003694 Std loss per sample: 2.3966635139713643 ratio: 7.40863242807607
Epoch ended with duration 0:00:11.330205
Train perplexity: 1.0447409152125717
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily not active[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.86159917712212 Loss (std): 44.920575012084846 Loss ratio: 0.44536845914172196 Tokens per Sec: 4331.598416042228
Mean loss per sample: 106.60770587583424 Std loss per sample: 54.21753426351873 ratio: 0.5085704998348409
Epoch ended with duration 0:00:01.021435
b'BLEU = 2.19, 8.2/2.4/1.5/1.1 (BP=0.924, ratio=0.927, hyp_len=2885, ref_len=3113)\n'
Validation perplexity: 1880886.3199320713
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.19
Epoch 868 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.19769095719993857 Loss (std): 0.7819519769017461 Loss ratio: 3.9554261255910856 Tokens per Sec: 2548.007906003181
Epoch Step: 10 / 67 Loss (mean): 0.2049126759147839 Loss (std): 0.5721320284771362 Loss ratio: 2.7920772881569618 Tokens per Sec: 2927.586286705214
Epoch Step: 15 / 67 Loss (mean): 0.12654425437949612 Loss (std): 0.34670169187633754 Loss ratio: 2.7397663653428848 Tokens per Sec: 2603.0866828138496
Epoch Step: 20 / 67 Loss (mean): 0.23473176196330314 Loss (std): 0.6190149127944116 Loss ratio: 2.6371161176355224 Tokens per Sec: 2628.7128814257794
Epoch Step: 25 / 67 Loss (mean): 0.2112040759025149 Loss (std): 0.8860850360110494 Loss ratio: 4.195397424148378 Tokens per Sec: 2899.0258771015747
Epoch Step: 30 / 67 Loss (mean): 0.1828426578987319 Loss (std): 0.47686370160278213 Loss ratio: 2.6080549642135202 Tokens per Sec: 2725.838873544249
Epoch Step: 35 / 67 Loss (mean): 1.3606696305778314 Loss (std): 7.0896519902750805 Loss ratio: 5.210413924844005 Tokens per Sec: 2462.4761968979305
Epoch Step: 40 / 67 Loss (mean): 0.15575398005603347 Loss (std): 0.4148394728064873 Loss ratio: 2.663427750977832 Tokens per Sec: 3021.127352005667
Epoch Step: 45 / 67 Loss (mean): 0.18680676863186818 Loss (std): 0.4866617780241821 Loss ratio: 2.6051613739073067 Tokens per Sec: 3025.8412417677037
Epoch Step: 50 / 67 Loss (mean): 0.05213820192238927 Loss (std): 0.10339897851439261 Loss ratio: 1.9831711624483708 Tokens per Sec: 3315.910120126398
Epoch Step: 55 / 67 Loss (mean): 0.152886977918115 Loss (std): 0.5788934286906585 Loss ratio: 3.7864142294755085 Tokens per Sec: 2397.2960872604785
Epoch Step: 60 / 67 Loss (mean): 0.2438055896404876 Loss (std): 0.6986326323136776 Loss ratio: 2.865531644880955 Tokens per Sec: 3183.320720466958
Epoch Step: 65 / 67 Loss (mean): 0.18975839442646247 Loss (std): 0.44044390241261044 Loss ratio: 2.3210773032931447 Tokens per Sec: 2704.842387526878
Mean loss per sample: 0.44119738761517285 Std loss per sample: 3.3952754451168885 ratio: 7.695592812708043
Epoch ended with duration 0:00:11.354324
Train perplexity: 1.0615115475339838
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.61397731304169 Loss (std): 44.50064462793447 Loss ratio: 0.44229088061471805 Tokens per Sec: 4443.90224442625
Mean loss per sample: 105.67185433428796 Std loss per sample: 54.618997585326184 ratio: 0.5168736550467028
Epoch ended with duration 0:00:01.016612
b'BLEU = 2.60, 8.9/2.9/1.8/1.4 (BP=0.902, ratio=0.907, hyp_len=2823, ref_len=3113)\n'
Validation perplexity: 1656850.4252360046
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.6
Epoch 869 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.16053977519777618 Loss (std): 0.5256783471377835 Loss ratio: 3.2744430250395995 Tokens per Sec: 2257.270501609729
Epoch Step: 10 / 67 Loss (mean): 0.1136205578031877 Loss (std): 0.36735558596431706 Loss ratio: 3.233178863640561 Tokens per Sec: 2445.403729819689
Epoch Step: 15 / 67 Loss (mean): 0.16778239634049896 Loss (std): 0.6976928328855992 Loss ratio: 4.1583196336622565 Tokens per Sec: 2597.197409754622
Epoch Step: 20 / 67 Loss (mean): 0.1521700135544961 Loss (std): 0.7358957938634574 Loss ratio: 4.8360105691908455 Tokens per Sec: 2808.5928775185002
Epoch Step: 25 / 67 Loss (mean): 0.19948935058164352 Loss (std): 0.8764870656056498 Loss ratio: 4.393653410821729 Tokens per Sec: 2552.542209277801
Epoch Step: 30 / 67 Loss (mean): 0.03796672106091137 Loss (std): 0.042569314448114036 Loss ratio: 1.1212270445956753 Tokens per Sec: 2862.5431516713493
Epoch Step: 35 / 67 Loss (mean): 0.05393264621125127 Loss (std): 0.10093266897437289 Loss ratio: 1.8714577545300684 Tokens per Sec: 2559.2031179145542
Epoch Step: 40 / 67 Loss (mean): 0.17460990088193284 Loss (std): 0.5193791889057243 Loss ratio: 2.9745116759267645 Tokens per Sec: 2905.963899275176
Epoch Step: 45 / 67 Loss (mean): 0.2410349834481167 Loss (std): 0.6365343603337054 Loss ratio: 2.640838069344904 Tokens per Sec: 3139.9415267974605
Epoch Step: 50 / 67 Loss (mean): 0.1969139191328395 Loss (std): 0.6228421798380276 Loss ratio: 3.1630175387340387 Tokens per Sec: 3152.757595046511
Epoch Step: 55 / 67 Loss (mean): 0.3927075500182582 Loss (std): 0.9914707896500436 Loss ratio: 2.5247051899153634 Tokens per Sec: 2893.8986328038322
Epoch Step: 60 / 67 Loss (mean): 0.048988509374794376 Loss (std): 0.13402093364294235 Loss ratio: 2.7357626380830227 Tokens per Sec: 2714.015809328775
Epoch Step: 65 / 67 Loss (mean): 0.18169746827879862 Loss (std): 0.4566313606273718 Loss ratio: 2.5131410192612678 Tokens per Sec: 3174.551302930315
Mean loss per sample: 0.48282453451060237 Std loss per sample: 3.725839323057963 ratio: 7.7167564130404545
Epoch ended with duration 0:00:11.366877
Train perplexity: 1.067506998104621
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use deprecated/removed ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.69871884584427 Loss (std): 44.91536416197763 Loss ratio: 0.44603709636799654 Tokens per Sec: 4322.993255839882
Mean loss per sample: 106.24286178774277 Std loss per sample: 53.74411761696891 ratio: 0.5058609746821537
Epoch ended with duration 0:00:01.023307
b'BLEU = 2.58, 8.4/2.8/1.8/1.4 (BP=0.935, ratio=0.937, hyp_len=2917, ref_len=3113)\n'
Validation perplexity: 1790151.4113237956
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.58
Epoch 870 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.14161338969347526 Loss (std): 0.3646299871699186 Loss ratio: 2.574827055260571 Tokens per Sec: 2107.7894242552034
Epoch Step: 10 / 67 Loss (mean): 0.08468507366342237 Loss (std): 0.22093337311294975 Loss ratio: 2.608882103486632 Tokens per Sec: 3037.192372259296
Epoch Step: 15 / 67 Loss (mean): 0.09021771491006803 Loss (std): 0.2645037761814821 Loss ratio: 2.9318385690121738 Tokens per Sec: 2923.9227884700667
Epoch Step: 20 / 67 Loss (mean): 0.12911400373150173 Loss (std): 0.3501984828829038 Loss ratio: 2.7123199092420447 Tokens per Sec: 2745.965578455689
Epoch Step: 25 / 67 Loss (mean): 0.90512618910725 Loss (std): 1.1966754229258059 Loss ratio: 1.3221089361099128 Tokens per Sec: 3143.55201419361
Epoch Step: 30 / 67 Loss (mean): 0.15434665385009794 Loss (std): 0.6458741524210312 Loss ratio: 4.184568543016855 Tokens per Sec: 3080.6605785335564
Epoch Step: 35 / 67 Loss (mean): 0.4734386200016161 Loss (std): 3.3394481541566527 Loss ratio: 7.053603176997377 Tokens per Sec: 2501.0978021063675
Epoch Step: 40 / 67 Loss (mean): 0.18466819763307285 Loss (std): 0.5064565460833372 Loss ratio: 2.7425217366860477 Tokens per Sec: 2956.310977159845
Epoch Step: 45 / 67 Loss (mean): 0.2316428434955924 Loss (std): 0.6444917971059894 Loss ratio: 2.782265091294532 Tokens per Sec: 3332.071915923553
Epoch Step: 50 / 67 Loss (mean): 0.24599797228256648 Loss (std): 0.647942078135974 Loss ratio: 2.633932597589516 Tokens per Sec: 2914.2796238025517
Epoch Step: 55 / 67 Loss (mean): 0.09160238333879533 Loss (std): 0.26185797645552383 Loss ratio: 2.8586371545272016 Tokens per Sec: 3254.021521717938
Epoch Step: 60 / 67 Loss (mean): 0.05951498190006532 Loss (std): 0.12824195771130917 Loss ratio: 2.154784452873511 Tokens per Sec: 2600.8212732213096
Epoch Step: 65 / 67 Loss (mean): 0.12959067521387624 Loss (std): 0.4672919239851641 Loss ratio: 3.6059070084629647 Tokens per Sec: 2246.474413681445
Mean loss per sample: 0.2803027151980037 Std loss per sample: 1.827984516542813 ratio: 6.521465606394639
Epoch ended with duration 0:00:11.224091
Train perplexity: 1.038653203572799
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily not run[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 121.45899832248688 Loss (std): 45.38539938965098 Loss ratio: 0.3736684808576125 Tokens per Sec: 4347.706016344401
Mean loss per sample: 107.5780623638239 Std loss per sample: 55.2784022599975 ratio: 0.5138445612921393
Epoch ended with duration 0:00:01.015109
b'BLEU = 2.19, 8.0/2.5/1.5/1.2 (BP=0.889, ratio=0.895, hyp_len=2785, ref_len=3113)\n'
Validation perplexity: 2145223.6171513363
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.19
Model saved checkpoint_commit_msg_generator!
Epoch 871 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1027679618282491 Loss (std): 0.3945623362945171 Loss ratio: 3.8393515768457993 Tokens per Sec: 2777.9711173087753
Epoch Step: 10 / 67 Loss (mean): 0.1755820847337759 Loss (std): 0.4795784200291463 Loss ratio: 2.7313630588012496 Tokens per Sec: 2637.9021332451957
Epoch Step: 15 / 67 Loss (mean): 0.09409626951401151 Loss (std): 0.3215239940942039 Loss ratio: 3.416968555234031 Tokens per Sec: 2890.2343143553576
Epoch Step: 20 / 67 Loss (mean): 0.1322274657095477 Loss (std): 0.3515810106750047 Loss ratio: 2.6589106036962957 Tokens per Sec: 2965.8520096792454
Epoch Step: 25 / 67 Loss (mean): 0.041442444120548316 Loss (std): 0.0677013983948881 Loss ratio: 1.6336246529755196 Tokens per Sec: 2737.9445233094357
Epoch Step: 30 / 67 Loss (mean): 0.30268315129342227 Loss (std): 0.6634146747327537 Loss ratio: 2.191779330622988 Tokens per Sec: 2470.4181597268303
Epoch Step: 35 / 67 Loss (mean): 0.590561162756785 Loss (std): 1.3059717644320084 Loss ratio: 2.211408143291427 Tokens per Sec: 2690.8607877378904
Epoch Step: 40 / 67 Loss (mean): 0.15653692724424673 Loss (std): 0.3502819427105629 Loss ratio: 2.2376952766168277 Tokens per Sec: 2711.6021642726237
Epoch Step: 45 / 67 Loss (mean): 0.09117126162641398 Loss (std): 0.38263507417561005 Loss ratio: 4.196882519225265 Tokens per Sec: 2418.143471330891
Epoch Step: 50 / 67 Loss (mean): 0.104121213485314 Loss (std): 0.3985818527077506 Loss ratio: 3.828056160370907 Tokens per Sec: 2818.4977510516783
Epoch Step: 55 / 67 Loss (mean): 3.7427626837425123 Loss (std): 10.88379445685829 Loss ratio: 2.907957403800773 Tokens per Sec: 3165.2651568298115
Epoch Step: 60 / 67 Loss (mean): 0.412415021641209 Loss (std): 0.9950287448163125 Loss ratio: 2.4126879298833184 Tokens per Sec: 3986.1979279746433
Epoch Step: 65 / 67 Loss (mean): 0.426064507774754 Loss (std): 0.9285052705195568 Loss ratio: 2.179259838771706 Tokens per Sec: 2762.71785706858
Mean loss per sample: 0.3164350457744535 Std loss per sample: 2.278169034471005 ratio: 7.199483953793231
Epoch ended with duration 0:00:11.310325
Train perplexity: 1.0437432930785673
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.20140817761421 Loss (std): 44.835323298633625 Loss ratio: 0.4474520280110214 Tokens per Sec: 4325.189493204636
Mean loss per sample: 109.08903840281924 Std loss per sample: 54.99765702006055 ratio: 0.5041538345674813
Epoch ended with duration 0:00:01.032686
b'BLEU = 2.23, 8.3/2.5/1.4/1.1 (BP=0.934, ratio=0.936, hyp_len=2913, ref_len=3113)\n'
Validation perplexity: 2632695.2064818856
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.23
Epoch 872 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1311943468995196 Loss (std): 0.4243496869148853 Loss ratio: 3.2345119812204284 Tokens per Sec: 2730.335049133513
Epoch Step: 10 / 67 Loss (mean): 0.12956195454398767 Loss (std): 0.3622696383575281 Loss ratio: 2.7961112475694683 Tokens per Sec: 3320.9397006482463
Epoch Step: 15 / 67 Loss (mean): 0.3737655719751274 Loss (std): 0.8313282473513315 Loss ratio: 2.224196955750256 Tokens per Sec: 2957.4868667585274
Epoch Step: 20 / 67 Loss (mean): 0.4806497495978874 Loss (std): 0.7265866106521308 Loss ratio: 1.5116758330988307 Tokens per Sec: 3268.8639863928674
Epoch Step: 25 / 67 Loss (mean): 0.8221434490533284 Loss (std): 2.818627015484674 Loss ratio: 3.4283883411468303 Tokens per Sec: 2958.9597472573537
Epoch Step: 30 / 67 Loss (mean): 0.1644418410057824 Loss (std): 0.47032904283945576 Loss ratio: 2.8601543254609827 Tokens per Sec: 2821.0821980208343
Epoch Step: 35 / 67 Loss (mean): 0.2920610106668846 Loss (std): 1.0708566662914951 Loss ratio: 3.666551258746686 Tokens per Sec: 2238.5228153989037
Epoch Step: 40 / 67 Loss (mean): 0.18892041052458808 Loss (std): 0.6785362493883482 Loss ratio: 3.591651359978579 Tokens per Sec: 2842.009648575396
Epoch Step: 45 / 67 Loss (mean): 0.04115214947159984 Loss (std): 0.06991355730036597 Loss ratio: 1.6989041446939512 Tokens per Sec: 2638.589862402701
Epoch Step: 50 / 67 Loss (mean): 0.1921046856950852 Loss (std): 0.6682903212757998 Loss ratio: 3.4787819925253247 Tokens per Sec: 3409.566706765922
Epoch Step: 55 / 67 Loss (mean): 0.21974625866278075 Loss (std): 0.8084229215058725 Loss ratio: 3.6788927667090157 Tokens per Sec: 2215.699236183559
Epoch Step: 60 / 67 Loss (mean): 0.04899681553555032 Loss (std): 0.08682026496938319 Loss ratio: 1.7719573000900344 Tokens per Sec: 2512.4507372268754
Epoch Step: 65 / 67 Loss (mean): 0.7727619976976712 Loss (std): 1.473584064277261 Loss ratio: 1.906905449113161 Tokens per Sec: 2980.8883201968456
Mean loss per sample: 0.2994595363247338 Std loss per sample: 1.8289936803762683 ratio: 6.107648808996045
Epoch ended with duration 0:00:11.287136
Train perplexity: 1.041348793579426
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.79234772920609 Loss (std): 44.58289954960869 Loss ratio: 0.4423242493506293 Tokens per Sec: 4355.66068272573
Mean loss per sample: 106.06829462485906 Std loss per sample: 55.3649369007228 ratio: 0.5219744231444163
Epoch ended with duration 0:00:01.013770
b'BLEU = 2.58, 8.6/2.7/1.8/1.3 (BP=0.945, ratio=0.946, hyp_len=2945, ref_len=3113)\n'
Validation perplexity: 1748298.8444121345
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.58
Epoch 873 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.050609417640089305 Loss (std): 0.08789779575485925 Loss ratio: 1.7367873382765948 Tokens per Sec: 2413.7850563869993
Epoch Step: 10 / 67 Loss (mean): 0.07227024544408778 Loss (std): 0.2965223920559537 Loss ratio: 4.1029664453728705 Tokens per Sec: 2481.6834072805545
Epoch Step: 15 / 67 Loss (mean): 0.18848001555943483 Loss (std): 0.518781530303455 Loss ratio: 2.7524484692111226 Tokens per Sec: 2751.508723657896
Epoch Step: 20 / 67 Loss (mean): 0.25198642206009936 Loss (std): 0.7505517252324245 Loss ratio: 2.978540347913731 Tokens per Sec: 2903.7713428156294
Epoch Step: 25 / 67 Loss (mean): 0.09224152120805229 Loss (std): 0.16445618265275527 Loss ratio: 1.7828867141275957 Tokens per Sec: 3278.0986478041596
Epoch Step: 30 / 67 Loss (mean): 2.435439421627507 Loss (std): 12.111221181981369 Loss ratio: 4.972910052465162 Tokens per Sec: 2782.157866773613
Epoch Step: 35 / 67 Loss (mean): 0.05669846888213215 Loss (std): 0.10981819514257192 Loss ratio: 1.9368811417265595 Tokens per Sec: 2671.9556539565397
Epoch Step: 40 / 67 Loss (mean): 0.11759127811524195 Loss (std): 0.2946548236576347 Loss ratio: 2.5057540693525477 Tokens per Sec: 2485.8618587845567
Epoch Step: 45 / 67 Loss (mean): 0.46154434223353746 Loss (std): 0.9527874917131566 Loss ratio: 2.064346595827307 Tokens per Sec: 3022.295262743401
Epoch Step: 50 / 67 Loss (mean): 0.18112980763862652 Loss (std): 0.5220472016120078 Loss ratio: 2.8821716779689193 Tokens per Sec: 2798.9162450960225
Epoch Step: 55 / 67 Loss (mean): 0.43943904199204553 Loss (std): 0.9254998171793163 Loss ratio: 2.106093743932905 Tokens per Sec: 2510.824509213135
Epoch Step: 60 / 67 Loss (mean): 0.26673600445974444 Loss (std): 0.669405811772994 Loss ratio: 2.5096192511724458 Tokens per Sec: 3014.8533453922955
Epoch Step: 65 / 67 Loss (mean): 0.3673179042061747 Loss (std): 0.768943866257963 Loss ratio: 2.0934015397908743 Tokens per Sec: 3713.83699559701
Mean loss per sample: 0.39086129256952784 Std loss per sample: 3.1414019951420933 ratio: 8.037127377056118
Epoch ended with duration 0:00:11.332891
Train perplexity: 1.0543067282641108
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd # method_1 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 102.1642199754715 Loss (std): 46.49193541236264 Loss ratio: 0.45507062476006616 Tokens per Sec: 4450.32157722498
Mean loss per sample: 105.3495525907206 Std loss per sample: 55.04863379923994 ratio: 0.5225331522109258
Epoch ended with duration 0:00:01.004792
b'BLEU = 2.52, 8.8/2.7/1.8/1.5 (BP=0.889, ratio=0.894, hyp_len=2784, ref_len=3113)\n'
Validation perplexity: 1586040.734584944
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.52
Epoch 874 / 1000
Epoch Step: 5 / 67 Loss (mean): 4.530762694622354 Loss (std): 13.554923510880759 Loss ratio: 2.9917531383776397 Tokens per Sec: 2924.4845926395997
Epoch Step: 10 / 67 Loss (mean): 0.10138938544764642 Loss (std): 0.36891943134604926 Loss ratio: 3.6386395845800354 Tokens per Sec: 2545.9651372654575
Epoch Step: 15 / 67 Loss (mean): 0.16432762719841776 Loss (std): 0.3814845706582478 Loss ratio: 2.321487732538263 Tokens per Sec: 3033.580327276015
Epoch Step: 20 / 67 Loss (mean): 0.1274732491810937 Loss (std): 0.5398348713325808 Loss ratio: 4.234887514051433 Tokens per Sec: 2758.482619966694
Epoch Step: 25 / 67 Loss (mean): 0.5916312517911138 Loss (std): 0.9630152721845281 Loss ratio: 1.6277288754931056 Tokens per Sec: 3065.9064684740993
Epoch Step: 30 / 67 Loss (mean): 0.12237747553490408 Loss (std): 0.43784363711817853 Loss ratio: 3.5778122992355588 Tokens per Sec: 2469.1752865540993
Epoch Step: 35 / 67 Loss (mean): 0.11535915495005611 Loss (std): 0.3689411851000358 Loss ratio: 3.1981959755146105 Tokens per Sec: 2988.83935972551
Epoch Step: 40 / 67 Loss (mean): 0.34445726489320805 Loss (std): 1.2606711187235444 Loss ratio: 3.6598767023084555 Tokens per Sec: 2698.427373625808
Epoch Step: 45 / 67 Loss (mean): 0.14009377746333485 Loss (std): 0.5272767389954134 Loss ratio: 3.763741320583718 Tokens per Sec: 2964.8052023355935
Epoch Step: 50 / 67 Loss (mean): 0.22240832935494836 Loss (std): 0.4516529822118675 Loss ratio: 2.030737713474123 Tokens per Sec: 2832.0248143678195
Epoch Step: 55 / 67 Loss (mean): 0.12242579225608097 Loss (std): 0.49854974991012224 Loss ratio: 4.072260760765949 Tokens per Sec: 2787.0304101371808
Epoch Step: 60 / 67 Loss (mean): 0.1009839372532042 Loss (std): 0.41787108520772126 Loss ratio: 4.137995572107308 Tokens per Sec: 2698.344048476188
Epoch Step: 65 / 67 Loss (mean): 0.09088693460375907 Loss (std): 0.21736755927052054 Loss ratio: 2.391626037539726 Tokens per Sec: 2696.5543080207294
Mean loss per sample: 0.36149884023365664 Std loss per sample: 2.474606194007037 ratio: 6.845405624005772
Epoch ended with duration 0:00:11.317085
Train perplexity: 1.050126559640119
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the daemon print to avoid print[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for non-admin[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.81030827760696 Loss (std): 44.733684852893624 Loss ratio: 0.4437411770402287 Tokens per Sec: 4448.864877173196
Mean loss per sample: 104.11873923755083 Std loss per sample: 53.64937166721055 ratio: 0.5152710459238994
Epoch ended with duration 0:00:01.006207
b'BLEU = 2.44, 8.4/2.7/1.7/1.3 (BP=0.917, ratio=0.920, hyp_len=2864, ref_len=3113)\n'
Validation perplexity: 1342379.1858440833
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.44
Epoch 875 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.0985240593618073 Loss (std): 0.29220929582853256 Loss ratio: 2.9658674005245773 Tokens per Sec: 2616.818728553499
Epoch Step: 10 / 67 Loss (mean): 0.7799646202292934 Loss (std): 1.1843511893087464 Loss ratio: 1.5184678363495152 Tokens per Sec: 3027.0462968710417
Epoch Step: 15 / 67 Loss (mean): 1.728409523452683 Loss (std): 7.7170061160946375 Loss ratio: 4.464801895258649 Tokens per Sec: 2769.3880648387562
Epoch Step: 20 / 67 Loss (mean): 0.08839216009835127 Loss (std): 0.24146637914621424 Loss ratio: 2.731762396999258 Tokens per Sec: 2868.5126937404357
Epoch Step: 25 / 67 Loss (mean): 0.9621492865508117 Loss (std): 4.657579855086963 Loss ratio: 4.840807887291401 Tokens per Sec: 2381.518459292774
Epoch Step: 30 / 67 Loss (mean): 0.1082248637073917 Loss (std): 0.32169435812817126 Loss ratio: 2.9724625849189192 Tokens per Sec: 2597.5879843287785
Epoch Step: 35 / 67 Loss (mean): 0.680121405823229 Loss (std): 1.3615705490131338 Loss ratio: 2.0019522064080144 Tokens per Sec: 2802.8364768718343
Epoch Step: 40 / 67 Loss (mean): 0.1326449567623058 Loss (std): 0.28329489959880544 Loss ratio: 2.1357381879693924 Tokens per Sec: 2869.501668159271
Epoch Step: 45 / 67 Loss (mean): 1.8497152692152667 Loss (std): 9.92452723329342 Loss ratio: 5.365435101535305 Tokens per Sec: 2444.325851108236
Epoch Step: 50 / 67 Loss (mean): 0.162680171804368 Loss (std): 0.557363337069092 Loss ratio: 3.4261295085141206 Tokens per Sec: 2638.754747430707
Epoch Step: 55 / 67 Loss (mean): 2.253759879793506 Loss (std): 7.599921101754724 Loss ratio: 3.372107725358499 Tokens per Sec: 3221.0042440011925
Epoch Step: 60 / 67 Loss (mean): 0.2593814797255618 Loss (std): 0.6033231031084695 Loss ratio: 2.3260068673631387 Tokens per Sec: 2973.8070040478588
Epoch Step: 65 / 67 Loss (mean): 0.18036571558650394 Loss (std): 0.4245962547222304 Loss ratio: 2.3540851615926575 Tokens per Sec: 3204.29513291458
Mean loss per sample: 0.4321220962253848 Std loss per sample: 3.25165495273164 ratio: 7.524852307102696
Epoch ended with duration 0:00:11.323773
Train perplexity: 1.0602089340268293
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the time unit test[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.71741580963135 Loss (std): 45.33646952769054 Loss ratio: 0.4501353530891043 Tokens per Sec: 4442.664795462923
Mean loss per sample: 103.55146194469245 Std loss per sample: 53.131746190908665 ratio: 0.5130950852174998
Epoch ended with duration 0:00:01.004591
b'BLEU = 2.53, 8.5/2.8/1.7/1.4 (BP=0.916, ratio=0.920, hyp_len=2863, ref_len=3113)\n'
Validation perplexity: 1243049.1054640866
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.53
Model saved checkpoint_commit_msg_generator!
Epoch 876 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.36683514185824606 Loss (std): 0.850159915550586 Loss ratio: 2.3175530873187395 Tokens per Sec: 2574.80567101695
Epoch Step: 10 / 67 Loss (mean): 0.13296361402535695 Loss (std): 0.1921405526888661 Loss ratio: 1.4450611477228932 Tokens per Sec: 2867.1907137160547
Epoch Step: 15 / 67 Loss (mean): 0.22535010571937164 Loss (std): 0.8026474759147759 Loss ratio: 3.5617798951215596 Tokens per Sec: 2567.9616026763024
Epoch Step: 20 / 67 Loss (mean): 0.2507457408055416 Loss (std): 0.5303889800911411 Loss ratio: 2.1152462186883905 Tokens per Sec: 3308.6895311433464
Epoch Step: 25 / 67 Loss (mean): 0.23992170138171787 Loss (std): 0.7752477222272015 Loss ratio: 3.231253020308382 Tokens per Sec: 3163.481419939674
Epoch Step: 30 / 67 Loss (mean): 0.32619825176084305 Loss (std): 0.6921328310574805 Loss ratio: 2.1218164944824034 Tokens per Sec: 2513.4212231357387
Epoch Step: 35 / 67 Loss (mean): 0.04236069647868135 Loss (std): 0.05655677183631 Loss ratio: 1.3351237476648439 Tokens per Sec: 3447.996421193972
Epoch Step: 40 / 67 Loss (mean): 0.3552635957021266 Loss (std): 0.6998941604580322 Loss ratio: 1.9700700238503008 Tokens per Sec: 2845.6833868312888
Epoch Step: 45 / 67 Loss (mean): 0.1940139917214765 Loss (std): 0.3970371692889886 Loss ratio: 2.046435753246957 Tokens per Sec: 2693.803580230432
Epoch Step: 50 / 67 Loss (mean): 0.47035779944872047 Loss (std): 2.014805538111444 Loss ratio: 4.283559325417549 Tokens per Sec: 2920.5606075591463
Epoch Step: 55 / 67 Loss (mean): 0.19092270751343676 Loss (std): 0.5306906201228663 Loss ratio: 2.7796097543060316 Tokens per Sec: 2625.0684404246126
Epoch Step: 60 / 67 Loss (mean): 0.22160253758852377 Loss (std): 0.5411676386680877 Loss ratio: 2.4420642676616775 Tokens per Sec: 2943.3072492384117
Epoch Step: 65 / 67 Loss (mean): 0.0884601702675809 Loss (std): 0.2204813519702752 Loss ratio: 2.4924364412067805 Tokens per Sec: 2388.680171828582
Mean loss per sample: 0.3582185682126716 Std loss per sample: 2.999171258995186 ratio: 8.372461745798173
Epoch ended with duration 0:00:11.317924
Train perplexity: 1.0496605960185255
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the exception use method_5[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.36679291725159 Loss (std): 44.622978913183736 Loss ratio: 0.44907335341238036 Tokens per Sec: 4321.839023252197
Mean loss per sample: 107.84078316201196 Std loss per sample: 54.648455534510916 ratio: 0.5067512858508376
Epoch ended with duration 0:00:01.035770
b'BLEU = 2.28, 8.6/2.7/1.6/1.2 (BP=0.879, ratio=0.886, hyp_len=2757, ref_len=3113)\n'
Validation perplexity: 2222976.739344864
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.28
Epoch 877 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3838754263742885 Loss (std): 1.1484793712549102 Loss ratio: 2.991802267996996 Tokens per Sec: 2939.5313373232607
Epoch Step: 10 / 67 Loss (mean): 0.04788415435496063 Loss (std): 0.08249816842200802 Loss ratio: 1.7228699041118496 Tokens per Sec: 2845.8527165316923
Epoch Step: 15 / 67 Loss (mean): 0.2925293256239456 Loss (std): 0.7710473215451553 Loss ratio: 2.6357949579945963 Tokens per Sec: 2400.7952108207646
Epoch Step: 20 / 67 Loss (mean): 0.43966942052793456 Loss (std): 0.9035901350977622 Loss ratio: 2.0551580185239473 Tokens per Sec: 2843.147457022907
Epoch Step: 25 / 67 Loss (mean): 0.36347671368821466 Loss (std): 0.7154237359116142 Loss ratio: 1.9682794219529973 Tokens per Sec: 2580.8725066705138
Epoch Step: 30 / 67 Loss (mean): 0.47519855821155943 Loss (std): 2.24669750942964 Loss ratio: 4.727913144108079 Tokens per Sec: 2796.1675088622483
Epoch Step: 35 / 67 Loss (mean): 0.2255542614489059 Loss (std): 0.5666495154227797 Loss ratio: 2.512253644789332 Tokens per Sec: 3371.382876303173
Epoch Step: 40 / 67 Loss (mean): 0.21240233281969267 Loss (std): 0.43603877457837037 Loss ratio: 2.0528907041172735 Tokens per Sec: 3032.8730867123422
Epoch Step: 45 / 67 Loss (mean): 0.07696142455364452 Loss (std): 0.15774108386550398 Loss ratio: 2.049612319163265 Tokens per Sec: 3056.782494059898
Epoch Step: 50 / 67 Loss (mean): 0.13052446289566433 Loss (std): 0.39864737659753524 Loss ratio: 3.054196644472668 Tokens per Sec: 2602.134130588894
Epoch Step: 55 / 67 Loss (mean): 0.22432142910656694 Loss (std): 0.696731205200911 Loss ratio: 3.1059502784725903 Tokens per Sec: 2644.2504708772167
Epoch Step: 60 / 67 Loss (mean): 0.11816482593349065 Loss (std): 0.38404071339080487 Loss ratio: 3.250042560101287 Tokens per Sec: 2294.218342747514
Epoch Step: 65 / 67 Loss (mean): 0.33055172612148453 Loss (std): 0.7174906372039228 Loss ratio: 2.1705850567551725 Tokens per Sec: 3127.168179449812
Mean loss per sample: 0.2938964571777568 Std loss per sample: 2.099446821202234 ratio: 7.143491423349925
Epoch ended with duration 0:00:11.344411
Train perplexity: 1.0405652829284993
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the exception use method_5[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for non-admin[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.10622784495354 Loss (std): 44.563773854225 Loss ratio: 0.4407619075905351 Tokens per Sec: 4167.124216223242
Mean loss per sample: 113.87347694736768 Std loss per sample: 57.16127510212232 ratio: 0.5019718079614119
Epoch ended with duration 0:00:01.082888
b'BLEU = 2.52, 8.8/2.6/1.7/1.4 (BP=0.936, ratio=0.938, hyp_len=2920, ref_len=3113)\n'
Validation perplexity: 5034857.555763142
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.52
Epoch 878 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.17533230131147093 Loss (std): 0.5914152783988882 Loss ratio: 3.3731107957584054 Tokens per Sec: 3020.861141052679
Epoch Step: 10 / 67 Loss (mean): 0.142513657327072 Loss (std): 0.3561123098310272 Loss ratio: 2.4987942665294285 Tokens per Sec: 2934.0877462471512
Epoch Step: 15 / 67 Loss (mean): 0.1454802909360069 Loss (std): 0.4640423007261398 Loss ratio: 3.189726235358302 Tokens per Sec: 2462.5858266749374
Epoch Step: 20 / 67 Loss (mean): 0.03957779930351535 Loss (std): 0.07970848382954976 Loss ratio: 2.013969579720163 Tokens per Sec: 2947.3081372176084
Epoch Step: 25 / 67 Loss (mean): 0.14475115776008352 Loss (std): 0.41601052814609624 Loss ratio: 2.8739702989844758 Tokens per Sec: 2947.828898225231
Epoch Step: 30 / 67 Loss (mean): 0.05078620788981425 Loss (std): 0.1202325610777656 Loss ratio: 2.3674254502053422 Tokens per Sec: 2537.096763884998
Epoch Step: 35 / 67 Loss (mean): 0.1635641225625477 Loss (std): 0.310236176321761 Loss ratio: 1.8967250975416394 Tokens per Sec: 2604.6899366639623
Epoch Step: 40 / 67 Loss (mean): 0.32453653574066266 Loss (std): 0.8454184547602366 Loss ratio: 2.605002400826177 Tokens per Sec: 2958.9191644585153
Epoch Step: 45 / 67 Loss (mean): 0.3013743994061997 Loss (std): 0.6135077703448939 Loss ratio: 2.0356996863492487 Tokens per Sec: 2406.301042294905
Epoch Step: 50 / 67 Loss (mean): 0.2420959763078372 Loss (std): 0.7414668438967285 Loss ratio: 3.0626979233802554 Tokens per Sec: 3138.551940017939
Epoch Step: 55 / 67 Loss (mean): 0.1666850337296637 Loss (std): 0.45167410537224256 Loss ratio: 2.7097460117792296 Tokens per Sec: 2665.574872012815
Epoch Step: 60 / 67 Loss (mean): 0.21560319770924252 Loss (std): 0.6084383258089757 Loss ratio: 2.822028301405351 Tokens per Sec: 3120.918053358619
Epoch Step: 65 / 67 Loss (mean): 0.10090953902272304 Loss (std): 0.1446653535504806 Loss ratio: 1.4336142544254862 Tokens per Sec: 2465.2363323194504
Mean loss per sample: 0.5816994975580182 Std loss per sample: 4.443168527565426 ratio: 7.638254023285052
Epoch ended with duration 0:00:11.379996
Train perplexity: 1.0818837946295814
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use gwt_binary ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link to appear before scrolling[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.33669871091843 Loss (std): 43.357487886778706 Loss ratio: 0.4321199366115943 Tokens per Sec: 4311.088402304438
Mean loss per sample: 106.60473324291286 Std loss per sample: 53.46985806781776 ratio: 0.5015711445567776
Epoch ended with duration 0:00:01.040386
b'BLEU = 2.80, 8.6/2.9/1.9/1.4 (BP=0.981, ratio=0.981, hyp_len=3054, ref_len=3113)\n'
Validation perplexity: 1880128.7668702186
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.8
Epoch 879 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.05332019178950716 Loss (std): 0.11310478597969306 Loss ratio: 2.121237418391111 Tokens per Sec: 2436.499372979264
Epoch Step: 10 / 67 Loss (mean): 0.06971942248060259 Loss (std): 0.2431780505207867 Loss ratio: 3.4879527378248714 Tokens per Sec: 2984.99492439801
Epoch Step: 15 / 67 Loss (mean): 0.05912277960146639 Loss (std): 0.09380122810452031 Loss ratio: 1.5865496977106572 Tokens per Sec: 2912.1766158971245
Epoch Step: 20 / 67 Loss (mean): 0.39627507488057745 Loss (std): 0.6868944508442892 Loss ratio: 1.7333778841661784 Tokens per Sec: 3894.676215804216
Epoch Step: 25 / 67 Loss (mean): 0.18230843990204448 Loss (std): 0.4453066492280422 Loss ratio: 2.442600295780647 Tokens per Sec: 2334.2839005549636
Epoch Step: 30 / 67 Loss (mean): 0.2794211274938334 Loss (std): 0.7441431761447269 Loss ratio: 2.663160022361407 Tokens per Sec: 3587.709868162581
Epoch Step: 35 / 67 Loss (mean): 0.30263774199534055 Loss (std): 0.8427087018952162 Loss ratio: 2.784545960259612 Tokens per Sec: 2603.0696991756927
Epoch Step: 40 / 67 Loss (mean): 0.15164829406148783 Loss (std): 0.39291581631320704 Loss ratio: 2.590967598711622 Tokens per Sec: 2385.680917840168
Epoch Step: 45 / 67 Loss (mean): 0.18791991419175247 Loss (std): 0.425080433047221 Loss ratio: 2.262029731524202 Tokens per Sec: 2535.8594524710807
Epoch Step: 50 / 67 Loss (mean): 0.194480359859881 Loss (std): 0.6280470444746369 Loss ratio: 3.2293597406294987 Tokens per Sec: 3108.4991209852933
Epoch Step: 55 / 67 Loss (mean): 0.16489294407801935 Loss (std): 0.4522289733819625 Loss ratio: 2.742561095688786 Tokens per Sec: 2595.854648555644
Epoch Step: 60 / 67 Loss (mean): 0.08792825265652482 Loss (std): 0.1848280801623977 Loss ratio: 2.1020329027166484 Tokens per Sec: 2676.1619979914676
Epoch Step: 65 / 67 Loss (mean): 1.7744337281981188 Loss (std): 7.101837104715644 Loss ratio: 4.002311831576451 Tokens per Sec: 2938.6988716682367
Mean loss per sample: 0.38989685118190265 Std loss per sample: 2.6878654066418917 ratio: 6.8937858782242225
Epoch ended with duration 0:00:11.313921
Train perplexity: 1.0541691621839027
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint checks fix[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a unit tests for non-admin[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.36853915452957 Loss (std): 45.052866007512634 Loss ratio: 0.4444462392698838 Tokens per Sec: 4315.261596757411
Mean loss per sample: 106.5143743111584 Std loss per sample: 55.069138182236344 ratio: 0.5170113286434367
Epoch ended with duration 0:00:01.020573
b'BLEU = 2.87, 9.1/3.3/2.2/1.7 (BP=0.887, ratio=0.893, hyp_len=2780, ref_len=3113)\n'
Validation perplexity: 1857246.4985829962
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.87
Epoch 880 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.235321716969338 Loss (std): 0.6075133576647532 Loss ratio: 2.5816289524349814 Tokens per Sec: 2410.804180457992
Epoch Step: 10 / 67 Loss (mean): 0.27165386106707956 Loss (std): 0.6272214133802462 Loss ratio: 2.308899313694519 Tokens per Sec: 2756.0995863892963
Epoch Step: 15 / 67 Loss (mean): 0.12007858334379762 Loss (std): 0.20529454110455764 Loss ratio: 1.709668247140939 Tokens per Sec: 2631.3813087433746
Epoch Step: 20 / 67 Loss (mean): 0.25430456864864937 Loss (std): 0.6716648041553983 Loss ratio: 2.6411826092018797 Tokens per Sec: 2471.54778153059
Epoch Step: 25 / 67 Loss (mean): 0.09240090056982808 Loss (std): 0.216507922985509 Loss ratio: 2.343136502461816 Tokens per Sec: 2973.6888439040763
Epoch Step: 30 / 67 Loss (mean): 0.354130004721128 Loss (std): 0.792938667310146 Loss ratio: 2.2391174335384916 Tokens per Sec: 2888.370715220432
Epoch Step: 35 / 67 Loss (mean): 0.7358065858661575 Loss (std): 1.688981664453567 Loss ratio: 2.2954152584342196 Tokens per Sec: 2742.79100830206
Epoch Step: 40 / 67 Loss (mean): 0.14933402316364663 Loss (std): 0.24811141484319169 Loss ratio: 1.6614526923399133 Tokens per Sec: 3121.3279759516345
Epoch Step: 45 / 67 Loss (mean): 0.19386119418413728 Loss (std): 0.3839338452855306 Loss ratio: 1.9804574448295957 Tokens per Sec: 2336.227218794053
Epoch Step: 50 / 67 Loss (mean): 0.2593115166218922 Loss (std): 0.5930773331938242 Loss ratio: 2.287122997543542 Tokens per Sec: 3225.290602756932
Epoch Step: 55 / 67 Loss (mean): 0.19289163967732748 Loss (std): 0.5878066261892687 Loss ratio: 3.0473411246467808 Tokens per Sec: 3148.312758229157
Epoch Step: 60 / 67 Loss (mean): 0.4464886919045057 Loss (std): 1.0120956834907464 Loss ratio: 2.266789062839719 Tokens per Sec: 3193.222082916225
Epoch Step: 65 / 67 Loss (mean): 0.3654272188878167 Loss (std): 0.9863235973515069 Loss ratio: 2.6990972384416185 Tokens per Sec: 2852.096967640878
Mean loss per sample: 0.293267103730362 Std loss per sample: 1.6511948751333547 ratio: 5.630344672587313
Epoch ended with duration 0:00:11.214170
Train perplexity: 1.0404766811707724
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope variable[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add support for method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.06072652339935 Loss (std): 44.47125234632286 Loss ratio: 0.44444262890618924 Tokens per Sec: 4463.144353952862
Mean loss per sample: 105.61880996185126 Std loss per sample: 54.6420634655969 ratio: 0.5173516297460009
Epoch ended with duration 0:00:01.017132
b'BLEU = 2.56, 9.0/2.9/1.8/1.5 (BP=0.883, ratio=0.889, hyp_len=2768, ref_len=3113)\n'
Validation perplexity: 1644982.9236033082
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.56
Model saved checkpoint_commit_msg_generator!
Epoch 881 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1328832075541868 Loss (std): 0.25761835815576195 Loss ratio: 1.9386825686813056 Tokens per Sec: 2843.8792007557986
Epoch Step: 10 / 67 Loss (mean): 0.060200672856808524 Loss (std): 0.1297815555728649 Loss ratio: 2.1558156979666876 Tokens per Sec: 3080.2881629765566
Epoch Step: 15 / 67 Loss (mean): 0.07319989829002657 Loss (std): 0.14728913261500293 Loss ratio: 2.012149416265937 Tokens per Sec: 2254.1133961502524
Epoch Step: 20 / 67 Loss (mean): 0.11307636311994429 Loss (std): 0.19663536878619411 Loss ratio: 1.7389608523013398 Tokens per Sec: 2733.1562320637936
Epoch Step: 25 / 67 Loss (mean): 0.2260677514445888 Loss (std): 0.5532130469369461 Loss ratio: 2.4471117326636636 Tokens per Sec: 3126.8680898168495
Epoch Step: 30 / 67 Loss (mean): 0.15529272729145305 Loss (std): 0.4571314978938201 Loss ratio: 2.943676151915838 Tokens per Sec: 2729.418442125969
Epoch Step: 35 / 67 Loss (mean): 0.20642866478601718 Loss (std): 0.7204201003652547 Loss ratio: 3.4899227833113113 Tokens per Sec: 2665.639804667693
Epoch Step: 40 / 67 Loss (mean): 0.18115227976750248 Loss (std): 0.4898172273736915 Loss ratio: 2.7038976710772893 Tokens per Sec: 2927.744694431906
Epoch Step: 45 / 67 Loss (mean): 3.310086782041253 Loss (std): 9.516987087154321 Loss ratio: 2.8751473039282125 Tokens per Sec: 3490.8549555439054
Epoch Step: 50 / 67 Loss (mean): 0.1679512881141818 Loss (std): 0.579461043309791 Loss ratio: 3.450173260450637 Tokens per Sec: 3272.7168000835077
Epoch Step: 55 / 67 Loss (mean): 0.2536006718992212 Loss (std): 0.5980988811342653 Loss ratio: 2.358427825348763 Tokens per Sec: 2460.3612653539467
Epoch Step: 60 / 67 Loss (mean): 0.22462083726077253 Loss (std): 0.5860368282846262 Loss ratio: 2.6090047362982154 Tokens per Sec: 2698.2621476164513
Epoch Step: 65 / 67 Loss (mean): 0.08582653279108854 Loss (std): 0.28125560688310763 Loss ratio: 3.277023989396327 Tokens per Sec: 2688.236847929498
Mean loss per sample: 0.34908785245107443 Std loss per sample: 2.034035217558687 ratio: 5.826714402340202
Epoch ended with duration 0:00:11.263648
Train perplexity: 1.0483646635658832
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for non-admin[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.81152591109276 Loss (std): 45.46686710435094 Loss ratio: 0.4510086192371383 Tokens per Sec: 4343.4510050136705
Mean loss per sample: 107.77191227404248 Std loss per sample: 54.72555755859143 ratio: 0.5077905402609472
Epoch ended with duration 0:00:01.018031
b'BLEU = 2.42, 9.0/2.8/1.6/1.2 (BP=0.918, ratio=0.921, hyp_len=2867, ref_len=3113)\n'
Validation perplexity: 2202325.6868479038
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.42
Epoch 882 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.17828930502582807 Loss (std): 0.4195906531421027 Loss ratio: 2.3534258158744756 Tokens per Sec: 2651.735179300131
Epoch Step: 10 / 67 Loss (mean): 0.42012510215272414 Loss (std): 1.612293880273815 Loss ratio: 3.8376518613441784 Tokens per Sec: 2562.786369893969
Epoch Step: 15 / 67 Loss (mean): 0.07684995702129527 Loss (std): 0.18127091229398598 Loss ratio: 2.358764003521244 Tokens per Sec: 3104.6235262316245
Epoch Step: 20 / 67 Loss (mean): 0.06947410469683746 Loss (std): 0.17079992187911575 Loss ratio: 2.4584688442468083 Tokens per Sec: 2384.1165497391307
Epoch Step: 25 / 67 Loss (mean): 0.07274582684112829 Loss (std): 0.17646436674522178 Loss ratio: 2.4257661835448983 Tokens per Sec: 3039.0181456988075
Epoch Step: 30 / 67 Loss (mean): 0.19904880447074902 Loss (std): 0.7353757989344952 Loss ratio: 3.694449714931905 Tokens per Sec: 2988.568226222218
Epoch Step: 35 / 67 Loss (mean): 0.20942384988484264 Loss (std): 0.7676453758363103 Loss ratio: 3.665510763260349 Tokens per Sec: 2812.9939656916554
Epoch Step: 40 / 67 Loss (mean): 0.20613682714156312 Loss (std): 1.0265620136864115 Loss ratio: 4.9800029811336275 Tokens per Sec: 2651.4751259711174
Epoch Step: 45 / 67 Loss (mean): 0.22791762696033402 Loss (std): 0.6070847550159153 Loss ratio: 2.6636147590355974 Tokens per Sec: 2889.8222698060076
Epoch Step: 50 / 67 Loss (mean): 0.2770291832798648 Loss (std): 0.7585496018027751 Loss ratio: 2.7381577378310396 Tokens per Sec: 2529.6520734038413
Epoch Step: 55 / 67 Loss (mean): 0.1131080984869186 Loss (std): 0.3232549764764578 Loss ratio: 2.857929545282237 Tokens per Sec: 2991.141951985789
Epoch Step: 60 / 67 Loss (mean): 0.14583342231981078 Loss (std): 0.5103066398854262 Loss ratio: 3.499243395429139 Tokens per Sec: 2839.5667187219733
Epoch Step: 65 / 67 Loss (mean): 0.09398850406466863 Loss (std): 0.25664904406780803 Loss ratio: 2.7306429293865673 Tokens per Sec: 3154.0918187039915
Mean loss per sample: 0.20783048673017365 Std loss per sample: 0.6378014158979498 ratio: 3.0688539777420023
Epoch ended with duration 0:00:11.180963
Train perplexity: 1.0285184878857128
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 122.59078776836395 Loss (std): 48.834232417915956 Loss ratio: 0.3983515670866602 Tokens per Sec: 4361.572594956081
Mean loss per sample: 107.47455124410449 Std loss per sample: 54.7995690583446 ratio: 0.5098841393054956
Epoch ended with duration 0:00:01.015750
b'BLEU = 2.93, 9.1/3.2/2.2/1.7 (BP=0.913, ratio=0.917, hyp_len=2854, ref_len=3113)\n'
Validation perplexity: 2115341.3337345836
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.93
Model saved best_on_validation_commit_msg_generator!
Epoch 883 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.22899892017630918 Loss (std): 0.700158206162768 Loss ratio: 3.0574738327312083 Tokens per Sec: 3002.2148334903995
Epoch Step: 10 / 67 Loss (mean): 0.4430282903249463 Loss (std): 0.9486792645082467 Loss ratio: 2.1413514333642722 Tokens per Sec: 3017.6183596829815
Epoch Step: 15 / 67 Loss (mean): 1.4821023361546395 Loss (std): 5.666282043352294 Loss ratio: 3.8231381903449653 Tokens per Sec: 2530.590809918866
Epoch Step: 20 / 67 Loss (mean): 0.047483249757533486 Loss (std): 0.08514164945570701 Loss ratio: 1.7930880866509944 Tokens per Sec: 2750.3708628848126
Epoch Step: 25 / 67 Loss (mean): 0.17913922604702748 Loss (std): 1.039747294288616 Loss ratio: 5.804129655085494 Tokens per Sec: 2824.49766296357
Epoch Step: 30 / 67 Loss (mean): 0.1730699750904705 Loss (std): 0.4919936948095525 Loss ratio: 2.842744355584312 Tokens per Sec: 2622.84667408468
Epoch Step: 35 / 67 Loss (mean): 0.09131583530393073 Loss (std): 0.24193159116528534 Loss ratio: 2.649393616781287 Tokens per Sec: 2524.225175026756
Epoch Step: 40 / 67 Loss (mean): 0.1450644417991498 Loss (std): 0.3448854718043547 Loss ratio: 2.3774638879586276 Tokens per Sec: 3045.934514575385
Epoch Step: 45 / 67 Loss (mean): 0.20345028680821997 Loss (std): 0.6099351550520936 Loss ratio: 2.9979567226024204 Tokens per Sec: 2976.1160246693753
Epoch Step: 50 / 67 Loss (mean): 0.3439473645612452 Loss (std): 1.0582450949057942 Loss ratio: 3.076764656289021 Tokens per Sec: 2910.183174218653
Epoch Step: 55 / 67 Loss (mean): 0.18206745744828368 Loss (std): 0.630953063383929 Loss ratio: 3.465490605662747 Tokens per Sec: 2439.928648763556
Epoch Step: 60 / 67 Loss (mean): 0.19089686180222998 Loss (std): 0.5763082050426216 Loss ratio: 3.0189506501142986 Tokens per Sec: 2532.8779288903584
Epoch Step: 65 / 67 Loss (mean): 0.1883923220439101 Loss (std): 0.40790622024785117 Loss ratio: 2.165195565415756 Tokens per Sec: 3044.176775705649
Mean loss per sample: 0.3797012592735974 Std loss per sample: 2.7649186095951572 ratio: 7.281826283338367
Epoch ended with duration 0:00:11.260948
Train perplexity: 1.0527159798143424
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.03875696659088 Loss (std): 44.252414496168996 Loss ratio: 0.4379746527444052 Tokens per Sec: 4448.138862616774
Mean loss per sample: 105.64071985944861 Std loss per sample: 55.083611391378255 ratio: 0.5214240442952787
Epoch ended with duration 0:00:01.015932
b'BLEU = 2.85, 8.7/3.2/2.2/1.7 (BP=0.895, ratio=0.900, hyp_len=2802, ref_len=3113)\n'
Validation perplexity: 1649874.4381780126
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.85
Epoch 884 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3814529032497376 Loss (std): 1.0688576510267132 Loss ratio: 2.802069775641296 Tokens per Sec: 3210.0767966542026
Epoch Step: 10 / 67 Loss (mean): 0.06256320992360997 Loss (std): 0.15070853618642732 Loss ratio: 2.408900316502994 Tokens per Sec: 2587.157114595181
Epoch Step: 15 / 67 Loss (mean): 0.3836103711710166 Loss (std): 0.7536922057691031 Loss ratio: 1.964733652712171 Tokens per Sec: 3085.516089249127
Epoch Step: 20 / 67 Loss (mean): 0.3552138303821266 Loss (std): 0.7835896301442178 Loss ratio: 2.2059659932195195 Tokens per Sec: 2685.8310596846713
Epoch Step: 25 / 67 Loss (mean): 0.18213380768611387 Loss (std): 0.5366293822896735 Loss ratio: 2.946346914431674 Tokens per Sec: 3127.109778248561
Epoch Step: 30 / 67 Loss (mean): 0.17956930763466517 Loss (std): 0.5222596259967954 Loss ratio: 2.9084014015320245 Tokens per Sec: 2817.541061006181
Epoch Step: 35 / 67 Loss (mean): 0.03075911074211035 Loss (std): 0.04878233147904868 Loss ratio: 1.5859473925643721 Tokens per Sec: 2716.706896038277
Epoch Step: 40 / 67 Loss (mean): 3.06430725180644 Loss (std): 11.674496162542681 Loss ratio: 3.809832109903616 Tokens per Sec: 2998.955936532413
Epoch Step: 45 / 67 Loss (mean): 0.07584686243262695 Loss (std): 0.19383677434530905 Loss ratio: 2.555633392449027 Tokens per Sec: 2519.7955621262013
Epoch Step: 50 / 67 Loss (mean): 0.11699267714220696 Loss (std): 0.37785915800299186 Loss ratio: 3.2297675994173245 Tokens per Sec: 2550.3648922628777
Epoch Step: 55 / 67 Loss (mean): 0.4334855026399964 Loss (std): 0.9891219768884709 Loss ratio: 2.2817879049346725 Tokens per Sec: 3117.959697092408
Epoch Step: 60 / 67 Loss (mean): 0.3768808599938893 Loss (std): 1.916144648724385 Loss ratio: 5.084218521353016 Tokens per Sec: 2572.5510029940233
Epoch Step: 65 / 67 Loss (mean): 0.1485178171778898 Loss (std): 0.38255754353030785 Loss ratio: 2.5758360229068873 Tokens per Sec: 2561.5094736645897
Mean loss per sample: 0.3284480210246645 Std loss per sample: 2.5176505076972915 ratio: 7.665293582354179
Epoch ended with duration 0:00:11.291385
Train perplexity: 1.0454411228670035
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.45357602834702 Loss (std): 44.4641195671764 Loss ratio: 0.43827059930103135 Tokens per Sec: 4452.389511614989
Mean loss per sample: 104.85993209139245 Std loss per sample: 53.65773015296583 ratio: 0.5117086105510685
Epoch ended with duration 0:00:01.002286
b'BLEU = 2.65, 8.7/3.0/1.9/1.4 (BP=0.919, ratio=0.922, hyp_len=2870, ref_len=3113)\n'
Validation perplexity: 1484218.6306681216
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.65
Epoch 885 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.17408858839439745 Loss (std): 0.46491443520468917 Loss ratio: 2.6705623814435566 Tokens per Sec: 2911.3853849757143
Epoch Step: 10 / 67 Loss (mean): 0.24347448623939272 Loss (std): 0.6070468790232836 Loss ratio: 2.493266906111935 Tokens per Sec: 3305.135529527848
Epoch Step: 15 / 67 Loss (mean): 0.09552145018551528 Loss (std): 0.2724498563116353 Loss ratio: 2.8522374375860258 Tokens per Sec: 2799.6613731329826
Epoch Step: 20 / 67 Loss (mean): 0.09470856754796841 Loss (std): 0.28229207094052683 Loss ratio: 2.98063922039102 Tokens per Sec: 2328.5457008934272
Epoch Step: 25 / 67 Loss (mean): 0.05243830671770411 Loss (std): 0.092543803163686 Loss ratio: 1.764812957479452 Tokens per Sec: 2245.7604963042504
Epoch Step: 30 / 67 Loss (mean): 0.07603697030344847 Loss (std): 0.19240840744244794 Loss ratio: 2.530458626567894 Tokens per Sec: 2595.2571436743215
Epoch Step: 35 / 67 Loss (mean): 0.04430947379746829 Loss (std): 0.11656866825127106 Loss ratio: 2.6307843054983753 Tokens per Sec: 2527.157747623396
Epoch Step: 40 / 67 Loss (mean): 1.2926332096058104 Loss (std): 5.696598389048001 Loss ratio: 4.406972021696072 Tokens per Sec: 2867.634701714311
Epoch Step: 45 / 67 Loss (mean): 0.13072512380404078 Loss (std): 0.3898217111968911 Loss ratio: 2.981995349120805 Tokens per Sec: 2842.926454686406
Epoch Step: 50 / 67 Loss (mean): 0.15689379100831502 Loss (std): 0.45667861949163135 Loss ratio: 2.910750110356046 Tokens per Sec: 3527.7592230790956
Epoch Step: 55 / 67 Loss (mean): 0.05793412945786258 Loss (std): 0.1171679579350637 Loss ratio: 2.0224340821464115 Tokens per Sec: 2954.144735601586
Epoch Step: 60 / 67 Loss (mean): 0.2183151124181677 Loss (std): 0.5557071298213755 Loss ratio: 2.545435923633891 Tokens per Sec: 2792.19580097112
Epoch Step: 65 / 67 Loss (mean): 0.1308930450340995 Loss (std): 0.39979361513269657 Loss ratio: 3.0543533846931643 Tokens per Sec: 3139.4173334716274
Mean loss per sample: 0.24301932740654106 Std loss per sample: 1.184038647312187 ratio: 4.872199507537267
Epoch ended with duration 0:00:11.246078
Train perplexity: 1.0334269811439045
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 102.11530619859695 Loss (std): 45.00935560939578 Loss ratio: 0.4407699225996563 Tokens per Sec: 4231.5540956977675
Mean loss per sample: 109.52682846972382 Std loss per sample: 55.316918584856154 ratio: 0.5050535960707312
Epoch ended with duration 0:00:01.031665
b'BLEU = 2.56, 8.7/2.8/1.8/1.4 (BP=0.911, ratio=0.915, hyp_len=2848, ref_len=3113)\n'
Validation perplexity: 2793615.1518276455
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.56
Model saved checkpoint_commit_msg_generator!
Epoch 886 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.06653527491675959 Loss (std): 0.19986851093853628 Loss ratio: 3.0039480739891156 Tokens per Sec: 2381.826303511897
Epoch Step: 10 / 67 Loss (mean): 0.19790460318836267 Loss (std): 0.6038356999605993 Loss ratio: 3.051145300475287 Tokens per Sec: 2830.2800861961464
Epoch Step: 15 / 67 Loss (mean): 0.028492809849922196 Loss (std): 0.0353773229228813 Loss ratio: 1.2416228202561042 Tokens per Sec: 2469.6910726680376
Epoch Step: 20 / 67 Loss (mean): 0.15129038432201014 Loss (std): 0.4778917973785326 Loss ratio: 3.158771785266776 Tokens per Sec: 2902.644098998216
Epoch Step: 25 / 67 Loss (mean): 0.09877422413592285 Loss (std): 0.3040019280232697 Loss ratio: 3.0777455422472744 Tokens per Sec: 2512.941891576708
Epoch Step: 30 / 67 Loss (mean): 0.17850187829299102 Loss (std): 0.4666203241745162 Loss ratio: 2.6140919559883327 Tokens per Sec: 2962.1863299186516
Epoch Step: 35 / 67 Loss (mean): 0.06505782372005342 Loss (std): 0.15751614942449596 Loss ratio: 2.4211715120120623 Tokens per Sec: 3169.6121874466253
Epoch Step: 40 / 67 Loss (mean): 0.15621047017492629 Loss (std): 0.5068931613187126 Loss ratio: 3.244937171951969 Tokens per Sec: 2913.4043147970065
Epoch Step: 45 / 67 Loss (mean): 1.903170290331218 Loss (std): 8.700132590936615 Loss ratio: 4.571389452187428 Tokens per Sec: 3045.51477833927
Epoch Step: 50 / 67 Loss (mean): 0.1990678609945462 Loss (std): 0.6404545073435816 Loss ratio: 3.217267238136084 Tokens per Sec: 2590.677848000164
Epoch Step: 55 / 67 Loss (mean): 0.16036568461049683 Loss (std): 0.4329657487880443 Loss ratio: 2.699865309961108 Tokens per Sec: 3052.198793244851
Epoch Step: 60 / 67 Loss (mean): 0.08410799324428808 Loss (std): 0.15181630691012335 Loss ratio: 1.8050163968266293 Tokens per Sec: 2551.431559352092
Epoch Step: 65 / 67 Loss (mean): 0.08255749124055001 Loss (std): 0.3561014642416123 Loss ratio: 4.313375550669652 Tokens per Sec: 3025.162077565339
Mean loss per sample: 0.4367863747173144 Std loss per sample: 3.3057818271054282 ratio: 7.5684179233954145
Epoch ended with duration 0:00:11.289625
Train perplexity: 1.0608782171233608
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to method_1 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog class provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.94134569168091 Loss (std): 43.679876950942365 Loss ratio: 0.4370551211677177 Tokens per Sec: 4465.12257710308
Mean loss per sample: 103.81360478444239 Std loss per sample: 53.381192171990385 ratio: 0.5142022790060186
Epoch ended with duration 0:00:01.004808
b'BLEU = 2.83, 8.6/3.0/2.0/1.6 (BP=0.949, ratio=0.951, hyp_len=2959, ref_len=3113)\n'
Validation perplexity: 1288002.240962807
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.83
Epoch 887 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.20482775224809302 Loss (std): 0.6608829867080591 Loss ratio: 3.2265304845389284 Tokens per Sec: 2351.9802881782634
Epoch Step: 10 / 67 Loss (mean): 0.07194403397807037 Loss (std): 0.18687116687704874 Loss ratio: 2.597451887866198 Tokens per Sec: 3079.5316723604305
Epoch Step: 15 / 67 Loss (mean): 0.07829563661653083 Loss (std): 0.2738426390925055 Loss ratio: 3.497546618513453 Tokens per Sec: 2835.396303217784
Epoch Step: 20 / 67 Loss (mean): 0.0830966615694706 Loss (std): 0.1946490313218868 Loss ratio: 2.3424410517281253 Tokens per Sec: 2662.7373999562697
Epoch Step: 25 / 67 Loss (mean): 0.18602428387202963 Loss (std): 0.6169752397118218 Loss ratio: 3.316638166102299 Tokens per Sec: 2890.882411574447
Epoch Step: 30 / 67 Loss (mean): 0.22414569307352394 Loss (std): 0.515272333343244 Loss ratio: 2.298827723512069 Tokens per Sec: 2474.1196128820156
Epoch Step: 35 / 67 Loss (mean): 0.3330256824674507 Loss (std): 0.8874257400828548 Loss ratio: 2.6647366458579067 Tokens per Sec: 2946.978161539824
Epoch Step: 40 / 67 Loss (mean): 0.24849012662571113 Loss (std): 0.9549205620812355 Loss ratio: 3.8428913657385952 Tokens per Sec: 3153.6420447515443
Epoch Step: 45 / 67 Loss (mean): 0.20596890219997022 Loss (std): 0.4694979026870765 Loss ratio: 2.279460140207245 Tokens per Sec: 3082.4678863414583
Epoch Step: 50 / 67 Loss (mean): 0.7897006241544204 Loss (std): 1.13878380794738 Loss ratio: 1.4420449637693318 Tokens per Sec: 2807.7354312524712
Epoch Step: 55 / 67 Loss (mean): 0.1859618326770942 Loss (std): 0.5291146943890239 Loss ratio: 2.845286512678026 Tokens per Sec: 3233.537876193492
Epoch Step: 60 / 67 Loss (mean): 0.07137387962893627 Loss (std): 0.15865354358037476 Loss ratio: 2.2228516146970625 Tokens per Sec: 2308.208163753947
Epoch Step: 65 / 67 Loss (mean): 3.991148435352443 Loss (std): 13.356650306592115 Loss ratio: 3.3465681677691452 Tokens per Sec: 2851.6869617202956
Mean loss per sample: 0.31888460160692567 Std loss per sample: 2.322249799851389 ratio: 7.282414353496815
Epoch ended with duration 0:00:11.229738
Train perplexity: 1.0440892721993837
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.49248158931732 Loss (std): 44.92414781435383 Loss ratio: 0.44263522884519124 Tokens per Sec: 4344.960259357696
Mean loss per sample: 108.64112095026391 Std loss per sample: 54.823433176147404 ratio: 0.5046287510347547
Epoch ended with duration 0:00:01.029798
b'BLEU = 2.31, 8.7/2.7/1.5/1.1 (BP=0.924, ratio=0.927, hyp_len=2885, ref_len=3113)\n'
Validation perplexity: 2477641.939506219
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.31
Epoch 888 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1760376806930708 Loss (std): 0.5990990719922621 Loss ratio: 3.4032433830846527 Tokens per Sec: 2591.1599596715346
Epoch Step: 10 / 67 Loss (mean): 0.2125304280648379 Loss (std): 0.5420557786998972 Loss ratio: 2.550485516993967 Tokens per Sec: 2567.5487133583356
Epoch Step: 15 / 67 Loss (mean): 0.16907085500653402 Loss (std): 0.7965407112620149 Loss ratio: 4.711283391991075 Tokens per Sec: 3063.4267520139456
Epoch Step: 20 / 67 Loss (mean): 0.2859059487941522 Loss (std): 0.8825531750397697 Loss ratio: 3.086865379199207 Tokens per Sec: 2715.5876726176057
Epoch Step: 25 / 67 Loss (mean): 0.3122305179149407 Loss (std): 1.0114879970560966 Loss ratio: 3.2395551972650245 Tokens per Sec: 2481.8032535298507
Epoch Step: 30 / 67 Loss (mean): 0.49467714339573376 Loss (std): 2.1107764888998517 Loss ratio: 4.266978001874779 Tokens per Sec: 2706.0281880816037
Epoch Step: 35 / 67 Loss (mean): 0.2162757570638405 Loss (std): 0.5729835646840833 Loss ratio: 2.6493194265640665 Tokens per Sec: 2683.874783993612
Epoch Step: 40 / 67 Loss (mean): 0.15524435341467324 Loss (std): 0.36421961751442405 Loss ratio: 2.3461054106203587 Tokens per Sec: 2979.1150662448945
Epoch Step: 45 / 67 Loss (mean): 0.2078621258460771 Loss (std): 0.5630503323624126 Loss ratio: 2.7087682764264334 Tokens per Sec: 2657.7040763342347
Epoch Step: 50 / 67 Loss (mean): 0.3013146198754839 Loss (std): 0.9896480600021191 Loss ratio: 3.284434258155426 Tokens per Sec: 3135.753210385424
Epoch Step: 55 / 67 Loss (mean): 0.12540542844908487 Loss (std): 0.40739275662743174 Loss ratio: 3.248605436508954 Tokens per Sec: 3090.166879358409
Epoch Step: 60 / 67 Loss (mean): 0.0909676428518651 Loss (std): 0.273011250234914 Loss ratio: 3.0011907715306543 Tokens per Sec: 2441.704105043299
Epoch Step: 65 / 67 Loss (mean): 0.13365902222585646 Loss (std): 0.4935224873433732 Loss ratio: 3.6923993541522466 Tokens per Sec: 3340.4761245782547
Mean loss per sample: 0.5368291077727031 Std loss per sample: 3.9548969802484732 ratio: 7.367143329200775
Epoch ended with duration 0:00:11.288864
Train perplexity: 1.0753356281110205
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily during run ( ) , and db connectivity[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.56097948551178 Loss (std): 46.18939381738903 Loss ratio: 0.4547946864177122 Tokens per Sec: 4442.873948952817
Mean loss per sample: 106.6313839743494 Std loss per sample: 54.12606218402635 ratio: 0.5075997343994577
Epoch ended with duration 0:00:01.021310
b'BLEU = 2.92, 9.2/3.3/2.2/1.8 (BP=0.890, ratio=0.896, hyp_len=2789, ref_len=3113)\n'
Validation perplexity: 1886931.4136938113
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.92
Epoch 889 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.23201767951832153 Loss (std): 0.6394296246827229 Loss ratio: 2.7559521585174274 Tokens per Sec: 2991.2148400356186
Epoch Step: 10 / 67 Loss (mean): 0.17800446940509573 Loss (std): 0.43345018913934913 Loss ratio: 2.4350522803611176 Tokens per Sec: 3127.9805009396623
Epoch Step: 15 / 67 Loss (mean): 0.10743063198515301 Loss (std): 0.20456162249311552 Loss ratio: 1.9041275166414926 Tokens per Sec: 3218.931578875119
Epoch Step: 20 / 67 Loss (mean): 0.1475883689620332 Loss (std): 0.5303448789359652 Loss ratio: 3.5934056502270533 Tokens per Sec: 2429.7073829412366
Epoch Step: 25 / 67 Loss (mean): 0.30902538510372324 Loss (std): 0.7148251665892233 Loss ratio: 2.313160021948666 Tokens per Sec: 2768.8150616492567
Epoch Step: 30 / 67 Loss (mean): 0.18807816828075374 Loss (std): 0.5183252376529397 Loss ratio: 2.7559032629412337 Tokens per Sec: 2646.7123899618973
Epoch Step: 35 / 67 Loss (mean): 1.6526468929457678 Loss (std): 6.737730499143714 Loss ratio: 4.076932905573081 Tokens per Sec: 2908.2932951331463
Epoch Step: 40 / 67 Loss (mean): 1.1068171334719636 Loss (std): 2.049062936401716 Loss ratio: 1.8513111827010038 Tokens per Sec: 2756.7743248562006
Epoch Step: 45 / 67 Loss (mean): 0.2894829653209854 Loss (std): 0.7546541619710332 Loss ratio: 2.606903522403314 Tokens per Sec: 3378.4400900525306
Epoch Step: 50 / 67 Loss (mean): 0.05707378611020886 Loss (std): 0.1369760215600456 Loss ratio: 2.399981338114601 Tokens per Sec: 2922.0946141440936
Epoch Step: 55 / 67 Loss (mean): 0.2609770805934204 Loss (std): 0.5458412988504684 Loss ratio: 2.091529637810769 Tokens per Sec: 2689.5693322873763
Epoch Step: 60 / 67 Loss (mean): 0.1422577442947386 Loss (std): 0.47822248826635627 Loss ratio: 3.3616622464893346 Tokens per Sec: 2273.7725816359143
Epoch Step: 65 / 67 Loss (mean): 0.3233755124883828 Loss (std): 0.8734925638263449 Loss ratio: 2.7011710228297665 Tokens per Sec: 2571.522302322855
Mean loss per sample: 0.30775301065523114 Std loss per sample: 1.7814692022399494 ratio: 5.788632898983042
Epoch ended with duration 0:00:11.249494
Train perplexity: 1.0425179518013423
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use gwt_binary ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 102.10572004318237 Loss (std): 45.23674554269524 Loss ratio: 0.44303830895628366 Tokens per Sec: 4319.759972432067
Mean loss per sample: 106.89676071437778 Std loss per sample: 55.45011093653128 ratio: 0.5187258300996689
Epoch ended with duration 0:00:01.018726
b'BLEU = 2.43, 8.2/2.6/1.7/1.3 (BP=0.921, ratio=0.924, hyp_len=2876, ref_len=3113)\n'
Validation perplexity: 1956026.6976049813
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.43
Epoch 890 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.06947722935365164 Loss (std): 0.18498057593455605 Loss ratio: 2.6624633373471407 Tokens per Sec: 2426.4976566699306
Epoch Step: 10 / 67 Loss (mean): 0.47889603033581807 Loss (std): 0.7491768395857817 Loss ratio: 1.5643830646506585 Tokens per Sec: 2605.0461013615686
Epoch Step: 15 / 67 Loss (mean): 0.07584914645121899 Loss (std): 0.15346250423829236 Loss ratio: 2.0232594751344894 Tokens per Sec: 3492.382327731507
Epoch Step: 20 / 67 Loss (mean): 1.0230474914869774 Loss (std): 1.629780426902714 Loss ratio: 1.59306429121278 Tokens per Sec: 2653.5919413702436
Epoch Step: 25 / 67 Loss (mean): 0.06923271259233843 Loss (std): 0.12860912949014944 Loss ratio: 1.8576352807008438 Tokens per Sec: 2661.3684404949804
Epoch Step: 30 / 67 Loss (mean): 0.12133193441587764 Loss (std): 0.30164076770520537 Loss ratio: 2.48607894663 Tokens per Sec: 2958.247348537555
Epoch Step: 35 / 67 Loss (mean): 0.2789793436825221 Loss (std): 0.7127917036789418 Loss ratio: 2.5549981381062294 Tokens per Sec: 2744.300767323575
Epoch Step: 40 / 67 Loss (mean): 0.19133455914743536 Loss (std): 0.6249524585893106 Loss ratio: 3.266281122312803 Tokens per Sec: 3063.2728213556024
Epoch Step: 45 / 67 Loss (mean): 0.10418606043367618 Loss (std): 0.32734202062408524 Loss ratio: 3.141898438826833 Tokens per Sec: 2904.570639305676
Epoch Step: 50 / 67 Loss (mean): 0.18596510459519777 Loss (std): 0.5914458884150378 Loss ratio: 3.1804132807737027 Tokens per Sec: 2698.851558883679
Epoch Step: 55 / 67 Loss (mean): 0.10467705377959646 Loss (std): 0.2745976938763135 Loss ratio: 2.623284511374333 Tokens per Sec: 2774.877876813576
Epoch Step: 60 / 67 Loss (mean): 0.45233461303541844 Loss (std): 1.0941096604679006 Loss ratio: 2.418805965623131 Tokens per Sec: 3217.7670766637484
Epoch Step: 65 / 67 Loss (mean): 0.2856037409383134 Loss (std): 0.9079578610429239 Loss ratio: 3.1790825220284162 Tokens per Sec: 2906.727487307624
Mean loss per sample: 0.27385490524630396 Std loss per sample: 1.7445682960829259 ratio: 6.370410982830008
Epoch ended with duration 0:00:11.232781
Train perplexity: 1.0377474913036373
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily nested ( ) ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 102.18124487996101 Loss (std): 45.55336512634141 Loss ratio: 0.44580945534433375 Tokens per Sec: 4454.401846698879
Mean loss per sample: 109.94932174009317 Std loss per sample: 54.935127786122955 ratio: 0.4996404426757895
Epoch ended with duration 0:00:01.034860
b'BLEU = 2.48, 8.4/2.7/1.7/1.3 (BP=0.938, ratio=0.940, hyp_len=2927, ref_len=3113)\n'
Validation perplexity: 2958232.3654336412
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.48
Model saved checkpoint_commit_msg_generator!
Epoch 891 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1566171402607779 Loss (std): 0.421680434078948 Loss ratio: 2.6924283854041917 Tokens per Sec: 2486.264480922528
Epoch Step: 10 / 67 Loss (mean): 0.3143130343825078 Loss (std): 0.6666567442461345 Loss ratio: 2.1209961768077266 Tokens per Sec: 2929.9843027051925
Epoch Step: 15 / 67 Loss (mean): 0.277324554270308 Loss (std): 0.7105132984282031 Loss ratio: 2.5620280912294064 Tokens per Sec: 2938.9156560963293
Epoch Step: 20 / 67 Loss (mean): 0.03864295325774947 Loss (std): 0.09987992625145656 Loss ratio: 2.584686671985315 Tokens per Sec: 2545.611439280364
Epoch Step: 25 / 67 Loss (mean): 0.31448130148942255 Loss (std): 1.3190333732100066 Loss ratio: 4.194314151470693 Tokens per Sec: 3203.7956121347115
Epoch Step: 30 / 67 Loss (mean): 0.16285736066311074 Loss (std): 0.4970531872355456 Loss ratio: 3.0520768923902524 Tokens per Sec: 2863.600798597227
Epoch Step: 35 / 67 Loss (mean): 0.11737219266797183 Loss (std): 0.4330903720717929 Loss ratio: 3.6898890804310014 Tokens per Sec: 3254.8109027114406
Epoch Step: 40 / 67 Loss (mean): 1.1823669864315889 Loss (std): 1.6477558068924103 Loss ratio: 1.3936077595209044 Tokens per Sec: 2436.777162545096
Epoch Step: 45 / 67 Loss (mean): 0.12431774952347041 Loss (std): 0.4209874900695586 Loss ratio: 3.3863828108477687 Tokens per Sec: 2692.4154467770686
Epoch Step: 50 / 67 Loss (mean): 0.15996047424187054 Loss (std): 0.4035878530274166 Loss ratio: 2.5230473649206977 Tokens per Sec: 3478.279756656344
Epoch Step: 55 / 67 Loss (mean): 1.8156639489989175 Loss (std): 6.883943569618545 Loss ratio: 3.791419427264648 Tokens per Sec: 2853.1226259028945
Epoch Step: 60 / 67 Loss (mean): 0.5761734520638129 Loss (std): 3.3658240536904036 Loss ratio: 5.84168541892074 Tokens per Sec: 2690.768538390007
Epoch Step: 65 / 67 Loss (mean): 0.06384426188424186 Loss (std): 0.24724531620284265 Loss ratio: 3.8726317590002264 Tokens per Sec: 2780.1546569285238
Mean loss per sample: 0.3657672272122999 Std loss per sample: 2.5589614561213034 ratio: 6.9961474559228956
Epoch ended with duration 0:00:11.282636
Train perplexity: 1.0507331949991947
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for non-admin[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.62541353702545 Loss (std): 44.78068982935272 Loss ratio: 0.4406446012939239 Tokens per Sec: 4438.560693456955
Mean loss per sample: 106.08262997938961 Std loss per sample: 55.21034659009885 ratio: 0.5204466235502029
Epoch ended with duration 0:00:01.020635
b'BLEU = 2.80, 8.7/3.0/2.1/1.6 (BP=0.908, ratio=0.912, hyp_len=2839, ref_len=3113)\n'
Validation perplexity: 1751698.561114095
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.8
Epoch 892 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.06937564731094881 Loss (std): 0.13992565389791936 Loss ratio: 2.0169275433317133 Tokens per Sec: 3498.9944898712324
Epoch Step: 10 / 67 Loss (mean): 0.17938180731061948 Loss (std): 0.5266051070136152 Loss ratio: 2.935666191063289 Tokens per Sec: 2435.2123611267043
Epoch Step: 15 / 67 Loss (mean): 0.5863591108809487 Loss (std): 3.1382300697257834 Loss ratio: 5.352061580506342 Tokens per Sec: 2920.9917354595436
Epoch Step: 20 / 67 Loss (mean): 0.20065526549569768 Loss (std): 0.6262805437305745 Loss ratio: 3.1211767215946935 Tokens per Sec: 2933.2304563879657
Epoch Step: 25 / 67 Loss (mean): 0.17340076373511693 Loss (std): 0.533447483317021 Loss ratio: 3.0763848545206134 Tokens per Sec: 2295.2649300433654
Epoch Step: 30 / 67 Loss (mean): 0.10934665058175597 Loss (std): 0.28411827516749205 Loss ratio: 2.598326273881278 Tokens per Sec: 3346.286699835802
Epoch Step: 35 / 67 Loss (mean): 0.47568292193227535 Loss (std): 1.7333254307159036 Loss ratio: 3.643867271238052 Tokens per Sec: 2660.462804543902
Epoch Step: 40 / 67 Loss (mean): 0.028463264924539544 Loss (std): 0.03826131247873226 Loss ratio: 1.3442348437598017 Tokens per Sec: 2810.2799848516547
Epoch Step: 45 / 67 Loss (mean): 0.15800175979211417 Loss (std): 0.47007453497826235 Loss ratio: 2.975122147985871 Tokens per Sec: 2743.10203110115
Epoch Step: 50 / 67 Loss (mean): 10.879639744684482 Loss (std): 23.863063163299397 Loss ratio: 2.1933688728028233 Tokens per Sec: 2641.490282296608
Epoch Step: 55 / 67 Loss (mean): 0.32494524358480703 Loss (std): 0.7575854057168507 Loss ratio: 2.3314248190222533 Tokens per Sec: 3751.8867015503533
Epoch Step: 60 / 67 Loss (mean): 0.28771981585896356 Loss (std): 1.712474809719668 Loss ratio: 5.9518834481636835 Tokens per Sec: 2400.2661347585818
Epoch Step: 65 / 67 Loss (mean): 2.2995627110149144 Loss (std): 12.172998651260247 Loss ratio: 5.293614561130052 Tokens per Sec: 2699.8875299595975
Mean loss per sample: 0.4465650459422687 Std loss per sample: 3.8277400911979145 ratio: 8.571517466444876
Epoch ended with duration 0:00:11.286386
Train perplexity: 1.0622827424855559
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( ) and hint[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for branch[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.34413105249405 Loss (std): 45.35662682766934 Loss ratio: 0.4475506016641022 Tokens per Sec: 4435.240784610003
Mean loss per sample: 104.2247509720323 Std loss per sample: 53.52618972382627 ratio: 0.5135650526830187
Epoch ended with duration 0:00:01.006697
b'BLEU = 2.25, 8.4/2.5/1.5/1.1 (BP=0.939, ratio=0.941, hyp_len=2930, ref_len=3113)\n'
Validation perplexity: 1361803.6581181802
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.25
Epoch 893 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.46187988003839564 Loss (std): 0.798390872888854 Loss ratio: 1.7285682000750597 Tokens per Sec: 3639.414228039149
Epoch Step: 10 / 67 Loss (mean): 0.16430997589941398 Loss (std): 0.5033544007069674 Loss ratio: 3.06344394460326 Tokens per Sec: 2596.400445680041
Epoch Step: 15 / 67 Loss (mean): 0.11819716598301966 Loss (std): 0.341950100600379 Loss ratio: 2.8930482195275644 Tokens per Sec: 2996.2533146780206
Epoch Step: 20 / 67 Loss (mean): 0.14383719120451133 Loss (std): 0.30975994992319184 Loss ratio: 2.153545597833368 Tokens per Sec: 2751.139675791441
Epoch Step: 25 / 67 Loss (mean): 0.05429313257835539 Loss (std): 0.14778244396983137 Loss ratio: 2.7219362182970928 Tokens per Sec: 2545.0296927392837
Epoch Step: 30 / 67 Loss (mean): 0.21981330865855853 Loss (std): 0.7101272942460642 Loss ratio: 3.2305928088691056 Tokens per Sec: 3075.094303906546
Epoch Step: 35 / 67 Loss (mean): 0.4971916857950873 Loss (std): 1.0698338489327286 Loss ratio: 2.151753296561862 Tokens per Sec: 2869.0790671278605
Epoch Step: 40 / 67 Loss (mean): 0.8988370159701162 Loss (std): 4.954593739133847 Loss ratio: 5.512227079106601 Tokens per Sec: 2685.3596896894524
Epoch Step: 45 / 67 Loss (mean): 0.41819465228581976 Loss (std): 2.6917997323057183 Loss ratio: 6.436714858959933 Tokens per Sec: 2711.557654722773
Epoch Step: 50 / 67 Loss (mean): 0.09670723757199085 Loss (std): 0.32418571406871793 Loss ratio: 3.3522383867845202 Tokens per Sec: 2725.9618661424106
Epoch Step: 55 / 67 Loss (mean): 0.1645147083206666 Loss (std): 0.7973881856551097 Loss ratio: 4.84691122024705 Tokens per Sec: 3557.44437420745
Epoch Step: 60 / 67 Loss (mean): 0.19534077783009707 Loss (std): 0.4511804843055786 Loss ratio: 2.3097096741265415 Tokens per Sec: 2497.6431476463827
Epoch Step: 65 / 67 Loss (mean): 1.5579222969618058 Loss (std): 8.500160734492795 Loss ratio: 5.45608773368829 Tokens per Sec: 2204.014983581633
Mean loss per sample: 0.2933113926870434 Std loss per sample: 1.7488818618154947 ratio: 5.962543240458142
Epoch ended with duration 0:00:11.310061
Train perplexity: 1.0404829160203863
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a unit testing parameters[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.53583863377571 Loss (std): 45.475571235944 Loss ratio: 0.44787704369062686 Tokens per Sec: 4428.0375440217995
Mean loss per sample: 104.49023103742998 Std loss per sample: 54.654030966430014 ratio: 0.5230539776187509
Epoch ended with duration 0:00:01.007318
b'BLEU = 2.66, 8.7/3.0/2.0/1.6 (BP=0.884, ratio=0.890, hyp_len=2771, ref_len=3113)\n'
Validation perplexity: 1411689.6839706346
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.66
Epoch 894 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5696707543393131 Loss (std): 4.052924559953268 Loss ratio: 7.11450347254306 Tokens per Sec: 2407.987929915886
Epoch Step: 10 / 67 Loss (mean): 0.17830810079522053 Loss (std): 0.4082451123487116 Loss ratio: 2.2895488793162806 Tokens per Sec: 2591.78611849554
Epoch Step: 15 / 67 Loss (mean): 0.0559402797173334 Loss (std): 0.0999122080199708 Loss ratio: 1.786051276912233 Tokens per Sec: 3098.3994670232896
Epoch Step: 20 / 67 Loss (mean): 0.3639589863114452 Loss (std): 1.0583642651278562 Loss ratio: 2.9079217849623253 Tokens per Sec: 2966.6571718444684
Epoch Step: 25 / 67 Loss (mean): 1.168823666002936 Loss (std): 4.805601542949298 Loss ratio: 4.1114854898371185 Tokens per Sec: 2764.209260903722
Epoch Step: 30 / 67 Loss (mean): 0.29800310362952587 Loss (std): 0.623216153183369 Loss ratio: 2.0913075924140183 Tokens per Sec: 3001.5223709852444
Epoch Step: 35 / 67 Loss (mean): 0.2309805450126987 Loss (std): 0.66926094564508 Loss ratio: 2.897477558589559 Tokens per Sec: 3067.7966741138684
Epoch Step: 40 / 67 Loss (mean): 0.16615635313416988 Loss (std): 0.3782192759805358 Loss ratio: 2.276285371255873 Tokens per Sec: 2612.4062853518344
Epoch Step: 45 / 67 Loss (mean): 0.12510768484753498 Loss (std): 0.6090552647203327 Loss ratio: 4.868248225219499 Tokens per Sec: 2474.187708847814
Epoch Step: 50 / 67 Loss (mean): 0.3590990724514995 Loss (std): 0.7884826985544191 Loss ratio: 2.1957246872613765 Tokens per Sec: 2249.876573757975
Epoch Step: 55 / 67 Loss (mean): 0.2848568871372663 Loss (std): 0.6843280733081113 Loss ratio: 2.4023574791728612 Tokens per Sec: 3524.3875526372626
Epoch Step: 60 / 67 Loss (mean): 0.44891408627518103 Loss (std): 0.8866711588057039 Loss ratio: 1.975146661497677 Tokens per Sec: 3423.460560523698
Epoch Step: 65 / 67 Loss (mean): 0.2859270667986493 Loss (std): 0.6893196084350903 Loss ratio: 2.410823208005387 Tokens per Sec: 2690.420488628656
Mean loss per sample: 0.3281528525203987 Std loss per sample: 2.191893416861196 ratio: 6.679489146677288
Epoch ended with duration 0:00:11.314483
Train perplexity: 1.0453993727398823
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to start[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for non-admin[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.2602413892746 Loss (std): 44.79940318422914 Loss ratio: 0.44683119214015365 Tokens per Sec: 4477.1109935524755
Mean loss per sample: 104.42924249135568 Std loss per sample: 53.93688079609092 ratio: 0.5164921195378358
Epoch ended with duration 0:00:01.002520
b'BLEU = 2.57, 8.2/2.8/1.8/1.3 (BP=0.945, ratio=0.947, hyp_len=2947, ref_len=3113)\n'
Validation perplexity: 1400070.0960260392
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.57
Epoch 895 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.0307442650491794 Loss (std): 7.370003265026208 Loss ratio: 7.150176348227915 Tokens per Sec: 2818.4752841943314
Epoch Step: 10 / 67 Loss (mean): 0.15699709757200253 Loss (std): 0.42056065246013585 Loss ratio: 2.678779792519775 Tokens per Sec: 2936.8007514490596
Epoch Step: 15 / 67 Loss (mean): 0.14642341421586025 Loss (std): 0.6142571149636409 Loss ratio: 4.195074389250964 Tokens per Sec: 3129.1846502077697
Epoch Step: 20 / 67 Loss (mean): 0.10332326317995921 Loss (std): 0.39359067380377444 Loss ratio: 3.8093132339253883 Tokens per Sec: 2741.254861242786
Epoch Step: 25 / 67 Loss (mean): 0.05432263072225396 Loss (std): 0.10326481240405366 Loss ratio: 1.9009538203706675 Tokens per Sec: 2866.90620294747
Epoch Step: 30 / 67 Loss (mean): 0.1175955356693521 Loss (std): 0.3939171602182139 Loss ratio: 3.349762879823992 Tokens per Sec: 2245.2288912762833
Epoch Step: 35 / 67 Loss (mean): 0.0668496440130184 Loss (std): 0.1350736017957006 Loss ratio: 2.0205582810492775 Tokens per Sec: 2565.8346525522275
Epoch Step: 40 / 67 Loss (mean): 0.511747309279599 Loss (std): 1.0794083421197769 Loss ratio: 2.109260415339145 Tokens per Sec: 3758.1758116615233
Epoch Step: 45 / 67 Loss (mean): 0.4703288789205544 Loss (std): 1.065896597348235 Loss ratio: 2.2662792890680246 Tokens per Sec: 2780.653705131848
Epoch Step: 50 / 67 Loss (mean): 0.28436562451656755 Loss (std): 0.8819409923725753 Loss ratio: 3.101433212512619 Tokens per Sec: 3049.5155956408485
Epoch Step: 55 / 67 Loss (mean): 1.2819744756598084 Loss (std): 6.447885388582 Loss ratio: 5.029651924437414 Tokens per Sec: 2090.1669473341385
Epoch Step: 60 / 67 Loss (mean): 0.26542253267689375 Loss (std): 0.7781279308485822 Loss ratio: 2.9316573954774934 Tokens per Sec: 2985.8697893711696
Epoch Step: 65 / 67 Loss (mean): 0.06503799810525379 Loss (std): 0.16988129310904942 Loss ratio: 2.6120313979240755 Tokens per Sec: 2727.5936522820125
Mean loss per sample: 0.33266723057793407 Std loss per sample: 2.569790152771088 ratio: 7.724807004004148
Epoch ended with duration 0:00:11.291726
Train perplexity: 1.0460380915127465
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily 0 during ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add method_1 for useful[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.71071085333824 Loss (std): 45.96160810315888 Loss ratio: 0.45188562460676557 Tokens per Sec: 4481.816774193549
Mean loss per sample: 105.42021781796987 Std loss per sample: 54.75028849101287 ratio: 0.5193528302659243
Epoch ended with duration 0:00:01.000232
b'BLEU = 2.64, 8.7/2.8/1.8/1.5 (BP=0.925, ratio=0.928, hyp_len=2888, ref_len=3113)\n'
Validation perplexity: 1601302.260095332
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.64
Model saved checkpoint_commit_msg_generator!
Epoch 896 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.08041559651155694 Loss (std): 0.260361197568758 Loss ratio: 3.2376952837916226 Tokens per Sec: 2677.608129724929
Epoch Step: 10 / 67 Loss (mean): 0.07086456159868249 Loss (std): 0.1622299210423916 Loss ratio: 2.2892954868065925 Tokens per Sec: 2381.001293427071
Epoch Step: 15 / 67 Loss (mean): 0.16858928721558186 Loss (std): 0.322797897669713 Loss ratio: 1.9146999373509328 Tokens per Sec: 3359.7198495262505
Epoch Step: 20 / 67 Loss (mean): 0.12157841018779436 Loss (std): 0.4656860089653828 Loss ratio: 3.8303347464904958 Tokens per Sec: 2623.7834482765843
Epoch Step: 25 / 67 Loss (mean): 0.11248524949132843 Loss (std): 0.26716071753397164 Loss ratio: 2.375073342879212 Tokens per Sec: 3023.8256057732765
Epoch Step: 30 / 67 Loss (mean): 0.18823240169967903 Loss (std): 0.6595469302571318 Loss ratio: 3.5038969077673756 Tokens per Sec: 2474.074703992037
Epoch Step: 35 / 67 Loss (mean): 0.02234899848172929 Loss (std): 0.030164052024354533 Loss ratio: 1.3496824946770742 Tokens per Sec: 2633.3838244717413
Epoch Step: 40 / 67 Loss (mean): 4.761547209765922 Loss (std): 15.151129011786598 Loss ratio: 3.181976014164402 Tokens per Sec: 3099.218364012245
Epoch Step: 45 / 67 Loss (mean): 0.5060395524460546 Loss (std): 0.903352489381998 Loss ratio: 1.7851420605670902 Tokens per Sec: 2879.594685071153
Epoch Step: 50 / 67 Loss (mean): 0.1460286699821154 Loss (std): 0.44466227121765084 Loss ratio: 3.045034042096734 Tokens per Sec: 2593.8973630623386
Epoch Step: 55 / 67 Loss (mean): 0.38814415617912346 Loss (std): 2.7761644875180074 Loss ratio: 7.152405732051892 Tokens per Sec: 2757.1192914475505
Epoch Step: 60 / 67 Loss (mean): 0.29159278578390513 Loss (std): 0.6612667147053597 Loss ratio: 2.267774605354654 Tokens per Sec: 3207.184840813117
Epoch Step: 65 / 67 Loss (mean): 0.1920621365493389 Loss (std): 0.6468314861583773 Loss ratio: 3.367824068708163 Tokens per Sec: 2990.2215235621647
Mean loss per sample: 0.5554694291278769 Std loss per sample: 4.258893452965471 ratio: 7.667196842231642
Epoch ended with duration 0:00:11.309300
Train perplexity: 1.078051079781922
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a unit for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.2095538675785 Loss (std): 45.149472248817865 Loss ratio: 0.4505505763300817 Tokens per Sec: 4437.306534054238
Mean loss per sample: 103.90989077990477 Std loss per sample: 53.673868321097366 ratio: 0.5165424380513102
Epoch ended with duration 0:00:01.007078
b'BLEU = 2.29, 8.1/2.7/1.6/1.1 (BP=0.917, ratio=0.920, hyp_len=2865, ref_len=3113)\n'
Validation perplexity: 1304918.836501481
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.29
Epoch 897 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.09096706456602988 Loss (std): 0.26192925707263415 Loss ratio: 2.8793856141472904 Tokens per Sec: 2774.193517811655
Epoch Step: 10 / 67 Loss (mean): 0.20082897487827722 Loss (std): 0.6279937337474337 Loss ratio: 3.1270076149522836 Tokens per Sec: 3143.6705380135536
Epoch Step: 15 / 67 Loss (mean): 0.0656264855695099 Loss (std): 0.12456542139928964 Loss ratio: 1.898096786964969 Tokens per Sec: 2967.7268476763893
Epoch Step: 20 / 67 Loss (mean): 0.18185018294252586 Loss (std): 0.5333711691840816 Loss ratio: 2.933025199939747 Tokens per Sec: 2934.7149433492523
Epoch Step: 25 / 67 Loss (mean): 0.15588542125510685 Loss (std): 0.5402787352625995 Loss ratio: 3.465870835852136 Tokens per Sec: 2707.8046092112736
Epoch Step: 30 / 67 Loss (mean): 0.046809856772597414 Loss (std): 0.07020761341126507 Loss ratio: 1.499846789797587 Tokens per Sec: 2306.448048374206
Epoch Step: 35 / 67 Loss (mean): 0.07031971011133464 Loss (std): 0.2077432235120075 Loss ratio: 2.954267348131771 Tokens per Sec: 2636.6838432315108
Epoch Step: 40 / 67 Loss (mean): 0.15726816789629083 Loss (std): 0.5401106098322268 Loss ratio: 3.4343288731410553 Tokens per Sec: 2936.755433397142
Epoch Step: 45 / 67 Loss (mean): 0.1394386668757761 Loss (std): 0.41783619983449805 Loss ratio: 2.996559054933753 Tokens per Sec: 2188.9894817751997
Epoch Step: 50 / 67 Loss (mean): 0.3343044880512025 Loss (std): 0.7015912354957632 Loss ratio: 2.0986593377361618 Tokens per Sec: 3319.1519373816654
Epoch Step: 55 / 67 Loss (mean): 0.029052401848492167 Loss (std): 0.06358540437231539 Loss ratio: 2.1886453555169827 Tokens per Sec: 2539.826116678115
Epoch Step: 60 / 67 Loss (mean): 0.11649511494715625 Loss (std): 0.2886527471085183 Loss ratio: 2.477809882753067 Tokens per Sec: 2802.684460326586
Epoch Step: 65 / 67 Loss (mean): 0.5309829920279299 Loss (std): 1.1629625682084703 Loss ratio: 2.1902068157906234 Tokens per Sec: 3482.594837199507
Mean loss per sample: 0.318556266663485 Std loss per sample: 2.405743807567524 ratio: 7.552021602855148
Epoch ended with duration 0:00:11.277000
Train perplexity: 1.0440428910002189
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily into one ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add method_1 for big5han and gb2312han[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.87987068295479 Loss (std): 44.852943096657846 Loss ratio: 0.4490688943624385 Tokens per Sec: 4327.98708277305
Mean loss per sample: 106.33522129198536 Std loss per sample: 54.6276503675913 ratio: 0.5137305372938427
Epoch ended with duration 0:00:01.020813
b'BLEU = 2.60, 8.9/3.1/1.9/1.4 (BP=0.887, ratio=0.893, hyp_len=2780, ref_len=3113)\n'
Validation perplexity: 1812698.4125470547
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.6
Epoch 898 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3189458056112926 Loss (std): 0.6862756567426969 Loss ratio: 2.151699895934918 Tokens per Sec: 3117.2861973045137
Epoch Step: 10 / 67 Loss (mean): 0.9666100589574853 Loss (std): 3.140683274732609 Loss ratio: 3.249172968590788 Tokens per Sec: 2792.540383668477
Epoch Step: 15 / 67 Loss (mean): 0.12205232604264893 Loss (std): 0.289040551559915 Loss ratio: 2.3681691363990485 Tokens per Sec: 3049.100756125291
Epoch Step: 20 / 67 Loss (mean): 0.24739670137341818 Loss (std): 0.5638024103293304 Loss ratio: 2.278940694032668 Tokens per Sec: 2993.8942206012443
Epoch Step: 25 / 67 Loss (mean): 0.21213540768303574 Loss (std): 0.9852305136145386 Loss ratio: 4.644347326904666 Tokens per Sec: 3256.2430091280708
Epoch Step: 30 / 67 Loss (mean): 0.2024266748885566 Loss (std): 0.5790470162519544 Loss ratio: 2.860527233235152 Tokens per Sec: 2333.967418619355
Epoch Step: 35 / 67 Loss (mean): 0.20084672897121436 Loss (std): 0.4574798356509639 Loss ratio: 2.2777559684157493 Tokens per Sec: 2661.0694084935544
Epoch Step: 40 / 67 Loss (mean): 0.16083683217311773 Loss (std): 0.5172678087627682 Loss ratio: 3.216102939692345 Tokens per Sec: 2563.3551427298585
Epoch Step: 45 / 67 Loss (mean): 0.15868221509026625 Loss (std): 0.8976425131872786 Loss ratio: 5.656856457900184 Tokens per Sec: 2534.8671067423397
Epoch Step: 50 / 67 Loss (mean): 0.22303574118006964 Loss (std): 0.6592316646494789 Loss ratio: 2.955722079167765 Tokens per Sec: 3190.257670712418
Epoch Step: 55 / 67 Loss (mean): 1.4907984554756695 Loss (std): 6.7547291992882545 Loss ratio: 4.5309472749171995 Tokens per Sec: 2494.115738121938
Epoch Step: 60 / 67 Loss (mean): 1.0846018446886774 Loss (std): 5.327351478830649 Loss ratio: 4.9118038153068095 Tokens per Sec: 2485.814076228886
Epoch Step: 65 / 67 Loss (mean): 0.053006926430498424 Loss (std): 0.146029249669656 Loss ratio: 2.7549088299078517 Tokens per Sec: 2565.963602384125
Mean loss per sample: 0.30809172328699325 Std loss per sample: 1.8960728509483047 ratio: 6.154247932139602
Epoch ended with duration 0:00:11.377879
Train perplexity: 1.0425657291193833
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.87286669015884 Loss (std): 44.243237774676395 Loss ratio: 0.4386039499657916 Tokens per Sec: 4306.582102788851
Mean loss per sample: 107.43528504091024 Std loss per sample: 54.488601742322636 ratio: 0.507176033661324
Epoch ended with duration 0:00:01.024296
b'BLEU = 2.30, 8.2/2.5/1.4/1.1 (BP=0.976, ratio=0.977, hyp_len=3040, ref_len=3113)\n'
Validation perplexity: 2104114.9191008
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.3
Epoch 899 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.19029691038667806 Loss (std): 0.5435642652677962 Loss ratio: 2.8564008956492706 Tokens per Sec: 2396.2996409242596
Epoch Step: 10 / 67 Loss (mean): 0.33108543330240536 Loss (std): 0.7777308033586884 Loss ratio: 2.3490335881021016 Tokens per Sec: 2718.5517060358716
Epoch Step: 15 / 67 Loss (mean): 0.15497341044829227 Loss (std): 0.4552922424163751 Loss ratio: 2.9378732848386653 Tokens per Sec: 2771.0639260135836
Epoch Step: 20 / 67 Loss (mean): 0.9073989151020214 Loss (std): 1.3093289683574865 Loss ratio: 1.4429474694823443 Tokens per Sec: 3149.0337142652756
Epoch Step: 25 / 67 Loss (mean): 0.2624426168745231 Loss (std): 1.1131383405171942 Loss ratio: 4.241454203489362 Tokens per Sec: 2956.430417942305
Epoch Step: 30 / 67 Loss (mean): 0.09413152360002641 Loss (std): 0.2596628577403995 Loss ratio: 2.758511153433903 Tokens per Sec: 2918.1186201802543
Epoch Step: 35 / 67 Loss (mean): 0.11693957620173023 Loss (std): 0.2755658820559553 Loss ratio: 2.3564809366213355 Tokens per Sec: 2474.4553146403914
Epoch Step: 40 / 67 Loss (mean): 0.04265555973870505 Loss (std): 0.0741586102698197 Loss ratio: 1.7385450038422359 Tokens per Sec: 3158.000039271314
Epoch Step: 45 / 67 Loss (mean): 0.21011641399081782 Loss (std): 0.44564605155158554 Loss ratio: 2.1209483023589986 Tokens per Sec: 2753.0005208446773
Epoch Step: 50 / 67 Loss (mean): 0.09696165944842505 Loss (std): 0.2599816386142368 Loss ratio: 2.6812828915384213 Tokens per Sec: 2805.3934677033353
Epoch Step: 55 / 67 Loss (mean): 0.2814279302056093 Loss (std): 0.8654154726094088 Loss ratio: 3.075087365980847 Tokens per Sec: 2710.2551584597163
Epoch Step: 60 / 67 Loss (mean): 0.27072661667352804 Loss (std): 0.5864665794170788 Loss ratio: 2.166268638906328 Tokens per Sec: 2659.9421402400253
Epoch Step: 65 / 67 Loss (mean): 0.33268945080180856 Loss (std): 0.6090136194274894 Loss ratio: 1.8305768877243243 Tokens per Sec: 2636.8058535378127
Mean loss per sample: 0.36060445807923597 Std loss per sample: 2.424572243083348 ratio: 6.723633579013032
Epoch ended with duration 0:00:11.387461
Train perplexity: 1.0499994918808404
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use gwt_binary ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for branch[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.89982125163078 Loss (std): 44.287281688990234 Loss ratio: 0.44331692623791635 Tokens per Sec: 4426.144913839104
Mean loss per sample: 106.52729504802798 Std loss per sample: 53.696743738755416 ratio: 0.5040655891482663
Epoch ended with duration 0:00:01.025391
b'BLEU = 2.35, 8.3/2.7/1.5/1.1 (BP=0.955, ratio=0.956, hyp_len=2976, ref_len=3113)\n'
Validation perplexity: 1860501.3697971976
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.35
Epoch 900 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5334529389538147 Loss (std): 0.9279466492943129 Loss ratio: 1.7395098640081776 Tokens per Sec: 2629.5978846291277
Epoch Step: 10 / 67 Loss (mean): 0.8970573165870519 Loss (std): 1.2086954371966794 Loss ratio: 1.3474004557426578 Tokens per Sec: 3229.7577140330677
Epoch Step: 15 / 67 Loss (mean): 0.1858182615617352 Loss (std): 0.6517233464330513 Loss ratio: 3.5073159169370793 Tokens per Sec: 2444.5975024690156
Epoch Step: 20 / 67 Loss (mean): 0.047590449224853296 Loss (std): 0.08437676818292428 Loss ratio: 1.772976921992574 Tokens per Sec: 3153.0832597261583
Epoch Step: 25 / 67 Loss (mean): 0.2066915712989612 Loss (std): 0.5785533739373259 Loss ratio: 2.7991144984838265 Tokens per Sec: 2317.1024023145033
Epoch Step: 30 / 67 Loss (mean): 0.459812346376566 Loss (std): 0.8124785001059042 Loss ratio: 1.7669784348080992 Tokens per Sec: 3113.903005059447
Epoch Step: 35 / 67 Loss (mean): 1.9365577609796674 Loss (std): 10.279885066640896 Loss ratio: 5.308328661181012 Tokens per Sec: 2873.24632976128
Epoch Step: 40 / 67 Loss (mean): 0.207205561304022 Loss (std): 0.48019377933452095 Loss ratio: 2.3174753433859694 Tokens per Sec: 3368.874552433453
Epoch Step: 45 / 67 Loss (mean): 0.10020710633034469 Loss (std): 0.2316878236119588 Loss ratio: 2.3120897518801935 Tokens per Sec: 2834.009422401693
Epoch Step: 50 / 67 Loss (mean): 0.16845647567788546 Loss (std): 0.4227565472065999 Loss ratio: 2.509589171359462 Tokens per Sec: 2599.028906136739
Epoch Step: 55 / 67 Loss (mean): 0.16566163333936856 Loss (std): 0.5489422280547835 Loss ratio: 3.313635251502319 Tokens per Sec: 2853.131194589598
Epoch Step: 60 / 67 Loss (mean): 0.21379497980797169 Loss (std): 0.5729282534325392 Loss ratio: 2.679802182198745 Tokens per Sec: 2870.4547278960063
Epoch Step: 65 / 67 Loss (mean): 0.07059348544225941 Loss (std): 0.21926027315317168 Loss ratio: 3.105956190993168 Tokens per Sec: 2349.6800683325205
Mean loss per sample: 0.6418604947493519 Std loss per sample: 4.629527994756133 ratio: 7.212670093622096
Epoch ended with duration 0:00:11.365613
Train perplexity: 1.0907260132574013
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( ) and hint[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog class provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.93153503537178 Loss (std): 45.11130451186871 Loss ratio: 0.44694955343797466 Tokens per Sec: 4442.89565468812
Mean loss per sample: 105.19062816963883 Std loss per sample: 54.578799770379504 ratio: 0.5188561064809059
Epoch ended with duration 0:00:01.018256
b'BLEU = 2.53, 8.3/2.9/1.8/1.3 (BP=0.921, ratio=0.924, hyp_len=2877, ref_len=3113)\n'
Validation perplexity: 1552247.2211761824
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.53
Model saved checkpoint_commit_msg_generator!
Epoch 901 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.05115330335820545 Loss (std): 0.11319196376902932 Loss ratio: 2.2127987116764047 Tokens per Sec: 3248.0840037081584
Epoch Step: 10 / 67 Loss (mean): 0.9980570044244814 Loss (std): 4.357301784258721 Loss ratio: 4.36578448419518 Tokens per Sec: 2491.8063863449074
Epoch Step: 15 / 67 Loss (mean): 0.28669009288205416 Loss (std): 0.6605943851080364 Loss ratio: 2.3042107192026635 Tokens per Sec: 2946.909042715584
Epoch Step: 20 / 67 Loss (mean): 0.15874431285737955 Loss (std): 0.6769001033308881 Loss ratio: 4.264090417771594 Tokens per Sec: 2642.496390137097
Epoch Step: 25 / 67 Loss (mean): 0.2762345549433576 Loss (std): 0.7621069750607011 Loss ratio: 2.7589125307547877 Tokens per Sec: 3029.2891460060405
Epoch Step: 30 / 67 Loss (mean): 0.21652376628298953 Loss (std): 0.5549113462759929 Loss ratio: 2.5628195731213257 Tokens per Sec: 3087.771300918187
Epoch Step: 35 / 67 Loss (mean): 0.26422754105783497 Loss (std): 0.7789075852258963 Loss ratio: 2.947866759488961 Tokens per Sec: 3151.2125914194366
Epoch Step: 40 / 67 Loss (mean): 0.2914697781106952 Loss (std): 0.5564836754736502 Loss ratio: 1.9092328511064611 Tokens per Sec: 2438.974795387517
Epoch Step: 45 / 67 Loss (mean): 0.20806801597700542 Loss (std): 0.6104177564818447 Loss ratio: 2.9337414191968114 Tokens per Sec: 2665.225748431578
Epoch Step: 50 / 67 Loss (mean): 0.137625648221956 Loss (std): 0.37573031540034035 Loss ratio: 2.7300893420271537 Tokens per Sec: 2674.2454424729203
Epoch Step: 55 / 67 Loss (mean): 0.20372547160377508 Loss (std): 0.5872781783461783 Loss ratio: 2.882693920023774 Tokens per Sec: 2760.97901939451
Epoch Step: 60 / 67 Loss (mean): 0.3024744305121203 Loss (std): 0.7774305886300621 Loss ratio: 2.5702357297236404 Tokens per Sec: 3228.246953346089
Epoch Step: 65 / 67 Loss (mean): 0.11226635752518632 Loss (std): 0.2978745894013763 Loss ratio: 2.6532845276872 Tokens per Sec: 2262.2205394226758
Mean loss per sample: 0.43291781926541784 Std loss per sample: 3.0835711241635733 ratio: 7.122763228817488
Epoch ended with duration 0:00:11.310908
Train perplexity: 1.0603230834317057
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily into db ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a support for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.66626161336899 Loss (std): 45.86881574215752 Loss ratio: 0.4556523209168812 Tokens per Sec: 4318.079904689344
Mean loss per sample: 105.63143767047002 Std loss per sample: 55.22548319314562 ratio: 0.522812946704637
Epoch ended with duration 0:00:01.020453
b'BLEU = 2.54, 8.3/2.8/1.8/1.4 (BP=0.926, ratio=0.928, hyp_len=2890, ref_len=3113)\n'
Validation perplexity: 1647800.3611603912
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.54
Epoch 902 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.15950724674894445 Loss (std): 0.5718372814738639 Loss ratio: 3.5850238351484056 Tokens per Sec: 2716.8504049138255
Epoch Step: 10 / 67 Loss (mean): 0.6342625904453598 Loss (std): 1.394023492068205 Loss ratio: 2.1978649112654813 Tokens per Sec: 2675.4067454400856
Epoch Step: 15 / 67 Loss (mean): 0.09844157236807405 Loss (std): 0.24887736121867274 Loss ratio: 2.5281733644818036 Tokens per Sec: 2991.3066463349287
Epoch Step: 20 / 67 Loss (mean): 1.4467998559812258 Loss (std): 2.2513661282955537 Loss ratio: 1.5561006029881497 Tokens per Sec: 3245.1187043910377
Epoch Step: 25 / 67 Loss (mean): 0.20869239682861007 Loss (std): 0.6888294921087016 Loss ratio: 3.300692802308496 Tokens per Sec: 3161.7707535448803
Epoch Step: 30 / 67 Loss (mean): 0.1449959611943541 Loss (std): 0.36341055336543304 Loss ratio: 2.5063494898200216 Tokens per Sec: 2645.407430072953
Epoch Step: 35 / 67 Loss (mean): 0.4188752978575394 Loss (std): 0.9995946696638014 Loss ratio: 2.3863776994645463 Tokens per Sec: 3008.8411889004337
Epoch Step: 40 / 67 Loss (mean): 0.08796667074511788 Loss (std): 0.19312685422614004 Loss ratio: 2.195454853415133 Tokens per Sec: 2491.082603480768
Epoch Step: 45 / 67 Loss (mean): 0.17320980639306072 Loss (std): 0.4834356251557764 Loss ratio: 2.7910407339104575 Tokens per Sec: 3028.702483065469
Epoch Step: 50 / 67 Loss (mean): 0.24104138211760073 Loss (std): 0.6507691894257428 Loss ratio: 2.699823506273465 Tokens per Sec: 3140.4353714601825
Epoch Step: 55 / 67 Loss (mean): 0.5364644525507174 Loss (std): 2.5317373499999456 Loss ratio: 4.719301228557348 Tokens per Sec: 2457.717063088072
Epoch Step: 60 / 67 Loss (mean): 0.11381416036874725 Loss (std): 0.39798244128890337 Loss ratio: 3.496774390809346 Tokens per Sec: 2724.1963818889312
Epoch Step: 65 / 67 Loss (mean): 0.25161364654695717 Loss (std): 1.0021107043791624 Loss ratio: 3.982735905352194 Tokens per Sec: 2362.7955098779335
Mean loss per sample: 0.3100806271048091 Std loss per sample: 1.7534079255491148 ratio: 5.65468388631855
Epoch ended with duration 0:00:11.228460
Train perplexity: 1.042846319347307
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily into db ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.79684239625931 Loss (std): 45.489391900617015 Loss ratio: 0.45129778690671746 Tokens per Sec: 4457.909437291943
Mean loss per sample: 104.9747577834508 Std loss per sample: 54.396448051963304 ratio: 0.5181859829977038
Epoch ended with duration 0:00:01.004526
b'BLEU = 2.83, 8.4/3.0/2.0/1.6 (BP=0.942, ratio=0.943, hyp_len=2937, ref_len=3113)\n'
Validation perplexity: 1507495.0968928514
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.83
Epoch 903 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5243614245573553 Loss (std): 1.110671182270323 Loss ratio: 2.118140523414564 Tokens per Sec: 3327.4413332790555
Epoch Step: 10 / 67 Loss (mean): 0.0949545909469407 Loss (std): 0.25877638250939033 Loss ratio: 2.7252645704512695 Tokens per Sec: 3057.2645299276624
Epoch Step: 15 / 67 Loss (mean): 0.11780953177276388 Loss (std): 0.2651890227511177 Loss ratio: 2.2509980199448187 Tokens per Sec: 2777.92371942397
Epoch Step: 20 / 67 Loss (mean): 0.29909599626626004 Loss (std): 0.7678443218251428 Loss ratio: 2.567216985216999 Tokens per Sec: 3937.06965346314
Epoch Step: 25 / 67 Loss (mean): 0.2380854295656718 Loss (std): 0.8512370037724533 Loss ratio: 3.575342705033758 Tokens per Sec: 2575.0688647587863
Epoch Step: 30 / 67 Loss (mean): 0.1443640127654362 Loss (std): 0.34576668994926774 Loss ratio: 2.3951030684570416 Tokens per Sec: 3047.4900871418245
Epoch Step: 35 / 67 Loss (mean): 0.11360041674333843 Loss (std): 0.26220579834336516 Loss ratio: 2.3081411658530824 Tokens per Sec: 2272.358601368854
Epoch Step: 40 / 67 Loss (mean): 0.20298063393511256 Loss (std): 0.7643151321845838 Loss ratio: 3.765458395547798 Tokens per Sec: 2446.2739848959664
Epoch Step: 45 / 67 Loss (mean): 0.10673117677970367 Loss (std): 0.4010961018197206 Loss ratio: 3.7580031807163046 Tokens per Sec: 2822.4733481292633
Epoch Step: 50 / 67 Loss (mean): 0.14647373378852535 Loss (std): 0.546234795907507 Loss ratio: 3.7292337798676276 Tokens per Sec: 2637.930407925661
Epoch Step: 55 / 67 Loss (mean): 0.146430849245462 Loss (std): 0.5289832259818712 Loss ratio: 3.612512176960312 Tokens per Sec: 3017.773993775517
Epoch Step: 60 / 67 Loss (mean): 0.27423012939925684 Loss (std): 0.7723762349081608 Loss ratio: 2.816525801158937 Tokens per Sec: 3092.9360289116694
Epoch Step: 65 / 67 Loss (mean): 0.3351575354954548 Loss (std): 0.873553285885325 Loss ratio: 2.606396077575799 Tokens per Sec: 2189.514336641269
Mean loss per sample: 0.31397472965228623 Std loss per sample: 1.9966626131154785 ratio: 6.359309920663673
Epoch ended with duration 0:00:11.279624
Train perplexity: 1.0433959095608287
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the exception method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.83433899283409 Loss (std): 46.807046322395465 Loss ratio: 0.45963912355427766 Tokens per Sec: 4218.8992094794985
Mean loss per sample: 109.68880045821615 Std loss per sample: 56.31559275103942 ratio: 0.5134124223784521
Epoch ended with duration 0:00:01.033496
b'BLEU = 2.53, 8.6/2.8/1.8/1.5 (BP=0.898, ratio=0.903, hyp_len=2812, ref_len=3113)\n'
Validation perplexity: 2855613.2425884623
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.53
Epoch 904 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1270027441696584 Loss (std): 0.4177447138280911 Loss ratio: 3.289257382266016 Tokens per Sec: 2281.8614781623787
Epoch Step: 10 / 67 Loss (mean): 0.16299520802294865 Loss (std): 0.6720907649914409 Loss ratio: 4.1233774485984585 Tokens per Sec: 2480.4634542115373
Epoch Step: 15 / 67 Loss (mean): 0.04276694644011059 Loss (std): 0.07852536319864262 Loss ratio: 1.8361227474729096 Tokens per Sec: 2735.8431737124756
Epoch Step: 20 / 67 Loss (mean): 0.2370884571669194 Loss (std): 0.6199051635844223 Loss ratio: 2.614657714643548 Tokens per Sec: 2894.6964128642467
Epoch Step: 25 / 67 Loss (mean): 0.11361198114127546 Loss (std): 0.4225657927407965 Loss ratio: 3.7193770278095912 Tokens per Sec: 2726.7157803554965
Epoch Step: 30 / 67 Loss (mean): 0.3427533584539333 Loss (std): 0.7829593452277086 Loss ratio: 2.2843228984230066 Tokens per Sec: 2759.902414348255
Epoch Step: 35 / 67 Loss (mean): 0.22944821210876398 Loss (std): 0.6242468001399533 Loss ratio: 2.7206435578763424 Tokens per Sec: 2994.8708351840287
Epoch Step: 40 / 67 Loss (mean): 0.08911657539556472 Loss (std): 0.48237938845089806 Loss ratio: 5.4129031138118195 Tokens per Sec: 2395.6142439028604
Epoch Step: 45 / 67 Loss (mean): 0.08086907415145106 Loss (std): 0.14942763541298618 Loss ratio: 1.8477723033299367 Tokens per Sec: 3234.6172152612457
Epoch Step: 50 / 67 Loss (mean): 0.15378075702756178 Loss (std): 0.47639801699876205 Loss ratio: 3.0979039654056217 Tokens per Sec: 3419.08833334787
Epoch Step: 55 / 67 Loss (mean): 0.05958348825606663 Loss (std): 0.1163460165507784 Loss ratio: 1.9526553405327418 Tokens per Sec: 2893.901691094094
Epoch Step: 60 / 67 Loss (mean): 0.1441185212360665 Loss (std): 0.4808380098670753 Loss ratio: 3.3364067695328448 Tokens per Sec: 2632.961311883886
Epoch Step: 65 / 67 Loss (mean): 0.4556426000126521 Loss (std): 0.9660367914682351 Loss ratio: 2.1201634602238917 Tokens per Sec: 3363.966959397671
Mean loss per sample: 0.3274923016097202 Std loss per sample: 2.1520163010499127 ratio: 6.571196606674797
Epoch ended with duration 0:00:11.307803
Train perplexity: 1.0453059471164976
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily into one ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.2968702018261 Loss (std): 46.45932363170963 Loss ratio: 0.4586452033428383 Tokens per Sec: 4436.03144427342
Mean loss per sample: 105.18656950500473 Std loss per sample: 54.853559452051 ratio: 0.5214882442709675
Epoch ended with duration 0:00:01.008674
b'BLEU = 2.23, 7.7/2.5/1.6/1.3 (BP=0.889, ratio=0.895, hyp_len=2786, ref_len=3113)\n'
Validation perplexity: 1551393.6861875963
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.23
Epoch 905 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.11072223542760185 Loss (std): 0.22958187950476083 Loss ratio: 2.0734938977535182 Tokens per Sec: 2808.318409241935
Epoch Step: 10 / 67 Loss (mean): 0.050145298229836044 Loss (std): 0.10858803703283636 Loss ratio: 2.165467967408106 Tokens per Sec: 2800.972317859901
Epoch Step: 15 / 67 Loss (mean): 0.14579301018329716 Loss (std): 0.6253134459095013 Loss ratio: 4.289049558160098 Tokens per Sec: 2815.685323409773
Epoch Step: 20 / 67 Loss (mean): 0.29200979332017596 Loss (std): 0.8547759921806322 Loss ratio: 2.927216866467926 Tokens per Sec: 3335.5401743948437
Epoch Step: 25 / 67 Loss (mean): 0.5937663677887031 Loss (std): 1.3849143265831885 Loss ratio: 2.332422989434158 Tokens per Sec: 3101.83095979834
Epoch Step: 30 / 67 Loss (mean): 0.6462849654453748 Loss (std): 4.879851190067539 Loss ratio: 7.550618459311805 Tokens per Sec: 2429.8789181775614
Epoch Step: 35 / 67 Loss (mean): 0.1563930351230738 Loss (std): 0.5217036796697823 Loss ratio: 3.3358498302640305 Tokens per Sec: 2788.4328453542917
Epoch Step: 40 / 67 Loss (mean): 0.18071349687124894 Loss (std): 0.5378646306332718 Loss ratio: 2.9763390114490376 Tokens per Sec: 2677.950031083556
Epoch Step: 45 / 67 Loss (mean): 0.2141394647596826 Loss (std): 0.6814756940242022 Loss ratio: 3.1823918808659877 Tokens per Sec: 2390.9088221291518
Epoch Step: 50 / 67 Loss (mean): 0.11962795623549027 Loss (std): 0.2663061734485974 Loss ratio: 2.2261198956234596 Tokens per Sec: 3140.2662633348464
Epoch Step: 55 / 67 Loss (mean): 0.14667755715345265 Loss (std): 0.3396874161388919 Loss ratio: 2.3158786029106975 Tokens per Sec: 2979.006812834893
Epoch Step: 60 / 67 Loss (mean): 0.05630273581846268 Loss (std): 0.13925194274232006 Loss ratio: 2.473271337849569 Tokens per Sec: 2291.4688738281884
Epoch Step: 65 / 67 Loss (mean): 0.3468433292214286 Loss (std): 0.7433819680446567 Loss ratio: 2.143278839219288 Tokens per Sec: 2914.2381744464396
Mean loss per sample: 0.2667270423071868 Std loss per sample: 1.6456009332534358 ratio: 6.169606647376287
Epoch ended with duration 0:00:11.331520
Train perplexity: 1.0367471723144621
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.23136532306671 Loss (std): 46.896399884708295 Loss ratio: 0.46325958101073267 Tokens per Sec: 4453.3052455381985
Mean loss per sample: 104.93188568635951 Std loss per sample: 54.59658422312509 ratio: 0.5203049946735333
Epoch ended with duration 0:00:01.006761
b'BLEU = 2.32, 8.3/2.6/1.6/1.2 (BP=0.914, ratio=0.917, hyp_len=2855, ref_len=3113)\n'
Validation perplexity: 1498762.0390739243
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.32
Model saved checkpoint_commit_msg_generator!
Epoch 906 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1333325055009027 Loss (std): 0.6903686770845333 Loss ratio: 5.1777972257474705 Tokens per Sec: 2618.7031837760505
Epoch Step: 10 / 67 Loss (mean): 1.3829243674140344 Loss (std): 5.7153320893366555 Loss ratio: 4.132787174777968 Tokens per Sec: 2983.5743784471356
Epoch Step: 15 / 67 Loss (mean): 0.6644236989886849 Loss (std): 1.0535348068183603 Loss ratio: 1.5856370090680674 Tokens per Sec: 3446.0793993960247
Epoch Step: 20 / 67 Loss (mean): 0.16085610775780879 Loss (std): 0.5558118555115023 Loss ratio: 3.455335723703785 Tokens per Sec: 3162.6292065395346
Epoch Step: 25 / 67 Loss (mean): 0.14246697850103374 Loss (std): 0.7095120025763764 Loss ratio: 4.980185654539085 Tokens per Sec: 2646.8973393894476
Epoch Step: 30 / 67 Loss (mean): 0.06297456045194849 Loss (std): 0.20968054318943302 Loss ratio: 3.3296070934774633 Tokens per Sec: 2769.9383305079577
Epoch Step: 35 / 67 Loss (mean): 0.22903211685593305 Loss (std): 0.5176578044279684 Loss ratio: 2.2601974410147383 Tokens per Sec: 3086.81043507699
Epoch Step: 40 / 67 Loss (mean): 0.22478009477663363 Loss (std): 0.4690571023215593 Loss ratio: 2.08673771931481 Tokens per Sec: 2769.050652456043
Epoch Step: 45 / 67 Loss (mean): 0.20924542347711395 Loss (std): 0.7288773177865026 Loss ratio: 3.4833608576687602 Tokens per Sec: 2642.827314171131
Epoch Step: 50 / 67 Loss (mean): 0.23073829278064295 Loss (std): 0.635298664338012 Loss ratio: 2.753330002930958 Tokens per Sec: 2670.7127332865366
Epoch Step: 55 / 67 Loss (mean): 0.05070298158014858 Loss (std): 0.164959744237787 Loss ratio: 3.2534525405971912 Tokens per Sec: 2340.936162799626
Epoch Step: 60 / 67 Loss (mean): 0.334991507093946 Loss (std): 0.9930296751921397 Loss ratio: 2.964342839036966 Tokens per Sec: 2992.90089301514
Epoch Step: 65 / 67 Loss (mean): 0.27651781639633555 Loss (std): 0.7205836741118845 Loss ratio: 2.605921323633864 Tokens per Sec: 2476.967815374077
Mean loss per sample: 0.2805606432513649 Std loss per sample: 1.6610873882623516 ratio: 5.920600156216923
Epoch ended with duration 0:00:11.315849
Train perplexity: 1.038689450700988
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the print error codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link to appear before scrolling[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.64241096377373 Loss (std): 46.07699954661361 Loss ratio: 0.4533245434628254 Tokens per Sec: 4429.2668567944565
Mean loss per sample: 105.2463749492938 Std loss per sample: 54.08411162981477 ratio: 0.5138809926315441
Epoch ended with duration 0:00:01.007285
b'BLEU = 2.27, 8.0/2.5/1.5/1.1 (BP=0.950, ratio=0.951, hyp_len=2962, ref_len=3113)\n'
Validation perplexity: 1564018.3710233064
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.27
Epoch 907 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.07728329286419466 Loss (std): 0.21924861279155483 Loss ratio: 2.8369470899334917 Tokens per Sec: 2837.697384603845
Epoch Step: 10 / 67 Loss (mean): 0.08508518911366991 Loss (std): 0.26858864043232994 Loss ratio: 3.1567026321526748 Tokens per Sec: 2981.5057040451593
Epoch Step: 15 / 67 Loss (mean): 0.13128204196709703 Loss (std): 0.2995599605200355 Loss ratio: 2.281804548676304 Tokens per Sec: 2752.832243583063
Epoch Step: 20 / 67 Loss (mean): 0.2840324653770949 Loss (std): 0.6155433905942475 Loss ratio: 2.1671585668103925 Tokens per Sec: 3350.222045098894
Epoch Step: 25 / 67 Loss (mean): 0.0394879098103047 Loss (std): 0.08761486577988319 Loss ratio: 2.218776992775124 Tokens per Sec: 2330.2105094431054
Epoch Step: 30 / 67 Loss (mean): 0.16433725114575282 Loss (std): 0.4855885056830215 Loss ratio: 2.954829183873514 Tokens per Sec: 2497.995513400292
Epoch Step: 35 / 67 Loss (mean): 0.31215063978197577 Loss (std): 0.6568058638773104 Loss ratio: 2.1041310834283795 Tokens per Sec: 2988.9908105294057
Epoch Step: 40 / 67 Loss (mean): 0.3042217329075356 Loss (std): 1.3221869412160996 Loss ratio: 4.346129149221439 Tokens per Sec: 2746.0312498200797
Epoch Step: 45 / 67 Loss (mean): 0.1712649143123599 Loss (std): 0.5519530517822799 Loss ratio: 3.2228028373377486 Tokens per Sec: 2737.680578270473
Epoch Step: 50 / 67 Loss (mean): 1.9822474942282042 Loss (std): 9.931365473738351 Loss ratio: 5.010154131941616 Tokens per Sec: 3090.5508753015033
Epoch Step: 55 / 67 Loss (mean): 0.2274054834506387 Loss (std): 0.4880202246746935 Loss ratio: 2.1460354309381664 Tokens per Sec: 2967.0390799813576
Epoch Step: 60 / 67 Loss (mean): 0.20399776298927463 Loss (std): 0.4700340143036644 Loss ratio: 2.3041135717178274 Tokens per Sec: 3404.532499502482
Epoch Step: 65 / 67 Loss (mean): 0.1696317119822197 Loss (std): 0.49375118063230444 Loss ratio: 2.910724503470542 Tokens per Sec: 2573.5590788883815
Mean loss per sample: 0.3271725045229078 Std loss per sample: 2.342283111668295 ratio: 7.159168570977194
Epoch ended with duration 0:00:11.275118
Train perplexity: 1.0452607193220969
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 102.05167219042778 Loss (std): 45.85038872368454 Loss ratio: 0.4492860110917928 Tokens per Sec: 4432.185039038651
Mean loss per sample: 106.5493217342243 Std loss per sample: 55.67004766340383 ratio: 0.5224814832915287
Epoch ended with duration 0:00:01.020378
b'BLEU = 2.27, 8.2/2.5/1.5/1.2 (BP=0.920, ratio=0.923, hyp_len=2872, ref_len=3113)\n'
Validation perplexity: 1866063.283003698
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.27
Epoch 908 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3229306510938841 Loss (std): 1.0956975046901778 Loss ratio: 3.3929808179516256 Tokens per Sec: 2354.8499763953228
Epoch Step: 10 / 67 Loss (mean): 0.1116815257601047 Loss (std): 0.23085489345168397 Loss ratio: 2.067082195380884 Tokens per Sec: 3358.6037068453816
Epoch Step: 15 / 67 Loss (mean): 0.1074270500134702 Loss (std): 0.3028033631722974 Loss ratio: 2.818688245970909 Tokens per Sec: 2427.7002494003027
Epoch Step: 20 / 67 Loss (mean): 4.729877887239127 Loss (std): 14.61694270310867 Loss ratio: 3.090342510225082 Tokens per Sec: 2677.1267676645775
Epoch Step: 25 / 67 Loss (mean): 0.03753064715108069 Loss (std): 0.05237545228241005 Loss ratio: 1.3955382136516639 Tokens per Sec: 2396.1153807588694
Epoch Step: 30 / 67 Loss (mean): 1.480480780561095 Loss (std): 7.664745093412312 Loss ratio: 5.17719999749501 Tokens per Sec: 3083.9021171022982
Epoch Step: 35 / 67 Loss (mean): 0.7785752523541305 Loss (std): 1.0455315889713588 Loss ratio: 1.3428780144373311 Tokens per Sec: 3141.0971215082
Epoch Step: 40 / 67 Loss (mean): 0.48443095140009973 Loss (std): 0.9586996489078128 Loss ratio: 1.9790222861214466 Tokens per Sec: 3443.7477892208412
Epoch Step: 45 / 67 Loss (mean): 0.13803196603294055 Loss (std): 0.4563212090340373 Loss ratio: 3.305909653747443 Tokens per Sec: 2925.587393737332
Epoch Step: 50 / 67 Loss (mean): 0.14407426413163194 Loss (std): 0.33508829554468356 Loss ratio: 2.3258025821914567 Tokens per Sec: 3122.926183239391
Epoch Step: 55 / 67 Loss (mean): 0.13237498030684947 Loss (std): 0.44398168976273156 Loss ratio: 3.3539698267268307 Tokens per Sec: 3232.8070166295925
Epoch Step: 60 / 67 Loss (mean): 0.08244530420097362 Loss (std): 0.14404526048722716 Loss ratio: 1.7471614894657164 Tokens per Sec: 2612.4596698847713
Epoch Step: 65 / 67 Loss (mean): 0.4110688816433594 Loss (std): 0.9790593488983514 Loss ratio: 2.381740366685739 Tokens per Sec: 2411.239062656788
Mean loss per sample: 0.4579112779374655 Std loss per sample: 3.473050183803604 ratio: 7.584548254515584
Epoch ended with duration 0:00:11.298008
Train perplexity: 1.0639147496473977
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.00487986207008 Loss (std): 45.28387871139361 Loss ratio: 0.4483335733207368 Tokens per Sec: 4438.172753686973
Mean loss per sample: 103.8569883162797 Std loss per sample: 53.76041903034755 ratio: 0.517638917726257
Epoch ended with duration 0:00:01.005809
b'BLEU = 2.51, 7.9/2.8/1.8/1.4 (BP=0.935, ratio=0.937, hyp_len=2916, ref_len=3113)\n'
Validation perplexity: 1295597.0264458724
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.51
Epoch 909 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1497122741543535 Loss (std): 0.29750030254408777 Loss ratio: 1.9871470407120038 Tokens per Sec: 2333.373946404576
Epoch Step: 10 / 67 Loss (mean): 0.22671561546894736 Loss (std): 0.7240572960095515 Loss ratio: 3.1936807463036163 Tokens per Sec: 2699.740371347075
Epoch Step: 15 / 67 Loss (mean): 0.04096945116907591 Loss (std): 0.07156159521743188 Loss ratio: 1.7467062207425221 Tokens per Sec: 2486.0146679237973
Epoch Step: 20 / 67 Loss (mean): 0.24838570257088577 Loss (std): 0.5971617144350985 Loss ratio: 2.4041710462971473 Tokens per Sec: 2429.3561611560513
Epoch Step: 25 / 67 Loss (mean): 0.21623012975715028 Loss (std): 0.6942621728670302 Loss ratio: 3.210755936958283 Tokens per Sec: 2755.0197696907762
Epoch Step: 30 / 67 Loss (mean): 0.29069917327979056 Loss (std): 0.6512132089777999 Loss ratio: 2.2401618884241676 Tokens per Sec: 3756.368977913232
Epoch Step: 35 / 67 Loss (mean): 0.08848390549360374 Loss (std): 0.2288931913435069 Loss ratio: 2.5868341826305685 Tokens per Sec: 2424.104235808198
Epoch Step: 40 / 67 Loss (mean): 0.18829147619857167 Loss (std): 0.5559222057537627 Loss ratio: 2.952455506628928 Tokens per Sec: 3069.09292595127
Epoch Step: 45 / 67 Loss (mean): 0.12759009731144033 Loss (std): 0.354480360923435 Loss ratio: 2.778274869233528 Tokens per Sec: 2675.014662782197
Epoch Step: 50 / 67 Loss (mean): 0.09557628098946225 Loss (std): 0.1908501986311304 Loss ratio: 1.9968364185688765 Tokens per Sec: 3593.1561908927665
Epoch Step: 55 / 67 Loss (mean): 0.23170350185864663 Loss (std): 1.2841977046656161 Loss ratio: 5.542418195513746 Tokens per Sec: 2984.197735908549
Epoch Step: 60 / 67 Loss (mean): 0.7715523284754227 Loss (std): 4.2129243182201215 Loss ratio: 5.460322213717902 Tokens per Sec: 2766.126101275419
Epoch Step: 65 / 67 Loss (mean): 0.1286671675075013 Loss (std): 0.38846868422772535 Loss ratio: 3.0191749127070637 Tokens per Sec: 2904.1223868543207
Mean loss per sample: 0.2737279151031521 Std loss per sample: 1.5674880109844098 ratio: 5.726445585185256
Epoch ended with duration 0:00:11.317748
Train perplexity: 1.0377296611594857
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 122.29584816098213 Loss (std): 49.99220871530325 Loss ratio: 0.4087809150274409 Tokens per Sec: 4328.279213699
Mean loss per sample: 106.90484406846407 Std loss per sample: 55.416104696830665 ratio: 0.5183685096752122
Epoch ended with duration 0:00:01.020339
b'BLEU = 2.19, 8.2/2.5/1.6/1.2 (BP=0.879, ratio=0.886, hyp_len=2758, ref_len=3113)\n'
Validation perplexity: 1958170.5800855246
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.19
Epoch 910 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.09244592864524748 Loss (std): 0.24884356645619374 Loss ratio: 2.6917742090201444 Tokens per Sec: 2914.5860101430426
Epoch Step: 10 / 67 Loss (mean): 0.10754340306493759 Loss (std): 0.3091703343678325 Loss ratio: 2.8748423943879398 Tokens per Sec: 3084.0660274191664
Epoch Step: 15 / 67 Loss (mean): 0.1350111306328472 Loss (std): 0.42366413729106484 Loss ratio: 3.1379941439286823 Tokens per Sec: 2804.8506715386375
Epoch Step: 20 / 67 Loss (mean): 0.15896183676431974 Loss (std): 0.556224454712716 Loss ratio: 3.49910686762752 Tokens per Sec: 3093.7125586372545
Epoch Step: 25 / 67 Loss (mean): 0.5060247392921156 Loss (std): 1.2061572754535137 Loss ratio: 2.383593492169617 Tokens per Sec: 2797.900752398596
Epoch Step: 30 / 67 Loss (mean): 0.1384034723428158 Loss (std): 0.3165286545667027 Loss ratio: 2.286999373705619 Tokens per Sec: 3313.747507103992
Epoch Step: 35 / 67 Loss (mean): 0.10956911776725065 Loss (std): 0.3795458423463355 Loss ratio: 3.4639855652810483 Tokens per Sec: 2700.1253673508513
Epoch Step: 40 / 67 Loss (mean): 0.24024304379236128 Loss (std): 0.6832048713068243 Loss ratio: 2.8438070901953303 Tokens per Sec: 2512.8869779735683
Epoch Step: 45 / 67 Loss (mean): 0.02476447511954965 Loss (std): 0.03681084000128252 Loss ratio: 1.4864373189247686 Tokens per Sec: 2414.150225404298
Epoch Step: 50 / 67 Loss (mean): 0.2969803032792697 Loss (std): 0.7480332935162637 Loss ratio: 2.5187976618531494 Tokens per Sec: 3178.068075599138
Epoch Step: 55 / 67 Loss (mean): 0.13186229867051225 Loss (std): 0.4122975520444222 Loss ratio: 3.126728080743085 Tokens per Sec: 2388.75604967593
Epoch Step: 60 / 67 Loss (mean): 0.26687632657467475 Loss (std): 0.7656112598314748 Loss ratio: 2.8687867135238347 Tokens per Sec: 3108.1442494509697
Epoch Step: 65 / 67 Loss (mean): 0.0851690701338157 Loss (std): 0.1841053032640939 Loss ratio: 2.161645101617663 Tokens per Sec: 2527.527693839409
Mean loss per sample: 0.2329082204268832 Std loss per sample: 0.9327437421203423 ratio: 4.004769519988489
Epoch ended with duration 0:00:11.226784
Train perplexity: 1.0320141887378744
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print in method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 102.37633284926414 Loss (std): 46.760968333222465 Loss ratio: 0.4567556488087136 Tokens per Sec: 4457.09507302685
Mean loss per sample: 105.20771146125206 Std loss per sample: 54.739102064741665 ratio: 0.5202955306646133
Epoch ended with duration 0:00:01.007334
b'BLEU = 2.50, 8.2/2.6/1.7/1.3 (BP=0.945, ratio=0.947, hyp_len=2947, ref_len=3113)\n'
Validation perplexity: 1555844.979270133
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.5
Model saved checkpoint_commit_msg_generator!
Epoch 911 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.09264270581525125 Loss (std): 0.2814720117700005 Loss ratio: 3.0382533551137203 Tokens per Sec: 2616.0383305960295
Epoch Step: 10 / 67 Loss (mean): 1.3503388087692656 Loss (std): 7.0803299214149265 Loss ratio: 5.243372904218109 Tokens per Sec: 2540.667975991611
Epoch Step: 15 / 67 Loss (mean): 0.03035808163674249 Loss (std): 0.05245307397478365 Loss ratio: 1.7278125344817412 Tokens per Sec: 2934.9899124265603
Epoch Step: 20 / 67 Loss (mean): 0.14912964057884892 Loss (std): 0.4457907911271408 Loss ratio: 2.989283615227645 Tokens per Sec: 2577.680825198698
Epoch Step: 25 / 67 Loss (mean): 0.14384512578772046 Loss (std): 0.7749887335270872 Loss ratio: 5.387660716921179 Tokens per Sec: 2488.567701258885
Epoch Step: 30 / 67 Loss (mean): 0.12775308113259598 Loss (std): 0.4531445755828989 Loss ratio: 3.5470344164347503 Tokens per Sec: 3166.116945059142
Epoch Step: 35 / 67 Loss (mean): 0.37813332140240163 Loss (std): 1.0998820282401967 Loss ratio: 2.908714905528585 Tokens per Sec: 3447.0542629039833
Epoch Step: 40 / 67 Loss (mean): 0.039277417365156 Loss (std): 0.047507778227644445 Loss ratio: 1.2095443492623783 Tokens per Sec: 2587.690849010132
Epoch Step: 45 / 67 Loss (mean): 0.08679839352794261 Loss (std): 0.24598322341982376 Loss ratio: 2.833960554127485 Tokens per Sec: 2772.398452493005
Epoch Step: 50 / 67 Loss (mean): 0.32884981821007386 Loss (std): 0.7275015050495606 Loss ratio: 2.2122606270830367 Tokens per Sec: 2554.169274834862
Epoch Step: 55 / 67 Loss (mean): 0.27895686064096026 Loss (std): 0.7033480446607387 Loss ratio: 2.521350588204403 Tokens per Sec: 2793.5133975845474
Epoch Step: 60 / 67 Loss (mean): 0.21720090004237136 Loss (std): 0.7922719188991477 Loss ratio: 3.6476456531468884 Tokens per Sec: 3144.4404058682867
Epoch Step: 65 / 67 Loss (mean): 0.8638096220493026 Loss (std): 1.2590518264692898 Loss ratio: 1.4575570754610425 Tokens per Sec: 2885.959440946091
Mean loss per sample: 0.2784929349636473 Std loss per sample: 2.2688424074530964 ratio: 8.146858044169978
Epoch ended with duration 0:00:11.304890
Train perplexity: 1.0383989072291113
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 102.40376549959183 Loss (std): 46.35705489231989 Loss ratio: 0.4526889676972344 Tokens per Sec: 4431.144492816024
Mean loss per sample: 105.65307163885703 Std loss per sample: 55.218141555772924 ratio: 0.5226364051631115
Epoch ended with duration 0:00:01.006855
b'BLEU = 2.60, 9.0/2.8/1.8/1.4 (BP=0.908, ratio=0.912, hyp_len=2839, ref_len=3113)\n'
Validation perplexity: 1652638.4548118475
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.6
Epoch 912 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.016750064528813318 Loss (std): 0.027973873796107638 Loss ratio: 1.6700755837678845 Tokens per Sec: 1946.8778723999108
Epoch Step: 10 / 67 Loss (mean): 0.5671052409181812 Loss (std): 0.8856756381752944 Loss ratio: 1.5617482863345198 Tokens per Sec: 3598.4101210681597
Epoch Step: 15 / 67 Loss (mean): 0.2602973830016708 Loss (std): 0.8250329902949457 Loss ratio: 3.1695785058647705 Tokens per Sec: 3057.8846551900474
Epoch Step: 20 / 67 Loss (mean): 0.11345328556467393 Loss (std): 0.2919464506268666 Loss ratio: 2.573274534746222 Tokens per Sec: 2462.1104833910745
Epoch Step: 25 / 67 Loss (mean): 0.3225855050973223 Loss (std): 0.9906227744331113 Loss ratio: 3.070884335408207 Tokens per Sec: 2971.5450561330827
Epoch Step: 30 / 67 Loss (mean): 0.17562647892555105 Loss (std): 0.6179649783216145 Loss ratio: 3.518632168122968 Tokens per Sec: 2896.6071445178422
Epoch Step: 35 / 67 Loss (mean): 0.13432443039528152 Loss (std): 0.33936433102769176 Loss ratio: 2.5264527832281263 Tokens per Sec: 3256.262191078876
Epoch Step: 40 / 67 Loss (mean): 0.45638834000237694 Loss (std): 0.8283588694050679 Loss ratio: 1.8150307464050324 Tokens per Sec: 2693.5178134065814
Epoch Step: 45 / 67 Loss (mean): 0.41861580152908573 Loss (std): 0.8901265682071652 Loss ratio: 2.1263568287574985 Tokens per Sec: 3102.76340044824
Epoch Step: 50 / 67 Loss (mean): 0.1901860738612413 Loss (std): 0.7023638582334599 Loss ratio: 3.6930351627422553 Tokens per Sec: 2930.8617445814466
Epoch Step: 55 / 67 Loss (mean): 0.5267077440789762 Loss (std): 1.0760351588488815 Loss ratio: 2.042945392288626 Tokens per Sec: 3021.643834079992
Epoch Step: 60 / 67 Loss (mean): 0.17755133314585692 Loss (std): 0.4364706112350249 Loss ratio: 2.4582784229306123 Tokens per Sec: 2440.7819210112402
Epoch Step: 65 / 67 Loss (mean): 0.07106081698657363 Loss (std): 0.12271599499781081 Loss ratio: 1.7269150595467686 Tokens per Sec: 2333.451926112711
Mean loss per sample: 0.651600178029127 Std loss per sample: 4.820578051624382 ratio: 7.39806128691527
Epoch ended with duration 0:00:11.333236
Train perplexity: 1.0921642936790759
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the print error codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a zoneinfodb.hastimezone api[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.4326109290123 Loss (std): 46.02394309574666 Loss ratio: 0.453739114809502 Tokens per Sec: 4449.454567451608
Mean loss per sample: 104.44882229249924 Std loss per sample: 54.26380303652566 ratio: 0.5195252741535458
Epoch ended with duration 0:00:01.003428
b'BLEU = 2.47, 8.9/2.6/1.7/1.3 (BP=0.934, ratio=0.936, hyp_len=2913, ref_len=3113)\n'
Validation perplexity: 1403789.9943191614
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.47
Epoch 913 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.11660938439126767 Loss (std): 0.45807198153991036 Loss ratio: 3.9282600103856926 Tokens per Sec: 3346.5365324578856
Epoch Step: 10 / 67 Loss (mean): 0.06043186045667426 Loss (std): 0.17096535759829726 Loss ratio: 2.8290599744296863 Tokens per Sec: 2394.0170520924758
Epoch Step: 15 / 67 Loss (mean): 0.11685859127726417 Loss (std): 0.3702583485197169 Loss ratio: 3.168430703064224 Tokens per Sec: 2920.156098458752
Epoch Step: 20 / 67 Loss (mean): 0.2550461335631553 Loss (std): 0.6164418177800117 Loss ratio: 2.4169816227673433 Tokens per Sec: 2579.8618772801715
Epoch Step: 25 / 67 Loss (mean): 0.10048211425964837 Loss (std): 0.25805481890322723 Loss ratio: 2.5681666912024457 Tokens per Sec: 2860.6737105495813
Epoch Step: 30 / 67 Loss (mean): 0.15357421550288564 Loss (std): 0.5026500297169951 Loss ratio: 3.273010564117454 Tokens per Sec: 2897.5998160049853
Epoch Step: 35 / 67 Loss (mean): 0.345861894998734 Loss (std): 0.9478375999737834 Loss ratio: 2.7405088958332713 Tokens per Sec: 2904.105917900636
Epoch Step: 40 / 67 Loss (mean): 0.14372255182615845 Loss (std): 0.411162484264412 Loss ratio: 2.8608070135140595 Tokens per Sec: 2772.4523474556854
Epoch Step: 45 / 67 Loss (mean): 1.1852411051459057 Loss (std): 8.818362313935861 Loss ratio: 7.440142158122589 Tokens per Sec: 2442.7197506676835
Epoch Step: 50 / 67 Loss (mean): 0.10025878239252961 Loss (std): 0.24351528391343819 Loss ratio: 2.428867358073788 Tokens per Sec: 2662.394324559051
Epoch Step: 55 / 67 Loss (mean): 1.5138775841296592 Loss (std): 2.2224172886007985 Loss ratio: 1.4680297217548701 Tokens per Sec: 2926.293598249279
Epoch Step: 60 / 67 Loss (mean): 7.688903045451298 Loss (std): 18.579707583604463 Loss ratio: 2.416431508340594 Tokens per Sec: 3666.829368916958
Epoch Step: 65 / 67 Loss (mean): 0.19669537270738147 Loss (std): 0.4915968406985567 Loss ratio: 2.499280150478641 Tokens per Sec: 2711.887283544292
Mean loss per sample: 0.40664304040398525 Std loss per sample: 3.342017163710214 ratio: 8.218552468991083
Epoch ended with duration 0:00:11.288083
Train perplexity: 1.0565603587445145
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the print error codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 120.39641633629799 Loss (std): 48.3017771670718 Loss ratio: 0.40118949248582764 Tokens per Sec: 4343.9451703352515
Mean loss per sample: 108.16921128830339 Std loss per sample: 55.275587280265896 ratio: 0.5110103570316314
Epoch ended with duration 0:00:01.032233
b'BLEU = 2.19, 8.1/2.5/1.5/1.2 (BP=0.893, ratio=0.898, hyp_len=2797, ref_len=3113)\n'
Validation perplexity: 2324151.5904484605
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.19
Epoch 914 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.10980294064066243 Loss (std): 0.40110814286770535 Loss ratio: 3.652981791993704 Tokens per Sec: 3004.7986960466874
Epoch Step: 10 / 67 Loss (mean): 0.07370791097037 Loss (std): 0.24998506116873728 Loss ratio: 3.3915635089594294 Tokens per Sec: 2974.7701971807246
Epoch Step: 15 / 67 Loss (mean): 0.12335835762269198 Loss (std): 0.32456663436856587 Loss ratio: 2.631087513026854 Tokens per Sec: 2696.977617648104
Epoch Step: 20 / 67 Loss (mean): 0.08148926012904667 Loss (std): 0.37211270300018096 Loss ratio: 4.566401786086927 Tokens per Sec: 2615.0921387183257
Epoch Step: 25 / 67 Loss (mean): 0.07742108001139059 Loss (std): 0.16560659037177802 Loss ratio: 2.1390374604360094 Tokens per Sec: 2961.338484883053
Epoch Step: 30 / 67 Loss (mean): 0.20498145339934126 Loss (std): 0.6850933159282127 Loss ratio: 3.3422209891034673 Tokens per Sec: 2795.0268114516707
Epoch Step: 35 / 67 Loss (mean): 0.16864378256104828 Loss (std): 0.5493517016503268 Loss ratio: 3.2574678610014214 Tokens per Sec: 2587.6611349569143
Epoch Step: 40 / 67 Loss (mean): 0.21472564727537247 Loss (std): 0.40912785468083485 Loss ratio: 1.9053515957325464 Tokens per Sec: 2747.6393534619992
Epoch Step: 45 / 67 Loss (mean): 0.2337652220239761 Loss (std): 0.8279396508936844 Loss ratio: 3.541757168689391 Tokens per Sec: 2642.3879145194314
Epoch Step: 50 / 67 Loss (mean): 0.8934072286137962 Loss (std): 1.78020154249893 Loss ratio: 1.9925980957878269 Tokens per Sec: 3434.6313277820864
Epoch Step: 55 / 67 Loss (mean): 0.13135536016397964 Loss (std): 0.5571187642294884 Loss ratio: 4.241309707757643 Tokens per Sec: 2500.2894361706217
Epoch Step: 60 / 67 Loss (mean): 1.149092589203974 Loss (std): 5.856665710505157 Loss ratio: 5.096774416204635 Tokens per Sec: 2900.2240354031255
Epoch Step: 65 / 67 Loss (mean): 0.23754070494669577 Loss (std): 0.5971645062043388 Loss ratio: 2.51394600491037 Tokens per Sec: 2628.526294003373
Mean loss per sample: 0.3431709407299639 Std loss per sample: 2.880127017859895 ratio: 8.392689112118685
Epoch ended with duration 0:00:11.278091
Train perplexity: 1.0475257243086957
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print during logging[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.1764617562294 Loss (std): 45.76985091495864 Loss ratio: 0.4523764729511368 Tokens per Sec: 4320.175995708939
Mean loss per sample: 108.37250439724961 Std loss per sample: 54.971087481398534 ratio: 0.5072420148186004
Epoch ended with duration 0:00:01.037890
b'BLEU = 2.22, 8.2/2.4/1.4/1.1 (BP=0.949, ratio=0.950, hyp_len=2958, ref_len=3113)\n'
Validation perplexity: 2389071.800926777
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.22
Epoch 915 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.142452225375564 Loss (std): 0.5566497244671768 Loss ratio: 3.9076239279492744 Tokens per Sec: 2578.8396847328418
Epoch Step: 10 / 67 Loss (mean): 0.29423217763996945 Loss (std): 1.0919802414502477 Loss ratio: 3.7112876307717255 Tokens per Sec: 2801.0528327803477
Epoch Step: 15 / 67 Loss (mean): 0.050059555140705925 Loss (std): 0.10898139092127485 Loss ratio: 2.177034746212849 Tokens per Sec: 2545.9164667024756
Epoch Step: 20 / 67 Loss (mean): 0.17921150039887834 Loss (std): 0.5839791176706143 Loss ratio: 3.2586029153867253 Tokens per Sec: 2961.7188937628616
Epoch Step: 25 / 67 Loss (mean): 0.05119447183642478 Loss (std): 0.07598579415776915 Loss ratio: 1.484257800345259 Tokens per Sec: 2603.6218539353877
Epoch Step: 30 / 67 Loss (mean): 0.07875149092615175 Loss (std): 0.3242503699542304 Loss ratio: 4.1173870632911855 Tokens per Sec: 2742.3481938313275
Epoch Step: 35 / 67 Loss (mean): 0.16108933251030066 Loss (std): 0.61464013694186 Loss ratio: 3.8155235195512254 Tokens per Sec: 2843.172201627607
Epoch Step: 40 / 67 Loss (mean): 0.14466664205906454 Loss (std): 0.4139909115776342 Loss ratio: 2.861688815647009 Tokens per Sec: 2864.789647452411
Epoch Step: 45 / 67 Loss (mean): 0.3705166868269316 Loss (std): 1.0116720962083037 Loss ratio: 2.7304359889217507 Tokens per Sec: 2436.0243802629698
Epoch Step: 50 / 67 Loss (mean): 0.054233133755587914 Loss (std): 0.10878703286491725 Loss ratio: 2.005914564243826 Tokens per Sec: 3476.5794468692397
Epoch Step: 55 / 67 Loss (mean): 0.06346085381073863 Loss (std): 0.2295244596610132 Loss ratio: 3.6167880808148514 Tokens per Sec: 2908.423340842712
Epoch Step: 60 / 67 Loss (mean): 0.047461219710925207 Loss (std): 0.14369339349836344 Loss ratio: 3.0275958850945064 Tokens per Sec: 3227.510468886699
Epoch Step: 65 / 67 Loss (mean): 0.056834017984328966 Loss (std): 0.14155991624048248 Loss ratio: 2.490760309776361 Tokens per Sec: 2857.356340714011
Mean loss per sample: 0.2758557428667157 Std loss per sample: 1.756910821071664 ratio: 6.368947779784105
Epoch ended with duration 0:00:11.237349
Train perplexity: 1.0380284608193686
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the print error codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.10335552692413 Loss (std): 45.58957002908793 Loss ratio: 0.4509204446428812 Tokens per Sec: 4447.247000244515
Mean loss per sample: 106.05397023462126 Std loss per sample: 55.06192610263112 ratio: 0.5191877869429935
Epoch ended with duration 0:00:01.019381
b'BLEU = 2.20, 8.0/2.4/1.4/1.1 (BP=0.952, ratio=0.953, hyp_len=2967, ref_len=3113)\n'
Validation perplexity: 1744908.3186035783
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.2
Model saved checkpoint_commit_msg_generator!
Epoch 916 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.11324919603703165 Loss (std): 0.4271896692996043 Loss ratio: 3.772120988478509 Tokens per Sec: 2727.670372803965
Epoch Step: 10 / 67 Loss (mean): 0.17533569524175618 Loss (std): 0.790711817536713 Loss ratio: 4.509702467865797 Tokens per Sec: 3375.1949506134274
Epoch Step: 15 / 67 Loss (mean): 0.1364440085253591 Loss (std): 0.28925979768803384 Loss ratio: 2.1199890036525337 Tokens per Sec: 3266.02881355258
Epoch Step: 20 / 67 Loss (mean): 0.10947701507029706 Loss (std): 0.3907138580160572 Loss ratio: 3.568912230253749 Tokens per Sec: 2937.2814220833716
Epoch Step: 25 / 67 Loss (mean): 0.13281435349017556 Loss (std): 0.4277018088991034 Loss ratio: 3.220298090226679 Tokens per Sec: 2394.7809350491266
Epoch Step: 30 / 67 Loss (mean): 0.10756844764728157 Loss (std): 0.3205894308468549 Loss ratio: 2.9803296213595276 Tokens per Sec: 2900.0087879515245
Epoch Step: 35 / 67 Loss (mean): 0.21510042802583484 Loss (std): 0.6385832904393798 Loss ratio: 2.9687681066012668 Tokens per Sec: 2676.5272452975
Epoch Step: 40 / 67 Loss (mean): 0.03103440845870864 Loss (std): 0.03639955641425059 Loss ratio: 1.1728774035657967 Tokens per Sec: 2841.2545409119157
Epoch Step: 45 / 67 Loss (mean): 0.20254394003950438 Loss (std): 0.5598088815993053 Loss ratio: 2.7638885739564443 Tokens per Sec: 3048.601231568413
Epoch Step: 50 / 67 Loss (mean): 0.07001707656854705 Loss (std): 0.1631336822956512 Loss ratio: 2.3299127911452078 Tokens per Sec: 2620.1855530275475
Epoch Step: 55 / 67 Loss (mean): 0.12283559995375981 Loss (std): 0.31900203442362157 Loss ratio: 2.596983566195033 Tokens per Sec: 2907.950448202908
Epoch Step: 60 / 67 Loss (mean): 0.1575793822612468 Loss (std): 0.6826176913198203 Loss ratio: 4.3318972414051355 Tokens per Sec: 2551.778018103687
Epoch Step: 65 / 67 Loss (mean): 0.11436956380111951 Loss (std): 0.2999336387468236 Loss ratio: 2.6224952581648973 Tokens per Sec: 2517.204824193736
Mean loss per sample: 0.31301759790422184 Std loss per sample: 2.519005869859795 ratio: 8.047489619515158
Epoch ended with duration 0:00:11.256474
Train perplexity: 1.0432607989019025
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.35179334878922 Loss (std): 44.92902831794011 Loss ratio: 0.44771525070590273 Tokens per Sec: 4451.699986649459
Mean loss per sample: 104.15043245381142 Std loss per sample: 54.24762950030585 ratio: 0.5208584181766461
Epoch ended with duration 0:00:01.003500
b'BLEU = 2.82, 8.9/3.2/2.1/1.7 (BP=0.884, ratio=0.890, hyp_len=2772, ref_len=3113)\n'
Validation perplexity: 1348157.1015976965
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.82
Epoch 917 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.16756918959708855 Loss (std): 0.48784974263061165 Loss ratio: 2.9113331860327136 Tokens per Sec: 3273.2610566973285
Epoch Step: 10 / 67 Loss (mean): 0.8421722628190764 Loss (std): 1.436785867777971 Loss ratio: 1.7060474812700346 Tokens per Sec: 3205.101168810087
Epoch Step: 15 / 67 Loss (mean): 0.10664462429667765 Loss (std): 0.307328241390951 Loss ratio: 2.881797778535803 Tokens per Sec: 2922.8412356954177
Epoch Step: 20 / 67 Loss (mean): 0.12775138400456854 Loss (std): 0.35898029529588277 Loss ratio: 2.8099914383944773 Tokens per Sec: 2618.803791071258
Epoch Step: 25 / 67 Loss (mean): 1.1158996166923316 Loss (std): 6.762625080957275 Loss ratio: 6.060245007523666 Tokens per Sec: 2550.8480135193768
Epoch Step: 30 / 67 Loss (mean): 0.08067593612213386 Loss (std): 0.24734231192232495 Loss ratio: 3.06587470578436 Tokens per Sec: 2615.399572621672
Epoch Step: 35 / 67 Loss (mean): 0.27447301242591493 Loss (std): 1.0003624885019968 Loss ratio: 3.64466611730001 Tokens per Sec: 2634.0447240477442
Epoch Step: 40 / 67 Loss (mean): 0.129019416044855 Loss (std): 0.6108504293071155 Loss ratio: 4.734562037505632 Tokens per Sec: 3607.5864664866585
Epoch Step: 45 / 67 Loss (mean): 0.08607434125906366 Loss (std): 0.3290319002867049 Loss ratio: 3.822647904982459 Tokens per Sec: 2263.4346663360225
Epoch Step: 50 / 67 Loss (mean): 0.13076762400601183 Loss (std): 0.4192085218132382 Loss ratio: 3.205751614741932 Tokens per Sec: 3026.299430452313
Epoch Step: 55 / 67 Loss (mean): 0.29851667319485387 Loss (std): 0.7137003467765212 Loss ratio: 2.3908223923916645 Tokens per Sec: 2487.840612593194
Epoch Step: 60 / 67 Loss (mean): 0.030574259694341372 Loss (std): 0.04858067099923506 Loss ratio: 1.5889402224259344 Tokens per Sec: 2446.9680112924925
Epoch Step: 65 / 67 Loss (mean): 5.598053889523271 Loss (std): 13.119886927080888 Loss ratio: 2.343651416367157 Tokens per Sec: 3180.955666235637
Mean loss per sample: 0.41947283703980426 Std loss per sample: 3.1233266895361846 ratio: 7.445837760502735
Epoch ended with duration 0:00:11.264968
Train perplexity: 1.0583960006288602
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.72714385390282 Loss (std): 46.21076085812718 Loss ratio: 0.4587716785174851 Tokens per Sec: 4449.51987833828
Mean loss per sample: 105.04455013976234 Std loss per sample: 55.04218478615959 ratio: 0.5239889619492459
Epoch ended with duration 0:00:01.004466
b'BLEU = 2.59, 8.4/2.9/1.9/1.4 (BP=0.907, ratio=0.911, hyp_len=2836, ref_len=3113)\n'
Validation perplexity: 1521820.7982133161
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.59
Epoch 918 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.10456320383673301 Loss (std): 0.22799927388254654 Loss ratio: 2.1804924248356907 Tokens per Sec: 2841.4816572238956
Epoch Step: 10 / 67 Loss (mean): 0.164089593066592 Loss (std): 0.4783852244413036 Loss ratio: 2.915390400457401 Tokens per Sec: 2211.1936958833116
Epoch Step: 15 / 67 Loss (mean): 0.2298263142815813 Loss (std): 0.6724552367232756 Loss ratio: 2.925927950527845 Tokens per Sec: 3257.530221897953
Epoch Step: 20 / 67 Loss (mean): 0.10636066238157582 Loss (std): 0.5027762503131977 Loss ratio: 4.727088371351573 Tokens per Sec: 2624.3217280258837
Epoch Step: 25 / 67 Loss (mean): 1.9648252983820385 Loss (std): 7.679136132379186 Loss ratio: 3.908304793664186 Tokens per Sec: 2728.39169340957
Epoch Step: 30 / 67 Loss (mean): 0.29496330661822867 Loss (std): 1.051444841535611 Loss ratio: 3.564663190111634 Tokens per Sec: 3200.3665611539277
Epoch Step: 35 / 67 Loss (mean): 0.20224414100812282 Loss (std): 0.4940321885786735 Loss ratio: 2.442751548282585 Tokens per Sec: 2539.089342695927
Epoch Step: 40 / 67 Loss (mean): 0.08932805200311122 Loss (std): 0.2621257145558916 Loss ratio: 2.934416554239445 Tokens per Sec: 3175.634868452146
Epoch Step: 45 / 67 Loss (mean): 0.19720989499637653 Loss (std): 0.5426239289432685 Loss ratio: 2.7515045781715894 Tokens per Sec: 2730.733048824003
Epoch Step: 50 / 67 Loss (mean): 0.04369032408021667 Loss (std): 0.10340310721344664 Loss ratio: 2.3667278600084454 Tokens per Sec: 2896.017533488958
Epoch Step: 55 / 67 Loss (mean): 0.04702519245779513 Loss (std): 0.07812716836940631 Loss ratio: 1.6613896570338345 Tokens per Sec: 2953.2995382834392
Epoch Step: 60 / 67 Loss (mean): 0.10231115265082735 Loss (std): 0.532561306717732 Loss ratio: 5.205310397931729 Tokens per Sec: 2814.4943336680535
Epoch Step: 65 / 67 Loss (mean): 0.2039446170026622 Loss (std): 0.5255512709750928 Loss ratio: 2.576931319389678 Tokens per Sec: 2810.7387106879432
Mean loss per sample: 0.26968787051275867 Std loss per sample: 1.7436130913057124 ratio: 6.465300378510067
Epoch ended with duration 0:00:11.268614
Train perplexity: 1.0371625756133296
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print in method_1 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.67386347055435 Loss (std): 46.127441841237946 Loss ratio: 0.45818686450559787 Tokens per Sec: 4455.685535991875
Mean loss per sample: 106.8033712480034 Std loss per sample: 54.73270949666582 ratio: 0.5124623769559989
Epoch ended with duration 0:00:01.019249
b'BLEU = 2.49, 7.9/2.7/1.8/1.4 (BP=0.921, ratio=0.924, hyp_len=2876, ref_len=3113)\n'
Validation perplexity: 1931427.3229250833
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.49
Epoch 919 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.29103028879035264 Loss (std): 0.6573726496318271 Loss ratio: 2.2587774364110045 Tokens per Sec: 2943.1127115701584
Epoch Step: 10 / 67 Loss (mean): 0.04232363455298582 Loss (std): 0.07289426408648876 Loss ratio: 1.7223063391503144 Tokens per Sec: 2665.169863808374
Epoch Step: 15 / 67 Loss (mean): 0.26700936312499834 Loss (std): 0.5970943717517776 Loss ratio: 2.2362300885765287 Tokens per Sec: 2685.8788456818456
Epoch Step: 20 / 67 Loss (mean): 0.13495155621922095 Loss (std): 0.5491017419825981 Loss ratio: 4.06888039950139 Tokens per Sec: 2740.40837594591
Epoch Step: 25 / 67 Loss (mean): 0.0709040241472394 Loss (std): 0.22754128031513657 Loss ratio: 3.2091447989274067 Tokens per Sec: 2644.622089802573
Epoch Step: 30 / 67 Loss (mean): 0.13978990681516734 Loss (std): 0.4075243385411537 Loss ratio: 2.9152629673041384 Tokens per Sec: 2943.4231805798677
Epoch Step: 35 / 67 Loss (mean): 0.2451784965242041 Loss (std): 0.6712735513517811 Loss ratio: 2.737897331406112 Tokens per Sec: 2524.401920328947
Epoch Step: 40 / 67 Loss (mean): 0.09388102384468766 Loss (std): 0.3990698685755433 Loss ratio: 4.2508043929702515 Tokens per Sec: 2714.4067028508193
Epoch Step: 45 / 67 Loss (mean): 0.08231524530140177 Loss (std): 0.16304057786206055 Loss ratio: 1.9806850755905367 Tokens per Sec: 3159.5765227988572
Epoch Step: 50 / 67 Loss (mean): 0.3561653239653424 Loss (std): 1.5563690111747217 Loss ratio: 4.369793762758803 Tokens per Sec: 3017.7720949666145
Epoch Step: 55 / 67 Loss (mean): 5.012275789203272 Loss (std): 11.338085666409777 Loss ratio: 2.262063410563453 Tokens per Sec: 3236.436583108222
Epoch Step: 60 / 67 Loss (mean): 0.42728206271567615 Loss (std): 0.9844446517471998 Loss ratio: 2.3039690584958468 Tokens per Sec: 2799.052034285999
Epoch Step: 65 / 67 Loss (mean): 0.06867149082745527 Loss (std): 0.2796897210990155 Loss ratio: 4.0728651399423805 Tokens per Sec: 2652.2783223973356
Mean loss per sample: 0.36187754586363696 Std loss per sample: 2.8176536535472723 ratio: 7.78620747751236
Epoch ended with duration 0:00:11.277504
Train perplexity: 1.0501803682052284
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print in method_1 ( ) , ( ) )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.87800246477127 Loss (std): 46.13322105307695 Loss ratio: 0.45282808787922113 Tokens per Sec: 4444.2299779152745
Mean loss per sample: 105.02366029327644 Std loss per sample: 54.29332038169358 ratio: 0.5169627513465117
Epoch ended with duration 0:00:01.002846
b'BLEU = 2.21, 7.8/2.3/1.4/1.1 (BP=0.956, ratio=0.957, hyp_len=2979, ref_len=3113)\n'
Validation perplexity: 1517518.6944931194
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.21
Epoch 920 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.17233565701945963 Loss (std): 0.4620528941588632 Loss ratio: 2.6811218418176197 Tokens per Sec: 2659.8894532710415
Epoch Step: 10 / 67 Loss (mean): 0.128703797396156 Loss (std): 0.43025132944631894 Loss ratio: 3.342957536225495 Tokens per Sec: 2405.880405448778
Epoch Step: 15 / 67 Loss (mean): 0.18457579440723748 Loss (std): 0.6131636155897691 Loss ratio: 3.322015313865695 Tokens per Sec: 2874.237151823549
Epoch Step: 20 / 67 Loss (mean): 0.1268797805446411 Loss (std): 0.4073296249294955 Loss ratio: 3.2103588387448503 Tokens per Sec: 2764.3422804393545
Epoch Step: 25 / 67 Loss (mean): 0.5413840907331178 Loss (std): 0.86490377411938 Loss ratio: 1.5975788519166985 Tokens per Sec: 3152.4521805010086
Epoch Step: 30 / 67 Loss (mean): 0.06180158921688417 Loss (std): 0.2207165238685221 Loss ratio: 3.5713729479342007 Tokens per Sec: 2981.3170239919395
Epoch Step: 35 / 67 Loss (mean): 0.0847896870036493 Loss (std): 0.253681858630341 Loss ratio: 2.99189521267395 Tokens per Sec: 2261.134148197646
Epoch Step: 40 / 67 Loss (mean): 0.09827812324215301 Loss (std): 0.3553199084340884 Loss ratio: 3.6154527244949075 Tokens per Sec: 3144.132499222444
Epoch Step: 45 / 67 Loss (mean): 0.2460818714961306 Loss (std): 0.6627957963598341 Loss ratio: 2.6933954635917012 Tokens per Sec: 2703.3289545774455
Epoch Step: 50 / 67 Loss (mean): 0.05780657010268442 Loss (std): 0.15644470344036596 Loss ratio: 2.7063481393631585 Tokens per Sec: 3092.7128650197815
Epoch Step: 55 / 67 Loss (mean): 1.2689185345388978 Loss (std): 7.7526981030962645 Loss ratio: 6.109689386729193 Tokens per Sec: 2500.1770442139937
Epoch Step: 60 / 67 Loss (mean): 0.3309228082880509 Loss (std): 0.7682026303456576 Loss ratio: 2.3213952350995934 Tokens per Sec: 3589.57282477077
Epoch Step: 65 / 67 Loss (mean): 0.1421840442380926 Loss (std): 0.507234056652954 Loss ratio: 3.5674471025987358 Tokens per Sec: 2865.4980196993974
Mean loss per sample: 0.33946580282996475 Std loss per sample: 2.8095358239039054 ratio: 8.276344186902312
Epoch ended with duration 0:00:11.254462
Train perplexity: 1.047000726970619
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint checks method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link to appear before scrolling[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 119.67667877674103 Loss (std): 48.41818426652126 Loss ratio: 0.4045749327389528 Tokens per Sec: 4359.320265357109
Mean loss per sample: 106.31625422410912 Std loss per sample: 54.6204598235065 ratio: 0.5137545544858025
Epoch ended with duration 0:00:01.013868
b'BLEU = 2.85, 8.6/3.0/2.1/1.6 (BP=0.937, ratio=0.939, hyp_len=2923, ref_len=3113)\n'
Validation perplexity: 1808045.0764380007
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.85
Model saved checkpoint_commit_msg_generator!
Epoch 921 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.37515110895856196 Loss (std): 0.677601648625627 Loss ratio: 1.8062099043414337 Tokens per Sec: 3004.3848237451075
Epoch Step: 10 / 67 Loss (mean): 0.07327702975862849 Loss (std): 0.1612252397713598 Loss ratio: 2.2002152694020087 Tokens per Sec: 2708.961006252999
Epoch Step: 15 / 67 Loss (mean): 0.192575736043068 Loss (std): 0.6752284228808907 Loss ratio: 3.506300621018431 Tokens per Sec: 3117.8381315756083
Epoch Step: 20 / 67 Loss (mean): 0.04249183798469858 Loss (std): 0.09597749192371052 Loss ratio: 2.25872771044341 Tokens per Sec: 3226.1876393329508
Epoch Step: 25 / 67 Loss (mean): 0.05762707025678537 Loss (std): 0.1398456073777981 Loss ratio: 2.4267346362507785 Tokens per Sec: 3466.761471632628
Epoch Step: 30 / 67 Loss (mean): 0.043052214176896086 Loss (std): 0.0883141218616414 Loss ratio: 2.0513258969392347 Tokens per Sec: 2169.7425014556775
Epoch Step: 35 / 67 Loss (mean): 0.5217053350934293 Loss (std): 0.8084848755926546 Loss ratio: 1.5496963922131781 Tokens per Sec: 2664.4325775664715
Epoch Step: 40 / 67 Loss (mean): 0.05257434562781782 Loss (std): 0.10222010103837909 Loss ratio: 1.9442962117305556 Tokens per Sec: 2679.2166424858233
Epoch Step: 45 / 67 Loss (mean): 0.5834205389637646 Loss (std): 1.2177337595122544 Loss ratio: 2.0872315562889123 Tokens per Sec: 2792.6575461962425
Epoch Step: 50 / 67 Loss (mean): 0.31287807254057043 Loss (std): 0.8298264025393172 Loss ratio: 2.6522357281260573 Tokens per Sec: 2467.499203033812
Epoch Step: 55 / 67 Loss (mean): 0.07075103293118445 Loss (std): 0.17763371057213204 Loss ratio: 2.510687168976124 Tokens per Sec: 2716.8424701618405
Epoch Step: 60 / 67 Loss (mean): 0.22218806430942095 Loss (std): 0.5527055565902985 Loss ratio: 2.4875573686109265 Tokens per Sec: 2282.0914656551736
Epoch Step: 65 / 67 Loss (mean): 0.44128382664348464 Loss (std): 0.9781354767346505 Loss ratio: 2.2165677001457182 Tokens per Sec: 3633.883399331788
Mean loss per sample: 0.43668963145843603 Std loss per sample: 3.0841533511532524 ratio: 7.06257517691212
Epoch ended with duration 0:00:11.333858
Train perplexity: 1.0608643310235322
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.72056150436401 Loss (std): 44.80490088012218 Loss ratio: 0.4448436367998294 Tokens per Sec: 4338.028241330591
Mean loss per sample: 109.15700177695663 Std loss per sample: 53.97633335828033 ratio: 0.49448347315888713
Epoch ended with duration 0:00:01.037373
b'BLEU = 2.60, 8.2/2.8/1.9/1.4 (BP=0.935, ratio=0.937, hyp_len=2916, ref_len=3113)\n'
Validation perplexity: 2657055.0072274203
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.6
Epoch 922 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5159119470104088 Loss (std): 0.8157774357385669 Loss ratio: 1.5812338529196885 Tokens per Sec: 2545.6895887130263
Epoch Step: 10 / 67 Loss (mean): 0.08468609698263663 Loss (std): 0.253462398470959 Loss ratio: 2.992963514695062 Tokens per Sec: 2605.085880081196
Epoch Step: 15 / 67 Loss (mean): 0.11081657146041834 Loss (std): 0.29047592914504067 Loss ratio: 2.621231872787125 Tokens per Sec: 3473.234261501419
Epoch Step: 20 / 67 Loss (mean): 0.05803836009567931 Loss (std): 0.1659437601152031 Loss ratio: 2.859208286409816 Tokens per Sec: 3585.9451233208647
Epoch Step: 25 / 67 Loss (mean): 0.15341435495690803 Loss (std): 0.5540169610355937 Loss ratio: 3.611245904538786 Tokens per Sec: 2825.71240084764
Epoch Step: 30 / 67 Loss (mean): 0.1300152000928847 Loss (std): 0.34300444813592523 Loss ratio: 2.638187288031538 Tokens per Sec: 2174.7046986706273
Epoch Step: 35 / 67 Loss (mean): 0.21775549867970767 Loss (std): 0.5925656685294918 Loss ratio: 2.721243193041408 Tokens per Sec: 2485.6872915683625
Epoch Step: 40 / 67 Loss (mean): 0.14992434299438173 Loss (std): 0.3171407765169354 Loss ratio: 2.1153387780983635 Tokens per Sec: 2684.4956957116087
Epoch Step: 45 / 67 Loss (mean): 0.2320229995907539 Loss (std): 0.6124927678654963 Loss ratio: 2.6397933349099936 Tokens per Sec: 3105.839172468466
Epoch Step: 50 / 67 Loss (mean): 0.34307043682019867 Loss (std): 0.6807731338810387 Loss ratio: 1.9843538259690623 Tokens per Sec: 2931.1657177812326
Epoch Step: 55 / 67 Loss (mean): 1.862047419494047 Loss (std): 7.147575156863055 Loss ratio: 3.8385570002321336 Tokens per Sec: 3196.282418529445
Epoch Step: 60 / 67 Loss (mean): 0.03858100031379763 Loss (std): 0.08747743214268468 Loss ratio: 2.2673707636191156 Tokens per Sec: 2625.6961776676508
Epoch Step: 65 / 67 Loss (mean): 0.22523397755276164 Loss (std): 0.892138814296839 Loss ratio: 3.9609424119318457 Tokens per Sec: 2775.750175770873
Mean loss per sample: 0.2797992628232607 Std loss per sample: 1.8512978513567504 ratio: 6.616521547185598
Epoch ended with duration 0:00:11.219326
Train perplexity: 1.0385824560809607
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the print error codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link for branch[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.24837291240692 Loss (std): 44.60671151349386 Loss ratio: 0.4449619501801735 Tokens per Sec: 4474.007306243224
Mean loss per sample: 106.4681789155622 Std loss per sample: 55.38947937777489 ratio: 0.520244451834789
Epoch ended with duration 0:00:01.019429
b'BLEU = 2.26, 8.0/2.4/1.5/1.1 (BP=0.953, ratio=0.954, hyp_len=2969, ref_len=3113)\n'
Validation perplexity: 1845655.889969902
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.26
Epoch 923 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2142821265508701 Loss (std): 0.8562147863688855 Loss ratio: 3.9957359027124553 Tokens per Sec: 2476.669322615994
Epoch Step: 10 / 67 Loss (mean): 0.1064591116446536 Loss (std): 0.28078913537275185 Loss ratio: 2.6375303253514715 Tokens per Sec: 2626.3671926464394
Epoch Step: 15 / 67 Loss (mean): 0.1877261858107886 Loss (std): 0.5693784607556948 Loss ratio: 3.0330263106159197 Tokens per Sec: 2986.037670904121
Epoch Step: 20 / 67 Loss (mean): 0.31449700343364384 Loss (std): 1.7645186579262169 Loss ratio: 5.6106056295016975 Tokens per Sec: 2598.9401964915446
Epoch Step: 25 / 67 Loss (mean): 0.7753845898623695 Loss (std): 1.412526545392336 Loss ratio: 1.8217108823932895 Tokens per Sec: 3334.3957622111993
Epoch Step: 30 / 67 Loss (mean): 0.03870178142688019 Loss (std): 0.07305950260149213 Loss ratio: 1.887755547881548 Tokens per Sec: 2692.3760576212094
Epoch Step: 35 / 67 Loss (mean): 3.289934543164236 Loss (std): 11.358519052881556 Loss ratio: 3.4525060920990276 Tokens per Sec: 2828.9557146184884
Epoch Step: 40 / 67 Loss (mean): 1.0111534542620575 Loss (std): 1.4519243421378143 Loss ratio: 1.4359089968173353 Tokens per Sec: 3108.209640284016
Epoch Step: 45 / 67 Loss (mean): 0.37597802589152707 Loss (std): 0.7906542189651221 Loss ratio: 2.1029266726168534 Tokens per Sec: 2516.378893106206
Epoch Step: 50 / 67 Loss (mean): 0.21116232559165837 Loss (std): 0.8885170269667917 Loss ratio: 4.207744087290404 Tokens per Sec: 2717.8670056407404
Epoch Step: 55 / 67 Loss (mean): 0.2993783204638021 Loss (std): 0.8677304935227126 Loss ratio: 2.8984413172550685 Tokens per Sec: 2953.954138612895
Epoch Step: 60 / 67 Loss (mean): 0.1903088518927234 Loss (std): 0.6531267176957114 Loss ratio: 3.431930313277688 Tokens per Sec: 2900.0654767647534
Epoch Step: 65 / 67 Loss (mean): 0.1994815305552038 Loss (std): 0.45936959883003875 Loss ratio: 2.3028176972149033 Tokens per Sec: 3313.2259322321615
Mean loss per sample: 0.38149727658340116 Std loss per sample: 2.8322563241960994 ratio: 7.424053847935989
Epoch ended with duration 0:00:11.247938
Train perplexity: 1.052971821543563
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print warnings[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add method_1 for developer options provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.9375672340393 Loss (std): 44.593535758832274 Loss ratio: 0.4417932488449547 Tokens per Sec: 4322.503845715096
Mean loss per sample: 105.89031285803277 Std loss per sample: 54.89220197296576 ratio: 0.5183873811626166
Epoch ended with duration 0:00:01.017943
b'BLEU = 2.25, 7.9/2.5/1.5/1.1 (BP=0.933, ratio=0.935, hyp_len=2912, ref_len=3113)\n'
Validation perplexity: 1706634.8521374122
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.25
Epoch 924 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.03646906390576987 Loss (std): 0.05600100598050859 Loss ratio: 1.5355756354264007 Tokens per Sec: 3077.1087937648235
Epoch Step: 10 / 67 Loss (mean): 9.891654566351463 Loss (std): 18.70509709282999 Loss ratio: 1.8909978070260665 Tokens per Sec: 3627.853899930226
Epoch Step: 15 / 67 Loss (mean): 0.11491403214949969 Loss (std): 0.279596770422451 Loss ratio: 2.4330951163449215 Tokens per Sec: 2577.7696048689154
Epoch Step: 20 / 67 Loss (mean): 0.16232854611860148 Loss (std): 0.5253914597544603 Loss ratio: 3.2365931459189907 Tokens per Sec: 3011.451682366347
Epoch Step: 25 / 67 Loss (mean): 0.04756234134526949 Loss (std): 0.0754627976846008 Loss ratio: 1.5866081347172005 Tokens per Sec: 2978.726362197859
Epoch Step: 30 / 67 Loss (mean): 0.49212212210159123 Loss (std): 0.7505090828222442 Loss ratio: 1.5250464246907252 Tokens per Sec: 3332.429917358032
Epoch Step: 35 / 67 Loss (mean): 0.08480247319585033 Loss (std): 0.28733335302852403 Loss ratio: 3.3882661931914533 Tokens per Sec: 2779.059451525137
Epoch Step: 40 / 67 Loss (mean): 0.2380554652418141 Loss (std): 0.6497577429002476 Loss ratio: 2.7294384619157173 Tokens per Sec: 2479.3064384579843
Epoch Step: 45 / 67 Loss (mean): 0.23394103148166323 Loss (std): 0.6183339886299251 Loss ratio: 2.643119014709445 Tokens per Sec: 3378.4630289120664
Epoch Step: 50 / 67 Loss (mean): 0.07647349238868628 Loss (std): 0.2693363949858767 Loss ratio: 3.5219575642882908 Tokens per Sec: 2318.700310317914
Epoch Step: 55 / 67 Loss (mean): 0.10146562321642705 Loss (std): 0.19987103015548277 Loss ratio: 1.9698398710778737 Tokens per Sec: 2151.8201873143817
Epoch Step: 60 / 67 Loss (mean): 0.3400278385970523 Loss (std): 0.7189925792120685 Loss ratio: 2.1145109241014404 Tokens per Sec: 3224.7915792831623
Epoch Step: 65 / 67 Loss (mean): 0.10642270194512093 Loss (std): 0.27124538849764895 Loss ratio: 2.5487549511524548 Tokens per Sec: 2396.5187554138415
Mean loss per sample: 0.4347776828657067 Std loss per sample: 3.278181005130228 ratio: 7.539901734429147
Epoch ended with duration 0:00:11.306837
Train perplexity: 1.0605899356609991
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print in method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add support for developer provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.84043651819229 Loss (std): 45.66172804875643 Loss ratio: 0.44836539993227187 Tokens per Sec: 4444.0818995696045
Mean loss per sample: 104.86271798587786 Std loss per sample: 55.040912751580635 ratio: 0.5248854293381289
Epoch ended with duration 0:00:01.006007
b'BLEU = 2.85, 9.1/3.1/2.1/1.7 (BP=0.897, ratio=0.902, hyp_len=2809, ref_len=3113)\n'
Validation perplexity: 1484779.086286434
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.85
Epoch 925 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.13380035201049623 Loss (std): 0.6096190951435265 Loss ratio: 4.556184539004081 Tokens per Sec: 2816.9804849383895
Epoch Step: 10 / 67 Loss (mean): 0.22682139422181535 Loss (std): 0.7654701957285435 Loss ratio: 3.3747707016559803 Tokens per Sec: 3224.8897445495277
Epoch Step: 15 / 67 Loss (mean): 0.078878089763748 Loss (std): 0.1868060593113438 Loss ratio: 2.36828832785957 Tokens per Sec: 2708.4087344291097
Epoch Step: 20 / 67 Loss (mean): 0.08093830982659256 Loss (std): 0.4188545018230482 Loss ratio: 5.174984537241128 Tokens per Sec: 2796.581309518436
Epoch Step: 25 / 67 Loss (mean): 0.13186417806434747 Loss (std): 0.4651617523116474 Loss ratio: 3.527582389241879 Tokens per Sec: 2829.427219798299
Epoch Step: 30 / 67 Loss (mean): 0.12772138920354337 Loss (std): 0.44836537266299475 Loss ratio: 3.510495583073064 Tokens per Sec: 2271.113279167999
Epoch Step: 35 / 67 Loss (mean): 0.09222917710576439 Loss (std): 0.20117023007014098 Loss ratio: 2.1811994466723665 Tokens per Sec: 2779.182030719121
Epoch Step: 40 / 67 Loss (mean): 0.5145939619415003 Loss (std): 1.022798772697598 Loss ratio: 1.987584092200971 Tokens per Sec: 3596.7852976314502
Epoch Step: 45 / 67 Loss (mean): 0.08411259677632188 Loss (std): 0.20154589635355988 Loss ratio: 2.396144026911033 Tokens per Sec: 3224.7070564727205
Epoch Step: 50 / 67 Loss (mean): 0.16867194933320206 Loss (std): 0.42933768703320446 Loss ratio: 2.545400635556015 Tokens per Sec: 2585.4695860576103
Epoch Step: 55 / 67 Loss (mean): 0.21382045998689136 Loss (std): 0.6843180332618449 Loss ratio: 3.2004328926417904 Tokens per Sec: 2456.911365775178
Epoch Step: 60 / 67 Loss (mean): 0.4880263679769996 Loss (std): 1.1025739507547145 Loss ratio: 2.2592507763979635 Tokens per Sec: 2936.4284606499477
Epoch Step: 65 / 67 Loss (mean): 0.23384531609690384 Loss (std): 0.6679513468735738 Loss ratio: 2.8563811241649137 Tokens per Sec: 2915.76683690527
Mean loss per sample: 0.4641491616963582 Std loss per sample: 3.6161584500380743 ratio: 7.79094038826193
Epoch ended with duration 0:00:11.308048
Train perplexity: 1.0648130555831317
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.67723643779755 Loss (std): 45.09354498370384 Loss ratio: 0.4434969572691961 Tokens per Sec: 4333.185783859109
Mean loss per sample: 106.77646282471747 Std loss per sample: 55.07495400725941 ratio: 0.5157967641021184
Epoch ended with duration 0:00:01.018733
b'BLEU = 2.61, 8.6/2.9/1.8/1.4 (BP=0.927, ratio=0.930, hyp_len=2895, ref_len=3113)\n'
Validation perplexity: 1924397.0575388293
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.61
Model saved checkpoint_commit_msg_generator!
Epoch 926 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.889353620206748 Loss (std): 5.973748261767332 Loss ratio: 6.716955017711194 Tokens per Sec: 2664.4270738263776
Epoch Step: 10 / 67 Loss (mean): 3.837804328768925 Loss (std): 12.61454261214706 Loss ratio: 3.2869165625735537 Tokens per Sec: 2375.246674426036
Epoch Step: 15 / 67 Loss (mean): 0.14475923536724622 Loss (std): 0.3822875898364658 Loss ratio: 2.6408511268149715 Tokens per Sec: 2940.4781456529245
Epoch Step: 20 / 67 Loss (mean): 0.34833695258566877 Loss (std): 0.644138772650411 Loss ratio: 1.8491830047574231 Tokens per Sec: 3199.6343733778795
Epoch Step: 25 / 67 Loss (mean): 0.15550827880906581 Loss (std): 0.45532762145189043 Loss ratio: 2.9279960201407986 Tokens per Sec: 2309.645347793504
Epoch Step: 30 / 67 Loss (mean): 0.19344490403068448 Loss (std): 0.41784574882207814 Loss ratio: 2.1600245864103966 Tokens per Sec: 2669.3574541907014
Epoch Step: 35 / 67 Loss (mean): 0.3354610237383895 Loss (std): 0.7627782824137592 Loss ratio: 2.2738208865916256 Tokens per Sec: 2910.134537675868
Epoch Step: 40 / 67 Loss (mean): 0.24116715201671468 Loss (std): 1.3758058772533248 Loss ratio: 5.704781375690713 Tokens per Sec: 3158.7962563859955
Epoch Step: 45 / 67 Loss (mean): 0.30617713442916283 Loss (std): 1.0155515668684778 Loss ratio: 3.3168759279228146 Tokens per Sec: 3077.876840860949
Epoch Step: 50 / 67 Loss (mean): 0.06792729824701382 Loss (std): 0.20295451012462556 Loss ratio: 2.9878195565292884 Tokens per Sec: 2729.0548884496393
Epoch Step: 55 / 67 Loss (mean): 1.4753144696751406 Loss (std): 7.636576948793901 Loss ratio: 5.176236731735879 Tokens per Sec: 2276.030309132385
Epoch Step: 60 / 67 Loss (mean): 0.10061445728752005 Loss (std): 0.49549030844802355 Loss ratio: 4.924643255114818 Tokens per Sec: 3411.290220920272
Epoch Step: 65 / 67 Loss (mean): 0.23207207516088602 Loss (std): 1.0271179898152807 Loss ratio: 4.425857738821968 Tokens per Sec: 3028.354691272076
Mean loss per sample: 0.3752806016860044 Std loss per sample: 2.7713005004229316 ratio: 7.384608977848704
Epoch ended with duration 0:00:11.364416
Train perplexity: 1.0520865242161106
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.10507622361183 Loss (std): 45.33624399532321 Loss ratio: 0.4484071986163588 Tokens per Sec: 4425.436084012111
Mean loss per sample: 106.65206531361204 Std loss per sample: 54.24358297596226 ratio: 0.5086032119158516
Epoch ended with duration 0:00:01.023556
b'BLEU = 2.84, 8.8/3.0/2.0/1.6 (BP=0.929, ratio=0.931, hyp_len=2899, ref_len=3113)\n'
Validation perplexity: 1892227.3190265007
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.84
Epoch 927 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.12265966195536748 Loss (std): 0.4381549236285703 Loss ratio: 3.5721191192260333 Tokens per Sec: 2620.9851931118596
Epoch Step: 10 / 67 Loss (mean): 0.1396707033823077 Loss (std): 0.3558831237705623 Loss ratio: 2.5480155476588124 Tokens per Sec: 2980.3271310880164
Epoch Step: 15 / 67 Loss (mean): 0.7486319661093148 Loss (std): 1.2920638036080228 Loss ratio: 1.7258998574733 Tokens per Sec: 3264.670817256472
Epoch Step: 20 / 67 Loss (mean): 2.4463499270841567 Loss (std): 11.033873800376155 Loss ratio: 4.51034158205143 Tokens per Sec: 2616.0979834404934
Epoch Step: 25 / 67 Loss (mean): 0.3880497778300196 Loss (std): 0.898495838729631 Loss ratio: 2.315413872297605 Tokens per Sec: 2926.254048840636
Epoch Step: 30 / 67 Loss (mean): 0.20541382627925486 Loss (std): 0.5856236816901046 Loss ratio: 2.850945782461421 Tokens per Sec: 2524.307557836999
Epoch Step: 35 / 67 Loss (mean): 1.4168598892840691 Loss (std): 10.650506035117157 Loss ratio: 7.516979001006793 Tokens per Sec: 2864.9957755793553
Epoch Step: 40 / 67 Loss (mean): 0.20181495789893233 Loss (std): 0.6737143838313457 Loss ratio: 3.338277751289068 Tokens per Sec: 2528.891255294095
Epoch Step: 45 / 67 Loss (mean): 0.36464524830080336 Loss (std): 0.9992385013828295 Loss ratio: 2.7403030919479776 Tokens per Sec: 3264.2680614063843
Epoch Step: 50 / 67 Loss (mean): 0.11434151458138331 Loss (std): 0.2376848315763323 Loss ratio: 2.078727332295031 Tokens per Sec: 2823.1519357295665
Epoch Step: 55 / 67 Loss (mean): 1.5146449659079053 Loss (std): 5.337645615050912 Loss ratio: 3.524024266539209 Tokens per Sec: 2756.0483726050647
Epoch Step: 60 / 67 Loss (mean): 0.3247954058342657 Loss (std): 0.8453233878643169 Loss ratio: 2.6026334507196283 Tokens per Sec: 2744.3918396535582
Epoch Step: 65 / 67 Loss (mean): 1.81345959359669 Loss (std): 9.218670772883614 Loss ratio: 5.083471837715415 Tokens per Sec: 2707.8462646248913
Mean loss per sample: 0.4865291167088304 Std loss per sample: 3.6519644005585796 ratio: 7.506157956717202
Epoch ended with duration 0:00:11.297297
Train perplexity: 1.068042197595467
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the time unit test[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add support for developer provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.56522160768509 Loss (std): 45.35684309260907 Loss ratio: 0.4510191731048992 Tokens per Sec: 4452.601563664932
Mean loss per sample: 103.87655989135631 Std loss per sample: 53.85110627157949 ratio: 0.5184144173421025
Epoch ended with duration 0:00:01.005490
b'BLEU = 2.87, 9.1/3.1/2.1/1.7 (BP=0.909, ratio=0.913, hyp_len=2842, ref_len=3113)\n'
Validation perplexity: 1299037.8982145737
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.87
Epoch 928 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.19098049759762148 Loss (std): 0.8139628290079034 Loss ratio: 4.262020673560339 Tokens per Sec: 2992.243526942754
Epoch Step: 10 / 67 Loss (mean): 0.20209109692950733 Loss (std): 0.5788193414384135 Loss ratio: 2.864150624311348 Tokens per Sec: 2259.069689042475
Epoch Step: 15 / 67 Loss (mean): 0.07084789081955023 Loss (std): 0.14737843501468495 Loss ratio: 2.0802092103215637 Tokens per Sec: 2972.2317861108095
Epoch Step: 20 / 67 Loss (mean): 0.07520057175770489 Loss (std): 0.17851156298584092 Loss ratio: 2.373805927446968 Tokens per Sec: 2433.2504583591017
Epoch Step: 25 / 67 Loss (mean): 0.05982718865652714 Loss (std): 0.14259540537657506 Loss ratio: 2.3834548903045927 Tokens per Sec: 2841.8672011188096
Epoch Step: 30 / 67 Loss (mean): 0.3695781363912829 Loss (std): 0.6905839860273846 Loss ratio: 1.8685737007349472 Tokens per Sec: 2904.749989318793
Epoch Step: 35 / 67 Loss (mean): 0.16539247379091648 Loss (std): 0.4223950636997053 Loss ratio: 2.55389531348133 Tokens per Sec: 2790.5038061441983
Epoch Step: 40 / 67 Loss (mean): 0.0823480726762682 Loss (std): 0.257497494369981 Loss ratio: 3.126940145670087 Tokens per Sec: 2740.4954077427774
Epoch Step: 45 / 67 Loss (mean): 0.4296873739822331 Loss (std): 0.8734215729262362 Loss ratio: 2.0326908022257846 Tokens per Sec: 2658.949273031403
Epoch Step: 50 / 67 Loss (mean): 2.672640944303339 Loss (std): 9.333445763815396 Loss ratio: 3.492218355671524 Tokens per Sec: 2519.6045579772754
Epoch Step: 55 / 67 Loss (mean): 0.3304193080398363 Loss (std): 1.2176467489278144 Loss ratio: 3.68515616157943 Tokens per Sec: 3283.8486877947125
Epoch Step: 60 / 67 Loss (mean): 0.4654732738824805 Loss (std): 2.1791570944200225 Loss ratio: 4.681594447397212 Tokens per Sec: 2845.5091405441135
Epoch Step: 65 / 67 Loss (mean): 0.21380889702322747 Loss (std): 0.6026466917219874 Loss ratio: 2.8186230793591247 Tokens per Sec: 3246.1051616564146
Mean loss per sample: 0.36851439218774107 Std loss per sample: 3.035172833926341 ratio: 8.236239610365233
Epoch ended with duration 0:00:11.317762
Train perplexity: 1.0511238152802351
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add support for developer provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.5652968287468 Loss (std): 45.45955609854101 Loss ratio: 0.4520401921147246 Tokens per Sec: 4461.331029693848
Mean loss per sample: 104.0968815358203 Std loss per sample: 53.730947765574136 ratio: 0.5161628953033048
Epoch ended with duration 0:00:01.003832
b'BLEU = 2.64, 8.5/2.9/1.9/1.4 (BP=0.931, ratio=0.934, hyp_len=2906, ref_len=3113)\n'
Validation perplexity: 1338408.7941808656
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.64
Epoch 929 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.20331321723961082 Loss (std): 0.5070609954033436 Loss ratio: 2.493989334720707 Tokens per Sec: 2575.2050802372337
Epoch Step: 10 / 67 Loss (mean): 0.31011113382737676 Loss (std): 0.8631604126179183 Loss ratio: 2.7833905928008256 Tokens per Sec: 2328.473602528717
Epoch Step: 15 / 67 Loss (mean): 0.5326886009036116 Loss (std): 2.731347962888893 Loss ratio: 5.127475899156931 Tokens per Sec: 2523.041258516449
Epoch Step: 20 / 67 Loss (mean): 0.1727662873436202 Loss (std): 0.6067242363240883 Loss ratio: 3.5118207704339666 Tokens per Sec: 2649.817748529575
Epoch Step: 25 / 67 Loss (mean): 0.1487707407650305 Loss (std): 0.5024558765131459 Loss ratio: 3.377383710865083 Tokens per Sec: 2884.7645285053222
Epoch Step: 30 / 67 Loss (mean): 0.2310300803633254 Loss (std): 0.745045487456174 Loss ratio: 3.224885202327296 Tokens per Sec: 2876.236061799554
Epoch Step: 35 / 67 Loss (mean): 0.25810182344366694 Loss (std): 0.7277351844239139 Loss ratio: 2.8195662266708035 Tokens per Sec: 2760.4950532621365
Epoch Step: 40 / 67 Loss (mean): 0.39343476191720583 Loss (std): 1.3117484812681226 Loss ratio: 3.3340940055118113 Tokens per Sec: 2989.1575719049633
Epoch Step: 45 / 67 Loss (mean): 0.36180526945918245 Loss (std): 0.9954594497211193 Loss ratio: 2.751368025150953 Tokens per Sec: 2829.783084248684
Epoch Step: 50 / 67 Loss (mean): 0.07481944642245253 Loss (std): 0.17171236218117925 Loss ratio: 2.2950231576379343 Tokens per Sec: 3373.0459797320573
Epoch Step: 55 / 67 Loss (mean): 0.05228346933654393 Loss (std): 0.09849359252140943 Loss ratio: 1.8838381188404913 Tokens per Sec: 3096.4879699486078
Epoch Step: 60 / 67 Loss (mean): 0.22738436730548983 Loss (std): 0.8536453578075784 Loss ratio: 3.7541954529385473 Tokens per Sec: 2857.8209528001807
Epoch Step: 65 / 67 Loss (mean): 0.06705725752635772 Loss (std): 0.25650800038440075 Loss ratio: 3.825208632840032 Tokens per Sec: 2708.870805724062
Mean loss per sample: 0.2816611753357746 Std loss per sample: 1.8583842402647677 ratio: 6.59794250325536
Epoch ended with duration 0:00:11.313176
Train perplexity: 1.038844124817289
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to apache-sshd 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.77747943997383 Loss (std): 46.58792722138737 Loss ratio: 0.4622851006026259 Tokens per Sec: 4432.731030399927
Mean loss per sample: 104.249542402073 Std loss per sample: 54.01766910995377 ratio: 0.5181573737908286
Epoch ended with duration 0:00:01.004154
b'BLEU = 2.67, 8.7/2.9/1.8/1.4 (BP=0.938, ratio=0.940, hyp_len=2926, ref_len=3113)\n'
Validation perplexity: 1366386.5807544857
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.67
Epoch 930 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.19455490718610235 Loss (std): 0.658579997665329 Loss ratio: 3.385059812628429 Tokens per Sec: 2615.413380200428
Epoch Step: 10 / 67 Loss (mean): 0.15999333048443987 Loss (std): 0.553548772351509 Loss ratio: 3.4598240481364586 Tokens per Sec: 3448.9575617967575
Epoch Step: 15 / 67 Loss (mean): 0.18873231254849543 Loss (std): 0.5524381413709967 Loss ratio: 2.9270988836585454 Tokens per Sec: 3021.58458213065
Epoch Step: 20 / 67 Loss (mean): 0.06530491195098875 Loss (std): 0.11010051224709573 Loss ratio: 1.6859453440458814 Tokens per Sec: 2721.4656654809964
Epoch Step: 25 / 67 Loss (mean): 0.1899098861690618 Loss (std): 0.502069016947019 Loss ratio: 2.6437223836786807 Tokens per Sec: 3374.0668006611354
Epoch Step: 30 / 67 Loss (mean): 0.23056283469486516 Loss (std): 0.6275597602838394 Loss ratio: 2.7218600131906503 Tokens per Sec: 2483.3920067536224
Epoch Step: 35 / 67 Loss (mean): 0.5314372571301647 Loss (std): 0.9936525655883821 Loss ratio: 1.8697457738553083 Tokens per Sec: 3296.4433280424096
Epoch Step: 40 / 67 Loss (mean): 1.5617891316205714 Loss (std): 7.52617596680229 Loss ratio: 4.818945025563627 Tokens per Sec: 2510.847576289374
Epoch Step: 45 / 67 Loss (mean): 0.27049314662644974 Loss (std): 0.878600292134167 Loss ratio: 3.2481425244666604 Tokens per Sec: 2892.1616414490045
Epoch Step: 50 / 67 Loss (mean): 0.17751998669268687 Loss (std): 0.5314963523907907 Loss ratio: 2.9940085186626835 Tokens per Sec: 3181.277430796084
Epoch Step: 55 / 67 Loss (mean): 0.09765275099880455 Loss (std): 0.2043733339049193 Loss ratio: 2.092857925809189 Tokens per Sec: 2274.332858889528
Epoch Step: 60 / 67 Loss (mean): 0.07132884257862315 Loss (std): 0.17300875447167322 Loss ratio: 2.4255090678216464 Tokens per Sec: 2342.19421832638
Epoch Step: 65 / 67 Loss (mean): 0.1189031528981559 Loss (std): 0.6174128529734026 Loss ratio: 5.192569229028226 Tokens per Sec: 2529.8719680103304
Mean loss per sample: 0.5671485746407217 Std loss per sample: 4.0073608937194045 ratio: 7.065804399240525
Epoch ended with duration 0:00:11.377213
Train perplexity: 1.079755946633626
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the exception method_1 and parse )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link to appear before scrolling[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.21910157799721 Loss (std): 45.611432560626824 Loss ratio: 0.4551171567341277 Tokens per Sec: 4331.180190056581
Mean loss per sample: 105.432199142629 Std loss per sample: 53.924985686485655 ratio: 0.5114660049301994
Epoch ended with duration 0:00:01.021980
b'BLEU = 2.69, 8.5/3.1/1.9/1.4 (BP=0.928, ratio=0.930, hyp_len=2896, ref_len=3113)\n'
Validation perplexity: 1603904.3810492316
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.69
Model saved checkpoint_commit_msg_generator!
Epoch 931 / 1000
Epoch Step: 5 / 67 Loss (mean): 4.707668101138552 Loss (std): 12.209883316769893 Loss ratio: 2.5936160014799956 Tokens per Sec: 3556.983085602602
Epoch Step: 10 / 67 Loss (mean): 0.1337302443844237 Loss (std): 0.4956806149283856 Loss ratio: 3.706570770210304 Tokens per Sec: 2973.2094365287476
Epoch Step: 15 / 67 Loss (mean): 0.18218068477835914 Loss (std): 0.5044217545509196 Loss ratio: 2.768799311324352 Tokens per Sec: 2775.7679793495913
Epoch Step: 20 / 67 Loss (mean): 0.10381807216276684 Loss (std): 0.25136364669738 Loss ratio: 2.4211935500332733 Tokens per Sec: 3020.5457525078104
Epoch Step: 25 / 67 Loss (mean): 0.04605788294884405 Loss (std): 0.07602053873130875 Loss ratio: 1.6505434871104228 Tokens per Sec: 2923.6993079634904
Epoch Step: 30 / 67 Loss (mean): 1.4106056215860008 Loss (std): 2.295885109385494 Loss ratio: 1.627588231786669 Tokens per Sec: 2473.321812149648
Epoch Step: 35 / 67 Loss (mean): 1.9021007021628975 Loss (std): 7.865592336032101 Loss ratio: 4.135213412774654 Tokens per Sec: 2618.4695855776513
Epoch Step: 40 / 67 Loss (mean): 0.301160357212666 Loss (std): 1.02236480630023 Loss ratio: 3.3947522700614994 Tokens per Sec: 2833.806795611988
Epoch Step: 45 / 67 Loss (mean): 0.08736623782669994 Loss (std): 0.30785736196968577 Loss ratio: 3.523756655063401 Tokens per Sec: 2771.746038381141
Epoch Step: 50 / 67 Loss (mean): 0.14242737156746443 Loss (std): 0.4311603001065039 Loss ratio: 3.02722921417021 Tokens per Sec: 2234.4021886909754
Epoch Step: 55 / 67 Loss (mean): 0.3187971430888865 Loss (std): 0.6485677300582741 Loss ratio: 2.03442139968438 Tokens per Sec: 2238.929542874015
Epoch Step: 60 / 67 Loss (mean): 2.4215427334725064 Loss (std): 9.25374587279056 Loss ratio: 3.8214257980575197 Tokens per Sec: 2811.340472248978
Epoch Step: 65 / 67 Loss (mean): 0.39155253515491495 Loss (std): 0.8103127910870711 Loss ratio: 2.069486769550545 Tokens per Sec: 3046.1728362566687
Mean loss per sample: 0.5919140672983887 Std loss per sample: 3.8615759913014776 ratio: 6.5238794018301745
Epoch ended with duration 0:00:11.428618
Train perplexity: 1.0833800224034855
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd ( ) to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link to appear before scrolling[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.93178242444992 Loss (std): 45.673855105759195 Loss ratio: 0.45705033971839126 Tokens per Sec: 4460.634754586085
Mean loss per sample: 105.66288962398396 Std loss per sample: 54.59313607833565 ratio: 0.5166727530603497
Epoch ended with duration 0:00:01.033000
b'BLEU = 2.72, 8.7/3.0/2.1/1.6 (BP=0.886, ratio=0.892, hyp_len=2778, ref_len=3113)\n'
Validation perplexity: 1654838.774950698
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.72
Epoch 932 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.14668255809374386 Loss (std): 0.3984607174551481 Loss ratio: 2.7164832863120267 Tokens per Sec: 2790.89651773172
Epoch Step: 10 / 67 Loss (mean): 0.20649235837822744 Loss (std): 0.46418452478069455 Loss ratio: 2.2479501344570734 Tokens per Sec: 3145.0931397174204
Epoch Step: 15 / 67 Loss (mean): 0.1801754558164248 Loss (std): 0.5341995698313353 Loss ratio: 2.964885352506696 Tokens per Sec: 2669.5919008978212
Epoch Step: 20 / 67 Loss (mean): 0.3299361909989784 Loss (std): 1.2496709823466567 Loss ratio: 3.7876141400642105 Tokens per Sec: 2685.817884317206
Epoch Step: 25 / 67 Loss (mean): 1.1769804224572908 Loss (std): 5.520464146608051 Loss ratio: 4.690361913652283 Tokens per Sec: 2949.098609439316
Epoch Step: 30 / 67 Loss (mean): 0.21269347846612163 Loss (std): 0.7623274914127222 Loss ratio: 3.5841601581317297 Tokens per Sec: 2861.790741492112
Epoch Step: 35 / 67 Loss (mean): 0.08683215136954914 Loss (std): 0.26165664177056697 Loss ratio: 3.013361268189497 Tokens per Sec: 2747.334261729079
Epoch Step: 40 / 67 Loss (mean): 0.2279031485913947 Loss (std): 0.5961217341424616 Loss ratio: 2.6156801159919136 Tokens per Sec: 2935.520275390485
Epoch Step: 45 / 67 Loss (mean): 0.09998138616924734 Loss (std): 0.25501875812564806 Loss ratio: 2.550662357230727 Tokens per Sec: 2442.9153480953582
Epoch Step: 50 / 67 Loss (mean): 0.13653353951065128 Loss (std): 0.4060889847794838 Loss ratio: 2.9742800650663854 Tokens per Sec: 2687.3108905797335
Epoch Step: 55 / 67 Loss (mean): 0.12364642085321975 Loss (std): 0.4447602145478219 Loss ratio: 3.5970326636126027 Tokens per Sec: 3275.633694447987
Epoch Step: 60 / 67 Loss (mean): 0.11534891140581749 Loss (std): 0.2815309147957008 Loss ratio: 2.440689828491109 Tokens per Sec: 2476.554991890517
Epoch Step: 65 / 67 Loss (mean): 0.16342034880199208 Loss (std): 0.4259485082886883 Loss ratio: 2.606459424491793 Tokens per Sec: 2825.343489422531
Mean loss per sample: 0.4132959252089139 Std loss per sample: 3.034012559402284 ratio: 7.341017354256865
Epoch ended with duration 0:00:11.327610
Train perplexity: 1.057511832190759
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: do not print warnings on private ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.76591151952744 Loss (std): 45.64607812466121 Loss ratio: 0.4529912689353825 Tokens per Sec: 4330.197770536311
Mean loss per sample: 106.93531027106476 Std loss per sample: 53.756454900584565 ratio: 0.5027006960032202
Epoch ended with duration 0:00:01.018126
b'BLEU = 2.18, 8.0/2.4/1.5/1.1 (BP=0.931, ratio=0.933, hyp_len=2905, ref_len=3113)\n'
Validation perplexity: 1966272.0233626075
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.18
Epoch 933 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.09805613564185478 Loss (std): 0.42007255164410995 Loss ratio: 4.284000678737782 Tokens per Sec: 2721.304380952381
Epoch Step: 10 / 67 Loss (mean): 0.2405111270645648 Loss (std): 0.6321467346841403 Loss ratio: 2.6283471471756132 Tokens per Sec: 3435.4373739720363
Epoch Step: 15 / 67 Loss (mean): 0.16910275291866128 Loss (std): 0.35405887820658555 Loss ratio: 2.0937499366251506 Tokens per Sec: 3062.8741803048474
Epoch Step: 20 / 67 Loss (mean): 0.22536897447389492 Loss (std): 1.0431556317850896 Loss ratio: 4.628656780376489 Tokens per Sec: 3175.0211467353615
Epoch Step: 25 / 67 Loss (mean): 0.46599961365973286 Loss (std): 1.2711191481657267 Loss ratio: 2.727725755356274 Tokens per Sec: 2652.0446242356957
Epoch Step: 30 / 67 Loss (mean): 2.6498196615170855 Loss (std): 11.20796822510667 Loss ratio: 4.229709813040575 Tokens per Sec: 2308.2848335114063
Epoch Step: 35 / 67 Loss (mean): 0.5698559113598094 Loss (std): 0.8163248328730902 Loss ratio: 1.4325109498735362 Tokens per Sec: 2901.4330976172455
Epoch Step: 40 / 67 Loss (mean): 0.03546140072739945 Loss (std): 0.06714855710214025 Loss ratio: 1.8935675332829576 Tokens per Sec: 2495.8484097023047
Epoch Step: 45 / 67 Loss (mean): 0.29962858889939525 Loss (std): 1.16995674544677 Loss ratio: 3.904689968818698 Tokens per Sec: 2376.9882503056
Epoch Step: 50 / 67 Loss (mean): 0.1292210321996663 Loss (std): 0.29605188377436625 Loss ratio: 2.2910502937085404 Tokens per Sec: 2657.9289674565453
Epoch Step: 55 / 67 Loss (mean): 0.12387026251826683 Loss (std): 0.34956755249419036 Loss ratio: 2.822045787160906 Tokens per Sec: 3170.135653264015
Epoch Step: 60 / 67 Loss (mean): 0.4944592823585481 Loss (std): 1.0514264274571874 Loss ratio: 2.126416602883723 Tokens per Sec: 3000.719585500045
Epoch Step: 65 / 67 Loss (mean): 0.11321913579922693 Loss (std): 0.3633095891207483 Loss ratio: 3.208906220278966 Tokens per Sec: 2764.7955286696515
Mean loss per sample: 0.29309989857871205 Std loss per sample: 1.9157296454949186 ratio: 6.5360979474390675
Epoch ended with duration 0:00:11.318982
Train perplexity: 1.0404531429314943
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: throw exception when method_1 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.93055713176727 Loss (std): 44.75549935271903 Loss ratio: 0.443428636723858 Tokens per Sec: 4456.729698952669
Mean loss per sample: 106.2871235149195 Std loss per sample: 54.8325461174777 ratio: 0.5158907711881098
Epoch ended with duration 0:00:01.019261
b'BLEU = 2.56, 8.0/2.7/1.8/1.4 (BP=0.949, ratio=0.950, hyp_len=2957, ref_len=3113)\n'
Validation perplexity: 1800921.4677530753
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.56
Epoch 934 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2618880831341812 Loss (std): 0.6059664819790899 Loss ratio: 2.3138375550620847 Tokens per Sec: 2438.622054196325
Epoch Step: 10 / 67 Loss (mean): 0.2229548736856941 Loss (std): 0.6666379253097197 Loss ratio: 2.9900127962643164 Tokens per Sec: 2787.887833167526
Epoch Step: 15 / 67 Loss (mean): 0.72144850344921 Loss (std): 3.793800185766719 Loss ratio: 5.258587643648502 Tokens per Sec: 2878.356859898089
Epoch Step: 20 / 67 Loss (mean): 0.17988878571941314 Loss (std): 0.49105856030345707 Loss ratio: 2.729789732804135 Tokens per Sec: 2915.2556785298993
Epoch Step: 25 / 67 Loss (mean): 0.15239152594131156 Loss (std): 0.4754704771309266 Loss ratio: 3.1200585084635084 Tokens per Sec: 2799.722123337475
Epoch Step: 30 / 67 Loss (mean): 0.40247132137847075 Loss (std): 0.9720560139578719 Loss ratio: 2.41521808467884 Tokens per Sec: 2823.3637876417874
Epoch Step: 35 / 67 Loss (mean): 0.5907903484758208 Loss (std): 1.1808021482890034 Loss ratio: 1.9986821912973922 Tokens per Sec: 3662.81482921446
Epoch Step: 40 / 67 Loss (mean): 0.05231859866944433 Loss (std): 0.18734413423903068 Loss ratio: 3.5808324191306258 Tokens per Sec: 2270.3422871538
Epoch Step: 45 / 67 Loss (mean): 0.2646484324031917 Loss (std): 0.6089926448782317 Loss ratio: 2.3011383039308235 Tokens per Sec: 3129.935029817753
Epoch Step: 50 / 67 Loss (mean): 0.1170493830329633 Loss (std): 0.3638629208934967 Loss ratio: 3.1086274140464805 Tokens per Sec: 2891.5283604799197
Epoch Step: 55 / 67 Loss (mean): 0.05736001279547054 Loss (std): 0.12235253019251155 Loss ratio: 2.133063160721142 Tokens per Sec: 3166.94733166734
Epoch Step: 60 / 67 Loss (mean): 0.11034421502881742 Loss (std): 0.3472655366864835 Loss ratio: 3.147111396784978 Tokens per Sec: 2781.253709481615
Epoch Step: 65 / 67 Loss (mean): 0.5516072141313089 Loss (std): 0.8670617158777124 Loss ratio: 1.571882480259423 Tokens per Sec: 2232.591779695054
Mean loss per sample: 0.4619350802377498 Std loss per sample: 3.249126480520552 ratio: 7.033729672248066
Epoch ended with duration 0:00:11.285178
Train perplexity: 1.0644941230702225
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link to appear before scrolling[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.42969310283661 Loss (std): 46.35745187367019 Loss ratio: 0.45704024586439124 Tokens per Sec: 4452.861206295621
Mean loss per sample: 104.85158544803252 Std loss per sample: 54.32742926256381 ratio: 0.5181364595530132
Epoch ended with duration 0:00:01.005372
b'BLEU = 2.63, 8.3/2.9/1.9/1.5 (BP=0.923, ratio=0.926, hyp_len=2882, ref_len=3113)\n'
Validation perplexity: 1482540.7508891735
Validation accuracy: 0.0
Validation BLEU: 2.63
Epoch 935 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.24624090493455242 Loss (std): 0.8611163403375431 Loss ratio: 3.4970483095260576 Tokens per Sec: 3018.499147604671
Epoch Step: 10 / 67 Loss (mean): 0.10018130777098122 Loss (std): 0.21608220267538622 Loss ratio: 2.1569113788109 Tokens per Sec: 2452.507449784804
Epoch Step: 15 / 67 Loss (mean): 0.46666063862721785 Loss (std): 1.31692343479841 Loss ratio: 2.8220152414663087 Tokens per Sec: 3184.830271707252
Epoch Step: 20 / 67 Loss (mean): 0.1677985902558703 Loss (std): 0.44766485160339187 Loss ratio: 2.667870158627454 Tokens per Sec: 2715.1421737030846
Epoch Step: 25 / 67 Loss (mean): 0.205310181990626 Loss (std): 0.814622190252955 Loss ratio: 3.967763227106529 Tokens per Sec: 2674.107082826593
Epoch Step: 30 / 67 Loss (mean): 0.2099915713624796 Loss (std): 0.537444012135948 Loss ratio: 2.5593599240620577 Tokens per Sec: 2358.391699982202
Epoch Step: 35 / 67 Loss (mean): 0.09619610026038572 Loss (std): 0.227530139416815 Loss ratio: 2.3652740475022522 Tokens per Sec: 2806.7765050622393
Epoch Step: 40 / 67 Loss (mean): 0.4069672374221227 Loss (std): 1.037048164541597 Loss ratio: 2.5482350154539075 Tokens per Sec: 2858.070970433013
Epoch Step: 45 / 67 Loss (mean): 0.13294487482460227 Loss (std): 0.4974408497738343 Loss ratio: 3.7417076094894317 Tokens per Sec: 2826.542080148811
Epoch Step: 50 / 67 Loss (mean): 0.11930191670762724 Loss (std): 0.3418244482148067 Loss ratio: 2.8652049996188627 Tokens per Sec: 3143.825296548081
Epoch Step: 55 / 67 Loss (mean): 0.16173448595964146 Loss (std): 0.4437783603942002 Loss ratio: 2.743869730447833 Tokens per Sec: 2564.1608239125167
Epoch Step: 60 / 67 Loss (mean): 0.12405044305796764 Loss (std): 0.25806102292764693 Loss ratio: 2.0802910216697685 Tokens per Sec: 3220.1376361362886
Epoch Step: 65 / 67 Loss (mean): 4.962462287101516 Loss (std): 13.603066214391005 Loss ratio: 2.7411928650315867 Tokens per Sec: 2950.7059621566955
Mean loss per sample: 0.379451959854452 Std loss per sample: 2.672014652593757 ratio: 7.041773228997613
Epoch ended with duration 0:00:11.287760
Train perplexity: 1.0526804721555427
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the exception use method_5[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.41345286369324 Loss (std): 44.183234731253364 Loss ratio: 0.444439192669763 Tokens per Sec: 4430.245697264194
Mean loss per sample: 104.61036948505483 Std loss per sample: 54.02430028636609 ratio: 0.5164335099120769
Epoch ended with duration 0:00:01.020792
b'BLEU = 2.21, 8.2/2.5/1.5/1.1 (BP=0.913, ratio=0.916, hyp_len=2852, ref_len=3113)\n'
Validation perplexity: 1434861.3952847603
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.21
Model saved checkpoint_commit_msg_generator!
Epoch 936 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.12664675587529928 Loss (std): 0.25306704191012386 Loss ratio: 1.998211799118663 Tokens per Sec: 2654.4009789361617
Epoch Step: 10 / 67 Loss (mean): 0.14958298441024453 Loss (std): 0.3085963792450505 Loss ratio: 2.0630446735752894 Tokens per Sec: 2304.230762657501
Epoch Step: 15 / 67 Loss (mean): 0.1470209015344608 Loss (std): 0.4537012780683764 Loss ratio: 3.0859644671817743 Tokens per Sec: 2509.8736674529837
Epoch Step: 20 / 67 Loss (mean): 0.30342959685958704 Loss (std): 0.8027259730723747 Loss ratio: 2.645509803197737 Tokens per Sec: 3209.038146389559
Epoch Step: 25 / 67 Loss (mean): 0.3263292212113811 Loss (std): 0.8994250115615737 Loss ratio: 2.7561890051487836 Tokens per Sec: 2620.654162518137
Epoch Step: 30 / 67 Loss (mean): 0.38533105710098425 Loss (std): 0.7256563459865083 Loss ratio: 1.8832023337177686 Tokens per Sec: 2848.065018520507
Epoch Step: 35 / 67 Loss (mean): 0.1062924491711783 Loss (std): 0.24260767874540143 Loss ratio: 2.2824544982936157 Tokens per Sec: 2785.8226263952765
Epoch Step: 40 / 67 Loss (mean): 0.18594394260117042 Loss (std): 0.503443139657418 Loss ratio: 2.7074995432212003 Tokens per Sec: 2812.8544744209257
Epoch Step: 45 / 67 Loss (mean): 0.1435481558835363 Loss (std): 0.28932378294627403 Loss ratio: 2.015517239949837 Tokens per Sec: 3515.283310572509
Epoch Step: 50 / 67 Loss (mean): 0.07101400296517113 Loss (std): 0.1464199794671554 Loss ratio: 2.061846584524565 Tokens per Sec: 3248.0507252459197
Epoch Step: 55 / 67 Loss (mean): 0.2163281280895717 Loss (std): 0.7092490160111063 Loss ratio: 3.2785797310529974 Tokens per Sec: 2563.8461858168007
Epoch Step: 60 / 67 Loss (mean): 0.2663437226656242 Loss (std): 0.8166926426862162 Loss ratio: 3.0663108351591086 Tokens per Sec: 2831.305906965712
Epoch Step: 65 / 67 Loss (mean): 0.18391908250760025 Loss (std): 0.5224589402550498 Loss ratio: 2.8407000140045815 Tokens per Sec: 2505.075174372753
Mean loss per sample: 0.4757514649707444 Std loss per sample: 3.583264033543884 ratio: 7.531798212674408
Epoch ended with duration 0:00:11.322241
Train perplexity: 1.0664858993438602
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lint checks method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link to appear before scrolling[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.85958564281464 Loss (std): 45.9395140834574 Loss ratio: 0.46004110459437864 Tokens per Sec: 4336.397848320371
Mean loss per sample: 105.90696348227011 Std loss per sample: 53.60258355295525 ratio: 0.5061289814236706
Epoch ended with duration 0:00:01.021219
b'BLEU = 2.30, 8.2/2.5/1.5/1.1 (BP=0.952, ratio=0.953, hyp_len=2968, ref_len=3113)\n'
Validation perplexity: 1710490.1497263385
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.3
Epoch 937 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.10781143693566264 Loss (std): 0.31532269132460417 Loss ratio: 2.9247610484291715 Tokens per Sec: 2637.7872925108218
Epoch Step: 10 / 67 Loss (mean): 0.1746188281827017 Loss (std): 0.3447387208829058 Loss ratio: 1.9742356793404294 Tokens per Sec: 2406.589024422405
Epoch Step: 15 / 67 Loss (mean): 0.5469360890019743 Loss (std): 1.0945766566787856 Loss ratio: 2.0012880456949227 Tokens per Sec: 2548.0144142449544
Epoch Step: 20 / 67 Loss (mean): 0.1119859427881238 Loss (std): 0.4399613459730926 Loss ratio: 3.928719400125914 Tokens per Sec: 2375.249756632329
Epoch Step: 25 / 67 Loss (mean): 0.15839950564134142 Loss (std): 0.43268306538034496 Loss ratio: 2.7315935338842183 Tokens per Sec: 2587.8832442317694
Epoch Step: 30 / 67 Loss (mean): 0.09851413707110623 Loss (std): 0.4765697066576593 Loss ratio: 4.837576827310353 Tokens per Sec: 3269.7551185037337
Epoch Step: 35 / 67 Loss (mean): 0.5064646778191673 Loss (std): 1.0122852028815916 Loss ratio: 1.9987281388318794 Tokens per Sec: 3412.979238535912
Epoch Step: 40 / 67 Loss (mean): 1.0675065461600752 Loss (std): 1.8623353733744434 Loss ratio: 1.7445657640915129 Tokens per Sec: 2826.1861873787543
Epoch Step: 45 / 67 Loss (mean): 1.325666338307201 Loss (std): 5.328357239905946 Loss ratio: 4.019380356832436 Tokens per Sec: 3009.0693234973637
Epoch Step: 50 / 67 Loss (mean): 0.09589602120638574 Loss (std): 0.26091439527070603 Loss ratio: 2.720805222034923 Tokens per Sec: 3120.2463247264977
Epoch Step: 55 / 67 Loss (mean): 0.10251413218952621 Loss (std): 0.32952509937013913 Loss ratio: 3.2144358278419536 Tokens per Sec: 2806.2535195014666
Epoch Step: 60 / 67 Loss (mean): 0.11136312652661218 Loss (std): 0.3282023836530491 Loss ratio: 2.947136937419042 Tokens per Sec: 2789.69414819705
Epoch Step: 65 / 67 Loss (mean): 0.16621431733665304 Loss (std): 0.4393292337591597 Loss ratio: 2.643149163073212 Tokens per Sec: 2698.982108976482
Mean loss per sample: 0.4000003138492601 Std loss per sample: 3.2029633527859596 ratio: 8.007402099171838
Epoch ended with duration 0:00:11.306984
Train perplexity: 1.0556111922058102
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the exception into method_1 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link to appear before scrolling[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.08365368843079 Loss (std): 46.26291585144275 Loss ratio: 0.46224247563406584 Tokens per Sec: 4433.909887612162
Mean loss per sample: 104.05767202780383 Std loss per sample: 54.25443441142022 ratio: 0.5213881240483992
Epoch ended with duration 0:00:01.006276
b'BLEU = 2.21, 8.2/2.5/1.5/1.2 (BP=0.902, ratio=0.907, hyp_len=2822, ref_len=3113)\n'
Validation perplexity: 1331315.898792975
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.21
Epoch 938 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1672368824692967 Loss (std): 0.5089791499038067 Loss ratio: 3.043462317573703 Tokens per Sec: 2694.8485833482296
Epoch Step: 10 / 67 Loss (mean): 0.9904061482784527 Loss (std): 1.2908288746279344 Loss ratio: 1.3033328567998932 Tokens per Sec: 2853.333403900811
Epoch Step: 15 / 67 Loss (mean): 0.06627106851112785 Loss (std): 0.22404605804802077 Loss ratio: 3.380752160505761 Tokens per Sec: 2547.5247479305717
Epoch Step: 20 / 67 Loss (mean): 0.20532804737285915 Loss (std): 0.5477378133808217 Loss ratio: 2.6676229594010317 Tokens per Sec: 2946.4360174937283
Epoch Step: 25 / 67 Loss (mean): 0.19818949518958107 Loss (std): 0.6680251774832455 Loss ratio: 3.3706386750934314 Tokens per Sec: 2832.556140900752
Epoch Step: 30 / 67 Loss (mean): 0.06229238142714166 Loss (std): 0.08708963682118998 Loss ratio: 1.398078462019495 Tokens per Sec: 2305.7070505659744
Epoch Step: 35 / 67 Loss (mean): 0.14024409706416918 Loss (std): 0.3277639115181187 Loss ratio: 2.3370959518399492 Tokens per Sec: 3799.852199853753
Epoch Step: 40 / 67 Loss (mean): 0.22683654563161326 Loss (std): 0.6436271203650424 Loss ratio: 2.8374048748313454 Tokens per Sec: 2600.908626942224
Epoch Step: 45 / 67 Loss (mean): 0.22891966156885246 Loss (std): 0.9098072931793123 Loss ratio: 3.9743519055730756 Tokens per Sec: 2423.035111032042
Epoch Step: 50 / 67 Loss (mean): 0.49024164420507077 Loss (std): 0.736090465487284 Loss ratio: 1.5014849802914199 Tokens per Sec: 3120.4610639271614
Epoch Step: 55 / 67 Loss (mean): 0.10913318510233694 Loss (std): 0.3179797918546135 Loss ratio: 2.91368561777461 Tokens per Sec: 3047.213985484138
Epoch Step: 60 / 67 Loss (mean): 0.9057442984121735 Loss (std): 1.42715488787612 Loss ratio: 1.5756708492430058 Tokens per Sec: 3903.7353111458783
Epoch Step: 65 / 67 Loss (mean): 0.10792674944423197 Loss (std): 0.34336285438606795 Loss ratio: 3.1814434897206905 Tokens per Sec: 2243.2042651246347
Mean loss per sample: 0.28908434681906264 Std loss per sample: 1.9314596540675564 ratio: 6.681301410195182
Epoch ended with duration 0:00:11.277894
Train perplexity: 1.0398880151421452
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the print error codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.24191030859947 Loss (std): 46.90720080886693 Loss ratio: 0.4633180139122942 Tokens per Sec: 4323.017542434299
Mean loss per sample: 106.83275654618858 Std loss per sample: 55.440112345959946 ratio: 0.5189430109106162
Epoch ended with duration 0:00:01.022803
b'BLEU = 2.52, 8.4/2.7/1.8/1.5 (BP=0.901, ratio=0.905, hyp_len=2818, ref_len=3113)\n'
Validation perplexity: 1939134.0537703326
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.52
Epoch 939 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.48764809956719546 Loss (std): 0.721485775398965 Loss ratio: 1.4795213516453944 Tokens per Sec: 2630.4351694764637
Epoch Step: 10 / 67 Loss (mean): 0.11463428926163033 Loss (std): 0.5309915606709478 Loss ratio: 4.63204826488751 Tokens per Sec: 2842.7532234421997
Epoch Step: 15 / 67 Loss (mean): 0.1765364138257155 Loss (std): 0.3708285747373486 Loss ratio: 2.1005783832419236 Tokens per Sec: 4001.6899920173937
Epoch Step: 20 / 67 Loss (mean): 0.054399011664372665 Loss (std): 0.11893717524972776 Loss ratio: 2.186384855363518 Tokens per Sec: 2432.5574966352233
Epoch Step: 25 / 67 Loss (mean): 0.31769263332898845 Loss (std): 0.6302880919963934 Loss ratio: 1.9839556409974886 Tokens per Sec: 3055.0006984110846
Epoch Step: 30 / 67 Loss (mean): 0.4635259013111863 Loss (std): 1.003278664762265 Loss ratio: 2.1644500596930345 Tokens per Sec: 3348.3327612979206
Epoch Step: 35 / 67 Loss (mean): 0.15715734603998044 Loss (std): 0.5704340495606728 Loss ratio: 3.6297001949597427 Tokens per Sec: 2629.565285245946
Epoch Step: 40 / 67 Loss (mean): 0.8182779667390605 Loss (std): 1.3619928229491962 Loss ratio: 1.664462295589978 Tokens per Sec: 2978.846538038358
Epoch Step: 45 / 67 Loss (mean): 0.08996101866978279 Loss (std): 0.5072676403567737 Loss ratio: 5.638749403436457 Tokens per Sec: 2939.324212800729
Epoch Step: 50 / 67 Loss (mean): 0.09721560239268001 Loss (std): 0.28251056148849557 Loss ratio: 2.90602078817924 Tokens per Sec: 2730.7452447411583
Epoch Step: 55 / 67 Loss (mean): 0.34051335972151264 Loss (std): 0.7717382471051226 Loss ratio: 2.266396383790302 Tokens per Sec: 2488.241297427505
Epoch Step: 60 / 67 Loss (mean): 0.0731094780994681 Loss (std): 0.21289435235149123 Loss ratio: 2.9119938739248106 Tokens per Sec: 2706.5455711374548
Epoch Step: 65 / 67 Loss (mean): 0.17422121028903348 Loss (std): 0.7959331025112475 Loss ratio: 4.568520108377116 Tokens per Sec: 2483.600064376888
Mean loss per sample: 0.198520192411752 Std loss per sample: 0.6438589916416501 ratio: 3.243292200252446
Epoch ended with duration 0:00:11.190991
Train perplexity: 1.027223699229501
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the print error codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link to singleton ''[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.44636225700378 Loss (std): 46.748884507934115 Loss ratio: 0.46082366551006226 Tokens per Sec: 4313.562704905132
Mean loss per sample: 106.88593361978648 Std loss per sample: 56.677255893248535 ratio: 0.5302592583871726
Epoch ended with duration 0:00:01.020847
b'BLEU = 2.82, 8.9/3.0/2.0/1.6 (BP=0.937, ratio=0.939, hyp_len=2922, ref_len=3113)\n'
Validation perplexity: 1953158.7921096175
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.82
Epoch 940 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.0529264277238326 Loss (std): 0.12137609596911243 Loss ratio: 2.293298474675954 Tokens per Sec: 2521.3736609127895
Epoch Step: 10 / 67 Loss (mean): 0.1490988930970616 Loss (std): 0.45936775267820096 Loss ratio: 3.0809601811004597 Tokens per Sec: 2393.1495644264414
Epoch Step: 15 / 67 Loss (mean): 0.06313575732883692 Loss (std): 0.17429049760837012 Loss ratio: 2.7605671489864885 Tokens per Sec: 3008.705883209712
Epoch Step: 20 / 67 Loss (mean): 0.8788764495643591 Loss (std): 1.3332757570523603 Loss ratio: 1.5170229646194726 Tokens per Sec: 3237.1751517620405
Epoch Step: 25 / 67 Loss (mean): 0.37360712666668405 Loss (std): 0.8631444519238934 Loss ratio: 2.3102997515728685 Tokens per Sec: 3031.684200175665
Epoch Step: 30 / 67 Loss (mean): 0.07798158033727987 Loss (std): 0.45196760810979186 Loss ratio: 5.795825195577939 Tokens per Sec: 2561.874157684947
Epoch Step: 35 / 67 Loss (mean): 0.4947336954746788 Loss (std): 0.8484144065861116 Loss ratio: 1.7148910905938781 Tokens per Sec: 2589.17211756689
Epoch Step: 40 / 67 Loss (mean): 0.3932699848737684 Loss (std): 0.9291816688482 Loss ratio: 2.362706803435427 Tokens per Sec: 3148.134301979131
Epoch Step: 45 / 67 Loss (mean): 0.12227924671424262 Loss (std): 0.4289100647160567 Loss ratio: 3.507627632989817 Tokens per Sec: 3254.0475486596065
Epoch Step: 50 / 67 Loss (mean): 0.06920520867447522 Loss (std): 0.1426021810112176 Loss ratio: 2.060570060296823 Tokens per Sec: 2514.635675221835
Epoch Step: 55 / 67 Loss (mean): 0.26280835492070764 Loss (std): 0.7426267149784406 Loss ratio: 2.8257348028471156 Tokens per Sec: 3701.542680072688
Epoch Step: 60 / 67 Loss (mean): 2.241521192034952 Loss (std): 7.540341588836807 Loss ratio: 3.363939460233856 Tokens per Sec: 2356.8522157352595
Epoch Step: 65 / 67 Loss (mean): 0.21015814392444554 Loss (std): 0.6685670683955585 Loss ratio: 3.1812570091783674 Tokens per Sec: 2730.9692517745725
Mean loss per sample: 0.34659276519306514 Std loss per sample: 2.4358508689295295 ratio: 7.0279910995045425
Epoch ended with duration 0:00:11.297922
Train perplexity: 1.048010811537631
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print to apache-sshd 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link to appear before scrolling[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.18394821882248 Loss (std): 47.14938509116921 Loss ratio: 0.46597692540325647 Tokens per Sec: 4436.871583111935
Mean loss per sample: 104.57954382981922 Std loss per sample: 54.682781876364096 ratio: 0.5228821992697597
Epoch ended with duration 0:00:01.004424
b'BLEU = 2.68, 8.9/2.9/1.9/1.5 (BP=0.920, ratio=0.923, hyp_len=2873, ref_len=3113)\n'
Validation perplexity: 1428879.8669094518
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.68
Model saved checkpoint_commit_msg_generator!
Epoch 941 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.21766769396344898 Loss (std): 0.6986212545670013 Loss ratio: 3.2095771395653903 Tokens per Sec: 2747.369179071266
Epoch Step: 10 / 67 Loss (mean): 0.22850743569779297 Loss (std): 0.7799874654511421 Loss ratio: 3.4134008071522706 Tokens per Sec: 2865.8115564775067
Epoch Step: 15 / 67 Loss (mean): 0.25883226527730585 Loss (std): 0.5999360863010159 Loss ratio: 2.3178566461111823 Tokens per Sec: 3274.2452894351813
Epoch Step: 20 / 67 Loss (mean): 0.1339346130641843 Loss (std): 0.38177584179864893 Loss ratio: 2.850464365142817 Tokens per Sec: 3018.0062478344767
Epoch Step: 25 / 67 Loss (mean): 0.27519734141515073 Loss (std): 0.5290749621973875 Loss ratio: 1.922529336499832 Tokens per Sec: 2992.202675532944
Epoch Step: 30 / 67 Loss (mean): 0.09628772641087835 Loss (std): 0.2607742809274529 Loss ratio: 2.7082816330575574 Tokens per Sec: 2594.4479033093207
Epoch Step: 35 / 67 Loss (mean): 0.20029616571810038 Loss (std): 0.5958588078965427 Loss ratio: 2.974888739184167 Tokens per Sec: 2807.359341479177
Epoch Step: 40 / 67 Loss (mean): 0.13714718043524954 Loss (std): 0.3975896465351988 Loss ratio: 2.8989997845629087 Tokens per Sec: 2897.448933884333
Epoch Step: 45 / 67 Loss (mean): 0.3545542139202098 Loss (std): 0.8320685655086988 Loss ratio: 2.346802076637991 Tokens per Sec: 2340.6365020106628
Epoch Step: 50 / 67 Loss (mean): 0.14624424228713906 Loss (std): 0.7457215400180013 Loss ratio: 5.099151449353033 Tokens per Sec: 2619.4053240030485
Epoch Step: 55 / 67 Loss (mean): 0.947705295940068 Loss (std): 5.154548068059175 Loss ratio: 5.438977802636595 Tokens per Sec: 2726.5551279152614
Epoch Step: 60 / 67 Loss (mean): 0.1391640416654809 Loss (std): 0.3383726822646226 Loss ratio: 2.431466334371019 Tokens per Sec: 2967.626290836068
Epoch Step: 65 / 67 Loss (mean): 0.16806482522770239 Loss (std): 0.4593396428108588 Loss ratio: 2.7331099305790083 Tokens per Sec: 2514.722182192043
Mean loss per sample: 0.31913369732984426 Std loss per sample: 2.213328387765625 ratio: 6.935426770298138
Epoch ended with duration 0:00:11.310063
Train perplexity: 1.044124461294803
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shader activities on 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add support for updating provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.30478829145432 Loss (std): 47.92719481827154 Loss ratio: 0.47309900772295965 Tokens per Sec: 4347.832623864408
Mean loss per sample: 109.30067401489273 Std loss per sample: 55.61769696960798 ratio: 0.5088504482783867
Epoch ended with duration 0:00:01.035850
b'BLEU = 2.89, 9.2/3.2/2.2/1.8 (BP=0.882, ratio=0.888, hyp_len=2765, ref_len=3113)\n'
Validation perplexity: 2709295.210047266
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.89
Epoch 942 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.035656956281513885 Loss (std): 0.05901316383225921 Loss ratio: 1.6550252737879985 Tokens per Sec: 2324.0928292046938
Epoch Step: 10 / 67 Loss (mean): 0.8519470529013233 Loss (std): 1.092308426428454 Loss ratio: 1.2821318211132664 Tokens per Sec: 2971.2045942856507
Epoch Step: 15 / 67 Loss (mean): 0.14221398161680554 Loss (std): 0.43647319910409044 Loss ratio: 3.0691300119854885 Tokens per Sec: 3212.9635874243754
Epoch Step: 20 / 67 Loss (mean): 0.15532720747160056 Loss (std): 0.5015645182232457 Loss ratio: 3.2290834708719642 Tokens per Sec: 2670.0528494693003
Epoch Step: 25 / 67 Loss (mean): 0.2380132833868629 Loss (std): 0.5171181016373609 Loss ratio: 2.172643872135681 Tokens per Sec: 2481.1564695965885
Epoch Step: 30 / 67 Loss (mean): 0.053961746519121334 Loss (std): 0.13677213200669366 Loss ratio: 2.534612773480719 Tokens per Sec: 2648.5280009459557
Epoch Step: 35 / 67 Loss (mean): 0.09279081901581776 Loss (std): 0.3544490156001105 Loss ratio: 3.8198716140191484 Tokens per Sec: 2813.3706300940034
Epoch Step: 40 / 67 Loss (mean): 0.36629889802679827 Loss (std): 0.9333114195802231 Loss ratio: 2.547950388624818 Tokens per Sec: 3229.2230818052276
Epoch Step: 45 / 67 Loss (mean): 0.08035870804906153 Loss (std): 0.340375778224461 Loss ratio: 4.235704959525368 Tokens per Sec: 2598.5493742207195
Epoch Step: 50 / 67 Loss (mean): 0.20975487591704223 Loss (std): 1.2693466844229302 Loss ratio: 6.051571763818997 Tokens per Sec: 2497.274915163389
Epoch Step: 55 / 67 Loss (mean): 0.07489648864111587 Loss (std): 0.27580113251184873 Loss ratio: 3.6824307456310095 Tokens per Sec: 2841.8507344205022
Epoch Step: 60 / 67 Loss (mean): 0.37377916451350757 Loss (std): 0.8891341041234839 Loss ratio: 2.3787685043406226 Tokens per Sec: 3419.924131408901
Epoch Step: 65 / 67 Loss (mean): 0.6405515458700393 Loss (std): 1.9998899333158902 Loss ratio: 3.122137392705076 Tokens per Sec: 3333.0222212877275
Mean loss per sample: 0.3352089480905198 Std loss per sample: 2.6951471384162984 ratio: 8.040200459352
Epoch ended with duration 0:00:11.269155
Train perplexity: 1.0463978792350075
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the print use error codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link to appear before scrolling[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 123.46032059192657 Loss (std): 49.70742284917338 Loss ratio: 0.40261861147656774 Tokens per Sec: 4367.635968301788
Mean loss per sample: 107.95454592343236 Std loss per sample: 55.03472321867468 ratio: 0.5097953286534919
Epoch ended with duration 0:00:01.013500
b'BLEU = 2.53, 8.2/2.6/1.7/1.2 (BP=0.985, ratio=0.986, hyp_len=3068, ref_len=3113)\n'
Validation perplexity: 2257513.673361522
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.53
Epoch 943 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5576583250194744 Loss (std): 1.3761614400867346 Loss ratio: 2.4677501945993123 Tokens per Sec: 2737.5187914362964
Epoch Step: 10 / 67 Loss (mean): 0.1454223082819226 Loss (std): 0.5574251755616355 Loss ratio: 3.8331476246476885 Tokens per Sec: 2670.4530644882325
Epoch Step: 15 / 67 Loss (mean): 0.09282301124585501 Loss (std): 0.3031295087657049 Loss ratio: 3.2656719998322727 Tokens per Sec: 2620.0245206509194
Epoch Step: 20 / 67 Loss (mean): 0.5371271362286052 Loss (std): 0.9685363496548763 Loss ratio: 1.8031789576958932 Tokens per Sec: 2946.1582760661126
Epoch Step: 25 / 67 Loss (mean): 0.11419096239069404 Loss (std): 0.3142699586717387 Loss ratio: 2.7521438833004357 Tokens per Sec: 2910.3422747486634
Epoch Step: 30 / 67 Loss (mean): 0.04240357799380945 Loss (std): 0.10216210115773393 Loss ratio: 2.409280206794075 Tokens per Sec: 3080.54328426932
Epoch Step: 35 / 67 Loss (mean): 0.11725291010202454 Loss (std): 0.5960168585814979 Loss ratio: 5.08317327103344 Tokens per Sec: 2675.849024409579
Epoch Step: 40 / 67 Loss (mean): 0.10164498545350398 Loss (std): 0.49932808482446456 Loss ratio: 4.912471408172663 Tokens per Sec: 2572.7088325398545
Epoch Step: 45 / 67 Loss (mean): 0.4168735202993048 Loss (std): 0.8474827881744224 Loss ratio: 2.032949436476442 Tokens per Sec: 3303.5561724119284
Epoch Step: 50 / 67 Loss (mean): 0.08323140145103025 Loss (std): 0.21521657107265207 Loss ratio: 2.5857617115731997 Tokens per Sec: 2561.3520113295535
Epoch Step: 55 / 67 Loss (mean): 0.3109784476343975 Loss (std): 0.8898969582912702 Loss ratio: 2.8616033202965867 Tokens per Sec: 2804.4711073289163
Epoch Step: 60 / 67 Loss (mean): 0.11604396948018803 Loss (std): 0.26417261443537665 Loss ratio: 2.2764872282353146 Tokens per Sec: 2650.484287342344
Epoch Step: 65 / 67 Loss (mean): 0.11907197837854255 Loss (std): 0.4522826140160728 Loss ratio: 3.7983967359492254 Tokens per Sec: 2764.7876715425773
Mean loss per sample: 0.36758144273568155 Std loss per sample: 2.8738433160449803 ratio: 7.818249187599734
Epoch ended with duration 0:00:11.333443
Train perplexity: 1.0509911426128877
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use gwt_binary ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add method_1 for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 120.71389836072922 Loss (std): 50.87851787277984 Loss ratio: 0.42148019874844583 Tokens per Sec: 4365.0478333190795
Mean loss per sample: 106.54947314790037 Std loss per sample: 55.233005124660615 ratio: 0.5183789604289472
Epoch ended with duration 0:00:01.014009
b'BLEU = 2.83, 8.7/3.1/2.1/1.7 (BP=0.899, ratio=0.904, hyp_len=2814, ref_len=3113)\n'
Validation perplexity: 1866101.5736438935
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.83
Epoch 944 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.37380350748026103 Loss (std): 1.0729985374199227 Loss ratio: 2.870488146707888 Tokens per Sec: 3103.3266225295956
Epoch Step: 10 / 67 Loss (mean): 0.17774859186738468 Loss (std): 0.6516397256452107 Loss ratio: 3.666075319074192 Tokens per Sec: 2962.1796533047122
Epoch Step: 15 / 67 Loss (mean): 0.12651247777239405 Loss (std): 0.433725344728252 Loss ratio: 3.4283206871385303 Tokens per Sec: 2655.7203873791027
Epoch Step: 20 / 67 Loss (mean): 0.19725426369086563 Loss (std): 0.4555415764074504 Loss ratio: 2.3094130787528595 Tokens per Sec: 2983.77223656021
Epoch Step: 25 / 67 Loss (mean): 1.567402410773866 Loss (std): 8.593768515081939 Loss ratio: 5.482809300286184 Tokens per Sec: 2607.276462811272
Epoch Step: 30 / 67 Loss (mean): 0.4198155780313755 Loss (std): 0.9575584500185973 Loss ratio: 2.2809026156409873 Tokens per Sec: 3060.9805097172866
Epoch Step: 35 / 67 Loss (mean): 0.04697994234311409 Loss (std): 0.10066185869274778 Loss ratio: 2.1426560713415164 Tokens per Sec: 2707.5539737928675
Epoch Step: 40 / 67 Loss (mean): 0.3118145504849963 Loss (std): 0.7640489243751094 Loss ratio: 2.4503312086838407 Tokens per Sec: 3135.2272487102505
Epoch Step: 45 / 67 Loss (mean): 0.19055457128251874 Loss (std): 0.8405272287551602 Loss ratio: 4.410952847250163 Tokens per Sec: 2278.714090721366
Epoch Step: 50 / 67 Loss (mean): 0.2641443838219857 Loss (std): 0.693427266628758 Loss ratio: 2.625182699686237 Tokens per Sec: 2915.6596148178523
Epoch Step: 55 / 67 Loss (mean): 0.23525824498756265 Loss (std): 0.7769221770582468 Loss ratio: 3.3024227359144 Tokens per Sec: 3469.062578178829
Epoch Step: 60 / 67 Loss (mean): 0.21798668368683138 Loss (std): 0.547448631800349 Loss ratio: 2.511385661460111 Tokens per Sec: 2754.620410716882
Epoch Step: 65 / 67 Loss (mean): 0.05340263908419729 Loss (std): 0.10637093211812079 Loss ratio: 1.9918665807959608 Tokens per Sec: 2365.642837370476
Mean loss per sample: 0.3071913957911461 Std loss per sample: 2.095422336547752 ratio: 6.821227304075898
Epoch ended with duration 0:00:11.288043
Train perplexity: 1.0424387376970226
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use gwt_binary ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link for dependenciestest016[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.13641795516014 Loss (std): 46.20825161589441 Loss ratio: 0.45689033238631516 Tokens per Sec: 4452.956350107235
Mean loss per sample: 105.17012685305271 Std loss per sample: 55.03335745841433 ratio: 0.5232793674891048
Epoch ended with duration 0:00:01.005992
b'BLEU = 2.82, 9.0/2.9/2.0/1.5 (BP=0.939, ratio=0.941, hyp_len=2929, ref_len=3113)\n'
Validation perplexity: 1547940.6048317624
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.82
Epoch 945 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.19696787464954468 Loss (std): 0.6378500125571409 Loss ratio: 3.238345408823831 Tokens per Sec: 2835.2446474661106
Epoch Step: 10 / 67 Loss (mean): 0.1717564320169913 Loss (std): 0.8471900090175807 Loss ratio: 4.9325081982011065 Tokens per Sec: 2976.4426727815394
Epoch Step: 15 / 67 Loss (mean): 0.15142590122604815 Loss (std): 0.37295610656278405 Loss ratio: 2.46296111525885 Tokens per Sec: 2585.229965102721
Epoch Step: 20 / 67 Loss (mean): 3.8224835806631745 Loss (std): 10.201831220286243 Loss ratio: 2.668901253597091 Tokens per Sec: 2925.9771257919624
Epoch Step: 25 / 67 Loss (mean): 0.30886615911913395 Loss (std): 0.7145302463837313 Loss ratio: 2.3133976490707973 Tokens per Sec: 3131.6237252476267
Epoch Step: 30 / 67 Loss (mean): 0.12283653981307907 Loss (std): 0.3195421706679879 Loss ratio: 2.601360891101595 Tokens per Sec: 2734.939393358235
Epoch Step: 35 / 67 Loss (mean): 0.1058403588872352 Loss (std): 0.30529969375810406 Loss ratio: 2.8845300315296316 Tokens per Sec: 2300.666328590025
Epoch Step: 40 / 67 Loss (mean): 0.12754858343396336 Loss (std): 0.3776319726789274 Loss ratio: 2.9606912324074655 Tokens per Sec: 2582.400092074472
Epoch Step: 45 / 67 Loss (mean): 0.3093029050965015 Loss (std): 0.6920784114010016 Loss ratio: 2.237542551322224 Tokens per Sec: 2670.136631255053
Epoch Step: 50 / 67 Loss (mean): 1.0148599816038768 Loss (std): 1.3370167349619368 Loss ratio: 1.3174396066430032 Tokens per Sec: 2942.1893562330984
Epoch Step: 55 / 67 Loss (mean): 0.25396836748404894 Loss (std): 0.7994606820908255 Loss ratio: 3.1478750287318262 Tokens per Sec: 3260.2967818369475
Epoch Step: 60 / 67 Loss (mean): 0.0779050746857024 Loss (std): 0.1853546267513822 Loss ratio: 2.3792368789731686 Tokens per Sec: 2933.730398413236
Epoch Step: 65 / 67 Loss (mean): 0.1320620842207063 Loss (std): 0.37224079624468404 Loss ratio: 2.8186803081388865 Tokens per Sec: 2601.9104861799724
Mean loss per sample: 0.3140360404579084 Std loss per sample: 2.7118164451846942 ratio: 8.635366950973166
Epoch ended with duration 0:00:11.312328
Train perplexity: 1.0434045649148138
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add support for developer options provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.40432435274124 Loss (std): 46.949525781183254 Loss ratio: 0.4629933297308546 Tokens per Sec: 4431.1974899634415
Mean loss per sample: 105.2159943933614 Std loss per sample: 55.3462795894627 ratio: 0.5260253434714939
Epoch ended with duration 0:00:01.006385
b'BLEU = 2.70, 9.0/3.0/1.9/1.5 (BP=0.913, ratio=0.916, hyp_len=2853, ref_len=3113)\n'
Validation perplexity: 1557592.3734808725
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.7
Model saved checkpoint_commit_msg_generator!
Epoch 946 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2506163406851556 Loss (std): 0.5875045335669384 Loss ratio: 2.34423873543429 Tokens per Sec: 2882.199700256577
Epoch Step: 10 / 67 Loss (mean): 0.07834914301201934 Loss (std): 0.20316806418825306 Loss ratio: 2.5931115054709095 Tokens per Sec: 2793.352870464215
Epoch Step: 15 / 67 Loss (mean): 0.31034777958484483 Loss (std): 0.6890657113572298 Loss ratio: 2.2203017282063353 Tokens per Sec: 2935.7681299507476
Epoch Step: 20 / 67 Loss (mean): 0.21242085047765613 Loss (std): 0.49532007606378614 Loss ratio: 2.3317865216620404 Tokens per Sec: 3135.231847636481
Epoch Step: 25 / 67 Loss (mean): 0.1350353723291846 Loss (std): 0.3633061342163941 Loss ratio: 2.690451605011603 Tokens per Sec: 3053.217720146374
Epoch Step: 30 / 67 Loss (mean): 0.6986242029149707 Loss (std): 1.4126504265653572 Loss ratio: 2.0220462169377353 Tokens per Sec: 3369.569701010453
Epoch Step: 35 / 67 Loss (mean): 0.13223555056742953 Loss (std): 0.34878383991883377 Loss ratio: 2.6375950977039415 Tokens per Sec: 2812.591517500025
Epoch Step: 40 / 67 Loss (mean): 0.7652478739832986 Loss (std): 5.5222358380142555 Loss ratio: 7.216270734957673 Tokens per Sec: 2976.9177158224925
Epoch Step: 45 / 67 Loss (mean): 0.12297690125001282 Loss (std): 0.3260878105924705 Loss ratio: 2.6516183712381234 Tokens per Sec: 2986.1372814334472
Epoch Step: 50 / 67 Loss (mean): 0.05121560771112854 Loss (std): 0.10325053039408831 Loss ratio: 2.0159973689358996 Tokens per Sec: 2271.922832912901
Epoch Step: 55 / 67 Loss (mean): 0.1496052962174872 Loss (std): 0.7844411995735926 Loss ratio: 5.243405276463068 Tokens per Sec: 3006.120974331139
Epoch Step: 60 / 67 Loss (mean): 0.501013943227008 Loss (std): 0.7289412378992215 Loss ratio: 1.4549320388253952 Tokens per Sec: 2288.842564802183
Epoch Step: 65 / 67 Loss (mean): 0.3482349521800643 Loss (std): 1.6190145685017667 Loss ratio: 4.649201805752719 Tokens per Sec: 2486.2333514323677
Mean loss per sample: 0.2794931663690003 Std loss per sample: 1.9766734520510618 ratio: 7.072349845725253
Epoch ended with duration 0:00:11.233992
Train perplexity: 1.038539444325469
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add support for developer options provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.32774502038956 Loss (std): 46.01085133613562 Loss ratio: 0.45860545681341547 Tokens per Sec: 4442.01378330373
Mean loss per sample: 103.9841397309401 Std loss per sample: 54.3536027954385 ratio: 0.5227105108151968
Epoch ended with duration 0:00:01.004193
b'BLEU = 2.56, 8.8/2.9/1.8/1.4 (BP=0.901, ratio=0.906, hyp_len=2820, ref_len=3113)\n'
Validation perplexity: 1318115.292213108
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.56
Epoch 947 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.22913522236558492 Loss (std): 0.6652701382102736 Loss ratio: 2.903395345953561 Tokens per Sec: 3331.2697805996518
Epoch Step: 10 / 67 Loss (mean): 0.08675099339234293 Loss (std): 0.2171820020148044 Loss ratio: 2.5035102599064176 Tokens per Sec: 2928.0250817170927
Epoch Step: 15 / 67 Loss (mean): 0.17487869108026644 Loss (std): 0.44354099417474147 Loss ratio: 2.536278099034739 Tokens per Sec: 2965.7067658359556
Epoch Step: 20 / 67 Loss (mean): 0.3146574801830866 Loss (std): 0.814083909541041 Loss ratio: 2.587206600228789 Tokens per Sec: 2760.7538688974146
Epoch Step: 25 / 67 Loss (mean): 0.12681297785184142 Loss (std): 0.38177967389445233 Loss ratio: 3.0105725798860625 Tokens per Sec: 2360.099060932628
Epoch Step: 30 / 67 Loss (mean): 0.5132016001889497 Loss (std): 1.1090972692055177 Loss ratio: 2.1611336924849263 Tokens per Sec: 2835.0463992815053
Epoch Step: 35 / 67 Loss (mean): 0.08215632356404967 Loss (std): 0.18434729817081713 Loss ratio: 2.243860121456124 Tokens per Sec: 3011.2867230324755
Epoch Step: 40 / 67 Loss (mean): 0.14328011480358782 Loss (std): 0.4761731678941799 Loss ratio: 3.3233723224393747 Tokens per Sec: 2754.1836547271905
Epoch Step: 45 / 67 Loss (mean): 0.2580798229382708 Loss (std): 1.5661334635461954 Loss ratio: 6.068407230428058 Tokens per Sec: 2865.0312323542094
Epoch Step: 50 / 67 Loss (mean): 1.01427609298662 Loss (std): 1.3535718969695356 Loss ratio: 1.3345201630296057 Tokens per Sec: 3370.199301414316
Epoch Step: 55 / 67 Loss (mean): 0.19269599430026574 Loss (std): 0.4432599457050147 Loss ratio: 2.3003070059376083 Tokens per Sec: 2676.8185312106884
Epoch Step: 60 / 67 Loss (mean): 0.06030121130788757 Loss (std): 0.10812627790702836 Loss ratio: 1.7931029172026787 Tokens per Sec: 2687.923644550142
Epoch Step: 65 / 67 Loss (mean): 0.2607728651260004 Loss (std): 0.7982886683251145 Loss ratio: 3.0612413141198447 Tokens per Sec: 2236.287096854119
Mean loss per sample: 0.3584235158808047 Std loss per sample: 2.784221310703041 ratio: 7.767964955817648
Epoch ended with duration 0:00:11.362087
Train perplexity: 1.0496897028396723
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use method_4 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.77894192934036 Loss (std): 47.01798107417801 Loss ratio: 0.46196177895836316 Tokens per Sec: 4329.4106567551235
Mean loss per sample: 108.58038956441413 Std loss per sample: 56.01710941816363 ratio: 0.5159044800159985
Epoch ended with duration 0:00:01.033545
b'BLEU = 2.22, 8.5/2.4/1.4/1.1 (BP=0.949, ratio=0.950, hyp_len=2958, ref_len=3113)\n'
Validation perplexity: 2457334.157233817
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.22
Epoch 948 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.16778486742578025 Loss (std): 0.3880224324524209 Loss ratio: 2.312618762380719 Tokens per Sec: 3124.3820238438925
Epoch Step: 10 / 67 Loss (mean): 0.3110531314196123 Loss (std): 0.9240260013308256 Loss ratio: 2.9706371934391798 Tokens per Sec: 2944.149063040967
Epoch Step: 15 / 67 Loss (mean): 0.5713877971056718 Loss (std): 1.1831011360260566 Loss ratio: 2.070574734040488 Tokens per Sec: 2864.4338760074675
Epoch Step: 20 / 67 Loss (mean): 0.258621065956504 Loss (std): 0.6495668745758321 Loss ratio: 2.5116549271553885 Tokens per Sec: 2954.1389603257358
Epoch Step: 25 / 67 Loss (mean): 0.08342810693420688 Loss (std): 0.21007796764091358 Loss ratio: 2.5180718508521998 Tokens per Sec: 2652.2911855001453
Epoch Step: 30 / 67 Loss (mean): 0.055158891423616296 Loss (std): 0.09002163907393936 Loss ratio: 1.6320422102500154 Tokens per Sec: 2773.0115084573818
Epoch Step: 35 / 67 Loss (mean): 0.14355136411097646 Loss (std): 0.46214391973579305 Loss ratio: 3.2193627876536204 Tokens per Sec: 2588.3104660432773
Epoch Step: 40 / 67 Loss (mean): 0.14392398307674625 Loss (std): 0.446577738556571 Loss ratio: 3.10287228722983 Tokens per Sec: 2442.621353349406
Epoch Step: 45 / 67 Loss (mean): 0.14973474662565422 Loss (std): 0.38354969679482054 Loss ratio: 2.5615276710202584 Tokens per Sec: 3049.758117945768
Epoch Step: 50 / 67 Loss (mean): 0.1518385712588497 Loss (std): 0.7404094061753321 Loss ratio: 4.876293289885513 Tokens per Sec: 2722.537681581127
Epoch Step: 55 / 67 Loss (mean): 0.07336455488621141 Loss (std): 0.22083719737165552 Loss ratio: 3.010134767588715 Tokens per Sec: 3330.4524408087764
Epoch Step: 60 / 67 Loss (mean): 0.18144590874226196 Loss (std): 0.5550784570815014 Loss ratio: 3.0591952220315553 Tokens per Sec: 2579.6246980422766
Epoch Step: 65 / 67 Loss (mean): 0.24034373626852812 Loss (std): 0.9311614905014697 Loss ratio: 3.874290651207626 Tokens per Sec: 2648.3749216076067
Mean loss per sample: 0.43892929788716595 Std loss per sample: 3.1011901564279127 ratio: 7.065352373049213
Epoch ended with duration 0:00:11.305890
Train perplexity: 1.0611858494525226
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add support for developer options provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.07308009266853 Loss (std): 46.193948798396704 Loss ratio: 0.45703513493448433 Tokens per Sec: 4332.410717843265
Mean loss per sample: 105.6811465027887 Std loss per sample: 55.72586089381342 ratio: 0.5273018200303393
Epoch ended with duration 0:00:01.019316
b'BLEU = 2.42, 8.5/2.7/1.6/1.2 (BP=0.932, ratio=0.934, hyp_len=2909, ref_len=3113)\n'
Validation perplexity: 1658938.1370712786
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.42
Epoch 949 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.0879018314853965 Loss (std): 1.4684075211186094 Loss ratio: 1.3497610525332777 Tokens per Sec: 2550.316436760443
Epoch Step: 10 / 67 Loss (mean): 0.5082577252410374 Loss (std): 0.8653523743593562 Loss ratio: 1.7025857776169941 Tokens per Sec: 3022.0089462729566
Epoch Step: 15 / 67 Loss (mean): 0.06994621299281789 Loss (std): 0.20410772547331754 Loss ratio: 2.9180668507997054 Tokens per Sec: 2731.7331490928614
Epoch Step: 20 / 67 Loss (mean): 0.20849954584809893 Loss (std): 0.5442342622189271 Loss ratio: 2.6102419552291285 Tokens per Sec: 3270.395475527093
Epoch Step: 25 / 67 Loss (mean): 0.1065431851327503 Loss (std): 0.3439348165507617 Loss ratio: 3.228125910842885 Tokens per Sec: 2601.8616352201257
Epoch Step: 30 / 67 Loss (mean): 0.05160130959984599 Loss (std): 0.08801384897067746 Loss ratio: 1.7056514583292697 Tokens per Sec: 2647.8973999829564
Epoch Step: 35 / 67 Loss (mean): 0.45525585625227905 Loss (std): 1.0692986070651016 Loss ratio: 2.348786055972341 Tokens per Sec: 2846.6136791276554
Epoch Step: 40 / 67 Loss (mean): 0.0692834357960237 Loss (std): 0.16550321194587136 Loss ratio: 2.3887847079802285 Tokens per Sec: 2571.9132734699588
Epoch Step: 45 / 67 Loss (mean): 0.2017484093512394 Loss (std): 0.5272213085406585 Loss ratio: 2.61326129031718 Tokens per Sec: 3035.0978304952882
Epoch Step: 50 / 67 Loss (mean): 0.2661216421865902 Loss (std): 0.7966901143106242 Loss ratio: 2.9937065913340035 Tokens per Sec: 2530.4002774026767
Epoch Step: 55 / 67 Loss (mean): 0.12666518220217426 Loss (std): 0.32005285682889667 Loss ratio: 2.5267626925136404 Tokens per Sec: 2651.4357775719623
Epoch Step: 60 / 67 Loss (mean): 0.8246012131221505 Loss (std): 5.983455628940812 Loss ratio: 7.256180968114178 Tokens per Sec: 2902.1756048081456
Epoch Step: 65 / 67 Loss (mean): 0.1679611900181044 Loss (std): 0.5034522225997811 Loss ratio: 2.9974318623576934 Tokens per Sec: 2690.5684812170025
Mean loss per sample: 0.3920215389424164 Std loss per sample: 2.9984861058511108 ratio: 7.648778977656008
Epoch ended with duration 0:00:11.317496
Train perplexity: 1.0544722473831942
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the daemon to avoid print ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link to appear[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.35381174087524 Loss (std): 46.32748244787251 Loss ratio: 0.45708673065315986 Tokens per Sec: 4324.520105395807
Mean loss per sample: 108.75628007856793 Std loss per sample: 55.31940103522265 ratio: 0.5086547737313073
Epoch ended with duration 0:00:01.033775
b'BLEU = 2.64, 8.5/2.8/1.8/1.4 (BP=0.947, ratio=0.949, hyp_len=2953, ref_len=3113)\n'
Validation perplexity: 2516611.6202019383
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.64
Epoch 950 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.17536959569133614 Loss (std): 0.4208278736710388 Loss ratio: 2.39966267819724 Tokens per Sec: 2657.2173155705505
Epoch Step: 10 / 67 Loss (mean): 0.8598136686441649 Loss (std): 3.5052500145000822 Loss ratio: 4.076755397512453 Tokens per Sec: 2783.3195075769504
Epoch Step: 15 / 67 Loss (mean): 0.03667788294478669 Loss (std): 0.09308133550691124 Loss ratio: 2.5378055665598773 Tokens per Sec: 2341.0508800403386
Epoch Step: 20 / 67 Loss (mean): 0.3249849444400752 Loss (std): 0.8541668633251726 Loss ratio: 2.6283274900529263 Tokens per Sec: 3387.941474757785
Epoch Step: 25 / 67 Loss (mean): 0.10891600709874183 Loss (std): 0.43641585116728093 Loss ratio: 4.006902775747481 Tokens per Sec: 2705.2365049846712
Epoch Step: 30 / 67 Loss (mean): 0.06755536875277812 Loss (std): 0.20228348524046427 Loss ratio: 2.9943361863766844 Tokens per Sec: 2399.8399328115906
Epoch Step: 35 / 67 Loss (mean): 0.20406301740877097 Loss (std): 0.6225998120831177 Loss ratio: 3.051017376832914 Tokens per Sec: 3041.326692602373
Epoch Step: 40 / 67 Loss (mean): 0.11361936515550042 Loss (std): 0.31906699581839193 Loss ratio: 2.8082096338217886 Tokens per Sec: 2678.320066386429
Epoch Step: 45 / 67 Loss (mean): 0.21154210308907295 Loss (std): 0.7124560076504463 Loss ratio: 3.367915877013173 Tokens per Sec: 2586.6073634016248
Epoch Step: 50 / 67 Loss (mean): 0.7527689149910657 Loss (std): 1.6554453588093414 Loss ratio: 2.1991414972667798 Tokens per Sec: 3161.907254317675
Epoch Step: 55 / 67 Loss (mean): 0.4763439733387713 Loss (std): 0.8902527467971626 Loss ratio: 1.8689283304189581 Tokens per Sec: 3077.761841081103
Epoch Step: 60 / 67 Loss (mean): 0.12773067072726008 Loss (std): 0.5529814255116033 Loss ratio: 4.3292767693389 Tokens per Sec: 3326.545180096772
Epoch Step: 65 / 67 Loss (mean): 0.06451498980095494 Loss (std): 0.13447885531797846 Loss ratio: 2.0844590649844283 Tokens per Sec: 2546.682772316299
Mean loss per sample: 0.33608878440081075 Std loss per sample: 2.7878428891293687 ratio: 8.294959601522018
Epoch ended with duration 0:00:11.283748
Train perplexity: 1.0465224515289995
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the exception method_1 and clean up[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link to appear before scrolling[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.1853340268135 Loss (std): 46.29232015567878 Loss ratio: 0.4575002948886999 Tokens per Sec: 4238.3041724570385
Mean loss per sample: 110.77091557236358 Std loss per sample: 56.31800117848949 ratio: 0.508418666465734
Epoch ended with duration 0:00:01.047207
b'BLEU = 2.61, 8.4/2.8/1.7/1.4 (BP=0.957, ratio=0.958, hyp_len=2981, ref_len=3113)\n'
Validation perplexity: 3306640.0940550477
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.61
Model saved checkpoint_commit_msg_generator!
Epoch 951 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.16635236395768516 Loss (std): 0.6407758377909417 Loss ratio: 3.851919038276697 Tokens per Sec: 2164.5378819336383
Epoch Step: 10 / 67 Loss (mean): 0.044942833825189155 Loss (std): 0.0605960229327932 Loss ratio: 1.3482911017246735 Tokens per Sec: 3067.1964486222823
Epoch Step: 15 / 67 Loss (mean): 0.09623997071690837 Loss (std): 0.4358803624487596 Loss ratio: 4.52909907600564 Tokens per Sec: 2550.545689616716
Epoch Step: 20 / 67 Loss (mean): 0.28928638926390704 Loss (std): 0.7547322308120961 Loss ratio: 2.6089448339844883 Tokens per Sec: 2842.0693882083237
Epoch Step: 25 / 67 Loss (mean): 0.1783334985888132 Loss (std): 0.5640889467123233 Loss ratio: 3.163112657891345 Tokens per Sec: 2551.6053778668015
Epoch Step: 30 / 67 Loss (mean): 0.11689032452977699 Loss (std): 0.30614219546332705 Loss ratio: 2.619055056052475 Tokens per Sec: 3085.93377341554
Epoch Step: 35 / 67 Loss (mean): 0.48094903717992565 Loss (std): 0.7398911106154116 Loss ratio: 1.5383981532717244 Tokens per Sec: 3405.5499753704903
Epoch Step: 40 / 67 Loss (mean): 0.050844316683196666 Loss (std): 0.15763622650564008 Loss ratio: 3.100370637053652 Tokens per Sec: 2839.964725009462
Epoch Step: 45 / 67 Loss (mean): 0.048597961139876134 Loss (std): 0.15175781896029794 Loss ratio: 3.1227198713852204 Tokens per Sec: 2618.992707963397
Epoch Step: 50 / 67 Loss (mean): 0.18561740039694996 Loss (std): 0.5531278669688544 Loss ratio: 2.9799354251593284 Tokens per Sec: 2878.4642438347178
Epoch Step: 55 / 67 Loss (mean): 0.5003222459657763 Loss (std): 1.4314811523289415 Loss ratio: 2.8611183369744855 Tokens per Sec: 2861.2086900414374
Epoch Step: 60 / 67 Loss (mean): 0.13368571347461966 Loss (std): 0.47695624564444367 Loss ratio: 3.567742829416056 Tokens per Sec: 3202.275589518975
Epoch Step: 65 / 67 Loss (mean): 0.07469745941943984 Loss (std): 0.17573564446736312 Loss ratio: 2.35263214884693 Tokens per Sec: 2500.006359647877
Mean loss per sample: 0.4101552302441719 Std loss per sample: 2.943425233856934 ratio: 7.176368888687989
Epoch ended with duration 0:00:11.277869
Train perplexity: 1.0570625537243623
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print sshd to method_4 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.2806955575943 Loss (std): 46.13016898985776 Loss ratio: 0.46464389406998985 Tokens per Sec: 4456.680060358489
Mean loss per sample: 103.54893015453317 Std loss per sample: 54.39205058906845 ratio: 0.5252787306242127
Epoch ended with duration 0:00:01.005199
b'BLEU = 2.12, 8.6/2.6/1.5/1.1 (BP=0.866, ratio=0.874, hyp_len=2721, ref_len=3113)\n'
Validation perplexity: 1242622.6848494946
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.12
Epoch 952 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.13932655061046262 Loss (std): 0.47975134213161 Loss ratio: 3.443359072836929 Tokens per Sec: 2533.3885455267687
Epoch Step: 10 / 67 Loss (mean): 0.3585362917122552 Loss (std): 1.6689161601312505 Loss ratio: 4.654803986957745 Tokens per Sec: 2561.7106259397137
Epoch Step: 15 / 67 Loss (mean): 0.2163414338401708 Loss (std): 0.6006085467932447 Loss ratio: 2.776206740115089 Tokens per Sec: 3079.5164187214177
Epoch Step: 20 / 67 Loss (mean): 0.08248964844329976 Loss (std): 0.17835331180453884 Loss ratio: 2.1621296146889524 Tokens per Sec: 2731.413004311715
Epoch Step: 25 / 67 Loss (mean): 0.029806803207542372 Loss (std): 0.05625334151596226 Loss ratio: 1.8872651697759995 Tokens per Sec: 2283.558812116572
Epoch Step: 30 / 67 Loss (mean): 2.2189960204093495 Loss (std): 7.131877990919801 Loss ratio: 3.2140111678091907 Tokens per Sec: 2764.6415126284933
Epoch Step: 35 / 67 Loss (mean): 1.3646891462740314 Loss (std): 1.7753645290262379 Loss ratio: 1.3009296174689018 Tokens per Sec: 3624.361025503758
Epoch Step: 40 / 67 Loss (mean): 0.04801321311697393 Loss (std): 0.11788578416388132 Loss ratio: 2.4552779643528084 Tokens per Sec: 2649.5991756205112
Epoch Step: 45 / 67 Loss (mean): 0.2536438430047383 Loss (std): 0.6280046260820173 Loss ratio: 2.4759308905057305 Tokens per Sec: 2713.1396845001527
Epoch Step: 50 / 67 Loss (mean): 0.08952267082315757 Loss (std): 0.29417094898244617 Loss ratio: 3.2859938859906146 Tokens per Sec: 2655.5380146616158
Epoch Step: 55 / 67 Loss (mean): 0.09858640628476678 Loss (std): 0.4042553347020193 Loss ratio: 4.100518011928825 Tokens per Sec: 2904.722988638197
Epoch Step: 60 / 67 Loss (mean): 0.35050436067103874 Loss (std): 0.9103006112157243 Loss ratio: 2.5971163653226985 Tokens per Sec: 3432.703507568861
Epoch Step: 65 / 67 Loss (mean): 0.10559324978430595 Loss (std): 0.30465182521851664 Loss ratio: 2.885144891750422 Tokens per Sec: 2988.1746908666332
Mean loss per sample: 0.2948921376548346 Std loss per sample: 1.8971307706884109 ratio: 6.433304006595676
Epoch ended with duration 0:00:11.282133
Train perplexity: 1.0407054724190838
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link to appear[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.99003425240517 Loss (std): 45.83278225920353 Loss ratio: 0.4493849089782288 Tokens per Sec: 4350.067420420943
Mean loss per sample: 107.60173232428974 Std loss per sample: 54.45946018567777 ratio: 0.5061206637598364
Epoch ended with duration 0:00:01.017609
b'BLEU = 2.28, 8.1/2.5/1.5/1.1 (BP=0.952, ratio=0.953, hyp_len=2967, ref_len=3113)\n'
Validation perplexity: 2152115.9069986744
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.28
Epoch 953 / 1000
Epoch Step: 5 / 67 Loss (mean): 2.662645043615157 Loss (std): 7.901497788450714 Loss ratio: 2.9675370389297555 Tokens per Sec: 2695.952981831803
Epoch Step: 10 / 67 Loss (mean): 0.03430743845001416 Loss (std): 0.041174698097987183 Loss ratio: 1.20016824217228 Tokens per Sec: 2476.7265138740386
Epoch Step: 15 / 67 Loss (mean): 0.17051034076700944 Loss (std): 0.8503401485522836 Loss ratio: 4.987029787913065 Tokens per Sec: 3317.0239827024193
Epoch Step: 20 / 67 Loss (mean): 0.11978822263199618 Loss (std): 0.4661286903421097 Loss ratio: 3.8912731160066802 Tokens per Sec: 2577.174211199067
Epoch Step: 25 / 67 Loss (mean): 0.21413570153254113 Loss (std): 0.739444037255191 Loss ratio: 3.4531562554169484 Tokens per Sec: 3118.203778524556
Epoch Step: 30 / 67 Loss (mean): 0.145687753606353 Loss (std): 0.4368532489997867 Loss ratio: 2.998558479940327 Tokens per Sec: 3071.52883058256
Epoch Step: 35 / 67 Loss (mean): 0.21901746087451102 Loss (std): 0.7100295376457864 Loss ratio: 3.2418855319147695 Tokens per Sec: 2689.4585596588995
Epoch Step: 40 / 67 Loss (mean): 0.12050953876314452 Loss (std): 0.4555403970725005 Loss ratio: 3.7801189992755875 Tokens per Sec: 2791.2071756218465
Epoch Step: 45 / 67 Loss (mean): 0.5005921791475885 Loss (std): 1.0489098990702443 Loss ratio: 2.0953381670012 Tokens per Sec: 2657.7895176912216
Epoch Step: 50 / 67 Loss (mean): 0.16123539063755743 Loss (std): 0.6000060218030496 Loss ratio: 3.7213047298766364 Tokens per Sec: 2512.3767184563553
Epoch Step: 55 / 67 Loss (mean): 0.1450411260996134 Loss (std): 0.516728855428692 Loss ratio: 3.562636814290904 Tokens per Sec: 2715.441064232077
Epoch Step: 60 / 67 Loss (mean): 0.282648774827976 Loss (std): 0.7823935310033792 Loss ratio: 2.7680768525515624 Tokens per Sec: 2939.743140439951
Epoch Step: 65 / 67 Loss (mean): 0.13109006129070622 Loss (std): 0.3769119249694474 Loss ratio: 2.875213584145063 Tokens per Sec: 2776.136957104198
Mean loss per sample: 0.4796238121091327 Std loss per sample: 3.1871990497757516 ratio: 6.645206032953474
Epoch ended with duration 0:00:11.314603
Train perplexity: 1.0670448069956355
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the exception method_1 and sslengine[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link to appear[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.12461048364639 Loss (std): 45.55010741940357 Loss ratio: 0.4549341785139167 Tokens per Sec: 4331.5196408490865
Mean loss per sample: 106.25125513644126 Std loss per sample: 54.0394668349149 ratio: 0.5086007385561777
Epoch ended with duration 0:00:01.018206
b'BLEU = 2.66, 8.4/3.0/1.9/1.4 (BP=0.925, ratio=0.928, hyp_len=2889, ref_len=3113)\n'
Validation perplexity: 1792188.775893055
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.66
Epoch 954 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.10025838000456133 Loss (std): 0.24507297094378638 Loss ratio: 2.4444138328650094 Tokens per Sec: 2653.4065372714176
Epoch Step: 10 / 67 Loss (mean): 0.06470513301974279 Loss (std): 0.1681327080714226 Loss ratio: 2.5984446708443065 Tokens per Sec: 3101.797863446526
Epoch Step: 15 / 67 Loss (mean): 0.09165597801825243 Loss (std): 0.35194723121699845 Loss ratio: 3.8398720828325184 Tokens per Sec: 2360.5116453155797
Epoch Step: 20 / 67 Loss (mean): 0.39725808179809974 Loss (std): 1.3096704407776272 Loss ratio: 3.296774819154584 Tokens per Sec: 3545.2371511775236
Epoch Step: 25 / 67 Loss (mean): 0.3581650501250806 Loss (std): 0.9648281823204455 Loss ratio: 2.69380885148761 Tokens per Sec: 2876.2591498324177
Epoch Step: 30 / 67 Loss (mean): 0.1185608060263803 Loss (std): 0.3278938468163579 Loss ratio: 2.7656175578242954 Tokens per Sec: 3574.7684455622857
Epoch Step: 35 / 67 Loss (mean): 0.16023255179334228 Loss (std): 0.715131785492366 Loss ratio: 4.463086791594615 Tokens per Sec: 2535.456017386066
Epoch Step: 40 / 67 Loss (mean): 0.06942809441216014 Loss (std): 0.19125015209636023 Loss ratio: 2.75465074643995 Tokens per Sec: 2817.119839827006
Epoch Step: 45 / 67 Loss (mean): 0.13131694255753246 Loss (std): 0.3305286061976168 Loss ratio: 2.5170294080887996 Tokens per Sec: 2809.1300427021424
Epoch Step: 50 / 67 Loss (mean): 0.565578097307025 Loss (std): 0.9375394221615534 Loss ratio: 1.6576657169462639 Tokens per Sec: 2721.729827333258
Epoch Step: 55 / 67 Loss (mean): 0.09114230624959418 Loss (std): 0.29405278302855503 Loss ratio: 3.226303953986948 Tokens per Sec: 2805.014899243184
Epoch Step: 60 / 67 Loss (mean): 0.21463690163113824 Loss (std): 0.6702931266946582 Loss ratio: 3.1229165236767287 Tokens per Sec: 2783.0233451041136
Epoch Step: 65 / 67 Loss (mean): 0.13514896693163791 Loss (std): 0.45421662610863583 Loss ratio: 3.3608590314892393 Tokens per Sec: 2363.1293189844687
Mean loss per sample: 0.315718419970875 Std loss per sample: 2.478875258872116 ratio: 7.851538276103092
Epoch ended with duration 0:00:11.276612
Train perplexity: 1.0436420974002887
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the daemon to avoid print[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.80966383218765 Loss (std): 45.950798909257244 Loss ratio: 0.455817400460228 Tokens per Sec: 4332.6321369822435
Mean loss per sample: 106.5180115211816 Std loss per sample: 54.916519464208406 ratio: 0.5155608772633538
Epoch ended with duration 0:00:01.021250
b'BLEU = 2.70, 8.8/3.0/1.9/1.5 (BP=0.917, ratio=0.920, hyp_len=2864, ref_len=3113)\n'
Validation perplexity: 1858162.1742340736
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.7
Epoch 955 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.2108165235870274 Loss (std): 0.7748561266076717 Loss ratio: 3.6754999723150377 Tokens per Sec: 3076.959534360589
Epoch Step: 10 / 67 Loss (mean): 0.2591219933615321 Loss (std): 0.8247996293095573 Loss ratio: 3.1830552806792465 Tokens per Sec: 2654.571012796102
Epoch Step: 15 / 67 Loss (mean): 0.09872007457784093 Loss (std): 0.28776227937309345 Loss ratio: 2.9149317461889925 Tokens per Sec: 3237.649809984957
Epoch Step: 20 / 67 Loss (mean): 0.30635009218795517 Loss (std): 1.9640435344076943 Loss ratio: 6.411108024745406 Tokens per Sec: 2920.939145019796
Epoch Step: 25 / 67 Loss (mean): 0.37216941012411553 Loss (std): 0.8760116436812042 Loss ratio: 2.3537980818709987 Tokens per Sec: 2886.434383996186
Epoch Step: 30 / 67 Loss (mean): 0.06488824587222553 Loss (std): 0.18205859073612998 Loss ratio: 2.8057252633185685 Tokens per Sec: 2654.2678408579245
Epoch Step: 35 / 67 Loss (mean): 0.14236894145051338 Loss (std): 0.3664007867645928 Loss ratio: 2.5736005552303105 Tokens per Sec: 2615.9932886516863
Epoch Step: 40 / 67 Loss (mean): 0.14546377121769183 Loss (std): 0.5775258930499597 Loss ratio: 3.9702386939059293 Tokens per Sec: 2691.75699486834
Epoch Step: 45 / 67 Loss (mean): 0.06585520278645163 Loss (std): 0.23201923673855918 Loss ratio: 3.5231724589919935 Tokens per Sec: 2699.7600445474536
Epoch Step: 50 / 67 Loss (mean): 0.0517396790166913 Loss (std): 0.15048312298573333 Loss ratio: 2.908466497002953 Tokens per Sec: 2452.6402956236757
Epoch Step: 55 / 67 Loss (mean): 0.3837170806391441 Loss (std): 0.7381307940586034 Loss ratio: 1.923632882928028 Tokens per Sec: 2757.7109831170865
Epoch Step: 60 / 67 Loss (mean): 0.038319225570830895 Loss (std): 0.047354963131822005 Loss ratio: 1.2358016746525595 Tokens per Sec: 2986.663736754563
Epoch Step: 65 / 67 Loss (mean): 0.2704762065310433 Loss (std): 0.8025313495846655 Loss ratio: 2.9671051656536624 Tokens per Sec: 2937.5745218861202
Mean loss per sample: 0.23292379305264604 Std loss per sample: 1.070964483252774 ratio: 4.597917925073081
Epoch ended with duration 0:00:11.275233
Train perplexity: 1.0320163631649792
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the exception to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.68542325496674 Loss (std): 45.91329377323004 Loss ratio: 0.4515228663414886 Tokens per Sec: 4322.109782996144
Mean loss per sample: 107.47546108341852 Std loss per sample: 56.62025301181896 ratio: 0.5268202847519993
Epoch ended with duration 0:00:01.022139
b'BLEU = 2.92, 9.2/3.1/2.1/1.7 (BP=0.928, ratio=0.930, hyp_len=2896, ref_len=3113)\n'
Validation perplexity: 2115602.170393921
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.92
Model saved checkpoint_commit_msg_generator!
Epoch 956 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.13747456769738164 Loss (std): 0.4122275883437693 Loss ratio: 2.9985734470625336 Tokens per Sec: 2899.103579360157
Epoch Step: 10 / 67 Loss (mean): 0.05565732073193885 Loss (std): 0.11723070011576843 Loss ratio: 2.1062943485976287 Tokens per Sec: 2787.190400155268
Epoch Step: 15 / 67 Loss (mean): 0.1816106020287407 Loss (std): 0.5123874576730555 Loss ratio: 2.8213521234402816 Tokens per Sec: 2489.8948939252286
Epoch Step: 20 / 67 Loss (mean): 0.07037021167025159 Loss (std): 0.1494687556695801 Loss ratio: 2.124034475979369 Tokens per Sec: 2900.484932129017
Epoch Step: 25 / 67 Loss (mean): 0.05618066619751971 Loss (std): 0.1407006091846623 Loss ratio: 2.5044311274271434 Tokens per Sec: 2744.3984634695926
Epoch Step: 30 / 67 Loss (mean): 0.10518498608416849 Loss (std): 0.28648434043317467 Loss ratio: 2.723623884913873 Tokens per Sec: 2730.2991839640003
Epoch Step: 35 / 67 Loss (mean): 0.9770766440769876 Loss (std): 5.954878388509707 Loss ratio: 6.09458677024778 Tokens per Sec: 2618.6580339704756
Epoch Step: 40 / 67 Loss (mean): 0.12586736219418526 Loss (std): 0.3299916614578869 Loss ratio: 2.6217412973887813 Tokens per Sec: 2784.341531565002
Epoch Step: 45 / 67 Loss (mean): 3.120778196810761 Loss (std): 10.050966877969726 Loss ratio: 3.22066043919468 Tokens per Sec: 3046.1638507346524
Epoch Step: 50 / 67 Loss (mean): 0.04065671766352352 Loss (std): 0.06887251337306355 Loss ratio: 1.6940008276874434 Tokens per Sec: 2741.3477272866276
Epoch Step: 55 / 67 Loss (mean): 0.2231100612807495 Loss (std): 0.482130621985224 Loss ratio: 2.160954191028334 Tokens per Sec: 2764.8273537618957
Epoch Step: 60 / 67 Loss (mean): 0.2781947369358022 Loss (std): 0.9687909129019247 Loss ratio: 3.482419989582651 Tokens per Sec: 2286.540365792762
Epoch Step: 65 / 67 Loss (mean): 4.755705236007998 Loss (std): 15.551796074114716 Loss ratio: 3.2701345651878753 Tokens per Sec: 3206.3790589068703
Mean loss per sample: 0.5704924424976378 Std loss per sample: 4.271656351406756 ratio: 7.487665099830738
Epoch ended with duration 0:00:11.372601
Train perplexity: 1.080244565056926
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the exception into new exception[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.4593386054039 Loss (std): 44.354751725737465 Loss ratio: 0.4459586434785275 Tokens per Sec: 4428.237481440952
Mean loss per sample: 102.66455745845117 Std loss per sample: 52.90748049970996 ratio: 0.5153431896019409
Epoch ended with duration 0:00:01.008724
b'BLEU = 2.27, 8.1/2.4/1.5/1.1 (BP=0.946, ratio=0.947, hyp_len=2949, ref_len=3113)\n'
Validation perplexity: 1102274.6115883405
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.27
Epoch 957 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.15774579956541857 Loss (std): 0.37724970494721677 Loss ratio: 2.3915039638869624 Tokens per Sec: 2986.124303634995
Epoch Step: 10 / 67 Loss (mean): 0.308893517022625 Loss (std): 0.7564717825700157 Loss ratio: 2.4489726746664213 Tokens per Sec: 2617.639515314093
Epoch Step: 15 / 67 Loss (mean): 0.12359284135072812 Loss (std): 0.382724692082898 Loss ratio: 3.0966574431023326 Tokens per Sec: 2657.337007151685
Epoch Step: 20 / 67 Loss (mean): 0.831098765188699 Loss (std): 3.9762174091039992 Loss ratio: 4.7842898770294875 Tokens per Sec: 2598.6894778909887
Epoch Step: 25 / 67 Loss (mean): 0.03440679167943017 Loss (std): 0.0435627337630287 Loss ratio: 1.266108568590321 Tokens per Sec: 2773.644622330996
Epoch Step: 30 / 67 Loss (mean): 0.10670755706814816 Loss (std): 0.24252445416216625 Loss ratio: 2.272795487270685 Tokens per Sec: 2804.306155627063
Epoch Step: 35 / 67 Loss (mean): 0.09436462346639019 Loss (std): 0.1892340663350867 Loss ratio: 2.0053496679556626 Tokens per Sec: 2705.433776429026
Epoch Step: 40 / 67 Loss (mean): 0.0658639943894741 Loss (std): 0.1658218790749481 Loss ratio: 2.5176407931531184 Tokens per Sec: 2233.340072868869
Epoch Step: 45 / 67 Loss (mean): 0.41539416035266186 Loss (std): 0.9109692078892527 Loss ratio: 2.1930236263212195 Tokens per Sec: 3050.991672748548
Epoch Step: 50 / 67 Loss (mean): 0.3090986174211139 Loss (std): 0.7594160789694335 Loss ratio: 2.4568731018774184 Tokens per Sec: 3249.8601703592385
Epoch Step: 55 / 67 Loss (mean): 1.1057109446687718 Loss (std): 1.5864855714684416 Loss ratio: 1.4348104078355588 Tokens per Sec: 2854.630549901944
Epoch Step: 60 / 67 Loss (mean): 0.15683054687247022 Loss (std): 0.3727586639577947 Loss ratio: 2.3768243584644937 Tokens per Sec: 3305.0525825206037
Epoch Step: 65 / 67 Loss (mean): 0.19737347380305437 Loss (std): 0.4747677684495952 Loss ratio: 2.405428446394645 Tokens per Sec: 2789.6096068135816
Mean loss per sample: 0.2988401643659442 Std loss per sample: 1.941266288215378 ratio: 6.496001942490581
Epoch ended with duration 0:00:11.284327
Train perplexity: 1.0412615313225568
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the print use[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.88721311092377 Loss (std): 44.713579876265555 Loss ratio: 0.4388536943059405 Tokens per Sec: 4415.963130467027
Mean loss per sample: 104.19658190918872 Std loss per sample: 53.14714216205078 ratio: 0.5100660807508113
Epoch ended with duration 0:00:01.006404
b'BLEU = 2.55, 8.4/2.7/1.8/1.3 (BP=0.952, ratio=0.953, hyp_len=2968, ref_len=3113)\n'
Validation perplexity: 1356615.00163691
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.55
Epoch 958 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.09686756309702105 Loss (std): 0.44504099413196097 Loss ratio: 4.5943242495551875 Tokens per Sec: 2467.4254277150244
Epoch Step: 10 / 67 Loss (mean): 0.8372316848876835 Loss (std): 2.8688205555329414 Loss ratio: 3.426555166647569 Tokens per Sec: 2808.1956978729613
Epoch Step: 15 / 67 Loss (mean): 0.13528831133024255 Loss (std): 0.43810250367438996 Loss ratio: 3.2382879153910755 Tokens per Sec: 2833.861054262323
Epoch Step: 20 / 67 Loss (mean): 0.16922656884526077 Loss (std): 1.0730608199900633 Loss ratio: 6.3409713221288575 Tokens per Sec: 2860.833996878811
Epoch Step: 25 / 67 Loss (mean): 0.04841897773462733 Loss (std): 0.11127854760049825 Loss ratio: 2.2982424001264334 Tokens per Sec: 2693.2781678247766
Epoch Step: 30 / 67 Loss (mean): 0.09850451364764012 Loss (std): 0.19889971267006254 Loss ratio: 2.0191938958406053 Tokens per Sec: 3371.7493506553483
Epoch Step: 35 / 67 Loss (mean): 0.13141083612606508 Loss (std): 0.3889447010434978 Loss ratio: 2.9597612534051247 Tokens per Sec: 2678.9759986343265
Epoch Step: 40 / 67 Loss (mean): 0.13816319506986474 Loss (std): 0.4752519960433549 Loss ratio: 3.4397872443745605 Tokens per Sec: 2879.004781948695
Epoch Step: 45 / 67 Loss (mean): 0.29575611977452354 Loss (std): 0.8559255024415898 Loss ratio: 2.89402465482075 Tokens per Sec: 2321.933749550718
Epoch Step: 50 / 67 Loss (mean): 0.15615864749111097 Loss (std): 0.542359055747202 Loss ratio: 3.473128542420776 Tokens per Sec: 3348.602524406012
Epoch Step: 55 / 67 Loss (mean): 0.07179809530452985 Loss (std): 0.18125097733707987 Loss ratio: 2.5244538391764895 Tokens per Sec: 2742.5564413089555
Epoch Step: 60 / 67 Loss (mean): 0.19061460207194614 Loss (std): 0.44281972724514784 Loss ratio: 2.323115450924419 Tokens per Sec: 3134.730780115853
Epoch Step: 65 / 67 Loss (mean): 0.1163230159700106 Loss (std): 0.32882071546565744 Loss ratio: 2.8267898035796386 Tokens per Sec: 2556.8618277855053
Mean loss per sample: 0.39864805047579627 Std loss per sample: 3.197004674902995 ratio: 8.01961698066074
Epoch ended with duration 0:00:11.328744
Train perplexity: 1.055418074353507
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a unit testing parameters[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 102.53902930021286 Loss (std): 45.458287630847714 Loss ratio: 0.4433266819579045 Tokens per Sec: 4442.591793692519
Mean loss per sample: 105.83037675788901 Std loss per sample: 54.698196969075006 ratio: 0.5168477959235611
Epoch ended with duration 0:00:01.018645
b'BLEU = 2.53, 8.3/2.7/1.7/1.3 (BP=0.950, ratio=0.951, hyp_len=2960, ref_len=3113)\n'
Validation perplexity: 1692828.9997331414
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.53
Epoch 959 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.37356777106288064 Loss (std): 0.8061037198286033 Loss ratio: 2.1578513519382705 Tokens per Sec: 2824.122964394648
Epoch Step: 10 / 67 Loss (mean): 0.5166611836839934 Loss (std): 3.6328540211835634 Loss ratio: 7.0314049824295175 Tokens per Sec: 2713.966175257817
Epoch Step: 15 / 67 Loss (mean): 0.24049400439207602 Loss (std): 0.5725457197274132 Loss ratio: 2.380706833730437 Tokens per Sec: 3082.576046061062
Epoch Step: 20 / 67 Loss (mean): 0.08120183204709974 Loss (std): 0.24663585456779635 Loss ratio: 3.0373188430618097 Tokens per Sec: 2767.7440177393805
Epoch Step: 25 / 67 Loss (mean): 0.15850460631236274 Loss (std): 0.6466279559178381 Loss ratio: 4.079553086574265 Tokens per Sec: 3581.0288013728195
Epoch Step: 30 / 67 Loss (mean): 0.11305312799072453 Loss (std): 0.2758693248453335 Loss ratio: 2.4401741884396797 Tokens per Sec: 2495.819573941205
Epoch Step: 35 / 67 Loss (mean): 0.02974132121448747 Loss (std): 0.045310795867834326 Loss ratio: 1.5234964022298618 Tokens per Sec: 2660.72526395961
Epoch Step: 40 / 67 Loss (mean): 0.11503847774838505 Loss (std): 0.37522283022755243 Loss ratio: 3.261715884734227 Tokens per Sec: 3263.248586365646
Epoch Step: 45 / 67 Loss (mean): 0.1232863623583853 Loss (std): 0.3939483247214927 Loss ratio: 3.1953925575021103 Tokens per Sec: 2829.4627003667315
Epoch Step: 50 / 67 Loss (mean): 0.14705343131777227 Loss (std): 0.49438296152186884 Loss ratio: 3.3619274102726755 Tokens per Sec: 2629.7970935463054
Epoch Step: 55 / 67 Loss (mean): 0.18852960513595463 Loss (std): 0.6529671926659149 Loss ratio: 3.463472976538829 Tokens per Sec: 2518.6765805276295
Epoch Step: 60 / 67 Loss (mean): 0.08709695764514436 Loss (std): 0.43971925157143943 Loss ratio: 5.048617810084365 Tokens per Sec: 2289.954605960388
Epoch Step: 65 / 67 Loss (mean): 0.22379048852576489 Loss (std): 0.5074222178683687 Loss ratio: 2.267398499422595 Tokens per Sec: 3164.642257211707
Mean loss per sample: 0.24944306911783004 Std loss per sample: 1.3520245400823718 ratio: 5.420172806820752
Epoch ended with duration 0:00:11.253508
Train perplexity: 1.0343255544021044
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: use method_4 instead of sslengine[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 102.32658714056015 Loss (std): 45.54376721855189 Loss ratio: 0.445082441340402 Tokens per Sec: 4454.025015060596
Mean loss per sample: 105.30084150290635 Std loss per sample: 55.14740344708598 ratio: 0.5237128465451426
Epoch ended with duration 0:00:01.002554
b'BLEU = 2.76, 8.6/3.0/2.0/1.7 (BP=0.905, ratio=0.909, hyp_len=2830, ref_len=3113)\n'
Validation perplexity: 1575605.4038771964
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.76
Epoch 960 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1617932371018469 Loss (std): 0.3622706958457508 Loss ratio: 2.23909665406908 Tokens per Sec: 2366.662495564982
Epoch Step: 10 / 67 Loss (mean): 0.10042016555030386 Loss (std): 0.1958327402218194 Loss ratio: 1.9501336125931812 Tokens per Sec: 2997.7459815008215
Epoch Step: 15 / 67 Loss (mean): 0.15133577408596466 Loss (std): 0.45586665406183785 Loss ratio: 3.012286135351498 Tokens per Sec: 2665.2731265396687
Epoch Step: 20 / 67 Loss (mean): 0.08999343409584526 Loss (std): 0.24441546805673378 Loss ratio: 2.71592556181849 Tokens per Sec: 3147.760734707011
Epoch Step: 25 / 67 Loss (mean): 0.47474139366789814 Loss (std): 3.306281292094077 Loss ratio: 6.964383843905893 Tokens per Sec: 2332.115070066968
Epoch Step: 30 / 67 Loss (mean): 0.10254212683412334 Loss (std): 0.4667868096456908 Loss ratio: 4.552146752337073 Tokens per Sec: 2664.5985567112325
Epoch Step: 35 / 67 Loss (mean): 0.18251430952204828 Loss (std): 0.44022126981313664 Loss ratio: 2.4119822219197373 Tokens per Sec: 3147.2493230525015
Epoch Step: 40 / 67 Loss (mean): 0.09409848515872454 Loss (std): 0.2830510468270812 Loss ratio: 3.0080297929305986 Tokens per Sec: 3189.3114565806445
Epoch Step: 45 / 67 Loss (mean): 1.972744185386091 Loss (std): 8.080197704275582 Loss ratio: 4.095917638046002 Tokens per Sec: 2852.760434412869
Epoch Step: 50 / 67 Loss (mean): 0.028488273966104316 Loss (std): 0.044157823390799655 Loss ratio: 1.5500350580501703 Tokens per Sec: 3262.5413254738964
Epoch Step: 55 / 67 Loss (mean): 0.3008853714277393 Loss (std): 0.849488452421025 Loss ratio: 2.8232959561646163 Tokens per Sec: 2994.7953831731825
Epoch Step: 60 / 67 Loss (mean): 0.19658441261026383 Loss (std): 0.5448824674216306 Loss ratio: 2.771748075987495 Tokens per Sec: 2656.140951264031
Epoch Step: 65 / 67 Loss (mean): 0.1122832386203072 Loss (std): 0.29903808162590984 Loss ratio: 2.6632477411622033 Tokens per Sec: 2753.487679074179
Mean loss per sample: 0.3146689319342743 Std loss per sample: 2.7773854561006055 ratio: 8.826373290264083
Epoch ended with duration 0:00:11.300551
Train perplexity: 1.0434939155108653
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.36879217624664 Loss (std): 44.818737555826445 Loss ratio: 0.44654056887648075 Tokens per Sec: 4295.770642934624
Mean loss per sample: 105.615876342002 Std loss per sample: 54.240623162529175 ratio: 0.5135650532964278
Epoch ended with duration 0:00:01.024176
b'BLEU = 2.60, 8.4/2.8/1.8/1.5 (BP=0.922, ratio=0.925, hyp_len=2880, ref_len=3113)\n'
Validation perplexity: 1644329.077403009
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.6
Model saved checkpoint_commit_msg_generator!
Epoch 961 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.11656898468532972 Loss (std): 0.35410385534325917 Loss ratio: 3.037719306719014 Tokens per Sec: 2700.992308235281
Epoch Step: 10 / 67 Loss (mean): 0.5124431564481711 Loss (std): 1.196688149195509 Loss ratio: 2.3352602803595897 Tokens per Sec: 2902.077383869802
Epoch Step: 15 / 67 Loss (mean): 0.12647532205664902 Loss (std): 0.48470370601925744 Loss ratio: 3.8323974838518766 Tokens per Sec: 2436.578902565271
Epoch Step: 20 / 67 Loss (mean): 0.9325118010383449 Loss (std): 1.1964808652338794 Loss ratio: 1.2830731620786 Tokens per Sec: 2721.858220563678
Epoch Step: 25 / 67 Loss (mean): 0.12016561040945817 Loss (std): 0.33699355789093416 Loss ratio: 2.8044093209583494 Tokens per Sec: 2335.8549991679997
Epoch Step: 30 / 67 Loss (mean): 0.0972747392115707 Loss (std): 0.19089592556904342 Loss ratio: 1.9624408876989987 Tokens per Sec: 2882.6986332044926
Epoch Step: 35 / 67 Loss (mean): 0.13918427276621514 Loss (std): 0.43343548857396824 Loss ratio: 3.114112535559248 Tokens per Sec: 3238.5024566992192
Epoch Step: 40 / 67 Loss (mean): 1.58247629226571 Loss (std): 8.631743066017687 Loss ratio: 5.454579704103618 Tokens per Sec: 3419.325429096434
Epoch Step: 45 / 67 Loss (mean): 0.15036807857336498 Loss (std): 0.36140332342537834 Loss ratio: 2.403457747510212 Tokens per Sec: 2930.251145171714
Epoch Step: 50 / 67 Loss (mean): 0.3741912030009189 Loss (std): 1.2986749344633481 Loss ratio: 3.470618560907641 Tokens per Sec: 2506.1804788399822
Epoch Step: 55 / 67 Loss (mean): 0.12318728415004898 Loss (std): 0.3244869429248861 Loss ratio: 2.6340944616462436 Tokens per Sec: 2330.0160714767935
Epoch Step: 60 / 67 Loss (mean): 0.14387413350141287 Loss (std): 0.4163975693523891 Loss ratio: 2.8941795110675677 Tokens per Sec: 3386.96290085708
Epoch Step: 65 / 67 Loss (mean): 0.06955095525427168 Loss (std): 0.18574451085276453 Loss ratio: 2.6706248702652644 Tokens per Sec: 2702.750109053935
Mean loss per sample: 0.36691636313707654 Std loss per sample: 2.623673624764884 ratio: 7.150604029574729
Epoch ended with duration 0:00:11.343728
Train perplexity: 1.050896573345974
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.24692115187645 Loss (std): 44.60514378635796 Loss ratio: 0.44495275539465307 Tokens per Sec: 4342.594969432057
Mean loss per sample: 108.24997655259537 Std loss per sample: 53.5392821818298 ratio: 0.4945893189715075
Epoch ended with duration 0:00:01.032899
b'BLEU = 2.70, 8.8/3.1/1.9/1.5 (BP=0.909, ratio=0.913, hyp_len=2842, ref_len=3113)\n'
Validation perplexity: 2349729.4763068273
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.7
Epoch 962 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3071976375531449 Loss (std): 0.6843989606515288 Loss ratio: 2.2278783329937832 Tokens per Sec: 2827.4101315885455
Epoch Step: 10 / 67 Loss (mean): 0.2707767068168323 Loss (std): 0.7131342775558182 Loss ratio: 2.6336618313266507 Tokens per Sec: 2729.931693280416
Epoch Step: 15 / 67 Loss (mean): 0.10689195692202702 Loss (std): 0.39937378532089146 Loss ratio: 3.7362379436295385 Tokens per Sec: 2999.8932339215294
Epoch Step: 20 / 67 Loss (mean): 0.16046613937487564 Loss (std): 0.44815318995435477 Loss ratio: 2.792820913497484 Tokens per Sec: 2842.5046129350294
Epoch Step: 25 / 67 Loss (mean): 0.5959640964574646 Loss (std): 4.490155016726832 Loss ratio: 7.534271012997685 Tokens per Sec: 3024.0620848418407
Epoch Step: 30 / 67 Loss (mean): 0.18150933996548702 Loss (std): 0.4582023406672503 Loss ratio: 2.5244008972451497 Tokens per Sec: 2339.6859390981804
Epoch Step: 35 / 67 Loss (mean): 0.04350998097288539 Loss (std): 0.07089404532061239 Loss ratio: 1.6293743121789053 Tokens per Sec: 3087.6330355207647
Epoch Step: 40 / 67 Loss (mean): 0.058822444538236596 Loss (std): 0.14013853486217578 Loss ratio: 2.3823990308849026 Tokens per Sec: 3032.145494923096
Epoch Step: 45 / 67 Loss (mean): 0.2661168655013171 Loss (std): 0.5785524470399935 Loss ratio: 2.17405404182145 Tokens per Sec: 2989.8652252441366
Epoch Step: 50 / 67 Loss (mean): 0.04657263210538076 Loss (std): 0.14312843287202234 Loss ratio: 3.07323048755679 Tokens per Sec: 2322.2232727212336
Epoch Step: 55 / 67 Loss (mean): 0.506995597104833 Loss (std): 1.2127074520623298 Loss ratio: 2.3919486855259113 Tokens per Sec: 2776.605431530103
Epoch Step: 60 / 67 Loss (mean): 0.18015519372102062 Loss (std): 0.5099984754290633 Loss ratio: 2.8308841110560574 Tokens per Sec: 2753.555067148579
Epoch Step: 65 / 67 Loss (mean): 0.2388056085746939 Loss (std): 0.6167434584888012 Loss ratio: 2.5826171427456046 Tokens per Sec: 3092.407418820279
Mean loss per sample: 0.29324977509567324 Std loss per sample: 2.224039818394919 ratio: 7.584114319164685
Epoch ended with duration 0:00:11.267051
Train perplexity: 1.0404742417143247
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print warnings[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.93862220644951 Loss (std): 46.27030261673815 Loss ratio: 0.4539035511293255 Tokens per Sec: 4337.292814301936
Mean loss per sample: 107.57894440160179 Std loss per sample: 54.493679991589076 ratio: 0.5065459630107478
Epoch ended with duration 0:00:01.017423
b'BLEU = 2.95, 9.4/3.1/2.1/1.7 (BP=0.927, ratio=0.930, hyp_len=2895, ref_len=3113)\n'
Validation perplexity: 2145480.055170127
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.95
Model saved best_on_validation_commit_msg_generator!
Epoch 963 / 1000
Epoch Step: 5 / 67 Loss (mean): 1.0632180562538451 Loss (std): 1.4331813639560809 Loss ratio: 1.3479655988967765 Tokens per Sec: 3728.9987352201624
Epoch Step: 10 / 67 Loss (mean): 0.37981712761711606 Loss (std): 0.8039309422299533 Loss ratio: 2.11662635456602 Tokens per Sec: 2687.378317037948
Epoch Step: 15 / 67 Loss (mean): 2.335613775612728 Loss (std): 9.587907114101661 Loss ratio: 4.105091010428878 Tokens per Sec: 2446.1269014182344
Epoch Step: 20 / 67 Loss (mean): 3.963235223391166 Loss (std): 12.735027270027835 Loss ratio: 3.2132907970905227 Tokens per Sec: 2270.81093350421
Epoch Step: 25 / 67 Loss (mean): 0.8022995996443569 Loss (std): 1.7796654939361154 Loss ratio: 2.218205636304698 Tokens per Sec: 2749.37267512863
Epoch Step: 30 / 67 Loss (mean): 0.22732816226562136 Loss (std): 0.48879601249374016 Loss ratio: 2.15017799652384 Tokens per Sec: 3152.7580819704563
Epoch Step: 35 / 67 Loss (mean): 0.5079697385340296 Loss (std): 1.0391446958922004 Loss ratio: 2.0456822858997663 Tokens per Sec: 3098.1572722018877
Epoch Step: 40 / 67 Loss (mean): 0.24858073115956358 Loss (std): 0.6618987976783811 Loss ratio: 2.6627116051626274 Tokens per Sec: 3382.076213755877
Epoch Step: 45 / 67 Loss (mean): 0.4320118387649927 Loss (std): 1.1401125820681641 Loss ratio: 2.6390771728095315 Tokens per Sec: 2903.4000485581832
Epoch Step: 50 / 67 Loss (mean): 3.998890255963488 Loss (std): 11.735394047078367 Loss ratio: 2.9346626928752397 Tokens per Sec: 3141.696713151228
Epoch Step: 55 / 67 Loss (mean): 0.5053770068479935 Loss (std): 1.4762662503515929 Loss ratio: 2.9211187496617192 Tokens per Sec: 2496.905517592567
Epoch Step: 60 / 67 Loss (mean): 0.39931499942895243 Loss (std): 0.772749671752587 Loss ratio: 1.9351881919228466 Tokens per Sec: 2301.072927343259
Epoch Step: 65 / 67 Loss (mean): 0.3496306556762647 Loss (std): 0.6460005955177562 Loss ratio: 1.84766577252285 Tokens per Sec: 2522.722981520911
Mean loss per sample: 0.8174198338420553 Std loss per sample: 4.507477680336323 ratio: 5.5142749095653505
Epoch ended with duration 0:00:11.348403
Train perplexity: 1.1169443190556527
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: use method_1 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add support for developer options provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.94339206814766 Loss (std): 45.13326361096429 Loss ratio: 0.45158827089028164 Tokens per Sec: 4347.558631803617
Mean loss per sample: 105.76617228471842 Std loss per sample: 54.01197639149476 ratio: 0.5106734528134064
Epoch ended with duration 0:00:01.015464
b'BLEU = 1.98, 8.1/2.3/1.3/0.9 (BP=0.926, ratio=0.929, hyp_len=2892, ref_len=3113)\n'
Validation perplexity: 1678163.8304443692
Validation accuracy: 0.0
Validation BLEU: 1.98
Epoch 964 / 1000
Epoch Step: 5 / 67 Loss (mean): 6.479981313920689 Loss (std): 18.1795771033266 Loss ratio: 2.8054983838104794 Tokens per Sec: 2515.740573216019
Epoch Step: 10 / 67 Loss (mean): 0.19158184901152708 Loss (std): 0.7897152037373247 Loss ratio: 4.122077366994246 Tokens per Sec: 2573.5128036026204
Epoch Step: 15 / 67 Loss (mean): 0.3586678440296964 Loss (std): 0.671218735074057 Loss ratio: 1.87142155687222 Tokens per Sec: 3639.102819613557
Epoch Step: 20 / 67 Loss (mean): 0.20852796987855982 Loss (std): 0.6523821001790864 Loss ratio: 3.128511252274759 Tokens per Sec: 2575.9287629415726
Epoch Step: 25 / 67 Loss (mean): 0.3868054522135935 Loss (std): 0.7002681670782488 Loss ratio: 1.8103885637360704 Tokens per Sec: 2795.0457171055846
Epoch Step: 30 / 67 Loss (mean): 0.12867501837172313 Loss (std): 0.3265579178662418 Loss ratio: 2.5378501747935576 Tokens per Sec: 2218.5787670779814
Epoch Step: 35 / 67 Loss (mean): 0.2585598240602849 Loss (std): 0.5959225404220727 Loss ratio: 2.3047762450640032 Tokens per Sec: 2641.7351709683753
Epoch Step: 40 / 67 Loss (mean): 0.1727785343209689 Loss (std): 0.4325735119399065 Loss ratio: 2.503629942457546 Tokens per Sec: 3438.535285837427
Epoch Step: 45 / 67 Loss (mean): 0.14369044515410678 Loss (std): 0.2984460127135723 Loss ratio: 2.077006668004205 Tokens per Sec: 2694.0243559048354
Epoch Step: 50 / 67 Loss (mean): 0.1990744752347382 Loss (std): 0.4894638635877313 Loss ratio: 2.4586972438861445 Tokens per Sec: 2965.9398534389306
Epoch Step: 55 / 67 Loss (mean): 2.16078795730391 Loss (std): 7.963817420493934 Loss ratio: 3.6856080179337285 Tokens per Sec: 2792.364620882501
Epoch Step: 60 / 67 Loss (mean): 0.16375557956416742 Loss (std): 0.3208344816677324 Loss ratio: 1.959227786446286 Tokens per Sec: 3012.7479842222247
Epoch Step: 65 / 67 Loss (mean): 0.8827080412484065 Loss (std): 1.4218217445288046 Loss ratio: 1.6107497361391816 Tokens per Sec: 3302.243005485265
Mean loss per sample: 0.6359981829708751 Std loss per sample: 4.045192327308077 ratio: 6.360383465896352
Epoch ended with duration 0:00:11.268210
Train perplexity: 1.0898612260824865
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow call stack[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 118.33620142936707 Loss (std): 47.49719701420413 Loss ratio: 0.40137503520048706 Tokens per Sec: 4343.409515332429
Mean loss per sample: 104.40841291704383 Std loss per sample: 53.70405621162482 ratio: 0.5143652193458259
Epoch ended with duration 0:00:01.016739
b'BLEU = 2.37, 8.4/2.9/1.7/1.3 (BP=0.889, ratio=0.894, hyp_len=2784, ref_len=3113)\n'
Validation perplexity: 1396123.5782803397
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.37
Epoch 965 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1843820705203143 Loss (std): 0.481403968573238 Loss ratio: 2.6109044508218564 Tokens per Sec: 2871.2073289604327
Epoch Step: 10 / 67 Loss (mean): 0.14134231847856427 Loss (std): 0.3279133332450733 Loss ratio: 2.3199940171832125 Tokens per Sec: 3047.2401553958052
Epoch Step: 15 / 67 Loss (mean): 0.1566750088804838 Loss (std): 0.5208162599756894 Loss ratio: 3.324182099603281 Tokens per Sec: 2573.28880607179
Epoch Step: 20 / 67 Loss (mean): 0.1564010316092208 Loss (std): 0.6184716741307072 Loss ratio: 3.954396385798804 Tokens per Sec: 2642.573294486982
Epoch Step: 25 / 67 Loss (mean): 0.30542609827261913 Loss (std): 0.9995716032092828 Loss ratio: 3.2727118241122897 Tokens per Sec: 2912.5015617401014
Epoch Step: 30 / 67 Loss (mean): 2.7484181514637385 Loss (std): 10.941914887234253 Loss ratio: 3.9811681790148503 Tokens per Sec: 2800.2419644249153
Epoch Step: 35 / 67 Loss (mean): 0.153143811658083 Loss (std): 0.5069648152511299 Loss ratio: 3.310383944099592 Tokens per Sec: 2627.5001321003965
Epoch Step: 40 / 67 Loss (mean): 0.24023232388026372 Loss (std): 0.4842718982631787 Loss ratio: 2.0158482024448503 Tokens per Sec: 2813.68919721883
Epoch Step: 45 / 67 Loss (mean): 0.13361053548578639 Loss (std): 0.3809985478727264 Loss ratio: 2.8515606683820036 Tokens per Sec: 2767.026305512223
Epoch Step: 50 / 67 Loss (mean): 0.1655461176483186 Loss (std): 0.3673990239006433 Loss ratio: 2.219315252569892 Tokens per Sec: 2851.80280047232
Epoch Step: 55 / 67 Loss (mean): 0.2845970894863967 Loss (std): 0.563912195816391 Loss ratio: 1.9814404877929894 Tokens per Sec: 3064.8019818528983
Epoch Step: 60 / 67 Loss (mean): 0.23761887376986124 Loss (std): 0.5482987164308148 Loss ratio: 2.307471236320451 Tokens per Sec: 2873.6635824485443
Epoch Step: 65 / 67 Loss (mean): 0.11758611903655947 Loss (std): 0.3352744013701968 Loss ratio: 2.851309356217076 Tokens per Sec: 2938.4241949012285
Mean loss per sample: 0.5224567971393457 Std loss per sample: 3.855878761503516 ratio: 7.380282508747045
Epoch ended with duration 0:00:11.276486
Train perplexity: 1.0732465950114638
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow call log[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for method_1[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.97713053226471 Loss (std): 45.98578887041622 Loss ratio: 0.4554079584953408 Tokens per Sec: 4329.298235288008
Mean loss per sample: 105.74749146108745 Std loss per sample: 53.924131775809514 ratio: 0.5099329641843307
Epoch ended with duration 0:00:01.019434
b'BLEU = 2.46, 8.5/2.7/1.7/1.3 (BP=0.921, ratio=0.924, hyp_len=2877, ref_len=3113)\n'
Validation perplexity: 1673920.7871189862
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.46
Model saved checkpoint_commit_msg_generator!
Epoch 966 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5803377343768261 Loss (std): 4.12086513596516 Loss ratio: 7.100805086180027 Tokens per Sec: 2956.923982276298
Epoch Step: 10 / 67 Loss (mean): 0.08273011836263322 Loss (std): 0.22188861336283167 Loss ratio: 2.682077794089707 Tokens per Sec: 2820.8206642929986
Epoch Step: 15 / 67 Loss (mean): 0.12499468558644367 Loss (std): 0.382189777978059 Loss ratio: 3.057648220681708 Tokens per Sec: 2323.3629258404053
Epoch Step: 20 / 67 Loss (mean): 0.0587361045995749 Loss (std): 0.08716125828440337 Loss ratio: 1.4839468650264251 Tokens per Sec: 2960.9354551866895
Epoch Step: 25 / 67 Loss (mean): 0.2397537617960097 Loss (std): 0.6173243372358334 Loss ratio: 2.574826491194215 Tokens per Sec: 2880.770775717997
Epoch Step: 30 / 67 Loss (mean): 3.4989639891509796 Loss (std): 8.377962526513967 Loss ratio: 2.3944123324764117 Tokens per Sec: 2310.653206294632
Epoch Step: 35 / 67 Loss (mean): 0.16585724059450513 Loss (std): 0.4968535240514132 Loss ratio: 2.9956697836674007 Tokens per Sec: 3318.3478238155194
Epoch Step: 40 / 67 Loss (mean): 0.13998154515797978 Loss (std): 0.664883640498165 Loss ratio: 4.74979498010108 Tokens per Sec: 2695.3408743430355
Epoch Step: 45 / 67 Loss (mean): 0.1070828270144375 Loss (std): 0.2769097872841164 Loss ratio: 2.585940201660738 Tokens per Sec: 3888.7032880074044
Epoch Step: 50 / 67 Loss (mean): 0.07798435117417414 Loss (std): 0.31895484486715053 Loss ratio: 4.089985235047745 Tokens per Sec: 2656.8709197115095
Epoch Step: 55 / 67 Loss (mean): 0.41352588178961014 Loss (std): 0.8573619057442763 Loss ratio: 2.0732968442842883 Tokens per Sec: 2892.103489789271
Epoch Step: 60 / 67 Loss (mean): 0.3931673856118323 Loss (std): 1.0453165539462512 Loss ratio: 2.6587061699422727 Tokens per Sec: 2524.2078311887794
Epoch Step: 65 / 67 Loss (mean): 0.23541855755138386 Loss (std): 1.1797733493461953 Loss ratio: 5.011386364852274 Tokens per Sec: 3008.5800003227855
Mean loss per sample: 0.41539410407603516 Std loss per sample: 2.9068794695116145 ratio: 6.997883313672476
Epoch ended with duration 0:00:11.279787
Train perplexity: 1.0578120844403718
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow call log[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for branch[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.07581925392151 Loss (std): 45.605384514246786 Loss ratio: 0.45570833048623505 Tokens per Sec: 4330.19027286469
Mean loss per sample: 105.32925643429893 Std loss per sample: 53.7754916822165 ratio: 0.5105465803393376
Epoch ended with duration 0:00:01.020158
b'BLEU = 2.83, 8.8/3.1/2.0/1.6 (BP=0.929, ratio=0.931, hyp_len=2899, ref_len=3113)\n'
Validation perplexity: 1581684.3349384465
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.83
Epoch 967 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.12950219550066322 Loss (std): 0.4033386875968913 Loss ratio: 3.114531657456152 Tokens per Sec: 2941.9731643869027
Epoch Step: 10 / 67 Loss (mean): 0.07442559104083557 Loss (std): 0.18587861049098556 Loss ratio: 2.497509363264557 Tokens per Sec: 2783.0109193632493
Epoch Step: 15 / 67 Loss (mean): 0.043548334615133216 Loss (std): 0.08837395298023679 Loss ratio: 2.02933025479065 Tokens per Sec: 2663.0356551141363
Epoch Step: 20 / 67 Loss (mean): 0.11177864652017888 Loss (std): 0.22362367556288876 Loss ratio: 2.000593874810597 Tokens per Sec: 2867.6516380092703
Epoch Step: 25 / 67 Loss (mean): 0.29757838796285796 Loss (std): 0.685277287930544 Loss ratio: 2.302846294120245 Tokens per Sec: 2853.020226283035
Epoch Step: 30 / 67 Loss (mean): 0.1079128913643217 Loss (std): 0.282632261470344 Loss ratio: 2.6190778311754905 Tokens per Sec: 2747.547302209237
Epoch Step: 35 / 67 Loss (mean): 0.23098156282503624 Loss (std): 0.6982381838152265 Loss ratio: 3.0229173933857547 Tokens per Sec: 2789.5434697881656
Epoch Step: 40 / 67 Loss (mean): 0.10421477091790621 Loss (std): 0.5578074395756653 Loss ratio: 5.352479640482735 Tokens per Sec: 2942.3334995538607
Epoch Step: 45 / 67 Loss (mean): 0.25771795344257953 Loss (std): 0.7581529130031874 Loss ratio: 2.9417931613837163 Tokens per Sec: 2644.685916537833
Epoch Step: 50 / 67 Loss (mean): 0.08241511175037886 Loss (std): 0.17037331835090055 Loss ratio: 2.0672582337439755 Tokens per Sec: 2944.243789923189
Epoch Step: 55 / 67 Loss (mean): 0.2942130475112208 Loss (std): 0.6512443661597141 Loss ratio: 2.2135128665049324 Tokens per Sec: 2656.084141334006
Epoch Step: 60 / 67 Loss (mean): 0.10618022480838363 Loss (std): 0.4125635165717027 Loss ratio: 3.8855023834826925 Tokens per Sec: 2628.3956116717536
Epoch Step: 65 / 67 Loss (mean): 0.20989868141464285 Loss (std): 0.6265904951443172 Loss ratio: 2.985204532593149 Tokens per Sec: 2807.493351266696
Mean loss per sample: 0.2258124431008946 Std loss per sample: 0.9193075168502217 ratio: 4.071110981423945
Epoch ended with duration 0:00:11.189021
Train perplexity: 1.03102387211251
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shader activities on more logging[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.23980355262756 Loss (std): 46.38951647321494 Loss ratio: 0.4582142086941155 Tokens per Sec: 4451.379073735061
Mean loss per sample: 105.66433722354839 Std loss per sample: 55.52981427560749 ratio: 0.5255303325106373
Epoch ended with duration 0:00:01.016696
b'BLEU = 2.83, 8.8/3.1/2.1/1.6 (BP=0.913, ratio=0.916, hyp_len=2853, ref_len=3113)\n'
Validation perplexity: 1655163.445901237
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.83
Epoch 968 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.09699223882989827 Loss (std): 0.28210031804783653 Loss ratio: 2.9084834152820678 Tokens per Sec: 2733.4066998517083
Epoch Step: 10 / 67 Loss (mean): 0.2678196852552901 Loss (std): 0.6443651799463409 Loss ratio: 2.405966459605542 Tokens per Sec: 2805.8093986426306
Epoch Step: 15 / 67 Loss (mean): 0.17826695208668752 Loss (std): 0.8847425839242309 Loss ratio: 4.963020759417028 Tokens per Sec: 2408.3309311046446
Epoch Step: 20 / 67 Loss (mean): 0.16958747284274978 Loss (std): 0.44124059560749845 Loss ratio: 2.6018466353150944 Tokens per Sec: 2614.450583599337
Epoch Step: 25 / 67 Loss (mean): 0.024554108862957946 Loss (std): 0.03669107044817262 Loss ratio: 1.494294525325835 Tokens per Sec: 2551.3050177386394
Epoch Step: 30 / 67 Loss (mean): 0.09146301574764948 Loss (std): 0.20918847358696135 Loss ratio: 2.2871372857868764 Tokens per Sec: 2873.4337362962997
Epoch Step: 35 / 67 Loss (mean): 0.1536185834816024 Loss (std): 0.36267540467393344 Loss ratio: 2.360882364973558 Tokens per Sec: 3392.6916168796165
Epoch Step: 40 / 67 Loss (mean): 0.1348436897751526 Loss (std): 0.40441019265089073 Loss ratio: 2.9991035793015706 Tokens per Sec: 3214.6659379668235
Epoch Step: 45 / 67 Loss (mean): 0.360719871213405 Loss (std): 1.2148706281958004 Loss ratio: 3.367906026660429 Tokens per Sec: 2428.299456073842
Epoch Step: 50 / 67 Loss (mean): 0.029306882805485657 Loss (std): 0.044109437445989844 Loss ratio: 1.50508799379146 Tokens per Sec: 2829.761759450741
Epoch Step: 55 / 67 Loss (mean): 0.28647653553434793 Loss (std): 0.7723173946088526 Loss ratio: 2.6959185092359976 Tokens per Sec: 2933.5714760923397
Epoch Step: 60 / 67 Loss (mean): 0.08744303074763593 Loss (std): 0.24674277326598096 Loss ratio: 2.8217545887457907 Tokens per Sec: 2915.063260081442
Epoch Step: 65 / 67 Loss (mean): 1.5558816287821173 Loss (std): 7.890343653805253 Loss ratio: 5.071300738978133 Tokens per Sec: 2822.4660196830114
Mean loss per sample: 0.2668127959775064 Std loss per sample: 1.7688175136472424 ratio: 6.629432846977707
Epoch ended with duration 0:00:11.280913
Train perplexity: 1.036759201188484
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow call log[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a unit testing for[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.55476343631744 Loss (std): 45.78985915278425 Loss ratio: 0.45537235221863487 Tokens per Sec: 4457.144720866351
Mean loss per sample: 104.27868580744892 Std loss per sample: 54.821108482040984 ratio: 0.5257172935921768
Epoch ended with duration 0:00:01.003705
b'BLEU = 2.84, 9.0/3.1/2.0/1.6 (BP=0.926, ratio=0.928, hyp_len=2890, ref_len=3113)\n'
Validation perplexity: 1371793.7315475685
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.84
Epoch 969 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1930166459051179 Loss (std): 0.47559742219856266 Loss ratio: 2.4640228306130356 Tokens per Sec: 2665.651108005933
Epoch Step: 10 / 67 Loss (mean): 0.04695088511971335 Loss (std): 0.1341699966756088 Loss ratio: 2.857667035105045 Tokens per Sec: 2433.8365315788615
Epoch Step: 15 / 67 Loss (mean): 0.08782238008461718 Loss (std): 0.25516212400908844 Loss ratio: 2.9054339425012032 Tokens per Sec: 2895.076754292747
Epoch Step: 20 / 67 Loss (mean): 0.09759449021839828 Loss (std): 0.37504193863876584 Loss ratio: 3.842859753655067 Tokens per Sec: 2908.6437727317943
Epoch Step: 25 / 67 Loss (mean): 0.12980945360641272 Loss (std): 0.5961486797881475 Loss ratio: 4.592490479127147 Tokens per Sec: 2829.2088429409887
Epoch Step: 30 / 67 Loss (mean): 0.3491282375453011 Loss (std): 0.8418325654373245 Loss ratio: 2.411241701204683 Tokens per Sec: 3195.257813444154
Epoch Step: 35 / 67 Loss (mean): 0.04010750699330856 Loss (std): 0.07756099509332892 Loss ratio: 1.933827378158134 Tokens per Sec: 2709.276884683996
Epoch Step: 40 / 67 Loss (mean): 0.23847622136509017 Loss (std): 0.7107533664468122 Loss ratio: 2.9803951202275183 Tokens per Sec: 3566.581280539334
Epoch Step: 45 / 67 Loss (mean): 0.9834067145816334 Loss (std): 5.219752005127503 Loss ratio: 5.307826281568679 Tokens per Sec: 3073.8846710955345
Epoch Step: 50 / 67 Loss (mean): 0.12451220436605581 Loss (std): 0.45712879205241136 Loss ratio: 3.6713573129625887 Tokens per Sec: 2654.2213024062917
Epoch Step: 55 / 67 Loss (mean): 0.14633988210391635 Loss (std): 0.4013059591848273 Loss ratio: 2.7422870198833347 Tokens per Sec: 2353.7786043747797
Epoch Step: 60 / 67 Loss (mean): 0.07494644396956573 Loss (std): 0.252229937589916 Loss ratio: 3.3654690500371385 Tokens per Sec: 2494.951854108873
Epoch Step: 65 / 67 Loss (mean): 0.1789307741137236 Loss (std): 0.6761646553930057 Loss ratio: 3.7789176218689673 Tokens per Sec: 3221.359792941669
Mean loss per sample: 0.21936343933638153 Std loss per sample: 1.078871842925037 ratio: 4.918193506579041
Epoch ended with duration 0:00:11.230281
Train perplexity: 1.0301246462810614
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.14781841635704 Loss (std): 45.20488959547518 Loss ratio: 0.45138167071737145 Tokens per Sec: 4334.8550875991805
Mean loss per sample: 106.18185463840844 Std loss per sample: 54.90648527173734 ratio: 0.5170985707371172
Epoch ended with duration 0:00:01.018262
b'BLEU = 2.77, 8.4/3.0/2.0/1.5 (BP=0.938, ratio=0.940, hyp_len=2927, ref_len=3113)\n'
Validation perplexity: 1775412.2369493612
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.77
Epoch 970 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.18261616628115007 Loss (std): 0.3572038799036442 Loss ratio: 1.9560364625862554 Tokens per Sec: 3186.732079161927
Epoch Step: 10 / 67 Loss (mean): 0.0930246970447115 Loss (std): 0.2346955943610312 Loss ratio: 2.5229385509122038 Tokens per Sec: 2423.1464225054974
Epoch Step: 15 / 67 Loss (mean): 0.2526340496266357 Loss (std): 0.8130556465635517 Loss ratio: 3.2183137932719483 Tokens per Sec: 2651.7054709760696
Epoch Step: 20 / 67 Loss (mean): 0.10759130488031587 Loss (std): 0.26338091566567 Loss ratio: 2.447975846734584 Tokens per Sec: 2256.951298460581
Epoch Step: 25 / 67 Loss (mean): 0.08420049804226437 Loss (std): 0.3174869509881356 Loss ratio: 3.77060656848815 Tokens per Sec: 3061.257964359123
Epoch Step: 30 / 67 Loss (mean): 0.4839783778106721 Loss (std): 0.9540613923778207 Loss ratio: 1.9712892891901894 Tokens per Sec: 2617.477974645616
Epoch Step: 35 / 67 Loss (mean): 0.11059318493209958 Loss (std): 0.5812218038152329 Loss ratio: 5.255493854997333 Tokens per Sec: 2489.341887347031
Epoch Step: 40 / 67 Loss (mean): 0.22649375581931963 Loss (std): 0.5566258094499337 Loss ratio: 2.4575768432837926 Tokens per Sec: 2531.429321482007
Epoch Step: 45 / 67 Loss (mean): 0.21700532478735113 Loss (std): 0.7843287114972979 Loss ratio: 3.6143293362311772 Tokens per Sec: 3045.6503684620925
Epoch Step: 50 / 67 Loss (mean): 0.11134469664011704 Loss (std): 0.33209538595351856 Loss ratio: 2.9825882684552214 Tokens per Sec: 3437.700582407668
Epoch Step: 55 / 67 Loss (mean): 0.1401290191345197 Loss (std): 0.4299340416169132 Loss ratio: 3.068129958179392 Tokens per Sec: 3503.5005805036963
Epoch Step: 60 / 67 Loss (mean): 0.244335058881461 Loss (std): 0.5282692032455409 Loss ratio: 2.1620687823675375 Tokens per Sec: 2616.70307882126
Epoch Step: 65 / 67 Loss (mean): 0.029107140835549217 Loss (std): 0.10992770718810188 Loss ratio: 3.7766576871694886 Tokens per Sec: 3095.195498024067
Mean loss per sample: 0.2552759230499465 Std loss per sample: 1.7661470444354261 ratio: 6.918580582665711
Epoch ended with duration 0:00:11.239820
Train perplexity: 1.0351421492135617
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print warnings[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.5237543284893 Loss (std): 45.46896375300972 Loss ratio: 0.4523205888672566 Tokens per Sec: 4230.2388592403395
Mean loss per sample: 110.43208967711105 Std loss per sample: 56.66829914898738 ratio: 0.5131506549833301
Epoch ended with duration 0:00:01.046597
b'BLEU = 2.74, 8.8/3.0/1.9/1.5 (BP=0.929, ratio=0.932, hyp_len=2900, ref_len=3113)\n'
Validation perplexity: 3158242.237172486
Validation accuracy: 0.0
Validation BLEU: 2.74
Model saved checkpoint_commit_msg_generator!
Epoch 971 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.025445695088819775 Loss (std): 0.044847710366762335 Loss ratio: 1.7624871401712008 Tokens per Sec: 2435.0222236069676
Epoch Step: 10 / 67 Loss (mean): 0.18552858839575492 Loss (std): 0.4316040418586018 Loss ratio: 2.3263478992139914 Tokens per Sec: 2623.104151724164
Epoch Step: 15 / 67 Loss (mean): 0.1203870674519294 Loss (std): 0.5461312440342097 Loss ratio: 4.536461063413477 Tokens per Sec: 2541.720860078985
Epoch Step: 20 / 67 Loss (mean): 3.0699418042006528 Loss (std): 9.500333961032926 Loss ratio: 3.0946299855044352 Tokens per Sec: 2758.0798737451228
Epoch Step: 25 / 67 Loss (mean): 0.08149728471789786 Loss (std): 0.2875578186161803 Loss ratio: 3.52843434737193 Tokens per Sec: 3110.0998622653365
Epoch Step: 30 / 67 Loss (mean): 0.14800078664870853 Loss (std): 0.6308539756869602 Loss ratio: 4.2625042067130465 Tokens per Sec: 3293.1561465447217
Epoch Step: 35 / 67 Loss (mean): 0.15044156934618513 Loss (std): 0.4021623973957622 Loss ratio: 2.6732132557746424 Tokens per Sec: 2778.7221055583555
Epoch Step: 40 / 67 Loss (mean): 0.20115342935741864 Loss (std): 0.5503200850510933 Loss ratio: 2.735822535112038 Tokens per Sec: 2813.5934867414016
Epoch Step: 45 / 67 Loss (mean): 0.21197045469898512 Loss (std): 0.5921758833934202 Loss ratio: 2.793671807867549 Tokens per Sec: 2997.7848159628666
Epoch Step: 50 / 67 Loss (mean): 0.14423180816993408 Loss (std): 0.4436036478990333 Loss ratio: 3.075629804046961 Tokens per Sec: 2637.1849442550542
Epoch Step: 55 / 67 Loss (mean): 0.170640274717357 Loss (std): 0.5603775926546937 Loss ratio: 3.283970291204025 Tokens per Sec: 2845.4792536416053
Epoch Step: 60 / 67 Loss (mean): 0.05370019280599081 Loss (std): 0.1342956467762339 Loss ratio: 2.500841053986902 Tokens per Sec: 2556.9751350971833
Epoch Step: 65 / 67 Loss (mean): 0.07962913050050702 Loss (std): 0.31092420012582567 Loss ratio: 3.9046539648432548 Tokens per Sec: 2971.3286949796966
Mean loss per sample: 0.28150038756029117 Std loss per sample: 2.2916419644655743 ratio: 8.140812822059633
Epoch ended with duration 0:00:11.323408
Train perplexity: 1.0388215254869095
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.41587024927139 Loss (std): 47.27740797999275 Loss ratio: 0.466173665559335 Tokens per Sec: 4336.777599693408
Mean loss per sample: 109.68212728666478 Std loss per sample: 56.83643034377975 ratio: 0.5181922684197424
Epoch ended with duration 0:00:01.031601
b'BLEU = 2.14, 8.4/2.5/1.5/1.2 (BP=0.869, ratio=0.877, hyp_len=2729, ref_len=3113)\n'
Validation perplexity: 2853031.981000338
Validation accuracy: 0.0
Validation BLEU: 2.14
Epoch 972 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.034123882092899294 Loss (std): 0.07455912942368632 Loss ratio: 2.184954490837402 Tokens per Sec: 2533.55358495032
Epoch Step: 10 / 67 Loss (mean): 0.1550135122095071 Loss (std): 0.43659759628991873 Loss ratio: 2.81651315467157 Tokens per Sec: 3016.925394271624
Epoch Step: 15 / 67 Loss (mean): 0.0864553793135201 Loss (std): 0.1898889303402941 Loss ratio: 2.1963807440099776 Tokens per Sec: 2529.9126171199005
Epoch Step: 20 / 67 Loss (mean): 0.269176962403435 Loss (std): 0.6312878765587225 Loss ratio: 2.345252249382938 Tokens per Sec: 2678.556778482189
Epoch Step: 25 / 67 Loss (mean): 0.06557171346366886 Loss (std): 0.14974261581577752 Loss ratio: 2.2836465284492684 Tokens per Sec: 2826.024843565175
Epoch Step: 30 / 67 Loss (mean): 0.17090648997054814 Loss (std): 0.5463415044398052 Loss ratio: 3.1967276639638134 Tokens per Sec: 2513.842565527067
Epoch Step: 35 / 67 Loss (mean): 0.3771551022671247 Loss (std): 1.0373818121511529 Loss ratio: 2.7505442877885677 Tokens per Sec: 2642.0927611745574
Epoch Step: 40 / 67 Loss (mean): 0.6087932468262807 Loss (std): 1.3245748769929626 Loss ratio: 2.1757384529117987 Tokens per Sec: 2727.920968756178
Epoch Step: 45 / 67 Loss (mean): 1.937521804716198 Loss (std): 6.653306145147976 Loss ratio: 3.4339258164490856 Tokens per Sec: 4053.106046825871
Epoch Step: 50 / 67 Loss (mean): 0.07864177651390492 Loss (std): 0.19341749849594098 Loss ratio: 2.4594751933375028 Tokens per Sec: 2668.508817793337
Epoch Step: 55 / 67 Loss (mean): 0.03437290898762599 Loss (std): 0.0732098424479895 Loss ratio: 2.129870430062947 Tokens per Sec: 2942.6663922064286
Epoch Step: 60 / 67 Loss (mean): 0.20915278177835717 Loss (std): 0.6631025372472922 Loss ratio: 3.170421792190139 Tokens per Sec: 2836.5485625601823
Epoch Step: 65 / 67 Loss (mean): 3.6650961499881305 Loss (std): 13.744848773431528 Loss ratio: 3.7502014165374735 Tokens per Sec: 2492.7085381650404
Mean loss per sample: 0.40196331487539666 Std loss per sample: 3.057611412110999 ratio: 7.606692697961302
Epoch ended with duration 0:00:11.302700
Train perplexity: 1.055891592888953
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the daemon not use[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for branch[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.27695173025131 Loss (std): 45.65886835351003 Loss ratio: 0.45532764574190554 Tokens per Sec: 4328.616336852162
Mean loss per sample: 107.99117913487993 Std loss per sample: 54.87644278279536 ratio: 0.5081567144873491
Epoch ended with duration 0:00:01.032586
b'BLEU = 2.53, 8.3/2.7/1.8/1.4 (BP=0.931, ratio=0.934, hyp_len=2906, ref_len=3113)\n'
Validation perplexity: 2268748.8666089782
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.53
Epoch 973 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.41975107718099025 Loss (std): 0.750797159671117 Loss ratio: 1.788672383435921 Tokens per Sec: 3186.434703335106
Epoch Step: 10 / 67 Loss (mean): 0.3058628086041608 Loss (std): 0.8565335636822481 Loss ratio: 2.8003848117106322 Tokens per Sec: 2276.7494519704273
Epoch Step: 15 / 67 Loss (mean): 0.27614770023865276 Loss (std): 0.7499597621135229 Loss ratio: 2.7157921701516674 Tokens per Sec: 2634.7039738606204
Epoch Step: 20 / 67 Loss (mean): 0.09306621222003741 Loss (std): 0.21586011064947416 Loss ratio: 2.3194251221819777 Tokens per Sec: 3178.359534752079
Epoch Step: 25 / 67 Loss (mean): 0.13878981054403994 Loss (std): 0.317893606729713 Loss ratio: 2.2904679059911315 Tokens per Sec: 3137.117387368559
Epoch Step: 30 / 67 Loss (mean): 0.09817164985088311 Loss (std): 0.44110855067955934 Loss ratio: 4.493237623586615 Tokens per Sec: 2874.6443693407023
Epoch Step: 35 / 67 Loss (mean): 0.28823182660016755 Loss (std): 0.7440586896245763 Loss ratio: 2.581459162234459 Tokens per Sec: 2596.325645473767
Epoch Step: 40 / 67 Loss (mean): 0.1749018427374267 Loss (std): 0.5347845916398632 Loss ratio: 3.0576269710474944 Tokens per Sec: 3048.105122170594
Epoch Step: 45 / 67 Loss (mean): 0.2474544832675747 Loss (std): 0.6106296341861848 Loss ratio: 2.4676442557151232 Tokens per Sec: 2875.236568620467
Epoch Step: 50 / 67 Loss (mean): 0.029077151044475613 Loss (std): 0.04936227058354952 Loss ratio: 1.6976309167306778 Tokens per Sec: 2433.983559418265
Epoch Step: 55 / 67 Loss (mean): 0.13263566831938078 Loss (std): 0.5262788175768993 Loss ratio: 3.967852872800726 Tokens per Sec: 2726.84636320159
Epoch Step: 60 / 67 Loss (mean): 0.505325009590706 Loss (std): 1.1659534119153714 Loss ratio: 2.3073336759242316 Tokens per Sec: 2878.2141550546003
Epoch Step: 65 / 67 Loss (mean): 0.9700280895913238 Loss (std): 1.3658873662302486 Loss ratio: 1.408090529425495 Tokens per Sec: 3009.0785797205876
Mean loss per sample: 0.4163421805665488 Std loss per sample: 3.3617753951564904 ratio: 8.074549137879481
Epoch ended with duration 0:00:11.307039
Train perplexity: 1.0579477834370752
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shader activities on more logging[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.07703003287315 Loss (std): 45.127737838136404 Loss ratio: 0.4509300268334593 Tokens per Sec: 4439.82147358853
Mean loss per sample: 104.57916799163232 Std loss per sample: 54.381758057006785 ratio: 0.5200056483654376
Epoch ended with duration 0:00:01.007407
b'BLEU = 2.45, 8.9/2.6/1.6/1.2 (BP=0.964, ratio=0.964, hyp_len=3002, ref_len=3113)\n'
Validation perplexity: 1428807.0919014076
Validation accuracy: 0.0
Validation BLEU: 2.45
Epoch 974 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.09777262999568848 Loss (std): 0.25296276261597067 Loss ratio: 2.587255376347406 Tokens per Sec: 2370.269688563739
Epoch Step: 10 / 67 Loss (mean): 0.9825470330979442 Loss (std): 1.8529109246340092 Loss ratio: 1.8858241511267213 Tokens per Sec: 2888.234700694682
Epoch Step: 15 / 67 Loss (mean): 0.16482575938766786 Loss (std): 0.5857616958756675 Loss ratio: 3.55382373514788 Tokens per Sec: 3089.984689249355
Epoch Step: 20 / 67 Loss (mean): 0.09949183051367072 Loss (std): 0.2702434526063778 Loss ratio: 2.7162376168085967 Tokens per Sec: 2573.7755226487316
Epoch Step: 25 / 67 Loss (mean): 0.17577988984703552 Loss (std): 0.5632946607924854 Loss ratio: 3.204545532954122 Tokens per Sec: 2536.61265704533
Epoch Step: 30 / 67 Loss (mean): 0.0599341577112682 Loss (std): 0.21319082742292234 Loss ratio: 3.5570838994679055 Tokens per Sec: 3126.3754207483
Epoch Step: 35 / 67 Loss (mean): 0.08911595900144675 Loss (std): 0.2629080464465705 Loss ratio: 2.950179175452764 Tokens per Sec: 2473.5806371222993
Epoch Step: 40 / 67 Loss (mean): 0.15833049718548864 Loss (std): 0.6356364873788757 Loss ratio: 4.014618147975685 Tokens per Sec: 3368.6138423481552
Epoch Step: 45 / 67 Loss (mean): 0.10798425842085635 Loss (std): 0.30198585252736965 Loss ratio: 2.796572916678412 Tokens per Sec: 2779.8592211147684
Epoch Step: 50 / 67 Loss (mean): 0.2015243718851707 Loss (std): 0.7634158665384496 Loss ratio: 3.7882061578807287 Tokens per Sec: 3056.243565755522
Epoch Step: 55 / 67 Loss (mean): 0.39042606467046426 Loss (std): 0.8963718192232742 Loss ratio: 2.2958810907766853 Tokens per Sec: 2882.2869708631115
Epoch Step: 60 / 67 Loss (mean): 0.2394452553407973 Loss (std): 0.5702235913198439 Loss ratio: 2.381436167980263 Tokens per Sec: 3034.336331077196
Epoch Step: 65 / 67 Loss (mean): 0.06010136338227312 Loss (std): 0.22012565541536486 Loss ratio: 3.662573409778768 Tokens per Sec: 2691.2610145538674
Mean loss per sample: 0.27779915225170937 Std loss per sample: 1.7934687198373074 ratio: 6.455990615163124
Epoch ended with duration 0:00:11.305008
Train perplexity: 1.0383014387491336
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow call log[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.04783979058266 Loss (std): 45.70433533586022 Loss ratio: 0.4523039327765988 Tokens per Sec: 4342.540300210194
Mean loss per sample: 107.66447955345521 Std loss per sample: 54.796220858539414 ratio: 0.5089535665412583
Epoch ended with duration 0:00:01.020578
b'BLEU = 2.20, 8.5/2.5/1.5/1.0 (BP=0.918, ratio=0.921, hyp_len=2867, ref_len=3113)\n'
Validation perplexity: 2170494.1802071496
Validation accuracy: 0.0
Validation BLEU: 2.2
Epoch 975 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.28211102987552295 Loss (std): 0.601326391673292 Loss ratio: 2.131523861150051 Tokens per Sec: 4103.260725623112
Epoch Step: 10 / 67 Loss (mean): 0.07958630165376235 Loss (std): 0.19000407033265324 Loss ratio: 2.3873966547567425 Tokens per Sec: 2470.9323315774504
Epoch Step: 15 / 67 Loss (mean): 0.2773246738343005 Loss (std): 0.7727003438247667 Loss ratio: 2.7862661231739145 Tokens per Sec: 3022.5762449203985
Epoch Step: 20 / 67 Loss (mean): 0.15128545471543475 Loss (std): 0.6569173987114263 Loss ratio: 4.342237658914905 Tokens per Sec: 3012.6615108912665
Epoch Step: 25 / 67 Loss (mean): 0.05749835192273167 Loss (std): 0.20700274261528376 Loss ratio: 3.600150885949938 Tokens per Sec: 2443.6159841418184
Epoch Step: 30 / 67 Loss (mean): 0.16229925938478118 Loss (std): 0.4621957458157198 Loss ratio: 2.847799475904817 Tokens per Sec: 2943.676383890184
Epoch Step: 35 / 67 Loss (mean): 0.22159157944224717 Loss (std): 0.547152938581288 Loss ratio: 2.4691955351303907 Tokens per Sec: 3013.0168302995344
Epoch Step: 40 / 67 Loss (mean): 0.4405721199104846 Loss (std): 0.7017258533708972 Loss ratio: 1.5927604622677298 Tokens per Sec: 2478.010892991981
Epoch Step: 45 / 67 Loss (mean): 0.18912922904655716 Loss (std): 0.5493800313097429 Loss ratio: 2.904786500105197 Tokens per Sec: 3102.5479997128464
Epoch Step: 50 / 67 Loss (mean): 0.1106424562290158 Loss (std): 0.3388598120327239 Loss ratio: 3.0626562676024403 Tokens per Sec: 2919.6961901374243
Epoch Step: 55 / 67 Loss (mean): 0.49033178812487677 Loss (std): 3.6680761011786 Loss ratio: 7.480804202407577 Tokens per Sec: 2558.8747336358892
Epoch Step: 60 / 67 Loss (mean): 0.12348807062880951 Loss (std): 0.2843973976596076 Loss ratio: 2.303035396143425 Tokens per Sec: 2291.6612997645384
Epoch Step: 65 / 67 Loss (mean): 0.03538831432871077 Loss (std): 0.11309500814202489 Loss ratio: 3.1958291963703442 Tokens per Sec: 2579.060842198176
Mean loss per sample: 0.2559994670641468 Std loss per sample: 1.9227956499222922 ratio: 7.510936143630682
Epoch ended with duration 0:00:11.335663
Train perplexity: 1.0352434897236422
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement to start statement[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.27432560920715 Loss (std): 45.75839437882365 Loss ratio: 0.45182620672680757 Tokens per Sec: 4450.82649882694
Mean loss per sample: 107.59910650697888 Std loss per sample: 55.0578118279591 ratio: 0.5116939500272527
Epoch ended with duration 0:00:01.021928
b'BLEU = 2.54, 8.7/2.8/1.8/1.3 (BP=0.910, ratio=0.914, hyp_len=2844, ref_len=3113)\n'
Validation perplexity: 2151350.2229550956
Validation accuracy: 0.0
Validation BLEU: 2.54
Model saved checkpoint_commit_msg_generator!
Epoch 976 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.07068182985540261 Loss (std): 0.2023214450946477 Loss ratio: 2.86242511701447 Tokens per Sec: 2749.9037982267314
Epoch Step: 10 / 67 Loss (mean): 0.9380225967161095 Loss (std): 1.2154672052117854 Loss ratio: 1.295776039369384 Tokens per Sec: 3335.397163588346
Epoch Step: 15 / 67 Loss (mean): 0.14364123864834255 Loss (std): 0.40468032544871385 Loss ratio: 2.8172990518373213 Tokens per Sec: 2600.5269548686833
Epoch Step: 20 / 67 Loss (mean): 0.03704477293558739 Loss (std): 0.08148874645421537 Loss ratio: 2.199736696885851 Tokens per Sec: 2819.456922060448
Epoch Step: 25 / 67 Loss (mean): 0.4294554825846717 Loss (std): 0.7296635374778294 Loss ratio: 1.6990434796323004 Tokens per Sec: 2868.1509546815905
Epoch Step: 30 / 67 Loss (mean): 3.260024092097808 Loss (std): 10.151134665368394 Loss ratio: 3.1138219775658755 Tokens per Sec: 2826.4655494272142
Epoch Step: 35 / 67 Loss (mean): 0.06572579547355417 Loss (std): 0.226662775203946 Loss ratio: 3.4486121251304964 Tokens per Sec: 2847.3519072206877
Epoch Step: 40 / 67 Loss (mean): 0.16644808257638033 Loss (std): 0.5368716961914722 Loss ratio: 3.225460383090388 Tokens per Sec: 2891.0540346128155
Epoch Step: 45 / 67 Loss (mean): 0.29420668648833725 Loss (std): 0.623176318803205 Loss ratio: 2.118158245284845 Tokens per Sec: 2852.1467274156844
Epoch Step: 50 / 67 Loss (mean): 0.2414694316821624 Loss (std): 0.7190252654395757 Loss ratio: 2.9777072005785103 Tokens per Sec: 2744.4135793534087
Epoch Step: 55 / 67 Loss (mean): 0.07905537498754711 Loss (std): 0.2666983915439563 Loss ratio: 3.373564309649621 Tokens per Sec: 2412.325187119165
Epoch Step: 60 / 67 Loss (mean): 0.03718996371162575 Loss (std): 0.08776752870746253 Loss ratio: 2.359978874623801 Tokens per Sec: 2285.2937582976756
Epoch Step: 65 / 67 Loss (mean): 0.28851253269931476 Loss (std): 0.7198713675756228 Loss ratio: 2.4951129881275085 Tokens per Sec: 3506.244616611951
Mean loss per sample: 0.2345844097801046 Std loss per sample: 1.435991238926352 ratio: 6.12142656996015
Epoch ended with duration 0:00:11.231476
Train perplexity: 1.0322482636525383
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock to start[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link to appear[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 102.19466650485992 Loss (std): 46.17806861476362 Loss ratio: 0.45186378305337094 Tokens per Sec: 4442.773316042041
Mean loss per sample: 109.26376822639685 Std loss per sample: 56.757567681961056 ratio: 0.5194546060717783
Epoch ended with duration 0:00:01.034110
b'BLEU = 2.64, 9.0/2.9/1.8/1.4 (BP=0.922, ratio=0.925, hyp_len=2879, ref_len=3113)\n'
Validation perplexity: 2695778.782158638
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.64
Epoch 977 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.25934633001952534 Loss (std): 0.8720336255694466 Loss ratio: 3.3624290172287923 Tokens per Sec: 2209.145238407483
Epoch Step: 10 / 67 Loss (mean): 0.21862440754318868 Loss (std): 0.4976049760790279 Loss ratio: 2.2760723821777646 Tokens per Sec: 2816.3551463932718
Epoch Step: 15 / 67 Loss (mean): 0.12503236303155063 Loss (std): 0.5315722764412172 Loss ratio: 4.251477485929626 Tokens per Sec: 2873.903435895152
Epoch Step: 20 / 67 Loss (mean): 0.3467637807088977 Loss (std): 0.770841925185039 Loss ratio: 2.2229597439766864 Tokens per Sec: 3573.9683492563345
Epoch Step: 25 / 67 Loss (mean): 0.035462319246960305 Loss (std): 0.06321878460514084 Loss ratio: 1.782703047843091 Tokens per Sec: 2428.4111305029905
Epoch Step: 30 / 67 Loss (mean): 0.3388907231274061 Loss (std): 0.8585123677085412 Loss ratio: 2.53330147189005 Tokens per Sec: 2705.9094937828577
Epoch Step: 35 / 67 Loss (mean): 0.07788837502175738 Loss (std): 0.1847643130486725 Loss ratio: 2.372168028888269 Tokens per Sec: 2828.0620833490893
Epoch Step: 40 / 67 Loss (mean): 0.098270122399299 Loss (std): 0.30551667620346223 Loss ratio: 3.1089477528282963 Tokens per Sec: 3122.2066610598963
Epoch Step: 45 / 67 Loss (mean): 0.21981672279252962 Loss (std): 0.5986703004413622 Loss ratio: 2.723497524828478 Tokens per Sec: 2257.47033442184
Epoch Step: 50 / 67 Loss (mean): 0.0699048258647963 Loss (std): 0.16734513367570134 Loss ratio: 2.393899585693346 Tokens per Sec: 3843.9006949519694
Epoch Step: 55 / 67 Loss (mean): 0.25493278381742357 Loss (std): 0.6655504083824291 Loss ratio: 2.610689760713865 Tokens per Sec: 3375.5745157552683
Epoch Step: 60 / 67 Loss (mean): 1.0739856287127623 Loss (std): 1.5033951096865203 Loss ratio: 1.399827958115633 Tokens per Sec: 2723.815037151853
Epoch Step: 65 / 67 Loss (mean): 0.207566681283879 Loss (std): 0.5772644985205635 Loss ratio: 2.7811038599738773 Tokens per Sec: 2473.8395750801546
Mean loss per sample: 0.28752842463682404 Std loss per sample: 2.282496292460115 ratio: 7.938332689518006
Epoch ended with duration 0:00:11.269083
Train perplexity: 1.039669125297211
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a unit testing parameters[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.30366173386574 Loss (std): 46.14465981654649 Loss ratio: 0.4555083106252651 Tokens per Sec: 4440.396942498735
Mean loss per sample: 104.73816529078195 Std loss per sample: 54.70010524767732 ratio: 0.5222557135292067
Epoch ended with duration 0:00:01.004588
b'BLEU = 2.52, 8.7/2.8/1.7/1.3 (BP=0.931, ratio=0.934, hyp_len=2906, ref_len=3113)\n'
Validation perplexity: 1459927.6454918205
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.52
Epoch 978 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.8281654439824706 Loss (std): 3.874232629180304 Loss ratio: 4.678090177911732 Tokens per Sec: 2813.0042779567375
Epoch Step: 10 / 67 Loss (mean): 1.192041219592852 Loss (std): 9.185008600103407 Loss ratio: 7.7052776775962455 Tokens per Sec: 2739.263732608291
Epoch Step: 15 / 67 Loss (mean): 0.3447322398042161 Loss (std): 1.0670935074167658 Loss ratio: 3.095427071233026 Tokens per Sec: 2582.4777749389978
Epoch Step: 20 / 67 Loss (mean): 0.1722056280319748 Loss (std): 0.5915133717499966 Loss ratio: 3.4349247380008134 Tokens per Sec: 3233.7429208161952
Epoch Step: 25 / 67 Loss (mean): 0.2836928017113678 Loss (std): 1.3565806922395558 Loss ratio: 4.781865045767908 Tokens per Sec: 2909.756661312856
Epoch Step: 30 / 67 Loss (mean): 1.2753383577955901 Loss (std): 6.917686620114472 Loss ratio: 5.424197098620656 Tokens per Sec: 2642.8774707888715
Epoch Step: 35 / 67 Loss (mean): 0.15436490399224567 Loss (std): 0.4907627508991915 Loss ratio: 3.1792378850819896 Tokens per Sec: 3123.284880335753
Epoch Step: 40 / 67 Loss (mean): 0.951358159623851 Loss (std): 1.3945701743027852 Loss ratio: 1.465872931445894 Tokens per Sec: 2597.78813202597
Epoch Step: 45 / 67 Loss (mean): 0.10360895105407053 Loss (std): 0.22214460870757444 Loss ratio: 2.1440677320595936 Tokens per Sec: 2498.7234623918675
Epoch Step: 50 / 67 Loss (mean): 0.18777015334762837 Loss (std): 0.6170938695583502 Loss ratio: 3.286432154187429 Tokens per Sec: 2995.0384168056958
Epoch Step: 55 / 67 Loss (mean): 1.8514385188486244 Loss (std): 8.897433495631711 Loss ratio: 4.8056867160595 Tokens per Sec: 2753.8361821281765
Epoch Step: 60 / 67 Loss (mean): 0.43229523659829283 Loss (std): 1.250464477441134 Loss ratio: 2.892616831221573 Tokens per Sec: 2669.1876451810294
Epoch Step: 65 / 67 Loss (mean): 0.08840065373113334 Loss (std): 0.24284388636106438 Loss ratio: 2.747082471806863 Tokens per Sec: 2521.484041046522
Mean loss per sample: 0.4411860874212855 Std loss per sample: 3.5776418593927635 ratio: 8.10914478356272
Epoch ended with duration 0:00:11.423655
Train perplexity: 1.061509924576412
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link to appear before scrolling[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.55565014481544 Loss (std): 45.462021371187625 Loss ratio: 0.452108074540967 Tokens per Sec: 4201.630869092056
Mean loss per sample: 107.43324678336255 Std loss per sample: 55.011252049075374 ratio: 0.5120505401833819
Epoch ended with duration 0:00:01.037046
b'BLEU = 2.16, 7.7/2.3/1.4/1.0 (BP=0.966, ratio=0.967, hyp_len=3010, ref_len=3113)\n'
Validation perplexity: 2103533.7998850183
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.16
Epoch 979 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.1075198614639703 Loss (std): 0.4308851678406411 Loss ratio: 4.007493703710081 Tokens per Sec: 2769.1967060080474
Epoch Step: 10 / 67 Loss (mean): 2.5010229340991827 Loss (std): 9.208587927376534 Loss ratio: 3.681928622815 Tokens per Sec: 2225.883228123115
Epoch Step: 15 / 67 Loss (mean): 0.11655292215709778 Loss (std): 0.29359135844769835 Loss ratio: 2.5189532189675723 Tokens per Sec: 2528.483381933008
Epoch Step: 20 / 67 Loss (mean): 0.3185321956916596 Loss (std): 0.6942507975638115 Loss ratio: 2.1795310080235937 Tokens per Sec: 2761.8256566301034
Epoch Step: 25 / 67 Loss (mean): 0.16257714286439295 Loss (std): 0.4318512845759019 Loss ratio: 2.6562853607048127 Tokens per Sec: 3438.281365373671
Epoch Step: 30 / 67 Loss (mean): 0.15676253220499348 Loss (std): 0.40279048806437634 Loss ratio: 2.5694308607981644 Tokens per Sec: 2516.4608328981853
Epoch Step: 35 / 67 Loss (mean): 0.3037517837474297 Loss (std): 0.5726319672624383 Loss ratio: 1.8851970520067234 Tokens per Sec: 3170.9024296148377
Epoch Step: 40 / 67 Loss (mean): 0.3408729826933268 Loss (std): 0.8868882038648028 Loss ratio: 2.60181430882925 Tokens per Sec: 3218.2779377381194
Epoch Step: 45 / 67 Loss (mean): 0.12387582427837174 Loss (std): 0.267392636116105 Loss ratio: 2.1585538394902994 Tokens per Sec: 3110.04422970038
Epoch Step: 50 / 67 Loss (mean): 0.6976561395440513 Loss (std): 1.426922428438017 Loss ratio: 2.0453090678318593 Tokens per Sec: 3449.4497074062456
Epoch Step: 55 / 67 Loss (mean): 0.29822538909775176 Loss (std): 1.0018338273859626 Loss ratio: 3.359317697319135 Tokens per Sec: 2549.236488519538
Epoch Step: 60 / 67 Loss (mean): 0.1568482474413031 Loss (std): 0.40731898410723943 Loss ratio: 2.596898535698777 Tokens per Sec: 2567.9207225885348
Epoch Step: 65 / 67 Loss (mean): 0.9139322652436022 Loss (std): 3.8301088908180665 Loss ratio: 4.190801699945649 Tokens per Sec: 2404.93654932929
Mean loss per sample: 0.32832953760726846 Std loss per sample: 2.2047663272150637 ratio: 6.715101977368531
Epoch ended with duration 0:00:11.296060
Train perplexity: 1.0454243637724758
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire ) to include[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.92997512221336 Loss (std): 45.289054716255045 Loss ratio: 0.4443153710373594 Tokens per Sec: 4438.584326497289
Mean loss per sample: 105.06454151459648 Std loss per sample: 54.46549406448105 ratio: 0.5184003402033999
Epoch ended with duration 0:00:01.003640
b'BLEU = 2.52, 8.2/2.7/1.7/1.3 (BP=0.949, ratio=0.951, hyp_len=2959, ref_len=3113)\n'
Validation perplexity: 1525949.288848218
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.52
Epoch 980 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.35151439299534104 Loss (std): 0.6688526006900458 Loss ratio: 1.902774435466461 Tokens per Sec: 2695.059611107494
Epoch Step: 10 / 67 Loss (mean): 0.3333574901726024 Loss (std): 1.0047842604035726 Loss ratio: 3.014134345333971 Tokens per Sec: 3006.834694530656
Epoch Step: 15 / 67 Loss (mean): 0.8986964891009848 Loss (std): 1.2558833361706494 Loss ratio: 1.3974499193014298 Tokens per Sec: 2338.518249664001
Epoch Step: 20 / 67 Loss (mean): 0.20226496752877665 Loss (std): 0.5391259146912049 Loss ratio: 2.66544385455431 Tokens per Sec: 2795.599012368272
Epoch Step: 25 / 67 Loss (mean): 0.055762263051974514 Loss (std): 0.1996028014253868 Loss ratio: 3.5795319361293205 Tokens per Sec: 2570.095714151792
Epoch Step: 30 / 67 Loss (mean): 0.1587132777399347 Loss (std): 0.40021831270196184 Loss ratio: 2.5216435474148153 Tokens per Sec: 2564.4220749919195
Epoch Step: 35 / 67 Loss (mean): 0.3145819471728828 Loss (std): 2.096381642520726 Loss ratio: 6.664023989172624 Tokens per Sec: 2858.0188030506183
Epoch Step: 40 / 67 Loss (mean): 0.0677856865031572 Loss (std): 0.14682647322933168 Loss ratio: 2.1660394812479042 Tokens per Sec: 2995.2705377636285
Epoch Step: 45 / 67 Loss (mean): 0.29040541671747633 Loss (std): 0.5321039229667814 Loss ratio: 1.8322796075268935 Tokens per Sec: 3258.5397651294807
Epoch Step: 50 / 67 Loss (mean): 0.0950325961366616 Loss (std): 0.3947547884267454 Loss ratio: 4.153888291750636 Tokens per Sec: 3352.0431145736866
Epoch Step: 55 / 67 Loss (mean): 0.05283480487150882 Loss (std): 0.14038260029542976 Loss ratio: 2.6570099130077622 Tokens per Sec: 2573.032236143873
Epoch Step: 60 / 67 Loss (mean): 0.13309169008107347 Loss (std): 0.3693257829740915 Loss ratio: 2.7749725226955557 Tokens per Sec: 2877.727771407942
Epoch Step: 65 / 67 Loss (mean): 1.7998874238676308 Loss (std): 6.9600054265170685 Loss ratio: 3.8669115269227685 Tokens per Sec: 2811.785131166157
Mean loss per sample: 0.3025710685923272 Std loss per sample: 2.074106116772367 ratio: 6.854938664234745
Epoch ended with duration 0:00:11.261760
Train perplexity: 1.0417872827051773
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.85372692346573 Loss (std): 45.229203858501464 Loss ratio: 0.44846338591755047 Tokens per Sec: 4454.683520403279
Mean loss per sample: 104.24166970791632 Std loss per sample: 53.980741819585155 ratio: 0.5178422599219528
Epoch ended with duration 0:00:01.004748
b'BLEU = 2.54, 8.6/2.8/1.8/1.3 (BP=0.932, ratio=0.934, hyp_len=2907, ref_len=3113)\n'
Validation perplexity: 1364929.572484024
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.54
Model saved checkpoint_commit_msg_generator!
Epoch 981 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.09936150875546446 Loss (std): 0.3390247515318744 Loss ratio: 3.4120330475882543 Tokens per Sec: 2737.5807973115
Epoch Step: 10 / 67 Loss (mean): 0.17296560172871978 Loss (std): 0.517746705422276 Loss ratio: 2.9933507023801926 Tokens per Sec: 3128.3136985138485
Epoch Step: 15 / 67 Loss (mean): 0.13755221801602602 Loss (std): 0.45935582695313165 Loss ratio: 3.339501416833662 Tokens per Sec: 2758.1230672690353
Epoch Step: 20 / 67 Loss (mean): 0.5227645218260477 Loss (std): 3.066587745915032 Loss ratio: 5.866097674729835 Tokens per Sec: 2679.8659468458536
Epoch Step: 25 / 67 Loss (mean): 0.22905148745610404 Loss (std): 0.5364537353371067 Loss ratio: 2.34206614982107 Tokens per Sec: 2601.886310327403
Epoch Step: 30 / 67 Loss (mean): 0.2262706528184708 Loss (std): 0.7410458292557893 Loss ratio: 3.2750417255847357 Tokens per Sec: 3202.2700884018755
Epoch Step: 35 / 67 Loss (mean): 0.127611746917637 Loss (std): 0.48712613685321726 Loss ratio: 3.8172515353748553 Tokens per Sec: 2778.949428505416
Epoch Step: 40 / 67 Loss (mean): 1.661468896447559 Loss (std): 9.02506350624046 Loss ratio: 5.4319786097333775 Tokens per Sec: 2887.9434996841737
Epoch Step: 45 / 67 Loss (mean): 0.0365995070022791 Loss (std): 0.08686703121208786 Loss ratio: 2.3734481234044638 Tokens per Sec: 2637.167205120001
Epoch Step: 50 / 67 Loss (mean): 0.056657786222785944 Loss (std): 0.1350641068660535 Loss ratio: 2.383857822029323 Tokens per Sec: 2244.7898475783004
Epoch Step: 55 / 67 Loss (mean): 1.6526585796318614 Loss (std): 7.2334420259279 Loss ratio: 4.376852009892563 Tokens per Sec: 2755.3101703805764
Epoch Step: 60 / 67 Loss (mean): 0.02768501577065763 Loss (std): 0.03845938901366251 Loss ratio: 1.389177067199805 Tokens per Sec: 2891.7938161744178
Epoch Step: 65 / 67 Loss (mean): 0.2197059694294694 Loss (std): 0.7266660638407383 Loss ratio: 3.307447975709256 Tokens per Sec: 3061.025881895024
Mean loss per sample: 0.2762159151691218 Std loss per sample: 2.0836685199991005 ratio: 7.543622237419989
Epoch ended with duration 0:00:11.276702
Train perplexity: 1.0380790464345138
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.88399350643158 Loss (std): 45.76172417435653 Loss ratio: 0.4491551871832326 Tokens per Sec: 4475.931085244089
Mean loss per sample: 105.1366973182217 Std loss per sample: 53.9765655780641 ratio: 0.5133941521359657
Epoch ended with duration 0:00:00.999172
b'BLEU = 2.16, 7.9/2.3/1.4/1.0 (BP=0.963, ratio=0.963, hyp_len=2999, ref_len=3113)\n'
Validation perplexity: 1540943.8290659634
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.16
Epoch 982 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.15022851415142213 Loss (std): 0.4500695506334709 Loss ratio: 2.9958996344716917 Tokens per Sec: 2896.6456474210504
Epoch Step: 10 / 67 Loss (mean): 0.0945398237840891 Loss (std): 0.32481115222101425 Loss ratio: 3.435707188991815 Tokens per Sec: 2892.4383737570283
Epoch Step: 15 / 67 Loss (mean): 0.23358706663486828 Loss (std): 1.024199509999767 Loss ratio: 4.38465846912982 Tokens per Sec: 2503.236578746206
Epoch Step: 20 / 67 Loss (mean): 0.04381983027565184 Loss (std): 0.07356447946254895 Loss ratio: 1.6787942582110935 Tokens per Sec: 2762.0078300860705
Epoch Step: 25 / 67 Loss (mean): 0.03360992378441097 Loss (std): 0.047811770008362155 Loss ratio: 1.4225491945488529 Tokens per Sec: 2702.496457292481
Epoch Step: 30 / 67 Loss (mean): 1.1950975135564477 Loss (std): 6.40966277714808 Loss ratio: 5.363296889534809 Tokens per Sec: 3095.5152089089374
Epoch Step: 35 / 67 Loss (mean): 0.12734382741996342 Loss (std): 0.4075715202871576 Loss ratio: 3.200559685889129 Tokens per Sec: 2466.286561442436
Epoch Step: 40 / 67 Loss (mean): 0.08459726095452424 Loss (std): 0.17852348033680066 Loss ratio: 2.110274946522997 Tokens per Sec: 2479.4174066301784
Epoch Step: 45 / 67 Loss (mean): 0.057084274381850264 Loss (std): 0.24055811642236383 Loss ratio: 4.214087312614565 Tokens per Sec: 2309.9456448255996
Epoch Step: 50 / 67 Loss (mean): 0.1820273231162446 Loss (std): 0.6208138945369231 Loss ratio: 3.4105533384153803 Tokens per Sec: 3080.891628861549
Epoch Step: 55 / 67 Loss (mean): 0.2546801472167317 Loss (std): 0.637769464877522 Loss ratio: 2.5041978020170643 Tokens per Sec: 3858.7054174701652
Epoch Step: 60 / 67 Loss (mean): 0.293242170962003 Loss (std): 0.7418150398536788 Loss ratio: 2.529701091149676 Tokens per Sec: 2988.701255319252
Epoch Step: 65 / 67 Loss (mean): 0.09040086907589284 Loss (std): 0.3889083161242263 Loss ratio: 4.302041784551121 Tokens per Sec: 2899.0209340286287
Mean loss per sample: 0.28981568233101096 Std loss per sample: 2.011104183684281 ratio: 6.93925245007036
Epoch ended with duration 0:00:11.284305
Train perplexity: 1.0399909166176942
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.95391857624054 Loss (std): 46.19460321917079 Loss ratio: 0.45758108125624225 Tokens per Sec: 4347.728691776079
Mean loss per sample: 106.87372392654174 Std loss per sample: 55.149894193783254 ratio: 0.5160285631264221
Epoch ended with duration 0:00:01.018805
b'BLEU = 2.17, 7.9/2.4/1.5/1.1 (BP=0.907, ratio=0.911, hyp_len=2835, ref_len=3113)\n'
Validation perplexity: 1949929.7050277481
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.17
Epoch 983 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.09252334298344067 Loss (std): 0.43619981384033435 Loss ratio: 4.714483932107847 Tokens per Sec: 2486.497302765888
Epoch Step: 10 / 67 Loss (mean): 0.2914425451323268 Loss (std): 0.7458251534666874 Loss ratio: 2.5590812526292357 Tokens per Sec: 2512.4263506691627
Epoch Step: 15 / 67 Loss (mean): 0.0723002170525433 Loss (std): 0.19807505713023962 Loss ratio: 2.7396191215621246 Tokens per Sec: 2731.741733156154
Epoch Step: 20 / 67 Loss (mean): 0.1934252108376313 Loss (std): 0.5127458011173985 Loss ratio: 2.6508736834094364 Tokens per Sec: 2873.1152445389034
Epoch Step: 25 / 67 Loss (mean): 0.08936571091817314 Loss (std): 0.1888270301271953 Loss ratio: 2.1129695963599837 Tokens per Sec: 2753.9161022548765
Epoch Step: 30 / 67 Loss (mean): 0.09082229488785742 Loss (std): 0.301343912243071 Loss ratio: 3.317950868948583 Tokens per Sec: 2844.487308032589
Epoch Step: 35 / 67 Loss (mean): 0.22130888351466638 Loss (std): 0.7259573673483058 Loss ratio: 3.280290225223588 Tokens per Sec: 3232.945139394869
Epoch Step: 40 / 67 Loss (mean): 0.7826606603366599 Loss (std): 1.2973470512723584 Loss ratio: 1.657611167928521 Tokens per Sec: 2943.7318916620657
Epoch Step: 45 / 67 Loss (mean): 0.31228348429704056 Loss (std): 0.9796351626340495 Loss ratio: 3.137005995815749 Tokens per Sec: 2864.334703684161
Epoch Step: 50 / 67 Loss (mean): 0.0794495058216853 Loss (std): 0.2738484424145462 Loss ratio: 3.4468237351805 Tokens per Sec: 2872.2677294511363
Epoch Step: 55 / 67 Loss (mean): 0.29568577364443627 Loss (std): 0.6646943317340883 Loss ratio: 2.2479753541791525 Tokens per Sec: 2846.7844933306665
Epoch Step: 60 / 67 Loss (mean): 0.12754099536869035 Loss (std): 0.4106774835488589 Loss ratio: 3.2199645483531714 Tokens per Sec: 2553.3695145556
Epoch Step: 65 / 67 Loss (mean): 0.08148339710714936 Loss (std): 0.3099479489918164 Loss ratio: 3.8038172191598716 Tokens per Sec: 2569.318489957237
Mean loss per sample: 0.5747264738206082 Std loss per sample: 4.26340972414138 ratio: 7.418154406216089
Epoch ended with duration 0:00:11.367858
Train perplexity: 1.0808635747340467
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily use deprecated/removed and sslengine[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 99.7408090531826 Loss (std): 44.91991569060258 Loss ratio: 0.45036646601343405 Tokens per Sec: 4449.5832119382485
Mean loss per sample: 103.5634980449056 Std loss per sample: 54.28927125990277 ratio: 0.5242124134930504
Epoch ended with duration 0:00:01.004713
b'BLEU = 2.81, 8.8/3.1/2.1/1.7 (BP=0.896, ratio=0.901, hyp_len=2804, ref_len=3113)\n'
Validation perplexity: 1245078.3062395114
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.81
Epoch 984 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3598945323619773 Loss (std): 0.744991462257475 Loss ratio: 2.0700271753730677 Tokens per Sec: 2849.681018362084
Epoch Step: 10 / 67 Loss (mean): 0.08394946302109929 Loss (std): 0.20413106988602406 Loss ratio: 2.4315947063856638 Tokens per Sec: 3019.0005773778703
Epoch Step: 15 / 67 Loss (mean): 0.5634523813127998 Loss (std): 1.8749958061316065 Loss ratio: 3.3276916884493652 Tokens per Sec: 2873.019316469365
Epoch Step: 20 / 67 Loss (mean): 0.0868746689143336 Loss (std): 0.32133070837171557 Loss ratio: 3.6987848401307537 Tokens per Sec: 3097.032520123839
Epoch Step: 25 / 67 Loss (mean): 0.12533126338166767 Loss (std): 0.46507745842968723 Loss ratio: 3.710785688111994 Tokens per Sec: 2538.5466270344173
Epoch Step: 30 / 67 Loss (mean): 0.054458101596537745 Loss (std): 0.16975830095357586 Loss ratio: 3.117227666349069 Tokens per Sec: 2703.335375495453
Epoch Step: 35 / 67 Loss (mean): 1.219732515949545 Loss (std): 4.803494688593021 Loss ratio: 3.938154165590615 Tokens per Sec: 2862.1723390940447
Epoch Step: 40 / 67 Loss (mean): 0.14138218016660176 Loss (std): 0.36621897972644835 Loss ratio: 2.5902767894433634 Tokens per Sec: 3012.0944039028345
Epoch Step: 45 / 67 Loss (mean): 0.0736120089875385 Loss (std): 0.20333303106851044 Loss ratio: 2.762226352264505 Tokens per Sec: 2820.1052819874762
Epoch Step: 50 / 67 Loss (mean): 0.7904554994524915 Loss (std): 5.649168731877602 Loss ratio: 7.146725825540457 Tokens per Sec: 2899.4861084425747
Epoch Step: 55 / 67 Loss (mean): 0.04232063277481757 Loss (std): 0.06140129646274266 Loss ratio: 1.4508596029140384 Tokens per Sec: 2626.893070692066
Epoch Step: 60 / 67 Loss (mean): 0.2075372649229621 Loss (std): 0.6559986079706606 Loss ratio: 3.1608714136912592 Tokens per Sec: 2313.7548480279734
Epoch Step: 65 / 67 Loss (mean): 0.3007796564859291 Loss (std): 1.1925221370178294 Loss ratio: 3.9647699280939146 Tokens per Sec: 2730.5404930855802
Mean loss per sample: 0.3608188768155982 Std loss per sample: 2.6066256751999384 ratio: 7.22419430547724
Epoch ended with duration 0:00:11.324899
Train perplexity: 1.0500299536414741
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the print to exception and hint[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.51185351610184 Loss (std): 45.454571025268734 Loss ratio: 0.4522309502330189 Tokens per Sec: 4194.479869176905
Mean loss per sample: 108.51122697143525 Std loss per sample: 54.698608309084925 ratio: 0.5040824791658094
Epoch ended with duration 0:00:01.036466
b'BLEU = 2.25, 7.7/2.4/1.5/1.1 (BP=0.960, ratio=0.961, hyp_len=2991, ref_len=3113)\n'
Validation perplexity: 2434409.7294726893
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.25
Epoch 985 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5739746819690481 Loss (std): 1.3707144868046368 Loss ratio: 2.3881096673155233 Tokens per Sec: 2771.3703544476666
Epoch Step: 10 / 67 Loss (mean): 0.0900745579147042 Loss (std): 0.3168980763643443 Loss ratio: 3.5181752061934057 Tokens per Sec: 2601.2071242602524
Epoch Step: 15 / 67 Loss (mean): 0.2420118827680824 Loss (std): 0.7608870769181291 Loss ratio: 3.1440070967394593 Tokens per Sec: 2581.0729372167407
Epoch Step: 20 / 67 Loss (mean): 0.3155501601991091 Loss (std): 0.937972544194179 Loss ratio: 2.9724990271034164 Tokens per Sec: 2898.777074625045
Epoch Step: 25 / 67 Loss (mean): 0.052259205796872266 Loss (std): 0.14927406492439352 Loss ratio: 2.856416637952956 Tokens per Sec: 3280.458060188952
Epoch Step: 30 / 67 Loss (mean): 0.14926115772141202 Loss (std): 0.4519753073625091 Loss ratio: 3.0280838917657125 Tokens per Sec: 2801.369106542307
Epoch Step: 35 / 67 Loss (mean): 0.0734526165032321 Loss (std): 0.1789723760822016 Loss ratio: 2.4365691053949914 Tokens per Sec: 3175.166160035459
Epoch Step: 40 / 67 Loss (mean): 0.1772273043379755 Loss (std): 0.5551763983490772 Loss ratio: 3.1325669620881116 Tokens per Sec: 3107.59513363882
Epoch Step: 45 / 67 Loss (mean): 0.18249074010464028 Loss (std): 0.6605781986488624 Loss ratio: 3.619790233028188 Tokens per Sec: 2285.0840173860133
Epoch Step: 50 / 67 Loss (mean): 0.09140606387290973 Loss (std): 0.3022423859111403 Loss ratio: 3.3065901003173677 Tokens per Sec: 2879.1115591797306
Epoch Step: 55 / 67 Loss (mean): 0.21266418992581748 Loss (std): 0.4863175729916029 Loss ratio: 2.286786379790798 Tokens per Sec: 2704.1603806264293
Epoch Step: 60 / 67 Loss (mean): 0.5481803308712188 Loss (std): 1.2808842903236202 Loss ratio: 2.3366111810103085 Tokens per Sec: 2650.0048077232314
Epoch Step: 65 / 67 Loss (mean): 0.1656280284787499 Loss (std): 0.5102857676895941 Loss ratio: 3.0809143378474966 Tokens per Sec: 2671.218510087472
Mean loss per sample: 0.30582472131846883 Std loss per sample: 2.139979210934899 ratio: 6.997404270358
Epoch ended with duration 0:00:11.303004
Train perplexity: 1.042245997476133
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print the print error codes[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.38635444641113 Loss (std): 45.971386027624455 Loss ratio: 0.45342774457802537 Tokens per Sec: 4335.035426816215
Mean loss per sample: 106.71570119915194 Std loss per sample: 55.12762757047426 ratio: 0.5165840354419408
Epoch ended with duration 0:00:01.017425
b'BLEU = 2.80, 8.4/2.9/2.0/1.6 (BP=0.935, ratio=0.937, hyp_len=2918, ref_len=3113)\n'
Validation perplexity: 1908616.078506412
Validation accuracy: 0.004098360655737705
Validation BLEU: 2.8
Model saved checkpoint_commit_msg_generator!
Epoch 986 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3271227259481293 Loss (std): 0.982186149328715 Loss ratio: 3.0025005033873944 Tokens per Sec: 2869.5562306323623
Epoch Step: 10 / 67 Loss (mean): 0.19694073101345566 Loss (std): 0.5857885896999186 Loss ratio: 2.974441024390712 Tokens per Sec: 3045.656299121418
Epoch Step: 15 / 67 Loss (mean): 0.6948553111869842 Loss (std): 1.2254562070023851 Loss ratio: 1.7636134994910002 Tokens per Sec: 3621.333399876159
Epoch Step: 20 / 67 Loss (mean): 0.418764633272076 Loss (std): 0.8206053371461173 Loss ratio: 1.959586058483981 Tokens per Sec: 2786.447894251372
Epoch Step: 25 / 67 Loss (mean): 0.14988597242154356 Loss (std): 0.7616415145269876 Loss ratio: 5.0814729505502045 Tokens per Sec: 2789.9204289233912
Epoch Step: 30 / 67 Loss (mean): 0.05724926880611747 Loss (std): 0.12547754208026834 Loss ratio: 2.1917754531540887 Tokens per Sec: 2719.7832766219917
Epoch Step: 35 / 67 Loss (mean): 0.07289919061554428 Loss (std): 0.22466583414255378 Loss ratio: 3.081870076272813 Tokens per Sec: 2769.0460080044786
Epoch Step: 40 / 67 Loss (mean): 0.1855794731145579 Loss (std): 1.150337915464963 Loss ratio: 6.198626907162632 Tokens per Sec: 2231.179085485002
Epoch Step: 45 / 67 Loss (mean): 0.11979981669628614 Loss (std): 0.4002499755924186 Loss ratio: 3.3409898832076137 Tokens per Sec: 2770.1205578610934
Epoch Step: 50 / 67 Loss (mean): 0.16058168749259494 Loss (std): 0.49839765314601103 Loss ratio: 3.103701679364866 Tokens per Sec: 2957.0568858131487
Epoch Step: 55 / 67 Loss (mean): 0.5399663566931849 Loss (std): 3.7879648397894945 Loss ratio: 7.015186766426375 Tokens per Sec: 3091.415003909873
Epoch Step: 60 / 67 Loss (mean): 0.0682817108108793 Loss (std): 0.23974332918589208 Loss ratio: 3.511091423147146 Tokens per Sec: 2502.474046320673
Epoch Step: 65 / 67 Loss (mean): 0.44982117364725127 Loss (std): 1.628552464869524 Loss ratio: 3.6204442126742373 Tokens per Sec: 2636.8623895934556
Mean loss per sample: 0.31722378700573267 Std loss per sample: 2.2745686910319822 ratio: 7.170233709462896
Epoch ended with duration 0:00:11.326329
Train perplexity: 1.0438546836150526
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for provider[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.2262351512909 Loss (std): 44.31246747554214 Loss ratio: 0.4421244338735536 Tokens per Sec: 4437.113649357925
Mean loss per sample: 103.87966286488732 Std loss per sample: 54.12057793027564 ratio: 0.5209930070784731
Epoch ended with duration 0:00:01.005881
b'BLEU = 2.84, 9.0/3.1/2.1/1.6 (BP=0.920, ratio=0.923, hyp_len=2872, ref_len=3113)\n'
Validation perplexity: 1299584.2695522879
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.84
Epoch 987 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.3386604255865677 Loss (std): 0.9173831003817513 Loss ratio: 2.7088582871554077 Tokens per Sec: 2668.82367642341
Epoch Step: 10 / 67 Loss (mean): 0.11365581467771335 Loss (std): 0.35697646997170385 Loss ratio: 3.140855318172322 Tokens per Sec: 2728.0397604700697
Epoch Step: 15 / 67 Loss (mean): 0.04682291649430681 Loss (std): 0.12332548422424984 Loss ratio: 2.633870195574959 Tokens per Sec: 2260.5743612080714
Epoch Step: 20 / 67 Loss (mean): 0.42500859562096593 Loss (std): 1.147579708173298 Loss ratio: 2.7001329384800026 Tokens per Sec: 2589.145915820412
Epoch Step: 25 / 67 Loss (mean): 0.11982588272257999 Loss (std): 0.4356429683399941 Loss ratio: 3.635633290919221 Tokens per Sec: 2994.337276974054
Epoch Step: 30 / 67 Loss (mean): 0.3251619986476726 Loss (std): 1.2406488049833655 Loss ratio: 3.8154790847120585 Tokens per Sec: 2764.162264845985
Epoch Step: 35 / 67 Loss (mean): 0.10688157485310512 Loss (std): 0.5789390186529699 Loss ratio: 5.416640047161043 Tokens per Sec: 2961.651456576592
Epoch Step: 40 / 67 Loss (mean): 0.14045096465952156 Loss (std): 0.40732195231065466 Loss ratio: 2.9001007810667336 Tokens per Sec: 3299.3948836237987
Epoch Step: 45 / 67 Loss (mean): 0.5433919843303556 Loss (std): 3.8928283721773362 Loss ratio: 7.163941472148562 Tokens per Sec: 2641.414337172637
Epoch Step: 50 / 67 Loss (mean): 0.09584756906383518 Loss (std): 0.25654625721721774 Loss ratio: 2.676606821883569 Tokens per Sec: 2794.1805726818075
Epoch Step: 55 / 67 Loss (mean): 0.05452243271508905 Loss (std): 0.119052273723926 Loss ratio: 2.183546621003548 Tokens per Sec: 2741.218824280859
Epoch Step: 60 / 67 Loss (mean): 0.23174892752064125 Loss (std): 0.8102879936771861 Loss ratio: 3.496404502691888 Tokens per Sec: 2717.8292598689764
Epoch Step: 65 / 67 Loss (mean): 0.22007083425432938 Loss (std): 0.6870267502702649 Loss ratio: 3.121843712721552 Tokens per Sec: 3129.724831696136
Mean loss per sample: 0.2412075874486785 Std loss per sample: 1.3047581005158166 ratio: 5.409274701167635
Epoch ended with duration 0:00:11.252870
Train perplexity: 1.0331736904046722
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.2377257347107 Loss (std): 44.927390816404454 Loss ratio: 0.44378111509670654 Tokens per Sec: 4447.693875482188
Mean loss per sample: 105.39996326910179 Std loss per sample: 54.99414703802508 ratio: 0.5217662827606196
Epoch ended with duration 0:00:01.004787
b'BLEU = 2.23, 8.4/2.5/1.5/1.1 (BP=0.923, ratio=0.926, hyp_len=2883, ref_len=3113)\n'
Validation perplexity: 1596912.9456873338
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.23
Epoch 988 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.23409559567699034 Loss (std): 0.6724809646995779 Loss ratio: 2.8726767060901057 Tokens per Sec: 2770.5456932734846
Epoch Step: 10 / 67 Loss (mean): 1.1663803368323897 Loss (std): 6.196834073476886 Loss ratio: 5.3128759786074635 Tokens per Sec: 2646.5416031692844
Epoch Step: 15 / 67 Loss (mean): 0.2154830063564077 Loss (std): 0.7116263933138718 Loss ratio: 3.3024710641768458 Tokens per Sec: 2657.234392285814
Epoch Step: 20 / 67 Loss (mean): 0.16228212792248087 Loss (std): 0.5182427449728042 Loss ratio: 3.1934677688005118 Tokens per Sec: 2560.716466381184
Epoch Step: 25 / 67 Loss (mean): 0.10138130277664459 Loss (std): 0.3422796876279726 Loss ratio: 3.3761618587803772 Tokens per Sec: 2908.3703847172883
Epoch Step: 30 / 67 Loss (mean): 0.2160647615369271 Loss (std): 0.7494432629872241 Loss ratio: 3.4686047722739763 Tokens per Sec: 2718.708256781493
Epoch Step: 35 / 67 Loss (mean): 0.22098489447807879 Loss (std): 0.4189528085043499 Loss ratio: 1.895843648018707 Tokens per Sec: 2944.999587891633
Epoch Step: 40 / 67 Loss (mean): 0.3271645859003911 Loss (std): 0.7537644866291385 Loss ratio: 2.3039305570152098 Tokens per Sec: 3342.8859706642256
Epoch Step: 45 / 67 Loss (mean): 0.3486143777954567 Loss (std): 0.7661027392503598 Loss ratio: 2.197564954420374 Tokens per Sec: 3407.21612137393
Epoch Step: 50 / 67 Loss (mean): 0.5383658396394821 Loss (std): 0.8309770569252278 Loss ratio: 1.5435174294893848 Tokens per Sec: 2718.162214278155
Epoch Step: 55 / 67 Loss (mean): 0.17270366970922169 Loss (std): 0.5314371368496895 Loss ratio: 3.0771618098472455 Tokens per Sec: 2766.7822587596465
Epoch Step: 60 / 67 Loss (mean): 0.0210430093402465 Loss (std): 0.03148660067322737 Loss ratio: 1.4962974241999998 Tokens per Sec: 2178.864742134285
Epoch Step: 65 / 67 Loss (mean): 0.2131064491180723 Loss (std): 0.6546562422606347 Loss ratio: 3.071968234513261 Tokens per Sec: 2910.9484636150432
Mean loss per sample: 0.32658473731752774 Std loss per sample: 2.5095697335504314 ratio: 7.684283577252596
Epoch ended with duration 0:00:11.278014
Train perplexity: 1.0451775985453902
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock to start ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.09260138869286 Loss (std): 46.238041527683116 Loss ratio: 0.4573830418103655 Tokens per Sec: 4447.567317627517
Mean loss per sample: 104.08618330680689 Std loss per sample: 54.82935738285582 ratio: 0.5267688336812151
Epoch ended with duration 0:00:01.005670
b'BLEU = 2.53, 8.8/2.9/1.8/1.4 (BP=0.899, ratio=0.904, hyp_len=2813, ref_len=3113)\n'
Validation perplexity: 1336469.7728342286
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.53
Epoch 989 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.04786374212426381 Loss (std): 0.10757437455822735 Loss ratio: 2.2475128308802694 Tokens per Sec: 2597.833073257574
Epoch Step: 10 / 67 Loss (mean): 0.15548387412673037 Loss (std): 0.7478512151324331 Loss ratio: 4.809831368897339 Tokens per Sec: 3157.997737961758
Epoch Step: 15 / 67 Loss (mean): 0.133976158081623 Loss (std): 0.5498797363297488 Loss ratio: 4.104310380319629 Tokens per Sec: 2552.930649646892
Epoch Step: 20 / 67 Loss (mean): 0.14724089869059753 Loss (std): 0.43644447811508563 Loss ratio: 2.9641525010805707 Tokens per Sec: 2869.934688460365
Epoch Step: 25 / 67 Loss (mean): 0.12402759338419855 Loss (std): 0.4223008643186949 Loss ratio: 3.404894449661209 Tokens per Sec: 2811.5033330546203
Epoch Step: 30 / 67 Loss (mean): 0.1377262453520416 Loss (std): 0.4287497462374239 Loss ratio: 3.1130576829528613 Tokens per Sec: 2777.9050500046837
Epoch Step: 35 / 67 Loss (mean): 0.7013147364286851 Loss (std): 1.2709745883248946 Loss ratio: 1.8122741792038997 Tokens per Sec: 3343.5393587409053
Epoch Step: 40 / 67 Loss (mean): 0.11702294602446273 Loss (std): 0.3140256617961193 Loss ratio: 2.683453736760949 Tokens per Sec: 2606.3676928723717
Epoch Step: 45 / 67 Loss (mean): 0.22860166481905253 Loss (std): 0.6543174215908798 Loss ratio: 2.8622600894389745 Tokens per Sec: 2882.4644281871733
Epoch Step: 50 / 67 Loss (mean): 0.09598882538557518 Loss (std): 0.32439963841513964 Loss ratio: 3.379556288058184 Tokens per Sec: 3410.29789721908
Epoch Step: 55 / 67 Loss (mean): 0.11689709331585618 Loss (std): 0.32405885408904844 Loss ratio: 2.7721720437773483 Tokens per Sec: 2500.1436361531573
Epoch Step: 60 / 67 Loss (mean): 0.37322915221920994 Loss (std): 0.8469346073048197 Loss ratio: 2.269208078385546 Tokens per Sec: 2750.750488156147
Epoch Step: 65 / 67 Loss (mean): 0.208791438551998 Loss (std): 0.6722561014101992 Loss ratio: 3.219749363634844 Tokens per Sec: 2509.977299031871
Mean loss per sample: 0.24264392234050694 Std loss per sample: 1.5778517805401069 ratio: 6.502745938659353
Epoch ended with duration 0:00:11.276532
Train perplexity: 1.033374492448792
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for developer[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.15303787589073 Loss (std): 44.948024286941525 Loss ratio: 0.44435664247761203 Tokens per Sec: 4188.347239481626
Mean loss per sample: 108.8257510686507 Std loss per sample: 55.25004477868897 ratio: 0.507692749520612
Epoch ended with duration 0:00:01.037202
b'BLEU = 2.78, 9.3/3.0/1.9/1.5 (BP=0.923, ratio=0.925, hyp_len=2881, ref_len=3113)\n'
Validation perplexity: 2540416.2996108495
Validation accuracy: 0.0
Validation BLEU: 2.78
Epoch 990 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.13758726825381018 Loss (std): 0.4312226324022952 Loss ratio: 3.1341754064541028 Tokens per Sec: 2629.677332704857
Epoch Step: 10 / 67 Loss (mean): 0.16241507708105019 Loss (std): 0.8697754704713784 Loss ratio: 5.355263107976936 Tokens per Sec: 2616.761534883684
Epoch Step: 15 / 67 Loss (mean): 0.058879054054159496 Loss (std): 0.12441122292730471 Loss ratio: 2.1129962925842167 Tokens per Sec: 2841.5372818004485
Epoch Step: 20 / 67 Loss (mean): 0.39321508340344735 Loss (std): 0.9770922327042479 Loss ratio: 2.484879837892001 Tokens per Sec: 2678.7021000842124
Epoch Step: 25 / 67 Loss (mean): 0.23621587563957291 Loss (std): 0.6151527165386476 Loss ratio: 2.6041971771502386 Tokens per Sec: 2481.247125241334
Epoch Step: 30 / 67 Loss (mean): 0.14877989468459418 Loss (std): 0.4597178464676699 Loss ratio: 3.0899191550192207 Tokens per Sec: 3020.012586686668
Epoch Step: 35 / 67 Loss (mean): 0.5827914751298522 Loss (std): 4.00764614443395 Loss ratio: 6.876638241046686 Tokens per Sec: 3218.893227756317
Epoch Step: 40 / 67 Loss (mean): 0.18079722197626324 Loss (std): 0.5991867958185515 Loss ratio: 3.3141371823579147 Tokens per Sec: 2311.412626775049
Epoch Step: 45 / 67 Loss (mean): 0.20657275916710205 Loss (std): 0.5724579432929997 Loss ratio: 2.7712170065459776 Tokens per Sec: 2439.2794544832946
Epoch Step: 50 / 67 Loss (mean): 0.19000962916845765 Loss (std): 0.5291271947295374 Loss ratio: 2.7847388421585038 Tokens per Sec: 3149.2036141395756
Epoch Step: 55 / 67 Loss (mean): 0.08164441100961994 Loss (std): 0.23298503767697484 Loss ratio: 2.85365568562339 Tokens per Sec: 3049.1008486034284
Epoch Step: 60 / 67 Loss (mean): 0.20508531922973816 Loss (std): 0.4190798915030148 Loss ratio: 2.04344169088748 Tokens per Sec: 3092.5263658939616
Epoch Step: 65 / 67 Loss (mean): 0.20707904173468705 Loss (std): 0.5940463329268054 Loss ratio: 2.868693654126075 Tokens per Sec: 2990.0843665895013
Mean loss per sample: 0.3587795192086076 Std loss per sample: 2.6242271025980095 ratio: 7.314316905230555
Epoch ended with duration 0:00:11.333600
Train perplexity: 1.0497402646173064
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.78912332654 Loss (std): 46.27264571311388 Loss ratio: 0.45910356381608963 Tokens per Sec: 4440.844413526988
Mean loss per sample: 105.66708291053284 Std loss per sample: 55.72718384555543 ratio: 0.5273845204257132
Epoch ended with duration 0:00:01.019867
b'BLEU = 2.68, 8.9/3.1/1.9/1.4 (BP=0.919, ratio=0.922, hyp_len=2871, ref_len=3113)\n'
Validation perplexity: 1655779.429874555
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.68
Model saved checkpoint_commit_msg_generator!
Epoch 991 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.14878840017627226 Loss (std): 0.6949243106717796 Loss ratio: 4.6705543567139 Tokens per Sec: 2577.516750805843
Epoch Step: 10 / 67 Loss (mean): 0.07646765396293631 Loss (std): 0.19502587047755873 Loss ratio: 2.5504361696788465 Tokens per Sec: 2409.828942386732
Epoch Step: 15 / 67 Loss (mean): 0.1381546404090841 Loss (std): 0.34674664589616505 Loss ratio: 2.509844366207517 Tokens per Sec: 2613.756263873729
Epoch Step: 20 / 67 Loss (mean): 0.24450697185829995 Loss (std): 0.6757577580597974 Loss ratio: 2.763756603437148 Tokens per Sec: 3399.6215847463327
Epoch Step: 25 / 67 Loss (mean): 0.027783867258676764 Loss (std): 0.03388450764280824 Loss ratio: 1.2195749183269753 Tokens per Sec: 2632.96480406444
Epoch Step: 30 / 67 Loss (mean): 0.4017203635576152 Loss (std): 0.8860303797174875 Loss ratio: 2.205589908041622 Tokens per Sec: 3274.2711845230974
Epoch Step: 35 / 67 Loss (mean): 0.11733400290631835 Loss (std): 0.3470205469867957 Loss ratio: 2.9575446025127374 Tokens per Sec: 2904.026341185692
Epoch Step: 40 / 67 Loss (mean): 0.2784446972009391 Loss (std): 0.7780624952761106 Loss ratio: 2.79431608178418 Tokens per Sec: 2876.0007669297615
Epoch Step: 45 / 67 Loss (mean): 0.1598664208529499 Loss (std): 0.5679867782681937 Loss ratio: 3.552883558897247 Tokens per Sec: 3132.7368070769503
Epoch Step: 50 / 67 Loss (mean): 0.1868124571019507 Loss (std): 0.5610119460845802 Loss ratio: 3.0030756770059206 Tokens per Sec: 2596.3284491460545
Epoch Step: 55 / 67 Loss (mean): 0.13483839348555193 Loss (std): 0.7197101224006669 Loss ratio: 5.337575625133687 Tokens per Sec: 2948.636815422229
Epoch Step: 60 / 67 Loss (mean): 0.042053324096286815 Loss (std): 0.05537555268888914 Loss ratio: 1.316793710815803 Tokens per Sec: 2567.09789318029
Epoch Step: 65 / 67 Loss (mean): 0.16308478657356318 Loss (std): 0.49959414111795536 Loss ratio: 3.0634012627082283 Tokens per Sec: 2706.1937356965213
Mean loss per sample: 0.24903970181777546 Std loss per sample: 1.5901016656876743 ratio: 6.384932418732037
Epoch ended with duration 0:00:11.312959
Train perplexity: 1.0342691071282508
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print statement unnecessarily nested within ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.46295645833015 Loss (std): 45.14937353028693 Loss ratio: 0.44498381583065083 Tokens per Sec: 4418.785725833739
Mean loss per sample: 105.00973994028372 Std loss per sample: 54.55132213544002 ratio: 0.5194882128692245
Epoch ended with duration 0:00:01.008948
b'BLEU = 2.15, 8.3/2.4/1.4/1.0 (BP=0.931, ratio=0.934, hyp_len=2906, ref_len=3113)\n'
Validation perplexity: 1514658.6589903692
Validation accuracy: 0.0
Validation BLEU: 2.15
Epoch 992 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.10546362245440832 Loss (std): 0.3175608305915458 Loss ratio: 3.011093524014184 Tokens per Sec: 2791.9048535629386
Epoch Step: 10 / 67 Loss (mean): 0.19265253906064572 Loss (std): 0.5949760278042876 Loss ratio: 3.088337328463619 Tokens per Sec: 2770.8588147065734
Epoch Step: 15 / 67 Loss (mean): 0.0335058152670058 Loss (std): 0.05809119368091931 Loss ratio: 1.7337645187259025 Tokens per Sec: 2638.4593468448084
Epoch Step: 20 / 67 Loss (mean): 0.24829544475005605 Loss (std): 0.5777427015538898 Loss ratio: 2.3268356861539217 Tokens per Sec: 2355.6142501613735
Epoch Step: 25 / 67 Loss (mean): 0.21083478340642614 Loss (std): 0.5775429108216269 Loss ratio: 2.7393151238631135 Tokens per Sec: 2613.099202644424
Epoch Step: 30 / 67 Loss (mean): 0.08595674948446685 Loss (std): 0.2903780024286212 Loss ratio: 3.3781873345628908 Tokens per Sec: 3532.953925687801
Epoch Step: 35 / 67 Loss (mean): 0.16936745941393383 Loss (std): 0.513646573151241 Loss ratio: 3.032734711429363 Tokens per Sec: 2417.536613294218
Epoch Step: 40 / 67 Loss (mean): 1.9605676609701277 Loss (std): 7.274053048410449 Loss ratio: 3.710177002925318 Tokens per Sec: 3073.515672811676
Epoch Step: 45 / 67 Loss (mean): 0.15968691524403766 Loss (std): 0.552531451819037 Loss ratio: 3.460092212155543 Tokens per Sec: 2894.850323870588
Epoch Step: 50 / 67 Loss (mean): 0.03689275361273303 Loss (std): 0.06253772036324048 Loss ratio: 1.6951220562093376 Tokens per Sec: 2549.0489025841744
Epoch Step: 55 / 67 Loss (mean): 0.18459162212548108 Loss (std): 0.5153057844444904 Loss ratio: 2.7915989821802287 Tokens per Sec: 2642.616817642916
Epoch Step: 60 / 67 Loss (mean): 0.3542184732793885 Loss (std): 0.9755227018643683 Loss ratio: 2.7540141902619757 Tokens per Sec: 3161.681723606803
Epoch Step: 65 / 67 Loss (mean): 0.252733186441219 Loss (std): 0.7044488916721248 Loss ratio: 2.7873224786645356 Tokens per Sec: 3206.6201686990667
Mean loss per sample: 0.2819215833288354 Std loss per sample: 1.8421865540864573 ratio: 6.534393473300402
Epoch ended with duration 0:00:11.339916
Train perplexity: 1.0388807271892109
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print in method_1 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link to appear before scrolling[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 102.16655611991882 Loss (std): 45.27036397297393 Loss ratio: 0.44310355259344825 Tokens per Sec: 4424.506333951226
Mean loss per sample: 105.57779161265638 Std loss per sample: 54.80305975914067 ratio: 0.5190775344136961
Epoch ended with duration 0:00:01.009033
b'BLEU = 2.86, 9.8/3.1/1.9/1.5 (BP=0.938, ratio=0.940, hyp_len=2925, ref_len=3113)\n'
Validation perplexity: 1635864.2898923594
Validation accuracy: 0.0
Validation BLEU: 2.86
Epoch 993 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.5898984430646124 Loss (std): 4.243528122165154 Loss ratio: 7.193658793400739 Tokens per Sec: 2917.383959805278
Epoch Step: 10 / 67 Loss (mean): 0.6394805342310974 Loss (std): 0.8508800758320023 Loss ratio: 1.3305801041388834 Tokens per Sec: 3134.97123362431
Epoch Step: 15 / 67 Loss (mean): 0.09456483238773217 Loss (std): 0.27653488224658523 Loss ratio: 2.9242888213743603 Tokens per Sec: 2414.6937008284244
Epoch Step: 20 / 67 Loss (mean): 0.20431771897392537 Loss (std): 0.5099702173435013 Loss ratio: 2.4959666733974393 Tokens per Sec: 3097.3002984546247
Epoch Step: 25 / 67 Loss (mean): 0.6427969935612055 Loss (std): 4.623662714676905 Loss ratio: 7.193037243470946 Tokens per Sec: 2401.9901569392787
Epoch Step: 30 / 67 Loss (mean): 0.3500925132730117 Loss (std): 0.9936135918457595 Loss ratio: 2.8381457876847325 Tokens per Sec: 2860.2856609323776
Epoch Step: 35 / 67 Loss (mean): 0.1083080039293236 Loss (std): 0.29871375807798006 Loss ratio: 2.7580026151428823 Tokens per Sec: 2196.2667041880313
Epoch Step: 40 / 67 Loss (mean): 0.06692265117726492 Loss (std): 0.22803049736778086 Loss ratio: 3.4073739362741766 Tokens per Sec: 2816.433777241304
Epoch Step: 45 / 67 Loss (mean): 0.6447955593907864 Loss (std): 2.4262313675540668 Loss ratio: 3.7627916821362897 Tokens per Sec: 2914.2470709178265
Epoch Step: 50 / 67 Loss (mean): 0.16863439943699632 Loss (std): 0.35339184184864864 Loss ratio: 2.095609454704879 Tokens per Sec: 3675.5670747226854
Epoch Step: 55 / 67 Loss (mean): 1.5253184343488329 Loss (std): 11.702737945047808 Loss ratio: 7.672324467804504 Tokens per Sec: 2380.8539890635825
Epoch Step: 60 / 67 Loss (mean): 0.23729710710904328 Loss (std): 1.0666502312251458 Loss ratio: 4.494998882287243 Tokens per Sec: 2775.752072627824
Epoch Step: 65 / 67 Loss (mean): 0.15714265489805257 Loss (std): 0.7383730023486659 Loss ratio: 4.698743335014231 Tokens per Sec: 3147.2538205231144
Mean loss per sample: 0.28972742634374704 Std loss per sample: 2.3287622270404 ratio: 8.037769349034429
Epoch ended with duration 0:00:11.422664
Train perplexity: 1.0399784981500233
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog for developer[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.08483344316483 Loss (std): 45.353467080704284 Loss ratio: 0.44866737705221005 Tokens per Sec: 4421.594342291372
Mean loss per sample: 104.73408366385542 Std loss per sample: 54.66426990016033 ratio: 0.5219339109855163
Epoch ended with duration 0:00:01.007366
b'BLEU = 2.94, 9.6/3.2/2.2/1.6 (BP=0.907, ratio=0.911, hyp_len=2836, ref_len=3113)\n'
Validation perplexity: 1459120.3338159171
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.94
Epoch 994 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.18281911062604195 Loss (std): 0.5005456105041265 Loss ratio: 2.737928265759901 Tokens per Sec: 2971.2627584253087
Epoch Step: 10 / 67 Loss (mean): 0.1297295677134116 Loss (std): 0.5336700928264281 Loss ratio: 4.113712103052484 Tokens per Sec: 2302.2883064771872
Epoch Step: 15 / 67 Loss (mean): 0.5264662892612932 Loss (std): 3.901790359350992 Loss ratio: 7.411282429546926 Tokens per Sec: 2583.8275822942674
Epoch Step: 20 / 67 Loss (mean): 11.77599169025234 Loss (std): 17.4191384803036 Loss ratio: 1.4792077761673708 Tokens per Sec: 2576.2054116614763
Epoch Step: 25 / 67 Loss (mean): 0.09661681586612758 Loss (std): 0.28412579299308155 Loss ratio: 2.9407488794369576 Tokens per Sec: 2868.990052311925
Epoch Step: 30 / 67 Loss (mean): 0.12201134696783811 Loss (std): 0.4515217644188108 Loss ratio: 3.7006538788382595 Tokens per Sec: 2884.595268884149
Epoch Step: 35 / 67 Loss (mean): 1.3469535517829172 Loss (std): 7.894547120666166 Loss ratio: 5.861038868204786 Tokens per Sec: 2438.9045578924215
Epoch Step: 40 / 67 Loss (mean): 0.5482862342037151 Loss (std): 2.8469614712726257 Loss ratio: 5.192473007109714 Tokens per Sec: 2545.8030931481635
Epoch Step: 45 / 67 Loss (mean): 0.2832737719118086 Loss (std): 0.6928440937455868 Loss ratio: 2.445846253500975 Tokens per Sec: 2481.576612315429
Epoch Step: 50 / 67 Loss (mean): 0.07284765385247738 Loss (std): 0.25357209349082854 Loss ratio: 3.48085463403301 Tokens per Sec: 3434.8525953941917
Epoch Step: 55 / 67 Loss (mean): 0.3347462019610248 Loss (std): 0.6981787568836856 Loss ratio: 2.0856958280440057 Tokens per Sec: 3767.5732239731
Epoch Step: 60 / 67 Loss (mean): 0.28852087889617906 Loss (std): 0.7572990477008582 Loss ratio: 2.6247634160762545 Tokens per Sec: 2884.9722062171377
Epoch Step: 65 / 67 Loss (mean): 0.33746977031933056 Loss (std): 1.5675579918478022 Loss ratio: 4.645032325012404 Tokens per Sec: 2767.331450468066
Mean loss per sample: 0.7451422871382917 Std loss per sample: 4.747473850407352 ratio: 6.371231283410257
Epoch ended with duration 0:00:11.447696
Train perplexity: 1.1060748075636095
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print to use accounts and sslengine[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add support for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.15366926789284 Loss (std): 44.99751997659818 Loss ratio: 0.4448431806999297 Tokens per Sec: 4314.602721929936
Mean loss per sample: 106.19759739361336 Std loss per sample: 53.39115156434902 ratio: 0.502752914140409
Epoch ended with duration 0:00:01.024181
b'BLEU = 2.66, 8.8/2.9/1.8/1.3 (BP=0.939, ratio=0.941, hyp_len=2929, ref_len=3113)\n'
Validation perplexity: 1779203.9896230882
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.66
Epoch 995 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.24483213666781012 Loss (std): 0.9699838061947672 Loss ratio: 3.9618320511201834 Tokens per Sec: 2616.6122892424446
Epoch Step: 10 / 67 Loss (mean): 0.023918253490895342 Loss (std): 0.04801929969391984 Loss ratio: 2.007642393797638 Tokens per Sec: 2614.758696746557
Epoch Step: 15 / 67 Loss (mean): 0.12181221111040941 Loss (std): 0.4315906202463214 Loss ratio: 3.5430817346803747 Tokens per Sec: 2740.1563105959767
Epoch Step: 20 / 67 Loss (mean): 0.1416845420668551 Loss (std): 0.42313598582103684 Loss ratio: 2.986465422751456 Tokens per Sec: 3284.980168777203
Epoch Step: 25 / 67 Loss (mean): 0.29296169552799256 Loss (std): 1.2005345047243305 Loss ratio: 4.097923117766839 Tokens per Sec: 2690.7444078166504
Epoch Step: 30 / 67 Loss (mean): 0.21834129712124195 Loss (std): 1.0392736660801019 Loss ratio: 4.7598584408107065 Tokens per Sec: 2830.1654298775493
Epoch Step: 35 / 67 Loss (mean): 0.3359929623841822 Loss (std): 2.003030287046872 Loss ratio: 5.96152452966131 Tokens per Sec: 2461.8339307783103
Epoch Step: 40 / 67 Loss (mean): 0.3752796117678372 Loss (std): 0.8273552417153617 Loss ratio: 2.204636798194079 Tokens per Sec: 3367.2466313624245
Epoch Step: 45 / 67 Loss (mean): 0.48339580152696726 Loss (std): 0.7573430651227516 Loss ratio: 1.566714197207403 Tokens per Sec: 3175.0406931876464
Epoch Step: 50 / 67 Loss (mean): 1.236539345662095 Loss (std): 1.786194330376315 Loss ratio: 1.4445107118042506 Tokens per Sec: 3342.906214923486
Epoch Step: 55 / 67 Loss (mean): 0.08757884070109867 Loss (std): 0.19070009481432634 Loss ratio: 2.1774676769834658 Tokens per Sec: 2773.9342392239155
Epoch Step: 60 / 67 Loss (mean): 0.3081981443942823 Loss (std): 0.790829756869721 Loss ratio: 2.5659783202912516 Tokens per Sec: 2733.445945319567
Epoch Step: 65 / 67 Loss (mean): 0.04357028407116559 Loss (std): 0.08898385218627101 Loss ratio: 2.0423059909577157 Tokens per Sec: 2373.441995036433
Mean loss per sample: 0.34155831949781335 Std loss per sample: 2.2736127224687745 ratio: 6.656587155633111
Epoch ended with duration 0:00:11.333727
Train perplexity: 1.0472971925442012
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: enable shallow print in method_1 ( ) , ( ) )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.26940786838531 Loss (std): 44.607994962700914 Loss ratio: 0.440488355779424 Tokens per Sec: 4313.624087333142
Mean loss per sample: 108.93865410678211 Std loss per sample: 54.99958996073176 ratio: 0.5048675367957175
Epoch ended with duration 0:00:01.042009
b'BLEU = 2.74, 8.1/2.9/1.8/1.4 (BP=0.974, ratio=0.974, hyp_len=3032, ref_len=3113)\n'
Validation perplexity: 2579584.52472261
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.74
Model saved checkpoint_commit_msg_generator!
Epoch 996 / 1000
Epoch Step: 5 / 67 Loss (mean): 4.3272738488008144 Loss (std): 10.891519294521446 Loss ratio: 2.51694708379497 Tokens per Sec: 2721.0251667714906
Epoch Step: 10 / 67 Loss (mean): 1.0687176088850947 Loss (std): 1.3398759164140401 Loss ratio: 1.2537230651713718 Tokens per Sec: 3206.728487981094
Epoch Step: 15 / 67 Loss (mean): 0.11532078620120956 Loss (std): 0.36906168422745905 Loss ratio: 3.200304961358199 Tokens per Sec: 2601.686974438637
Epoch Step: 20 / 67 Loss (mean): 0.25119588093224365 Loss (std): 0.9623815437722502 Loss ratio: 3.831199541173361 Tokens per Sec: 2523.0190021858834
Epoch Step: 25 / 67 Loss (mean): 0.11843975695956033 Loss (std): 0.33237821289201314 Loss ratio: 2.806306103832172 Tokens per Sec: 2698.804281054612
Epoch Step: 30 / 67 Loss (mean): 0.15461140964680453 Loss (std): 0.497811812298327 Loss ratio: 3.2197611640404293 Tokens per Sec: 2815.194250060707
Epoch Step: 35 / 67 Loss (mean): 0.14949906082802045 Loss (std): 0.3567579874166839 Loss ratio: 2.38635604425026 Tokens per Sec: 2745.1071031579886
Epoch Step: 40 / 67 Loss (mean): 0.8086926122246041 Loss (std): 4.515205978542352 Loss ratio: 5.583340208984512 Tokens per Sec: 2463.281050136201
Epoch Step: 45 / 67 Loss (mean): 0.31078798297858157 Loss (std): 0.787811693619912 Loss ratio: 2.5348846698303817 Tokens per Sec: 3403.204280941593
Epoch Step: 50 / 67 Loss (mean): 0.179768156602222 Loss (std): 0.49872665388442566 Loss ratio: 2.77427695377648 Tokens per Sec: 2971.8850594336586
Epoch Step: 55 / 67 Loss (mean): 0.2279373444951034 Loss (std): 0.9006425332515116 Loss ratio: 3.951272378146265 Tokens per Sec: 2641.7175973953986
Epoch Step: 60 / 67 Loss (mean): 0.12681732727651251 Loss (std): 0.4151888678003702 Loss ratio: 3.2739127745145766 Tokens per Sec: 3239.3825694645407
Epoch Step: 65 / 67 Loss (mean): 0.07451223763473536 Loss (std): 0.2972755664875424 Loss ratio: 3.9896207109603896 Tokens per Sec: 2346.380531579999
Mean loss per sample: 0.37574361475126017 Std loss per sample: 2.850741989242692 ratio: 7.586933955297855
Epoch ended with duration 0:00:11.386800
Train perplexity: 1.052152434804362
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print to upstream use ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options link[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.69888424873352 Loss (std): 45.144816728499016 Loss ratio: 0.44831496461259746 Tokens per Sec: 4430.190760891227
Mean loss per sample: 105.48230483011174 Std loss per sample: 54.93446183655859 ratio: 0.5207931503301453
Epoch ended with duration 0:00:01.019918
b'BLEU = 2.85, 8.7/3.1/2.0/1.5 (BP=0.945, ratio=0.946, hyp_len=2945, ref_len=3113)\n'
Validation perplexity: 1614832.3011514265
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.85
Epoch 997 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.13343367176184984 Loss (std): 0.39935929973636203 Loss ratio: 2.9929424444613333 Tokens per Sec: 3034.1016626983705
Epoch Step: 10 / 67 Loss (mean): 0.1669894126662257 Loss (std): 0.4581083527227037 Loss ratio: 2.743337708710668 Tokens per Sec: 2502.6676518729646
Epoch Step: 15 / 67 Loss (mean): 0.14702653524182097 Loss (std): 0.5077542737842571 Loss ratio: 3.4534873106349915 Tokens per Sec: 2863.530734122814
Epoch Step: 20 / 67 Loss (mean): 0.480407534130336 Loss (std): 0.8155547026360812 Loss ratio: 1.6976309584995368 Tokens per Sec: 2798.316895463682
Epoch Step: 25 / 67 Loss (mean): 0.15140908192779534 Loss (std): 0.549205624854662 Loss ratio: 3.6272964465669877 Tokens per Sec: 2334.42991332406
Epoch Step: 30 / 67 Loss (mean): 0.07506648395838056 Loss (std): 0.24164127806336752 Loss ratio: 3.219030189256523 Tokens per Sec: 2325.923316579542
Epoch Step: 35 / 67 Loss (mean): 0.2066669051810095 Loss (std): 0.790574689855235 Loss ratio: 3.8253569876744855 Tokens per Sec: 2669.431257699116
Epoch Step: 40 / 67 Loss (mean): 0.43884977727475416 Loss (std): 1.253698999375284 Loss ratio: 2.8567839481672355 Tokens per Sec: 3260.062632233383
Epoch Step: 45 / 67 Loss (mean): 1.4726236110070658 Loss (std): 6.252622959906002 Loss ratio: 4.245907041806897 Tokens per Sec: 2997.417629752602
Epoch Step: 50 / 67 Loss (mean): 0.1495832224309197 Loss (std): 0.6254926372151879 Loss ratio: 4.181569477178845 Tokens per Sec: 3421.746256272901
Epoch Step: 55 / 67 Loss (mean): 0.06639056067456295 Loss (std): 0.22270763414547734 Loss ratio: 3.354507506528803 Tokens per Sec: 2365.8869521235174
Epoch Step: 60 / 67 Loss (mean): 0.08452684305166258 Loss (std): 0.35698267586961574 Loss ratio: 4.223305437438719 Tokens per Sec: 2315.2095038099237
Epoch Step: 65 / 67 Loss (mean): 0.3747624967545562 Loss (std): 0.8248664261409553 Loss ratio: 2.20103781270618 Tokens per Sec: 3645.841250967677
Mean loss per sample: 0.29035813651624 Std loss per sample: 1.7498432782135136 ratio: 6.026499891507753
Epoch ended with duration 0:00:11.333884
Train perplexity: 1.0400672484044176
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a wait for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.76410210132599 Loss (std): 45.680666433628005 Loss ratio: 0.4533426635181308 Tokens per Sec: 4435.439406421565
Mean loss per sample: 104.64471808782794 Std loss per sample: 55.055650101754544 ratio: 0.5261197230761951
Epoch ended with duration 0:00:01.007149
b'BLEU = 2.94, 9.4/3.3/2.2/1.6 (BP=0.906, ratio=0.910, hyp_len=2834, ref_len=3113)\n'
Validation perplexity: 1441556.030342828
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.94
Epoch 998 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.06426844674706444 Loss (std): 0.14829857347015732 Loss ratio: 2.307486503506187 Tokens per Sec: 3016.50886973052
Epoch Step: 10 / 67 Loss (mean): 0.289718811176499 Loss (std): 0.5594080957409865 Loss ratio: 1.9308656330230163 Tokens per Sec: 3005.474299398178
Epoch Step: 15 / 67 Loss (mean): 0.9019198098510515 Loss (std): 6.285813604716169 Loss ratio: 6.969370819955985 Tokens per Sec: 2546.5865692876496
Epoch Step: 20 / 67 Loss (mean): 0.098194175079243 Loss (std): 0.2990185584162583 Loss ratio: 3.045176133665255 Tokens per Sec: 3022.9820131858974
Epoch Step: 25 / 67 Loss (mean): 0.09009346358539005 Loss (std): 0.2949813021883498 Loss ratio: 3.274169850388405 Tokens per Sec: 2717.903836982391
Epoch Step: 30 / 67 Loss (mean): 0.11312380060189753 Loss (std): 0.34778182687268916 Loss ratio: 3.0743470871933867 Tokens per Sec: 3678.794713393815
Epoch Step: 35 / 67 Loss (mean): 0.043515230874163535 Loss (std): 0.09781958456372293 Loss ratio: 2.247938999717033 Tokens per Sec: 2760.3546407718036
Epoch Step: 40 / 67 Loss (mean): 0.03335111732758378 Loss (std): 0.06635979005090253 Loss ratio: 1.9897321399789567 Tokens per Sec: 2674.1598292861995
Epoch Step: 45 / 67 Loss (mean): 0.06641062466610492 Loss (std): 0.19637965445133304 Loss ratio: 2.957051758490122 Tokens per Sec: 2673.6217750742762
Epoch Step: 50 / 67 Loss (mean): 0.16179206641027122 Loss (std): 0.5201701494044546 Loss ratio: 3.2150535001228717 Tokens per Sec: 2880.6054663084246
Epoch Step: 55 / 67 Loss (mean): 0.10832982154761339 Loss (std): 0.3570368265606767 Loss ratio: 3.2958313921319533 Tokens per Sec: 2526.1325845766914
Epoch Step: 60 / 67 Loss (mean): 0.07894504954811055 Loss (std): 0.25639379845918403 Loss ratio: 3.2477501746696986 Tokens per Sec: 2879.5885253963206
Epoch Step: 65 / 67 Loss (mean): 0.11625157749404025 Loss (std): 0.38862019010232923 Loss ratio: 3.3429240142762984 Tokens per Sec: 2556.381495543632
Mean loss per sample: 0.2631830321671019 Std loss per sample: 1.826848298198035 ratio: 6.941360478885737
Epoch ended with duration 0:00:11.278394
Train perplexity: 1.0362501675214688
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock acquire ) to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add support for developer options[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 100.87678480148315 Loss (std): 45.841670985864944 Loss ratio: 0.45443231637563997 Tokens per Sec: 4436.389497329096
Mean loss per sample: 105.10874120768953 Std loss per sample: 55.13141425021705 ratio: 0.5245178813556541
Epoch ended with duration 0:00:01.006483
b'BLEU = 2.61, 8.7/2.9/1.7/1.4 (BP=0.936, ratio=0.938, hyp_len=2919, ref_len=3113)\n'
Validation perplexity: 1535116.9253310545
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.61
Epoch 999 / 1000
Epoch Step: 5 / 67 Loss (mean): 0.16080184089560134 Loss (std): 0.5375013000030398 Loss ratio: 3.342631508503724 Tokens per Sec: 2970.1220609120323
Epoch Step: 10 / 67 Loss (mean): 0.48347706973299864 Loss (std): 1.0534702374881006 Loss ratio: 2.1789456076373632 Tokens per Sec: 2674.9014141890093
Epoch Step: 15 / 67 Loss (mean): 0.336282023176409 Loss (std): 1.5722135565103699 Loss ratio: 4.6752827928765255 Tokens per Sec: 2448.0556877003132
Epoch Step: 20 / 67 Loss (mean): 0.39636412725621994 Loss (std): 0.898148672894647 Loss ratio: 2.265968616060102 Tokens per Sec: 2621.7657507359895
Epoch Step: 25 / 67 Loss (mean): 0.2097194646216849 Loss (std): 0.7962785260622823 Loss ratio: 3.7968746844681176 Tokens per Sec: 2736.0581104730622
Epoch Step: 30 / 67 Loss (mean): 0.3268462225237272 Loss (std): 0.9133476474097395 Loss ratio: 2.794426199444406 Tokens per Sec: 3128.9922840341637
Epoch Step: 35 / 67 Loss (mean): 0.3593470398777754 Loss (std): 0.7868032024789229 Loss ratio: 2.1895357834213356 Tokens per Sec: 2995.3371661999367
Epoch Step: 40 / 67 Loss (mean): 0.039828792044318106 Loss (std): 0.14969157345284798 Loss ratio: 3.7583759328247734 Tokens per Sec: 3231.7389204803976
Epoch Step: 45 / 67 Loss (mean): 0.14797913816892105 Loss (std): 0.4585898375182973 Loss ratio: 3.0990168154298083 Tokens per Sec: 2697.1924990462144
Epoch Step: 50 / 67 Loss (mean): 0.14531901909595035 Loss (std): 0.34369074142539324 Loss ratio: 2.36507749339034 Tokens per Sec: 3260.6692428387296
Epoch Step: 55 / 67 Loss (mean): 0.23788004752987035 Loss (std): 0.6390907925844477 Loss ratio: 2.686609487515752 Tokens per Sec: 2643.02045757398
Epoch Step: 60 / 67 Loss (mean): 0.09883403500134591 Loss (std): 0.3514428056449158 Loss ratio: 3.555888471417057 Tokens per Sec: 2614.3190624305767
Epoch Step: 65 / 67 Loss (mean): 0.1060280719941602 Loss (std): 0.36875029644561896 Loss ratio: 3.477855340667978 Tokens per Sec: 2321.591364624924
Mean loss per sample: 0.25498141650573203 Std loss per sample: 1.742333578147323 ratio: 6.833178676408188
Epoch ended with duration 0:00:11.322979
Train perplexity: 1.0351009030869918
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: print lock scope to 0.11.0[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a dummy statslog class[0m
Example #3[0m
Src : public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws java.io.IOException { return TYPE_1 . METHOD_1 ( VAR_1 , STRING_1 ) ; }[0m
Trg : fixes password prompt for admin user[0m
Pred: added colon and space after new password prompt in engine-config[0m
Epoch Step: 5 / 8 Loss (mean): 101.92672300338745 Loss (std): 47.33300994150443 Loss ratio: 0.46438273052231216 Tokens per Sec: 4324.1967045308165
Mean loss per sample: 107.5283681399143 Std loss per sample: 55.88435327677746 ratio: 0.5197173010573505
Epoch ended with duration 0:00:01.020968
b'BLEU = 2.63, 8.8/3.0/1.9/1.5 (BP=0.897, ratio=0.902, hyp_len=2807, ref_len=3113)\n'
Validation perplexity: 2130825.237043006
Validation accuracy: 0.0020491803278688526
Validation BLEU: 2.63
{'train_ppl': [2935.510610243712, 654.3058594261507, 518.5689709055921, 476.0859118265825, 446.12614668545433, 424.48360072799755, 408.321967221426, 389.53672759495123, 378.12160646254995, 362.95591451902965, 346.46900408485834, 332.8319974482745, 318.22960935634603, 316.6605541204803, 303.21307603139024, 306.7699223914103, 281.5469524756062, 280.8983367743169, 255.86547615451408, 267.54574483912177, 245.8369747963594, 224.97159488323484, 223.6622032492466, 225.62460128100523, 206.93045122590016, 203.15199808376326, 192.04838091055987, 180.01468565885705, 187.8027597232433, 167.61350283135968, 166.145137731909, 153.32440526286507, 145.1248177860959, 145.8105866618081, 134.4102809510748, 130.76975646103114, 132.63607846371437, 120.8611946065523, 122.76349082015587, 108.06516326059946, 110.0418812165283, 104.77879160052355, 91.20865090846613, 91.0061560296165, 88.77858828456229, 87.09497995882441, 83.33203877962677, 75.61376072848006, 78.46149387235293, 74.85904109647797, 66.54509638069185, 65.64265775245345, 60.45032526595155, 60.71841099160501, 57.46490685895761, 50.864466848625234, 54.603160867163155, 48.630593636686505, 48.47203369101141, 41.98705676899943, 45.096932974648794, 42.70266114615334, 37.575015556916526, 40.036609639311806, 36.99816873065783, 38.716424034678504, 37.67147925987644, 36.889102835376754, 38.95887083726804, 36.42321183676105, 30.576854621378754, 37.887696966989346, 29.29519525962005, 31.82901618726472, 27.18613585377942, 31.563748638061554, 27.04079698286398, 23.56203426296992, 25.404893409357122, 21.15355916728859, 23.62330967126951, 20.526969338511684, 23.1597232225014, 22.097902166963806, 20.851667310077467, 20.3281629603235, 19.508958558361655, 24.786307277463123, 17.782337147336097, 17.329995106625407, 16.888468707023833, 15.825981496109511, 16.089494771540632, 18.89236451259669, 13.853874057578864, 15.118875070265087, 13.630341773834195, 21.080218641633515, 12.04977374915031, 19.096531591185027, 13.262528927041403, 10.632570407848114, 13.774017190255696, 15.443474082999538, 12.45490948802154, 12.922772100836628, 14.478435761057584, 14.16793836606711, 10.081643264336844, 11.48944243416275, 13.5431912968149, 15.93458784846547, 12.433427198110591, 11.751300317237657, 13.573010334386323, 11.700691110927124, 9.088706662917795, 9.479313165152057, 10.478710949474937, 7.973356166708352, 13.168117672680582, 9.680477453915543, 7.824942765750716, 7.521455847336452, 8.669524574258176, 9.721098816438246, 8.27518551361837, 8.683381703202947, 8.184321174981502, 8.609360735107416, 8.912228132698056, 8.172741625454002, 7.507524717780537, 7.321718578031809, 7.289861243062842, 7.029067023233057, 6.2003289165545095, 7.747466263667889, 6.7314992021969156, 8.162371753429985, 7.422160119068313, 6.592397660458322, 6.8447666719216045, 5.434477020891411, 4.9620276902652165, 6.463852463545842, 5.383663558179801, 5.515131896148536, 5.412720482180419, 5.501650161144585, 5.433690743445796, 5.621999097568325, 3.926302861421009, 4.612171094916305, 5.623101112728723, 4.63780686371399, 3.8730801352845967, 4.492561753522016, 5.279440627999959, 4.663598128365163, 4.456189980290821, 4.3011981729152895, 4.078141950486896, 3.986443980024395, 4.252607772277296, 4.753012459086596, 4.361053581976001, 4.314718036392648, 4.6332355598460655, 4.003108554164769, 3.839400724069185, 3.3468918510743673, 3.5488751700235115, 3.8739524878924896, 3.8210600147967377, 3.2542729292080246, 3.3904929139926376, 3.452009630901253, 3.3341096575541185, 4.556887922773942, 3.0457577085291185, 3.1464588737633115, 3.139169339519807, 4.132459059381623, 2.802724202436785, 3.4284869403365374, 2.9829251388788247, 2.7648255157462507, 2.679449932934805, 3.1481649084571903, 2.9322234305233734, 2.86538873825369, 2.8986087835123993, 3.6497267721705846, 3.046390620687205, 2.4792836886829037, 3.095711918007975, 2.7677917421529923, 2.7630474151490114, 3.2902859479496462, 2.8709811847669697, 2.675940596299705, 2.93581799878771, 2.3680599669582625, 2.6740418935431913, 3.47382967514233, 3.1175254666986647, 2.2155641488658904, 2.5542866741849912, 2.3921943058824167, 2.4384223299059307, 2.54764462867552, 2.0584103085819176, 2.466737894136126, 2.4649931093178887, 2.322410543512564, 2.393974625659709, 2.253983833442934, 2.219178791961486, 2.269486676606174, 2.227262239594238, 2.1147767337969543, 2.192353555221591, 1.9443302261178896, 2.1621975205406114, 2.231607280822357, 2.297334507977393, 2.2574565634347903, 2.212109683745383, 2.1670738335070996, 1.846285560510481, 2.1030673510933324, 1.9815818135775194, 2.100089754189999, 2.0553886969710167, 2.0141568935399783, 1.934635728783444, 1.8634501046470189, 2.072497998830721, 2.0606693804794722, 1.8908649471021914, 1.8797916475355072, 1.767735604320495, 1.8455910144048853, 2.036755691998932, 1.877075136296741, 1.7947274016822754, 1.6831683752019804, 1.710657490986904, 1.6866866840391475, 1.9734432564074809, 1.8501799247353108, 1.6598054618933216, 1.7226824130079064, 1.571643248756301, 1.6400910118621137, 1.4583114018648813, 1.602793752880248, 1.7264814774973731, 1.6454191322921006, 1.5520259197208257, 1.6040537606565504, 1.53873938586717, 1.617865605855963, 1.753629902190539, 1.543229236197549, 1.510307723989477, 1.535986590780465, 1.4821912544378943, 1.484563180078667, 1.7506399502447871, 1.4627313832696769, 1.4748452708820514, 1.5253079834204897, 1.5272814020899148, 1.4922814318275845, 1.4641463189979942, 1.4180222600492263, 1.5327724462577308, 1.4146619923650727, 1.3433505237042849, 1.4241487127189256, 1.5142416933449325, 1.4827446308536274, 1.3760743214332392, 1.432294556346563, 1.4980111374966858, 1.390001843332859, 1.4256150935347804, 1.3956492247109609, 1.4777719774644873, 1.449680532199776, 1.3697187696695785, 1.3756500805854337, 1.28049905629408, 1.3750950887749627, 1.4139519181464135, 1.3337544862435111, 1.2657951331263693, 1.3269586553656012, 1.2926267631701085, 1.3775106907186274, 1.4285099207242387, 1.3093732109896699, 1.3024152376292413, 1.3129145596014673, 1.3277397778479292, 1.2517627083513057, 1.3076982622876605, 1.2494167434431076, 1.3239578681838389, 1.2796853882693935, 1.323831465760111, 1.3370650110104492, 1.3262603765203707, 1.2647466014898778, 1.2628573114053934, 1.2857426486916963, 1.2179553577713882, 1.2357621374109262, 1.2680379652176148, 1.2823421881823196, 1.2245958416100138, 1.3088246200093618, 1.2816771890644632, 1.2627656478208733, 1.2324194794791796, 1.2175067151129852, 1.2342020464735766, 1.2114959986276794, 1.3159945393785073, 1.216134630886806, 1.2408672757770658, 1.266930965695202, 1.204593620511405, 1.1999038682124297, 1.2668564655113566, 1.2181109971757182, 1.1868287450252633, 1.2183937107284442, 1.2026325831391427, 1.2122819151073927, 1.1755450756649926, 1.2082915618343182, 1.190926339914216, 1.35663776528067, 1.2342929798450084, 1.1603548031811985, 1.183284011765044, 1.1954615430076594, 1.1615772660826726, 1.1353512906182768, 1.1547926902291958, 1.1499470082900163, 1.2647405012238109, 1.1967265478592268, 1.1585497614045286, 1.1577901216036397, 1.240826504243743, 1.1547472243586772, 1.1668083644770313, 1.2023262767135934, 1.1565430830940358, 1.1353445847247958, 1.1786832927394237, 1.1619998103832756, 1.2349242286594, 1.1995187647478922, 1.1760424723403426, 1.2281843330622393, 1.1681910001265827, 1.2051153736062117, 1.1514567223288743, 1.183020661690843, 1.2351754326312647, 1.1736608449595594, 1.1696740631598581, 1.1801829223650573, 1.1180130886787345, 1.1551098352237612, 1.190883423816592, 1.176853708091567, 1.1423646956939018, 1.1473098091080554, 1.1588610894681242, 1.135534549345674, 1.1358869496521173, 1.1166651973650108, 1.136585966069875, 1.1424177047348474, 1.1235654518869251, 1.0999687917983096, 1.1124332216839532, 1.1557444499054623, 1.1600612046171956, 1.1363357043622857, 1.1803835312646067, 1.1596652107070828, 1.161130015364656, 1.1412544527616326, 1.1295599494266748, 1.19846456712089, 1.1402132879928306, 1.1174126051621864, 1.0927802877527901, 1.1224463054419123, 1.1291346269085416, 1.0825093946342077, 1.0995505702364878, 1.1464191364585965, 1.119545799401316, 1.1225755887997164, 1.129105037922417, 1.1295314506549492, 1.0870213320539068, 1.0863088878486415, 1.1496308383645468, 1.1409112212038623, 1.1446268099885784, 1.1343076716728147, 1.1007011422525266, 1.1172126958864763, 1.139330260900726, 1.107862516227131, 1.1002571685460802, 1.093242468859774, 1.1777845547102699, 1.122735197322597, 1.1574124511747161, 1.12936230474622, 1.1364679738890167, 1.166288299549601, 1.1625925508780124, 1.1227066825800742, 1.1530551041516572, 1.124781122945109, 1.1407026416017696, 1.1064619065087355, 1.1111334022147765, 1.1265974714252343, 1.1122196317103394, 1.0986879032696242, 1.1118232861450166, 1.0936928917258593, 1.1034974823648973, 1.1164878407480636, 1.104977330053769, 1.1146156120574686, 1.0792330087065514, 1.1336295195568415, 1.1652905053961011, 1.0839631156380165, 1.126590579837026, 1.1198882861100488, 1.1206128360801957, 1.0781312179072575, 1.068107831439756, 1.0694364349939187, 1.1411536214884141, 1.0847683678142261, 1.0774453317938708, 1.079832562689811, 1.0852936456916735, 1.1730581752176878, 1.0940476432005743, 1.1241301871659979, 1.140077659798349, 1.1600216714394336, 1.1016346215186368, 1.0840167604461481, 1.092459100556123, 1.0817477425220003, 1.0591620487895725, 1.0962088546805098, 1.107889160625003, 1.1144782065088845, 1.1128950715156716, 1.1438047191622878, 1.1161984323992602, 1.101404241049442, 1.0758624081004473, 1.08874579346444, 1.1072208376862178, 1.0829579220468943, 1.0745744005818796, 1.1259554307587458, 1.131659724210504, 1.2100744217541788, 1.0920895598014, 1.0934682750708298, 1.068309809819081, 1.0822630692988198, 1.0961394874668744, 1.1249780978733044, 1.0909415010230146, 1.0792652984915716, 1.080279352230981, 1.1044284886365034, 1.0762513155294184, 1.0757926483075029, 1.0736135531472641, 1.078383953434155, 1.0796025536584284, 1.086267869591538, 1.0676427165647921, 1.0964159870918928, 1.0772803481745679, 1.0629182327641513, 1.0772203528628526, 1.1248152772973339, 1.1025681045172346, 1.0880875044608123, 1.0884628867520239, 1.108095106202741, 1.0768729274732647, 1.121054274712459, 1.083136414385726, 1.0686135576767075, 1.0888499778974783, 1.0930072049650301, 1.0717604161087815, 1.080933783202462, 1.104113359915184, 1.075678015890966, 1.0738877831495977, 1.0652038139412763, 1.133659107744866, 1.0761704662869376, 1.0667012547078865, 1.0643899184267904, 1.0947833676070773, 1.0885705693881074, 1.0689195295386156, 1.0889979460660315, 1.0791506975372689, 1.1033815065872463, 1.1027005742286589, 1.1251494920835021, 1.088283679905587, 1.0463388179920647, 1.060460663518589, 1.0721959255351248, 1.0576255700744608, 1.068111705109691, 1.0618149056937707, 1.0680964888468432, 1.092705156171809, 1.0894411471608494, 1.0599915127985902, 1.0700188837754843, 1.072881555690773, 1.073516403540159, 1.086711901433219, 1.0748384041495347, 1.1067869624280493, 1.1009344375748202, 1.067308251733836, 1.0779827851114008, 1.086531741428082, 1.0960120126380366, 1.0536140800838556, 1.0982875445590785, 1.0790567613832711, 1.0707246028124653, 1.0761532945386927, 1.0859355995166966, 1.0613037919650223, 1.0617060650483174, 1.0649496069226094, 1.0979708432240738, 1.0630255907519168, 1.1028162224484952, 1.076768450368118, 1.0660664406584, 1.0532325890729217, 1.0706756202230645, 1.0497030958224296, 1.1197598472706185, 1.1123647366863314, 1.0716596292932312, 1.0678303855879694, 1.105776506990847, 1.0997291031426897, 1.0995731172258363, 1.0737443875566128, 1.0897592599213481, 1.0555231160861465, 1.0648534288950187, 1.0549466117650204, 1.0548442570838426, 1.057900454000293, 1.0484654996912186, 1.0541893883255185, 1.074238315225726, 1.1034269591410848, 1.0846485938212016, 1.0906143137307525, 1.0731140017349503, 1.063789603215314, 1.066381078137274, 1.0707075609904553, 1.0709396025708189, 1.0928171944267375, 1.0909255322529972, 1.0682111138282984, 1.0835079505308023, 1.0604113069144185, 1.065158191794403, 1.0838048502322526, 1.0694040688694424, 1.061073732857174, 1.065288014212418, 1.0792250677557995, 1.0758852875927722, 1.0513762699641103, 1.053407909601773, 1.055636662156303, 1.0862665690310402, 1.1336418753280761, 1.1111739801853242, 1.0981502008625985, 1.1301419660186558, 1.0816985701738475, 1.059227953473291, 1.0738814758626736, 1.076900595556404, 1.0907652420733722, 1.0585506743040678, 1.0493609001686264, 1.0727823002232633, 1.064752298919985, 1.0408010832473507, 1.0452496895313586, 1.0699347086884774, 1.1378364668877239, 1.0532254012739484, 1.0485536669770334, 1.0458173297895355, 1.0510307346550753, 1.0478449151436628, 1.0873445434501097, 1.0432623080397638, 1.0607347697546745, 1.0555926819747736, 1.0712710604746294, 1.055918200205219, 1.059531248257836, 1.076169646871866, 1.0552378931658055, 1.0592412174817731, 1.0501549559389998, 1.0885277092371768, 1.0809216029088324, 1.0726142696680556, 1.05267166761897, 1.0476089187597437, 1.0483976387597327, 1.059031263491203, 1.0673131141294618, 1.0782954058985545, 1.0698203685766032, 1.075400272644153, 1.0625489879508565, 1.0540530558783459, 1.0567069145731924, 1.1238034495017197, 1.0805049842395296, 1.0661982859836332, 1.057671722723195, 1.0534511058540492, 1.0725739253684592, 1.0445789170750055, 1.0529166186708439, 1.0601305007967183, 1.065530964152702, 1.0362054014510609, 1.0382827172075193, 1.070947344870497, 1.0644287928965739, 1.0496768328246346, 1.0784255117318347, 1.059064160315687, 1.094861114741032, 1.069419025886925, 1.0595872410487253, 1.1016028416116648, 1.0623390730157214, 1.086755626438245, 1.0734049978699858, 1.0640799114363642, 1.0504792044015623, 1.0634531536829865, 1.0793905393231575, 1.0494432162330463, 1.0533891779346665, 1.0621002685055494, 1.0620781753448452, 1.061751224438629, 1.0771538694597849, 1.0689616745245214, 1.054411038569637, 1.0584959049304916, 1.0398981367434943, 1.047893552361303, 1.0438030336768858, 1.0513613138745739, 1.0677502183889447, 1.0710129308909897, 1.0459790634109474, 1.0435903495017864, 1.0416652408876395, 1.0605025843307927, 1.0794306832334086, 1.0450304762312814, 1.059594604189784, 1.0556985585869554, 1.0565798709786234, 1.038700559353404, 1.0505889321683846, 1.0560968822217687, 1.0487959866524754, 1.0432644645964981, 1.049323966734987, 1.0421534572516824, 1.0526474808837485, 1.0697142785797145, 1.0624511859650516, 1.062317778843288, 1.0483744883982644, 1.0506590311263986, 1.0545121950347218, 1.060434153940416, 1.0772901314510777, 1.0360220027091402, 1.0615381990418333, 1.059763380552319, 1.0692913724713136, 1.0541828232708566, 1.0634854490507701, 1.0432829003521291, 1.0927779661351702, 1.0551482680505542, 1.0365678400464942, 1.059718256947173, 1.0460335129307123, 1.0574629784403276, 1.0917589671277979, 1.070717023371236, 1.0467137763236767, 1.0670071434677617, 1.0461950275275624, 1.075066101916959, 1.076142652109297, 1.0665947573253907, 1.0812828640507588, 1.0654582991565644, 1.0447055331810626, 1.066081318404933, 1.0681594439170898, 1.048169549593209, 1.0353689524735727, 1.0449608696228474, 1.045086071586172, 1.0918415745207064, 1.0960197428489726, 1.0621351682146762, 1.0725278520424557, 1.075324976215894, 1.0582070433313617, 1.0417624361446738, 1.0495406568189682, 1.0737929916535618, 1.0808242152567622, 1.0578756653589096, 1.0881851947967147, 1.0424436736809712, 1.0671509438608786, 1.05232476151165, 1.0819921099052066, 1.062522454872564, 1.050751249044044, 1.0633204139071262, 1.0506429152723216, 1.0612104778919325, 1.0461099264073064, 1.045776514860379, 1.0893412994692588, 1.0521912563101739, 1.0626894831674567, 1.060537808843251, 1.0797265775948162, 1.053748957890096, 1.0500344203240461, 1.0429821161184505, 1.0720769133652124, 1.0406428185041539, 1.040004579305495, 1.0571827918041956, 1.0496658600767965, 1.0729045299373081, 1.0864117310843926, 1.063417927266619, 1.06372790589438, 1.0535908656008444, 1.0690427671021059, 1.038557936082161, 1.0345625677431958, 1.04397326838504, 1.0564154064747797, 1.0424556678767498, 1.0504894477281437, 1.0543854539375588, 1.0691077205616744, 1.0428110730106614, 1.0631162957804008, 1.1016386799053466, 1.049467934217932, 1.0394720866331173, 1.0312048247309529, 1.055134997353767, 1.0616776009204643, 1.0386057796971824, 1.0416704079710355, 1.0581081042263925, 1.0471220795329454, 1.041865212821703, 1.060766707055977, 1.0611358381444473, 1.0502341866846796, 1.0419492287758667, 1.0509600573572266, 1.0775995434396868, 1.0783234048101795, 1.080670007172663, 1.0463311303637963, 1.0567300261318622, 1.0478669692436646, 1.046581035101701, 1.0739048348735107, 1.0538292307254333, 1.0430638556089855, 1.03356562530587, 1.0380989148551552, 1.053954741517141, 1.0426231904909766, 1.033762006672275, 1.0328325932796867, 1.0465823246970092, 1.0565485906014258, 1.0383712431735146, 1.0722626246971085, 1.0366749357079372, 1.038073996700917, 1.0545044188081125, 1.0634248685727619, 1.0848058537372367, 1.0381158946039921, 1.0694885770360716, 1.0570365670153994, 1.0408304266516757, 1.0768134858045828, 1.039190101634072, 1.0645655055280572, 1.056355947956404, 1.057299679016304, 1.0337727047326153, 1.043327902680875, 1.0447409152125717, 1.0615115475339838, 1.067506998104621, 1.038653203572799, 1.0437432930785673, 1.041348793579426, 1.0543067282641108, 1.050126559640119, 1.0602089340268293, 1.0496605960185255, 1.0405652829284993, 1.0818837946295814, 1.0541691621839027, 1.0404766811707724, 1.0483646635658832, 1.0285184878857128, 1.0527159798143424, 1.0454411228670035, 1.0334269811439045, 1.0608782171233608, 1.0440892721993837, 1.0753356281110205, 1.0425179518013423, 1.0377474913036373, 1.0507331949991947, 1.0622827424855559, 1.0404829160203863, 1.0453993727398823, 1.0460380915127465, 1.078051079781922, 1.0440428910002189, 1.0425657291193833, 1.0499994918808404, 1.0907260132574013, 1.0603230834317057, 1.042846319347307, 1.0433959095608287, 1.0453059471164976, 1.0367471723144621, 1.038689450700988, 1.0452607193220969, 1.0639147496473977, 1.0377296611594857, 1.0320141887378744, 1.0383989072291113, 1.0921642936790759, 1.0565603587445145, 1.0475257243086957, 1.0380284608193686, 1.0432607989019025, 1.0583960006288602, 1.0371625756133296, 1.0501803682052284, 1.047000726970619, 1.0608643310235322, 1.0385824560809607, 1.052971821543563, 1.0605899356609991, 1.0648130555831317, 1.0520865242161106, 1.068042197595467, 1.0511238152802351, 1.038844124817289, 1.079755946633626, 1.0833800224034855, 1.057511832190759, 1.0404531429314943, 1.0644941230702225, 1.0526804721555427, 1.0664858993438602, 1.0556111922058102, 1.0398880151421452, 1.027223699229501, 1.048010811537631, 1.044124461294803, 1.0463978792350075, 1.0509911426128877, 1.0424387376970226, 1.0434045649148138, 1.038539444325469, 1.0496897028396723, 1.0611858494525226, 1.0544722473831942, 1.0465224515289995, 1.0570625537243623, 1.0407054724190838, 1.0670448069956355, 1.0436420974002887, 1.0320163631649792, 1.080244565056926, 1.0412615313225568, 1.055418074353507, 1.0343255544021044, 1.0434939155108653, 1.050896573345974, 1.0404742417143247, 1.1169443190556527, 1.0898612260824865, 1.0732465950114638, 1.0578120844403718, 1.03102387211251, 1.036759201188484, 1.0301246462810614, 1.0351421492135617, 1.0388215254869095, 1.055891592888953, 1.0579477834370752, 1.0383014387491336, 1.0352434897236422, 1.0322482636525383, 1.039669125297211, 1.061509924576412, 1.0454243637724758, 1.0417872827051773, 1.0380790464345138, 1.0399909166176942, 1.0808635747340467, 1.0500299536414741, 1.042245997476133, 1.0438546836150526, 1.0331736904046722, 1.0451775985453902, 1.033374492448792, 1.0497402646173064, 1.0342691071282508, 1.0388807271892109, 1.0399784981500233, 1.1060748075636095, 1.0472971925442012, 1.052152434804362, 1.0400672484044176, 1.0362501675214688, 1.0351009030869918], 'val_ppl': [939.4487332398452, 662.0577992120138, 663.9506129854009, 665.8035925580589, 643.9146710662307, 629.9772930292868, 647.3829712474521, 629.3430904689304, 680.3479702795405, 646.5699676676963, 632.6023603020338, 635.7727488275164, 652.8670303774584, 641.1338224995425, 629.1637305539238, 664.7659653333482, 698.257835556457, 647.3477038537171, 681.2684299871721, 653.9354126457456, 691.4170378102209, 691.6914635808556, 746.7754546543777, 654.8946310099835, 666.8972115380498, 741.3988871501616, 678.1118723509293, 798.3559958701353, 695.8747631315144, 711.9143824803346, 851.5672745962693, 917.6922837258691, 826.8334026397288, 792.7933891168805, 759.445973556304, 830.5524353056213, 779.4201347060609, 802.1908748704413, 834.3989349662488, 905.2719091423019, 856.364359136103, 943.5827241126283, 966.0256733220331, 895.92361566984, 994.0807730958047, 1090.4281925416324, 1038.5006501681198, 992.810511073471, 1109.623851113453, 1080.9398240570486, 1162.753244224578, 1398.1343927329544, 1159.243017845263, 1368.7471330497021, 1259.6185973519823, 1380.8969318232514, 1387.4522669421397, 1410.4200710320627, 1358.7135429716802, 1410.237585436709, 1563.959140844398, 1602.1937312783878, 1536.519946677673, 2009.2962929454363, 1900.4754799574298, 2146.557307869005, 1760.129508065518, 2150.360067799767, 1933.5533070728472, 1865.360656985781, 1921.2662954075063, 2344.3118444606257, 2589.0337239930673, 2005.395028911958, 2749.436071195722, 2156.6965950606723, 2769.8215992584833, 2678.3181061240607, 2696.5460059625066, 2855.263485926231, 2680.802284725074, 2733.8469037168957, 2996.243263243408, 2805.2676554667696, 3496.726059481777, 3046.48978227195, 3462.7317071210946, 3636.4060793347226, 3301.70805148632, 4006.228180802185, 3637.5114505457063, 3956.7956777752997, 4045.0756206126784, 3780.6480884257517, 4520.997638610191, 3914.9403557372207, 4316.799506690001, 4641.412569156511, 4612.0077604216185, 4425.025651268502, 4258.043394253828, 5251.41871485669, 5200.543180252391, 5221.680750641796, 5397.525732687367, 4930.023134683413, 5818.404430489424, 5863.111603325453, 6150.901661204317, 5843.706255180087, 6243.273605457818, 5181.062247592285, 5399.048367648218, 5376.815844861904, 5706.153063197559, 5592.457276185433, 6696.7242785160915, 6005.48946431029, 6140.426158008318, 6420.621802963001, 6484.141603818294, 7167.650492213291, 6761.383955789111, 8948.28208037447, 7927.487094245891, 8096.418627306312, 7654.209374279335, 8644.578747293779, 8034.059388408756, 7598.918337877692, 7973.442541262721, 9084.890188978694, 8728.057867782029, 8366.587064125919, 8567.747424898096, 8848.26919982702, 8943.567907299599, 9413.554498854195, 9142.786143322435, 12039.642098350372, 10079.515420787437, 9727.226898766537, 9854.826050832062, 9941.702910576547, 12101.768947668947, 12283.07787344408, 12257.508464533794, 11315.26006147419, 10978.187658350502, 16000.090726608405, 12461.400084320434, 13134.489957415397, 14901.330232760061, 13489.403668631374, 14962.644227931092, 12997.665041941527, 14441.258179100887, 16349.126502830935, 16455.80020157676, 16613.608843366652, 15383.600862165635, 18829.4280548832, 19154.227034944262, 16489.699913500393, 16110.715183971957, 17278.088768634494, 18950.06473661247, 18557.71016701671, 19693.844286665622, 22100.529269559138, 18060.733430671808, 20297.00274464728, 21780.460925220817, 22326.811241832336, 20083.749157426646, 25459.147006089992, 22642.835344776126, 23287.570448832037, 25365.358543471957, 19434.400734342715, 25987.531736377194, 24504.753984945113, 23507.271735603117, 26174.422918296103, 24330.206063028643, 27963.331253585173, 28476.296125750803, 41984.40821557428, 32766.313323379964, 28079.28936682673, 27526.47032705666, 29098.76658645959, 47774.578696789504, 34526.607930398866, 28357.68061759136, 29449.455731938706, 34598.2997077263, 29070.20808184476, 30310.987012376514, 33564.64601156216, 36529.01719462741, 38757.000116880496, 31172.60791248864, 38092.0406876255, 35251.00498722488, 52579.26163294551, 32365.27899148975, 44171.07323211715, 34025.687068535866, 36756.9879222448, 46167.3593609947, 41163.650176353854, 46833.12073184981, 45705.78870455776, 48929.19720319902, 44434.83850835127, 60358.852922269376, 50021.074316037564, 39759.14480231899, 47548.1275222767, 61055.5177821845, 59625.87028469899, 49802.38526869333, 48850.48020293633, 47877.26195434671, 57306.40058507578, 51209.080517016715, 48379.31419745702, 52959.286119042146, 55704.03762878516, 61479.8420221206, 65056.51529544251, 54199.89628546806, 52313.85310630367, 66373.7466789568, 53296.47974137451, 67224.74792882126, 62447.1018021507, 60185.32735527312, 56403.777821843374, 74525.73028287344, 70998.17482988974, 73261.09000314889, 68330.14933647586, 81393.86336857786, 80553.63747861038, 62218.028010240014, 79237.04187874615, 79422.25457831763, 86967.88017304514, 94272.8227174759, 74737.36106563141, 87772.95592382645, 73038.49513685628, 80626.4933921465, 81590.08181890476, 84786.04840623276, 85241.43875864122, 87488.94807520066, 89996.58739162123, 84936.53898844383, 122725.64581502129, 88280.53020981188, 97321.72659650628, 118599.27187145101, 101259.48146942955, 113708.0121659068, 93961.4378100358, 96174.20166808674, 103786.42156981163, 102581.70690164881, 148499.74395079643, 123190.17064636305, 117118.80739713184, 116343.77952704031, 130928.18905176446, 106695.18793871457, 136443.61098840376, 148077.81936740087, 146603.96072702913, 125616.77120911377, 177107.52896919503, 200722.1318123663, 139253.32938760152, 146092.65393579946, 154751.81360281768, 134496.87183478219, 257656.21683621043, 152976.67742085678, 196959.45024987202, 148297.97040379286, 176653.09754686477, 173111.6842260323, 216116.10963931237, 204512.21393589527, 175119.7472581024, 167282.84884122832, 180443.85833626788, 178036.0587489243, 164085.67946348028, 184484.28245584498, 190339.51268402414, 219666.28157951447, 195252.24917707258, 293790.76128555747, 224585.23261007783, 189311.8933707321, 238214.345790509, 204364.81100749737, 230184.77765556183, 195358.6884651662, 305407.24169469305, 260962.24341587836, 210138.1069029514, 255656.73975819725, 229415.8328265214, 509674.9982262639, 240407.4272608762, 402368.0495157199, 313657.7298611681, 298726.1649717273, 295170.13955932786, 329017.52903890907, 291413.1941265484, 264030.47475937696, 359757.74594961136, 266499.5367491032, 274283.225094597, 277601.93767843914, 380557.5221678364, 298253.67454839736, 343051.06620753667, 451793.32518439717, 354662.68426280655, 278715.0316549537, 308503.7515601008, 380102.72343480156, 332278.0026297684, 389437.56502764754, 313979.7246331002, 323262.0824172161, 368570.4555200533, 322098.3390114863, 402612.8967522294, 334408.68000331975, 391822.9471430755, 331979.9186307823, 464428.17347986164, 476289.76075382106, 333725.5686359933, 356111.4723938193, 577722.0926717726, 394464.65609151986, 478624.3234634161, 353115.2659142329, 393153.6903683741, 374459.4832784368, 395470.86213669105, 495436.68800160586, 393107.15612232324, 427232.8169550002, 396477.7655513168, 644118.697970396, 418985.163289457, 899317.2872980771, 475858.9111066352, 495294.60686251515, 702098.2288789047, 471094.0721748766, 655921.3900110237, 531740.5791710106, 503847.5747105023, 440378.83056298364, 556748.7901199361, 727736.9383784279, 435560.48046701314, 527019.2979088731, 409779.94045071164, 642128.565028434, 477004.45619483804, 443907.87448275543, 415513.0751312666, 650392.0254171721, 492303.6961027914, 444016.76978793845, 635784.6903648074, 607836.222757773, 804216.0246243343, 466821.2236927247, 808130.4490645757, 642657.3405773127, 553448.4185285975, 619850.5818020304, 555717.219147651, 568993.3336997544, 561240.7298713056, 747172.0317718809, 634652.3115346945, 749344.4980367457, 696927.5445139742, 686627.7797660588, 613032.4684218635, 608852.0972141696, 669497.3914688876, 582029.5820717203, 590061.2286821762, 605978.1307669115, 621984.1732254942, 649614.5018077656, 937148.2663721751, 797003.3911913652, 1019114.0466076927, 593216.0150066903, 623445.7838759294, 1020054.0906070131, 666749.4197397217, 644945.757500132, 739692.8962568016, 622617.2067778122, 835883.1143892437, 926897.9514933038, 675177.9246841291, 690255.3557801086, 680527.5183322884, 924692.9923259967, 726270.9063275971, 801207.1239921948, 775757.1826805195, 689090.1489565047, 682694.2758488235, 909421.5840585391, 817339.6674975319, 1172486.2594410933, 687003.8520774764, 759790.6177412788, 871633.4911325651, 655758.4427290913, 848089.922783101, 815899.0629982022, 660639.2199607485, 742831.7181975757, 889751.8579733972, 679184.5695991842, 742547.7116962479, 1244134.105403898, 724017.7383656697, 855109.6649050111, 717740.3037973223, 769763.150806566, 1041589.2205551049, 792209.1555343833, 747609.1002373369, 1356360.5906903225, 656794.5207037057, 722478.3620651425, 917003.7427140386, 950177.003870462, 719951.5964605295, 713750.4846273715, 973788.6450413123, 832621.55792162, 1398940.9690861087, 870729.1828440321, 715673.396390217, 761000.958741001, 1285446.805045822, 1365620.3510149084, 761627.6159182929, 772291.6531679095, 1390240.7754677662, 898162.6504015016, 1456038.9225358265, 1062191.305243581, 841671.7361197696, 1407558.9503597573, 850673.0626228555, 900137.0291896956, 861396.1431487979, 1102120.2704611698, 984214.7690742497, 801559.7531852303, 938995.1416215511, 1087942.3903669943, 1067268.2515366008, 813643.5630771203, 1039380.8233575374, 1014084.4768793967, 772577.1620878199, 807763.1366066888, 1116813.0140885345, 1166257.6666379527, 1077112.2241334582, 1014114.524980211, 863494.5488851635, 1142883.9294956631, 871131.4617577835, 1012177.5642396765, 1088290.6802930047, 1133540.6499994693, 1100289.8617921846, 1124679.4905725673, 924171.0003723539, 947741.6579500409, 885929.4226409167, 997611.2270457128, 892456.7820820992, 987298.1523238595, 1082228.9848922405, 1265421.6478408477, 858128.6949721732, 1294624.039794682, 1111982.259947597, 1152310.0985940797, 1096953.7026197931, 1737374.5772521393, 1179883.8350983816, 918195.8498100017, 1376373.5709684591, 1242638.861151501, 947110.3526416707, 967730.6679223607, 868445.7990150318, 986019.3359424473, 1364041.5535538185, 1279378.8911933356, 1021222.7148362685, 944526.7309929021, 1184631.1938622212, 979378.8772449278, 964233.3361477067, 1307246.4869221142, 951887.8709860115, 1828400.2179121384, 970891.3092143681, 1172622.1601122508, 986737.5707820811, 1022323.415732843, 1209608.3241518883, 1038445.2608592255, 1188482.9494938464, 1442623.0073980107, 1150363.0938906798, 1488453.6809150896, 1452626.2962284011, 1296354.8973922294, 1317231.0318520255, 1230756.4957902418, 995098.7385574962, 1010095.3581648667, 1810838.0666521632, 1342993.5641860527, 1034960.6695303452, 1015416.6456402891, 922839.5411476025, 975793.4607049845, 2048334.7683374288, 1725610.7666244488, 2115015.5514495056, 1285501.9406410072, 1368119.8589556422, 2076504.0233737903, 1776088.1696891643, 1620932.8159284855, 1907825.203945708, 1334223.9039855262, 1173879.0941872748, 3214855.4925751425, 1060270.6006500763, 1127460.1436270692, 1432253.2278036491, 1510283.9227151936, 921412.1495090046, 1064315.5068591319, 1049995.6126013878, 2362845.4743902227, 1523517.8465688408, 1189925.1794505066, 1085833.6163717671, 1270500.2001086497, 1398086.9187745845, 1539209.1273640224, 1106856.5284822606, 1066094.2698851898, 1110180.8836057447, 1742680.3243150092, 1313296.111215283, 1143415.444278141, 1427476.2202865581, 1542164.8924815522, 1345138.08071157, 1231568.8187522253, 1200992.239882336, 1391953.0651980452, 1314211.9724524748, 983181.6905339909, 1626206.2047910725, 1597182.0651310864, 2119812.5913592703, 1361380.4438059058, 1572386.5066702412, 1564026.608489944, 1152391.8395679696, 1107766.8975220819, 924658.0388336169, 1280692.480725403, 1612448.7073727865, 1501787.3438663566, 2826523.6671307697, 1004157.263018199, 1277427.5485726714, 1212681.8580589881, 1990042.9396948726, 1925731.5338231137, 2454211.8540313025, 1570116.6363701539, 1278819.9741730348, 1264654.508417093, 1142280.656768808, 1348538.1233620886, 1425659.596980185, 1615938.8407560475, 1936763.2168014327, 966156.8917234803, 1120259.956102156, 1360518.0421101567, 1159568.4511285257, 1371713.043602823, 1282441.1715377406, 1380990.2947703614, 1372536.3422891586, 1298056.685991513, 1192905.3105076463, 1186203.918797557, 1157576.0503003984, 1414773.820585961, 1357765.8818359545, 1095027.4013973349, 1236010.5820153113, 1419727.096728555, 1603264.5161756712, 1430604.7268884415, 1280384.023584102, 1183347.655191189, 1232266.519380796, 1304031.4225759385, 1217667.8928121154, 1712197.6449200648, 1243760.525458456, 2407700.432680745, 1454724.1455940073, 2317546.466004098, 1205923.5852543695, 1605267.2027633237, 1208189.313892617, 1092776.932103237, 2043340.2492416212, 2017766.1860581464, 2606082.457477745, 1349186.189666174, 1165943.5335458082, 1660645.940985501, 1200227.1705310806, 1223785.931400095, 1598062.0663233153, 2236607.335914869, 1549118.3681273954, 1337351.8536727678, 1139611.1375729225, 1685438.0280089593, 1702373.7031069389, 1572065.8379817938, 1694534.7765898858, 1266448.219647288, 2074434.645043982, 1311036.5497770763, 2260164.225328163, 2770802.916551013, 1750853.306175275, 2409614.7846236713, 2677771.1156265917, 3037247.582886707, 1359884.956171897, 1659745.1610686106, 1671898.269196555, 1302128.1750129582, 1502599.8249235295, 1678147.7988038985, 1424982.5760953277, 2534749.472249603, 1224764.9547945461, 1216500.6983269665, 1439433.276099589, 1462211.6855983052, 1466954.362297127, 1300860.9720677086, 1224958.6581336402, 2955535.526317712, 1361878.481320974, 1532439.4512784777, 1773472.595796308, 1745809.5546144363, 1716642.7741428479, 3700877.7455509105, 1316081.8193923575, 2471284.4880234627, 1303816.3843480467, 1201588.5512998435, 2121370.204258292, 1802850.533100175, 2367216.3877296587, 2018641.7412875113, 1456550.0209633338, 1232221.9539495155, 1352041.126165855, 1550984.6098939753, 1636763.952424726, 1424494.3745393418, 2083634.8371801686, 2008972.7436685686, 2446936.2947122334, 1606158.7463880896, 2040084.9726809561, 2190113.1373695824, 1774522.203124098, 1783332.7558143523, 1792744.142141702, 1982080.3573023942, 1667016.1985053222, 2401925.808867647, 1228938.9627261376, 1417469.3261187833, 1938811.4022164964, 1674068.7021608131, 1309933.5312562794, 2427006.796452953, 1791482.3804003252, 1446978.5762954976, 1379972.970429143, 1331954.2189919015, 2186892.7567411433, 2344681.977604974, 2259372.4900983884, 1349862.405096565, 1851385.7711087188, 1431896.1918615405, 4383775.0000906065, 1410549.3867675152, 2073288.263376066, 2177587.767768796, 1509568.4413254391, 1476788.2208736972, 1619280.6083745465, 1637891.3325552118, 1992302.3740102763, 1862484.9177378053, 1623921.5161392952, 2859951.138796907, 1705080.3514350895, 1310190.1267497444, 2075456.6796617776, 1948540.3719871128, 1475613.5229410813, 1701433.210906659, 1529507.5191666428, 1343246.9174187207, 1650948.4777844087, 1484060.0966728753, 2006851.356101769, 1725607.4548710734, 1892933.5529603017, 2289758.2449168153, 1113029.762252823, 1354890.869103915, 1344264.545498131, 1553138.349078981, 1396199.3287411255, 1363688.8794084443, 1705572.6069190458, 1170768.437901725, 1262656.6581708163, 1344969.9271896982, 2315775.2516533067, 1641986.261083819, 2125672.198810687, 2527694.7338489494, 1690331.2264866075, 1614853.3058587292, 1196460.7831144426, 1188204.9953167806, 1769145.253080934, 1427899.8210792611, 1237927.5351593534, 1326323.3134724135, 1259767.6031285152, 1569316.7012980208, 1363983.5216684928, 2481156.9069859777, 1383442.4825717604, 1676244.3755765818, 1678969.0059681756, 1748450.2956080092, 1199366.8746603334, 1667349.1917861437, 1250743.9702525223, 1278547.271513906, 1877231.1607303105, 1668717.4258732763, 1528483.1693527182, 1306899.5945027007, 1354888.7197284328, 1365815.8099027425, 1646118.1560381688, 1569094.954056741, 2001337.936096839, 1282832.61690847, 2666500.6328784702, 1249998.2256791017, 1394404.5703476656, 4209970.750299407, 2027176.9227097107, 1130504.4819372771, 1350150.3864320093, 1619335.7893396826, 1785621.124548316, 1371176.059727903, 1326554.499966359, 1368147.9111358458, 1303606.9762585096, 1313614.0827265806, 1878477.4533533328, 1328172.2678059402, 1805464.8070529758, 1698451.1842573218, 1234300.6631243455, 1735216.7754156913, 1659757.0546593908, 3052401.8417998813, 1389726.9568334008, 1796996.5521618985, 1958221.3710098935, 1919512.5407933437, 2502295.0532175666, 1356631.2656191527, 1620005.668713864, 1451090.5268135858, 1867212.119477618, 1394155.861582192, 2767504.5213202885, 2126009.915426704, 1774499.2811230342, 1364136.8401374158, 1338287.8671896625, 1770884.382004338, 2056722.7460711496, 1141162.510651206, 1756290.142786414, 2004695.457625876, 1608473.8149377457, 1872714.4909041438, 2098182.1819212493, 1712056.7964570706, 1643508.9840700575, 1071490.0442291046, 1354985.8412149434, 1568936.8939547075, 1557407.4491278166, 1381753.4548492022, 1880886.3199320713, 1656850.4252360046, 1790151.4113237956, 2145223.6171513363, 2632695.2064818856, 1748298.8444121345, 1586040.734584944, 1342379.1858440833, 1243049.1054640866, 2222976.739344864, 5034857.555763142, 1880128.7668702186, 1857246.4985829962, 1644982.9236033082, 2202325.6868479038, 2115341.3337345836, 1649874.4381780126, 1484218.6306681216, 2793615.1518276455, 1288002.240962807, 2477641.939506219, 1886931.4136938113, 1956026.6976049813, 2958232.3654336412, 1751698.561114095, 1361803.6581181802, 1411689.6839706346, 1400070.0960260392, 1601302.260095332, 1304918.836501481, 1812698.4125470547, 2104114.9191008, 1860501.3697971976, 1552247.2211761824, 1647800.3611603912, 1507495.0968928514, 2855613.2425884623, 1551393.6861875963, 1498762.0390739243, 1564018.3710233064, 1866063.283003698, 1295597.0264458724, 1958170.5800855246, 1555844.979270133, 1652638.4548118475, 1403789.9943191614, 2324151.5904484605, 2389071.800926777, 1744908.3186035783, 1348157.1015976965, 1521820.7982133161, 1931427.3229250833, 1517518.6944931194, 1808045.0764380007, 2657055.0072274203, 1845655.889969902, 1706634.8521374122, 1484779.086286434, 1924397.0575388293, 1892227.3190265007, 1299037.8982145737, 1338408.7941808656, 1366386.5807544857, 1603904.3810492316, 1654838.774950698, 1966272.0233626075, 1800921.4677530753, 1482540.7508891735, 1434861.3952847603, 1710490.1497263385, 1331315.898792975, 1939134.0537703326, 1953158.7921096175, 1428879.8669094518, 2709295.210047266, 2257513.673361522, 1866101.5736438935, 1547940.6048317624, 1557592.3734808725, 1318115.292213108, 2457334.157233817, 1658938.1370712786, 2516611.6202019383, 3306640.0940550477, 1242622.6848494946, 2152115.9069986744, 1792188.775893055, 1858162.1742340736, 2115602.170393921, 1102274.6115883405, 1356615.00163691, 1692828.9997331414, 1575605.4038771964, 1644329.077403009, 2349729.4763068273, 2145480.055170127, 1678163.8304443692, 1396123.5782803397, 1673920.7871189862, 1581684.3349384465, 1655163.445901237, 1371793.7315475685, 1775412.2369493612, 3158242.237172486, 2853031.981000338, 2268748.8666089782, 1428807.0919014076, 2170494.1802071496, 2151350.2229550956, 2695778.782158638, 1459927.6454918205, 2103533.7998850183, 1525949.288848218, 1364929.572484024, 1540943.8290659634, 1949929.7050277481, 1245078.3062395114, 2434409.7294726893, 1908616.078506412, 1299584.2695522879, 1596912.9456873338, 1336469.7728342286, 2540416.2996108495, 1655779.429874555, 1514658.6589903692, 1635864.2898923594, 1459120.3338159171, 1779203.9896230882, 2579584.52472261, 1614832.3011514265, 1441556.030342828, 1535116.9253310545, 2130825.237043006], 'val_bleu': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.57, 0.0, 0.0, 0.0, 0.52, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.54, 0.51, 0.0, 0.49, 0.0, 0.0, 0.44, 0.48, 0.0, 0.5, 0.0, 0.51, 0.56, 0.47, 0.53, 0.49, 0.48, 0.48, 0.46, 0.48, 0.67, 0.47, 0.48, 0.69, 0.76, 0.0, 0.47, 0.42, 0.46, 0.0, 0.76, 0.45, 0.76, 0.41, 0.74, 0.71, 0.74, 0.48, 0.76, 0.41, 0.7, 0.39, 0.77, 0.74, 0.7, 0.75, 0.74, 0.71, 0.69, 0.71, 0.71, 0.69, 0.77, 0.71, 0.72, 0.68, 0.77, 0.71, 0.8, 0.8, 0.71, 0.77, 0.79, 0.74, 0.77, 0.75, 0.82, 0.85, 0.79, 0.76, 0.8, 1.02, 0.75, 1.3, 1.26, 0.77, 1.26, 0.8, 1.32, 0.73, 0.81, 1.04, 1.02, 0.84, 1.51, 1.33, 0.96, 1.58, 1.27, 1.31, 1.27, 0.91, 1.27, 1.47, 0.8, 1.44, 1.33, 1.41, 1.39, 1.56, 1.29, 1.59, 1.5, 1.39, 1.58, 1.42, 1.73, 1.61, 1.67, 1.38, 1.35, 1.71, 1.5, 1.48, 1.55, 1.37, 1.24, 1.39, 1.49, 1.41, 1.59, 1.44, 1.52, 1.64, 1.59, 1.74, 1.51, 1.72, 1.55, 1.57, 1.71, 1.5, 1.53, 1.55, 1.66, 2.01, 1.74, 1.84, 1.62, 1.88, 1.94, 1.71, 1.92, 1.69, 1.94, 1.92, 2.15, 2.29, 1.92, 1.76, 1.81, 1.79, 1.87, 2.15, 2.08, 1.75, 1.96, 2.19, 2.27, 1.97, 2.41, 2.22, 2.26, 2.33, 1.77, 2.5, 2.17, 2.26, 2.39, 2.28, 2.27, 2.44, 2.19, 2.36, 2.4, 2.59, 2.37, 2.51, 2.34, 2.31, 2.49, 2.4, 2.34, 2.34, 2.35, 2.43, 2.39, 2.47, 2.4, 2.4, 2.4, 2.46, 2.43, 2.52, 2.3, 2.44, 2.02, 2.48, 2.44, 2.53, 2.57, 2.54, 2.48, 2.58, 2.07, 2.89, 2.25, 2.38, 2.47, 2.41, 2.47, 2.4, 2.51, 2.49, 2.54, 2.46, 2.45, 2.66, 2.52, 2.44, 2.56, 2.59, 2.68, 2.14, 2.54, 2.52, 2.61, 2.53, 2.54, 2.48, 2.39, 2.52, 2.48, 2.42, 2.5, 2.6, 2.51, 2.58, 2.51, 2.68, 2.55, 2.58, 2.48, 2.45, 2.4, 2.72, 2.54, 2.46, 2.56, 2.23, 2.63, 2.47, 2.52, 2.6, 2.56, 2.58, 2.57, 2.59, 2.52, 2.53, 2.57, 2.54, 2.61, 2.16, 2.22, 2.44, 2.6, 2.27, 2.13, 2.53, 2.75, 2.06, 2.19, 2.13, 2.23, 2.47, 2.23, 2.33, 2.53, 2.44, 2.23, 2.47, 2.28, 2.58, 2.56, 2.17, 2.54, 2.4, 2.57, 2.71, 2.61, 2.58, 2.68, 2.52, 2.7, 2.22, 2.23, 2.22, 2.04, 2.53, 2.5, 2.44, 2.4, 2.21, 2.54, 2.5, 2.58, 2.41, 2.18, 2.47, 2.83, 2.44, 2.48, 2.43, 2.62, 2.48, 2.37, 2.79, 2.22, 2.64, 2.78, 2.26, 2.54, 2.44, 2.33, 2.46, 2.16, 2.46, 2.52, 2.75, 2.27, 2.2, 2.47, 2.25, 2.27, 2.87, 2.7, 2.75, 2.57, 2.23, 2.16, 2.84, 2.7, 2.4, 1.99, 2.24, 2.18, 2.39, 2.48, 2.12, 2.32, 2.53, 2.45, 2.46, 2.53, 2.18, 2.33, 2.51, 2.16, 2.22, 2.02, 2.81, 2.14, 2.28, 2.23, 2.51, 2.2, 2.18, 2.77, 2.44, 2.49, 2.74, 2.56, 2.54, 2.58, 2.59, 2.56, 2.75, 2.73, 2.75, 2.77, 2.74, 2.42, 2.72, 2.62, 2.82, 2.81, 2.61, 2.49, 2.24, 2.59, 2.21, 2.51, 2.78, 2.53, 2.18, 2.57, 2.57, 2.47, 2.41, 2.57, 2.51, 2.51, 2.79, 2.65, 2.86, 2.57, 2.56, 2.62, 2.54, 2.55, 2.76, 2.83, 2.4, 2.62, 2.57, 2.64, 2.61, 2.12, 2.44, 2.25, 2.67, 2.83, 2.52, 2.21, 2.31, 2.02, 2.09, 2.29, 2.33, 2.83, 2.62, 2.6, 2.76, 2.24, 2.83, 2.53, 2.59, 2.63, 2.63, 2.39, 2.7, 2.58, 2.21, 2.39, 2.85, 2.84, 2.65, 2.67, 2.58, 2.31, 2.64, 2.17, 2.39, 2.47, 2.72, 2.26, 2.84, 2.48, 2.46, 2.79, 2.2, 2.5, 2.61, 2.38, 2.41, 2.52, 2.84, 2.58, 2.63, 2.84, 2.42, 2.46, 2.5, 2.88, 2.27, 2.3, 2.81, 2.51, 2.79, 2.59, 2.55, 2.86, 2.18, 2.4, 2.54, 2.64, 2.52, 2.6, 2.51, 2.19, 2.32, 2.26, 2.55, 2.45, 2.17, 2.4, 2.66, 2.25, 2.63, 2.12, 2.84, 2.43, 2.65, 2.59, 2.24, 2.35, 2.63, 2.8, 2.22, 2.4, 2.8, 2.23, 2.35, 1.91, 2.59, 2.87, 2.83, 2.64, 2.24, 2.67, 2.47, 2.53, 2.54, 2.31, 2.24, 2.43, 2.6, 2.56, 2.69, 2.75, 2.26, 2.2, 2.49, 2.55, 2.86, 2.2, 2.39, 2.65, 2.49, 2.33, 2.61, 2.29, 2.61, 2.55, 2.36, 2.88, 2.85, 2.49, 2.3, 2.73, 2.65, 2.23, 2.81, 2.85, 2.79, 2.76, 2.53, 2.34, 2.24, 2.38, 2.51, 2.01, 2.35, 2.56, 2.52, 2.61, 2.41, 2.41, 2.47, 2.5, 2.56, 2.81, 2.88, 2.34, 2.5, 2.87, 2.33, 2.51, 2.6, 2.73, 2.31, 2.64, 2.92, 2.66, 2.31, 2.61, 2.8, 2.59, 2.84, 2.61, 2.55, 2.39, 2.58, 2.5, 2.61, 2.56, 2.48, 2.64, 2.59, 2.09, 2.62, 2.63, 2.36, 2.61, 2.36, 2.62, 2.57, 2.53, 2.77, 2.88, 2.22, 2.89, 2.17, 2.52, 2.64, 2.44, 2.91, 2.25, 2.85, 2.59, 2.86, 2.56, 2.6, 2.45, 2.16, 2.63, 2.9, 2.75, 2.54, 2.61, 2.12, 2.91, 2.67, 2.66, 2.17, 2.74, 2.2, 2.63, 2.59, 2.2, 2.42, 2.5, 2.27, 2.89, 2.63, 2.73, 2.55, 2.24, 2.56, 2.84, 2.54, 2.31, 2.3, 2.75, 2.6, 2.88, 2.78, 2.51, 2.6, 2.69, 2.78, 2.56, 2.6, 2.43, 2.52, 2.3, 2.32, 2.27, 2.55, 2.58, 2.45, 2.83, 2.21, 2.63, 2.9, 2.23, 2.66, 2.29, 2.25, 2.85, 2.26, 2.29, 2.35, 2.82, 2.59, 2.36, 2.89, 2.86, 2.58, 2.55, 2.84, 2.82, 2.8, 2.45, 2.57, 2.9, 2.84, 2.57, 2.88, 2.84, 2.52, 2.61, 2.62, 2.25, 2.32, 2.87, 2.8, 2.29, 2.31, 2.46, 2.61, 2.58, 2.87, 2.52, 2.69, 2.34, 2.25, 2.63, 2.56, 2.67, 2.28, 2.26, 2.13, 2.47, 2.29, 2.21, 2.66, 2.54, 2.44, 2.62, 2.48, 2.46, 2.65, 2.49, 2.58, 2.65, 2.52, 2.68, 2.6, 2.57, 2.89, 2.42, 2.42, 2.76, 2.59, 2.28, 2.49, 2.68, 2.37, 2.34, 2.48, 2.8, 2.53, 2.84, 2.67, 2.7, 2.34, 2.26, 2.5, 2.66, 2.29, 2.6, 2.89, 2.41, 2.49, 2.59, 2.17, 2.27, 2.6, 2.53, 2.6, 2.49, 2.73, 2.85, 2.58, 2.43, 2.75, 2.87, 2.34, 2.37, 2.61, 2.88, 2.79, 2.39, 2.47, 2.44, 2.8, 2.51, 2.22, 2.56, 2.24, 2.21, 2.23, 2.45, 2.07, 2.85, 2.44, 2.28, 2.83, 2.89, 2.85, 2.51, 2.62, 2.69, 2.66, 2.24, 2.51, 2.5, 2.48, 2.85, 2.19, 2.6, 2.58, 2.19, 2.23, 2.58, 2.52, 2.44, 2.53, 2.28, 2.52, 2.8, 2.87, 2.56, 2.42, 2.93, 2.85, 2.65, 2.56, 2.83, 2.31, 2.92, 2.43, 2.48, 2.8, 2.25, 2.66, 2.57, 2.64, 2.29, 2.6, 2.3, 2.35, 2.53, 2.54, 2.83, 2.53, 2.23, 2.32, 2.27, 2.27, 2.51, 2.19, 2.5, 2.6, 2.47, 2.19, 2.22, 2.2, 2.82, 2.59, 2.49, 2.21, 2.85, 2.6, 2.26, 2.25, 2.85, 2.61, 2.84, 2.87, 2.64, 2.67, 2.69, 2.72, 2.18, 2.56, 2.63, 2.21, 2.3, 2.21, 2.52, 2.82, 2.68, 2.89, 2.53, 2.83, 2.82, 2.7, 2.56, 2.22, 2.42, 2.64, 2.61, 2.12, 2.28, 2.66, 2.7, 2.92, 2.27, 2.55, 2.53, 2.76, 2.6, 2.7, 2.95, 1.98, 2.37, 2.46, 2.83, 2.83, 2.84, 2.77, 2.74, 2.14, 2.53, 2.45, 2.2, 2.54, 2.64, 2.52, 2.16, 2.52, 2.54, 2.16, 2.17, 2.81, 2.25, 2.8, 2.84, 2.23, 2.53, 2.78, 2.68, 2.15, 2.86, 2.94, 2.66, 2.74, 2.85, 2.94, 2.61, 2.63], 'val_acc': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0020491803278688526, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0020491803278688526, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0020491803278688526, 0.0020491803278688526, 0.0, 0.0, 0.0020491803278688526, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0020491803278688526, 0.0020491803278688526, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0, 0.0, 0.0020491803278688526, 0.0, 0.004098360655737705, 0.0020491803278688526, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0020491803278688526, 0.0, 0.0, 0.0, 0.0020491803278688526, 0.0, 0.0020491803278688526, 0.0020491803278688526, 0.0, 0.0, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.0, 0.0, 0.0, 0.0, 0.0020491803278688526, 0.0, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0, 0.004098360655737705, 0.0, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.0, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0, 0.0, 0.0020491803278688526, 0.0, 0.0, 0.0, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.004098360655737705, 0.004098360655737705, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0, 0.0020491803278688526, 0.0, 0.0, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526, 0.0020491803278688526]}
Model saved checkpoint_commit_msg_generator!

====STARTING NEURAL EDITOR EVALUATION====
Data set sizes (number of sentence pairs):
train 99044
valid 12381
test 12380 

Max sequence length in tokens: 100 

First training example:
src: public static TYPE_1 init ( java.lang.String name , java.util.Date date ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( name ) ; java.util.Calendar VAR_2 = java.util.Calendar.getInstance ( ) ; VAR_2 . METHOD_2 ( date ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; return VAR_1 ; }
trg: public static TYPE_1 init ( java.lang.String name , java.util.Date date ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( name ) ; java.util.Calendar VAR_2 = null ; if ( date != null ) { VAR_2 = java.util.Calendar.getInstance ( ) ; VAR_2 . METHOD_2 ( date ) ; } VAR_1 . METHOD_3 ( VAR_2 ) ; return VAR_1 ; }
diff_alignment: добавление добавление добавление добавление добавление добавление добавление добавление добавление добавление добавление добавление
diff_prev: паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг
diff_updated: null ; if ( date != null ) { VAR_2 = } 

Most common words:
         (    1592292
         )    1592062
         ;     773246
   паддинг     706282
         .     678320
     VAR_1     463158
  удаление     456918
         }     395262
         {     395110
         ,     341270 

First 10 words:
00 <unk>
01 <pad>
02 <s>
03 </s>
04 (
05 )
06 ;
07 паддинг
08 .
09 VAR_1 

Special words frequency and ids: 
<unk> 0 0
<pad> 0 1
<s> 0 2
</s> 0 3
замена 92007 30
удаление 456918 10
добавление 249364 16
равенство 0 0
паддинг 706282 7
Number of words (types): 498
Neural editor will not be tested because edit representations are not used.

====STARTING COMMIT MSG GENERATOR EVALUATION====

====BEAM SEARCH====

Data set sizes (number of sentence pairs):
train 4266
valid 488
test 587 

Max src sequence length in tokens: 100
Max trg sequence length in tokens: 15
Max diff sequence length in tokens: 86 

First training example:
src: public static void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws java.io.IOException { TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( ( ! ( VAR_1 . contains ( STRING_1 ) ) ) ) ; if ( VAR_2 == null ) { TYPE_2 . METHOD_4 ( VAR_1 ) ; } else { TYPE_2 . METHOD_4 ( ( ( VAR_1 + STRING_1 ) + VAR_2 ) ) ; } }
trg: add method_1 with classloader
diff_alignment: добавление добавление добавление добавление добавление добавление добавление
diff_prev: паддинг паддинг паддинг паддинг паддинг паддинг паддинг
diff_updated: , TYPE_3 VAR_3 , VAR_3 , VAR_3
Most common words in src vocabulary:
         (      32292
         )      32115
         .      14397
         ;      13763
     VAR_1       8763
         {       7761
         }       7670
         ,       7010
     VAR_2       5370
    TYPE_1       5336 


Most common words in trg vocabulary:
       fix        772
        to        744
        in        673
       for        556
       add        385
       the        376
        of        368
      when        276
         (        269
         )        269 


Most common words in diff vocabulary:
         (    1592292
         )    1592062
         ;     773246
   паддинг     706282
         .     678320
     VAR_1     463158
  удаление     456918
         }     395262
         {     395110
         ,     341270 

First 10 words in src vocabulary:
00 <unk>
01 <pad>
02 <s>
03 </s>
04 (
05 )
06 .
07 ;
08 VAR_1
09 { 


First 10 words in trg vocabulary:
00 <unk>
01 <pad>
02 <s>
03 </s>
04 fix
05 to
06 in
07 for
08 add
09 the 


First 10 words in diff vocabulary:
00 <unk>
01 <pad>
02 <s>
03 </s>
04 (
05 )
06 ;
07 паддинг
08 .
09 VAR_1 

Special words frequency and ids in src vocabulary: 
<unk> 0 0
<pad> 0 1
<s> 0 2
</s> 0 3
Special words frequency and ids in trg vocabulary: 
<unk> 0 0
<pad> 0 1
<s> 0 2
</s> 0 3
Special words frequency and ids in diffs_field vocabulary: 
<unk> 0 0
<pad> 0 1
<s> 0 2
</s> 0 3
замена 92007 30
удаление 456918 10
добавление 249364 16
равенство 0 0
паддинг 706282 7
Number of words (types) in src vocabulary: 432
Number of words (types) in trg vocabulary: 5829
Number of words (types) in diff vocabulary: 498
Start conducting accuracy calculation experiment for Test dataset...
Top-1 accuracy: 3 / 587 = 0.005110732538330494
Top-3 accuracy: 4 / 587 = 0.0068143100511073255
Top-5 accuracy: 4 / 587 = 0.0068143100511073255
Top-10 accuracy: 4 / 587 = 0.0068143100511073255
Top-50 accuracy: 4 / 587 = 0.0068143100511073255
Duration: 0:01:26.517357

Start conducting BLEU calculation experiment for Test dataset...
b'BLEU = 4.32, 10.7/4.9/3.9/3.7 (BP=0.820, ratio=0.834, hyp_len=3142, ref_len=3767)\n'
Errors: b'perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_TIME = "ru_RU.UTF-8",\n\tLC_MONETARY = "ru_RU.UTF-8",\n\tLC_ADDRESS = "ru_RU.UTF-8",\n\tLC_TELEPHONE = "ru_RU.UTF-8",\n\tLC_NAME = "ru_RU.UTF-8",\n\tLC_MEASUREMENT = "ru_RU.UTF-8",\n\tLC_IDENTIFICATION = "ru_RU.UTF-8",\n\tLC_NUMERIC = "ru_RU.UTF-8",\n\tLC_PAPER = "ru_RU.UTF-8",\n\tLC_CTYPE = "C.UTF-8",\n\tLANG = "en_US.UTF-8"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale ("C").\n'
Duration: 0:00:00.110616

Start conducting accuracy calculation experiment for Validation dataset...
Top-1 accuracy: 2 / 488 = 0.004098360655737705
Top-3 accuracy: 3 / 488 = 0.006147540983606557
Top-5 accuracy: 3 / 488 = 0.006147540983606557
Top-10 accuracy: 3 / 488 = 0.006147540983606557
Top-50 accuracy: 5 / 488 = 0.010245901639344262
Duration: 0:01:12.191535

Start conducting BLEU calculation experiment for Validation dataset...
b'BLEU = 2.96, 9.2/3.5/2.5/2.0 (BP=0.823, ratio=0.837, hyp_len=2606, ref_len=3113)\n'
Errors: b'perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_TIME = "ru_RU.UTF-8",\n\tLC_MONETARY = "ru_RU.UTF-8",\n\tLC_ADDRESS = "ru_RU.UTF-8",\n\tLC_TELEPHONE = "ru_RU.UTF-8",\n\tLC_NAME = "ru_RU.UTF-8",\n\tLC_MEASUREMENT = "ru_RU.UTF-8",\n\tLC_IDENTIFICATION = "ru_RU.UTF-8",\n\tLC_NUMERIC = "ru_RU.UTF-8",\n\tLC_PAPER = "ru_RU.UTF-8",\n\tLC_CTYPE = "C.UTF-8",\n\tLANG = "en_US.UTF-8"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale ("C").\n'
Duration: 0:00:00.107070

Start conducting accuracy calculation experiment for Train dataset (test size approximation)...
Top-1 accuracy: 555 / 587 = 0.9454855195911414
Top-3 accuracy: 585 / 587 = 0.9965928449744463
Top-5 accuracy: 587 / 587 = 1.0
Top-10 accuracy: 587 / 587 = 1.0
Top-50 accuracy: 587 / 587 = 1.0
Duration: 0:01:27.451400

Start conducting BLEU calculation experiment for Train dataset (test size approximation)...
b'BLEU = 95.35, 96.2/96.0/96.1/96.3 (BP=0.992, ratio=0.992, hyp_len=3698, ref_len=3729)\n'
Errors: b'perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_TIME = "ru_RU.UTF-8",\n\tLC_MONETARY = "ru_RU.UTF-8",\n\tLC_ADDRESS = "ru_RU.UTF-8",\n\tLC_TELEPHONE = "ru_RU.UTF-8",\n\tLC_NAME = "ru_RU.UTF-8",\n\tLC_MEASUREMENT = "ru_RU.UTF-8",\n\tLC_IDENTIFICATION = "ru_RU.UTF-8",\n\tLC_NUMERIC = "ru_RU.UTF-8",\n\tLC_PAPER = "ru_RU.UTF-8",\n\tLC_CTYPE = "C.UTF-8",\n\tLANG = "en_US.UTF-8"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale ("C").\n'
Duration: 0:00:00.116145


====GREEDY====

Data set sizes (number of sentence pairs):
train 4266
valid 488
test 587 

Max src sequence length in tokens: 100
Max trg sequence length in tokens: 15
Max diff sequence length in tokens: 86 

First training example:
src: public static void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws java.io.IOException { TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( ( ! ( VAR_1 . contains ( STRING_1 ) ) ) ) ; if ( VAR_2 == null ) { TYPE_2 . METHOD_4 ( VAR_1 ) ; } else { TYPE_2 . METHOD_4 ( ( ( VAR_1 + STRING_1 ) + VAR_2 ) ) ; } }
trg: add method_1 with classloader
diff_alignment: добавление добавление добавление добавление добавление добавление добавление
diff_prev: паддинг паддинг паддинг паддинг паддинг паддинг паддинг
diff_updated: , TYPE_3 VAR_3 , VAR_3 , VAR_3
Most common words in src vocabulary:
         (      32292
         )      32115
         .      14397
         ;      13763
     VAR_1       8763
         {       7761
         }       7670
         ,       7010
     VAR_2       5370
    TYPE_1       5336 


Most common words in trg vocabulary:
       fix        772
        to        744
        in        673
       for        556
       add        385
       the        376
        of        368
      when        276
         (        269
         )        269 


Most common words in diff vocabulary:
         (    1592292
         )    1592062
         ;     773246
   паддинг     706282
         .     678320
     VAR_1     463158
  удаление     456918
         }     395262
         {     395110
         ,     341270 

First 10 words in src vocabulary:
00 <unk>
01 <pad>
02 <s>
03 </s>
04 (
05 )
06 .
07 ;
08 VAR_1
09 { 


First 10 words in trg vocabulary:
00 <unk>
01 <pad>
02 <s>
03 </s>
04 fix
05 to
06 in
07 for
08 add
09 the 


First 10 words in diff vocabulary:
00 <unk>
01 <pad>
02 <s>
03 </s>
04 (
05 )
06 ;
07 паддинг
08 .
09 VAR_1 

Special words frequency and ids in src vocabulary: 
<unk> 0 0
<pad> 0 1
<s> 0 2
</s> 0 3
Special words frequency and ids in trg vocabulary: 
<unk> 0 0
<pad> 0 1
<s> 0 2
</s> 0 3
Special words frequency and ids in diffs_field vocabulary: 
<unk> 0 0
<pad> 0 1
<s> 0 2
</s> 0 3
замена 92007 30
удаление 456918 10
добавление 249364 16
равенство 0 0
паддинг 706282 7
Number of words (types) in src vocabulary: 432
Number of words (types) in trg vocabulary: 5829
Number of words (types) in diff vocabulary: 498
Start conducting accuracy calculation experiment for Test dataset...
Top-1 accuracy: 2 / 587 = 0.0034071550255536627
Duration: 0:00:01.853270

Start conducting BLEU calculation experiment for Test dataset...
b'BLEU = 3.98, 10.3/4.2/3.0/2.7 (BP=0.913, ratio=0.917, hyp_len=3453, ref_len=3767)\n'
Errors: b'perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_TIME = "ru_RU.UTF-8",\n\tLC_MONETARY = "ru_RU.UTF-8",\n\tLC_ADDRESS = "ru_RU.UTF-8",\n\tLC_TELEPHONE = "ru_RU.UTF-8",\n\tLC_NAME = "ru_RU.UTF-8",\n\tLC_MEASUREMENT = "ru_RU.UTF-8",\n\tLC_IDENTIFICATION = "ru_RU.UTF-8",\n\tLC_NUMERIC = "ru_RU.UTF-8",\n\tLC_PAPER = "ru_RU.UTF-8",\n\tLC_CTYPE = "C.UTF-8",\n\tLANG = "en_US.UTF-8"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale ("C").\n'
Duration: 0:00:00.113259

Start conducting accuracy calculation experiment for Validation dataset...
Top-1 accuracy: 2 / 488 = 0.004098360655737705
Duration: 0:00:01.549855

Start conducting BLEU calculation experiment for Validation dataset...
b'BLEU = 2.95, 9.4/3.1/2.1/1.7 (BP=0.927, ratio=0.930, hyp_len=2895, ref_len=3113)\n'
Errors: b'perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_TIME = "ru_RU.UTF-8",\n\tLC_MONETARY = "ru_RU.UTF-8",\n\tLC_ADDRESS = "ru_RU.UTF-8",\n\tLC_TELEPHONE = "ru_RU.UTF-8",\n\tLC_NAME = "ru_RU.UTF-8",\n\tLC_MEASUREMENT = "ru_RU.UTF-8",\n\tLC_IDENTIFICATION = "ru_RU.UTF-8",\n\tLC_NUMERIC = "ru_RU.UTF-8",\n\tLC_PAPER = "ru_RU.UTF-8",\n\tLC_CTYPE = "C.UTF-8",\n\tLANG = "en_US.UTF-8"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale ("C").\n'
Duration: 0:00:00.108082

Start conducting accuracy calculation experiment for Train dataset (test size approximation)...
Top-1 accuracy: 554 / 587 = 0.9437819420783645
Duration: 0:00:01.902920

Start conducting BLEU calculation experiment for Train dataset (test size approximation)...
b'BLEU = 95.37, 96.1/95.9/96.0/96.2 (BP=0.993, ratio=0.993, hyp_len=3702, ref_len=3729)\n'
Errors: b'perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_TIME = "ru_RU.UTF-8",\n\tLC_MONETARY = "ru_RU.UTF-8",\n\tLC_ADDRESS = "ru_RU.UTF-8",\n\tLC_TELEPHONE = "ru_RU.UTF-8",\n\tLC_NAME = "ru_RU.UTF-8",\n\tLC_MEASUREMENT = "ru_RU.UTF-8",\n\tLC_IDENTIFICATION = "ru_RU.UTF-8",\n\tLC_NUMERIC = "ru_RU.UTF-8",\n\tLC_PAPER = "ru_RU.UTF-8",\n\tLC_CTYPE = "C.UTF-8",\n\tLANG = "en_US.UTF-8"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale ("C").\n'
Duration: 0:00:00.115912

