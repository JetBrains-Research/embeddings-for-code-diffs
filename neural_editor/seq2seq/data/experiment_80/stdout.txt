
====STARTING TRAINING OF NEURAL EDITOR====
Data set sizes (number of sentence pairs):
train 99044
valid 12381
test 12380 

Max sequence length in tokens: 100 

First training example:
src: public static TYPE_1 init ( java.lang.String name , java.util.Date date ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( name ) ; java.util.Calendar VAR_2 = java.util.Calendar.getInstance ( ) ; VAR_2 . METHOD_2 ( date ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; return VAR_1 ; }
trg: public static TYPE_1 init ( java.lang.String name , java.util.Date date ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( name ) ; java.util.Calendar VAR_2 = null ; if ( date != null ) { VAR_2 = java.util.Calendar.getInstance ( ) ; VAR_2 . METHOD_2 ( date ) ; } VAR_1 . METHOD_3 ( VAR_2 ) ; return VAR_1 ; }
diff_alignment: добавление добавление добавление добавление добавление добавление добавление добавление добавление добавление добавление добавление
diff_prev: паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг
diff_updated: null ; if ( date != null ) { VAR_2 = } 

Most common words:
         (    1592292
         )    1592062
         ;     773246
   паддинг     706282
         .     678320
     VAR_1     463158
  удаление     456918
         }     395262
         {     395110
         ,     341270 

First 10 words:
00 <unk>
01 <pad>
02 <s>
03 </s>
04 (
05 )
06 ;
07 паддинг
08 .
09 VAR_1 

Special words frequency and ids: 
<unk> 0 0
<pad> 0 1
<s> 0 2
</s> 0 3
замена 92007 30
удаление 456918 10
добавление 249364 16
равенство 0 0
паддинг 706282 7
Number of words (types): 498
{'ADDITION_TOKEN': 'добавление',
 'BATCH_SIZE': 64,
 'BEAM_SIZE': 50,
 'BEST_ON': 'PPL',
 'BLEU_PERL_SCRIPT_PATH': './experiments/multi-bleu.perl',
 'CONDUCT_EVALUATION_ON_TUFANO_AND_DEFECTS4J': False,
 'DATASET_ROOT': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_bug_fixes/0_100',
 'DATASET_ROOT_COMMIT': '../../../embeddings-for-code-diffs-data/datasets/commit_message_generation/Tufano',
 'DECODER_HIDDEN_SIZE': 256,
 'DECODER_HIDDEN_SIZE_COMMIT': 256,
 'DEFECTS4J_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/Defects4J',
 'DELETION_TOKEN': 'удаление',
 'DEVICE': device(type='cuda', index=0),
 'DIVERSITY_STRENGTH': None,
 'DROPOUT': 0.2,
 'EARLY_STOPPING_ROUNDS': 25,
 'EDIT_REPRESENTATION_SIZE': 1,
 'ENCODER_HIDDEN_SIZE': 128,
 'ENCODER_HIDDEN_SIZE_COMMIT': 128,
 'EOS_TOKEN': '</s>',
 'FREEZE_EDIT_ENCODER_WEIGHTS': True,
 'IS_COMMIT_GENERATION': True,
 'IS_TEST': False,
 'LEARNING_RATE': 0.0001,
 'LEAVE_ONLY_CHANGED': True,
 'LOWER': False,
 'LOWER_COMMIT_MSG': True,
 'MAKE_CUDA_REPRODUCIBLE': False,
 'MAX_NUM_OF_EPOCHS': 1000,
 'MSG_MAX_LEN': 15,
 'NUM_GROUPS': 1,
 'NUM_LAYERS': 2,
 'NUM_LAYERS_COMMIT': 2,
 'OUTPUT_PATH': '../../../embeddings-for-code-diffs-data/experiment_80/',
 'PADDING_TOKEN': 'паддинг',
 'PAD_TOKEN': '<pad>',
 'PRINT_EVERY_iTH_BATCH': 5,
 'REPLACEMENT_TOKEN': 'замена',
 'SAVE_MODEL_EVERY': 5,
 'SEED': 9382,
 'SOS_TOKEN': '<s>',
 'START_BEST_FROM_EPOCH': 0,
 'TEACHER_FORCING_RATIO': 0.9,
 'TEST_BATCH_SIZE': 64,
 'TOKENS_CODE_CHUNK_MAX_LEN': 100,
 'TOKEN_MIN_FREQ': 1,
 'TOP_K': [1, 3, 5, 10, 50],
 'TSNE_BATCH_SIZE': 1024,
 'TUFANO_BUG_FIXES_0_50_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_bug_fixes/0_50',
 'TUFANO_BUG_FIXES_50_100_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_bug_fixes/50_100',
 'TUFANO_CODE_CHANGES_0_50_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_code_changes/0_50',
 'TUFANO_CODE_CHANGES_50_100_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_code_changes/50_100',
 'TUFANO_LABELED_0_50_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_code_changes/labeled/0_50',
 'TUFANO_LABELED_50_100_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_code_changes/labeled/50_100',
 'UNCHANGED_TOKEN': 'равенство',
 'UNK_TOKEN': '<unk>',
 'USE_BRIDGE': True,
 'USE_COPYING_MECHANISM': False,
 'USE_EDIT_REPRESENTATION': False,
 'VAL_BATCH_SIZE': 64,
 'VERBOSE': True,
 'WORD_EMBEDDING_SIZE': 128,
 'WORD_EMBEDDING_SIZE_COMMIT': 128}

====STARTING TRAINING OF COMMIT MESSAGE GENERATOR====
Data set sizes (number of sentence pairs):
train 5232
valid 654
test 654 

Max src sequence length in tokens: 100
Max trg sequence length in tokens: 15
Max diff sequence length in tokens: 86 

First training example:
src: public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object VAR_2 , TYPE_2 args ) { TYPE_3 VAR_3 = VAR_4 . METHOD_2 ( ) ; TYPE_4 . METHOD_3 ( ) . METHOD_4 ( VAR_5 , new TYPE_5 ( VAR_3 . getId ( ) ) , new TYPE_6 ( this , METHOD_5 ( VAR_3 ) ) ) ; }
trg: v2v- '' external provider '' refreshed by dc
diff_alignment: добавление добавление добавление добавление
diff_prev: паддинг паддинг паддинг паддинг
diff_updated: METHOD_6 ( ) ;
Most common words in src vocabulary:
         (      37682
         )      37421
         .      16572
         ;      16017
     VAR_1      10170
         {       8995
         }       8861
         ,       8033
     VAR_2       6226
    TYPE_1       6199 


Most common words in trg vocabulary:
       fix        948
        to        907
        in        819
       for        670
       add        482
        of        474
       the        456
      when        331
        on        324
         (        300 


Most common words in diff vocabulary:
         (    1592292
         )    1592062
         ;     773246
   паддинг     706282
         .     678320
     VAR_1     463158
  удаление     456918
         }     395262
         {     395110
         ,     341270 

First 10 words in src vocabulary:
00 <unk>
01 <pad>
02 <s>
03 </s>
04 (
05 )
06 .
07 ;
08 VAR_1
09 { 


First 10 words in trg vocabulary:
00 <unk>
01 <pad>
02 <s>
03 </s>
04 fix
05 to
06 in
07 for
08 add
09 of 


First 10 words in diff vocabulary:
00 <unk>
01 <pad>
02 <s>
03 </s>
04 (
05 )
06 ;
07 паддинг
08 .
09 VAR_1 

Special words frequency and ids in src vocabulary: 
<unk> 0 0
<pad> 0 1
<s> 0 2
</s> 0 3
Special words frequency and ids in trg vocabulary: 
<unk> 0 0
<pad> 0 1
<s> 0 2
</s> 0 3
Special words frequency and ids in diffs_field vocabulary: 
<unk> 0 0
<pad> 0 1
<s> 0 2
</s> 0 3
замена 92007 30
удаление 456918 10
добавление 249364 16
равенство 0 0
паддинг 706282 7
Number of words (types) in src vocabulary: 434
Number of words (types) in trg vocabulary: 6234
Number of words (types) in diff vocabulary: 498
{'ADDITION_TOKEN': 'добавление',
 'BATCH_SIZE': 64,
 'BEAM_SIZE': 50,
 'BEST_ON': 'PPL',
 'BLEU_PERL_SCRIPT_PATH': './experiments/multi-bleu.perl',
 'CONDUCT_EVALUATION_ON_TUFANO_AND_DEFECTS4J': False,
 'DATASET_ROOT': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_bug_fixes/0_100',
 'DATASET_ROOT_COMMIT': '../../../embeddings-for-code-diffs-data/datasets/commit_message_generation/Tufano',
 'DECODER_HIDDEN_SIZE': 256,
 'DECODER_HIDDEN_SIZE_COMMIT': 256,
 'DEFECTS4J_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/Defects4J',
 'DELETION_TOKEN': 'удаление',
 'DEVICE': device(type='cuda', index=0),
 'DIVERSITY_STRENGTH': None,
 'DROPOUT': 0.2,
 'EARLY_STOPPING_ROUNDS': 25,
 'EDIT_REPRESENTATION_SIZE': 1,
 'ENCODER_HIDDEN_SIZE': 128,
 'ENCODER_HIDDEN_SIZE_COMMIT': 128,
 'EOS_TOKEN': '</s>',
 'FREEZE_EDIT_ENCODER_WEIGHTS': True,
 'IS_COMMIT_GENERATION': True,
 'IS_TEST': False,
 'LEARNING_RATE': 0.0001,
 'LEAVE_ONLY_CHANGED': True,
 'LOWER': False,
 'LOWER_COMMIT_MSG': True,
 'MAKE_CUDA_REPRODUCIBLE': False,
 'MAX_NUM_OF_EPOCHS': 1000,
 'MSG_MAX_LEN': 15,
 'NUM_GROUPS': 1,
 'NUM_LAYERS': 2,
 'NUM_LAYERS_COMMIT': 2,
 'OUTPUT_PATH': '../../../embeddings-for-code-diffs-data/experiment_80/',
 'PADDING_TOKEN': 'паддинг',
 'PAD_TOKEN': '<pad>',
 'PRINT_EVERY_iTH_BATCH': 5,
 'REPLACEMENT_TOKEN': 'замена',
 'SAVE_MODEL_EVERY': 5,
 'SEED': 9382,
 'SOS_TOKEN': '<s>',
 'START_BEST_FROM_EPOCH': 0,
 'TEACHER_FORCING_RATIO': 0.9,
 'TEST_BATCH_SIZE': 64,
 'TOKENS_CODE_CHUNK_MAX_LEN': 100,
 'TOKEN_MIN_FREQ': 1,
 'TOP_K': [1, 3, 5, 10, 50],
 'TSNE_BATCH_SIZE': 1024,
 'TUFANO_BUG_FIXES_0_50_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_bug_fixes/0_50',
 'TUFANO_BUG_FIXES_50_100_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_bug_fixes/50_100',
 'TUFANO_CODE_CHANGES_0_50_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_code_changes/0_50',
 'TUFANO_CODE_CHANGES_50_100_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_code_changes/50_100',
 'TUFANO_LABELED_0_50_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_code_changes/labeled/0_50',
 'TUFANO_LABELED_50_100_PATH': '../../../embeddings-for-code-diffs-data/datasets/java/tufano_code_changes/labeled/50_100',
 'UNCHANGED_TOKEN': 'равенство',
 'UNK_TOKEN': '<unk>',
 'USE_BRIDGE': True,
 'USE_COPYING_MECHANISM': False,
 'USE_EDIT_REPRESENTATION': False,
 'VAL_BATCH_SIZE': 64,
 'VERBOSE': True,
 'WORD_EMBEDDING_SIZE': 128,
 'WORD_EMBEDDING_SIZE_COMMIT': 128}
Epoch 0 / 1000
Epoch Step: 5 / 82 Loss (mean): 68.99455207586288 Loss (std): 18.677523530060366 Loss ratio: 0.270710120844375 Tokens per Sec: 1923.1968994549943
Epoch Step: 10 / 82 Loss (mean): 64.2490331530571 Loss (std): 18.12624987618803 Loss ratio: 0.282124866112877 Tokens per Sec: 3203.492106079664
Epoch Step: 15 / 82 Loss (mean): 60.90072327852249 Loss (std): 18.804531140616195 Loss ratio: 0.3087735272800591 Tokens per Sec: 3171.3189843216915
Epoch Step: 20 / 82 Loss (mean): 63.45079070329666 Loss (std): 22.09649693286782 Loss ratio: 0.34824620289120795 Tokens per Sec: 2518.3243377100935
Epoch Step: 25 / 82 Loss (mean): 66.07364672422409 Loss (std): 19.401834128918534 Loss ratio: 0.29363952333215754 Tokens per Sec: 3810.310549904472
Epoch Step: 30 / 82 Loss (mean): 78.32528764009476 Loss (std): 27.65160222677557 Loss ratio: 0.3530354379780241 Tokens per Sec: 3582.23628503219
Epoch Step: 35 / 82 Loss (mean): 59.58650726079941 Loss (std): 21.8613967372088 Loss ratio: 0.36688501713190547 Tokens per Sec: 3095.188081410297
Epoch Step: 40 / 82 Loss (mean): 62.756301909685135 Loss (std): 22.2579557682056 Loss ratio: 0.35467283907579245 Tokens per Sec: 2867.8142419906967
Epoch Step: 45 / 82 Loss (mean): 60.60869139432907 Loss (std): 21.983504862475517 Loss ratio: 0.36271208562230123 Tokens per Sec: 2958.4981530761233
Epoch Step: 50 / 82 Loss (mean): 57.55770991742611 Loss (std): 26.4953579358519 Loss ratio: 0.4603268263081154 Tokens per Sec: 3253.0262029068426
Epoch Step: 55 / 82 Loss (mean): 61.96657446026802 Loss (std): 21.952103227858466 Loss ratio: 0.3542571687891801 Tokens per Sec: 4127.0843763058065
Epoch Step: 60 / 82 Loss (mean): 62.46534922719002 Loss (std): 20.03648814679313 Loss ratio: 0.3207616445706448 Tokens per Sec: 2734.844815787505
Epoch Step: 65 / 82 Loss (mean): 49.57854379713535 Loss (std): 20.51259837705956 Loss ratio: 0.4137394285115082 Tokens per Sec: 2620.4095256468104
Epoch Step: 70 / 82 Loss (mean): 47.16979965567589 Loss (std): 23.485891651468993 Loss ratio: 0.4979010261419027 Tokens per Sec: 2724.5873359745547
Epoch Step: 75 / 82 Loss (mean): 40.83476600050926 Loss (std): 11.127728955143839 Loss ratio: 0.2725062500665502 Tokens per Sec: 2820.179904723016
Epoch Step: 80 / 82 Loss (mean): 52.53763523697853 Loss (std): 18.179912829037892 Loss ratio: 0.3460359939505231 Tokens per Sec: 3668.5667746019535
Mean loss per sample: 58.12467075834216 Std loss per sample: 22.454764561382632 ratio: 0.38632071835279824
Epoch ended with duration 0:00:13.014387
Train perplexity: 2588.690202908994
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix[0m
Epoch Step: 5 / 11 Loss (mean): 51.74150061607361 Loss (std): 17.898976287820613 Loss ratio: 0.3459307533546922 Tokens per Sec: 5519.872194183103
Epoch Step: 10 / 11 Loss (mean): 50.31251981854439 Loss (std): 22.119916059046012 Loss ratio: 0.4396503323392077 Tokens per Sec: 3235.753398399574
Mean loss per sample: 48.42492380638006 Std loss per sample: 19.785598959447157 ratio: 0.408582965221731
Epoch ended with duration 0:00:01.212695
b'BLEU = 0.00, 20.5/0.0/0.0/0.0 (BP=0.005, ratio=0.157, hyp_len=654, ref_len=4156)\n'
Validation perplexity: 723.556640198871
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved best_on_validation_commit_msg_generator!
Model saved checkpoint_commit_msg_generator!
Epoch 1 / 1000
Epoch Step: 5 / 82 Loss (mean): 46.88239938020706 Loss (std): 20.913256850021476 Loss ratio: 0.4460790643503347 Tokens per Sec: 2928.1369745427355
Epoch Step: 10 / 82 Loss (mean): 47.98773777484894 Loss (std): 17.646069072208697 Loss ratio: 0.3677203779640818 Tokens per Sec: 2974.042131947892
Epoch Step: 15 / 82 Loss (mean): 48.330611646175385 Loss (std): 20.09794302572565 Loss ratio: 0.4158429273120133 Tokens per Sec: 2639.5238469988712
Epoch Step: 20 / 82 Loss (mean): 44.006420105695724 Loss (std): 15.574052078157601 Loss ratio: 0.35390409037480103 Tokens per Sec: 3417.5547986124798
Epoch Step: 25 / 82 Loss (mean): 49.622265458106995 Loss (std): 17.08478303408208 Loss ratio: 0.3442967159269603 Tokens per Sec: 3100.499257242768
Epoch Step: 30 / 82 Loss (mean): 47.74660363793373 Loss (std): 19.491424864072965 Loss ratio: 0.4082264156813745 Tokens per Sec: 3607.7282176302333
Epoch Step: 35 / 82 Loss (mean): 45.64238718152046 Loss (std): 17.18024212222531 Loss ratio: 0.37640980639113436 Tokens per Sec: 2972.5521404330116
Epoch Step: 40 / 82 Loss (mean): 50.18161526322365 Loss (std): 20.54992911993056 Loss ratio: 0.4095111130269034 Tokens per Sec: 3584.9101005013154
Epoch Step: 45 / 82 Loss (mean): 47.27406744658947 Loss (std): 18.317161131876556 Loss ratio: 0.3874674239226696 Tokens per Sec: 2954.223293429799
Epoch Step: 50 / 82 Loss (mean): 45.30665200948715 Loss (std): 18.06445066874769 Loss ratio: 0.39871519672133393 Tokens per Sec: 3324.421974583009
Epoch Step: 55 / 82 Loss (mean): 50.050972402095795 Loss (std): 18.29341052971428 Loss ratio: 0.3654956068135906 Tokens per Sec: 3047.356636965381
Epoch Step: 60 / 82 Loss (mean): 39.593025505542755 Loss (std): 17.13437716047105 Loss ratio: 0.432762511621456 Tokens per Sec: 3384.557583660365
Epoch Step: 65 / 82 Loss (mean): 49.215069845318794 Loss (std): 21.022986549707763 Loss ratio: 0.42716563474932084 Tokens per Sec: 3372.1730272755613
Epoch Step: 70 / 82 Loss (mean): 47.22225385904312 Loss (std): 17.141188359620358 Loss ratio: 0.36298962795774725 Tokens per Sec: 2788.086368449056
Epoch Step: 75 / 82 Loss (mean): 44.72891068458557 Loss (std): 17.279273375539095 Loss ratio: 0.3863110706492984 Tokens per Sec: 3541.9681939512275
Epoch Step: 80 / 82 Loss (mean): 46.448174208402634 Loss (std): 16.01285376959157 Loss ratio: 0.34474667826006367 Tokens per Sec: 2787.888403135396
Mean loss per sample: 47.467445950807054 Std loss per sample: 18.395058595226107 ratio: 0.38752998453487153
Epoch ended with duration 0:00:12.280342
Train perplexity: 612.7565284051816
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix[0m
Epoch Step: 5 / 11 Loss (mean): 50.01859229803085 Loss (std): 16.795668916441407 Loss ratio: 0.3357885167252623 Tokens per Sec: 5222.225217875081
Epoch Step: 10 / 11 Loss (mean): 49.02918027341366 Loss (std): 20.816631718010893 Loss ratio: 0.42457637680103794 Tokens per Sec: 3189.9422571498353
Mean loss per sample: 46.99750916308948 Std loss per sample: 18.679497643510608 ratio: 0.39745718392626983
Epoch ended with duration 0:00:01.249485
b'BLEU = 0.00, 20.5/0.0/0.0/0.0 (BP=0.005, ratio=0.157, hyp_len=654, ref_len=4156)\n'
Validation perplexity: 595.9149285064087
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved best_on_validation_commit_msg_generator!
Epoch 2 / 1000
Epoch Step: 5 / 82 Loss (mean): 42.81013981997967 Loss (std): 14.918811428729903 Loss ratio: 0.34848779965365195 Tokens per Sec: 2804.1541833460865
Epoch Step: 10 / 82 Loss (mean): 57.17816287279129 Loss (std): 24.55785690405274 Loss ratio: 0.4294971309009791 Tokens per Sec: 3908.9282989123553
Epoch Step: 15 / 82 Loss (mean): 45.31642612814903 Loss (std): 16.081005122649845 Loss ratio: 0.3548604004467349 Tokens per Sec: 2820.2942016829184
Epoch Step: 20 / 82 Loss (mean): 49.111366271972656 Loss (std): 19.897462965911604 Loss ratio: 0.4051498558545881 Tokens per Sec: 2827.424455011384
Epoch Step: 25 / 82 Loss (mean): 44.56013296544552 Loss (std): 17.642376032989006 Loss ratio: 0.3959228767712591 Tokens per Sec: 2889.181406889861
Epoch Step: 30 / 82 Loss (mean): 47.43889421224594 Loss (std): 19.365703297568547 Loss ratio: 0.4082241717297335 Tokens per Sec: 3169.8930109527214
Epoch Step: 35 / 82 Loss (mean): 48.45985780656338 Loss (std): 17.606884409944147 Loss ratio: 0.36332926275238636 Tokens per Sec: 3392.3019825501888
Epoch Step: 40 / 82 Loss (mean): 47.000667959451675 Loss (std): 20.66759045619674 Loss ratio: 0.4397297177569273 Tokens per Sec: 4034.3019020254637
Epoch Step: 45 / 82 Loss (mean): 48.21432489156723 Loss (std): 13.972741506380736 Loss ratio: 0.28980477353577117 Tokens per Sec: 2902.0340758663137
Epoch Step: 50 / 82 Loss (mean): 46.41197395324707 Loss (std): 16.988034378876524 Loss ratio: 0.3660269739009454 Tokens per Sec: 2805.948637649677
Epoch Step: 55 / 82 Loss (mean): 49.61973196268082 Loss (std): 16.93657299197092 Loss ratio: 0.3413273776792865 Tokens per Sec: 2534.3469975902613
Epoch Step: 60 / 82 Loss (mean): 47.9007253497839 Loss (std): 14.99994050237359 Loss ratio: 0.313146416736699 Tokens per Sec: 3078.4355815651866
Epoch Step: 65 / 82 Loss (mean): 47.88902732729912 Loss (std): 16.69849821631851 Loss ratio: 0.34869153015349585 Tokens per Sec: 3520.7639331011464
Epoch Step: 70 / 82 Loss (mean): 47.38889333605766 Loss (std): 19.71781706564091 Loss ratio: 0.4160851979769245 Tokens per Sec: 3648.2357077802167
Epoch Step: 75 / 82 Loss (mean): 49.116899624466896 Loss (std): 19.39743907447116 Loss ratio: 0.39492393092353484 Tokens per Sec: 3202.9030547834964
Epoch Step: 80 / 82 Loss (mean): 51.70674568414688 Loss (std): 17.667904852356266 Loss ratio: 0.3416943885867717 Tokens per Sec: 3370.318827463726
Mean loss per sample: 46.117090293209124 Std loss per sample: 17.812041619141624 ratio: 0.38623515720297946
Epoch ended with duration 0:00:12.324984
Train perplexity: 510.4992124210843
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix for[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix for[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix for[0m
Epoch Step: 5 / 11 Loss (mean): 49.812346428632736 Loss (std): 16.62831861668779 Loss ratio: 0.33381921970914485 Tokens per Sec: 5686.0109893504205
Epoch Step: 10 / 11 Loss (mean): 48.82664889097214 Loss (std): 20.437163354556724 Loss ratio: 0.4185657590426092 Tokens per Sec: 3221.619223021357
Mean loss per sample: 46.8187198638916 Std loss per sample: 18.522547205638734 ratio: 0.39562267527788675
Epoch ended with duration 0:00:01.203668
b'BLEU = 0.00, 17.3/0.6/0.0/0.0 (BP=0.113, ratio=0.315, hyp_len=1308, ref_len=4156)\n'
Validation perplexity: 581.6032545351195
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved best_on_validation_commit_msg_generator!
Epoch 3 / 1000
Epoch Step: 5 / 82 Loss (mean): 47.60828518867493 Loss (std): 13.627737886428804 Loss ratio: 0.2862471906396363 Tokens per Sec: 3042.823343575636
Epoch Step: 10 / 82 Loss (mean): 43.00237584114075 Loss (std): 17.414205449500667 Loss ratio: 0.4049591472301943 Tokens per Sec: 2894.661063321346
Epoch Step: 15 / 82 Loss (mean): 40.510795176029205 Loss (std): 19.28789201587403 Loss ratio: 0.4761173393922156 Tokens per Sec: 3311.7536764779124
Epoch Step: 20 / 82 Loss (mean): 45.22357377409935 Loss (std): 16.557140887905618 Loss ratio: 0.36611748046741716 Tokens per Sec: 3195.4897964027577
Epoch Step: 25 / 82 Loss (mean): 46.73998746275902 Loss (std): 19.404350737470956 Loss ratio: 0.41515524053000114 Tokens per Sec: 3252.2646382211387
Epoch Step: 30 / 82 Loss (mean): 43.82609297335148 Loss (std): 16.151517757110124 Loss ratio: 0.3685365648936828 Tokens per Sec: 3003.482459082535
Epoch Step: 35 / 82 Loss (mean): 49.13381688296795 Loss (std): 18.015780125279885 Loss ratio: 0.3666676286963773 Tokens per Sec: 3707.687428447104
Epoch Step: 40 / 82 Loss (mean): 48.15764898061752 Loss (std): 17.68638069296218 Loss ratio: 0.36726005250132937 Tokens per Sec: 3303.260093098439
Epoch Step: 45 / 82 Loss (mean): 51.62193110585213 Loss (std): 17.2789935274906 Loss ratio: 0.3347219516460856 Tokens per Sec: 4255.768625459126
Epoch Step: 50 / 82 Loss (mean): 46.561654061079025 Loss (std): 11.062020131324541 Loss ratio: 0.23757790298457857 Tokens per Sec: 2982.580247995187
Epoch Step: 55 / 82 Loss (mean): 42.37885037064552 Loss (std): 16.97415482760925 Loss ratio: 0.4005336312607174 Tokens per Sec: 2967.469443161052
Epoch Step: 60 / 82 Loss (mean): 43.0308882445097 Loss (std): 20.24714424334517 Loss ratio: 0.47052582619947425 Tokens per Sec: 3083.9859365400243
Epoch Step: 65 / 82 Loss (mean): 47.268454521894455 Loss (std): 15.262938752982427 Loss ratio: 0.32289904350295034 Tokens per Sec: 2937.5196869426527
Epoch Step: 70 / 82 Loss (mean): 43.71984004974365 Loss (std): 16.69499006570761 Loss ratio: 0.3818630179504854 Tokens per Sec: 3064.663740045553
Epoch Step: 75 / 82 Loss (mean): 40.61086304485798 Loss (std): 18.645609269706817 Loss ratio: 0.45912861416196044 Tokens per Sec: 2793.830943101322
Epoch Step: 80 / 82 Loss (mean): 48.92128013074398 Loss (std): 14.773814838997561 Loss ratio: 0.30199158320293296 Tokens per Sec: 3445.2010793348823
Mean loss per sample: 45.4551418332514 Std loss per sample: 17.5905880883892 ratio: 0.38698786053553375
Epoch ended with duration 0:00:12.138304
Train perplexity: 466.7942196728744
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix for to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix for to[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix for to[0m
Epoch Step: 5 / 11 Loss (mean): 49.66559234261513 Loss (std): 16.86095398411103 Loss ratio: 0.339489638375734 Tokens per Sec: 5498.14349100153
Epoch Step: 10 / 11 Loss (mean): 48.595932707190514 Loss (std): 20.53746982036461 Loss ratio: 0.4226170520094941 Tokens per Sec: 3226.358096570992
Mean loss per sample: 46.71025609240984 Std loss per sample: 18.69440545215867 ratio: 0.4002205728689294
Epoch ended with duration 0:00:01.216155
b'BLEU = 0.00, 17.4/0.3/0.0/0.0 (BP=0.327, ratio=0.472, hyp_len=1962, ref_len=4156)\n'
Validation perplexity: 573.089016928927
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved best_on_validation_commit_msg_generator!
Epoch 4 / 1000
Epoch Step: 5 / 82 Loss (mean): 45.6898959428072 Loss (std): 18.51686960296691 Loss ratio: 0.4052727462138586 Tokens per Sec: 2831.3297031963025
Epoch Step: 10 / 82 Loss (mean): 43.75060777366161 Loss (std): 17.541405268831074 Loss ratio: 0.40094083628687804 Tokens per Sec: 3161.7133732059788
Epoch Step: 15 / 82 Loss (mean): 50.512551009655 Loss (std): 17.461855105006688 Loss ratio: 0.34569339215651607 Tokens per Sec: 2819.886204711029
Epoch Step: 20 / 82 Loss (mean): 43.627477169036865 Loss (std): 17.341039192545836 Loss ratio: 0.39747976087081777 Tokens per Sec: 3177.8735634465374
Epoch Step: 25 / 82 Loss (mean): 26.079523980617523 Loss (std): 7.749706426559414 Loss ratio: 0.2971567438239689 Tokens per Sec: 3484.7536594872727
Epoch Step: 30 / 82 Loss (mean): 44.073763221502304 Loss (std): 14.32535586897713 Loss ratio: 0.3250313751739767 Tokens per Sec: 3186.9224395327615
Epoch Step: 35 / 82 Loss (mean): 38.72474779188633 Loss (std): 15.70878782658298 Loss ratio: 0.40565242441357646 Tokens per Sec: 3261.224414251462
Epoch Step: 40 / 82 Loss (mean): 43.33361779153347 Loss (std): 17.55175189145986 Loss ratio: 0.4050377694264226 Tokens per Sec: 3224.8611308256445
Epoch Step: 45 / 82 Loss (mean): 46.646668300032616 Loss (std): 19.52840691841152 Loss ratio: 0.4186452672847777 Tokens per Sec: 3563.871151017095
Epoch Step: 50 / 82 Loss (mean): 39.884923443198204 Loss (std): 16.49310711259177 Loss ratio: 0.4135173315822029 Tokens per Sec: 3261.3532898408603
Epoch Step: 55 / 82 Loss (mean): 44.75694212317467 Loss (std): 14.563683596257293 Loss ratio: 0.3253949645660974 Tokens per Sec: 3775.706328575462
Epoch Step: 60 / 82 Loss (mean): 46.777970403432846 Loss (std): 16.54394536584617 Loss ratio: 0.35366958470331744 Tokens per Sec: 2571.5913293980293
Epoch Step: 65 / 82 Loss (mean): 46.85052648186684 Loss (std): 21.137854134144323 Loss ratio: 0.4511764481947835 Tokens per Sec: 2887.134461667188
Epoch Step: 70 / 82 Loss (mean): 47.04065364599228 Loss (std): 19.738472452843823 Loss ratio: 0.41960455314645656 Tokens per Sec: 3529.7228080009677
Epoch Step: 75 / 82 Loss (mean): 44.18683233857155 Loss (std): 15.179749438624528 Loss ratio: 0.3435355882112832 Tokens per Sec: 2659.507474864246
Epoch Step: 80 / 82 Loss (mean): 36.37413987517357 Loss (std): 9.777121010488614 Loss ratio: 0.26879318779883477 Tokens per Sec: 3375.584136232494
Mean loss per sample: 45.0458482135691 Std loss per sample: 17.54350114466685 ratio: 0.38945878122863814
Epoch ended with duration 0:00:12.253045
Train perplexity: 441.6637466928671
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix for to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix for to[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix for to[0m
Epoch Step: 5 / 11 Loss (mean): 49.598940789699554 Loss (std): 16.951036588203586 Loss ratio: 0.34176206826827815 Tokens per Sec: 5647.742085036851
Epoch Step: 10 / 11 Loss (mean): 48.534006640315056 Loss (std): 20.49589355423131 Loss ratio: 0.42229964045882573 Tokens per Sec: 3123.806805479605
Mean loss per sample: 46.67184316273494 Std loss per sample: 18.758369269034887 ratio: 0.40192047277045356
Epoch ended with duration 0:00:01.228739
b'BLEU = 0.00, 17.4/0.3/0.0/0.0 (BP=0.327, ratio=0.472, hyp_len=1962, ref_len=4156)\n'
Validation perplexity: 570.1036442909281
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved best_on_validation_commit_msg_generator!
Epoch 5 / 1000
Epoch Step: 5 / 82 Loss (mean): 51.871774315834045 Loss (std): 17.634003119660306 Loss ratio: 0.33995372921487793 Tokens per Sec: 3711.267202428876
Epoch Step: 10 / 82 Loss (mean): 39.2923169285059 Loss (std): 16.168502875334408 Loss ratio: 0.41149273291146743 Tokens per Sec: 2821.548413397855
Epoch Step: 15 / 82 Loss (mean): 45.06531211733818 Loss (std): 19.697204415939353 Loss ratio: 0.4370812824873604 Tokens per Sec: 3109.6296042167555
Epoch Step: 20 / 82 Loss (mean): 48.81690338253975 Loss (std): 17.28211640767742 Loss ratio: 0.35401910424860505 Tokens per Sec: 4118.411121427878
Epoch Step: 25 / 82 Loss (mean): 46.87131333351135 Loss (std): 13.522546641838995 Loss ratio: 0.2885036855191093 Tokens per Sec: 2694.3695415118436
Epoch Step: 30 / 82 Loss (mean): 43.94731850922108 Loss (std): 17.626530847125714 Loss ratio: 0.40108319335632037 Tokens per Sec: 3558.102486365933
Epoch Step: 35 / 82 Loss (mean): 43.51772782206535 Loss (std): 14.258085627437064 Loss ratio: 0.32763855883596027 Tokens per Sec: 3059.546870591729
Epoch Step: 40 / 82 Loss (mean): 48.227118492126465 Loss (std): 14.41593833125239 Loss ratio: 0.2989176791395059 Tokens per Sec: 2784.584720647103
Epoch Step: 45 / 82 Loss (mean): 49.87733893096447 Loss (std): 20.504642797242887 Loss ratio: 0.4111013786365686 Tokens per Sec: 2766.9833551430156
Epoch Step: 50 / 82 Loss (mean): 46.26558980345726 Loss (std): 19.23555278514315 Loss ratio: 0.41576369969254656 Tokens per Sec: 3668.0062797245496
Epoch Step: 55 / 82 Loss (mean): 45.03151273727417 Loss (std): 16.320540957104203 Loss ratio: 0.3624248879295391 Tokens per Sec: 2602.2104717650045
Epoch Step: 60 / 82 Loss (mean): 46.49442033469677 Loss (std): 19.67444394380998 Loss ratio: 0.42315709717812733 Tokens per Sec: 3564.797574724823
Epoch Step: 65 / 82 Loss (mean): 48.88013629615307 Loss (std): 16.33875000719882 Loss ratio: 0.3342615476398477 Tokens per Sec: 2824.654800450197
Epoch Step: 70 / 82 Loss (mean): 44.13897940516472 Loss (std): 14.58988512188741 Loss ratio: 0.33054423365711627 Tokens per Sec: 3277.1735315287733
Epoch Step: 75 / 82 Loss (mean): 44.97347550094128 Loss (std): 18.906429882794818 Loss ratio: 0.4203906785544985 Tokens per Sec: 4200.4933781497575
Epoch Step: 80 / 82 Loss (mean): 44.953547060489655 Loss (std): 15.485644123300835 Loss ratio: 0.3444810284372732 Tokens per Sec: 2758.5500035263717
Mean loss per sample: 44.7083557988161 Std loss per sample: 17.516239069611785 ratio: 0.3917889342304023
Epoch ended with duration 0:00:12.147727
Train perplexity: 421.9628346155697
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix for to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix for to[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix for to[0m
Epoch Step: 5 / 11 Loss (mean): 49.48978340625763 Loss (std): 16.99706628362252 Loss ratio: 0.3434459622523497 Tokens per Sec: 5523.282731720327
Epoch Step: 10 / 11 Loss (mean): 48.40459559857845 Loss (std): 20.476370358443432 Loss ratio: 0.42302533685551097 Tokens per Sec: 3186.352639098834
Mean loss per sample: 46.642983300970236 Std loss per sample: 18.669838966862784 ratio: 0.40027111573016444
Epoch ended with duration 0:00:01.223045
b'BLEU = 0.00, 17.4/0.4/0.0/0.0 (BP=0.327, ratio=0.472, hyp_len=1962, ref_len=4156)\n'
Validation perplexity: 567.8709516927998
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved best_on_validation_commit_msg_generator!
Model saved checkpoint_commit_msg_generator!
Epoch 6 / 1000
Epoch Step: 5 / 82 Loss (mean): 36.52373278141022 Loss (std): 14.364090708087009 Loss ratio: 0.3932810152252022 Tokens per Sec: 3026.1203839850523
Epoch Step: 10 / 82 Loss (mean): 49.43452434241772 Loss (std): 20.250845985983844 Loss ratio: 0.40964986020119204 Tokens per Sec: 3378.771080912772
Epoch Step: 15 / 82 Loss (mean): 43.2410731613636 Loss (std): 16.256898424912425 Loss ratio: 0.3759596429127978 Tokens per Sec: 4014.3981855384545
Epoch Step: 20 / 82 Loss (mean): 41.582375422120094 Loss (std): 16.530379883750765 Loss ratio: 0.39753332309527684 Tokens per Sec: 2671.4839228350897
Epoch Step: 25 / 82 Loss (mean): 40.98744387924671 Loss (std): 16.58676529313846 Loss ratio: 0.40467918277618875 Tokens per Sec: 2831.082180864128
Epoch Step: 30 / 82 Loss (mean): 45.766199216246605 Loss (std): 19.405997842648098 Loss ratio: 0.42402467705378377 Tokens per Sec: 3046.5184299625507
Epoch Step: 35 / 82 Loss (mean): 40.76557531952858 Loss (std): 16.25962259535616 Loss ratio: 0.39885669386265366 Tokens per Sec: 3277.3609477717605
Epoch Step: 40 / 82 Loss (mean): 42.848820716142654 Loss (std): 15.170919104923984 Loss ratio: 0.3540568643749994 Tokens per Sec: 3381.029577880792
Epoch Step: 45 / 82 Loss (mean): 43.94728970527649 Loss (std): 17.781017056011187 Loss ratio: 0.40459871758317617 Tokens per Sec: 3154.1415484531385
Epoch Step: 50 / 82 Loss (mean): 39.53157326579094 Loss (std): 18.370155173793204 Loss ratio: 0.46469577748098406 Tokens per Sec: 3275.3828353888766
Epoch Step: 55 / 82 Loss (mean): 44.51123255491257 Loss (std): 17.381998640939152 Loss ratio: 0.39050814015305796 Tokens per Sec: 3605.1106721043216
Epoch Step: 60 / 82 Loss (mean): 47.51839928328991 Loss (std): 17.358972096999643 Loss ratio: 0.3653105398923658 Tokens per Sec: 3286.2753780854196
Epoch Step: 65 / 82 Loss (mean): 42.28469583392143 Loss (std): 16.848258992508327 Loss ratio: 0.3984481538824833 Tokens per Sec: 3115.4234266678673
Epoch Step: 70 / 82 Loss (mean): 50.31264638900757 Loss (std): 17.14038021097469 Loss ratio: 0.34067737320848945 Tokens per Sec: 3242.99791474704
Epoch Step: 75 / 82 Loss (mean): 48.158644527196884 Loss (std): 17.09933527880271 Loss ratio: 0.35506263614097594 Tokens per Sec: 3277.4155106099283
Epoch Step: 80 / 82 Loss (mean): 40.66707333922386 Loss (std): 6.887363071090718 Loss ratio: 0.16935969337256873 Tokens per Sec: 3261.6244338194183
Mean loss per sample: 44.29891462191165 Std loss per sample: 17.364349104060526 ratio: 0.3919813668633671
Epoch ended with duration 0:00:12.106232
Train perplexity: 399.23795223739984
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in the[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in the[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in the[0m
Epoch Step: 5 / 11 Loss (mean): 49.4504876434803 Loss (std): 17.05206507651691 Loss ratio: 0.34483108032131016 Tokens per Sec: 5672.493603073264
Epoch Step: 10 / 11 Loss (mean): 48.4411855340004 Loss (std): 20.628270320287818 Loss ratio: 0.4258415662805989 Tokens per Sec: 3197.3700195642873
Mean loss per sample: 46.493673998281494 Std loss per sample: 18.832631018636796 ratio: 0.40505792291942533
Epoch ended with duration 0:00:01.210393
b'BLEU = 0.00, 12.3/1.2/0.3/0.0 (BP=0.555, ratio=0.629, hyp_len=2616, ref_len=4156)\n'
Validation perplexity: 556.4587793080013
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved best_on_validation_commit_msg_generator!
Epoch 7 / 1000
Epoch Step: 5 / 82 Loss (mean): 36.012042447924614 Loss (std): 14.190546836625987 Loss ratio: 0.3940500419310095 Tokens per Sec: 2869.3900137371934
Epoch Step: 10 / 82 Loss (mean): 42.92270955443382 Loss (std): 13.862061644324514 Loss ratio: 0.3229540210350629 Tokens per Sec: 3110.256114625769
Epoch Step: 15 / 82 Loss (mean): 39.76438361406326 Loss (std): 14.856960574284148 Loss ratio: 0.37362481758750976 Tokens per Sec: 2916.0078164155034
Epoch Step: 20 / 82 Loss (mean): 41.83888676762581 Loss (std): 17.607262299959604 Loss ratio: 0.4208348658450395 Tokens per Sec: 2877.2138666934716
Epoch Step: 25 / 82 Loss (mean): 42.04310032725334 Loss (std): 14.160245227811327 Loss ratio: 0.3368030691740475 Tokens per Sec: 3249.5767319448623
Epoch Step: 30 / 82 Loss (mean): 45.61344686150551 Loss (std): 17.454937964629238 Loss ratio: 0.38267088250592085 Tokens per Sec: 3271.6099896681067
Epoch Step: 35 / 82 Loss (mean): 43.28432114422321 Loss (std): 17.352564592511758 Loss ratio: 0.4008972333121056 Tokens per Sec: 3254.371554592408
Epoch Step: 40 / 82 Loss (mean): 41.44386902451515 Loss (std): 13.720506101679291 Loss ratio: 0.33106238448836056 Tokens per Sec: 3229.731935286615
Epoch Step: 45 / 82 Loss (mean): 43.826469391584396 Loss (std): 14.091322905863755 Loss ratio: 0.321525395531167 Tokens per Sec: 3661.5934221885273
Epoch Step: 50 / 82 Loss (mean): 49.58200287818909 Loss (std): 17.34634058701622 Loss ratio: 0.3498515505642633 Tokens per Sec: 4152.098064403167
Epoch Step: 55 / 82 Loss (mean): 44.01820135116577 Loss (std): 16.466680333057198 Loss ratio: 0.3740879869599919 Tokens per Sec: 2746.2859828994815
Epoch Step: 60 / 82 Loss (mean): 38.727010518312454 Loss (std): 16.20083973661274 Loss ratio: 0.41833437489196357 Tokens per Sec: 2726.9215677208513
Epoch Step: 65 / 82 Loss (mean): 45.735613241791725 Loss (std): 15.523783948590852 Loss ratio: 0.3394244189210022 Tokens per Sec: 3004.3931977684706
Epoch Step: 70 / 82 Loss (mean): 45.33949050307274 Loss (std): 19.321955982420505 Loss ratio: 0.42616173600607665 Tokens per Sec: 3376.56206088993
Epoch Step: 75 / 82 Loss (mean): 44.77038832008839 Loss (std): 20.258326792455897 Loss ratio: 0.452493881616971 Tokens per Sec: 3712.392778174963
Epoch Step: 80 / 82 Loss (mean): 45.44132603704929 Loss (std): 18.4078167667806 Loss ratio: 0.40508977998952556 Tokens per Sec: 2541.9459668379377
Mean loss per sample: 44.10355383030136 Std loss per sample: 17.39957612039809 ratio: 0.39451641895678047
Epoch ended with duration 0:00:12.251077
Train perplexity: 388.8304210658167
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in the[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in the[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in the[0m
Epoch Step: 5 / 11 Loss (mean): 49.377977788448334 Loss (std): 17.1067065905142 Loss ratio: 0.34644404968962106 Tokens per Sec: 5624.287369640788
Epoch Step: 10 / 11 Loss (mean): 48.34586611390114 Loss (std): 20.53898346322132 Loss ratio: 0.42483432636892277 Tokens per Sec: 3192.4560802608107
Mean loss per sample: 46.44388018762665 Std loss per sample: 18.826633642540582 ratio: 0.4053630654132185
Epoch ended with duration 0:00:01.225019
b'BLEU = 0.00, 12.4/1.2/0.3/0.0 (BP=0.548, ratio=0.624, hyp_len=2595, ref_len=4156)\n'
Validation perplexity: 552.7041098386111
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved best_on_validation_commit_msg_generator!
Epoch 8 / 1000
Epoch Step: 5 / 82 Loss (mean): 39.55620650947094 Loss (std): 15.040715145103363 Loss ratio: 0.38023654117343547 Tokens per Sec: 3312.7842853012903
Epoch Step: 10 / 82 Loss (mean): 41.05185402929783 Loss (std): 16.44237984437156 Loss ratio: 0.40052709513770035 Tokens per Sec: 3379.5883745782958
Epoch Step: 15 / 82 Loss (mean): 41.94724602997303 Loss (std): 17.509652798783293 Loss ratio: 0.41742079530732307 Tokens per Sec: 3189.032168519106
Epoch Step: 20 / 82 Loss (mean): 53.67641043663025 Loss (std): 8.64040038603452 Loss ratio: 0.16097202319881798 Tokens per Sec: 4437.174304240595
Epoch Step: 25 / 82 Loss (mean): 45.25277337431908 Loss (std): 15.309711517609133 Loss ratio: 0.33831543076865617 Tokens per Sec: 3137.148287623102
Epoch Step: 30 / 82 Loss (mean): 47.5506277680397 Loss (std): 16.886357198469977 Loss ratio: 0.35512374896172955 Tokens per Sec: 3251.812769049866
Epoch Step: 35 / 82 Loss (mean): 46.10300068060557 Loss (std): 18.991530515279493 Loss ratio: 0.411936972320953 Tokens per Sec: 2649.398392818525
Epoch Step: 40 / 82 Loss (mean): 45.10100698471069 Loss (std): 15.54952630983181 Loss ratio: 0.3447711558880076 Tokens per Sec: 3293.5192073190965
Epoch Step: 45 / 82 Loss (mean): 43.83735194802284 Loss (std): 16.328820395562627 Loss ratio: 0.37248646804495433 Tokens per Sec: 2827.1622117434463
Epoch Step: 50 / 82 Loss (mean): 42.79089277982712 Loss (std): 12.830057863772463 Loss ratio: 0.2998315069000133 Tokens per Sec: 3128.2784500630696
Epoch Step: 55 / 82 Loss (mean): 43.9241723716259 Loss (std): 16.16256443189749 Loss ratio: 0.36796514445740974 Tokens per Sec: 3417.5646340390335
Epoch Step: 60 / 82 Loss (mean): 45.84735378623009 Loss (std): 19.15617471403041 Loss ratio: 0.41782508982631456 Tokens per Sec: 3414.7236577148074
Epoch Step: 65 / 82 Loss (mean): 45.04735693335533 Loss (std): 18.946204007820096 Loss ratio: 0.4205841429464949 Tokens per Sec: 3035.6661053245966
Epoch Step: 70 / 82 Loss (mean): 48.778819262981415 Loss (std): 20.277912049332425 Loss ratio: 0.41571141646557797 Tokens per Sec: 2728.9616327471967
Epoch Step: 75 / 82 Loss (mean): 36.07876458764076 Loss (std): 14.32500718844603 Loss ratio: 0.3970481626012561 Tokens per Sec: 3059.2851528565484
Epoch Step: 80 / 82 Loss (mean): 42.75136253237724 Loss (std): 17.5056538808281 Loss ratio: 0.4094759288097636 Tokens per Sec: 2929.305910010206
Mean loss per sample: 43.72170235312313 Std loss per sample: 17.297516863579478 ratio: 0.395627707353986
Epoch ended with duration 0:00:12.102496
Train perplexity: 369.26480854833164
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in the[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in the[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in the[0m
Epoch Step: 5 / 11 Loss (mean): 49.292135775089264 Loss (std): 17.10471192216486 Loss ratio: 0.3470069140483269 Tokens per Sec: 5694.93335716606
Epoch Step: 10 / 11 Loss (mean): 49.48113204538822 Loss (std): 20.37644760151221 Loss ratio: 0.4118023731312621 Tokens per Sec: 3176.8869969654456
Mean loss per sample: 46.447948623505575 Std loss per sample: 18.832352954094304 ratio: 0.40545069291959973
Epoch ended with duration 0:00:01.212287
b'BLEU = 0.00, 12.7/1.2/0.3/0.0 (BP=0.525, ratio=0.608, hyp_len=2528, ref_len=4156)\n'
Validation perplexity: 553.0099348262397
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 9 / 1000
Epoch Step: 5 / 82 Loss (mean): 44.87584161758423 Loss (std): 14.297144148348831 Loss ratio: 0.31859333737256557 Tokens per Sec: 3419.119122388917
Epoch Step: 10 / 82 Loss (mean): 50.85513409972191 Loss (std): 17.384004899636995 Loss ratio: 0.34183382282600366 Tokens per Sec: 4007.1312542966834
Epoch Step: 15 / 82 Loss (mean): 46.5603683590889 Loss (std): 16.26704181515381 Loss ratio: 0.34937528177820726 Tokens per Sec: 3363.794984416645
Epoch Step: 20 / 82 Loss (mean): 44.62893629074097 Loss (std): 17.640709054233113 Loss ratio: 0.39527514031054733 Tokens per Sec: 2964.1413634746273
Epoch Step: 25 / 82 Loss (mean): 46.05548757314682 Loss (std): 16.997855205589598 Loss ratio: 0.36907339605498807 Tokens per Sec: 3026.4678395197097
Epoch Step: 30 / 82 Loss (mean): 41.556058675050735 Loss (std): 17.43092685708437 Loss ratio: 0.41945572830633915 Tokens per Sec: 2845.8157841489865
Epoch Step: 35 / 82 Loss (mean): 47.77785162627697 Loss (std): 15.770332764111298 Loss ratio: 0.3300762220844165 Tokens per Sec: 3100.5133901768745
Epoch Step: 40 / 82 Loss (mean): 35.87134447693825 Loss (std): 18.913118859444925 Loss ratio: 0.5272486753766423 Tokens per Sec: 3272.4944824709023
Epoch Step: 45 / 82 Loss (mean): 45.87566336989403 Loss (std): 13.63922638826087 Loss ratio: 0.29730853760714515 Tokens per Sec: 3011.7894481141216
Epoch Step: 50 / 82 Loss (mean): 43.371465265750885 Loss (std): 19.26415080033233 Loss ratio: 0.444166474023755 Tokens per Sec: 2494.5637175861066
Epoch Step: 55 / 82 Loss (mean): 41.822934687137604 Loss (std): 15.166356283420221 Loss ratio: 0.36263252200913926 Tokens per Sec: 2935.1039476372666
Epoch Step: 60 / 82 Loss (mean): 35.97543589770794 Loss (std): 14.067117318851812 Loss ratio: 0.39102006599308653 Tokens per Sec: 3596.765609842935
Epoch Step: 65 / 82 Loss (mean): 41.5017496496439 Loss (std): 16.602270793260413 Loss ratio: 0.4000378522210778 Tokens per Sec: 3144.65225293608
Epoch Step: 70 / 82 Loss (mean): 41.910309225320816 Loss (std): 17.411109447403195 Loss ratio: 0.4154373892541929 Tokens per Sec: 3350.8632533988903
Epoch Step: 75 / 82 Loss (mean): 42.759719505906105 Loss (std): 16.98319698937975 Loss ratio: 0.3971774648108713 Tokens per Sec: 3525.581435287099
Epoch Step: 80 / 82 Loss (mean): 46.663401171565056 Loss (std): 17.115477560460118 Loss ratio: 0.3667858992432308 Tokens per Sec: 3326.277419545322
Mean loss per sample: 43.50595237319258 Std loss per sample: 17.24955402763582 ratio: 0.396487218109139
Epoch ended with duration 0:00:12.149921
Train perplexity: 358.6485539371659
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in the[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in the[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in the[0m
Epoch Step: 5 / 11 Loss (mean): 49.40262112021446 Loss (std): 17.05393661832876 Loss ratio: 0.34520307286591856 Tokens per Sec: 5675.269050730582
Epoch Step: 10 / 11 Loss (mean): 48.40184007585049 Loss (std): 20.454769270180247 Loss ratio: 0.4226031332305878 Tokens per Sec: 3216.524414715719
Mean loss per sample: 46.42957635027918 Std loss per sample: 18.756651893037724 ratio: 0.4039806814417539
Epoch ended with duration 0:00:01.204957
b'BLEU = 0.00, 12.3/1.2/0.3/0.0 (BP=0.555, ratio=0.629, hyp_len=2616, ref_len=4156)\n'
Validation perplexity: 551.6302300234
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved best_on_validation_commit_msg_generator!
Epoch 10 / 1000
Epoch Step: 5 / 82 Loss (mean): 35.28830383718014 Loss (std): 14.09364149593664 Loss ratio: 0.399385631028472 Tokens per Sec: 4074.309461075813
Epoch Step: 10 / 82 Loss (mean): 40.94231574237347 Loss (std): 19.047295141965442 Loss ratio: 0.4652227114318388 Tokens per Sec: 4275.068582371231
Epoch Step: 15 / 82 Loss (mean): 45.28019222617149 Loss (std): 13.273089264023884 Loss ratio: 0.29313235239209456 Tokens per Sec: 2732.559818614969
Epoch Step: 20 / 82 Loss (mean): 38.12406688928604 Loss (std): 18.135336516812536 Loss ratio: 0.47569260041113526 Tokens per Sec: 2703.8766194534314
Epoch Step: 25 / 82 Loss (mean): 38.994761884212494 Loss (std): 14.76055644832475 Loss ratio: 0.3785266465314856 Tokens per Sec: 2875.592406060836
Epoch Step: 30 / 82 Loss (mean): 41.706335842609406 Loss (std): 13.51088829795314 Loss ratio: 0.32395289648412845 Tokens per Sec: 2833.493585797002
Epoch Step: 35 / 82 Loss (mean): 41.471857741475105 Loss (std): 13.35059705153426 Loss ratio: 0.32191943594035377 Tokens per Sec: 2551.467883480727
Epoch Step: 40 / 82 Loss (mean): 48.53001672029495 Loss (std): 17.313406701417364 Loss ratio: 0.35675666054689414 Tokens per Sec: 3132.4103636019786
Epoch Step: 45 / 82 Loss (mean): 43.56776747107506 Loss (std): 16.074851518777244 Loss ratio: 0.3689620205912421 Tokens per Sec: 3311.608127889599
Epoch Step: 50 / 82 Loss (mean): 43.949587225914 Loss (std): 18.56638555424375 Loss ratio: 0.4224473249044863 Tokens per Sec: 3453.5208988284567
Epoch Step: 55 / 82 Loss (mean): 44.81656301021576 Loss (std): 19.377096814937097 Loss ratio: 0.43236463292645094 Tokens per Sec: 4436.590564384685
Epoch Step: 60 / 82 Loss (mean): 41.39922395348549 Loss (std): 16.58995563972025 Loss ratio: 0.4007310779148919 Tokens per Sec: 3025.9978599766046
Epoch Step: 65 / 82 Loss (mean): 43.86214339733124 Loss (std): 10.842619166837562 Loss ratio: 0.247197659006725 Tokens per Sec: 2680.5329336702835
Epoch Step: 70 / 82 Loss (mean): 39.60508690774441 Loss (std): 16.180780448260396 Loss ratio: 0.4085530852628023 Tokens per Sec: 2830.67321221302
Epoch Step: 75 / 82 Loss (mean): 41.6629164069891 Loss (std): 16.996691150876252 Loss ratio: 0.4079573063210956 Tokens per Sec: 3318.04237277896
Epoch Step: 80 / 82 Loss (mean): 39.83409771323204 Loss (std): 7.2995318025973255 Loss ratio: 0.1832483279813961 Tokens per Sec: 4152.390135054166
Mean loss per sample: 43.172295664793126 Std loss per sample: 17.171556992432976 ratio: 0.39774482056177357
Epoch ended with duration 0:00:12.152027
Train perplexity: 342.82837927361857
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in[0m
Epoch Step: 5 / 11 Loss (mean): 49.1875764131546 Loss (std): 17.16229638910281 Loss ratio: 0.34891526764699404 Tokens per Sec: 5469.046414681395
Epoch Step: 10 / 11 Loss (mean): 48.28668236732483 Loss (std): 20.647168942680622 Loss ratio: 0.4275955176546231 Tokens per Sec: 3167.4978022932314
Mean loss per sample: 46.56744703750727 Std loss per sample: 18.916413062076096 ratio: 0.40621537716766104
Epoch ended with duration 0:00:01.232035
b'BLEU = 0.00, 13.7/1.5/0.6/0.0 (BP=0.327, ratio=0.472, hyp_len=1962, ref_len=4156)\n'
Validation perplexity: 562.0685266457205
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved checkpoint_commit_msg_generator!
Epoch 11 / 1000
Epoch Step: 5 / 82 Loss (mean): 35.19503045082092 Loss (std): 13.905534983489474 Loss ratio: 0.3950993877649885 Tokens per Sec: 2624.0874557410766
Epoch Step: 10 / 82 Loss (mean): 52.1815298050642 Loss (std): 24.935309546979596 Loss ratio: 0.47785700496192873 Tokens per Sec: 3478.920060601799
Epoch Step: 15 / 82 Loss (mean): 52.104029297828674 Loss (std): 8.583692545683618 Loss ratio: 0.16474143480572098 Tokens per Sec: 3751.447152336215
Epoch Step: 20 / 82 Loss (mean): 42.527697056531906 Loss (std): 15.934229017646947 Loss ratio: 0.37467885920240723 Tokens per Sec: 3167.5079387102805
Epoch Step: 25 / 82 Loss (mean): 42.31471738219261 Loss (std): 16.74929293287005 Loss ratio: 0.3958266524998389 Tokens per Sec: 2693.2349587860626
Epoch Step: 30 / 82 Loss (mean): 37.198513358831406 Loss (std): 15.242806663886196 Loss ratio: 0.4097692431105545 Tokens per Sec: 3262.9206384625954
Epoch Step: 35 / 82 Loss (mean): 23.97583894431591 Loss (std): 8.133498011027452 Loss ratio: 0.3392372642274404 Tokens per Sec: 2992.6402182322354
Epoch Step: 40 / 82 Loss (mean): 43.741982728242874 Loss (std): 16.98704457412259 Loss ratio: 0.38834646978987003 Tokens per Sec: 2768.6970518502503
Epoch Step: 45 / 82 Loss (mean): 43.0989533662796 Loss (std): 15.070054465489628 Loss ratio: 0.34966172698941594 Tokens per Sec: 2938.928083012296
Epoch Step: 50 / 82 Loss (mean): 46.14135357737541 Loss (std): 13.76290054169438 Loss ratio: 0.2982769137583942 Tokens per Sec: 3189.156234647189
Epoch Step: 55 / 82 Loss (mean): 50.601882606744766 Loss (std): 14.182081867208538 Loss ratio: 0.2802678702178997 Tokens per Sec: 3680.948001552053
Epoch Step: 60 / 82 Loss (mean): 45.64727999269962 Loss (std): 18.335305300481146 Loss ratio: 0.401673556527651 Tokens per Sec: 3563.2112605078282
Epoch Step: 65 / 82 Loss (mean): 38.110884577035904 Loss (std): 18.131277894399663 Loss ratio: 0.47575064435331543 Tokens per Sec: 2942.0195489731514
Epoch Step: 70 / 82 Loss (mean): 34.99145144224167 Loss (std): 19.000729293232162 Loss ratio: 0.5430106071648828 Tokens per Sec: 3385.2155032776786
Epoch Step: 75 / 82 Loss (mean): 44.8584498912096 Loss (std): 15.447101057082406 Loss ratio: 0.344352091847681 Tokens per Sec: 3143.0391279999717
Epoch Step: 80 / 82 Loss (mean): 48.301032334566116 Loss (std): 16.26818100886603 Loss ratio: 0.33680814306786316 Tokens per Sec: 3652.4033915476475
Mean loss per sample: 42.934541250405324 Std loss per sample: 17.13189772711551 ratio: 0.39902365853166716
Epoch ended with duration 0:00:12.137447
Train perplexity: 331.9829874515119
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in the[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in the[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in the[0m
Epoch Step: 5 / 11 Loss (mean): 49.110560923814774 Loss (std): 17.13014862016621 Loss ratio: 0.3488078388422444 Tokens per Sec: 5250.342908300564
Epoch Step: 10 / 11 Loss (mean): 48.3217331469059 Loss (std): 20.475889451127298 Loss ratio: 0.4237407915166717 Tokens per Sec: 3148.0293596234214
Mean loss per sample: 46.87910321728534 Std loss per sample: 18.846637595206133 ratio: 0.40202641052777155
Epoch ended with duration 0:00:01.254290
b'BLEU = 0.00, 12.4/1.2/0.3/0.0 (BP=0.551, ratio=0.626, hyp_len=2603, ref_len=4156)\n'
Validation perplexity: 586.3979469758864
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 12 / 1000
Epoch Step: 5 / 82 Loss (mean): 42.24031242728233 Loss (std): 19.84100802462063 Loss ratio: 0.46971735966151723 Tokens per Sec: 3302.324644242533
Epoch Step: 10 / 82 Loss (mean): 43.41324891149998 Loss (std): 18.15094751855184 Loss ratio: 0.41809696287770187 Tokens per Sec: 3105.903575741221
Epoch Step: 15 / 82 Loss (mean): 44.19392390549183 Loss (std): 15.047648114511134 Loss ratio: 0.3404913342089819 Tokens per Sec: 2814.608726364074
Epoch Step: 20 / 82 Loss (mean): 38.549919828772545 Loss (std): 18.77601588516623 Loss ratio: 0.48705719670919667 Tokens per Sec: 3285.8318285209666
Epoch Step: 25 / 82 Loss (mean): 42.21837401390076 Loss (std): 13.769787961501718 Loss ratio: 0.32615628344587355 Tokens per Sec: 3229.708586242016
Epoch Step: 30 / 82 Loss (mean): 40.2707881629467 Loss (std): 17.879962816886646 Loss ratio: 0.44399336671880846 Tokens per Sec: 3581.788966494022
Epoch Step: 35 / 82 Loss (mean): 37.6591919362545 Loss (std): 18.28726310039075 Loss ratio: 0.48559892446299685 Tokens per Sec: 2839.752358389866
Epoch Step: 40 / 82 Loss (mean): 45.78475700318813 Loss (std): 14.01629668247061 Loss ratio: 0.3061345652985471 Tokens per Sec: 3345.2638784617216
Epoch Step: 45 / 82 Loss (mean): 42.30149495601654 Loss (std): 15.658831096281164 Loss ratio: 0.3701720497718251 Tokens per Sec: 3499.040954985637
Epoch Step: 50 / 82 Loss (mean): 43.26017650961876 Loss (std): 16.5438989953481 Loss ratio: 0.3824279124628541 Tokens per Sec: 2571.6189451000364
Epoch Step: 55 / 82 Loss (mean): 41.54758080840111 Loss (std): 18.13175015690647 Loss ratio: 0.43640928795642775 Tokens per Sec: 3322.399004005476
Epoch Step: 60 / 82 Loss (mean): 48.35894274711609 Loss (std): 16.852749385011517 Loss ratio: 0.34849292452772945 Tokens per Sec: 3801.5887578995316
Epoch Step: 65 / 82 Loss (mean): 33.87842981517315 Loss (std): 9.109874753498332 Loss ratio: 0.26889896619170606 Tokens per Sec: 2858.6438507187854
Epoch Step: 70 / 82 Loss (mean): 45.46561875939369 Loss (std): 15.560995904732025 Loss ratio: 0.34225853137689793 Tokens per Sec: 3191.9017606973607
Epoch Step: 75 / 82 Loss (mean): 50.912127792835236 Loss (std): 20.503370968236233 Loss ratio: 0.40272076334475326 Tokens per Sec: 3420.3331290342176
Epoch Step: 80 / 82 Loss (mean): 43.13022541999817 Loss (std): 18.04652293072147 Loss ratio: 0.41841939741761347 Tokens per Sec: 3734.016726170098
Mean loss per sample: 42.48255143818141 Std loss per sample: 17.071913419121568 ratio: 0.40185706463426063
Epoch ended with duration 0:00:12.117800
Train perplexity: 312.30216255453996
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in the[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in the[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in the[0m
Epoch Step: 5 / 11 Loss (mean): 49.05646067857742 Loss (std): 17.213637288337253 Loss ratio: 0.3508943990297758 Tokens per Sec: 5626.401141071792
Epoch Step: 10 / 11 Loss (mean): 48.3195680975914 Loss (std): 20.666123588458863 Loss ratio: 0.4276967779744913 Tokens per Sec: 3195.240275716179
Mean loss per sample: 46.17390191664389 Std loss per sample: 18.90248921848396 ratio: 0.4093760421765515
Epoch ended with duration 0:00:01.213470
b'BLEU = 0.00, 12.4/1.2/0.3/0.0 (BP=0.548, ratio=0.625, hyp_len=2596, ref_len=4156)\n'
Validation perplexity: 532.7832763248034
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved best_on_validation_commit_msg_generator!
Epoch 13 / 1000
Epoch Step: 5 / 82 Loss (mean): 50.73819363117218 Loss (std): 16.875090538828605 Loss ratio: 0.33259147263888805 Tokens per Sec: 3324.3082157355498
Epoch Step: 10 / 82 Loss (mean): 42.85657188296318 Loss (std): 17.70549277742788 Loss ratio: 0.4131336688753298 Tokens per Sec: 2913.562002879364
Epoch Step: 15 / 82 Loss (mean): 39.22780752182007 Loss (std): 15.701987780614601 Loss ratio: 0.40027696607516317 Tokens per Sec: 3203.969745704521
Epoch Step: 20 / 82 Loss (mean): 34.653657987713814 Loss (std): 13.79895220632417 Loss ratio: 0.39819612149506645 Tokens per Sec: 3355.158026117468
Epoch Step: 25 / 82 Loss (mean): 39.7013403326273 Loss (std): 13.451936306024285 Loss ratio: 0.338828266081718 Tokens per Sec: 2750.598772867648
Epoch Step: 30 / 82 Loss (mean): 40.04833033680916 Loss (std): 19.089157147282215 Loss ratio: 0.4766530086708014 Tokens per Sec: 2469.1728399213926
Epoch Step: 35 / 82 Loss (mean): 40.84604424238205 Loss (std): 13.963724855660175 Loss ratio: 0.34186235447425156 Tokens per Sec: 2985.0269945394616
Epoch Step: 40 / 82 Loss (mean): 52.035265654325485 Loss (std): 8.678324050034291 Loss ratio: 0.16677774084377903 Tokens per Sec: 3938.3194339888873
Epoch Step: 45 / 82 Loss (mean): 50.78447815775871 Loss (std): 18.82039422570836 Loss ratio: 0.37059343540449535 Tokens per Sec: 3392.2858524020817
Epoch Step: 50 / 82 Loss (mean): 49.93392989039421 Loss (std): 17.079502792743472 Loss ratio: 0.34204203094435504 Tokens per Sec: 3455.586657183625
Epoch Step: 55 / 82 Loss (mean): 40.62697619199753 Loss (std): 13.546971672057065 Loss ratio: 0.3334476976094881 Tokens per Sec: 2937.399960528959
Epoch Step: 60 / 82 Loss (mean): 45.16837567090988 Loss (std): 16.504534154983524 Loss ratio: 0.36540021441623505 Tokens per Sec: 3637.8642745914517
Epoch Step: 65 / 82 Loss (mean): 47.73602110147476 Loss (std): 16.999181063562418 Loss ratio: 0.35610804317826233 Tokens per Sec: 3791.9371550799824
Epoch Step: 70 / 82 Loss (mean): 44.69452555974325 Loss (std): 18.58732102499451 Loss ratio: 0.41587466903857845 Tokens per Sec: 2768.628174506018
Epoch Step: 75 / 82 Loss (mean): 45.20566174387932 Loss (std): 18.1436410643495 Loss ratio: 0.4013577141541586 Tokens per Sec: 3412.155379849106
Epoch Step: 80 / 82 Loss (mean): 33.1679075807333 Loss (std): 19.406717984760416 Loss ratio: 0.5851052840014986 Tokens per Sec: 4106.946803405339
Mean loss per sample: 42.22087406364785 Std loss per sample: 16.976480472273913 ratio: 0.40208737617989426
Epoch ended with duration 0:00:12.138825
Train perplexity: 301.4458426631694
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in the[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in[0m
Epoch Step: 5 / 11 Loss (mean): 49.167821407318115 Loss (std): 17.464996336398553 Loss ratio: 0.35521192187293193 Tokens per Sec: 5679.023622749
Epoch Step: 10 / 11 Loss (mean): 48.37643739581108 Loss (std): 20.991793917987017 Loss ratio: 0.43392599885424177 Tokens per Sec: 3235.970294684068
Mean loss per sample: 46.21487906803049 Std loss per sample: 19.193731904213603 ratio: 0.41531498710533293
Epoch ended with duration 0:00:01.200258
b'BLEU = 0.00, 13.2/1.3/0.4/0.0 (BP=0.417, ratio=0.533, hyp_len=2216, ref_len=4156)\n'
Validation perplexity: 535.759978770907
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 14 / 1000
Epoch Step: 5 / 82 Loss (mean): 42.01161755621433 Loss (std): 14.834493833587317 Loss ratio: 0.3531045624162835 Tokens per Sec: 3573.9715368043835
Epoch Step: 10 / 82 Loss (mean): 41.01809051632881 Loss (std): 17.987736624053305 Loss ratio: 0.43853178920877856 Tokens per Sec: 3065.1415784115648
Epoch Step: 15 / 82 Loss (mean): 41.547268345952034 Loss (std): 16.787072479952503 Loss ratio: 0.4040475619280533 Tokens per Sec: 2852.8575687152957
Epoch Step: 20 / 82 Loss (mean): 49.02362659573555 Loss (std): 16.71434683866812 Loss ratio: 0.3409447239899233 Tokens per Sec: 2532.796134446175
Epoch Step: 25 / 82 Loss (mean): 40.1345434486866 Loss (std): 14.837302950233815 Loss ratio: 0.36968909261927496 Tokens per Sec: 3373.2850776513346
Epoch Step: 30 / 82 Loss (mean): 38.7769441306591 Loss (std): 14.45189047596317 Loss ratio: 0.37269286685581654 Tokens per Sec: 3214.1892301884013
Epoch Step: 35 / 82 Loss (mean): 42.9690718203783 Loss (std): 18.26672407654461 Loss ratio: 0.4251133036548749 Tokens per Sec: 2889.530888065083
Epoch Step: 40 / 82 Loss (mean): 46.28087756037712 Loss (std): 15.631725795814761 Loss ratio: 0.3377577656219228 Tokens per Sec: 3109.8589721717417
Epoch Step: 45 / 82 Loss (mean): 41.26302580535412 Loss (std): 17.063989323851658 Loss ratio: 0.4135418814011818 Tokens per Sec: 3735.272492915264
Epoch Step: 50 / 82 Loss (mean): 38.62530808150768 Loss (std): 16.18327148170709 Loss ratio: 0.4189810330459221 Tokens per Sec: 2859.375223550785
Epoch Step: 55 / 82 Loss (mean): 51.710021674633026 Loss (std): 8.80594690082979 Loss ratio: 0.1702947826291408 Tokens per Sec: 4113.872639509312
Epoch Step: 60 / 82 Loss (mean): 42.9485382437706 Loss (std): 15.897731074513311 Loss ratio: 0.3701576753155079 Tokens per Sec: 4069.8937411671677
Epoch Step: 65 / 82 Loss (mean): 42.10423317551613 Loss (std): 15.545153923053512 Loss ratio: 0.3692064372304758 Tokens per Sec: 3445.3065736956733
Epoch Step: 70 / 82 Loss (mean): 34.92438414692879 Loss (std): 14.078649842822362 Loss ratio: 0.4031180559574856 Tokens per Sec: 3402.4639170338323
Epoch Step: 75 / 82 Loss (mean): 43.791458904743195 Loss (std): 15.870057719227775 Loss ratio: 0.36240075384903053 Tokens per Sec: 3315.464628819314
Epoch Step: 80 / 82 Loss (mean): 47.6433809697628 Loss (std): 19.39639299671327 Loss ratio: 0.4071162163957953 Tokens per Sec: 2768.80118901394
Mean loss per sample: 41.98488601085243 Std loss per sample: 16.983561374838903 ratio: 0.4045160768198566
Epoch ended with duration 0:00:12.105258
Train perplexity: 291.9793131954029
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in to the[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in to the[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in to the[0m
Epoch Step: 5 / 11 Loss (mean): 49.12516126036644 Loss (std): 17.311434530335017 Loss ratio: 0.35239445706006595 Tokens per Sec: 5641.341391230028
Epoch Step: 10 / 11 Loss (mean): 50.913546085357666 Loss (std): 20.344122888570055 Loss ratio: 0.399581731244229 Tokens per Sec: 3174.67800773536
Mean loss per sample: 46.386030683459126 Std loss per sample: 18.9396161674903 ratio: 0.4083043081813855
Epoch ended with duration 0:00:01.216631
b'BLEU = 0.00, 13.7/1.1/0.2/0.0 (BP=0.753, ratio=0.779, hyp_len=3239, ref_len=4156)\n'
Validation perplexity: 548.3738083804578
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 15 / 1000
Epoch Step: 5 / 82 Loss (mean): 34.193627417087555 Loss (std): 13.692094497561662 Loss ratio: 0.4004282532106939 Tokens per Sec: 4383.008482077867
Epoch Step: 10 / 82 Loss (mean): 39.825085148215294 Loss (std): 17.03901752878162 Loss ratio: 0.42784635526498555 Tokens per Sec: 2996.186699759694
Epoch Step: 15 / 82 Loss (mean): 42.36919045448303 Loss (std): 16.715618805648234 Loss ratio: 0.3945229688446779 Tokens per Sec: 3271.1560130117705
Epoch Step: 20 / 82 Loss (mean): 48.951102405786514 Loss (std): 16.678173850460315 Loss ratio: 0.34071089374462765 Tokens per Sec: 3969.667520320677
Epoch Step: 25 / 82 Loss (mean): 39.06084056198597 Loss (std): 13.33495119328359 Loss ratio: 0.3413892533142559 Tokens per Sec: 2466.9930744695444
Epoch Step: 30 / 82 Loss (mean): 39.64587365090847 Loss (std): 19.10624244827982 Loss ratio: 0.4819225984654775 Tokens per Sec: 2756.906156602166
Epoch Step: 35 / 82 Loss (mean): 42.08439177274704 Loss (std): 10.686298413118353 Loss ratio: 0.2539254569918383 Tokens per Sec: 3407.3631437366653
Epoch Step: 40 / 82 Loss (mean): 33.22470833361149 Loss (std): 9.18604820610723 Loss ratio: 0.27648243331046024 Tokens per Sec: 2553.121743923095
Epoch Step: 45 / 82 Loss (mean): 38.73631849884987 Loss (std): 15.917542694591251 Loss ratio: 0.41092037941251086 Tokens per Sec: 3178.0798958117043
Epoch Step: 50 / 82 Loss (mean): 46.827374666929245 Loss (std): 19.652514333299372 Loss ratio: 0.41968003701002926 Tokens per Sec: 3042.7535600545784
Epoch Step: 55 / 82 Loss (mean): 40.259272426366806 Loss (std): 12.858173962252256 Loss ratio: 0.3193841613946087 Tokens per Sec: 3199.589280874317
Epoch Step: 60 / 82 Loss (mean): 40.88367158174515 Loss (std): 6.8598399987420615 Loss ratio: 0.16778923549041103 Tokens per Sec: 3989.135582772406
Epoch Step: 65 / 82 Loss (mean): 47.51143433153629 Loss (std): 16.379854067470376 Loss ratio: 0.34475604237016366 Tokens per Sec: 3492.5024396753047
Epoch Step: 70 / 82 Loss (mean): 36.05111066997051 Loss (std): 14.599395447339996 Loss ratio: 0.4049638187569309 Tokens per Sec: 3244.1747416715484
Epoch Step: 75 / 82 Loss (mean): 39.42031551897526 Loss (std): 18.180869239577202 Loss ratio: 0.46120557383224664 Tokens per Sec: 3514.773073134144
Epoch Step: 80 / 82 Loss (mean): 45.082065403461456 Loss (std): 16.01932656236452 Loss ratio: 0.3553370152631591 Tokens per Sec: 2563.9261786625575
Mean loss per sample: 41.67797948643337 Std loss per sample: 16.830805859611253 ratio: 0.4038296977685749
Epoch ended with duration 0:00:12.110842
Train perplexity: 280.111239086347
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in method_1[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in method_1[0m
Epoch Step: 5 / 11 Loss (mean): 48.980608344078064 Loss (std): 17.363297654614584 Loss ratio: 0.3544933034036902 Tokens per Sec: 5443.100549375034
Epoch Step: 10 / 11 Loss (mean): 48.26277577877045 Loss (std): 20.71185376684792 Loss ratio: 0.42914758698894667 Tokens per Sec: 3190.280167427559
Mean loss per sample: 46.301121450710006 Std loss per sample: 19.01171969727074 ratio: 0.41061035028081816
Epoch ended with duration 0:00:01.228216
b'BLEU = 0.00, 12.2/1.5/0.3/0.0 (BP=0.538, ratio=0.617, hyp_len=2565, ref_len=4156)\n'
Validation perplexity: 542.0793295714972
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved checkpoint_commit_msg_generator!
Epoch 16 / 1000
Epoch Step: 5 / 82 Loss (mean): 39.40222606062889 Loss (std): 14.765177668916811 Loss ratio: 0.3747295304127583 Tokens per Sec: 2957.746122958033
Epoch Step: 10 / 82 Loss (mean): 44.33826769888401 Loss (std): 17.6493682948691 Loss ratio: 0.39806174690296553 Tokens per Sec: 3619.22570589507
Epoch Step: 15 / 82 Loss (mean): 41.79264631867409 Loss (std): 10.6614681713449 Loss ratio: 0.255103926419253 Tokens per Sec: 3519.604754741047
Epoch Step: 20 / 82 Loss (mean): 38.88379944860935 Loss (std): 16.079806384825535 Loss ratio: 0.4135348554628094 Tokens per Sec: 3323.2961681672577
Epoch Step: 25 / 82 Loss (mean): 36.29682706296444 Loss (std): 17.95334943614492 Loss ratio: 0.4946258637153346 Tokens per Sec: 2691.2832269336755
Epoch Step: 30 / 82 Loss (mean): 36.98502208292484 Loss (std): 18.224190580887353 Loss ratio: 0.4927451588382599 Tokens per Sec: 2828.671550717148
Epoch Step: 35 / 82 Loss (mean): 42.01423126459122 Loss (std): 17.584811946288696 Loss ratio: 0.4185441793649771 Tokens per Sec: 2445.1947375132586
Epoch Step: 40 / 82 Loss (mean): 42.942999467253685 Loss (std): 18.20465017754489 Loss ratio: 0.42392591117038536 Tokens per Sec: 3725.8866054454165
Epoch Step: 45 / 82 Loss (mean): 38.989556685090065 Loss (std): 16.799324516247456 Loss ratio: 0.43086728715414346 Tokens per Sec: 3025.6438343171044
Epoch Step: 50 / 82 Loss (mean): 23.26063658297062 Loss (std): 8.491701015959956 Loss ratio: 0.36506743853161905 Tokens per Sec: 2895.5109512435624
Epoch Step: 55 / 82 Loss (mean): 44.58506980538368 Loss (std): 13.632538218341727 Loss ratio: 0.3057646489699022 Tokens per Sec: 3901.8193573924204
Epoch Step: 60 / 82 Loss (mean): 40.473913341760635 Loss (std): 12.729028501994325 Loss ratio: 0.3144995739480576 Tokens per Sec: 4254.332083748561
Epoch Step: 65 / 82 Loss (mean): 46.531759679317474 Loss (std): 19.603706589235582 Loss ratio: 0.4212973402325267 Tokens per Sec: 3024.9652863142637
Epoch Step: 70 / 82 Loss (mean): 41.518781155347824 Loss (std): 15.906783584711139 Loss ratio: 0.38312260480850524 Tokens per Sec: 3007.6270644449637
Epoch Step: 75 / 82 Loss (mean): 43.41418296098709 Loss (std): 12.987330576062112 Loss ratio: 0.2991494873399507 Tokens per Sec: 3374.8970608327986
Epoch Step: 80 / 82 Loss (mean): 41.943735390901566 Loss (std): 15.820088876278168 Loss ratio: 0.3771740577905196 Tokens per Sec: 3361.3031614795973
Mean loss per sample: 41.43155355482656 Std loss per sample: 16.871532669276345 ratio: 0.40721457975140063
Epoch ended with duration 0:00:12.098077
Train perplexity: 270.9320645676295
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in method_1[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in method_1[0m
Epoch Step: 5 / 11 Loss (mean): 52.18489298224449 Loss (std): 18.173093408300268 Loss ratio: 0.34824433604728333 Tokens per Sec: 5500.3582688798315
Epoch Step: 10 / 11 Loss (mean): 50.86015608906746 Loss (std): 21.159420909363202 Loss ratio: 0.41603137969746584 Tokens per Sec: 3168.251868961945
Mean loss per sample: 46.53815875359631 Std loss per sample: 19.201249348967426 ratio: 0.4125915133564157
Epoch ended with duration 0:00:01.228822
b'BLEU = 0.00, 11.9/1.5/0.3/0.0 (BP=0.556, ratio=0.630, hyp_len=2620, ref_len=4156)\n'
Validation perplexity: 559.8346899477622
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 17 / 1000
Epoch Step: 5 / 82 Loss (mean): 44.45382679998875 Loss (std): 15.876353837370715 Loss ratio: 0.35714256747351014 Tokens per Sec: 2744.219978634572
Epoch Step: 10 / 82 Loss (mean): 36.92791771888733 Loss (std): 14.366444972302723 Loss ratio: 0.38904021292689334 Tokens per Sec: 3085.581647535217
Epoch Step: 15 / 82 Loss (mean): 39.71864476799965 Loss (std): 13.005847833893558 Loss ratio: 0.3274494361492428 Tokens per Sec: 3544.9250526357437
Epoch Step: 20 / 82 Loss (mean): 42.507432118058205 Loss (std): 15.762289823612809 Loss ratio: 0.3708125623734537 Tokens per Sec: 3593.297713946945
Epoch Step: 25 / 82 Loss (mean): 39.158968940377235 Loss (std): 14.459859521836092 Loss ratio: 0.36926047628711633 Tokens per Sec: 3564.0972415693623
Epoch Step: 30 / 82 Loss (mean): 40.26097051799297 Loss (std): 13.762127683396724 Loss ratio: 0.3418230486333237 Tokens per Sec: 3935.7030067517953
Epoch Step: 35 / 82 Loss (mean): 42.66508148610592 Loss (std): 14.6366393831403 Loss ratio: 0.3430589810992577 Tokens per Sec: 3009.623920156451
Epoch Step: 40 / 82 Loss (mean): 34.08912754058838 Loss (std): 13.401402854518047 Loss ratio: 0.3931283614859783 Tokens per Sec: 3278.8937102545688
Epoch Step: 45 / 82 Loss (mean): 44.38284373283386 Loss (std): 16.070306740541586 Loss ratio: 0.36208375554477995 Tokens per Sec: 3561.065209903017
Epoch Step: 50 / 82 Loss (mean): 40.16375508904457 Loss (std): 16.632422798071413 Loss ratio: 0.4141152330302956 Tokens per Sec: 2805.6317899765095
Epoch Step: 55 / 82 Loss (mean): 44.18571788072586 Loss (std): 13.226650154119334 Loss ratio: 0.2993422035107162 Tokens per Sec: 3182.968330599806
Epoch Step: 60 / 82 Loss (mean): 37.4377164542675 Loss (std): 18.010575734153857 Loss ratio: 0.4810810444636733 Tokens per Sec: 2882.764133412568
Epoch Step: 65 / 82 Loss (mean): 45.53163468837738 Loss (std): 15.467366075494004 Loss ratio: 0.3397059249322818 Tokens per Sec: 3176.892004074802
Epoch Step: 70 / 82 Loss (mean): 46.84191603958607 Loss (std): 16.205016393436654 Loss ratio: 0.3459511856804023 Tokens per Sec: 3810.5775420826003
Epoch Step: 75 / 82 Loss (mean): 40.304977878928185 Loss (std): 17.809027682532783 Loss ratio: 0.441856778486002 Tokens per Sec: 2914.5843083919126
Epoch Step: 80 / 82 Loss (mean): 42.92733822762966 Loss (std): 12.751986714365115 Loss ratio: 0.29705980479724814 Tokens per Sec: 3315.72894382024
Mean loss per sample: 40.80525190522182 Std loss per sample: 16.662763822048735 ratio: 0.4083485101562726
Epoch ended with duration 0:00:12.057438
Train perplexity: 248.93386372950218
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in method_1[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in method_1[0m
Epoch Step: 5 / 11 Loss (mean): 48.88884001970291 Loss (std): 17.28561110766866 Loss ratio: 0.35356967153858243 Tokens per Sec: 5626.085884612185
Epoch Step: 10 / 11 Loss (mean): 48.21439370512962 Loss (std): 20.87542440774838 Loss ratio: 0.43297079572168096 Tokens per Sec: 3229.090590505419
Mean loss per sample: 45.87357583687575 Std loss per sample: 19.119309168596264 ratio: 0.41678262092721124
Epoch ended with duration 0:00:01.205729
b'BLEU = 0.00, 11.8/1.2/0.3/0.0 (BP=0.524, ratio=0.607, hyp_len=2524, ref_len=4156)\n'
Validation perplexity: 511.4656223558396
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved best_on_validation_commit_msg_generator!
Epoch 18 / 1000
Epoch Step: 5 / 82 Loss (mean): 39.46333387494087 Loss (std): 17.456605912622226 Loss ratio: 0.44235000438488375 Tokens per Sec: 2772.2909052503
Epoch Step: 10 / 82 Loss (mean): 37.923188254237175 Loss (std): 17.96527011465124 Loss ratio: 0.47372784150457004 Tokens per Sec: 2839.9956533957848
Epoch Step: 15 / 82 Loss (mean): 42.40330109000206 Loss (std): 17.736800856488575 Loss ratio: 0.4182882087137927 Tokens per Sec: 4027.8130036656075
Epoch Step: 20 / 82 Loss (mean): 38.18917468190193 Loss (std): 12.91660554970643 Loss ratio: 0.33822688385637417 Tokens per Sec: 2778.359293661209
Epoch Step: 25 / 82 Loss (mean): 39.44621181488037 Loss (std): 14.022356676287426 Loss ratio: 0.3554804385803593 Tokens per Sec: 3098.510282475015
Epoch Step: 30 / 82 Loss (mean): 44.44249805808067 Loss (std): 15.575920883841583 Loss ratio: 0.35047356841836036 Tokens per Sec: 3773.8626161877723
Epoch Step: 35 / 82 Loss (mean): 43.20419704914093 Loss (std): 16.99951678067783 Loss ratio: 0.39346910582188094 Tokens per Sec: 4333.011385400143
Epoch Step: 40 / 82 Loss (mean): 41.14121478796005 Loss (std): 10.581608565565373 Loss ratio: 0.2572021419421498 Tokens per Sec: 2609.788853889455
Epoch Step: 45 / 82 Loss (mean): 44.778668105602264 Loss (std): 16.774654963758632 Loss ratio: 0.3746126375219265 Tokens per Sec: 3207.88068833652
Epoch Step: 50 / 82 Loss (mean): 43.746550127863884 Loss (std): 17.885886665785318 Loss ratio: 0.408852506392112 Tokens per Sec: 2913.4700497020654
Epoch Step: 55 / 82 Loss (mean): 42.65082724392414 Loss (std): 15.993522293340638 Loss ratio: 0.37498738774449 Tokens per Sec: 2900.9422597449557
Epoch Step: 60 / 82 Loss (mean): 42.585923939943314 Loss (std): 12.376551352181417 Loss ratio: 0.2906254040568761 Tokens per Sec: 3364.165933982227
Epoch Step: 65 / 82 Loss (mean): 43.87999305129051 Loss (std): 13.382195677765646 Loss ratio: 0.30497260248249003 Tokens per Sec: 3976.433776223081
Epoch Step: 70 / 82 Loss (mean): 32.44234895706177 Loss (std): 9.146706911748955 Loss ratio: 0.2819372581145355 Tokens per Sec: 3250.1495616159254
Epoch Step: 75 / 82 Loss (mean): 39.228233337402344 Loss (std): 16.20812603287009 Loss ratio: 0.4131750184481639 Tokens per Sec: 3786.629953921683
Epoch Step: 80 / 82 Loss (mean): 38.70197078585625 Loss (std): 16.834523188532483 Loss ratio: 0.43497844804029234 Tokens per Sec: 3059.5432990554923
Mean loss per sample: 40.72095182027656 Std loss per sample: 16.670105305862705 ratio: 0.4093741565628632
Epoch ended with duration 0:00:12.094849
Train perplexity: 246.11261774536658
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in method_1[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in method_1[0m
Epoch Step: 5 / 11 Loss (mean): 48.98158586025238 Loss (std): 17.538598335446956 Loss ratio: 0.35806513871326473 Tokens per Sec: 5680.178876626898
Epoch Step: 10 / 11 Loss (mean): 48.33040477335453 Loss (std): 20.914954245558206 Loss ratio: 0.4327494119620744 Tokens per Sec: 3215.169779141705
Mean loss per sample: 45.93220676923746 Std loss per sample: 19.271286020043426 ratio: 0.4195593326674245
Epoch ended with duration 0:00:01.205638
b'BLEU = 0.00, 11.9/1.5/0.3/0.0 (BP=0.533, ratio=0.614, hyp_len=2550, ref_len=4156)\n'
Validation perplexity: 515.5592481211731
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 19 / 1000
Epoch Step: 5 / 82 Loss (mean): 41.52321666479111 Loss (std): 17.863990591594476 Loss ratio: 0.4302169250471854 Tokens per Sec: 3639.547775013373
Epoch Step: 10 / 82 Loss (mean): 38.524991735816 Loss (std): 14.412779853033612 Loss ratio: 0.374115066704461 Tokens per Sec: 3197.2874740431744
Epoch Step: 15 / 82 Loss (mean): 44.85069365799427 Loss (std): 21.133508406856848 Loss ratio: 0.47119691320738294 Tokens per Sec: 2974.693773484704
Epoch Step: 20 / 82 Loss (mean): 47.14323665201664 Loss (std): 17.511925986948643 Loss ratio: 0.37146210635072163 Tokens per Sec: 3292.4639956102837
Epoch Step: 25 / 82 Loss (mean): 41.80027332901955 Loss (std): 17.796780960320987 Loss ratio: 0.42575752603908684 Tokens per Sec: 2819.8911671316937
Epoch Step: 30 / 82 Loss (mean): 43.326572984457016 Loss (std): 15.394514490357892 Loss ratio: 0.3553134584607124 Tokens per Sec: 2835.706160448113
Epoch Step: 35 / 82 Loss (mean): 38.736177042126656 Loss (std): 15.98163534125404 Loss ratio: 0.4125764740251361 Tokens per Sec: 3803.037056491452
Epoch Step: 40 / 82 Loss (mean): 39.50430300831795 Loss (std): 15.3690592729875 Loss ratio: 0.38904772651605624 Tokens per Sec: 3226.4585430573843
Epoch Step: 45 / 82 Loss (mean): 36.68018826842308 Loss (std): 17.636096527296598 Loss ratio: 0.4808071430341868 Tokens per Sec: 2991.5106912121687
Epoch Step: 50 / 82 Loss (mean): 43.44188714027405 Loss (std): 15.813041760171458 Loss ratio: 0.36400448509778305 Tokens per Sec: 3224.2918678287424
Epoch Step: 55 / 82 Loss (mean): 33.538713827729225 Loss (std): 13.35627788830085 Loss ratio: 0.3982346477836044 Tokens per Sec: 3878.1560461213107
Epoch Step: 60 / 82 Loss (mean): 44.73481360077858 Loss (std): 12.890705621693778 Loss ratio: 0.2881582504564057 Tokens per Sec: 3421.508412804331
Epoch Step: 65 / 82 Loss (mean): 38.81977504491806 Loss (std): 16.71209659775276 Loss ratio: 0.43050472545024593 Tokens per Sec: 3057.9603523749506
Epoch Step: 70 / 82 Loss (mean): 40.20006674528122 Loss (std): 13.224049294800263 Loss ratio: 0.328955903943929 Tokens per Sec: 3221.2501436076573
Epoch Step: 75 / 82 Loss (mean): 35.5897242128849 Loss (std): 14.533584426557656 Loss ratio: 0.40836462625062764 Tokens per Sec: 2752.0941886643022
Epoch Step: 80 / 82 Loss (mean): 41.227612003684044 Loss (std): 17.42765696308277 Loss ratio: 0.4227180793669413 Tokens per Sec: 2593.975745152519
Mean loss per sample: 40.402611546560166 Std loss per sample: 16.62446928206011 ratio: 0.4114701660535481
Epoch ended with duration 0:00:12.225949
Train perplexity: 235.74415954956075
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in to the[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in[0m
Epoch Step: 5 / 11 Loss (mean): 48.89186614751816 Loss (std): 17.65071032099891 Loss ratio: 0.3610152712875103 Tokens per Sec: 5431.931856184549
Epoch Step: 10 / 11 Loss (mean): 48.31142073869705 Loss (std): 21.031111236639603 Loss ratio: 0.4353237995295356 Tokens per Sec: 3111.05425360892
Mean loss per sample: 46.78995737460775 Std loss per sample: 19.46945373538506 ratio: 0.41610325864393405
Epoch ended with duration 0:00:01.250195
b'BLEU = 0.00, 13.6/1.9/0.5/0.0 (BP=0.394, ratio=0.518, hyp_len=2152, ref_len=4156)\n'
Validation perplexity: 579.3331960840081
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 20 / 1000
Epoch Step: 5 / 82 Loss (mean): 39.476702496409416 Loss (std): 16.290026631859085 Loss ratio: 0.4126491221839194 Tokens per Sec: 2457.42520274479
Epoch Step: 10 / 82 Loss (mean): 39.03065960109234 Loss (std): 16.195652318619903 Loss ratio: 0.4149469284953268 Tokens per Sec: 3185.6204757117575
Epoch Step: 15 / 82 Loss (mean): 38.82265271246433 Loss (std): 17.174496332973856 Loss ratio: 0.4423833801408383 Tokens per Sec: 2615.7401986914524
Epoch Step: 20 / 82 Loss (mean): 43.030813947319984 Loss (std): 12.782684590829819 Loss ratio: 0.2970588612727355 Tokens per Sec: 2981.192067247234
Epoch Step: 25 / 82 Loss (mean): 42.652593076229095 Loss (std): 15.625180709438512 Loss ratio: 0.366336008727841 Tokens per Sec: 3502.8271712365295
Epoch Step: 30 / 82 Loss (mean): 40.351776242256165 Loss (std): 15.243731959215626 Loss ratio: 0.3777710271711031 Tokens per Sec: 2950.51184567652
Epoch Step: 35 / 82 Loss (mean): 39.559022918343544 Loss (std): 18.697965659898024 Loss ratio: 0.4726599465940744 Tokens per Sec: 2638.0834618751373
Epoch Step: 40 / 82 Loss (mean): 40.10271316766739 Loss (std): 16.054297316140126 Loss ratio: 0.4003294552420414 Tokens per Sec: 3058.212354027841
Epoch Step: 45 / 82 Loss (mean): 42.358695179224014 Loss (std): 18.63637804586088 Loss ratio: 0.4399658196979024 Tokens per Sec: 3631.5145948547147
Epoch Step: 50 / 82 Loss (mean): 38.03147038817406 Loss (std): 14.046850658327438 Loss ratio: 0.3693480823895604 Tokens per Sec: 3111.2685506271805
Epoch Step: 55 / 82 Loss (mean): 37.53455126285553 Loss (std): 17.135561614445496 Loss ratio: 0.4565276801751184 Tokens per Sec: 3471.814106427205
Epoch Step: 60 / 82 Loss (mean): 46.70956799387932 Loss (std): 14.964392534405999 Loss ratio: 0.3203710326836439 Tokens per Sec: 2843.6144153655982
Epoch Step: 65 / 82 Loss (mean): 32.229401275515556 Loss (std): 16.571683530030434 Loss ratio: 0.5141790686201739 Tokens per Sec: 3079.3417539589736
Epoch Step: 70 / 82 Loss (mean): 40.30901002883911 Loss (std): 15.517430733470517 Loss ratio: 0.3849618415924519 Tokens per Sec: 3331.9543081319575
Epoch Step: 75 / 82 Loss (mean): 41.48911494016647 Loss (std): 17.195187042382724 Loss ratio: 0.41445056292911436 Tokens per Sec: 3354.122719788951
Epoch Step: 80 / 82 Loss (mean): 40.12907978892326 Loss (std): 15.183208317326368 Loss ratio: 0.3783592446472534 Tokens per Sec: 4918.106120831812
Mean loss per sample: 39.85822657534471 Std loss per sample: 16.39936127813733 ratio: 0.41144232162806665
Epoch ended with duration 0:00:12.315306
Train perplexity: 219.0154044843836
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix npe in method_1[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in[0m
Epoch Step: 5 / 11 Loss (mean): 49.04438059031963 Loss (std): 17.8442472432962 Loss ratio: 0.3638387727302298 Tokens per Sec: 5729.286117324569
Epoch Step: 10 / 11 Loss (mean): 48.424921318888664 Loss (std): 20.996691904338256 Loss ratio: 0.4335926901371809 Tokens per Sec: 3235.118824819441
Mean loss per sample: 46.322157553576545 Std loss per sample: 19.466906580264954 ratio: 0.4202504289172927
Epoch ended with duration 0:00:01.196601
b'BLEU = 0.00, 12.2/1.7/0.3/0.0 (BP=0.511, ratio=0.598, hyp_len=2487, ref_len=4156)\n'
Validation perplexity: 543.6320098606404
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved checkpoint_commit_msg_generator!
Epoch 21 / 1000
Epoch Step: 5 / 82 Loss (mean): 42.85026901960373 Loss (std): 17.3514871586443 Loss ratio: 0.404932980717253 Tokens per Sec: 3178.076735615372
Epoch Step: 10 / 82 Loss (mean): 44.867880165576935 Loss (std): 15.535516886820366 Loss ratio: 0.34625029819749237 Tokens per Sec: 3934.0416868509533
Epoch Step: 15 / 82 Loss (mean): 37.856299102306366 Loss (std): 14.829743448467031 Loss ratio: 0.3917378032223847 Tokens per Sec: 4014.3476396091532
Epoch Step: 20 / 82 Loss (mean): 41.76333473622799 Loss (std): 18.152601494822953 Loss ratio: 0.4346540239057182 Tokens per Sec: 2937.4292658911095
Epoch Step: 25 / 82 Loss (mean): 38.75806799530983 Loss (std): 14.952929826434326 Loss ratio: 0.38580173367371673 Tokens per Sec: 3078.208084890628
Epoch Step: 30 / 82 Loss (mean): 38.330470502376556 Loss (std): 12.537746587793464 Loss ratio: 0.32709607848450756 Tokens per Sec: 3887.0693852354448
Epoch Step: 35 / 82 Loss (mean): 37.3863301128149 Loss (std): 13.49476809576487 Loss ratio: 0.36095460707279403 Tokens per Sec: 3152.414212441798
Epoch Step: 40 / 82 Loss (mean): 37.252302795648575 Loss (std): 16.316835471393482 Loss ratio: 0.438008773871006 Tokens per Sec: 3131.461884368378
Epoch Step: 45 / 82 Loss (mean): 43.9502287954092 Loss (std): 16.300478495389616 Loss ratio: 0.3708849519593917 Tokens per Sec: 2903.7917022875217
Epoch Step: 50 / 82 Loss (mean): 37.3133105635643 Loss (std): 14.748002556353619 Loss ratio: 0.3952477636962813 Tokens per Sec: 3834.840617144865
Epoch Step: 55 / 82 Loss (mean): 39.14508759975433 Loss (std): 18.147267112392658 Loss ratio: 0.46358989659041017 Tokens per Sec: 2786.387855650986
Epoch Step: 60 / 82 Loss (mean): 37.74624516069889 Loss (std): 16.686221625734575 Loss ratio: 0.44206308613467454 Tokens per Sec: 2831.303618017683
Epoch Step: 65 / 82 Loss (mean): 38.897758185863495 Loss (std): 16.38230135085964 Loss ratio: 0.4211631239152855 Tokens per Sec: 3003.7749155617967
Epoch Step: 70 / 82 Loss (mean): 41.53032284975052 Loss (std): 16.094563311121068 Loss ratio: 0.38753764013220887 Tokens per Sec: 3548.471629395195
Epoch Step: 75 / 82 Loss (mean): 45.00509223341942 Loss (std): 15.095159920347347 Loss ratio: 0.33541004298038385 Tokens per Sec: 3212.2569137337855
Epoch Step: 80 / 82 Loss (mean): 41.631617933511734 Loss (std): 18.11321576404287 Loss ratio: 0.4350831570603572 Tokens per Sec: 2787.68622438466
Mean loss per sample: 39.827389025177794 Std loss per sample: 16.542197479290504 ratio: 0.41534727443049246
Epoch ended with duration 0:00:12.089435
Train perplexity: 218.10412600050276
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix the to the[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in[0m
Epoch Step: 5 / 11 Loss (mean): 49.27947771549225 Loss (std): 18.337771087165834 Loss ratio: 0.3721178051649864 Tokens per Sec: 5737.98056342516
Epoch Step: 10 / 11 Loss (mean): 48.564936473965645 Loss (std): 21.523567185013352 Loss ratio: 0.44319150291798604 Tokens per Sec: 3265.3160274667525
Mean loss per sample: 46.11778801223918 Std loss per sample: 19.85087811077737 ratio: 0.43043864344727795
Epoch ended with duration 0:00:01.188854
b'BLEU = 0.00, 14.1/2.1/0.6/0.0 (BP=0.341, ratio=0.482, hyp_len=2003, ref_len=4156)\n'
Validation perplexity: 528.7338076332101
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 22 / 1000
Epoch Step: 5 / 82 Loss (mean): 37.44255495071411 Loss (std): 14.295677199624949 Loss ratio: 0.3818029303406898 Tokens per Sec: 3042.85858837159
Epoch Step: 10 / 82 Loss (mean): 37.36408744752407 Loss (std): 17.869543941922206 Loss ratio: 0.4782545262752384 Tokens per Sec: 3632.67013288388
Epoch Step: 15 / 82 Loss (mean): 47.2196711152792 Loss (std): 20.07208031479761 Loss ratio: 0.42507878264960525 Tokens per Sec: 4322.943311490872
Epoch Step: 20 / 82 Loss (mean): 37.449197486042976 Loss (std): 14.705296048131487 Loss ratio: 0.3926731955634573 Tokens per Sec: 3386.9343672905484
Epoch Step: 25 / 82 Loss (mean): 38.639341950416565 Loss (std): 14.936143066732436 Loss ratio: 0.3865527287162149 Tokens per Sec: 2678.106359323275
Epoch Step: 30 / 82 Loss (mean): 36.83049461245537 Loss (std): 12.860139146552331 Loss ratio: 0.3491709596048509 Tokens per Sec: 2869.658469836108
Epoch Step: 35 / 82 Loss (mean): 39.69067798554897 Loss (std): 15.016211250222122 Loss ratio: 0.37833093341689433 Tokens per Sec: 2769.505855998895
Epoch Step: 40 / 82 Loss (mean): 42.8034972846508 Loss (std): 17.049199860373186 Loss ratio: 0.39831324405557333 Tokens per Sec: 3745.7225257213413
Epoch Step: 45 / 82 Loss (mean): 37.263463631272316 Loss (std): 16.55520137519985 Loss ratio: 0.4442743578271764 Tokens per Sec: 2646.43969256324
Epoch Step: 50 / 82 Loss (mean): 34.507146045565605 Loss (std): 14.494103268719513 Loss ratio: 0.42003193337346717 Tokens per Sec: 3223.8368082185057
Epoch Step: 55 / 82 Loss (mean): 45.15506559610367 Loss (std): 16.669606566197523 Loss ratio: 0.36916359983398866 Tokens per Sec: 3049.070323512046
Epoch Step: 60 / 82 Loss (mean): 46.4226154088974 Loss (std): 16.129989549196175 Loss ratio: 0.34745973287202353 Tokens per Sec: 3280.0921563162365
Epoch Step: 65 / 82 Loss (mean): 35.45830342173576 Loss (std): 17.17502796929148 Loss ratio: 0.4843725252450537 Tokens per Sec: 3282.569860270507
Epoch Step: 70 / 82 Loss (mean): 41.24893255531788 Loss (std): 15.724237795140228 Loss ratio: 0.3812035080920666 Tokens per Sec: 2561.788003120347
Epoch Step: 75 / 82 Loss (mean): 44.95478704571724 Loss (std): 21.100190318887506 Loss ratio: 0.46936470408433806 Tokens per Sec: 3216.4228620262193
Epoch Step: 80 / 82 Loss (mean): 46.58526399731636 Loss (std): 8.931583497190088 Loss ratio: 0.19172550997466947 Tokens per Sec: 4577.0560799749355
Mean loss per sample: 39.80131215978106 Std loss per sample: 16.47887174315377 ratio: 0.41402835356281426
Epoch ended with duration 0:00:12.095619
Train perplexity: 217.3364896430622
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in to the[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix the to the to the[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in[0m
Epoch Step: 5 / 11 Loss (mean): 53.362072110176086 Loss (std): 18.620387963468428 Loss ratio: 0.34894424498777177 Tokens per Sec: 5430.59053879235
Epoch Step: 10 / 11 Loss (mean): 48.6271380931139 Loss (std): 21.140992502743348 Loss ratio: 0.43475707869670266 Tokens per Sec: 3254.7736606011213
Mean loss per sample: 46.83453703509923 Std loss per sample: 19.735735131970426 ratio: 0.4213927665641248
Epoch ended with duration 0:00:01.214557
b'BLEU = 0.00, 12.6/1.4/0.2/0.0 (BP=0.542, ratio=0.620, hyp_len=2578, ref_len=4156)\n'
Validation perplexity: 582.8554017679807
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 23 / 1000
Epoch Step: 5 / 82 Loss (mean): 37.08705276250839 Loss (std): 14.738969582668975 Loss ratio: 0.3974154990705738 Tokens per Sec: 3405.8239520016987
Epoch Step: 10 / 82 Loss (mean): 41.60882670432329 Loss (std): 20.832552897484877 Loss ratio: 0.500676287882934 Tokens per Sec: 2987.3766093189497
Epoch Step: 15 / 82 Loss (mean): 39.8168808221817 Loss (std): 6.881270725791107 Loss ratio: 0.17282294804864776 Tokens per Sec: 4275.998896315369
Epoch Step: 20 / 82 Loss (mean): 36.73606088757515 Loss (std): 12.536789269935374 Loss ratio: 0.34126656388942234 Tokens per Sec: 3117.3645831109848
Epoch Step: 25 / 82 Loss (mean): 44.17299573123455 Loss (std): 16.44835036357522 Loss ratio: 0.372362120596332 Tokens per Sec: 3283.7838078036234
Epoch Step: 30 / 82 Loss (mean): 45.71303528547287 Loss (std): 15.990436569698085 Loss ratio: 0.3498003680971865 Tokens per Sec: 3390.2044243804107
Epoch Step: 35 / 82 Loss (mean): 30.972495943307877 Loss (std): 15.7608402477588 Loss ratio: 0.5088656812356187 Tokens per Sec: 3111.692189359554
Epoch Step: 40 / 82 Loss (mean): 39.52297578752041 Loss (std): 14.08433641020615 Loss ratio: 0.3563581974678474 Tokens per Sec: 3457.520216784225
Epoch Step: 45 / 82 Loss (mean): 44.61429883539677 Loss (std): 15.738707349001615 Loss ratio: 0.35277271547109024 Tokens per Sec: 3030.9719278133252
Epoch Step: 50 / 82 Loss (mean): 40.76473781466484 Loss (std): 17.292497549799464 Loss ratio: 0.424202349305399 Tokens per Sec: 3325.4744841463307
Epoch Step: 55 / 82 Loss (mean): 37.47425094246864 Loss (std): 18.620043425262207 Loss ratio: 0.49687566681047574 Tokens per Sec: 3460.7969584870293
Epoch Step: 60 / 82 Loss (mean): 38.87187400460243 Loss (std): 15.363791502719321 Loss ratio: 0.3952418527828179 Tokens per Sec: 3112.4643733342523
Epoch Step: 65 / 82 Loss (mean): 39.94267563521862 Loss (std): 16.768606045829973 Loss ratio: 0.41981679442236974 Tokens per Sec: 2742.5546968962913
Epoch Step: 70 / 82 Loss (mean): 39.23941016942263 Loss (std): 18.01766836814293 Loss ratio: 0.45917276254532563 Tokens per Sec: 3417.7678457803986
Epoch Step: 75 / 82 Loss (mean): 37.65580387413502 Loss (std): 12.415346521840139 Loss ratio: 0.32970605443289924 Tokens per Sec: 3010.4140491178982
Epoch Step: 80 / 82 Loss (mean): 41.07972148060799 Loss (std): 15.72226317655801 Loss ratio: 0.3827256517301324 Tokens per Sec: 2969.7759470054043
Mean loss per sample: 39.26510354165637 Std loss per sample: 16.292388889439113 ratio: 0.4149330428265523
Epoch ended with duration 0:00:12.044506
Train perplexity: 202.13731075995227
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix the to[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in[0m
Epoch Step: 5 / 11 Loss (mean): 48.92396095395088 Loss (std): 17.80315763874465 Loss ratio: 0.3638944454129883 Tokens per Sec: 5592.694800518508
Epoch Step: 10 / 11 Loss (mean): 48.38131685554981 Loss (std): 21.07448737638456 Loss ratio: 0.43559143789545507 Tokens per Sec: 3279.060638589743
Mean loss per sample: 46.203286796534826 Std loss per sample: 19.58964107130471 ratio: 0.4239880413177424
Epoch ended with duration 0:00:01.196491
b'BLEU = 0.00, 14.6/2.1/0.5/0.0 (BP=0.354, ratio=0.491, hyp_len=2040, ref_len=4156)\n'
Validation perplexity: 534.916198687564
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 24 / 1000
Epoch Step: 5 / 82 Loss (mean): 35.81226618587971 Loss (std): 12.974198447307035 Loss ratio: 0.3622836482887136 Tokens per Sec: 2764.316667912992
Epoch Step: 10 / 82 Loss (mean): 37.92596046626568 Loss (std): 15.120289002228692 Loss ratio: 0.39867913208626216 Tokens per Sec: 3813.3240014661146
Epoch Step: 15 / 82 Loss (mean): 37.89711946249008 Loss (std): 12.97788813494209 Loss ratio: 0.3424505165303495 Tokens per Sec: 2994.4580472504886
Epoch Step: 20 / 82 Loss (mean): 21.24184601008892 Loss (std): 7.441401694118615 Loss ratio: 0.3503180321797025 Tokens per Sec: 3767.7281723497317
Epoch Step: 25 / 82 Loss (mean): 45.38801355659962 Loss (std): 17.35046038084665 Loss ratio: 0.38226965714660177 Tokens per Sec: 3729.7572700301153
Epoch Step: 30 / 82 Loss (mean): 39.36419741809368 Loss (std): 16.713926922621454 Loss ratio: 0.4245971725296482 Tokens per Sec: 2813.8589015798034
Epoch Step: 35 / 82 Loss (mean): 40.20247332751751 Loss (std): 13.83733969796126 Loss ratio: 0.3441912537378633 Tokens per Sec: 4198.413539417075
Epoch Step: 40 / 82 Loss (mean): 40.27421645820141 Loss (std): 15.743794987298779 Loss ratio: 0.39091499157130655 Tokens per Sec: 3331.249719226027
Epoch Step: 45 / 82 Loss (mean): 48.23329724371433 Loss (std): 18.944849671939785 Loss ratio: 0.39277533891607713 Tokens per Sec: 2920.7851561212137
Epoch Step: 50 / 82 Loss (mean): 36.649824514985085 Loss (std): 15.759538193454839 Loss ratio: 0.43000310102470496 Tokens per Sec: 3300.3426550701934
Epoch Step: 55 / 82 Loss (mean): 43.67576815187931 Loss (std): 16.26025794859679 Loss ratio: 0.37229472168761696 Tokens per Sec: 3072.463898467184
Epoch Step: 60 / 82 Loss (mean): 46.139368921518326 Loss (std): 19.702947230688824 Loss ratio: 0.4270311382932641 Tokens per Sec: 2594.245583126832
Epoch Step: 65 / 82 Loss (mean): 37.04253999888897 Loss (std): 18.728364739360522 Loss ratio: 0.5055907273076373 Tokens per Sec: 3512.738905725123
Epoch Step: 70 / 82 Loss (mean): 34.65707543492317 Loss (std): 7.078211295629571 Loss ratio: 0.20423567790423 Tokens per Sec: 3802.0354201130817
Epoch Step: 75 / 82 Loss (mean): 44.56204454600811 Loss (std): 19.21524616523925 Loss ratio: 0.4312020770366687 Tokens per Sec: 2966.145931422302
Epoch Step: 80 / 82 Loss (mean): 37.75581456720829 Loss (std): 16.833425438804042 Loss ratio: 0.44584988118424074 Tokens per Sec: 2759.83591935351
Mean loss per sample: 38.85432642935248 Std loss per sample: 16.338908836296145 ratio: 0.4205171042150128
Epoch ended with duration 0:00:12.060570
Train perplexity: 191.21662811895487
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix the to the[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in[0m
Epoch Step: 5 / 11 Loss (mean): 52.95583888888359 Loss (std): 18.46336478853421 Loss ratio: 0.3486558833913594 Tokens per Sec: 5576.577578686653
Epoch Step: 10 / 11 Loss (mean): 48.3718605786562 Loss (std): 20.859254506412984 Loss ratio: 0.431227045163878 Tokens per Sec: 3272.6610437648565
Mean loss per sample: 46.2188231791925 Std loss per sample: 19.51018347684249 ratio: 0.4221263575059151
Epoch ended with duration 0:00:01.198786
b'BLEU = 0.00, 14.1/1.8/0.3/0.0 (BP=0.399, ratio=0.521, hyp_len=2166, ref_len=4156)\n'
Validation perplexity: 536.0473667124506
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 25 / 1000
Epoch Step: 5 / 82 Loss (mean): 39.78403466194868 Loss (std): 14.607259587103755 Loss ratio: 0.367163856336442 Tokens per Sec: 3185.5987908313095
Epoch Step: 10 / 82 Loss (mean): 36.994361877441406 Loss (std): 11.7674513094267 Loss ratio: 0.31808769531992687 Tokens per Sec: 2720.8407417838002
Epoch Step: 15 / 82 Loss (mean): 46.01677732169628 Loss (std): 24.52395834120394 Loss ratio: 0.5329351547102198 Tokens per Sec: 3106.228145567216
Epoch Step: 20 / 82 Loss (mean): 36.73511950671673 Loss (std): 16.05083001472442 Loss ratio: 0.4369341989425038 Tokens per Sec: 3125.084260843412
Epoch Step: 25 / 82 Loss (mean): 40.02655403316021 Loss (std): 16.276438083002255 Loss ratio: 0.4066410031080356 Tokens per Sec: 3697.8737140117387
Epoch Step: 30 / 82 Loss (mean): 39.87643279135227 Loss (std): 17.406471953742322 Loss ratio: 0.4365102576957973 Tokens per Sec: 3301.523569446542
Epoch Step: 35 / 82 Loss (mean): 39.26957030594349 Loss (std): 17.671399786025965 Loss ratio: 0.45000237202369847 Tokens per Sec: 3154.840239128448
Epoch Step: 40 / 82 Loss (mean): 34.24216566979885 Loss (std): 14.478928054057398 Loss ratio: 0.4228391449793033 Tokens per Sec: 3148.9662711098713
Epoch Step: 45 / 82 Loss (mean): 36.589263036847115 Loss (std): 14.751477434922561 Loss ratio: 0.4031641036351874 Tokens per Sec: 4342.310302964901
Epoch Step: 50 / 82 Loss (mean): 33.49793763458729 Loss (std): 17.23737610235524 Loss ratio: 0.5145802195463313 Tokens per Sec: 2552.8631807336637
Epoch Step: 55 / 82 Loss (mean): 40.304119035601616 Loss (std): 15.01617045420227 Loss ratio: 0.37257160839908493 Tokens per Sec: 2832.096532674275
Epoch Step: 60 / 82 Loss (mean): 40.42981092631817 Loss (std): 14.862448440076655 Loss ratio: 0.36761112900485526 Tokens per Sec: 3696.52198568347
Epoch Step: 65 / 82 Loss (mean): 40.47902522981167 Loss (std): 14.94173087369815 Loss ratio: 0.36912279356702454 Tokens per Sec: 2768.6844806923277
Epoch Step: 70 / 82 Loss (mean): 40.16873277723789 Loss (std): 17.550544340796005 Loss ratio: 0.43692053812415105 Tokens per Sec: 3237.2662401786097
Epoch Step: 75 / 82 Loss (mean): 43.92765283584595 Loss (std): 16.570038412296658 Loss ratio: 0.37721201435955476 Tokens per Sec: 3527.1639320743
Epoch Step: 80 / 82 Loss (mean): 36.530908927321434 Loss (std): 18.713005226328136 Loss ratio: 0.5122512900940358 Tokens per Sec: 3637.924440322314
Mean loss per sample: 38.124955638650725 Std loss per sample: 15.847087096634617 ratio: 0.4156617845495665
Epoch ended with duration 0:00:12.003887
Train perplexity: 173.25948141969477
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix the to the[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix the to the[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in[0m
Epoch Step: 5 / 11 Loss (mean): 49.075335174798965 Loss (std): 18.010379940961993 Loss ratio: 0.3669945376187799 Tokens per Sec: 5564.686775409577
Epoch Step: 10 / 11 Loss (mean): 48.57174789905548 Loss (std): 21.277053152976173 Loss ratio: 0.4380540967394324 Tokens per Sec: 3220.8532357418862
Mean loss per sample: 46.6928198257353 Std loss per sample: 19.833805626468767 ratio: 0.4247720677502782
Epoch ended with duration 0:00:01.211523
b'BLEU = 0.00, 13.3/1.6/0.2/0.0 (BP=0.388, ratio=0.513, hyp_len=2134, ref_len=4156)\n'
Validation perplexity: 571.7319740845462
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved checkpoint_commit_msg_generator!
Epoch 26 / 1000
Epoch Step: 5 / 82 Loss (mean): 20.462916620075703 Loss (std): 7.596594871314686 Loss ratio: 0.37123715120169326 Tokens per Sec: 3277.996028078786
Epoch Step: 10 / 82 Loss (mean): 39.168027341365814 Loss (std): 13.417582682554558 Loss ratio: 0.34256467821610437 Tokens per Sec: 3500.6335204856045
Epoch Step: 15 / 82 Loss (mean): 47.20821385085583 Loss (std): 20.124687355856768 Loss ratio: 0.4262963097785563 Tokens per Sec: 3175.1306201158923
Epoch Step: 20 / 82 Loss (mean): 36.22552623599768 Loss (std): 14.059893356811944 Loss ratio: 0.38812116255306417 Tokens per Sec: 3127.2232056014204
Epoch Step: 25 / 82 Loss (mean): 35.516996175050735 Loss (std): 15.268342004878267 Loss ratio: 0.4298883252858997 Tokens per Sec: 4055.739099329277
Epoch Step: 30 / 82 Loss (mean): 40.70673657953739 Loss (std): 16.909176112542674 Loss ratio: 0.41539011803374676 Tokens per Sec: 2818.038244440958
Epoch Step: 35 / 82 Loss (mean): 42.76800847053528 Loss (std): 14.50449486320213 Loss ratio: 0.33914356505973153 Tokens per Sec: 3884.652467890683
Epoch Step: 40 / 82 Loss (mean): 38.96732938289642 Loss (std): 16.874347024178405 Loss ratio: 0.4330383244478876 Tokens per Sec: 3165.584313471833
Epoch Step: 45 / 82 Loss (mean): 35.99010381102562 Loss (std): 12.375379501591373 Loss ratio: 0.343855065452747 Tokens per Sec: 3041.58661016939
Epoch Step: 50 / 82 Loss (mean): 35.644800916314125 Loss (std): 14.119511588461371 Loss ratio: 0.39611699954814644 Tokens per Sec: 2872.368141281131
Epoch Step: 55 / 82 Loss (mean): 39.411279030144215 Loss (std): 14.702365722338506 Loss ratio: 0.3730496975521453 Tokens per Sec: 3435.4921167206303
Epoch Step: 60 / 82 Loss (mean): 39.766431376338005 Loss (std): 16.96896796986396 Loss ratio: 0.42671588529718835 Tokens per Sec: 3238.4152569483194
Epoch Step: 65 / 82 Loss (mean): 36.82077816128731 Loss (std): 16.19020913026966 Loss ratio: 0.4397030681793616 Tokens per Sec: 2687.71988473618
Epoch Step: 70 / 82 Loss (mean): 35.33424923568964 Loss (std): 17.154935261005786 Loss ratio: 0.48550445055666575 Tokens per Sec: 4205.911920895843
Epoch Step: 75 / 82 Loss (mean): 35.32237169146538 Loss (std): 14.516579466202426 Loss ratio: 0.4109740872725694 Tokens per Sec: 2605.093554827102
Epoch Step: 80 / 82 Loss (mean): 29.762778967618942 Loss (std): 8.435595822161345 Loss ratio: 0.2834276944145247 Tokens per Sec: 3335.8112257600487
Mean loss per sample: 37.82039381112527 Std loss per sample: 15.857617275420445 ratio: 0.4192874710563103
Epoch ended with duration 0:00:11.981082
Train perplexity: 166.26971131613774
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix the name[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in[0m
Epoch Step: 5 / 11 Loss (mean): 49.22534936666489 Loss (std): 18.330739445928202 Loss ratio: 0.3723841411340327 Tokens per Sec: 5735.7027093772285
Epoch Step: 10 / 11 Loss (mean): 48.76897291839123 Loss (std): 21.77239059344788 Loss ratio: 0.44643939149346556 Tokens per Sec: 3262.673227643432
Mean loss per sample: 45.9138794812952 Std loss per sample: 20.077728474000146 ratio: 0.4372910479538021
Epoch ended with duration 0:00:01.189569
b'BLEU = 0.00, 14.2/2.1/0.5/0.0 (BP=0.364, ratio=0.497, hyp_len=2066, ref_len=4156)\n'
Validation perplexity: 514.2761246194776
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 27 / 1000
Epoch Step: 5 / 82 Loss (mean): 40.7457485049963 Loss (std): 14.611525756500974 Loss ratio: 0.35860246265225165 Tokens per Sec: 2525.500693201037
Epoch Step: 10 / 82 Loss (mean): 26.67594487965107 Loss (std): 18.63836508521802 Loss ratio: 0.6986955914515975 Tokens per Sec: 3402.4822492440703
Epoch Step: 15 / 82 Loss (mean): 35.8392708748579 Loss (std): 12.202426053064729 Loss ratio: 0.34047640354271325 Tokens per Sec: 3542.8412146213964
Epoch Step: 20 / 82 Loss (mean): 38.30850299447775 Loss (std): 16.864174960788944 Loss ratio: 0.440220150686127 Tokens per Sec: 3029.1858979344674
Epoch Step: 25 / 82 Loss (mean): 35.083176858723164 Loss (std): 15.11299506715671 Loss ratio: 0.4307761274874108 Tokens per Sec: 3561.495117606224
Epoch Step: 30 / 82 Loss (mean): 30.082139879465103 Loss (std): 15.785512460148409 Loss ratio: 0.5247469935117227 Tokens per Sec: 3718.9429654478145
Epoch Step: 35 / 82 Loss (mean): 38.54716505110264 Loss (std): 13.406721843939154 Loss ratio: 0.34780046278800614 Tokens per Sec: 2851.8865478965395
Epoch Step: 40 / 82 Loss (mean): 36.873975321650505 Loss (std): 14.543678275851942 Loss ratio: 0.3944157945810806 Tokens per Sec: 2872.6919344584567
Epoch Step: 45 / 82 Loss (mean): 41.63203325867653 Loss (std): 8.234763213312565 Loss ratio: 0.19779872777643784 Tokens per Sec: 3724.170023999909
Epoch Step: 50 / 82 Loss (mean): 44.38994672894478 Loss (std): 21.623339574482095 Loss ratio: 0.4871224492905833 Tokens per Sec: 3079.141868989689
Epoch Step: 55 / 82 Loss (mean): 38.181682638823986 Loss (std): 18.041952693017247 Loss ratio: 0.4725290098837024 Tokens per Sec: 3164.5095437169025
Epoch Step: 60 / 82 Loss (mean): 29.523950397968292 Loss (std): 8.589650340525035 Loss ratio: 0.2909383813731152 Tokens per Sec: 3536.1609532733414
Epoch Step: 65 / 82 Loss (mean): 42.73902018368244 Loss (std): 18.39484584693828 Loss ratio: 0.43039933456315754 Tokens per Sec: 2606.802796341498
Epoch Step: 70 / 82 Loss (mean): 38.33329460024834 Loss (std): 10.220427545289189 Loss ratio: 0.26662011840805816 Tokens per Sec: 2609.8692821113714
Epoch Step: 75 / 82 Loss (mean): 46.961912512779236 Loss (std): 14.408146183367645 Loss ratio: 0.3068049279178507 Tokens per Sec: 3310.933996872995
Epoch Step: 80 / 82 Loss (mean): 37.540286496281624 Loss (std): 14.802111695352364 Loss ratio: 0.39429938012909194 Tokens per Sec: 3021.5774165263083
Mean loss per sample: 38.082444526915886 Std loss per sample: 16.040835133611367 ratio: 0.42121337883848387
Epoch ended with duration 0:00:12.422042
Train perplexity: 172.2664714573754
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix the to[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix the to[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in[0m
Epoch Step: 5 / 11 Loss (mean): 49.14302542805672 Loss (std): 18.04569979754054 Loss ratio: 0.3672077500388874 Tokens per Sec: 5512.039640327024
Epoch Step: 10 / 11 Loss (mean): 48.647319450974464 Loss (std): 21.24492122838277 Loss ratio: 0.43671309063170194 Tokens per Sec: 3193.1723809891278
Mean loss per sample: 46.013324753589224 Std loss per sample: 19.88715238852901 ratio: 0.4322042037828995
Epoch ended with duration 0:00:01.234755
b'BLEU = 0.00, 14.4/1.6/0.3/0.0 (BP=0.364, ratio=0.497, hyp_len=2066, ref_len=4156)\n'
Validation perplexity: 521.2770038523823
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 28 / 1000
Epoch Step: 5 / 82 Loss (mean): 39.75779485702515 Loss (std): 11.861078450576684 Loss ratio: 0.29833340841037237 Tokens per Sec: 2712.882589767202
Epoch Step: 10 / 82 Loss (mean): 38.864891558885574 Loss (std): 16.817011893339547 Loss ratio: 0.43270445944405883 Tokens per Sec: 3785.1363128286343
Epoch Step: 15 / 82 Loss (mean): 37.35486137866974 Loss (std): 14.01528110147943 Loss ratio: 0.37519296242074646 Tokens per Sec: 3095.2265647537115
Epoch Step: 20 / 82 Loss (mean): 38.40913600474596 Loss (std): 14.813608895309741 Loss ratio: 0.38567930539961437 Tokens per Sec: 3956.725794858004
Epoch Step: 25 / 82 Loss (mean): 35.63392162322998 Loss (std): 16.29362269266408 Loss ratio: 0.4572503376120736 Tokens per Sec: 2573.377408287989
Epoch Step: 30 / 82 Loss (mean): 37.84142664819956 Loss (std): 17.10294760868697 Loss ratio: 0.4519636050640471 Tokens per Sec: 3316.5898656380296
Epoch Step: 35 / 82 Loss (mean): 46.16723969578743 Loss (std): 16.94032953837758 Loss ratio: 0.36693399150574113 Tokens per Sec: 3773.7705335208248
Epoch Step: 40 / 82 Loss (mean): 36.514079600572586 Loss (std): 15.3885902054703 Loss ratio: 0.4214426427779652 Tokens per Sec: 3157.2242475868234
Epoch Step: 45 / 82 Loss (mean): 37.67944273352623 Loss (std): 9.835203557427104 Loss ratio: 0.26102306307932693 Tokens per Sec: 3308.9071019676717
Epoch Step: 50 / 82 Loss (mean): 36.60520128905773 Loss (std): 14.464047641984008 Loss ratio: 0.3951364050088613 Tokens per Sec: 2778.5340990941754
Epoch Step: 55 / 82 Loss (mean): 38.86955080926418 Loss (std): 16.09910991834711 Loss ratio: 0.4141830708913169 Tokens per Sec: 3480.2507665744106
Epoch Step: 60 / 82 Loss (mean): 39.22360147535801 Loss (std): 14.675052419090418 Loss ratio: 0.3741383214978342 Tokens per Sec: 2730.0297405301467
Epoch Step: 65 / 82 Loss (mean): 35.23104180395603 Loss (std): 13.36913321381313 Loss ratio: 0.3794702776093307 Tokens per Sec: 3389.867267864076
Epoch Step: 70 / 82 Loss (mean): 30.798073425889015 Loss (std): 12.369270459092702 Loss ratio: 0.4016248123070916 Tokens per Sec: 4367.998945405467
Epoch Step: 75 / 82 Loss (mean): 36.08108140528202 Loss (std): 12.24888866081263 Loss ratio: 0.33948230440286853 Tokens per Sec: 2458.5616185687923
Epoch Step: 80 / 82 Loss (mean): 41.02270448207855 Loss (std): 16.248940368309306 Loss ratio: 0.39609627335535436 Tokens per Sec: 3073.8169166663097
Mean loss per sample: 37.34791854990002 Std loss per sample: 15.82987754744539 ratio: 0.42384898977155355
Epoch ended with duration 0:00:12.196289
Train perplexity: 155.9801738943835
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix the to[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in[0m
Epoch Step: 5 / 11 Loss (mean): 49.4563225209713 Loss (std): 18.485632272209124 Loss ratio: 0.37377692739630075 Tokens per Sec: 5677.943431338614
Epoch Step: 10 / 11 Loss (mean): 48.926271602511406 Loss (std): 21.796456969407867 Loss ratio: 0.4454959729301966 Tokens per Sec: 3229.0789440550634
Mean loss per sample: 46.136319776558366 Std loss per sample: 20.302681464606117 ratio: 0.44005853875934436
Epoch ended with duration 0:00:01.201338
b'BLEU = 0.00, 14.8/2.1/0.6/0.0 (BP=0.328, ratio=0.473, hyp_len=1964, ref_len=4156)\n'
Validation perplexity: 530.0677399133119
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 29 / 1000
Epoch Step: 5 / 82 Loss (mean): 38.289381727576256 Loss (std): 11.838323304457406 Loss ratio: 0.3091803202434938 Tokens per Sec: 3576.189332810242
Epoch Step: 10 / 82 Loss (mean): 32.463514655828476 Loss (std): 7.042839663760142 Loss ratio: 0.2169463084458625 Tokens per Sec: 2922.388606550979
Epoch Step: 15 / 82 Loss (mean): 35.79487594217062 Loss (std): 14.18664864891829 Loss ratio: 0.3963318289421624 Tokens per Sec: 2636.8686769528144
Epoch Step: 20 / 82 Loss (mean): 41.57599627971649 Loss (std): 15.76093462405829 Loss ratio: 0.37908735891790313 Tokens per Sec: 3846.7803781476996
Epoch Step: 25 / 82 Loss (mean): 36.69579862058163 Loss (std): 17.100538512571013 Loss ratio: 0.4660080760030062 Tokens per Sec: 3016.02563622315
Epoch Step: 30 / 82 Loss (mean): 38.622476413846016 Loss (std): 14.534157919443913 Loss ratio: 0.37631346482571665 Tokens per Sec: 3272.6765393830383
Epoch Step: 35 / 82 Loss (mean): 37.95618098974228 Loss (std): 14.742461942214236 Loss ratio: 0.3884074097496376 Tokens per Sec: 3638.6530592352156
Epoch Step: 40 / 82 Loss (mean): 34.310580268502235 Loss (std): 14.096706312451989 Loss ratio: 0.41085595761238214 Tokens per Sec: 2894.7077943248355
Epoch Step: 45 / 82 Loss (mean): 42.19811372458935 Loss (std): 17.87186591658036 Loss ratio: 0.4235228624962497 Tokens per Sec: 3458.4735250777235
Epoch Step: 50 / 82 Loss (mean): 35.470195934176445 Loss (std): 17.96747579905859 Loss ratio: 0.5065513546190047 Tokens per Sec: 3405.3993345878457
Epoch Step: 55 / 82 Loss (mean): 40.31325355172157 Loss (std): 13.913610985302581 Loss ratio: 0.3451373868261844 Tokens per Sec: 2585.7938687240494
Epoch Step: 60 / 82 Loss (mean): 48.207032948732376 Loss (std): 14.055130508823812 Loss ratio: 0.2915576763202017 Tokens per Sec: 2904.202763866312
Epoch Step: 65 / 82 Loss (mean): 37.964657843112946 Loss (std): 16.334679814320317 Loss ratio: 0.43026016148552076 Tokens per Sec: 3580.47200147393
Epoch Step: 70 / 82 Loss (mean): 34.62300322204828 Loss (std): 16.46938437172384 Loss ratio: 0.4756775218515986 Tokens per Sec: 3346.2865171005838
Epoch Step: 75 / 82 Loss (mean): 34.81286568939686 Loss (std): 15.255882807434116 Loss ratio: 0.43822542342673854 Tokens per Sec: 3077.769294749599
Epoch Step: 80 / 82 Loss (mean): 38.513990230858326 Loss (std): 16.826560979344244 Loss ratio: 0.43689477196425114 Tokens per Sec: 3571.040783585014
Mean loss per sample: 36.80887364448028 Std loss per sample: 15.548202627452211 ratio: 0.4224036512941156
Epoch ended with duration 0:00:12.163435
Train perplexity: 145.016256121693
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix the to the[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in[0m
Epoch Step: 5 / 11 Loss (mean): 49.27005484700203 Loss (std): 18.256839502645242 Loss ratio: 0.3705463604483105 Tokens per Sec: 5677.058175494504
Epoch Step: 10 / 11 Loss (mean): 48.7583654075861 Loss (std): 21.452621059914605 Loss ratio: 0.43997826589520755 Tokens per Sec: 3235.4695633661777
Mean loss per sample: 45.93849338887299 Std loss per sample: 19.98858969684451 ratio: 0.4351163528076446
Epoch ended with duration 0:00:01.200842
b'BLEU = 0.00, 13.6/1.9/0.5/0.0 (BP=0.383, ratio=0.510, hyp_len=2121, ref_len=4156)\n'
Validation perplexity: 516.0001216898305
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 30 / 1000
Epoch Step: 5 / 82 Loss (mean): 40.8068810403347 Loss (std): 17.593761240727627 Loss ratio: 0.4311469240527705 Tokens per Sec: 3115.1811255210387
Epoch Step: 10 / 82 Loss (mean): 41.262691244482994 Loss (std): 16.08865730048356 Loss ratio: 0.3899080940978295 Tokens per Sec: 3085.6720649785757
Epoch Step: 15 / 82 Loss (mean): 37.0544216632843 Loss (std): 13.24168055940246 Loss ratio: 0.3573576368221419 Tokens per Sec: 3502.7149274035946
Epoch Step: 20 / 82 Loss (mean): 34.58975160121918 Loss (std): 13.607647341133422 Loss ratio: 0.39340112927130116 Tokens per Sec: 3539.618058363455
Epoch Step: 25 / 82 Loss (mean): 33.98995128273964 Loss (std): 12.442470283015165 Loss ratio: 0.3660631984881234 Tokens per Sec: 2787.710545076232
Epoch Step: 30 / 82 Loss (mean): 38.30513124167919 Loss (std): 16.644548628811478 Loss ratio: 0.43452529959487035 Tokens per Sec: 2761.1252514067073
Epoch Step: 35 / 82 Loss (mean): 34.47633542120457 Loss (std): 12.588403969190336 Loss ratio: 0.36513172921063636 Tokens per Sec: 2780.9124820310744
Epoch Step: 40 / 82 Loss (mean): 39.574849873781204 Loss (std): 14.258594604445772 Loss ratio: 0.36029434476496286 Tokens per Sec: 3902.903246064179
Epoch Step: 45 / 82 Loss (mean): 40.47617533802986 Loss (std): 7.615284592407657 Loss ratio: 0.18814239558974902 Tokens per Sec: 3611.878849337621
Epoch Step: 50 / 82 Loss (mean): 38.060641676187515 Loss (std): 14.59460265386754 Loss ratio: 0.38345655803797424 Tokens per Sec: 3359.0246031215906
Epoch Step: 55 / 82 Loss (mean): 37.78038376569748 Loss (std): 16.76996574819673 Loss ratio: 0.44388023827918177 Tokens per Sec: 3905.165790316775
Epoch Step: 60 / 82 Loss (mean): 50.92292703688145 Loss (std): 16.777765051626066 Loss ratio: 0.3294736973676827 Tokens per Sec: 2969.181159481683
Epoch Step: 65 / 82 Loss (mean): 36.82398569583893 Loss (std): 13.961509588244503 Loss ratio: 0.37914172853434874 Tokens per Sec: 2975.707789281415
Epoch Step: 70 / 82 Loss (mean): 32.24339774250984 Loss (std): 7.351313264161362 Loss ratio: 0.22799437338669049 Tokens per Sec: 3417.585983608152
Epoch Step: 75 / 82 Loss (mean): 47.017302960157394 Loss (std): 14.061411894311167 Loss ratio: 0.29906887484011685 Tokens per Sec: 2793.577254119265
Epoch Step: 80 / 82 Loss (mean): 19.647893823683262 Loss (std): 6.987769632673854 Loss ratio: 0.3556498063039666 Tokens per Sec: 3264.101278932581
Mean loss per sample: 36.60766966053105 Std loss per sample: 15.50149414286811 ratio: 0.42344935601244266
Epoch ended with duration 0:00:12.104222
Train perplexity: 141.124362423979
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix the to[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in[0m
Epoch Step: 5 / 11 Loss (mean): 49.55692273378372 Loss (std): 18.709153171557123 Loss ratio: 0.3775285497863007 Tokens per Sec: 5698.194600171969
Epoch Step: 10 / 11 Loss (mean): 49.152516558766365 Loss (std): 22.003417500978216 Loss ratio: 0.4476559704663565 Tokens per Sec: 3183.381176265994
Mean loss per sample: 46.77382874270098 Std loss per sample: 20.70364434946909 ratio: 0.4426330900418298
Epoch ended with duration 0:00:01.220059
b'BLEU = 0.00, 13.1/1.7/0.3/0.0 (BP=0.414, ratio=0.532, hyp_len=2209, ref_len=4156)\n'
Validation perplexity: 578.0641350507472
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved checkpoint_commit_msg_generator!
Epoch 31 / 1000
Epoch Step: 5 / 82 Loss (mean): 37.23595920205116 Loss (std): 15.654262167667682 Loss ratio: 0.42040711460456637 Tokens per Sec: 2789.543525583799
Epoch Step: 10 / 82 Loss (mean): 42.92994602024555 Loss (std): 23.42020395432059 Loss ratio: 0.5455446867619106 Tokens per Sec: 3270.184903716643
Epoch Step: 15 / 82 Loss (mean): 33.81581322848797 Loss (std): 11.898035605863102 Loss ratio: 0.35184827658793844 Tokens per Sec: 3083.920323440251
Epoch Step: 20 / 82 Loss (mean): 28.425759077072144 Loss (std): 15.448532642424114 Loss ratio: 0.5434694848618732 Tokens per Sec: 2880.318663044613
Epoch Step: 25 / 82 Loss (mean): 48.65226957201958 Loss (std): 20.218714343429063 Loss ratio: 0.4155759745904445 Tokens per Sec: 3750.0850808642595
Epoch Step: 30 / 82 Loss (mean): 36.00291368365288 Loss (std): 14.146522908777015 Loss ratio: 0.3929271678697562 Tokens per Sec: 3073.4697649496843
Epoch Step: 35 / 82 Loss (mean): 36.96912316977978 Loss (std): 13.386252967795746 Loss ratio: 0.36209279041647036 Tokens per Sec: 4174.764330627053
Epoch Step: 40 / 82 Loss (mean): 35.820282608270645 Loss (std): 16.87179106927505 Loss ratio: 0.47101222661430026 Tokens per Sec: 3607.7486808827493
Epoch Step: 45 / 82 Loss (mean): 46.01248721778393 Loss (std): 16.479819072623503 Loss ratio: 0.35815970987662704 Tokens per Sec: 2708.093287762548
Epoch Step: 50 / 82 Loss (mean): 33.73964586108923 Loss (std): 10.773023772932088 Loss ratio: 0.3192986617964549 Tokens per Sec: 2993.6019700847733
Epoch Step: 55 / 82 Loss (mean): 35.57915239036083 Loss (std): 15.323734024692028 Loss ratio: 0.4306941845203587 Tokens per Sec: 3035.0256425635403
Epoch Step: 60 / 82 Loss (mean): 32.9041768014431 Loss (std): 15.75236435536408 Loss ratio: 0.4787344916853601 Tokens per Sec: 2801.1980764322807
Epoch Step: 65 / 82 Loss (mean): 36.57172864675522 Loss (std): 14.920030896312781 Loss ratio: 0.40796624738263615 Tokens per Sec: 4128.4700400213715
Epoch Step: 70 / 82 Loss (mean): 37.58344478905201 Loss (std): 15.081519176480512 Loss ratio: 0.40128091666769544 Tokens per Sec: 3433.353997252589
Epoch Step: 75 / 82 Loss (mean): 37.564719811081886 Loss (std): 16.70279543090989 Loss ratio: 0.444640490196933 Tokens per Sec: 3197.5238583474575
Epoch Step: 80 / 82 Loss (mean): 34.073940344154835 Loss (std): 15.662682348875064 Loss ratio: 0.45966748167891 Tokens per Sec: 3597.2200432021946
Mean loss per sample: 36.25506353879558 Std loss per sample: 15.460036811088923 ratio: 0.4264242095327056
Epoch ended with duration 0:00:12.060565
Train perplexity: 134.55410906694277
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix the to[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in[0m
Epoch Step: 5 / 11 Loss (mean): 49.50026112794876 Loss (std): 18.6293608298162 Loss ratio: 0.37634873847761824 Tokens per Sec: 5442.906825849987
Epoch Step: 10 / 11 Loss (mean): 49.00864374637604 Loss (std): 21.801503497674375 Loss ratio: 0.44485016991082305 Tokens per Sec: 3214.697500244818
Mean loss per sample: 47.4267134345635 Std loss per sample: 20.75214363872503 ratio: 0.4375623385195682
Epoch ended with duration 0:00:01.222826
b'BLEU = 0.00, 13.9/2.1/0.5/0.0 (BP=0.363, ratio=0.496, hyp_len=2063, ref_len=4156)\n'
Validation perplexity: 631.7257899459524
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 32 / 1000
Epoch Step: 5 / 82 Loss (mean): 33.74099703133106 Loss (std): 12.707392788546997 Loss ratio: 0.37661580589178273 Tokens per Sec: 3496.0308811163763
Epoch Step: 10 / 82 Loss (mean): 36.611222088336945 Loss (std): 13.998172184147938 Loss ratio: 0.38234648792582276 Tokens per Sec: 3812.134513355402
Epoch Step: 15 / 82 Loss (mean): 27.635705575346947 Loss (std): 7.514981670031494 Loss ratio: 0.27193015389248476 Tokens per Sec: 2904.343860306367
Epoch Step: 20 / 82 Loss (mean): 28.17068860679865 Loss (std): 15.109085092004252 Loss ratio: 0.5363406377065933 Tokens per Sec: 2798.892860584247
Epoch Step: 25 / 82 Loss (mean): 41.78815905749798 Loss (std): 17.454577642538514 Loss ratio: 0.4176919499737251 Tokens per Sec: 2700.9846362041176
Epoch Step: 30 / 82 Loss (mean): 35.89984552562237 Loss (std): 13.933398547992704 Loss ratio: 0.3881186212360771 Tokens per Sec: 2895.196802613083
Epoch Step: 35 / 82 Loss (mean): 35.761848986148834 Loss (std): 16.241626768689027 Loss ratio: 0.45416071118078044 Tokens per Sec: 3485.7975400617333
Epoch Step: 40 / 82 Loss (mean): 37.15053491294384 Loss (std): 14.676793467443638 Loss ratio: 0.39506277639975534 Tokens per Sec: 2692.768208064384
Epoch Step: 45 / 82 Loss (mean): 38.06453624367714 Loss (std): 13.392196619490147 Loss ratio: 0.3518287083220332 Tokens per Sec: 3307.0526587765366
Epoch Step: 50 / 82 Loss (mean): 42.297206699848175 Loss (std): 14.662535669969396 Loss ratio: 0.3466549404554894 Tokens per Sec: 3243.677677305289
Epoch Step: 55 / 82 Loss (mean): 19.26825314760208 Loss (std): 7.27371462979003 Loss ratio: 0.3774973566140446 Tokens per Sec: 3434.9800102894383
Epoch Step: 60 / 82 Loss (mean): 33.28974997997284 Loss (std): 15.164982512363977 Loss ratio: 0.45554510086399724 Tokens per Sec: 3238.331835369113
Epoch Step: 65 / 82 Loss (mean): 39.1946262717247 Loss (std): 11.390364256464443 Loss ratio: 0.2906103550394493 Tokens per Sec: 4753.531525232991
Epoch Step: 70 / 82 Loss (mean): 31.608943045139313 Loss (std): 13.672652933993058 Loss ratio: 0.43255647347865306 Tokens per Sec: 3323.2347830911544
Epoch Step: 75 / 82 Loss (mean): 37.829295337200165 Loss (std): 16.84693795428674 Loss ratio: 0.44534104598348095 Tokens per Sec: 3390.8011117500887
Epoch Step: 80 / 82 Loss (mean): 34.85062810778618 Loss (std): 15.603489246538222 Loss ratio: 0.44772476404957984 Tokens per Sec: 2772.9069624690637
Mean loss per sample: 35.68961420627909 Std loss per sample: 15.305950542791296 ratio: 0.4288628746258184
Epoch ended with duration 0:00:12.067442
Train perplexity: 124.6504313944692
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in method_1 ( )[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix the name[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in[0m
Epoch Step: 5 / 11 Loss (mean): 49.486565828323364 Loss (std): 18.495668916820502 Loss ratio: 0.3737513122447185 Tokens per Sec: 5541.167845452681
Epoch Step: 10 / 11 Loss (mean): 53.321996197104454 Loss (std): 21.691822973450876 Loss ratio: 0.40680815649262597 Tokens per Sec: 3192.4819525819676
Mean loss per sample: 47.12226377423021 Std loss per sample: 20.611098568821486 ratio: 0.4373961885102195
Epoch ended with duration 0:00:01.230180
b'BLEU = 0.00, 12.3/1.7/0.3/0.0 (BP=0.512, ratio=0.599, hyp_len=2489, ref_len=4156)\n'
Validation perplexity: 606.1093387324975
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 33 / 1000
Epoch Step: 5 / 82 Loss (mean): 42.31375393271446 Loss (std): 23.394800026041207 Loss ratio: 0.5528887856001296 Tokens per Sec: 3645.887886839792
Epoch Step: 10 / 82 Loss (mean): 42.12262466549873 Loss (std): 17.80168694327352 Loss ratio: 0.4226158052742212 Tokens per Sec: 2571.154346477925
Epoch Step: 15 / 82 Loss (mean): 33.73086565732956 Loss (std): 12.391984499811018 Loss ratio: 0.3673781937795687 Tokens per Sec: 3256.93317511065
Epoch Step: 20 / 82 Loss (mean): 32.29529757797718 Loss (std): 13.253176894017706 Loss ratio: 0.410374818873176 Tokens per Sec: 3078.1404571294916
Epoch Step: 25 / 82 Loss (mean): 40.72050057351589 Loss (std): 17.156172008450703 Loss ratio: 0.4213153514033387 Tokens per Sec: 2571.2895715762866
Epoch Step: 30 / 82 Loss (mean): 35.41871577501297 Loss (std): 13.379758610794585 Loss ratio: 0.3777595634970389 Tokens per Sec: 3373.8705155481784
Epoch Step: 35 / 82 Loss (mean): 34.35679192841053 Loss (std): 13.688975300153439 Loss ratio: 0.39843578319760603 Tokens per Sec: 3139.210131038491
Epoch Step: 40 / 82 Loss (mean): 38.8042748272419 Loss (std): 7.706696760289783 Loss ratio: 0.19860432374011083 Tokens per Sec: 4264.13153989434
Epoch Step: 45 / 82 Loss (mean): 46.237638741731644 Loss (std): 16.981225038263926 Loss ratio: 0.36725978013530286 Tokens per Sec: 3044.4643694090482
Epoch Step: 50 / 82 Loss (mean): 35.8626551926136 Loss (std): 13.844979819391728 Loss ratio: 0.3860556265293845 Tokens per Sec: 2794.4829249808377
Epoch Step: 55 / 82 Loss (mean): 36.75833760201931 Loss (std): 16.487006317303308 Loss ratio: 0.44852426395903167 Tokens per Sec: 3647.024917713859
Epoch Step: 60 / 82 Loss (mean): 33.13247411698103 Loss (std): 17.299671518595247 Loss ratio: 0.5221364229400796 Tokens per Sec: 2997.3705234074296
Epoch Step: 65 / 82 Loss (mean): 27.73493157327175 Loss (std): 7.552500623515642 Loss ratio: 0.2723100507229667 Tokens per Sec: 2700.9664938200012
Epoch Step: 70 / 82 Loss (mean): 32.92634230852127 Loss (std): 13.748007238334171 Loss ratio: 0.41753824671792394 Tokens per Sec: 3449.8127244927337
Epoch Step: 75 / 82 Loss (mean): 33.284722454845905 Loss (std): 11.893038428981285 Loss ratio: 0.3573122307123154 Tokens per Sec: 4157.844143800981
Epoch Step: 80 / 82 Loss (mean): 36.980668030679226 Loss (std): 14.13130699020928 Loss ratio: 0.3821268717613734 Tokens per Sec: 3607.8269169493287
Mean loss per sample: 35.805245660769465 Std loss per sample: 15.383610034972076 ratio: 0.42964682272316734
Epoch ended with duration 0:00:12.085209
Train perplexity: 126.61456396453171
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add missing to use the same[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in[0m
Epoch Step: 5 / 11 Loss (mean): 49.67247265577316 Loss (std): 18.87595385765601 Loss ratio: 0.38000833959817304 Tokens per Sec: 5554.77039668787
Epoch Step: 10 / 11 Loss (mean): 49.30177056789398 Loss (std): 22.015711646384023 Loss ratio: 0.4465501216851017 Tokens per Sec: 3239.2900933544106
Mean loss per sample: 46.83782898468344 Std loss per sample: 20.703607905450355 ratio: 0.4420274883411162
Epoch ended with duration 0:00:01.208577
b'BLEU = 0.00, 11.7/1.5/0.3/0.0 (BP=0.542, ratio=0.620, hyp_len=2577, ref_len=4156)\n'
Validation perplexity: 583.1163436984017
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 34 / 1000
Epoch Step: 5 / 82 Loss (mean): 37.055421486496925 Loss (std): 13.340212686054171 Loss ratio: 0.36000704217911467 Tokens per Sec: 3164.6286046076284
Epoch Step: 10 / 82 Loss (mean): 41.8544587045908 Loss (std): 22.68131110699133 Loss ratio: 0.5419090775268713 Tokens per Sec: 2894.5271388664
Epoch Step: 15 / 82 Loss (mean): 31.399640753865242 Loss (std): 13.678694446175664 Loss ratio: 0.435632195712043 Tokens per Sec: 3057.975460997378
Epoch Step: 20 / 82 Loss (mean): 32.28676827251911 Loss (std): 14.878123600947536 Loss ratio: 0.46081179371585024 Tokens per Sec: 3441.5515601536595
Epoch Step: 25 / 82 Loss (mean): 37.698153018951416 Loss (std): 11.233658883450413 Loss ratio: 0.2979896356673784 Tokens per Sec: 4299.7833349419025
Epoch Step: 30 / 82 Loss (mean): 33.38820020854473 Loss (std): 12.424033294404262 Loss ratio: 0.37210850590337285 Tokens per Sec: 3748.851197664619
Epoch Step: 35 / 82 Loss (mean): 37.59274661540985 Loss (std): 15.47080675153299 Loss ratio: 0.41153701563245887 Tokens per Sec: 2647.1371269133865
Epoch Step: 40 / 82 Loss (mean): 34.3622590303421 Loss (std): 16.634030625139374 Loss ratio: 0.48407849467787945 Tokens per Sec: 3411.803588303125
Epoch Step: 45 / 82 Loss (mean): 34.43987049162388 Loss (std): 13.19418843862647 Loss ratio: 0.3831079574423902 Tokens per Sec: 4091.3063879312526
Epoch Step: 50 / 82 Loss (mean): 35.3414066657424 Loss (std): 17.135119520556714 Loss ratio: 0.4848454302518285 Tokens per Sec: 3715.372177153361
Epoch Step: 55 / 82 Loss (mean): 37.43484744429588 Loss (std): 11.29647652529406 Loss ratio: 0.30176365863660964 Tokens per Sec: 2908.5784731607378
Epoch Step: 60 / 82 Loss (mean): 34.064189940690994 Loss (std): 14.868722554855568 Loss ratio: 0.4364913001231919 Tokens per Sec: 2980.2781328735377
Epoch Step: 65 / 82 Loss (mean): 33.51940897107124 Loss (std): 13.664891846294418 Loss ratio: 0.407671026004302 Tokens per Sec: 3076.511822835355
Epoch Step: 70 / 82 Loss (mean): 37.3984512090683 Loss (std): 11.606451361965195 Loss ratio: 0.31034577600772106 Tokens per Sec: 2914.635036357412
Epoch Step: 75 / 82 Loss (mean): 27.80991367250681 Loss (std): 15.19015937845597 Loss ratio: 0.5462138271027116 Tokens per Sec: 3361.581663471128
Epoch Step: 80 / 82 Loss (mean): 24.334746964275837 Loss (std): 17.635406202318528 Loss ratio: 0.7247006195793961 Tokens per Sec: 3019.138067735747
Mean loss per sample: 34.85646663282625 Std loss per sample: 14.913432792346423 ratio: 0.4278526836768253
Epoch ended with duration 0:00:12.034912
Train perplexity: 111.3708075549794
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix the name[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in[0m
Epoch Step: 5 / 11 Loss (mean): 49.934448301792145 Loss (std): 19.254364804018422 Loss ratio: 0.3855928213655138 Tokens per Sec: 5694.375500524154
Epoch Step: 10 / 11 Loss (mean): 49.64283600449562 Loss (std): 22.786038045764663 Loss ratio: 0.4589995229865831 Tokens per Sec: 3252.7397435190283
Mean loss per sample: 46.49295552571615 Std loss per sample: 21.263353611683126 ratio: 0.45734570691944837
Epoch ended with duration 0:00:01.194867
b'BLEU = 0.00, 13.5/2.0/0.7/0.0 (BP=0.428, ratio=0.541, hyp_len=2249, ref_len=4156)\n'
Validation perplexity: 556.4044224121672
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 35 / 1000
Epoch Step: 5 / 82 Loss (mean): 34.050314858555794 Loss (std): 12.178646539913563 Loss ratio: 0.35766619458596416 Tokens per Sec: 3201.2143752964384
Epoch Step: 10 / 82 Loss (mean): 34.08674183487892 Loss (std): 16.457273355303048 Loss ratio: 0.4828057030215574 Tokens per Sec: 3132.3055963216934
Epoch Step: 15 / 82 Loss (mean): 31.16431613266468 Loss (std): 13.247775863142165 Loss ratio: 0.4250943870145314 Tokens per Sec: 2964.5069138489694
Epoch Step: 20 / 82 Loss (mean): 28.12780937552452 Loss (std): 11.09294310895495 Loss ratio: 0.39437636116118946 Tokens per Sec: 3257.319569105713
Epoch Step: 25 / 82 Loss (mean): 24.1051893979311 Loss (std): 17.088457847658827 Loss ratio: 0.708911992582207 Tokens per Sec: 3288.8739283342074
Epoch Step: 30 / 82 Loss (mean): 39.40981885790825 Loss (std): 16.984708155815877 Loss ratio: 0.4309765598531191 Tokens per Sec: 3862.9119467928194
Epoch Step: 35 / 82 Loss (mean): 34.22543050348759 Loss (std): 16.18634285144881 Loss ratio: 0.4729332140847553 Tokens per Sec: 3111.5978304063087
Epoch Step: 40 / 82 Loss (mean): 34.22768771648407 Loss (std): 13.627047774820596 Loss ratio: 0.39812937080928795 Tokens per Sec: 3026.853401547479
Epoch Step: 45 / 82 Loss (mean): 37.01469284296036 Loss (std): 13.438639550230365 Loss ratio: 0.36306230088807 Tokens per Sec: 2660.685932667984
Epoch Step: 50 / 82 Loss (mean): 30.669003888964653 Loss (std): 14.251274681358314 Loss ratio: 0.4646800637201725 Tokens per Sec: 3124.563805267538
Epoch Step: 55 / 82 Loss (mean): 36.189425230026245 Loss (std): 15.298079669042156 Loss ratio: 0.4227223718477129 Tokens per Sec: 3133.6323347673924
Epoch Step: 60 / 82 Loss (mean): 30.552245572209358 Loss (std): 12.631127879126556 Loss ratio: 0.41342715216376635 Tokens per Sec: 3141.059908779882
Epoch Step: 65 / 82 Loss (mean): 36.67863926291466 Loss (std): 13.60329550341559 Loss ratio: 0.3708778672487374 Tokens per Sec: 3749.419504411397
Epoch Step: 70 / 82 Loss (mean): 34.374873995780945 Loss (std): 13.271744916759523 Loss ratio: 0.38608854008856736 Tokens per Sec: 3330.9475511299074
Epoch Step: 75 / 82 Loss (mean): 32.77520155161619 Loss (std): 14.316230358399391 Loss ratio: 0.4368006810226141 Tokens per Sec: 3239.1958088971783
Epoch Step: 80 / 82 Loss (mean): 27.393490374088287 Loss (std): 7.533599699449984 Loss ratio: 0.2750142313582673 Tokens per Sec: 3216.522547698462
Mean loss per sample: 35.248211818095015 Std loss per sample: 15.20399443693606 ratio: 0.43134087242209945
Epoch ended with duration 0:00:12.115968
Train perplexity: 117.42880519658144
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix the name[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in[0m
Epoch Step: 5 / 11 Loss (mean): 49.602102756500244 Loss (std): 19.042393986448047 Loss ratio: 0.3839029583065928 Tokens per Sec: 5688.503438109452
Epoch Step: 10 / 11 Loss (mean): 49.42734904587269 Loss (std): 22.426886092054083 Loss ratio: 0.45373435001015466 Tokens per Sec: 3228.872498197571
Mean loss per sample: 46.32224481186007 Std loss per sample: 21.027888798604824 ratio: 0.45394796569144186
Epoch ended with duration 0:00:01.201056
b'BLEU = 0.00, 13.2/1.9/0.5/0.0 (BP=0.369, ratio=0.500, hyp_len=2080, ref_len=4156)\n'
Validation perplexity: 543.6384596708373
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved checkpoint_commit_msg_generator!
Epoch 36 / 1000
Epoch Step: 5 / 82 Loss (mean): 34.623092755675316 Loss (std): 14.606005887730559 Loss ratio: 0.42185734217335 Tokens per Sec: 2735.378900159884
Epoch Step: 10 / 82 Loss (mean): 31.868388414382935 Loss (std): 13.893016908659742 Loss ratio: 0.43594977970048543 Tokens per Sec: 3394.4193228087743
Epoch Step: 15 / 82 Loss (mean): 34.477521270513535 Loss (std): 12.801896538513283 Loss ratio: 0.3713113955631707 Tokens per Sec: 3277.7316622138387
Epoch Step: 20 / 82 Loss (mean): 35.12828649580479 Loss (std): 14.378907538817765 Loss ratio: 0.4093256168511087 Tokens per Sec: 3790.9604657353316
Epoch Step: 25 / 82 Loss (mean): 36.04442973434925 Loss (std): 16.036893767307696 Loss ratio: 0.44492016895539954 Tokens per Sec: 3554.3901432529624
Epoch Step: 30 / 82 Loss (mean): 42.99744302034378 Loss (std): 20.095348109687404 Loss ratio: 0.46736146845242643 Tokens per Sec: 3070.649748856094
Epoch Step: 35 / 82 Loss (mean): 32.19845159351826 Loss (std): 11.983842072654573 Loss ratio: 0.3721869058780141 Tokens per Sec: 2683.7539415178967
Epoch Step: 40 / 82 Loss (mean): 40.9376315549016 Loss (std): 22.218100623096472 Loss ratio: 0.5427304848669543 Tokens per Sec: 2654.3049200901705
Epoch Step: 45 / 82 Loss (mean): 37.78075057268143 Loss (std): 14.671355257316392 Loss ratio: 0.38832884564037706 Tokens per Sec: 3515.656655369316
Epoch Step: 50 / 82 Loss (mean): 35.779044322669506 Loss (std): 13.681862664731023 Loss ratio: 0.3823987734647857 Tokens per Sec: 3536.620969777667
Epoch Step: 55 / 82 Loss (mean): 34.711154758930206 Loss (std): 9.220564608173303 Loss ratio: 0.26563693061237353 Tokens per Sec: 2690.396195750316
Epoch Step: 60 / 82 Loss (mean): 49.82891210913658 Loss (std): 14.374285968006062 Loss ratio: 0.2884728034303283 Tokens per Sec: 3458.822878456515
Epoch Step: 65 / 82 Loss (mean): 38.52554261684418 Loss (std): 16.367840616809215 Loss ratio: 0.4248568483407382 Tokens per Sec: 3805.368541210845
Epoch Step: 70 / 82 Loss (mean): 34.90998816490173 Loss (std): 16.083972687628776 Loss ratio: 0.46072695904834177 Tokens per Sec: 3793.1065442486483
Epoch Step: 75 / 82 Loss (mean): 34.78892341256142 Loss (std): 13.037272212444133 Loss ratio: 0.37475354031038216 Tokens per Sec: 2709.7183770910024
Epoch Step: 80 / 82 Loss (mean): 32.04927171766758 Loss (std): 12.797791361390503 Loss ratio: 0.39931613654532916 Tokens per Sec: 3785.8056724931457
Mean loss per sample: 34.63510309036719 Std loss per sample: 14.949972252508585 ratio: 0.4316422045432431
Epoch ended with duration 0:00:12.155482
Train perplexity: 108.08686082658384
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix the to[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in[0m
Epoch Step: 5 / 11 Loss (mean): 50.35265278816223 Loss (std): 19.424846791964228 Loss ratio: 0.38577603594563653 Tokens per Sec: 5687.370827659599
Epoch Step: 10 / 11 Loss (mean): 50.04311145842075 Loss (std): 23.08995774154723 Loss ratio: 0.4614013211535008 Tokens per Sec: 3235.0284953881865
Mean loss per sample: 46.93858924480753 Std loss per sample: 21.713650109899106 ratio: 0.4625969902216677
Epoch ended with duration 0:00:01.200730
b'BLEU = 0.00, 12.7/1.7/0.6/0.0 (BP=0.435, ratio=0.546, hyp_len=2268, ref_len=4156)\n'
Validation perplexity: 591.1600367426323
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 37 / 1000
Epoch Step: 5 / 82 Loss (mean): 33.95774430036545 Loss (std): 12.695998904720497 Loss ratio: 0.3738763915653804 Tokens per Sec: 3532.7089344195642
Epoch Step: 10 / 82 Loss (mean): 34.78254024684429 Loss (std): 12.827794446570008 Loss ratio: 0.3687998161012358 Tokens per Sec: 3662.9325003403483
Epoch Step: 15 / 82 Loss (mean): 32.234078988432884 Loss (std): 16.525898457318693 Loss ratio: 0.51268405910555 Tokens per Sec: 2820.3526789912385
Epoch Step: 20 / 82 Loss (mean): 30.211975798010826 Loss (std): 15.347392515030425 Loss ratio: 0.5079903617571714 Tokens per Sec: 3040.46464555251
Epoch Step: 25 / 82 Loss (mean): 35.62749747931957 Loss (std): 14.043634238510968 Loss ratio: 0.39417964303169967 Tokens per Sec: 3536.1717141138442
Epoch Step: 30 / 82 Loss (mean): 35.40891247242689 Loss (std): 13.52299378831551 Loss ratio: 0.3819093229380015 Tokens per Sec: 2981.5659303143534
Epoch Step: 35 / 82 Loss (mean): 35.3645084053278 Loss (std): 13.406508746184665 Loss ratio: 0.37909501222318487 Tokens per Sec: 3273.9345537514796
Epoch Step: 40 / 82 Loss (mean): 36.92378172278404 Loss (std): 13.530524086236927 Loss ratio: 0.3664446991865905 Tokens per Sec: 2929.3213861560425
Epoch Step: 45 / 82 Loss (mean): 38.48666560649872 Loss (std): 13.722475626099495 Loss ratio: 0.35655142917297483 Tokens per Sec: 3149.6808898283502
Epoch Step: 50 / 82 Loss (mean): 35.04839491844177 Loss (std): 15.5129976296519 Loss ratio: 0.44261649258834584 Tokens per Sec: 4022.397997389943
Epoch Step: 55 / 82 Loss (mean): 32.889187663793564 Loss (std): 14.48920940701369 Loss ratio: 0.44054628393769363 Tokens per Sec: 3156.374705332852
Epoch Step: 60 / 82 Loss (mean): 38.65104568749666 Loss (std): 17.356620258906638 Loss ratio: 0.4490595260795591 Tokens per Sec: 2711.392495693383
Epoch Step: 65 / 82 Loss (mean): 34.51439967751503 Loss (std): 14.343721686611035 Loss ratio: 0.41558659054283037 Tokens per Sec: 3326.408003981849
Epoch Step: 70 / 82 Loss (mean): 32.46469929814339 Loss (std): 12.874040700763501 Loss ratio: 0.39655505761914606 Tokens per Sec: 3110.1480477624054
Epoch Step: 75 / 82 Loss (mean): 37.27568620443344 Loss (std): 7.465018433220283 Loss ratio: 0.20026508411620925 Tokens per Sec: 3480.1200212773747
Epoch Step: 80 / 82 Loss (mean): 40.215869069099426 Loss (std): 14.076850102110294 Loss ratio: 0.3500322242924371 Tokens per Sec: 3189.2526180937703
Mean loss per sample: 34.067952802604125 Std loss per sample: 14.693681771137541 ratio: 0.4313050994368634
Epoch ended with duration 0:00:12.082266
Train perplexity: 100.10824426190707
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix the name of the[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in[0m
Epoch Step: 5 / 11 Loss (mean): 50.205278009176254 Loss (std): 19.463303991156018 Loss ratio: 0.38767445900008 Tokens per Sec: 5649.989132560032
Epoch Step: 10 / 11 Loss (mean): 49.89554063975811 Loss (std): 22.97155525945531 Loss ratio: 0.4603929522541531 Tokens per Sec: 3176.707664437947
Mean loss per sample: 47.15052955376628 Std loss per sample: 21.645908411665623 ratio: 0.45908091842282595
Epoch ended with duration 0:00:01.216367
b'BLEU = 0.00, 13.1/2.1/0.6/0.0 (BP=0.478, ratio=0.576, hyp_len=2392, ref_len=4156)\n'
Validation perplexity: 608.4432235754853
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 38 / 1000
Epoch Step: 5 / 82 Loss (mean): 46.24551245570183 Loss (std): 15.563414817102004 Loss ratio: 0.33653892000894275 Tokens per Sec: 3177.4352233200316
Epoch Step: 10 / 82 Loss (mean): 31.559201180934906 Loss (std): 11.949538301333368 Loss ratio: 0.378638807516844 Tokens per Sec: 2403.1860796855317
Epoch Step: 15 / 82 Loss (mean): 33.85964618623257 Loss (std): 12.759127692782908 Loss ratio: 0.3768240111726509 Tokens per Sec: 3089.1512829406192
Epoch Step: 20 / 82 Loss (mean): 37.439878702163696 Loss (std): 14.555507046017677 Loss ratio: 0.38877014431076395 Tokens per Sec: 3873.2186207473055
Epoch Step: 25 / 82 Loss (mean): 30.85343861579895 Loss (std): 12.761488828295503 Loss ratio: 0.41361642010822086 Tokens per Sec: 2848.380425028695
Epoch Step: 30 / 82 Loss (mean): 30.813377991318703 Loss (std): 13.29273734900839 Loss ratio: 0.43139500488240723 Tokens per Sec: 4032.6072628451307
Epoch Step: 35 / 82 Loss (mean): 31.111341953277588 Loss (std): 16.430776109544247 Loss ratio: 0.528128170562995 Tokens per Sec: 3117.746227607225
Epoch Step: 40 / 82 Loss (mean): 31.153398603200912 Loss (std): 15.286762727788904 Loss ratio: 0.49069326022805865 Tokens per Sec: 3098.2653152389294
Epoch Step: 45 / 82 Loss (mean): 32.369112104177475 Loss (std): 13.751677855119521 Loss ratio: 0.4248395140052286 Tokens per Sec: 2797.8549554542487
Epoch Step: 50 / 82 Loss (mean): 34.730015739798546 Loss (std): 14.115439699700447 Loss ratio: 0.4064334380224593 Tokens per Sec: 3300.4604088274177
Epoch Step: 55 / 82 Loss (mean): 22.840085230767727 Loss (std): 16.335688546290356 Loss ratio: 0.7152201220459834 Tokens per Sec: 3344.3766134990137
Epoch Step: 60 / 82 Loss (mean): 35.19404473900795 Loss (std): 13.579788975186505 Loss ratio: 0.38585473979735846 Tokens per Sec: 4616.890718887468
Epoch Step: 65 / 82 Loss (mean): 34.18410122394562 Loss (std): 14.413468691990497 Loss ratio: 0.4216424646523691 Tokens per Sec: 2888.3501615154146
Epoch Step: 70 / 82 Loss (mean): 33.61187680065632 Loss (std): 16.060648596477602 Loss ratio: 0.47782659360943497 Tokens per Sec: 3265.595672556888
Epoch Step: 75 / 82 Loss (mean): 32.72398594021797 Loss (std): 14.8708372842016 Loss ratio: 0.45443233325452737 Tokens per Sec: 3075.1233666200637
Epoch Step: 80 / 82 Loss (mean): 34.06148833036423 Loss (std): 11.974162970576534 Loss ratio: 0.35154550072617136 Tokens per Sec: 3037.6645767207797
Mean loss per sample: 33.7723588647281 Std loss per sample: 14.810264233413003 ratio: 0.4385321230516967
Epoch ended with duration 0:00:12.068809
Train perplexity: 96.18615659846655
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix the name of the[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in[0m
Epoch Step: 5 / 11 Loss (mean): 50.23289084434509 Loss (std): 19.398890371415124 Loss ratio: 0.3861790560994347 Tokens per Sec: 5671.529147567584
Epoch Step: 10 / 11 Loss (mean): 50.09411896765232 Loss (std): 23.136040949246357 Loss ratio: 0.46185143937127987 Tokens per Sec: 3221.7203985053757
Mean loss per sample: 46.71407622299428 Std loss per sample: 21.558630587166043 ratio: 0.4615018069554406
Epoch ended with duration 0:00:01.204228
b'BLEU = 0.00, 11.7/1.8/0.8/0.0 (BP=0.518, ratio=0.603, hyp_len=2507, ref_len=4156)\n'
Validation perplexity: 573.386762808156
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 39 / 1000
Epoch Step: 5 / 82 Loss (mean): 34.084377720952034 Loss (std): 13.79944647732597 Loss ratio: 0.4048613294425294 Tokens per Sec: 2969.1896559540605
Epoch Step: 10 / 82 Loss (mean): 17.791020423173904 Loss (std): 6.48944750063519 Loss ratio: 0.36475971283706043 Tokens per Sec: 3475.871052530098
Epoch Step: 15 / 82 Loss (mean): 29.27801200002432 Loss (std): 14.40775493480375 Loss ratio: 0.49210154483138346 Tokens per Sec: 2840.146963095518
Epoch Step: 20 / 82 Loss (mean): 34.47973270714283 Loss (std): 13.502476595378731 Loss ratio: 0.3916061852933551 Tokens per Sec: 3666.5403642683164
Epoch Step: 25 / 82 Loss (mean): 31.190422415733337 Loss (std): 10.450464633613667 Loss ratio: 0.33505364224699163 Tokens per Sec: 3224.140829713149
Epoch Step: 30 / 82 Loss (mean): 23.14945937693119 Loss (std): 16.188884164014368 Loss ratio: 0.6993201828353215 Tokens per Sec: 3066.0813123397506
Epoch Step: 35 / 82 Loss (mean): 25.95111221075058 Loss (std): 14.285334250565652 Loss ratio: 0.5504709830759303 Tokens per Sec: 2563.4735132831847
Epoch Step: 40 / 82 Loss (mean): 35.83457708358765 Loss (std): 15.497912655043523 Loss ratio: 0.43248487679631686 Tokens per Sec: 4249.079701016209
Epoch Step: 45 / 82 Loss (mean): 31.784653425216675 Loss (std): 11.579704681105232 Loss ratio: 0.3643174750465694 Tokens per Sec: 2715.0047380791943
Epoch Step: 50 / 82 Loss (mean): 33.41073337197304 Loss (std): 12.79855112683789 Loss ratio: 0.3830670516671177 Tokens per Sec: 3926.0900581338065
Epoch Step: 55 / 82 Loss (mean): 38.93023607134819 Loss (std): 13.679024815960261 Loss ratio: 0.3513727682228911 Tokens per Sec: 3630.490091014487
Epoch Step: 60 / 82 Loss (mean): 43.22651141136885 Loss (std): 20.467280436616207 Loss ratio: 0.4734890641957561 Tokens per Sec: 2619.1401582583067
Epoch Step: 65 / 82 Loss (mean): 31.558665446937084 Loss (std): 12.113842958736832 Loss ratio: 0.3838515598546179 Tokens per Sec: 3023.894629360096
Epoch Step: 70 / 82 Loss (mean): 37.76016250252724 Loss (std): 13.612540216271338 Loss ratio: 0.3605000432760391 Tokens per Sec: 3201.969489963804
Epoch Step: 75 / 82 Loss (mean): 35.755419567227364 Loss (std): 13.097228856276514 Loss ratio: 0.3663005221250752 Tokens per Sec: 3498.365160938204
Epoch Step: 80 / 82 Loss (mean): 31.604498334228992 Loss (std): 14.673056992678191 Loss ratio: 0.4642711565140288 Tokens per Sec: 2983.708497119115
Mean loss per sample: 33.714714873001114 Std loss per sample: 14.806354445099 ratio: 0.43916593988329977
Epoch ended with duration 0:00:12.079631
Train perplexity: 95.43940364045824
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix npe in method_1[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: fix the name of the[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in for new vm dialog[0m
Epoch Step: 5 / 11 Loss (mean): 50.09297186136246 Loss (std): 19.460766501315376 Loss ratio: 0.38849295176926385 Tokens per Sec: 5700.468905909151
Epoch Step: 10 / 11 Loss (mean): 50.066551342606544 Loss (std): 22.65596371631548 Loss ratio: 0.4525169620987115 Tokens per Sec: 3193.539972164177
Mean loss per sample: 47.306903914938644 Std loss per sample: 21.4661216811055 ratio: 0.4537629797059472
Epoch ended with duration 0:00:01.208303
b'BLEU = 0.00, 11.6/1.9/0.5/0.0 (BP=0.580, ratio=0.647, hyp_len=2691, ref_len=4156)\n'
Validation perplexity: 621.5182742676174
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 40 / 1000
Epoch Step: 5 / 82 Loss (mean): 34.079792842268944 Loss (std): 13.25483569697318 Loss ratio: 0.38893533650044065 Tokens per Sec: 3064.4149132051975
Epoch Step: 10 / 82 Loss (mean): 34.00132016092539 Loss (std): 15.446148401987907 Loss ratio: 0.45428084347556463 Tokens per Sec: 3434.7019468588555
Epoch Step: 15 / 82 Loss (mean): 34.18613803386688 Loss (std): 12.482855094364828 Loss ratio: 0.36514376329957327 Tokens per Sec: 2828.3051812100693
Epoch Step: 20 / 82 Loss (mean): 31.314857497811317 Loss (std): 11.253963417523481 Loss ratio: 0.35938095577506785 Tokens per Sec: 3006.5202553209974
Epoch Step: 25 / 82 Loss (mean): 32.91046327352524 Loss (std): 8.876074918227205 Loss ratio: 0.2697037366036578 Tokens per Sec: 2792.0649568155895
Epoch Step: 30 / 82 Loss (mean): 31.940281629562378 Loss (std): 15.220437600553621 Loss ratio: 0.47652797107669587 Tokens per Sec: 2974.6472093460543
Epoch Step: 35 / 82 Loss (mean): 47.387789696455 Loss (std): 16.051699285401074 Loss ratio: 0.3387307023227098 Tokens per Sec: 3445.164677214895
Epoch Step: 40 / 82 Loss (mean): 30.574638299643993 Loss (std): 11.054512686322571 Loss ratio: 0.36155824896385735 Tokens per Sec: 4006.965154709872
Epoch Step: 45 / 82 Loss (mean): 25.61636519432068 Loss (std): 7.451430440076291 Loss ratio: 0.2908855484980486 Tokens per Sec: 3102.500870105993
Epoch Step: 50 / 82 Loss (mean): 32.151643961668015 Loss (std): 14.685863947560444 Loss ratio: 0.45676867923361225 Tokens per Sec: 3267.2253627004634
Epoch Step: 55 / 82 Loss (mean): 51.78551962226629 Loss (std): 27.738381820317194 Loss ratio: 0.5356397313891291 Tokens per Sec: 3243.6632234414633
Epoch Step: 60 / 82 Loss (mean): 34.54631861299276 Loss (std): 15.141385082456232 Loss ratio: 0.43829228960916267 Tokens per Sec: 3026.346479781539
Epoch Step: 65 / 82 Loss (mean): 45.63738714158535 Loss (std): 16.18344249985539 Loss ratio: 0.35460931296631654 Tokens per Sec: 3751.124098224444
Epoch Step: 70 / 82 Loss (mean): 31.92568765580654 Loss (std): 13.82057701203612 Loss ratio: 0.4328983344395552 Tokens per Sec: 2569.521359590316
Epoch Step: 75 / 82 Loss (mean): 35.83113592863083 Loss (std): 15.318970378749196 Loss ratio: 0.4275323676386321 Tokens per Sec: 3644.5839612728237
Epoch Step: 80 / 82 Loss (mean): 38.75732620060444 Loss (std): 18.947883222925693 Loss ratio: 0.4888852013385328 Tokens per Sec: 3150.9482626511854
Mean loss per sample: 33.832229033340376 Std loss per sample: 15.229968291933584 ratio: 0.4501615390734388
Epoch ended with duration 0:00:12.125312
Train perplexity: 96.96793503510969
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix broken[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for method_1[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in for new[0m
Epoch Step: 5 / 11 Loss (mean): 50.592870980501175 Loss (std): 19.814214358070515 Loss ratio: 0.39164044210313825 Tokens per Sec: 5702.417887022088
Epoch Step: 10 / 11 Loss (mean): 50.09144803881645 Loss (std): 22.76824482577684 Loss ratio: 0.4545335724400193 Tokens per Sec: 3184.7554967140986
Mean loss per sample: 47.66756454228626 Std loss per sample: 21.848119090019114 ratio: 0.4583435151304507
Epoch ended with duration 0:00:01.210540
b'BLEU = 0.00, 11.0/1.3/0.3/0.0 (BP=0.644, ratio=0.695, hyp_len=2887, ref_len=4156)\n'
Validation perplexity: 652.7558452190914
Validation accuracy: 0.0
Validation BLEU: 0.0
Model saved checkpoint_commit_msg_generator!
Epoch 41 / 1000
Epoch Step: 5 / 82 Loss (mean): 32.002091728150845 Loss (std): 14.056171959100874 Loss ratio: 0.4392266630101642 Tokens per Sec: 2698.643376932082
Epoch Step: 10 / 82 Loss (mean): 33.84860351681709 Loss (std): 12.889188202053889 Loss ratio: 0.38078936389946244 Tokens per Sec: 4206.495791464158
Epoch Step: 15 / 82 Loss (mean): 32.69302016496658 Loss (std): 8.834207210387568 Loss ratio: 0.27021691987497043 Tokens per Sec: 3559.1563681246625
Epoch Step: 20 / 82 Loss (mean): 29.6458907276392 Loss (std): 14.487552306090095 Loss ratio: 0.4886866931808254 Tokens per Sec: 3165.4627461256346
Epoch Step: 25 / 82 Loss (mean): 28.937599644064903 Loss (std): 13.708406868186136 Loss ratio: 0.4737230121641319 Tokens per Sec: 2886.2507186769853
Epoch Step: 30 / 82 Loss (mean): 28.127649411559105 Loss (std): 11.778109857233966 Loss ratio: 0.4187377937238414 Tokens per Sec: 3107.303312764434
Epoch Step: 35 / 82 Loss (mean): 41.80079638957977 Loss (std): 20.961434081146646 Loss ratio: 0.5014601608492792 Tokens per Sec: 2903.085270864407
Epoch Step: 40 / 82 Loss (mean): 29.400486640632153 Loss (std): 12.812384663446581 Loss ratio: 0.4357881833744741 Tokens per Sec: 3296.839655797174
Epoch Step: 45 / 82 Loss (mean): 32.36440974473953 Loss (std): 13.418148923059105 Loss ratio: 0.41459581771733295 Tokens per Sec: 3337.8765899793484
Epoch Step: 50 / 82 Loss (mean): 31.095012485980988 Loss (std): 14.443041688129163 Loss ratio: 0.4644809740674884 Tokens per Sec: 3269.416366676719
Epoch Step: 55 / 82 Loss (mean): 31.30258409678936 Loss (std): 11.239711393049841 Loss ratio: 0.35906656646288426 Tokens per Sec: 2952.8225104088024
Epoch Step: 60 / 82 Loss (mean): 30.914540633559227 Loss (std): 13.440912392389523 Loss ratio: 0.43477639055709477 Tokens per Sec: 3303.3396971112147
Epoch Step: 65 / 82 Loss (mean): 33.40509997308254 Loss (std): 12.559939474738092 Loss ratio: 0.37598868091575094 Tokens per Sec: 3387.3865028283954
Epoch Step: 70 / 82 Loss (mean): 34.79642988741398 Loss (std): 10.307492010063998 Loss ratio: 0.29622268846012456 Tokens per Sec: 2975.7211285848043
Epoch Step: 75 / 82 Loss (mean): 39.137111984193325 Loss (std): 21.59515243057947 Loss ratio: 0.5517819618192908 Tokens per Sec: 3027.3356814043127
Epoch Step: 80 / 82 Loss (mean): 31.302915550768375 Loss (std): 12.97702113433909 Loss ratio: 0.41456269826663317 Tokens per Sec: 3553.3534715685555
Mean loss per sample: 33.577482217222176 Std loss per sample: 14.94067158194351 ratio: 0.4449610451816519
Epoch ended with duration 0:00:12.133305
Train perplexity: 93.68486100565448
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix the to of[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test to the same the same[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in[0m
Epoch Step: 5 / 11 Loss (mean): 50.702690690755844 Loss (std): 20.02858930970332 Loss ratio: 0.39502024521461837 Tokens per Sec: 5680.669027968743
Epoch Step: 10 / 11 Loss (mean): 50.4437377974391 Loss (std): 23.154167925667156 Loss ratio: 0.45900975892477647 Tokens per Sec: 3192.6454753522266
Mean loss per sample: 47.56458978259236 Std loss per sample: 22.15451330511132 ratio: 0.46577744928264697
Epoch ended with duration 0:00:01.209705
b'BLEU = 0.00, 12.6/1.7/0.5/0.0 (BP=0.519, ratio=0.604, hyp_len=2510, ref_len=4156)\n'
Validation perplexity: 643.6802009146786
Validation accuracy: 0.0
Validation BLEU: 0.0
Epoch 42 / 1000
Epoch Step: 5 / 82 Loss (mean): 29.29136860370636 Loss (std): 12.23041212535617 Loss ratio: 0.4175432118186722 Tokens per Sec: 2847.2347028782488
Epoch Step: 10 / 82 Loss (mean): 44.34264427423477 Loss (std): 17.615847080693346 Loss ratio: 0.39726649975470696 Tokens per Sec: 3410.8247237706337
Epoch Step: 15 / 82 Loss (mean): 37.8037493377924 Loss (std): 16.270805619478242 Loss ratio: 0.43040190204658674 Tokens per Sec: 3463.7763644732477
Epoch Step: 20 / 82 Loss (mean): 24.710780277848244 Loss (std): 7.879180856489771 Loss ratio: 0.3188560121491992 Tokens per Sec: 4349.033421282207
Epoch Step: 25 / 82 Loss (mean): 33.560014486312866 Loss (std): 13.43437159620342 Loss ratio: 0.4003088735757996 Tokens per Sec: 3017.8768613313273
Epoch Step: 30 / 82 Loss (mean): 29.969577811658382 Loss (std): 15.576697133336554 Loss ratio: 0.5197503024976583 Tokens per Sec: 3021.2271932098065
Epoch Step: 35 / 82 Loss (mean): 30.849556744098663 Loss (std): 12.755130517345389 Loss ratio: 0.41346235938334414 Tokens per Sec: 3172.853890162554
Epoch Step: 40 / 82 Loss (mean): 47.2744001224637 Loss (std): 19.577663992265283 Loss ratio: 0.41412823730284476 Tokens per Sec: 3069.3620644472244
Epoch Step: 45 / 82 Loss (mean): 34.22135189175606 Loss (std): 14.703055498705568 Loss ratio: 0.42964566523298403 Tokens per Sec: 4091.7982108920214
Epoch Step: 50 / 82 Loss (mean): 22.108111798763275 Loss (std): 15.507279865201092 Loss ratio: 0.7014294122607326 Tokens per Sec: 2397.6397279703424
Epoch Step: 55 / 82 Loss (mean): 29.089566364884377 Loss (std): 14.455893111064903 Loss ratio: 0.4969442627551647 Tokens per Sec: 2929.3927217801065
Epoch Step: 60 / 82 Loss (mean): 34.487597927451134 Loss (std): 11.349192861320264 Loss ratio: 0.3290804098677639 Tokens per Sec: 3064.980962920538
Epoch Step: 65 / 82 Loss (mean): 32.01679411530495 Loss (std): 13.36096495080982 Loss ratio: 0.4173111431048274 Tokens per Sec: 3882.9083046253645
Epoch Step: 70 / 82 Loss (mean): 30.998104482889175 Loss (std): 13.838270182720935 Loss ratio: 0.44642310920526135 Tokens per Sec: 2937.917590907
Epoch Step: 75 / 82 Loss (mean): 28.27236580848694 Loss (std): 11.620397532810548 Loss ratio: 0.41101610001531175 Tokens per Sec: 3130.1883161993724
Epoch Step: 80 / 82 Loss (mean): 33.12582879513502 Loss (std): 15.139878723562646 Loss ratio: 0.4570415073142606 Tokens per Sec: 3533.8316204252437
Mean loss per sample: 33.11384795091203 Std loss per sample: 15.025530755299476 ratio: 0.4537536917356546
Epoch ended with duration 0:00:12.109680
Train perplexity: 87.99232991198609
Example #1[0m
Src : protected boolean METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { if ( ( key ) == null ) { throw new TYPE_1 ( STRING_1 ) ; } try { int result = TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 , 0 , VAR_1 . length , key . METHOD_3 ( ) ) ; return result == 1 ; } catch ( java.lang.Exception VAR_3 ) { return false ; } finally { METHOD_4 ( ) ; } }[0m
Trg : return of 0 is error for <unk>[0m
Pred: fix broken[0m
Example #2[0m
Src : public static void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) ; }[0m
Trg : upgrade <unk> test to support api <unk> and <unk>[0m
Pred: add a test for method_1[0m
Example #3[0m
Src : public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 VAR_2 : VAR_3 ) { if ( ( VAR_2 . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 ( VAR_4 , java.lang.String.format ( STRING_1 , VAR_2 . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_5 ; }[0m
Trg : display correct status on error message[0m
Pred: fix npe in[0m
Epoch Step: 5 / 11 Loss (mean): 50.55337801575661 Loss (std): 20.115561715055343 Loss ratio: 0.39790737047850044 Tokens per Sec: 5703.9394104581115
Epoch Step: 10 / 11 Loss (mean): 50.41730557382107 Loss (std): 23.25769115491261 Loss ratio: 0.46130373073703185 Tokens per Sec: 3184.8811492215846
Mean loss per sample: 47.57281529866957 Std loss per sample: 22.341743342543502 ratio: 0.4696325664621391
Epoch ended with duration 0:00:01.209374
b'BLEU = 0.00, 12.5/1.8/0.4/0.0 (BP=0.434, ratio=0.545, hyp_len=2266, ref_len=4156)\n'
Validation perplexity: 644.4004933564906
Validation accuracy: 0.0
Validation BLEU: 0.0
Training was early stopped on epoch 43 with early stopping rounds 25
{'train_ppl': [2588.690202908994, 612.7565284051816, 510.4992124210843, 466.7942196728744, 441.6637466928671, 421.9628346155697, 399.23795223739984, 388.8304210658167, 369.26480854833164, 358.6485539371659, 342.82837927361857, 331.9829874515119, 312.30216255453996, 301.4458426631694, 291.9793131954029, 280.111239086347, 270.9320645676295, 248.93386372950218, 246.11261774536658, 235.74415954956075, 219.0154044843836, 218.10412600050276, 217.3364896430622, 202.13731075995227, 191.21662811895487, 173.25948141969477, 166.26971131613774, 172.2664714573754, 155.9801738943835, 145.016256121693, 141.124362423979, 134.55410906694277, 124.6504313944692, 126.61456396453171, 111.3708075549794, 117.42880519658144, 108.08686082658384, 100.10824426190707, 96.18615659846655, 95.43940364045824, 96.96793503510969, 93.68486100565448, 87.99232991198609], 'val_ppl': [723.556640198871, 595.9149285064087, 581.6032545351195, 573.089016928927, 570.1036442909281, 567.8709516927998, 556.4587793080013, 552.7041098386111, 553.0099348262397, 551.6302300234, 562.0685266457205, 586.3979469758864, 532.7832763248034, 535.759978770907, 548.3738083804578, 542.0793295714972, 559.8346899477622, 511.4656223558396, 515.5592481211731, 579.3331960840081, 543.6320098606404, 528.7338076332101, 582.8554017679807, 534.916198687564, 536.0473667124506, 571.7319740845462, 514.2761246194776, 521.2770038523823, 530.0677399133119, 516.0001216898305, 578.0641350507472, 631.7257899459524, 606.1093387324975, 583.1163436984017, 556.4044224121672, 543.6384596708373, 591.1600367426323, 608.4432235754853, 573.386762808156, 621.5182742676174, 652.7558452190914, 643.6802009146786, 644.4004933564906], 'val_bleu': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'val_acc': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
Model saved checkpoint_commit_msg_generator!

====STARTING NEURAL EDITOR EVALUATION====
Data set sizes (number of sentence pairs):
train 99044
valid 12381
test 12380 

Max sequence length in tokens: 100 

First training example:
src: public static TYPE_1 init ( java.lang.String name , java.util.Date date ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( name ) ; java.util.Calendar VAR_2 = java.util.Calendar.getInstance ( ) ; VAR_2 . METHOD_2 ( date ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; return VAR_1 ; }
trg: public static TYPE_1 init ( java.lang.String name , java.util.Date date ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( name ) ; java.util.Calendar VAR_2 = null ; if ( date != null ) { VAR_2 = java.util.Calendar.getInstance ( ) ; VAR_2 . METHOD_2 ( date ) ; } VAR_1 . METHOD_3 ( VAR_2 ) ; return VAR_1 ; }
diff_alignment: добавление добавление добавление добавление добавление добавление добавление добавление добавление добавление добавление добавление
diff_prev: паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг паддинг
diff_updated: null ; if ( date != null ) { VAR_2 = } 

Most common words:
         (    1592292
         )    1592062
         ;     773246
   паддинг     706282
         .     678320
     VAR_1     463158
  удаление     456918
         }     395262
         {     395110
         ,     341270 

First 10 words:
00 <unk>
01 <pad>
02 <s>
03 </s>
04 (
05 )
06 ;
07 паддинг
08 .
09 VAR_1 

Special words frequency and ids: 
<unk> 0 0
<pad> 0 1
<s> 0 2
</s> 0 3
замена 92007 30
удаление 456918 10
добавление 249364 16
равенство 0 0
паддинг 706282 7
Number of words (types): 498
Neural editor will not be tested because edit representations are not used.

====STARTING COMMIT MSG GENERATOR EVALUATION====

====BEAM SEARCH====

Data set sizes (number of sentence pairs):
train 5232
valid 654
test 654 

Max src sequence length in tokens: 100
Max trg sequence length in tokens: 15
Max diff sequence length in tokens: 86 

First training example:
src: public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object VAR_2 , TYPE_2 args ) { TYPE_3 VAR_3 = VAR_4 . METHOD_2 ( ) ; TYPE_4 . METHOD_3 ( ) . METHOD_4 ( VAR_5 , new TYPE_5 ( VAR_3 . getId ( ) ) , new TYPE_6 ( this , METHOD_5 ( VAR_3 ) ) ) ; }
trg: v2v- '' external provider '' refreshed by dc
diff_alignment: добавление добавление добавление добавление
diff_prev: паддинг паддинг паддинг паддинг
diff_updated: METHOD_6 ( ) ;
Most common words in src vocabulary:
         (      37682
         )      37421
         .      16572
         ;      16017
     VAR_1      10170
         {       8995
         }       8861
         ,       8033
     VAR_2       6226
    TYPE_1       6199 


Most common words in trg vocabulary:
       fix        948
        to        907
        in        819
       for        670
       add        482
        of        474
       the        456
      when        331
        on        324
         (        300 


Most common words in diff vocabulary:
         (    1592292
         )    1592062
         ;     773246
   паддинг     706282
         .     678320
     VAR_1     463158
  удаление     456918
         }     395262
         {     395110
         ,     341270 

First 10 words in src vocabulary:
00 <unk>
01 <pad>
02 <s>
03 </s>
04 (
05 )
06 .
07 ;
08 VAR_1
09 { 


First 10 words in trg vocabulary:
00 <unk>
01 <pad>
02 <s>
03 </s>
04 fix
05 to
06 in
07 for
08 add
09 of 


First 10 words in diff vocabulary:
00 <unk>
01 <pad>
02 <s>
03 </s>
04 (
05 )
06 ;
07 паддинг
08 .
09 VAR_1 

Special words frequency and ids in src vocabulary: 
<unk> 0 0
<pad> 0 1
<s> 0 2
</s> 0 3
Special words frequency and ids in trg vocabulary: 
<unk> 0 0
<pad> 0 1
<s> 0 2
</s> 0 3
Special words frequency and ids in diffs_field vocabulary: 
<unk> 0 0
<pad> 0 1
<s> 0 2
</s> 0 3
замена 92007 30
удаление 456918 10
добавление 249364 16
равенство 0 0
паддинг 706282 7
Number of words (types) in src vocabulary: 434
Number of words (types) in trg vocabulary: 6234
Number of words (types) in diff vocabulary: 498
Start conducting accuracy calculation experiment for Test dataset...
Top-1 accuracy: 0 / 654 = 0.0
Top-3 accuracy: 0 / 654 = 0.0
Top-5 accuracy: 0 / 654 = 0.0
Top-10 accuracy: 0 / 654 = 0.0
Top-50 accuracy: 0 / 654 = 0.0
Duration: 0:01:22.898525

Start conducting BLEU calculation experiment for Test dataset...
b'BLEU = 0.00, 13.3/3.3/0.0/0.0 (BP=0.111, ratio=0.313, hyp_len=1321, ref_len=4226)\n'
Errors: b'perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_TIME = "ru_RU.UTF-8",\n\tLC_MONETARY = "ru_RU.UTF-8",\n\tLC_ADDRESS = "ru_RU.UTF-8",\n\tLC_TELEPHONE = "ru_RU.UTF-8",\n\tLC_NAME = "ru_RU.UTF-8",\n\tLC_MEASUREMENT = "ru_RU.UTF-8",\n\tLC_IDENTIFICATION = "ru_RU.UTF-8",\n\tLC_NUMERIC = "ru_RU.UTF-8",\n\tLC_PAPER = "ru_RU.UTF-8",\n\tLC_CTYPE = "C.UTF-8",\n\tLANG = "en_US.UTF-8"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale ("C").\nUse of uninitialized value in division (/) at /mnt/embeddings-for-code-diffs/neural_editor/seq2seq/experiments/multi-bleu.perl line 127, <STDIN> line 654.\n'
Duration: 0:00:00.073045

Start conducting accuracy calculation experiment for Validation dataset...
Top-1 accuracy: 1 / 654 = 0.0015290519877675841
Top-3 accuracy: 1 / 654 = 0.0015290519877675841
Top-5 accuracy: 1 / 654 = 0.0015290519877675841
Top-10 accuracy: 2 / 654 = 0.0030581039755351682
Top-50 accuracy: 2 / 654 = 0.0030581039755351682
Duration: 0:01:20.953377

Start conducting BLEU calculation experiment for Validation dataset...
b'BLEU = 0.00, 13.5/3.2/0.0/0.0 (BP=0.116, ratio=0.317, hyp_len=1316, ref_len=4156)\n'
Errors: b'perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_TIME = "ru_RU.UTF-8",\n\tLC_MONETARY = "ru_RU.UTF-8",\n\tLC_ADDRESS = "ru_RU.UTF-8",\n\tLC_TELEPHONE = "ru_RU.UTF-8",\n\tLC_NAME = "ru_RU.UTF-8",\n\tLC_MEASUREMENT = "ru_RU.UTF-8",\n\tLC_IDENTIFICATION = "ru_RU.UTF-8",\n\tLC_NUMERIC = "ru_RU.UTF-8",\n\tLC_PAPER = "ru_RU.UTF-8",\n\tLC_CTYPE = "C.UTF-8",\n\tLANG = "en_US.UTF-8"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale ("C").\nUse of uninitialized value in division (/) at /mnt/embeddings-for-code-diffs/neural_editor/seq2seq/experiments/multi-bleu.perl line 127, <STDIN> line 654.\n'
Duration: 0:00:00.073084

Start conducting accuracy calculation experiment for Train dataset (test size approximation)...
Top-1 accuracy: 1 / 654 = 0.0015290519877675841
Top-3 accuracy: 2 / 654 = 0.0030581039755351682
Top-5 accuracy: 2 / 654 = 0.0030581039755351682
Top-10 accuracy: 3 / 654 = 0.0045871559633027525
Top-50 accuracy: 4 / 654 = 0.0061162079510703364
Duration: 0:01:20.854662

Start conducting BLEU calculation experiment for Train dataset (test size approximation)...
b'BLEU = 0.00, 13.6/2.7/0.0/0.0 (BP=0.112, ratio=0.313, hyp_len=1317, ref_len=4201)\n'
Errors: b'perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_TIME = "ru_RU.UTF-8",\n\tLC_MONETARY = "ru_RU.UTF-8",\n\tLC_ADDRESS = "ru_RU.UTF-8",\n\tLC_TELEPHONE = "ru_RU.UTF-8",\n\tLC_NAME = "ru_RU.UTF-8",\n\tLC_MEASUREMENT = "ru_RU.UTF-8",\n\tLC_IDENTIFICATION = "ru_RU.UTF-8",\n\tLC_NUMERIC = "ru_RU.UTF-8",\n\tLC_PAPER = "ru_RU.UTF-8",\n\tLC_CTYPE = "C.UTF-8",\n\tLANG = "en_US.UTF-8"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale ("C").\nUse of uninitialized value in division (/) at /mnt/embeddings-for-code-diffs/neural_editor/seq2seq/experiments/multi-bleu.perl line 127, <STDIN> line 654.\n'
Duration: 0:00:00.073194


====GREEDY====

Data set sizes (number of sentence pairs):
train 5232
valid 654
test 654 

Max src sequence length in tokens: 100
Max trg sequence length in tokens: 15
Max diff sequence length in tokens: 86 

First training example:
src: public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object VAR_2 , TYPE_2 args ) { TYPE_3 VAR_3 = VAR_4 . METHOD_2 ( ) ; TYPE_4 . METHOD_3 ( ) . METHOD_4 ( VAR_5 , new TYPE_5 ( VAR_3 . getId ( ) ) , new TYPE_6 ( this , METHOD_5 ( VAR_3 ) ) ) ; }
trg: v2v- '' external provider '' refreshed by dc
diff_alignment: добавление добавление добавление добавление
diff_prev: паддинг паддинг паддинг паддинг
diff_updated: METHOD_6 ( ) ;
Most common words in src vocabulary:
         (      37682
         )      37421
         .      16572
         ;      16017
     VAR_1      10170
         {       8995
         }       8861
         ,       8033
     VAR_2       6226
    TYPE_1       6199 


Most common words in trg vocabulary:
       fix        948
        to        907
        in        819
       for        670
       add        482
        of        474
       the        456
      when        331
        on        324
         (        300 


Most common words in diff vocabulary:
         (    1592292
         )    1592062
         ;     773246
   паддинг     706282
         .     678320
     VAR_1     463158
  удаление     456918
         }     395262
         {     395110
         ,     341270 

First 10 words in src vocabulary:
00 <unk>
01 <pad>
02 <s>
03 </s>
04 (
05 )
06 .
07 ;
08 VAR_1
09 { 


First 10 words in trg vocabulary:
00 <unk>
01 <pad>
02 <s>
03 </s>
04 fix
05 to
06 in
07 for
08 add
09 of 


First 10 words in diff vocabulary:
00 <unk>
01 <pad>
02 <s>
03 </s>
04 (
05 )
06 ;
07 паддинг
08 .
09 VAR_1 

Special words frequency and ids in src vocabulary: 
<unk> 0 0
<pad> 0 1
<s> 0 2
</s> 0 3
Special words frequency and ids in trg vocabulary: 
<unk> 0 0
<pad> 0 1
<s> 0 2
</s> 0 3
Special words frequency and ids in diffs_field vocabulary: 
<unk> 0 0
<pad> 0 1
<s> 0 2
</s> 0 3
замена 92007 30
удаление 456918 10
добавление 249364 16
равенство 0 0
паддинг 706282 7
Number of words (types) in src vocabulary: 434
Number of words (types) in trg vocabulary: 6234
Number of words (types) in diff vocabulary: 498
Start conducting accuracy calculation experiment for Test dataset...
Top-1 accuracy: 0 / 654 = 0.0
Duration: 0:00:01.853349

Start conducting BLEU calculation experiment for Test dataset...
b'BLEU = 0.00, 11.6/1.5/0.5/0.0 (BP=0.512, ratio=0.599, hyp_len=2532, ref_len=4226)\n'
Errors: b'perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_TIME = "ru_RU.UTF-8",\n\tLC_MONETARY = "ru_RU.UTF-8",\n\tLC_ADDRESS = "ru_RU.UTF-8",\n\tLC_TELEPHONE = "ru_RU.UTF-8",\n\tLC_NAME = "ru_RU.UTF-8",\n\tLC_MEASUREMENT = "ru_RU.UTF-8",\n\tLC_IDENTIFICATION = "ru_RU.UTF-8",\n\tLC_NUMERIC = "ru_RU.UTF-8",\n\tLC_PAPER = "ru_RU.UTF-8",\n\tLC_CTYPE = "C.UTF-8",\n\tLANG = "en_US.UTF-8"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale ("C").\nUse of uninitialized value in division (/) at /mnt/embeddings-for-code-diffs/neural_editor/seq2seq/experiments/multi-bleu.perl line 127, <STDIN> line 654.\n'
Duration: 0:00:00.077177

Start conducting accuracy calculation experiment for Validation dataset...
Top-1 accuracy: 0 / 654 = 0.0
Duration: 0:00:01.888773

Start conducting BLEU calculation experiment for Validation dataset...
b'BLEU = 0.00, 11.8/1.2/0.3/0.0 (BP=0.524, ratio=0.607, hyp_len=2524, ref_len=4156)\n'
Errors: b'perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_TIME = "ru_RU.UTF-8",\n\tLC_MONETARY = "ru_RU.UTF-8",\n\tLC_ADDRESS = "ru_RU.UTF-8",\n\tLC_TELEPHONE = "ru_RU.UTF-8",\n\tLC_NAME = "ru_RU.UTF-8",\n\tLC_MEASUREMENT = "ru_RU.UTF-8",\n\tLC_IDENTIFICATION = "ru_RU.UTF-8",\n\tLC_NUMERIC = "ru_RU.UTF-8",\n\tLC_PAPER = "ru_RU.UTF-8",\n\tLC_CTYPE = "C.UTF-8",\n\tLANG = "en_US.UTF-8"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale ("C").\nUse of uninitialized value in division (/) at /mnt/embeddings-for-code-diffs/neural_editor/seq2seq/experiments/multi-bleu.perl line 127, <STDIN> line 654.\n'
Duration: 0:00:00.075887

Start conducting accuracy calculation experiment for Train dataset (test size approximation)...
Top-1 accuracy: 0 / 654 = 0.0
Duration: 0:00:01.881201

Start conducting BLEU calculation experiment for Train dataset (test size approximation)...
b'BLEU = 0.60, 11.7/1.3/0.7/0.2 (BP=0.514, ratio=0.601, hyp_len=2523, ref_len=4201)\n'
Errors: b'perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n\tLANGUAGE = (unset),\n\tLC_ALL = (unset),\n\tLC_TIME = "ru_RU.UTF-8",\n\tLC_MONETARY = "ru_RU.UTF-8",\n\tLC_ADDRESS = "ru_RU.UTF-8",\n\tLC_TELEPHONE = "ru_RU.UTF-8",\n\tLC_NAME = "ru_RU.UTF-8",\n\tLC_MEASUREMENT = "ru_RU.UTF-8",\n\tLC_IDENTIFICATION = "ru_RU.UTF-8",\n\tLC_NUMERIC = "ru_RU.UTF-8",\n\tLC_PAPER = "ru_RU.UTF-8",\n\tLC_CTYPE = "C.UTF-8",\n\tLANG = "en_US.UTF-8"\n    are supported and installed on your system.\nperl: warning: Falling back to the standard locale ("C").\n'
Duration: 0:00:00.076392

